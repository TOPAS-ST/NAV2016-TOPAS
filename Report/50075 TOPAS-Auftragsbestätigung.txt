OBJECT Report 50075 TOPAS-Auftragsbest„tigung
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=09:35:59;
    Modified=Yes;
    Version List=Beleg Žnderungsbest„tigung --> 50098 !!,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    ShowPrintStatus=No;
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   AnzKopien := 1;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  AnzKopien_sich := AnzKopien;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order),
                                       Location Code=FILTER(ZENT|KONSI));
               PrintOnlyIfDetail=Yes;
               ReqFilterHeadingML=DEU=Verkaufsauftrag;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  //25.04.12 ST
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF NOT kunde.GET("Sales Header"."Sell-to Customer No.") THEN CurrReport.BREAK;
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  adv_andruck_notwendig := FALSE;
                                  IF ("Sales Header"."AB via EMail") OR (kunde."Best„tigung via Internet") THEN
                                    AnzKopien := 0 ELSE AnzKopien := AnzKopien_sich;
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    CLEAR(VerkEinkPerson);
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  //IF verkaufskopf.W„hrungscode = '' THEN BEGIN
                                  //  FIBUEinrichtung.TESTFIELD(Mandantenw„hrungscode);
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung.Mandantenw„hrungscode);
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung.Mandantenw„hrungscode);
                                  //END ELSE BEGIN
                                  //  TotalText := STRSUBSTNO('Total %1',W„hrungscode);
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',W„hrungscode);
                                  //END;
                                  FormatAdr.SalesHeaderBillTo(DebAdr,"Sales Header");
                                  FormatAdr.SalesHeaderSellTo(VerkAdr,"Sales Header");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF (LieferAnAdr[i] <> VerkAdr[i]) OR (DebAdr[i] <> VerkAdr[i]) THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + '°' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  v_FER_SPL := FALSE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,Order Date;
               CalcFields=AB via EMail }

    { 2   ;1   ;DataItem;Debitor             ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  rahmenauftragsnummer := '';
                                  rahmen := FALSE;
                                  IF Steuernummer = '' THEN
                                    var_steuernr1 := ''
                                  ELSE
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      var_steuernr1 := 'Ihre Steuernummer:'
                                    ELSE
                                      var_steuernr1 := '';

                                  IF "Sales Header"."VAT Registration No." = '' THEN
                                     var_steuernr2 := ''
                                  ELSE
                                  IF CurrReport.LANGUAGE = 1031 THEN
                                    var_steuernr2 := 'USt-IdNr.'
                                  ELSE
                                    var_steuernr2 := 'Tax Number';

                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF "Sales Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := 'Total';
                                      TotalInklMWStText := 'Total inkl. MWSt';
                                      //TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      //TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := 'Total';
                                      TotalInklMWStText := 'Total inkl. MWSt';
                                      //TotalText := STRSUBSTNO('Total %1',"Sales Header"."Currency Code");
                                      //TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Sales Header"."Currency Code");
                                    END;
                                  END ELSE BEGIN
                                    IF "Sales Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText :='Total';
                                      TotalInklMWStText :='Total incl. V.A.T.';
                                      //TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      //TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText :='Total';
                                      TotalInklMWStText :='Total incl. V.A.T.';
                                      //TotalText := STRSUBSTNO('Total %1',"Sales Header"."Currency Code");
                                      //TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',"Sales Header"."Currency Code");
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Header;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 4   ;2   ;DataItem;                    ;
               DataItemTable=Table291;
               DataItemLinkReference=Sales Header;
               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 5   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               sum_restauftragsbestand := 0;
                               sum_mwstbetrag := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  sum_restauftragsbestand := 0;
                                  sum_mwstbetrag := 0;
                                  CLEAR(VerkZeile2);
                                  CLEAR(VerkBuchen);
                                  CLEAR(andruck);
                                  VerkBuchen.GetSalesLines("Sales Header",VerkZeile2,0);
                                  IF Number > 1 THEN
                                    ReportForNav.PrinterSettings.PaperSource(1)
                                  ELSE
                                    ReportForNav.PrinterSettings.PaperSource(3);
                                  "Printer selection".RESET;
                                  "Printer selection".SETFILTER("User ID",'%1',USERID);
                                  "Printer selection".SETFILTER("Report ID",'%1',50075);
                                  IF "Printer selection".FINDFIRST() THEN BEGIN
                                    IF ("Printer selection"."Printer Name" <> 'PDFCreator') AND ("Printer selection"."Printer Name" <> 'Bullzip PDF Printer')
                                    AND ("Sales Header"."AB via EMail" = TRUE) THEN
                                      pdf := TRUE
                                    ELSE
                                      pdf := FALSE;
                                  END ELSE BEGIN
                                    pdf := FALSE;
                                  END;

                                  n„chste_lief_jahr := '';
                                  n„chste_lief_woche := '';
                                  counter := 0;
                                  //kunde.GET("Sales Header"."Sell-to Customer No.");
                                  IF ((Number > 1) AND (pdf = FALSE)) OR (pdf = TRUE) OR (kunde."Best„tigung via Internet" = TRUE) THEN BEGIN
                                    ReportForNav.PrinterSettings.PaperSource(1);
                                    KopieText := 'skopie';
                                    IF kunde."AB vor Wandlung" THEN andruck[AndruckFeldPrfen] := 'Achtung erst AB dann Wandeln !!!';
                                    IF kunde."AB via EMail" THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'Achtung via E-Mail versenden !!!';
                                      andruck[AndruckFeldPrfen] := "Sales Header"."AB EMail-Adresse";
                                      andruck[AndruckFeldPrfen] := 'Erledigt von ..............'  ;
                                    END;
                                    IF kunde."AB via Fax" THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'Achtung via Fax versenden !!!';
                                      andruck[AndruckFeldPrfen] := 'Erledigt von ..............'  ;
                                    END;
                                    IF kunde."AB nur best„tigt" THEN
                                      andruck[AndruckFeldPrfen] := 'Keine AB ohne Termin !!!';
                                    IF kunde."Best„tigung via Internet" THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'Best. per Internet (Vertrieb)!';
                                      andruck[AndruckFeldPrfen] := 'Termin eingehend beim Kunden';
                                      andruck[AndruckFeldPrfen] := 'Erledigt von ..............'  ;
                                    END;
                                    IF kunde."abw. Rechnungsadresse" THEN
                                      andruck[AndruckFeldPrfen] := 'abw. Rechnungsadresse berprfen !!!';
                                    IF kunde."AB nur bei Abweichungen" = TRUE THEN
                                      andruck[AndruckFeldPrfen] := 'AB nur bei Abweichungen !!!';
                                    IF "Sales Header"."Location Code"='KONSI' THEN
                                      andruck[AndruckFeldPrfen] := 'Konsignationslager';
                                    IF "Sales Header"."Nicht rechnen" = TRUE THEN
                                      andruck[AndruckFeldPrfen] := 'Nicht rechnen, ist fix !!!';
                                    IF "Sales Header".W„hrungsabgleich = TRUE THEN
                                      andruck[AndruckFeldPrfen] := 'WŽ berprfen, +/- 3% !';
                                    IF "Sales Header"."Shipping Agent Code" = 'UPS-RG5' THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'UPS Paperless Invoice erforderlich !';
                                      andruck[AndruckFeldPrfen] := 'Keine Papierrechnung zum Paket !';
                                    END;

                                    IF STRPOS("Sales Header"."Payment Terms Code",'SOR') <> 0 THEN
                                      andruck[9] := 'SOR';
                                  //  TOPAS neu UB 14.06.2010  KW fr Ablage bestimmen
                                    n„chste_lief_tab.RESET;
                                    n„chste_lief_tab.SETFILTER("Document No.",'%1',"Sales Header"."No.");
                                    n„chste_lief_tab.SETFILTER(Type,'%1',n„chste_lief_tab.Type::Item);
                                    n„chste_lief_tab.SETFILTER("Outstanding Quantity",'>%1',0);
                                    n„chste_lief_tab.SETCURRENTKEY("Document Type",Type,"Promised Delivery Date");
                                    n„chste_lief_jahr := '';
                                    n„chste_lief_woche := '';
                                    IF (n„chste_lief_tab.FINDFIRST) AND (n„chste_lief_tab."Promised Delivery Date" <> 0D) THEN BEGIN
                                      n„chste_lief_woche := 'KW '+ FORMAT(DATE2DWY(n„chste_lief_tab."Promised Delivery Date", 2));
                                      n„chste_lief_jahr := FORMAT(DATE2DWY(n„chste_lief_tab."Promised Delivery Date", 3));
                                      IF n„chste_lief_tab."Promised Delivery Date" = (31122053D) THEN BEGIN
                                        n„chste_lief_jahr := '';
                                        n„chste_lief_woche := 'Auf Abruf';
                                      END;
                                      IF n„chste_lief_tab.FINDLAST THEN BEGIN
                                        IF n„chste_lief_tab."Promised Delivery Date" = (31122055D) THEN BEGIN
                                          n„chste_lief_jahr := '';
                                          n„chste_lief_woche := 'Termin folgt';
                                        END;
                                      END;
                                    END;
                                  END;

                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF (Number > 1) OR (pdf = TRUE) OR (kunde."Best„tigung via Internet" = TRUE) THEN KopieText := 'skopie';
                                    ReportForNav.PageNo := 1;
                                    IF "Sales Header"."Document Date" > "Sales Header"."Order Date" THEN
                                      „nderung := 'Žnderungs-'
                                    ELSE
                                      „nderung := '';
                                  END ELSE BEGIN
                                    IF (Number > 1) OR (pdf = TRUE) OR (kunde."Best„tigung via Internet" = TRUE) THEN KopieText := ' Copy';
                                    ReportForNav.PageNo := 1;
                                    IF "Sales Header"."Document Date" > "Sales Header"."Order Date" THEN
                                      „nderung := 'Change'
                                    ELSE
                                      „nderung := '';
                                  END;

                                  IF (("Sales Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Header"."Shipment Method Code" = 'ACC-ENG')
                                  OR ("Sales Header"."Shipment Method Code" = 'EXW_1')) THEN
                                    Account := "Shipping Agent".Name + ' / '+ "Sales Header".Spediteuraccount
                                  ELSE
                                    Account := "Shipping Agent".Name;
                                  IF ((Number > 1) AND ("Sales Header"."Keine AB an Kunden")) OR ((pdf = TRUE) AND ("Sales Header"."Keine AB an Kunden")) THEN
                                    andruck[AndruckFeldPrfen] := 'Keine AB an Kunden!!!';

                                  //03.07.2018 ST - Andruck des Hinweises, dass noch keine ADV vorliegt, diese aber fr CHAMPS erforderlich ist
                                  SalesLine.RESET;
                                  SalesLine.SETRANGE("Document No.","Sales Header"."No.");
                                  SalesLine.SETRANGE(Type,SalesLine.Type::Item);
                                  IF SalesLine.FINDFIRST THEN BEGIN
                                    REPEAT
                                      IF (Artikel.GET(SalesLine."No.") AND (Artikel."Software Upgrade Protection")) THEN
                                        TroubleshootingSetup.SETRANGE(Type,TroubleshootingSetup.Type::Item);
                                        TroubleshootingSetup.SETRANGE("No.",Artikel."No.");
                                        TroubleshootingSetup.SETRANGE("Troubleshooting No.",'CHAMPS');
                                        IF TroubleshootingSetup.FINDFIRST THEN
                                          IF (Debitor.ADV = FALSE) AND (Debitor."Territory Code" = 'SYSTEM') THEN BEGIN
                                            adv_andruck_notwendig := TRUE;
                                            IF (Number > 1) OR (pdf = TRUE) THEN
                                              andruck[AndruckFeldPrfen] := 'AV mitschicken!';
                                          END;
                                    UNTIL (SalesLine.NEXT = 0) OR (adv_andruck_notwendig);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkDruckZ„hler.RUN("Sales Header");
                                // TOPAS Rahmenauftrag
                                {
                                IF rahmen THEN BEGIN
                                  rahmenauftr„ge.SETFILTER("No.",rahmenauftragsnummer);
                                  MESSAGE('Rahmenauftrag mit der Nr.:'+rahmenauftragsnummer+' manuell drucken!') ;
                                  //REPORT.RUN(50114,FALSE,FALSE,rahmenauftr„ge);
                                END;
                                }
                                // ende
                              END;
                               }

    { 6   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000003;3;Column;Picture_Firmendaten;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 7   ;3   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 9   ;3   ;Column  ;nachste_lief_jahr   ;
               IncludeCaption=No;
               SourceExpr=n„chste_lief_jahr }

    { 10  ;3   ;Column  ;nachste_lief_woche  ;
               IncludeCaption=No;
               SourceExpr=n„chste_lief_woche }

    { 8   ;3   ;Column  ;andruck9            ;
               IncludeCaption=No;
               SourceExpr=andruck[9] }

    { 18  ;3   ;Column  ;andruck7            ;
               IncludeCaption=No;
               SourceExpr=andruck[7] }

    { 21  ;3   ;Column  ;andruck6            ;
               IncludeCaption=No;
               SourceExpr=andruck[6] }

    { 22  ;3   ;Column  ;andruck5            ;
               IncludeCaption=No;
               SourceExpr=andruck[5] }

    { 23  ;3   ;Column  ;andruck4            ;
               IncludeCaption=No;
               SourceExpr=andruck[4] }

    { 24  ;3   ;Column  ;andruck3            ;
               IncludeCaption=No;
               SourceExpr=andruck[3] }

    { 12  ;3   ;Column  ;andruck2            ;
               IncludeCaption=No;
               SourceExpr=andruck[2] }

    { 11  ;3   ;Column  ;andruck1            ;
               IncludeCaption=No;
               SourceExpr=andruck[1] }

    { 13  ;3   ;Column  ;ansp_fax            ;
               IncludeCaption=No;
               SourceExpr=ansp_fax }

    { 14  ;3   ;Column  ;ansp_telefon        ;
               IncludeCaption=No;
               SourceExpr=ansp_telefon }

    { 15  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."First name" + ' ' +"Salesperson/Purchaser".Name }

    { 16  ;3   ;Column  ;ansp_anrede         ;
               IncludeCaption=No;
               SourceExpr=ansp_anrede }

    { 17  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 19  ;3   ;Column  ;Steuernummer_Debito ;
               IncludeCaption=No;
               SourceExpr=Debitor.Steuernummer }

    { 20  ;3   ;Column  ;var_steuernr1       ;
               IncludeCaption=No;
               SourceExpr=var_steuernr1 }

    { 25  ;3   ;Column  ;anderung            ;
               IncludeCaption=No;
               SourceExpr=„nderung }

    { 26  ;3   ;Column  ;SalesHeaderExternalDocumentNo__SalesHeaderYourReference;
               IncludeCaption=No;
               SourceExpr="Sales Header"."External Document No."+' '+"Sales Header"."Your Reference" }

    { 27  ;3   ;Column  ;OurAccountNo_Debito ;
               IncludeCaption=No;
               SourceExpr=Debitor."Our Account No." }

    { 28  ;3   ;Column  ;var_steuernr2       ;
               IncludeCaption=No;
               SourceExpr=var_steuernr2 }

    { 29  ;3   ;Column  ;VATRegistrationNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."VAT Registration No." }

    { 30  ;3   ;Column  ;KopieText           ;
               IncludeCaption=No;
               SourceExpr=KopieText }

    { 31  ;3   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="Sales Header"."No." }

    { 32  ;3   ;Column  ;Bill_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Bill-to Customer No." }

    { 33  ;3   ;Column  ;SalesHeaderDocumentDate_0_1;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 34  ;3   ;Column  ;seite               ;
               IncludeCaption=No;
               SourceExpr=seite }

    { 35  ;3   ;Column  ;VerkAdr8            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[8] }

    { 36  ;3   ;Column  ;VerkAdr7            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[7] }

    { 37  ;3   ;Column  ;VerkAdr6            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[6] }

    { 38  ;3   ;Column  ;VerkAdr5            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[5] }

    { 39  ;3   ;Column  ;VerkAdr4            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[4] }

    { 40  ;3   ;Column  ;VerkAdr3            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[3] }

    { 41  ;3   ;Column  ;VerkAdr2            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[2] }

    { 42  ;3   ;Column  ;VerkAdr1            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[1] }

    { 43  ;3   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 44  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := VerkZeile2.FIND('+');
                               WHILE MehrZeilen AND (VerkZeile2.Description = '') AND
                                     (VerkZeile2."No." = '') AND (VerkZeile2.Quantity = 0) AND
                                     (VerkZeile2.Amount = 0) DO
                                 MehrZeilen := VerkZeile2.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               VerkZeile2.SETRANGE("Line No.",0,VerkZeile2."Line No.");
                               SETRANGE(Number,1,VerkZeile2.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    VerkZeile2.FIND('-')
                                  ELSE
                                    VerkZeile2.NEXT;
                                  "Sales Line" := VerkZeile2;
                                  IF "Sales Line"."Outstanding Quantity" <> 0 THEN BEGIN
                                    MWSTBetragZeile.INIT;
                                    MWSTBetragZeile."VAT %" := "Sales Line"."VAT %";
                                    MWSTBetragZeile."VAT Base" := "Sales Line".Amount;
                                    MWSTBetragZeile."Amount Including VAT" := "Sales Line"."Amount Including VAT";
                                    MWSTBetragZeile.InsertLine;
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      steuer_text := MWSTBetragZeile.VATAmountText
                                    ELSE
                                      steuer_text := 'Total V.A.T.';
                                  END;

                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Line".Type = "Sales Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND ("Sales Line"."Quantity Shipped" <> "Sales Line"."Quantity (Base)") THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                  IF v_FER_SPL = FALSE THEN
                                    IF (("Sales Line"."Manufacturer Code" ='82') OR ("Sales Line"."Manufacturer Code" = '85')) THEN
                                      v_FER_SPL := TRUE;
                                END;

               OnPostDataItem=BEGIN
                                VerkZeile2.DELETEALL;
                              END;

               DataItemLinkReference=SeiteSchleife }

    { 45  ;4   ;Column  ;waehrung2           ;
               IncludeCaption=No;
               SourceExpr=waehrung2 }

    { 46  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100__VerkZeile2In;
               IncludeCaption=No;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100) +VerkZeile2. "Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 47  ;4   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Description }

    { 48  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_VerkZeile2VATPct_100_S;
               IncludeCaption=No;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+VerkZeile2."VAT %")*100)+"Sales Line"."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 49  ;4   ;Column  ;UnitPrice_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 50  ;4   ;Column  ;OutstandingQuantity_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Outstanding Quantity" }

    { 51  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001;
               IncludeCaption=No;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 52  ;4   ;Column  ;UnitofMeasure_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit of Measure" }

    { 53  ;4   ;Column  ;Quantity_SalesLine  ;
               IncludeCaption=No;
               SourceExpr="Sales Line".Quantity }

    { 54  ;4   ;Column  ;No_SalesLine        ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."No." }

    { 55  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_VerkZeile2Inv;
               IncludeCaption=No;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100)+VerkZeile2."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 56  ;4   ;Column  ;ROUND_VerkZeile2InvDiscountAmount_001;
               IncludeCaption=No;
               SourceExpr=ROUND(-VerkZeile2."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 57  ;4   ;Column  ;lead_free_text0     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text0 }

    { 58  ;4   ;Column  ;lead_free_text1     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text1 }

    { 59  ;4   ;Column  ;lead_free_text2     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text2 }

    { 60  ;4   ;Column  ;lead_text           ;
               IncludeCaption=No;
               SourceExpr=lead_text }

    { 61  ;4   ;Column  ;sum_restauftragsbestand_sum_mwstbetrag;
               IncludeCaption=No;
               SourceExpr=(sum_restauftragsbestand+sum_mwstbetrag);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 62  ;4   ;Column  ;sum_mwstbetrag      ;
               IncludeCaption=No;
               SourceExpr=sum_mwstbetrag;
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 63  ;4   ;Column  ;sum_restauftragsbestand;
               IncludeCaption=No;
               SourceExpr=sum_restauftragsbestand;
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 64  ;4   ;Column  ;TotalInklMWStText   ;
               IncludeCaption=No;
               SourceExpr=TotalInklMWStText }

    { 65  ;4   ;Column  ;steuer_text         ;
               IncludeCaption=No;
               SourceExpr=steuer_text }

    { 66  ;4   ;Column  ;TotalText           ;
               IncludeCaption=No;
               SourceExpr=TotalText }

    { 67  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnPreDataItem=BEGIN
                               IF "Sales Line"."Promised Delivery Date" = (31122053D) THEN
                                 IF CurrReport.LANGUAGE = 1031 THEN
                                   liefert := 'Abruf'
                                 ELSE
                                   liefert := 'on call';
                               IF "Sales Line"."Promised Delivery Date"= (31122055D) THEN
                                 IF CurrReport.LANGUAGE = 1031 THEN
                                   liefert := 'folgt'
                                 ELSE
                                   liefert := 'To Follow';
                             END;

               OnAfterGetRecord=BEGIN
                                  IF "Sales Line".Type = "Sales Line".Type::Item THEN BEGIN
                                    IF "Sales Line"."VAT %" > 0 THEN         //sonst werden die Textzeilen mit bercksichtigt
                                      mwst := "Sales Line"."VAT %"
                                    ELSE
                                      mwst := 0;
                                  END;
                                  sum_restauftragsbestand := sum_restauftragsbestand + ROUND((("Sales Line"."Outstanding Amount") / (100 + mwst) * 100),0.01);
                                  // TOPAS Rahmenauftrag
                                  IF "Sales Line"."Blanket Order No." <> '' THEN BEGIN
                                    rahmenauftragsnummer := "Sales Line"."Blanket Order No.";
                                    rahmen := TRUE;
                                  END;
                                  // TOPAS
                                END;

               OnPostDataItem=BEGIN
                                liefert:='';
                              END;

               DataItemLinkReference=Sales Line;
               DataItemLink=No.=FIELD(No.) }

    { 68  ;5   ;Column  ;lead_symbol         ;
               IncludeCaption=No;
               SourceExpr=lead_symbol }

    { 69  ;5   ;Column  ;ROUND_SalesLineOutstandingAmount_100_mwst_100_001;
               DecimalPlaces=2:0;
               IncludeCaption=No;
               SourceExpr=ROUND((("Sales Line"."Outstanding Amount")/(100+mwst)*100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 70  ;5   ;Column  ;LineNo_SalesLine    ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Line No." }

    { 71  ;5   ;Column  ;Herstellerkurzname_Item;
               IncludeCaption=No;
               SourceExpr=Herstellerkurzname }

    { 72  ;5   ;Column  ;Artikelnr2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 73  ;5   ;Column  ;Description_SalesLine4;
               IncludeCaption=No;
               SourceExpr="Sales Line".Description }

    { 74  ;5   ;Column  ;Quantity_SalesLine2 ;
               IncludeCaption=No;
               SourceExpr="Sales Line".Quantity }

    { 75  ;5   ;Column  ;OutstandingQuantity_SalesLine2;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Outstanding Quantity" }

    { 76  ;5   ;Column  ;liefert             ;
               IncludeCaption=No;
               SourceExpr=liefert }

    { 77  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               IncludeCaption=No;
               SourceExpr="Country/Region of Origin Code" }

    { 78  ;5   ;Column  ;UnitPrice_SalesLine3;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 79  ;5   ;Column  ;PromisedDeliveryDate_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Promised Delivery Date" }

    { 80  ;5   ;Column  ;Description2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Description 2" }

    { 81  ;5   ;Column  ;ECCN_Nr__ItemECCN_Nr;
               IncludeCaption=No;
               SourceExpr='ECCN-Nr.: '+ Item."ECCN-Nr." }

    { 82  ;5   ;Column  ;TariffNo_Item       ;
               IncludeCaption=No;
               SourceExpr="Tariff No." }

    { 83  ;5   ;Column  ;Cross_ReferenceNo_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Cross-Reference No." }

    { 84  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 85  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;

               DataItemLinkReference=SeiteSchleife }

    { 86  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 87  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 88  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 89  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               DataItemLinkReference=SeiteSchleife }

    { 90  ;4   ;Column  ;Account             ;
               IncludeCaption=No;
               SourceExpr=Account }

    { 91  ;4   ;Column  ;Description_LieferBed;
               IncludeCaption=No;
               SourceExpr=LieferBed.Description }

    { 92  ;4   ;Column  ;Description_ZlgBed  ;
               IncludeCaption=No;
               SourceExpr=ZlgBed.Description }

    { 93  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;

               DataItemLinkReference=SeiteSchleife }

    { 94  ;4   ;Column  ;Sell_toCustomerNo_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Sell-to Customer No.") }

    { 95  ;4   ;Column  ;Sell_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 96  ;4   ;Column  ;DebAdr1             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[1] }

    { 97  ;4   ;Column  ;DebAdr2             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[2] }

    { 98  ;4   ;Column  ;DebAdr3             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[3] }

    { 99  ;4   ;Column  ;DebAdr4             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[4] }

    { 100 ;4   ;Column  ;DebAdr5             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[5] }

    { 101 ;4   ;Column  ;DebAdr6             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[6] }

    { 102 ;4   ;Column  ;DebAdr7             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[7] }

    { 103 ;4   ;Column  ;DebAdr8             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[8] }

    { 104 ;4   ;Column  ;LieferAnAdr1        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[1] }

    { 105 ;4   ;Column  ;LieferAnAdr2        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[2] }

    { 106 ;4   ;Column  ;LieferAnAdr3        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[3] }

    { 107 ;4   ;Column  ;LieferAnAdr4        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[4] }

    { 108 ;4   ;Column  ;LieferAnAdr5        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[5] }

    { 109 ;4   ;Column  ;LieferAnAdr6        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[6] }

    { 110 ;4   ;Column  ;LieferAnAdr7        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[7] }

    { 111 ;4   ;Column  ;LieferAnAdr8        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[8] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=No;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140002 : Record 98;
      LieferBed@1140003 : Record 10;
      ZlgBed@1140004 : Record 3;
      Deb@1140005 : Record 18;
      Geb@1140006 : Record 286;
      suchbe@1140007 : Record 27;
      VerkEinkPerson@1140008 : Record 13;
      Firmendaten@1140009 : Record 79;
      MWSTBetragZeile@1140010 : TEMPORARY Record 290;
      "UnsereKontonr."@1140011 : Record 18;
      kunde@1000000005 : Record 18;
      rahmenauftr„ge@1000000004 : Record 36;
      language@1000000006 : Record 8;
      PrinterSelection@1000000007 : Record 78;
      VerkZeile2@1000000012 : TEMPORARY Record 37;
      n„chste_lief_tab@1000000011 : Record 37;
      SalesLine@1000000010 : Record 37;
      TroubleshootingSetup@1000000009 : Record 5945;
      VerkDruckZ„hler@1140013 : Codeunit 313;
      FormatAdr@1140014 : Codeunit 365;
      VerkBuchen@1140015 : Codeunit 80;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140016 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140017 : ARRAY [8] OF Text[50];
      FirmaAdr@1140018 : ARRAY [8] OF Text[50];
      Verk„uferText@1140019 : Text[30];
      MWStNrText@1140020 : Text[30];
      ReferenzText@1140021 : Text[30];
      TotalText@1140022 : Text[50];
      TotalInklMWStText@1140023 : Text[50];
      waehrung@1000000003 : Code[10];
      waehrung2@1000000002 : Code[10];
      MehrZeilen@1140024 : Boolean;
      eingabe@1140067 : Integer;
      AnzKopien@1140025 : Integer;
      AnzKopien_sich@1140065 : Integer;
      AnzSchleifen@1140026 : Integer;
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      liefert@1140031 : Code[10];
      liefert2@1140032 : Date;
      mwst@1140033 : Decimal;
      „nderung@1140034 : Text[30];
      sum_restauftragsbestand@1140035 : Decimal;
      sum_mwstbetrag@1140041 : Decimal;
      sum_netto@1140042 : Decimal;
      AnzPorto@1140036 : Decimal;
      SumPorto@1140037 : Decimal;
      VerkAdr@1140038 : ARRAY [8] OF Text[50];
      rahmenauftragsnummer@1140045 : Code[20];
      rahmen@1140047 : Boolean;
      lead_free_text0@1140048 : Text[80];
      lead_free_text1@1140049 : Text[80];
      leadfree_symbol@1140050 : Text[3];
      leadfree_artikel@1140051 : Record 27;
      lead_artikel@1140069 : Record 27;
      lead_text@1140070 : Text[120];
      lead_symbol@1140071 : Text[3];
      lead_free_text2@1140052 : Text[80];
      var_steuernr1@1140053 : Text[20];
      var_steuernr2@1140054 : Text[20];
      ansp_anrede@1140055 : Text[30];
      ansp_telefon@1140056 : Text[30];
      ansp_fax@1140057 : Text[30];
      steuer_text@1140058 : Text[30];
      seite@1140059 : Text[30];
      Artikel@1140061 : Record 27;
      Account@1140062 : Text[100];
      "Printer selection"@1140063 : Record 78;
      pdf@1140064 : Boolean;
      counter@1140076 : Integer;
      andruck@1140075 : ARRAY [9] OF Text[80];
      n„chste_lief_woche@1140030 : Text[30];
      n„chste_lief_jahr@1140039 : Text[30];
      v_FER_SPL@1140066 : Boolean;
      adv_andruck_notwendig@1000000008 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer1@1000000067(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(adv_andruck_notwendig);
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Header30@1000000062(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_TransHeader31@1000000063(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Body32@1000000064(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_TransFooter33@1000000065(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Footer34@1000000066(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header3@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //TOPAS 20.03.18 ST - rendert das Firmenlogo fr Batch L„ufe, da das Logo beim normalen Druck vom Briefpapier bezogen wird
        IF PrinterSelection.GET(USERID,50075) THEN BEGIN
          IF (PrinterSelection."Printer Name" = 'PDFCreator')
          OR (PrinterSelection."Printer Name" = 'Bullzip PDF Printer') THEN
            Firmendaten.CALCFIELDS(Picture);
        END;
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS Ende
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body7@5011(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //ReportForNav.ShowOutput(VerkZeile2.Art = 0);
        // Unterdckt Artikeltexte wenn eine Artikelzeile nicht berechnet wird
        SalesLine.RESET;
        SalesLine.SETFILTER("Document No.",'%1',VerkZeile2."Document No.");
        SalesLine.SETFILTER("Line No.",'%1',VerkZeile2."Attached to Line No.");
        IF SalesLine.FINDFIRST THEN BEGIN
          ReportForNav.ShowOutput(((SalesLine.Type = SalesLine.Type::Item) AND (SalesLine."Outstanding Quantity" > 0)) OR (SalesLine.Type = 0));
        END ELSE BEGIN
          IF ((VerkZeile2."Attached to Line No." = 0) AND (VerkZeile2.Type = 0)) THEN
            ReportForNav.ShowOutput(TRUE)
          ELSE
            ReportForNav.ShowOutput(FALSE);
        END;
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body8@5012(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        sum_netto := 0;
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::"G/L Account") AND (VerkZeile2."Outstanding Quantity" > 0));
        IF VerkZeile2.Type = VerkZeile2.Type::"G/L Account" THEN BEGIN
          sum_restauftragsbestand := sum_restauftragsbestand + ROUND(((VerkZeile2."Outstanding Amount") / (100 + VerkZeile2."VAT %") * 100),0.01);
          sum_netto := ROUND(((VerkZeile2."Outstanding Amount") / (100 + VerkZeile2."VAT %") * 100),0.01);
          sum_mwstbetrag := sum_mwstbetrag + ROUND(((sum_netto) / (100) * VerkZeile2."VAT %"),0.00001);
          SumPorto := VerkZeile2.Amount;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body10@5013(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2.Type = VerkZeile2.Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer13@5014(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2."Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer14@5015(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer15@5016(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer16@5017(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '') OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer17@5018(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer19@5019(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer20@5020(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Debitor."VAT Bus. Posting Group" <> 'HAN_AUSL');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer21@5021(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Debitor."VAT Bus. Posting Group" = 'HAN_AUSL');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body22@5022(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND ("Sales Line"."Promised Delivery Date" = 31122055D));
        IF ((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND ("Sales Line"."Promised Delivery Date" = 31122055D)) THEN
          sum_mwstbetrag := sum_mwstbetrag + ROUND(((VerkZeile2."Outstanding Amount") / (100 + VerkZeile2."VAT %") * VerkZeile2."VAT %"),0.00001);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body23@5023(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND (VerkZeile2."Promised Delivery Date" = 31122053D));
        IF ((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND (VerkZeile2."Promised Delivery Date" = 31122053D)) THEN
          sum_mwstbetrag := sum_mwstbetrag + ROUND(((VerkZeile2."Outstanding Amount") / (100 + VerkZeile2."VAT %") * VerkZeile2."VAT %"),0.00001);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body24@5024(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND (VerkZeile2."Promised Delivery Date" < 31122053D));
        IF ((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND (VerkZeile2."Promised Delivery Date" < 31122053D)) THEN
          sum_mwstbetrag := sum_mwstbetrag + ROUND(((VerkZeile2."Outstanding Amount") / (100 + VerkZeile2."VAT %") * VerkZeile2."VAT %"),0.00001);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body25@5025(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2."Description 2" <> '') AND (VerkZeile2."Outstanding Quantity" > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body26@5026(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(((Item."Tariff No." <> '') AND (VerkZeile2."Outstanding Quantity" > 0)) OR
                                ((Item."ECCN-Nr." <> '')   AND (VerkZeile2."Outstanding Quantity" > 0)));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body27@5027(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND ("Sales Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body28@5028(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(((Item.NCNR = TRUE) AND (VerkZeile2."Outstanding Quantity" > 0)) OR ((Item."Manufacturer Code" = '00') AND (VerkZeile2."Outstanding Quantity" > 0)));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body29@5029(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2."VAT Prod. Posting Group" = '13B2') AND (VerkZeile2."Outstanding Quantity" > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body36@5035(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(LiefAdrAnzeigen);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body37@5036(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput("Sales Header"."Sell-to Customer No." <> "Sales Header"."Bill-to Customer No.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body38@5037(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(LiefAdrAnzeigen);
      END;
    END;

    PROCEDURE AndruckFeldPrfen@1140000() : Integer;
    VAR
      nr@1140000 : Integer;
    BEGIN
      FOR nr := 1 TO 8 DO BEGIN
        IF andruck[nr] = '' THEN
          EXIT(nr)
        ELSE BEGIN
          IF nr > 7 THEN BEGIN
            MESSAGE('Achtung Warnhinweis %1 konnte nicht auf der AB-Kopie angedruckt werden.\'+
                    'Wenden Sie sich bitte an Ihren Systemverwalter!',nr + counter);
            counter += 1;
            EXIT(8);
          END;
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header3': OnPreSectionSeiteSchleife_Header3(SeiteSchleife);
        END;
        'RundungsRahmen': CASE SectionId OF
          'Body7': OnPreSectionRundungsRahmen_Body7(RundungsRahmen);
          'Body8': OnPreSectionRundungsRahmen_Body8(RundungsRahmen);
          'Body10': OnPreSectionRundungsRahmen_Body10(RundungsRahmen);
          'Footer13': OnPreSectionRundungsRahmen_Footer13(RundungsRahmen);
          'Footer14': OnPreSectionRundungsRahmen_Footer14(RundungsRahmen);
          'Footer15': OnPreSectionRundungsRahmen_Footer15(RundungsRahmen);
          'Footer16': OnPreSectionRundungsRahmen_Footer16(RundungsRahmen);
          'Footer17': OnPreSectionRundungsRahmen_Footer17(RundungsRahmen);
          'Footer19': OnPreSectionRundungsRahmen_Footer19(RundungsRahmen);
          'Footer20': OnPreSectionRundungsRahmen_Footer20(RundungsRahmen);
          'Footer21': OnPreSectionRundungsRahmen_Footer21(RundungsRahmen);
          'Footer1': OnPreSectionRundungsRahmen_Footer1(RundungsRahmen);
        END;
        'Item': CASE SectionId OF
          'Body22': OnPreSectionItem_Body22(Item);
          'Body23': OnPreSectionItem_Body23(Item);
          'Body24': OnPreSectionItem_Body24(Item);
          'Body25': OnPreSectionItem_Body25(Item);
          'Body26': OnPreSectionItem_Body26(Item);
          'Body27': OnPreSectionItem_Body27(Item);
          'Body28': OnPreSectionItem_Body28(Item);
          'Body29': OnPreSectionItem_Body29(Item);
        END;
        'MWStZahler': CASE SectionId OF
          'Header30': OnPreSectionMWStZahler_Header30(MWStZ„hler);
          'TransHeader31': OnPreSectionMWStZahler_TransHeader31(MWStZ„hler);
          'Body32': OnPreSectionMWStZahler_Body32(MWStZ„hler);
          'TransFooter33': OnPreSectionMWStZahler_TransFooter33(MWStZ„hler);
          'Footer34': OnPreSectionMWStZahler_Footer34(MWStZ„hler);
        END;
        'Total2': CASE SectionId OF
          'Body36': OnPreSectionTotal2_Body36(Total2);
          'Body37': OnPreSectionTotal2_Body37(Total2);
          'Body38': OnPreSectionTotal2_Body38(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,VerkZeile2."Outstanding Amount");
                ReportForNav.AddTotal(DataItemId,1,VerkZeile2."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,VerkZeile2."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 VerkZeile2."Outstanding Amount" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 VerkZeile2."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 VerkZeile2."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>+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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

