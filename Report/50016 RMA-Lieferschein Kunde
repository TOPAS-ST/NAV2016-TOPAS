OBJECT Report 50016 RMA-Lieferschein Kunde
{
  OBJECT-PROPERTIES
  {
    Date=07.06.17;
    Time=14:02:03;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS(Picture,"ISO Logo");
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50020;
               ReqFilterFields=RMA-Nr. }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table50022;
               DataItemTableView=WHERE(Art=FILTER(Kunde));
               OnAfterGetRecord=BEGIN
                                  IF Land.GET("L„nder-/Regionscode") THEN ;
                                END;

               DataItemLink=RMA-Nr.=FIELD(RMA-Nr.) }

    { 1000000000;2;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 3   ;2   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000006;2;Column;Andruck1           ;
               SourceExpr=Andruck[1] }

    { 1000000005;2;Column;Andruck2           ;
               SourceExpr=Andruck[2] }

    { 1000000004;2;Column;Andruck3           ;
               SourceExpr=Andruck[3] }

    { 1000000003;2;Column;Andruck4           ;
               SourceExpr=Andruck[4] }

    { 1000000002;2;Column;Andruck5           ;
               SourceExpr=Andruck[5] }

    { 1000000001;2;Column;Andruck6           ;
               SourceExpr=Andruck[6] }

    { 1000000008;2;Column;Andruck7           ;
               SourceExpr=Andruck[7] }

    { 1000000007;2;Column;Andruck8           ;
               SourceExpr=Andruck[8] }

    { 8   ;2   ;Column  ;Debitornr_RMA_Beteiligte;
               SourceExpr="Debitornr." }

    { 12  ;2   ;Column  ;WORKDATE            ;
               SourceExpr=WORKDATE }

    { 13  ;2   ;Column  ;RMA_Nr_RMA_Beteiligte;
               SourceExpr="RMA-Nr." }

    { 14  ;1   ;DataItem;                    ;
               DataItemTable=Table50023;
               DataItemTableView=WHERE(Art=FILTER(an Kunden),
                                       Andruck=FILTER(Text oben));
               DataItemLink=Nr.=FIELD(RMA-Nr.) }

    { 15  ;2   ;Column  ;Bemerkung_TOPASBemerkungen;
               SourceExpr=Bemerkung }

    { 16  ;1   ;DataItem;                    ;
               DataItemTable=Table50021;
               DataItemTableView=WHERE(Belegart=FILTER(an Kunden),
                                       Ausblenden=FILTER(No));
               OnAfterGetRecord=BEGIN
                                  TariffNo := '';
                                  Text_Abweichung_SN_DC := '';

                                  Artikel.RESET;
                                  Artikel.SETFILTER("No.",'%1',"Artikelnr.");
                                  IF Artikel.FINDFIRST THEN BEGIN
                                    TariffNo := Artikel."Tariff No.";
                                    Artikelnr := Artikel."No. 2";
                                  END ELSE
                                    Artikelnr := "Artikelnr.";

                                  r_rma_zeile.RESET;
                                  r_rma_zeile.SETRANGE(Belegart,r_rma_zeile.Belegart::"vom Kunden");
                                  r_rma_zeile.SETRANGE("RMA-Nr.","RMA-Zeile"."RMA-Nr.");
                                  r_rma_zeile.SETRANGE("Belegnr.","RMA-Zeile"."Belegnr.");
                                  r_rma_zeile.SETRANGE("Belegzeilennr.","RMA-Zeile"."Belegzeilennr.");
                                  r_rma_zeile.SETRANGE("Datecode Pos.","RMA-Zeile"."Datecode Pos.");
                                  IF (r_rma_zeile.FINDFIRST) AND (r_rma_zeile."SN-Nr. / DC" <> "RMA-Zeile"."SN-Nr. / DC") THEN
                                    Text_Abweichung_SN_DC := 'Ersatzlieferung: alte Seriennr. ' + r_rma_zeile."SN-Nr. / DC";
                                END;

               DataItemLink=RMA-Nr.=FIELD(RMA-Nr.) }

    { 17  ;2   ;Column  ;MasnahmeHersteller_RMA_Zeile;
               DecimalPlaces=0:0;
               SourceExpr="RMA-Zeile"."Maánahme Hersteller" }

    { 18  ;2   ;Column  ;SN_Nr_DC_RMA_Zeile  ;
               SourceExpr="SN-Nr. / DC" }

    { 19  ;2   ;Column  ;Ursprungsland_RMA_Zeile;
               SourceExpr=Ursprungsland }

    { 20  ;2   ;Column  ;MengeSN_Nr_DC_RMA_Zeile;
               DecimalPlaces=0:0;
               SourceExpr="Menge SN-Nr. / DC" }

    { 21  ;2   ;Column  ;Artikelnr           ;
               SourceExpr=Artikelnr }

    { 22  ;2   ;Column  ;Anzahl_Zeile        ;
               SourceExpr=Anzahl_Zeile }

    { 23  ;2   ;Column  ;TariffNo            ;
               SourceExpr=TariffNo }

    { 24  ;2   ;Column  ;ExterneBelegnummmer_RMA_Zeile;
               SourceExpr="Externe Belegnummmer" }

    { 25  ;2   ;Column  ;Text_Abweichung_SN_DC;
               SourceExpr=Text_Abweichung_SN_DC }

    { 26  ;1   ;DataItem;Textunten           ;
               DataItemTable=Table50023;
               DataItemTableView=WHERE(Art=FILTER(an Kunden),
                                       Andruck=FILTER(Text unten));
               DataItemLink=Nr.=FIELD(RMA-Nr.) }

    { 27  ;2   ;Column  ;Bemerkung_Textunten ;
               SourceExpr=Bemerkung }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Land@1140000 : Record 9;
      Firmendaten@1000000000 : Record 79;
      r_rma_zeile@1140012 : Record 50021;
      FormatAddr@1000000001 : Codeunit 365;
      Amount@1140001 : Decimal;
      Totalamount@1140002 : Decimal;
      Artikel@1140003 : Record 27;
      Anzahl_Zeile@1140004 : Integer;
      Andruck@1000000002 : ARRAY [8] OF Text;
      Zeile1@1140005 : Text[60];
      Zeile2@1140006 : Text[60];
      Zeile3@1140007 : Text[60];
      Zeile4@1140008 : Text[60];
      TariffNo@1140011 : Code[10];
      Artikelnr@1140013 : Code[40];
      Text_Abweichung_SN_DC@1140014 : Text[80];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionRMA_Beteiligte_Body2@5025(VAR "RMA-Beteiligte"@1000000000 : Record 50022);
    BEGIN
      WITH "RMA-Beteiligte" DO BEGIN
        ReportForNav.ShowOutput((Art = Art::Kunde) AND (Fhrungsrolle = TRUE));
        FormatAddr.FormatAddr(Andruck,Name,"Name 2",'',Adresse,"Adresse 2",Ort,"PLZ-Code",'',"L„nder-/Regionscode");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body5@5026(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        ReportForNav.ShowOutput(Belegart = Belegart::"an Kunden");
        IF  Belegart = Belegart::"an Kunden" THEN BEGIN
          //  Amount := ROUND(( "RMA-Zeile"."Menge SN-Nr. / DC") * ("RMA-Zeile"."urspr. DC-Preis EK-Lieferung"),0.01);
          //  Totalamount += Amount;
          Anzahl_Zeile += 1;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body6@5027(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        ReportForNav.ShowOutput(TariffNo <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body7@5028(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        ReportForNav.ShowOutput("RMA-Zeile"."Externe Belegnummmer" <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body8@5029(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        ReportForNav.ShowOutput(Text_Abweichung_SN_DC <> '');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RMA_Beteiligte': CASE SectionId OF
          'Body2': OnPreSectionRMA_Beteiligte_Body2("RMA-Beteiligte");
        END;
        'RMA_Zeile': CASE SectionId OF
          'Body5': OnPreSectionRMA_Zeile_Body5("RMA-Zeile");
          'Body6': OnPreSectionRMA_Zeile_Body6("RMA-Zeile");
          'Body7': OnPreSectionRMA_Zeile_Body7("RMA-Zeile");
          'Body8': OnPreSectionRMA_Zeile_Body8("RMA-Zeile");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>9ba19be1-00fd-4799-9209-ac3d687313f2</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>f6adbbde-0aaf-4f07-a7ca-172350b153de</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="Andruck1">
          <DataField>Andruck1</DataField>
        </Field>
        <Field Name="Andruck2">
          <DataField>Andruck2</DataField>
        </Field>
        <Field Name="Andruck3">
          <DataField>Andruck3</DataField>
        </Field>
        <Field Name="Andruck4">
          <DataField>Andruck4</DataField>
        </Field>
        <Field Name="Andruck5">
          <DataField>Andruck5</DataField>
        </Field>
        <Field Name="Andruck6">
          <DataField>Andruck6</DataField>
        </Field>
        <Field Name="Andruck7">
          <DataField>Andruck7</DataField>
        </Field>
        <Field Name="Andruck8">
          <DataField>Andruck8</DataField>
        </Field>
        <Field Name="Debitornr_RMA_Beteiligte">
          <DataField>Debitornr_RMA_Beteiligte</DataField>
        </Field>
        <Field Name="WORKDATE">
          <DataField>WORKDATE</DataField>
        </Field>
        <Field Name="RMA_Nr_RMA_Beteiligte">
          <DataField>RMA_Nr_RMA_Beteiligte</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungen">
          <DataField>Bemerkung_TOPASBemerkungen</DataField>
        </Field>
        <Field Name="MasnahmeHersteller_RMA_Zeile">
          <DataField>MasnahmeHersteller_RMA_Zeile</DataField>
        </Field>
        <Field Name="SN_Nr_DC_RMA_Zeile">
          <DataField>SN_Nr_DC_RMA_Zeile</DataField>
        </Field>
        <Field Name="Ursprungsland_RMA_Zeile">
          <DataField>Ursprungsland_RMA_Zeile</DataField>
        </Field>
        <Field Name="MengeSN_Nr_DC_RMA_Zeile">
          <DataField>MengeSN_Nr_DC_RMA_Zeile</DataField>
        </Field>
        <Field Name="MengeSN_Nr_DC_RMA_ZeileFormat">
          <DataField>MengeSN_Nr_DC_RMA_ZeileFormat</DataField>
        </Field>
        <Field Name="Artikelnr">
          <DataField>Artikelnr</DataField>
        </Field>
        <Field Name="Anzahl_Zeile">
          <DataField>Anzahl_Zeile</DataField>
        </Field>
        <Field Name="TariffNo">
          <DataField>TariffNo</DataField>
        </Field>
        <Field Name="ExterneBelegnummmer_RMA_Zeile">
          <DataField>ExterneBelegnummmer_RMA_Zeile</DataField>
        </Field>
        <Field Name="Text_Abweichung_SN_DC">
          <DataField>Text_Abweichung_SN_DC</DataField>
        </Field>
        <Field Name="Bemerkung_Textunten">
          <DataField>Bemerkung_Textunten</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

