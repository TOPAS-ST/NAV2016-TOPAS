OBJECT Report 50073 TOPAS Packliste
{
  OBJECT-PROPERTIES
  {
    Date=23.11.22;
    Time=12:00:00;
    Modified=Yes;
    Version List=Beleg,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Sell-to Customer No.,External Document No.)
                                 WHERE(Document Type=CONST(Order));
               OnAfterGetRecord=BEGIN
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  FormatAdr.SalesHeaderSellTo(DebAdr,"Sales Header");
                                  verfolgung.RESET;
                                  verfolgung.SETRANGE ("Source ID","Sales Header"."No.");
                                  IF NOT verfolgung.FINDFIRST THEN
                                    drucken := FALSE
                                  ELSE
                                    drucken := TRUE;
                                  // TOPAS 09.09.09 UB - Anfang Konsignationslager anzeigen
                                  Konsi := '';
                                  IF "Location Code" = 'KONSI' THEN
                                    Konsi := 'Konsignationslager';
                                  // TOPAS ENDE
                                END;

               ReqFilterFields=Posting Date }

    { 2   ;1   ;Column  ;Spediteuraccount_SalesHeader;
               SourceExpr=Spediteuraccount }

    { 3   ;1   ;Column  ;Konsi               ;
               SourceExpr=Konsi }

    { 4   ;1   ;Column  ;ShippingAgentCode_SalesHeader;
               SourceExpr="Shipping Agent Code" }

    { 5   ;1   ;Column  ;vAusland            ;
               SourceExpr=vAusland }

    { 6   ;1   ;Column  ;Sell_toCustomerName_SalesHeader;
               SourceExpr="Sales Header"."Sell-to Customer Name" }

    { 7   ;1   ;Column  ;No_SalesHeader      ;
               SourceExpr="No." }

    { 8   ;1   ;Column  ;Sell_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 9   ;1   ;Column  ;PostingDate_SalesHeader;
               SourceExpr="Posting Date" }

    { 10  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=WHERE(Type=CONST(Item));
               DataItemLink=Document No.=FIELD(No.) }

    { 11  ;2   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemLink=No.=FIELD(No.) }

    { 12  ;3   ;Column  ;LineNo_SalesLine    ;
               SourceExpr="Sales Line"."Line No." }

    { 1000000000;3;Column;Herstellerkurzname ;
               SourceExpr=Herstellerkurzname }

    { 14  ;3   ;Column  ;Description_SalesLine;
               SourceExpr="Sales Line".Description }

    { 15  ;3   ;Column  ;Artikelnr2_SalesLine;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 16  ;3   ;Column  ;QtytoShip_SalesLine ;
               SourceExpr="Sales Line"."Qty. to Ship" }

    { 17  ;3   ;Column  ;UnitofMeasure_SalesLine;
               SourceExpr="Sales Line"."Unit of Measure" }

    { 18  ;3   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 19  ;2   ;DataItem;                    ;
               DataItemTable=Table337;
               DataItemTableView=SORTING(Expiration Date,Entry No.);
               DataItemLink=Source ID=FIELD(Document No.),
                            Source Ref. No.=FIELD(Line No.) }

    { 20  ;3   ;Column  ;Ursprungsland_ReservationEntry;
               SourceExpr=Ursprungsland }

    { 21  ;3   ;Column  ;LotNo_ReservationEntry;
               SourceExpr="Lot No." }

    { 22  ;3   ;Column  ;ReservationEntryQuantity_Base__1;
               DecimalPlaces=0:0;
               SourceExpr="Reservation Entry"."Quantity (Base)"*-1 }

    { 23  ;3   ;Column  ;SerialNo_ReservationEntry;
               SourceExpr="Serial No." }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      titel@1140000 : Text[30];
      lief@1140001 : Text[30];
      debart@1140002 : Text[80];
      vk_zeile@1140003 : Record 37;
      art1@1140005 : Record 27;
      Verk_debitor@1140006 : Record 18;
      VerkEinkPerson@1140007 : Record 13;
      Firmendaten@1140008 : Record 79;
      LiefDruckZ„hler@1140009 : Codeunit 314;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140011 : ARRAY [8] OF Text[50];
      FirmaAdr@1140012 : ARRAY [8] OF Text[50];
      Verk„uferText@1140013 : Text[20];
      ReferenzText@1140014 : Text[30];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      DebAdrZeigen@1140019 : Boolean;
      i@1140020 : Integer;
      FormatAdr@1140021 : Codeunit 365;
      lead_free_text0@1140022 : Text[80];
      lead_free_text1@1140023 : Text[80];
      leadfree_symbol@1140024 : Text[3];
      leadfree_artikel@1140025 : Record 27;
      lead_free_text2@1140026 : Text[80];
      ansp@1140030 : Text[40];
      tel@1140031 : Text[40];
      fax@1140032 : Text[40];
      seite@1140033 : Text[30];
      einheiten_text@1140034 : Text[30];
      VerkAdr@1140041 : Text[50];
      Anschrift@1140042 : ARRAY [9] OF Text[50];
      Account@1140027 : Text[90];
      Account2@1140028 : Text[30];
      verfolgung@1140029 : Record 337;
      drucken@1140035 : Boolean;
      vAusland@1140036 : Text[30];
      Konsi@1140037 : Text[20];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput(("Sales Header"."Posting Date" = WORKDATE) AND (drucken = TRUE));
        IF "Sales Header"."Ship-to Country/Region Code" = 'DE' THEN BEGIN
          vAusland := '';
        END ELSE BEGIN
          vAusland := 'AUSLAND';
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Header2@5011(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput (("Sales Header"."Posting Date" = WORKDATE)
        AND (drucken = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body3@5012(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput (("Sales Line".Quantity <> 0)
        AND ("Sales Line"."Qty. to Ship" <> 0)
        AND ("Sales Header"."Posting Date" = WORKDATE)
        AND (drucken = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Header4@5013(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput (("Sales Line".Quantity <> 0)
        AND ("Sales Line"."Qty. to Ship" <> 0)
        AND ("Reservation Entry"."Quantity (Base)" <> 0)
        AND ("Sales Header"."Posting Date" = WORKDATE)
        AND (drucken = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body5@5014(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput (("Sales Line".Quantity <> 0)
        AND ("Sales Line"."Qty. to Ship" <> 0)
        AND ("Reservation Entry"."Quantity (Base)" <> 0)
        AND ("Reservation Entry"."Lot No." <> '')
        AND ("Sales Header"."Posting Date" = WORKDATE)
        AND (drucken=TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body6@5015(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput (("Sales Line".Quantity <> 0)
        AND ("Sales Line"."Qty. to Ship" <> 0)
        AND ("Reservation Entry"."Quantity (Base)" <> 0)
        AND ("Reservation Entry"."Serial No." <> '')
        AND ("Sales Header"."Posting Date" = WORKDATE)
        AND (drucken = TRUE));
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Body1': OnPreSectionSalesHeader_Body1("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Header2': OnPreSectionSalesLine_Header2("Sales Line");
        END;
        'Item': CASE SectionId OF
          'Body3': OnPreSectionItem_Body3(Item);
        END;
        'ReservationEntry': CASE SectionId OF
          'Header4': OnPreSectionReservationEntry_Header4("Reservation Entry");
          'Body5': OnPreSectionReservationEntry_Body5("Reservation Entry");
          'Body6': OnPreSectionReservationEntry_Body6("Reservation Entry");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
rvD7e5yfTPnhPw==</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Spediteuraccount_SalesHeader">
          <DataField>Spediteuraccount_SalesHeader</DataField>
        </Field>
        <Field Name="Konsi">
          <DataField>Konsi</DataField>
        </Field>
        <Field Name="ShippingAgentCode_SalesHeader">
          <DataField>ShippingAgentCode_SalesHeader</DataField>
        </Field>
        <Field Name="vAusland">
          <DataField>vAusland</DataField>
        </Field>
        <Field Name="Sell_toCustomerName_SalesHeader">
          <DataField>Sell_toCustomerName_SalesHeader</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesHeader">
          <DataField>Sell_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="PostingDate_SalesHeader">
          <DataField>PostingDate_SalesHeader</DataField>
        </Field>
        <Field Name="LineNo_SalesLine">
          <DataField>LineNo_SalesLine</DataField>
        </Field>
        <Field Name="Herstellerkurzname">
          <DataField>Herstellerkurzname</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesLine">
          <DataField>Artikelnr2_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLine">
          <DataField>QtytoShip_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLineFormat">
          <DataField>QtytoShip_SalesLineFormat</DataField>
        </Field>
        <Field Name="UnitofMeasure_SalesLine">
          <DataField>UnitofMeasure_SalesLine</DataField>
        </Field>
        <Field Name="Ursprungsland_ReservationEntry">
          <DataField>Ursprungsland_ReservationEntry</DataField>
        </Field>
        <Field Name="LotNo_ReservationEntry">
          <DataField>LotNo_ReservationEntry</DataField>
        </Field>
        <Field Name="ReservationEntryQuantity_Base__1">
          <DataField>ReservationEntryQuantity_Base__1</DataField>
        </Field>
        <Field Name="ReservationEntryQuantity_Base__1Format">
          <DataField>ReservationEntryQuantity_Base__1Format</DataField>
        </Field>
        <Field Name="SerialNo_ReservationEntry">
          <DataField>SerialNo_ReservationEntry</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

