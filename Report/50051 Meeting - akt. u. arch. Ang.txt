OBJECT Report 50051 Meeting - akt. & arch. Ang.
{
  OBJECT-PROPERTIES
  {
    Date=20.04.18;
    Time=13:38:40;
    Modified=Yes;
    Version List=FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav := ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  IF datefilter = datefilter::LW THEN BEGIN
                    Startdatum := TOPAS_Funktionen.CalcDateByFormula(WORKDATE,TRUE,datefilter);
                    Enddatum := TOPAS_Funktionen.CalcDateByFormula(WORKDATE,FALSE,datefilter);
                  END;

                  IF nur_archivierte THEN
                    Arch_Angebote_listen
                  ELSE BEGIN
                    Akt_Angebote_listen;
                    Arch_Angebote_listen;
                  END;

                  Berichtstabelle_Customer.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_SalesHeader.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_SalesLine.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Campaign.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_ToDo.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Comment.COPY(Berichtstabelle,TRUE);

                  ;ReportForNav.OpenDesigner := ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1000000000;;DataItem;CopyCustomer      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Customer.RESET;
                               Berichtstabelle_Customer.SETFILTER(Tabelle,'%1','DEBITOR');
                               IF sort = sort::Nr THEN
                                 Berichtstabelle_Customer.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               IF sort = sort::Name THEN
                                 Berichtstabelle_Customer.SETCURRENTKEY("Feld 10",Datum,Index);
                               SETRANGE(Number,1,Berichtstabelle_Customer.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Customer.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Customer.NEXT;
                                  END;
                                END;
                                 }

    { 2   ;1   ;Column  ;TODAY_0_4           ;
               IncludeCaption=No;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 3   ;1   ;Column  ;USERID              ;
               IncludeCaption=No;
               SourceExpr=USERID }

    { 4   ;1   ;Column  ;Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Teams;
               IncludeCaption=No;
               SourceExpr='Verk„ufercode: '+verk„ufer+' Betreuer Innendienst: ' + betreuer + ' Teams: ' + teams + ' Gebietscode: ' + gebietscode + '  Belegdatum: ' + FORMAT(Startdatum) + '..' + FORMAT(Enddatum) +  ' Status: ' + FORMAT(status) + 'Erledigt: ' + FORMAT(erledigt) }

    { 5   ;1   ;Column  ;ReportForNavPageNo  ;
               IncludeCaption=No;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 1000000001;1;DataItem;CopySalesHeader  ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_SalesHeader.RESET;
                               Berichtstabelle_SalesHeader.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_SalesHeader.SETFILTER(Tabelle,'%1','BELEGKOPF');
                               Berichtstabelle_SalesHeader.SETFILTER(Index,'%1',Berichtstabelle_Customer.Index);
                               SETRANGE(Number,1,Berichtstabelle_SalesHeader.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_SalesHeader.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_SalesHeader.NEXT;
                                  END;
                                END;
                                 }

    { 7   ;2   ;Column  ;Feld19_Debitor      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Customer."Feld 19" }

    { 8   ;2   ;Column  ;Feld13_Debitor      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Customer."Feld 13" }

    { 9   ;2   ;Column  ;Feld9_Belegkopf     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 9" }

    { 10  ;2   ;Column  ;Feld6_Debitor       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Customer."Feld 6" }

    { 11  ;2   ;Column  ;Index_Belegkopf     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader.Index }

    { 12  ;2   ;Column  ;Feld10_Debitor      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Customer."Feld 10" }

    { 13  ;2   ;Column  ;Feld12_Debitor      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Customer."Feld 12" }

    { 14  ;2   ;Column  ;Feld7_Belegkopf     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 7" }

    { 15  ;2   ;Column  ;Feld6_Belegkopf     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 6" }

    { 16  ;2   ;Column  ;Feld2_Belegkopf     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 2" }

    { 17  ;2   ;Column  ;Feld12_Belegkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 12" }

    { 18  ;2   ;Column  ;Feld10_Belegkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 10" }

    { 19  ;2   ;Column  ;Belegnr_Belegkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Belegnr." }

    { 20  ;2   ;Column  ;Feld3_Belegkopf     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 3" }

    { 21  ;2   ;Column  ;Feld4_Belegkopf     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 4" }

    { 22  ;2   ;Column  ;Datum_Belegkopf     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader.Datum }

    { 1000000002;2;DataItem;CopyCampaign     ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Campaign.RESET;
                               Berichtstabelle_Campaign.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Campaign.SETFILTER(Tabelle,'%1','PROJEKT');
                               Berichtstabelle_Campaign.SETFILTER(Index,'%1',Berichtstabelle_SalesHeader."Belegnr.");
                               SETRANGE(Number,1,Berichtstabelle_Campaign.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Campaign.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Campaign.NEXT;
                                  END;
                                END;
                                 }

    { 24  ;3   ;Column  ;Feld4_Projekte      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Campaign."Feld 4" }

    { 25  ;3   ;Column  ;Feld9_Projekte      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Campaign."Feld 9" }

    { 26  ;3   ;Column  ;Feld1_Projekte      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Campaign."Feld 1" }

    { 27  ;3   ;Column  ;Feld5_Projekte      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Campaign."Feld 5" }

    { 28  ;3   ;Column  ;Feld8_Projekte      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Campaign."Feld 8" }

    { 29  ;3   ;Column  ;Belegnr_Projekte    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Campaign."Belegnr." }

    { 1000000003;2;DataItem;CopyToDo         ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_ToDo.RESET;
                               Berichtstabelle_ToDo.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_ToDo.SETFILTER(Tabelle,'%1','AUFGABE');
                               Berichtstabelle_ToDo.SETFILTER(Index,'%1',Berichtstabelle_SalesHeader."Belegnr.");
                               SETRANGE(Number,1,Berichtstabelle_ToDo.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_ToDo.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_ToDo.NEXT;
                                  END;
                                END;
                                 }

    { 1000000004;3;DataItem;CopyComment      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Comment.RESET;
                               Berichtstabelle_Comment.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Comment.SETFILTER(Tabelle,'%1','BEMERKUNG');
                               Berichtstabelle_Comment.SETFILTER("Belegnr.",'%1',Berichtstabelle_ToDo."Belegnr.");
                               SETRANGE(Number,1,Berichtstabelle_Comment.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Comment.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Comment.NEXT;
                                  END;
                                END;
                                 }

    { 32  ;4   ;Column  ;Feld10_Bemerkung    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Comment."Feld 10" }

    { 33  ;4   ;Column  ;Feld1_Bemerkung     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Comment."Feld 1" }

    { 34  ;4   ;Column  ;Datum_Bemerkung     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Comment.Datum }

    { 1000000005;2;DataItem;CopySalesLine    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_SalesLine.RESET;
                               Berichtstabelle_SalesLine.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_SalesLine.SETFILTER(Tabelle,'%1','BELEGZEILE');
                               Berichtstabelle_SalesLine.SETFILTER(Index,'%1',Berichtstabelle_SalesHeader."Belegnr.");
                               SETRANGE(Number,1,Berichtstabelle_SalesLine.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_SalesLine.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_SalesLine.NEXT;
                                  END;
                                END;
                                 }

    { 36  ;3   ;Column  ;Feld16_Belegzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 16" }

    { 37  ;3   ;Column  ;Feld11_Belegzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 11" }

    { 38  ;3   ;Column  ;Feld8_Belegzeile    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 8" }

    { 39  ;3   ;Column  ;Feld14_Belegzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 14" }

    { 40  ;3   ;Column  ;Feld13_Belegzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 13" }

    { 41  ;3   ;Column  ;Feld7_Belegzeile    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 7" }

    { 42  ;3   ;Column  ;Feld10_Belegzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 10" }

    { 43  ;3   ;Column  ;Feld6_Belegzeile    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 6" }

    { 44  ;3   ;Column  ;Feld3_Belegzeile    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 3" }

    { 45  ;3   ;Column  ;Feld4_Belegzeile    ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 4" }

    { 46  ;3   ;Column  ;Feld5_Belegzeile    ;
               DecimalPlaces=0:3;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 5" }

    { 47  ;3   ;Column  ;Feld12_Belegzeile   ;
               DecimalPlaces=0:2;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 12" }

    { 48  ;3   ;Column  ;Feld15_Belegzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesLine."Feld 15" }

    { 49  ;3   ;Column  ;ItemDescription__ItemDescription2;
               IncludeCaption=No;
               SourceExpr=Item.Description + ' ' + Item."Description 2" }

    { 1000000006;;DataItem;CopyArchCustomer  ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Customer.RESET;
                               Berichtstabelle_Customer.SETFILTER(Tabelle,'%1','ARCH_DEBITOR');
                               IF sort = sort::Nr THEN
                                 Berichtstabelle_Customer.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               IF sort = sort::Name THEN
                                 Berichtstabelle_Customer.SETCURRENTKEY("Feld 10",Datum,Index);
                               SETRANGE(Number,1,Berichtstabelle_Customer.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Customer.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Customer.NEXT;
                                  END;
                                END;
                                 }

    { 52  ;1   ;Column  ;TODAY_0_42          ;
               IncludeCaption=No;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 53  ;1   ;Column  ;USERID2             ;
               IncludeCaption=No;
               SourceExpr=USERID }

    { 54  ;1   ;Column  ;Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Team2;
               IncludeCaption=No;
               SourceExpr='Verk„ufercode: '+verk„ufer+' Betreuer Innendienst: ' + betreuer + ' Teams: ' + teams + ' Gebietscode: ' + gebietscode + '  Belegdatum: ' + FORMAT(Startdatum) + '..' + FORMAT(Enddatum) +  ' Status: ' + FORMAT(status) }

    { 55  ;1   ;Column  ;ReportForNavPageNo2 ;
               IncludeCaption=No;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 1000000007;1;DataItem;CopyArchSalesHeader;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_SalesHeader.RESET;
                               Berichtstabelle_SalesHeader.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_SalesHeader.SETFILTER(Tabelle,'%1','ARCH_BELEGKOPF');
                               Berichtstabelle_SalesHeader.SETFILTER(Index,'%1',Berichtstabelle_Customer.Index);
                               SETRANGE(Number,1,Berichtstabelle_SalesHeader.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_SalesHeader.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_SalesHeader.NEXT;
                                  END;
                                END;
                                 }

    { 57  ;2   ;Column  ;Feld19_Arch_Debitor ;
               SourceExpr=Berichtstabelle_Customer."Feld 19" }

    { 58  ;2   ;Column  ;Feld13_Arch_Debitor ;
               SourceExpr=Berichtstabelle_Customer."Feld 13" }

    { 59  ;2   ;Column  ;Feld9_Arch_Belegkopf;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 9" }

    { 60  ;2   ;Column  ;Feld6_Arch_Debitor  ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Customer."Feld 6" }

    { 61  ;2   ;Column  ;Index_Arch_Belegkopf;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader.Index }

    { 62  ;2   ;Column  ;Feld10_Arch_Debitor ;
               SourceExpr=Berichtstabelle_Customer."Feld 10" }

    { 63  ;2   ;Column  ;Feld12_Arch_Debitor ;
               SourceExpr=Berichtstabelle_Customer."Feld 12" }

    { 64  ;2   ;Column  ;Feld7_Arch_Belegkopf;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 7" }

    { 65  ;2   ;Column  ;Feld6_Arch_Belegkopf;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 6" }

    { 66  ;2   ;Column  ;Feld2_Arch_Belegkopf;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 2" }

    { 67  ;2   ;Column  ;Feld10_Arch_Belegkopf;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 10" }

    { 68  ;2   ;Column  ;Belegnr_Arch_Belegkopf;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Belegnr." }

    { 69  ;2   ;Column  ;Feld19_Arch_Belegkopf;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 19" }

    { 70  ;2   ;Column  ;Feld4_Arch_Belegkopf;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader."Feld 4" }

    { 71  ;2   ;Column  ;Datum_Arch_Belegkopf;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_SalesHeader.Datum }

    { 1000000008;2;DataItem;CopyCampaing2    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Campaign.RESET;
                               Berichtstabelle_Campaign.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Campaign.SETFILTER(Tabelle,'%1','ARCH_PROJEKT');
                               Berichtstabelle_Campaign.SETFILTER(Index,'%1',Berichtstabelle_SalesHeader."Belegnr.");
                               SETRANGE(Number,1,Berichtstabelle_Campaign.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Campaign.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Campaign.NEXT;
                                  END;
                                END;
                                 }

    { 73  ;3   ;Column  ;Feld4_Arch_Projekte ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Campaign."Feld 4" }

    { 74  ;3   ;Column  ;Feld9_Arch_Projekte ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Campaign."Feld 9" }

    { 75  ;3   ;Column  ;Feld1_Arch_Projekte ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Campaign."Feld 1" }

    { 76  ;3   ;Column  ;Feld5_Arch_Projekte ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Campaign."Feld 5" }

    { 77  ;3   ;Column  ;Feld8_Arch_Projekte ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Campaign."Feld 8" }

    { 78  ;3   ;Column  ;Belegnr_Arch_Projekte;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Campaign."Belegnr." }

    { 1000000009;2;DataItem;CopyToDo2        ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_ToDo.RESET;
                               Berichtstabelle_ToDo.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_ToDo.SETFILTER(Tabelle,'%1','ARCH_AUFGABE');
                               Berichtstabelle_ToDo.SETFILTER(Index,'%1',Berichtstabelle_SalesHeader."Belegnr.");
                               SETRANGE(Number,1,Berichtstabelle_ToDo.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_ToDo.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_ToDo.NEXT;
                                  END;
                                END;
                                 }

    { 1000000010;3;DataItem;CopyComment2     ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Comment.RESET;
                               Berichtstabelle_Comment.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Comment.SETFILTER(Tabelle,'%1','ARCH_BEMERKUNG');
                               Berichtstabelle_Comment.SETFILTER("Belegnr.",'%1',Berichtstabelle_ToDo."Belegnr.");
                               SETRANGE(Number,1,Berichtstabelle_Comment.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Comment.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Comment.NEXT;
                                  END;
                                END;
                                 }

    { 81  ;4   ;Column  ;Feld10_Arch_Bemerkung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Comment."Feld 10" }

    { 82  ;4   ;Column  ;Feld1_Arch_Bemerkung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Comment."Feld 1" }

    { 83  ;4   ;Column  ;Datum_Arch_Bemerkung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Comment.Datum }

    { 1000000011;2;DataItem;CopyArchSalesLine;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_SalesLine.RESET;
                               Berichtstabelle_SalesLine.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_SalesLine.SETFILTER(Tabelle,'%1','ARCH_BELEGZEILE');
                               Berichtstabelle_SalesLine.SETFILTER(Index,'%1',Berichtstabelle_SalesHeader."Belegnr.");
                               SETRANGE(Number,1,Berichtstabelle_SalesLine.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_SalesLine.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_SalesLine.NEXT;
                                  END;
                                END;
                                 }

    { 85  ;3   ;Column  ;Feld16_Arch_Belegzeile;
               SourceExpr=Berichtstabelle_SalesLine."Feld 16" }

    { 86  ;3   ;Column  ;Feld11_Arch_Belegzeile;
               SourceExpr=Berichtstabelle_SalesLine."Feld 11" }

    { 87  ;3   ;Column  ;Feld8_Arch_Belegzeile;
               SourceExpr=Berichtstabelle_SalesLine."Feld 8" }

    { 88  ;3   ;Column  ;Feld14_Arch_Belegzeile;
               SourceExpr=Berichtstabelle_SalesLine."Feld 14" }

    { 89  ;3   ;Column  ;Feld13_Arch_Belegzeile;
               SourceExpr=Berichtstabelle_SalesLine."Feld 13" }

    { 90  ;3   ;Column  ;Feld7_Arch_Belegzeile;
               SourceExpr=Berichtstabelle_SalesLine."Feld 7" }

    { 91  ;3   ;Column  ;Feld10_Arch_Belegzeile;
               SourceExpr=Berichtstabelle_SalesLine."Feld 10" }

    { 92  ;3   ;Column  ;Feld6_Arch_Belegzeile;
               SourceExpr=Berichtstabelle_SalesLine."Feld 6" }

    { 93  ;3   ;Column  ;Feld3_Arch_Belegzeile;
               SourceExpr=Berichtstabelle_SalesLine."Feld 3" }

    { 94  ;3   ;Column  ;Feld4_Arch_Belegzeile;
               DecimalPlaces=0:0;
               SourceExpr=Berichtstabelle_SalesLine."Feld 4" }

    { 95  ;3   ;Column  ;Feld5_Arch_Belegzeile;
               DecimalPlaces=0:3;
               SourceExpr=Berichtstabelle_SalesLine."Feld 5" }

    { 96  ;3   ;Column  ;Feld12_Arch_Belegzeile;
               DecimalPlaces=0:2;
               SourceExpr=Berichtstabelle_SalesLine."Feld 12" }

    { 97  ;3   ;Column  ;Feld15_Arch_Belegzeile;
               SourceExpr=Berichtstabelle_SalesLine."Feld 15" }

    { 98  ;3   ;Column  ;ItemDescription__ItemDescription22;
               IncludeCaption=No;
               SourceExpr=Item.Description + ' ' + Item."Description 2" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140002;2;Field     ;
                  CaptionML=DEU=Belegdatum von;
                  SourceExpr=Startdatum }

      { 1140000;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=Enddatum }

      { 1140003;2;Field     ;
                  CaptionML=DEU=Betreuer Innendienst;
                  SourceExpr=betreuer;
                  TableRelation=Salesperson/Purchaser }

      { 1140006;2;Field     ;
                  CaptionML=DEU=Verk„ufercode;
                  SourceExpr=verk„ufer;
                  TableRelation=Salesperson/Purchaser }

      { 1140009;2;Field     ;
                  CaptionML=DEU=Teams;
                  SourceExpr=teams;
                  TableRelation=Team }

      { 1140011;2;Field     ;
                  CaptionML=DEU=Gebietscode;
                  SourceExpr=gebietscode;
                  TableRelation=Territory }

      { 1000000000;2;Field  ;
                  CaptionML=DEU=Verk. an L„ndercode;
                  SourceExpr=land;
                  TableRelation=Country/Region }

      { 1140015;2;Field     ;
                  CaptionML=DEU=Herstellercode;
                  SourceExpr=hersteller;
                  TableRelation=Manufacturer }

      { 1140014;2;Field     ;
                  CaptionML=DEU=Status;
                  SourceExpr=status }

      { 1140021;2;Field     ;
                  CaptionML=DEU=Erledigtstatus;
                  SourceExpr=erledigt;
                  TableRelation=Optionstabelle.Code WHERE (Tabellen ID=CONST(36),
                                                           Feld ID=CONST(50212)) }

      { 1140018;2;Field     ;
                  CaptionML=DEU=Berichtssortierung;
                  OptionCaptionML=DEU=Debitornr.,Debitorname;
                  SourceExpr=sort }

      { 1140024;2;Field     ;
                  CaptionML=DEU=Nur archivierte;
                  SourceExpr=nur_archivierte }

      { 1000000001;2;Field  ;
                  CaptionML=DEU=Autom. Datumsfilter;
                  OptionCaptionML=DEU=Normal,,Letzte Woche;
                  SourceExpr=datefilter }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Berichtstabelle@1000000010 : TEMPORARY Record 50037;
      Berichtstabelle_Customer@1000000003 : TEMPORARY Record 50037;
      Berichtstabelle_SalesHeader@1000000004 : TEMPORARY Record 50037;
      Berichtstabelle_SalesLine@1000000008 : TEMPORARY Record 50037;
      Berichtstabelle_Campaign@1000000005 : TEMPORARY Record 50037;
      Berichtstabelle_ToDo@1000000006 : TEMPORARY Record 50037;
      Berichtstabelle_Comment@1000000007 : TEMPORARY Record 50037;
      Customer@1140012 : Record 18;
      Campaign@1140018 : Record 5071;
      Comment@1140020 : Record 5061;
      ToDo@1140019 : Record 5080;
      Item@1140016 : Record 27;
      Quotedaten@1140017 : Record 50014;
      Cont_rel@1140013 : Record 5054;
      Branche@1140014 : Record 5058;
      SalesHeader@1140009 : Record 36;
      ArchSalesHeader@1140024 : Record 5107;
      SalesLine@1140010 : Record 37;
      ArchSalesLine@1140025 : Record 5108;
      VerkTab@1140001 : Record 13;
      TOPAS_Funktionen@1000000002 : Codeunit 50006;
      Startdatum@1140005 : Date;
      Enddatum@1140004 : Date;
      hersteller@1140011 : Code[40];
      betreuer@1140003 : Code[40];
      verk„ufer@1140002 : Code[40];
      teams@1140006 : Code[40];
      gebietscode@1140007 : Code[40];
      land@1000000000 : Code[40];
      erledigt@1140027 : Code[40];
      status@1140008 : ' ,Offen,Freigegeben,Genehmigung ausstehend,Vorauszahlung ausstehend';
      belegzeilen_vorhanden@1140015 : Boolean;
      arch_belegzeilen_vorhanden@1140026 : Boolean;
      sort@1140023 : 'Nr,Name';
      datefilter@1000000001 : 'N,LD,LW,LM';
      nur_archivierte@1140028 : Boolean;
      Endkunde_temp@1140029 : Text[50];
      System_Projektinfo_temp@1140030 : Text[50];
      Belegnr_temp@1140031 : Code[20];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionBelegzeile_Body7@5010(VAR Belegzeile@1000000000 : Record 50037);
    BEGIN
      WITH Belegzeile DO BEGIN
        ReportForNav.ShowOutput(("Feld 16" <> '') AND (("Feld 16" <> Endkunde_temp) OR ("Belegnr." <> Belegnr_temp)));
        Endkunde_temp := "Feld 16";
        Belegnr_temp  := "Belegnr.";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionBelegzeile_Body8@5011(VAR Belegzeile@1000000000 : Record 50037);
    BEGIN
      WITH Belegzeile DO BEGIN
        ReportForNav.ShowOutput(("Feld 11" <> '') AND (("Feld 11" <> System_Projektinfo_temp) OR ("Belegnr." <> Belegnr_temp )));
        System_Projektinfo_temp := "Feld 11";
        Belegnr_temp  := "Belegnr.";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionBelegzeile_Body10@5012(VAR Belegzeile@1000000000 : Record 50037);
    BEGIN
      WITH Belegzeile DO BEGIN
        IF Item.GET("Feld 19") THEN
          ReportForNav.ShowOutput(Item.Herstellerkurzname = 'FER')
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Debitor_Header12@5014(VAR Arch_Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Debitor DO BEGIN
        ReportForNav.NewPageWithoutTransportTotals;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Belegzeile_Body18@5015(VAR Arch_Belegzeile@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Belegzeile DO BEGIN
        ReportForNav.ShowOutput(("Feld 16" <> '') AND (("Feld 16" <> Endkunde_temp) OR ("Belegnr." <> Belegnr_temp)));
        Endkunde_temp := "Feld 16";
        Belegnr_temp  := "Belegnr.";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Belegzeile_Body19@5016(VAR Arch_Belegzeile@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Belegzeile DO BEGIN
        ReportForNav.ShowOutput(("Feld 11" <> '') AND (("Feld 11" <> System_Projektinfo_temp) OR ("Belegnr." <> Belegnr_temp)));
        System_Projektinfo_temp := "Feld 11";
        Belegnr_temp  := "Belegnr.";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Belegzeile_Body21@5017(VAR Arch_Belegzeile@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Belegzeile DO BEGIN
        IF Item.GET("Feld 19") THEN
          ReportForNav.ShowOutput(Item.Herstellerkurzname = 'FER')
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    PROCEDURE Akt_Angebote_listen@1140000();
    BEGIN
      //*******************************************************************************************************
      //                                 Akt. Angebote werden durchsucht
      //*******************************************************************************************************
      SalesHeader.RESET;
      IF (Startdatum <> 0D) AND (Enddatum = 0D) THEN
        SalesHeader.SETFILTER("Document Date",'>=%1',Startdatum);
      IF (Startdatum <> 0D) AND (Enddatum <> 0D) THEN
        SalesHeader.SETFILTER("Document Date",'>=%1&<=%2',Startdatum,Enddatum);
      IF (Startdatum = 0D) AND (Enddatum <> 0D) THEN
        SalesHeader.SETFILTER("Document Date",'<=%1',Enddatum);
      SalesHeader.SETFILTER("Betreuer Innendienst",betreuer);
      SalesHeader.SETFILTER("Salesperson Code",verk„ufer);
      SalesHeader.SETFILTER(Teams,teams);
      SalesHeader.SETFILTER("Territory Code",gebietscode);
      SalesHeader.SETFILTER("Sell-to Country/Region Code",land);
      SalesHeader.SETFILTER("Document Type",'%1',SalesHeader."Document Type"::Quote);
      IF SalesHeader.FINDFIRST THEN
        REPEAT
          belegzeilen_vorhanden := FALSE;
          SalesLine.RESET;
          SalesLine.SETFILTER("Document No.",SalesHeader."No.");
          SalesLine.SETFILTER(Type,'%1',SalesLine.Type::Item);
          SalesLine.SETFILTER("Manufacturer Code",hersteller);
          IF SalesLine.FINDFIRST THEN BEGIN
            belegzeilen_vorhanden := TRUE;
            Berichtstabelle.RESET;
            Berichtstabelle.SETFILTER(Tabelle,'%1','DEBITOR');
            Berichtstabelle.SETFILTER(Index,'%1',SalesHeader."Sell-to Customer No.");
            IF NOT Berichtstabelle.FINDFIRST THEN BEGIN
              //*******************************************************************************************************
              //                                     Debitor Daten schreiben
              //*******************************************************************************************************
              Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'DEBITOR';
              Berichtstabelle.Index := SalesHeader."Sell-to Customer No.";
              Customer.GET(SalesHeader."Sell-to Customer No.");
              Berichtstabelle."Feld 6" := Customer."Post Code";
              Berichtstabelle."Feld 10" := Customer.Name;
              Berichtstabelle."Feld 12" := Customer.City;
              Berichtstabelle."Feld 19" := Customer."Country/Region Code";
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
              Berichtstabelle.User := USERID;
              //*******************************************************************************************************
              //           Prfung, ob Bestcker oder H„ndler und ob berhaupt eine Branche hinterlegt ist
              //*******************************************************************************************************
              Cont_rel.RESET;
              Cont_rel.SETFILTER("No.",'%1',Customer."No.");
              Cont_rel.SETFILTER("Business Relation Code",'%1','DEB');
              IF Cont_rel.FINDFIRST THEN BEGIN
                Branche.RESET;
                Branche.SETFILTER("Contact No.",'%1',Cont_rel."Contact No.");
                IF Branche.FINDFIRST THEN BEGIN
                  Branche.SETFILTER("Industry Group Code",'%1|%2','BESTšCKER','HŽNDLER');
                  IF Branche.FINDFIRST THEN BEGIN
                    Berichtstabelle."Feld 13" := Branche."Industry Group Code";
                  END;
                END ELSE
                  Berichtstabelle."Feld 13" := 'Branchen fehlen!'
              END;
              Berichtstabelle.INSERT;
            END;
            REPEAT
              //*******************************************************************************************************
              //                                      Angebotszeilen schreiben
              //*******************************************************************************************************
              Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'BELEGZEILE';
              Berichtstabelle.Index := SalesLine."Document No.";
              Berichtstabelle."Belegnr." := SalesLine."Document No.";
              Berichtstabelle."Zeilennr." := SalesLine."Line No.";
              Berichtstabelle."Feld 3" := SalesLine."Artikelnr. 2";
              Berichtstabelle."Feld 4" := SalesLine.Quantity;
              Berichtstabelle."Feld 5" := SalesLine."Unit Price";
              IF Item.GET(SalesLine."No.") THEN BEGIN
                IF Item.Registrierbar THEN
                  Berichtstabelle."Feld 6" := 'R   ' + Item.Herstellerkurzname
                ELSE
                  Berichtstabelle."Feld 6" := Item.Herstellerkurzname;
              END;
              IF SalesHeader."Currency Code" = '' THEN
                Berichtstabelle."Feld 7" := '°'
              ELSE
                Berichtstabelle."Feld 7" := SalesHeader."Currency Code";
              Berichtstabelle."Feld 8" := SalesLine."Kampagnennr.";
              Berichtstabelle."Feld 10" := FORMAT(SalesLine.Amount);
              Berichtstabelle."Feld 11" := SalesLine."System Projektinfos";
              Berichtstabelle."Feld 12" := FORMAT(ROUND(SalesLine."Profit %",0.01));
              Berichtstabelle."Feld 13" := FORMAT(SalesLine."DC-Preis (EKW)");
              IF Quotedaten.GET(SalesLine."Quotenr.") THEN
                Berichtstabelle."Feld 14" := FORMAT(Quotedaten.Quotepreis);
              Berichtstabelle."Feld 15" := SalesLine.LZ_Text;
              Berichtstabelle."Feld 16" := SalesLine.Endkunde;
              Berichtstabelle."Feld 19" := SalesLine."No.";
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
              Berichtstabelle.User := USERID;
              Berichtstabelle.INSERT;
            UNTIL SalesLine.NEXT = 0;
          END;
          //*******************************************************************************************************
          //     Nachtr„glich alle anderen Daten schreiben, wenn auch wirklich Angebotszeilen vorhanden sind
          //*******************************************************************************************************
          IF belegzeilen_vorhanden THEN BEGIN
            //Angebotskopf
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'BELEGKOPF';
            Berichtstabelle.Index := SalesHeader."Sell-to Customer No.";
            Berichtstabelle.Datum := SalesHeader."Document Date";
            Berichtstabelle."Belegnr." := SalesHeader."No.";
            IF SalesHeader."Currency Code" = '' THEN
              Berichtstabelle."Feld 2" := '°'
            ELSE
              Berichtstabelle."Feld 2" :=  SalesHeader."Currency Code";
              //Berichtstabelle."Feld 3" := SalesHeader.Angebotsstatus;
            SalesHeader.CALCFIELDS(Amount);
            Berichtstabelle."Feld 4" := SalesHeader.Amount;
            Berichtstabelle."Feld 6" := SalesHeader."Betreuer Innendienst";
            Berichtstabelle."Feld 7" := SalesHeader."Salesperson Code";
            Berichtstabelle."Feld 8" := SalesHeader.Teams;
            Berichtstabelle."Feld 9" := SalesHeader."Territory Code";
            Berichtstabelle."Feld 10" := SalesHeader.Kontaktperson;
            Berichtstabelle."Feld 12" := FORMAT(SalesHeader.Status);
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
            //Projektdaten
            IF Campaign.GET(SalesHeader."Campaign No.") THEN BEGIN
              Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'PROJEKT';
              Berichtstabelle.Index := SalesHeader."No.";
              Berichtstabelle."Belegnr." := Campaign."No.";
              Berichtstabelle."Feld 1" := Campaign.Description;
              Berichtstabelle."Feld 4" := Campaign.Projektvolumen;
              Berichtstabelle."Feld 5" := Campaign.Projektwert;
              Berichtstabelle."Feld 8" := Campaign.Projektstatus;
              Berichtstabelle."Feld 9" := Campaign.Projektklasse;
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
              Berichtstabelle.User := USERID;
              Berichtstabelle.INSERT;
            END;
            //Aufgaben
            ToDo.RESET;
            ToDo.SETFILTER("System To-do Type",'%1',ToDo."System To-do Type"::Organizer);
            ToDo.SETFILTER("Belegnr.",'%1',SalesHeader."No.");
            IF ToDo.FINDFIRST THEN BEGIN
              Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'AUFGABE';
              Berichtstabelle.Index := SalesHeader."No.";
              Berichtstabelle."Belegnr." := ToDo."No.";
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
              Berichtstabelle.User := USERID;
              Berichtstabelle.INSERT;
              //Bemerkung
              Comment.RESET;
              Comment.SETFILTER("Table Name",'%1',Comment."Table Name"::"To-do");
              Comment.SETFILTER("No.",'%1',ToDo."No.");
              IF Comment.FINDFIRST THEN
                REPEAT
                  Berichtstabelle.INIT;
                  Berichtstabelle.Tabelle := 'BEMERKUNG';
                  Berichtstabelle.Index := ToDo."No.";
                  Berichtstabelle."Belegnr." := Comment."No.";
                  Berichtstabelle.Datum := Comment.Date;
                  Berichtstabelle."Zeilennr." := Comment."Line No.";
                  Berichtstabelle."Feld 1" := Comment.Comment;
                  IF Comment.Date <> 0D THEN
                    Berichtstabelle."Feld 10" := 'Bemerkung vom: ';
                  Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                  Berichtstabelle.User := USERID;
                  Berichtstabelle.INSERT;
                UNTIL Comment.NEXT = 0;
            END;
          END;
        UNTIL SalesHeader.NEXT = 0;
    END;

    PROCEDURE Arch_Angebote_listen@1140001();
    BEGIN
      //*******************************************************************************************************
      //                                Archivierte Angebote werden durchsucht
      //*******************************************************************************************************
      ArchSalesHeader.RESET;
      IF (Startdatum <> 0D) AND (Enddatum = 0D) THEN
        ArchSalesHeader.SETFILTER("Document Date",'>=%1',Startdatum);
      IF (Startdatum <> 0D) AND (Enddatum <> 0D) THEN
        ArchSalesHeader.SETFILTER("Document Date",'>=%1&<=%2',Startdatum,Enddatum);
      IF (Startdatum = 0D) AND (Enddatum <> 0D) THEN
        ArchSalesHeader.SETFILTER("Document Date",'<=%1',Enddatum);
      ArchSalesHeader.SETFILTER("Betreuer Innendienst",betreuer);
      ArchSalesHeader.SETFILTER("Salesperson Code",verk„ufer);
      ArchSalesHeader.SETFILTER(Teams,teams);
      ArchSalesHeader.SETFILTER("Territory Code",gebietscode);
      ArchSalesHeader.SETFILTER("Sell-to Country/Region Code",land);
      ArchSalesHeader.SETFILTER(Erledigtstatus,erledigt);
      ArchSalesHeader.SETFILTER("Document Type",'%1',ArchSalesHeader."Document Type" :: Quote);
      //Neue Zeile w/ doppelter Version
      ArchSalesHeader.SETFILTER("Version No.",'%1',1);
      IF ArchSalesHeader.FINDFIRST THEN
        REPEAT
          arch_belegzeilen_vorhanden := FALSE;
          ArchSalesLine.RESET;
          ArchSalesLine.SETFILTER("Document No.",ArchSalesHeader."No.");
          ArchSalesLine.SETFILTER(Type,'%1',ArchSalesLine.Type :: Item);
          ArchSalesLine.SETFILTER("Manufacturer Code",hersteller);
          // Neue Zeile w/ dopplter Version
          ArchSalesLine.SETFILTER("Version No.",'%1',1);
          IF ArchSalesLine.FINDFIRST THEN BEGIN
            arch_belegzeilen_vorhanden := TRUE;
            Berichtstabelle.RESET;
            Berichtstabelle.SETFILTER(Tabelle,'%1','ARCH_DEBITOR');
            Berichtstabelle.SETFILTER(Index,'%1',ArchSalesHeader."Sell-to Customer No.");
            IF NOT Berichtstabelle.FINDFIRST THEN BEGIN
              //*******************************************************************************************************
              //                                     Debitor Daten schreiben
              //*******************************************************************************************************
              Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'ARCH_DEBITOR';
              Berichtstabelle.Index := ArchSalesHeader."Sell-to Customer No.";
              Customer.GET(ArchSalesHeader."Sell-to Customer No.");
              Berichtstabelle."Feld 6" := Customer."Post Code";
              Berichtstabelle."Feld 10" := Customer.Name;
              Berichtstabelle."Feld 12" := Customer.City;
              Berichtstabelle."Feld 19" := Customer."Country/Region Code";
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
              Berichtstabelle.User := USERID;
              //*******************************************************************************************************
              //           Prfung, ob Bestcker oder H„ndler und ob berhaupt eine Branche hinterlegt ist
              //*******************************************************************************************************
              Cont_rel.RESET;
              Cont_rel.SETFILTER("No.",'%1',Customer."No.");
              Cont_rel.SETFILTER("Business Relation Code",'%1','DEB');
              IF Cont_rel.FINDFIRST THEN BEGIN
                Branche.RESET;
                Branche.SETFILTER("Contact No.",'%1',Cont_rel."Contact No.");
                IF Branche.FINDFIRST THEN BEGIN
                  Branche.SETFILTER("Industry Group Code",'%1|%2','BESTšCKER','HŽNDLER');
                  IF Branche.FINDFIRST THEN BEGIN
                    Berichtstabelle."Feld 13" := Branche."Industry Group Code";
                  END;
                END ELSE
                  Berichtstabelle."Feld 13" := 'Branchen fehlen!'
              END;
              Berichtstabelle.INSERT;
            END;
            REPEAT
              //*******************************************************************************************************
              //                                      Angebotszeilen schreiben
              //*******************************************************************************************************
              Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'ARCH_BELEGZEILE';
              Berichtstabelle.Index := ArchSalesLine."Document No.";
              Berichtstabelle."Belegnr." := ArchSalesLine."Document No.";
              Berichtstabelle."Zeilennr." := ArchSalesLine."Line No.";
              Berichtstabelle."Feld 3" := ArchSalesLine."Artikelnr. 2";
              Berichtstabelle."Feld 4" := ArchSalesLine.Quantity;
              Berichtstabelle."Feld 5" := ArchSalesLine."Unit Price";
              IF Item.GET(ArchSalesLine."No.") THEN BEGIN
                IF Item.Registrierbar THEN
                  Berichtstabelle."Feld 6" := 'R   ' + Item.Herstellerkurzname
                ELSE
                  Berichtstabelle."Feld 6" := Item.Herstellerkurzname;
              END;
              IF ArchSalesHeader."Currency Code" = '' THEN
                Berichtstabelle."Feld 7" := '°'
              ELSE
                Berichtstabelle."Feld 7" := ArchSalesHeader."Currency Code";
              Berichtstabelle."Feld 8" := ArchSalesLine."Kampagnennr.";
              Berichtstabelle."Feld 10" := FORMAT(ArchSalesLine.Amount);
              Berichtstabelle."Feld 11" := ArchSalesLine."System Projektinfos";
              Berichtstabelle."Feld 12" := FORMAT(ROUND(ArchSalesLine."Profit %",0.01));
              Berichtstabelle."Feld 13" := FORMAT(ArchSalesLine."DC-Preis (EKW)");
              IF Quotedaten.GET(ArchSalesLine."Quotenr.") THEN
                Berichtstabelle."Feld 14" := FORMAT(Quotedaten.Quotepreis);
              Berichtstabelle."Feld 15" := ArchSalesLine.LZ_Text;
              Berichtstabelle."Feld 16" := ArchSalesLine.Endkunde;
              Berichtstabelle."Feld 19" := ArchSalesLine."No.";
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
              Berichtstabelle.User := USERID;
              Berichtstabelle.INSERT;
            UNTIL ArchSalesLine.NEXT = 0;
          END;
          //*******************************************************************************************************
          //  Nachtr„glich alle anderen Daten schreiben, wenn auch wirklich arch. Angebotszeilen vorhanden sind
          //*******************************************************************************************************
          IF arch_belegzeilen_vorhanden THEN BEGIN
            //Arch. Angebotskopf
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'ARCH_BELEGKOPF';
            Berichtstabelle.Index := ArchSalesHeader."Sell-to Customer No.";
            Berichtstabelle.Datum := ArchSalesHeader."Document Date";
            Berichtstabelle."Belegnr." := ArchSalesHeader."No.";
            IF ArchSalesHeader."Currency Code" = '' THEN
              Berichtstabelle."Feld 2" := '°'
            ELSE
              Berichtstabelle."Feld 2" :=  ArchSalesHeader."Currency Code";
            //Berichtstabelle."Feld 3" := ArchSalesHeader.Angebotsstatus;
            ArchSalesHeader.CALCFIELDS(Amount);
            Berichtstabelle."Feld 4" := ArchSalesHeader.Amount;
            Berichtstabelle."Feld 6" := ArchSalesHeader."Betreuer Innendienst";
            Berichtstabelle."Feld 7" := ArchSalesHeader."Salesperson Code";
            Berichtstabelle."Feld 8" := ArchSalesHeader.Teams;
            Berichtstabelle."Feld 9" := ArchSalesHeader."Territory Code";
            Berichtstabelle."Feld 10" := ArchSalesHeader.Kontaktperson;
            Berichtstabelle."Feld 12" := FORMAT(ArchSalesHeader.Status);
            Berichtstabelle."Feld 19" := ArchSalesHeader.Erledigtstatus;
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
            //Projektdaten
            IF Campaign.GET(ArchSalesHeader."Campaign No.") THEN BEGIN
              Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'ARCH_PROJEKT';
              Berichtstabelle.Index := ArchSalesHeader."No.";
              Berichtstabelle."Belegnr." := Campaign."No.";
              Berichtstabelle."Feld 1" := Campaign.Description;
              Berichtstabelle."Feld 4" := Campaign.Projektvolumen;
              Berichtstabelle."Feld 5" := Campaign.Projektwert;
              Berichtstabelle."Feld 8" := Campaign.Projektstatus;
              Berichtstabelle."Feld 9" := Campaign.Projektklasse;
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
              Berichtstabelle.User := USERID;
              Berichtstabelle.INSERT;
            END;
            //Aufgaben
            ToDo.RESET;
            ToDo.SETFILTER("System To-do Type",'%1',ToDo."System To-do Type" :: Organizer);
            ToDo.SETFILTER("Arch. Belegnr.",'%1',ArchSalesHeader."No.");
            IF ToDo.FINDFIRST THEN BEGIN
              Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'ARCH_AUFGABE';
              Berichtstabelle.Index := ArchSalesHeader."No.";
              Berichtstabelle."Belegnr." := ToDo."No.";
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
              Berichtstabelle.User := USERID;
              Berichtstabelle.INSERT;
              //Bemerkung
              Comment.RESET;
              Comment.SETFILTER("Table Name",'%1',Comment."Table Name" :: "To-do");
              Comment.SETFILTER("No.",'%1',ToDo."No.");
              IF Comment.FINDFIRST THEN
                REPEAT
                  Berichtstabelle.INIT;
                  Berichtstabelle.Tabelle := 'ARCH_BEMERKUNG';
                  Berichtstabelle.Index := ToDo."No.";
                  Berichtstabelle."Belegnr." := Comment."No.";
                  Berichtstabelle.Datum := Comment.Date;
                  Berichtstabelle."Zeilennr." := Comment."Line No.";
                  Berichtstabelle."Feld 1" := Comment.Comment;
                  IF Comment.Date <> 0D THEN
                    Berichtstabelle."Feld 10" := 'Bemerkung vom: ';
                  Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                  Berichtstabelle.User := USERID;
                  Berichtstabelle.INSERT;
                UNTIL Comment.NEXT = 0;
            END;
          END;
        UNTIL ArchSalesHeader.NEXT = 0;
    END;

    LOCAL PROCEDURE CalcDateByFormula@39(Date@1000 : Date;CalcStartDate@1001 : Boolean;Period@1000000000 : Option) : Date;
    VAR
      Modificator@1002 : Text[1];
    BEGIN
      IF Date = 0D THEN
        EXIT(Date);
      CASE datefilter OF
        datefilter::LW:
          BEGIN
            IF CalcStartDate THEN
                Modificator := '-';
              EXIT(CALCDATE(STRSUBSTNO('<%1C%2>',Modificator,'W-1W'),Date));
          END;
      END;
      EXIT(Date);
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'CopySalesLine': CASE SectionId OF
          'Body7': OnPreSectionBelegzeile_Body7(Berichtstabelle_SalesLine);
          'Body8': OnPreSectionBelegzeile_Body8(Berichtstabelle_SalesLine);
          'Body10': OnPreSectionBelegzeile_Body10(Berichtstabelle_SalesLine);
        END;
        'CopyArchCustomer': CASE SectionId OF
          'Header12': OnPreSectionArch_Debitor_Header12(Berichtstabelle_Customer);
        END;
        'CopyArchSalesLine': CASE SectionId OF
          'Body18': OnPreSectionArch_Belegzeile_Body18(Berichtstabelle_SalesLine);
          'Body19': OnPreSectionArch_Belegzeile_Body19(Berichtstabelle_SalesLine);
          'Body21': OnPreSectionArch_Belegzeile_Body21(Berichtstabelle_SalesLine);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    {
      #############################################
      20.04.18 ST - Umstellung auf Berichtstabelle Temporary YES
      Es kann beim Neu Generieren des Layouts (Run > Open Designer) zu Probleme beim Speichern kommen, diese dann einfach ignorieren und das die
      ReportForNav::OnPreSection Aufrufe durch die jeweiligen DataItems ausgetauscht werden, das fhrt dann zu Problemen beim Compilieren
      Workaround: Die šbergabe Parameter mssen auf die jeweiligen Berichtstabellen Variablen umgestellt werden
      z.B. 'Body18': OnPreSectionArch_Belegzeile_Body18(Berichtstabelle_SalesLine);
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>c1db58db-f398-49aa-9424-f62b3b6c36b0</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>f0927528-923b-4873-90b4-1aaf6b84810b</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Teams">
          <DataField>Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Teams</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="Feld19_Debitor">
          <DataField>Feld19_Debitor</DataField>
        </Field>
        <Field Name="Feld13_Debitor">
          <DataField>Feld13_Debitor</DataField>
        </Field>
        <Field Name="Feld9_Belegkopf">
          <DataField>Feld9_Belegkopf</DataField>
        </Field>
        <Field Name="Feld6_Debitor">
          <DataField>Feld6_Debitor</DataField>
        </Field>
        <Field Name="Index_Belegkopf">
          <DataField>Index_Belegkopf</DataField>
        </Field>
        <Field Name="Feld10_Debitor">
          <DataField>Feld10_Debitor</DataField>
        </Field>
        <Field Name="Feld12_Debitor">
          <DataField>Feld12_Debitor</DataField>
        </Field>
        <Field Name="Feld7_Belegkopf">
          <DataField>Feld7_Belegkopf</DataField>
        </Field>
        <Field Name="Feld6_Belegkopf">
          <DataField>Feld6_Belegkopf</DataField>
        </Field>
        <Field Name="Feld2_Belegkopf">
          <DataField>Feld2_Belegkopf</DataField>
        </Field>
        <Field Name="Feld12_Belegkopf">
          <DataField>Feld12_Belegkopf</DataField>
        </Field>
        <Field Name="Feld10_Belegkopf">
          <DataField>Feld10_Belegkopf</DataField>
        </Field>
        <Field Name="Belegnr_Belegkopf">
          <DataField>Belegnr_Belegkopf</DataField>
        </Field>
        <Field Name="Feld3_Belegkopf">
          <DataField>Feld3_Belegkopf</DataField>
        </Field>
        <Field Name="Feld4_Belegkopf">
          <DataField>Feld4_Belegkopf</DataField>
        </Field>
        <Field Name="Feld4_BelegkopfFormat">
          <DataField>Feld4_BelegkopfFormat</DataField>
        </Field>
        <Field Name="Datum_Belegkopf">
          <DataField>Datum_Belegkopf</DataField>
        </Field>
        <Field Name="Feld4_Projekte">
          <DataField>Feld4_Projekte</DataField>
        </Field>
        <Field Name="Feld4_ProjekteFormat">
          <DataField>Feld4_ProjekteFormat</DataField>
        </Field>
        <Field Name="Feld9_Projekte">
          <DataField>Feld9_Projekte</DataField>
        </Field>
        <Field Name="Feld1_Projekte">
          <DataField>Feld1_Projekte</DataField>
        </Field>
        <Field Name="Feld5_Projekte">
          <DataField>Feld5_Projekte</DataField>
        </Field>
        <Field Name="Feld5_ProjekteFormat">
          <DataField>Feld5_ProjekteFormat</DataField>
        </Field>
        <Field Name="Feld8_Projekte">
          <DataField>Feld8_Projekte</DataField>
        </Field>
        <Field Name="Belegnr_Projekte">
          <DataField>Belegnr_Projekte</DataField>
        </Field>
        <Field Name="Feld10_Bemerkung">
          <DataField>Feld10_Bemerkung</DataField>
        </Field>
        <Field Name="Feld1_Bemerkung">
          <DataField>Feld1_Bemerkung</DataField>
        </Field>
        <Field Name="Datum_Bemerkung">
          <DataField>Datum_Bemerkung</DataField>
        </Field>
        <Field Name="Feld16_Belegzeile">
          <DataField>Feld16_Belegzeile</DataField>
        </Field>
        <Field Name="Feld11_Belegzeile">
          <DataField>Feld11_Belegzeile</DataField>
        </Field>
        <Field Name="Feld8_Belegzeile">
          <DataField>Feld8_Belegzeile</DataField>
        </Field>
        <Field Name="Feld14_Belegzeile">
          <DataField>Feld14_Belegzeile</DataField>
        </Field>
        <Field Name="Feld13_Belegzeile">
          <DataField>Feld13_Belegzeile</DataField>
        </Field>
        <Field Name="Feld7_Belegzeile">
          <DataField>Feld7_Belegzeile</DataField>
        </Field>
        <Field Name="Feld10_Belegzeile">
          <DataField>Feld10_Belegzeile</DataField>
        </Field>
        <Field Name="Feld6_Belegzeile">
          <DataField>Feld6_Belegzeile</DataField>
        </Field>
        <Field Name="Feld3_Belegzeile">
          <DataField>Feld3_Belegzeile</DataField>
        </Field>
        <Field Name="Feld4_Belegzeile">
          <DataField>Feld4_Belegzeile</DataField>
        </Field>
        <Field Name="Feld4_BelegzeileFormat">
          <DataField>Feld4_BelegzeileFormat</DataField>
        </Field>
        <Field Name="Feld5_Belegzeile">
          <DataField>Feld5_Belegzeile</DataField>
        </Field>
        <Field Name="Feld5_BelegzeileFormat">
          <DataField>Feld5_BelegzeileFormat</DataField>
        </Field>
        <Field Name="Feld12_Belegzeile">
          <DataField>Feld12_Belegzeile</DataField>
        </Field>
        <Field Name="Feld15_Belegzeile">
          <DataField>Feld15_Belegzeile</DataField>
        </Field>
        <Field Name="ItemDescription__ItemDescription2">
          <DataField>ItemDescription__ItemDescription2</DataField>
        </Field>
        <Field Name="TODAY_0_42">
          <DataField>TODAY_0_42</DataField>
        </Field>
        <Field Name="USERID2">
          <DataField>USERID2</DataField>
        </Field>
        <Field Name="Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Team2">
          <DataField>Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Team2</DataField>
        </Field>
        <Field Name="ReportForNavPageNo2">
          <DataField>ReportForNavPageNo2</DataField>
        </Field>
        <Field Name="Feld19_Arch_Debitor">
          <DataField>Feld19_Arch_Debitor</DataField>
        </Field>
        <Field Name="Feld13_Arch_Debitor">
          <DataField>Feld13_Arch_Debitor</DataField>
        </Field>
        <Field Name="Feld9_Arch_Belegkopf">
          <DataField>Feld9_Arch_Belegkopf</DataField>
        </Field>
        <Field Name="Feld6_Arch_Debitor">
          <DataField>Feld6_Arch_Debitor</DataField>
        </Field>
        <Field Name="Index_Arch_Belegkopf">
          <DataField>Index_Arch_Belegkopf</DataField>
        </Field>
        <Field Name="Feld10_Arch_Debitor">
          <DataField>Feld10_Arch_Debitor</DataField>
        </Field>
        <Field Name="Feld12_Arch_Debitor">
          <DataField>Feld12_Arch_Debitor</DataField>
        </Field>
        <Field Name="Feld7_Arch_Belegkopf">
          <DataField>Feld7_Arch_Belegkopf</DataField>
        </Field>
        <Field Name="Feld6_Arch_Belegkopf">
          <DataField>Feld6_Arch_Belegkopf</DataField>
        </Field>
        <Field Name="Feld2_Arch_Belegkopf">
          <DataField>Feld2_Arch_Belegkopf</DataField>
        </Field>
        <Field Name="Feld10_Arch_Belegkopf">
          <DataField>Feld10_Arch_Belegkopf</DataField>
        </Field>
        <Field Name="Belegnr_Arch_Belegkopf">
          <DataField>Belegnr_Arch_Belegkopf</DataField>
        </Field>
        <Field Name="Feld19_Arch_Belegkopf">
          <DataField>Feld19_Arch_Belegkopf</DataField>
        </Field>
        <Field Name="Feld4_Arch_Belegkopf">
          <DataField>Feld4_Arch_Belegkopf</DataField>
        </Field>
        <Field Name="Feld4_Arch_BelegkopfFormat">
          <DataField>Feld4_Arch_BelegkopfFormat</DataField>
        </Field>
        <Field Name="Datum_Arch_Belegkopf">
          <DataField>Datum_Arch_Belegkopf</DataField>
        </Field>
        <Field Name="Feld4_Arch_Projekte">
          <DataField>Feld4_Arch_Projekte</DataField>
        </Field>
        <Field Name="Feld4_Arch_ProjekteFormat">
          <DataField>Feld4_Arch_ProjekteFormat</DataField>
        </Field>
        <Field Name="Feld9_Arch_Projekte">
          <DataField>Feld9_Arch_Projekte</DataField>
        </Field>
        <Field Name="Feld1_Arch_Projekte">
          <DataField>Feld1_Arch_Projekte</DataField>
        </Field>
        <Field Name="Feld5_Arch_Projekte">
          <DataField>Feld5_Arch_Projekte</DataField>
        </Field>
        <Field Name="Feld5_Arch_ProjekteFormat">
          <DataField>Feld5_Arch_ProjekteFormat</DataField>
        </Field>
        <Field Name="Feld8_Arch_Projekte">
          <DataField>Feld8_Arch_Projekte</DataField>
        </Field>
        <Field Name="Belegnr_Arch_Projekte">
          <DataField>Belegnr_Arch_Projekte</DataField>
        </Field>
        <Field Name="Feld10_Arch_Bemerkung">
          <DataField>Feld10_Arch_Bemerkung</DataField>
        </Field>
        <Field Name="Feld1_Arch_Bemerkung">
          <DataField>Feld1_Arch_Bemerkung</DataField>
        </Field>
        <Field Name="Datum_Arch_Bemerkung">
          <DataField>Datum_Arch_Bemerkung</DataField>
        </Field>
        <Field Name="Feld16_Arch_Belegzeile">
          <DataField>Feld16_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld11_Arch_Belegzeile">
          <DataField>Feld11_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld8_Arch_Belegzeile">
          <DataField>Feld8_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld14_Arch_Belegzeile">
          <DataField>Feld14_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld13_Arch_Belegzeile">
          <DataField>Feld13_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld7_Arch_Belegzeile">
          <DataField>Feld7_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld10_Arch_Belegzeile">
          <DataField>Feld10_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld6_Arch_Belegzeile">
          <DataField>Feld6_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld3_Arch_Belegzeile">
          <DataField>Feld3_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld4_Arch_Belegzeile">
          <DataField>Feld4_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld4_Arch_BelegzeileFormat">
          <DataField>Feld4_Arch_BelegzeileFormat</DataField>
        </Field>
        <Field Name="Feld5_Arch_Belegzeile">
          <DataField>Feld5_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld5_Arch_BelegzeileFormat">
          <DataField>Feld5_Arch_BelegzeileFormat</DataField>
        </Field>
        <Field Name="Feld12_Arch_Belegzeile">
          <DataField>Feld12_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld15_Arch_Belegzeile">
          <DataField>Feld15_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="ItemDescription__ItemDescription22">
          <DataField>ItemDescription__ItemDescription22</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

