OBJECT Report 50047 Meeting - Musterauftr„ge
{
  OBJECT-PROPERTIES
  {
    Date=23.01.18;
    Time=09:38:48;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  filter := 'Betreuer: ' + var_betreuer + ', Verk„ufercode: ' + var_verk„ufer +
                  ', Teams: ' + var_team + ',Gebietscode: ' + var_gebiet + ' ,Belegdatum: ' + FORMAT(var_datum_von) + '..' + FORMAT(var_datum_bis);

                  //*******************************************************************************************************
                  //                                   Einstellungen werden geprft
                  //*******************************************************************************************************
                  IF checkbtnmuster = TRUE THEN
                    Suche_Muster;
                  IF checkbtnleih = TRUE THEN
                    Suche_Leihstellungen;

                  Berichtstabelle_Projekt.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Muster.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Bemerkung.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Zeilen.COPY(Berichtstabelle,TRUE);

                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1000000000;;DataItem;CopyHeader        ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle.RESET;
                               Berichtstabelle.SETCURRENTKEY("Feld 10",Datum,Index);
                               Berichtstabelle.SETFILTER(Tabelle,'%1|%2','LIEFERKOPF','LEIHSTELLUNG');
                               SETRANGE(Number,1,Berichtstabelle.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle.NEXT;
                                  END;
                                END;
                                 }

    { 2   ;1   ;Column  ;TODAY_0_4           ;
               IncludeCaption=No;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 3   ;1   ;Column  ;USERID              ;
               IncludeCaption=No;
               SourceExpr=USERID }

    { 4   ;1   ;Column  ;filter              ;
               IncludeCaption=No;
               SourceExpr=filter }

    { 5   ;1   ;Column  ;ReportForNavPageNo  ;
               IncludeCaption=No;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 6   ;1   ;Column  ;Feld16_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 16" }

    { 7   ;1   ;Column  ;Feld15_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 15" }

    { 8   ;1   ;Column  ;Feld14_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 14" }

    { 9   ;1   ;Column  ;Feld2_Lieferkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 2" }

    { 10  ;1   ;Column  ;Feld13_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 13" }

    { 11  ;1   ;Column  ;Feld10_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 10" }

    { 12  ;1   ;Column  ;Feld19_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 19" }

    { 13  ;1   ;Column  ;Feld18_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 18" }

    { 14  ;1   ;Column  ;Feld7_Lieferkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 7" }

    { 15  ;1   ;Column  ;Feld6_Lieferkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 6" }

    { 16  ;1   ;Column  ;Feld4_Lieferkopf    ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 4" }

    { 17  ;1   ;Column  ;Feld3_Lieferkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 3" }

    { 18  ;1   ;Column  ;Datum_Lieferkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle.Datum }

    { 19  ;1   ;Column  ;Belegnr_Lieferkopf  ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Belegnr." }

    { 20  ;1   ;Column  ;Feld9_Lieferkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 9" }

    { 1000000001;1;DataItem;CopyProject      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Projekt.RESET;
                               Berichtstabelle_Projekt.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Projekt.SETFILTER(Tabelle,'%1','PROJEKT');
                               Berichtstabelle_Projekt.SETFILTER(Index,'%1',Berichtstabelle.Index);
                               SETRANGE(Number,1,Berichtstabelle_Projekt.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Projekt.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Projekt.NEXT;
                                  END;
                                END;
                                 }

    { 22  ;2   ;Column  ;Feld10_Projekt      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Feld 10" }

    { 23  ;2   ;Column  ;Feld4_Projekt       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Feld 4" }

    { 24  ;2   ;Column  ;Feld9_Projekt       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Feld 9" }

    { 25  ;2   ;Column  ;Feld1_Projekt       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Feld 1" }

    { 26  ;2   ;Column  ;Feld5_Projekt       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Feld 5" }

    { 27  ;2   ;Column  ;Feld8_Projekt       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Feld 8" }

    { 28  ;2   ;Column  ;Belegnr_Projekt     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Belegnr." }

    { 1000000002;1;DataItem;CopyMusterberwachung;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Muster.RESET;
                               Berichtstabelle_Muster.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Muster.SETFILTER(Tabelle,'%1','MšWACH');
                               Berichtstabelle_Muster.SETFILTER(Index,'%1',Berichtstabelle.Index);
                               SETRANGE(Number,1,Berichtstabelle_Muster.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Muster.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Muster.NEXT;
                                  END;
                                END;
                                 }

    { 30  ;2   ;Column  ;Feld1_Musteruberwachung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Muster."Feld 1" }

    { 31  ;2   ;Column  ;Feld13_Musteruberwachung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Muster."Feld 13" }

    { 32  ;2   ;Column  ;Feld4_Musteruberwachung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Muster."Feld 4" }

    { 33  ;2   ;Column  ;Feld12_Musteruberwachung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Muster."Feld 12" }

    { 34  ;2   ;Column  ;Feld10_Musteruberwachung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Muster."Feld 10" }

    { 1000000003;1;DataItem;CopyComment      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Bemerkung.RESET;
                               Berichtstabelle_Bemerkung.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Bemerkung.SETFILTER(Tabelle,'%1','BEMERKUNG');
                               Berichtstabelle_Bemerkung.SETFILTER(Index,'%1',Berichtstabelle.Index);
                               SETRANGE(Number,1,Berichtstabelle_Bemerkung.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Bemerkung.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Bemerkung.NEXT;
                                  END;

                                  IF Berichtstabelle_Bemerkung."Zeilennr." = 10000 THEN
                                    bemerkungstext := 'Bemerkung vom:'
                                  ELSE
                                    bemerkungstext := '';
                                END;
                                 }

    { 36  ;2   ;Column  ;bemerkungstext      ;
               IncludeCaption=No;
               SourceExpr=bemerkungstext }

    { 37  ;2   ;Column  ;Datum_Bemerkung     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Bemerkung.Datum }

    { 38  ;2   ;Column  ;Feld1_Bemerkung     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Bemerkung."Feld 1" }

    { 1000000004;1;DataItem;CopyLine         ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Zeilen.RESET;
                               Berichtstabelle_Zeilen.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Zeilen.SETFILTER(Tabelle,'%1','LIEFERZEILE');
                               Berichtstabelle_Zeilen.SETFILTER(Index,'%1',Berichtstabelle.Index);
                               SETRANGE(Number,1,Berichtstabelle_Zeilen.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Zeilen.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Zeilen.NEXT;
                                  END;
                                END;
                                 }

    { 40  ;2   ;Column  ;Feld6_Lieferzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Zeilen."Feld 6" }

    { 41  ;2   ;Column  ;Feld3_Lieferzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Zeilen."Feld 3" }

    { 42  ;2   ;Column  ;Feld4_Lieferzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Zeilen."Feld 4" }

    { 43  ;2   ;Column  ;Feld5_Lieferzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Zeilen."Feld 5" }

    { 44  ;2   ;Column  ;Feld13_Lieferzeile  ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Zeilen."Feld 13" }

    { 45  ;2   ;Column  ;Feld10_Lieferzeile  ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Zeilen."Feld 10" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140011;2;Field     ;
                  CaptionML=DEU=Musterauftr„ge;
                  SourceExpr=checkbtnmuster }

      { 1140013;2;Field     ;
                  CaptionML=DEU=Leihstellungen;
                  SourceExpr=checkbtnleih }

      { 1140016;2;Field     ;
                  CaptionML=DEU=Belegdatum von;
                  SourceExpr=var_datum_von }

      { 1140018;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=var_datum_bis }

      { 1140003;2;Field     ;
                  CaptionML=DEU=Betreuer Innendienst;
                  SourceExpr=var_betreuer;
                  TableRelation=Salesperson/Purchaser }

      { 1140005;2;Field     ;
                  CaptionML=DEU=Verk„ufercode;
                  SourceExpr=var_verk„ufer;
                  TableRelation=Salesperson/Purchaser }

      { 1140009;2;Field     ;
                  CaptionML=DEU=Teams;
                  SourceExpr=var_team;
                  TableRelation=Team }

      { 1140002;2;Field     ;
                  CaptionML=DEU=Gebietscode;
                  SourceExpr=var_gebiet;
                  TableRelation=Territory }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      var_betreuer@1140001 : Code[20];
      var_verk„ufer@1140002 : Code[20];
      var_gebiet@1140006 : Code[20];
      var_team@1140019 : Code[20];
      var_datum_von@1140015 : Date;
      var_datum_bis@1140016 : Date;
      checkbtnmuster@1140020 : Boolean;
      checkbtnleih@1140000 : Boolean;
      anzeige@1140018 : Boolean;
      z„hler@1140005 : Decimal;
      Berichtstabelle@1140003 : TEMPORARY Record 50037;
      Berichtstabelle_Projekt@1000000000 : TEMPORARY Record 50037;
      Berichtstabelle_Muster@1000000001 : TEMPORARY Record 50037;
      Berichtstabelle_Bemerkung@1000000002 : TEMPORARY Record 50037;
      Berichtstabelle_Zeilen@1000000003 : TEMPORARY Record 50037;
      Proj@1140007 : Record 5071;
      "Ek-Preise"@1140004 : Record 7012;
      bemerkungstext@1140010 : Text[30];
      kundenklasse@1140011 : Text[30];
      filter@1140012 : Text[250];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionLieferkopf_Body2@5013(VAR Lieferkopf@1000000000 : Record 50037);
    BEGIN
      WITH Lieferkopf DO BEGIN
        ReportForNav.ShowOutput(Tabelle = 'LEIHSTELLUNG');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionLieferkopf_Body3@5014(VAR Lieferkopf@1000000000 : Record 50037);
    BEGIN
      WITH Lieferkopf DO BEGIN
        ReportForNav.ShowOutput(Tabelle = 'LEIHSTELLUNG');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionLieferkopf_Body4@5015(VAR Lieferkopf@1000000000 : Record 50037);
    BEGIN
      WITH Lieferkopf DO BEGIN
        ReportForNav.ShowOutput(Tabelle = 'LIEFERKOPF');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionLieferkopf_Body5@5016(VAR Lieferkopf@1000000000 : Record 50037);
    BEGIN
      WITH Lieferkopf DO BEGIN
        ReportForNav.ShowOutput(Tabelle = 'LIEFERKOPF');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionProjekt_Body6@5017(VAR Projekt@1000000000 : Record 50037);
    BEGIN
      WITH Projekt DO BEGIN
        ReportForNav.ShowOutput(Berichtstabelle."Feld 2" <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMusteruberwachung_Body7@5018(VAR Musterberwachung@1000000000 : Record 50037);
    BEGIN
      WITH Musterberwachung DO BEGIN
        ReportForNav.ShowOutput(Berichtstabelle."Feld 2" = '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionLieferzeile_Body10@5019(VAR Lieferzeile@1000000000 : Record 50037);
    BEGIN
      WITH Lieferzeile DO BEGIN
        ReportForNav.ShowOutput("Feld 17" = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionLieferzeile_Body11@5020(VAR Lieferzeile@1000000000 : Record 50037);
    BEGIN
      WITH Lieferzeile DO BEGIN
        ReportForNav.ShowOutput("Feld 17" = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionLieferzeile_Body12@5021(VAR Lieferzeile@1000000000 : Record 50037);
    BEGIN
      WITH Lieferzeile DO BEGIN
        ReportForNav.ShowOutput("Feld 10" <> '' );
      END;
    END;

    PROCEDURE Suche_Muster@1140013();
    VAR
      Liefkopf@1140000 : Record 110;
      Liefzeile@1140007 : Record 111;
      Aufgaben@1140003 : Record 5080;
      Bemerkungszeilen@1140004 : Record 5061;
      Muster@1140006 : Record 50029;
      Hersteller@1140005 : Record 5720;
      Artikel@1140008 : Record 27;
      kont_verb@1140001 : Record 5054;
      branche@1140002 : Record 5058;
    BEGIN
      //*******************************************************************************************************
      //                               Verkaufslieferk”pfe werden untersucht
      //*******************************************************************************************************
      Liefkopf.RESET;
      Liefkopf.SETFILTER("Location Code",'%1','MUST');
      Liefkopf.SETFILTER("Betreuer Innendienst",var_betreuer);
      Liefkopf.SETFILTER("Salesperson Code",var_verk„ufer);
      Liefkopf.SETFILTER(Teams,var_team);
      Liefkopf.SETFILTER("Territory Code",var_gebiet);
      IF (var_datum_von<>0D) AND (var_datum_bis=0D) THEN
        Liefkopf.SETFILTER("Posting Date",'>=%1',var_datum_von);
      IF (var_datum_von<>0D) AND (var_datum_bis<>0D) THEN
        Liefkopf.SETFILTER("Posting Date",'>=%1&<=%2',var_datum_von,var_datum_bis);
      IF (var_datum_von=0D) AND (var_datum_bis<>0D) THEN
        Liefkopf.SETFILTER("Posting Date",'<=%1',var_datum_bis);
      IF Liefkopf.FINDFIRST THEN BEGIN
        REPEAT
          Berichtstabelle.INIT;
          Berichtstabelle.Tabelle := 'LIEFERKOPF';
          Berichtstabelle.Index := Liefkopf."No.";
          Berichtstabelle.Datum := Liefkopf."Posting Date";
          Berichtstabelle."Belegnr." := Liefkopf."Order No.";
          Berichtstabelle."Feld 2" := Liefkopf."Campaign No.";
          Berichtstabelle."Feld 3" := Liefkopf."Sell-to Post Code";
          Berichtstabelle."Feld 6" := Liefkopf."Betreuer Innendienst";
          Berichtstabelle."Feld 7" := Liefkopf."Salesperson Code";
          Berichtstabelle."Feld 9" := Liefkopf."Territory Code";
          Berichtstabelle."Feld 10" := Liefkopf."Sell-to Customer Name";
          Berichtstabelle."Feld 13" := Liefkopf."Sell-to City";
          //Branche wird geprft
          kont_verb.RESET;
          kont_verb.SETRANGE("No.",Liefkopf."Sell-to Customer No.");
          kont_verb.SETRANGE("Business Relation Code",'DEB');
          IF kont_verb.FINDFIRST THEN BEGIN
            branche.RESET;
            branche.SETRANGE("Contact No.",kont_verb."Contact No.");
            IF branche.FINDFIRST THEN BEGIN
              branche.SETFILTER(branche."Industry Group Code",'%1|%2','BESTšCKER','HŽNDLER');
              IF branche.FINDFIRST THEN BEGIN
                Berichtstabelle."Feld 14" := branche."Industry Group Code";
              END;
            END ELSE
              Berichtstabelle."Feld 16" := 'Branche fehlt!'
          END;
          Berichtstabelle."Feld 15" := Liefkopf."Your Reference";
          Berichtstabelle."Feld 19" := Liefkopf."Sell-to Customer No.";
          Berichtstabelle.Uhrzeit := CURRENTDATETIME;
          Berichtstabelle.User := USERID;
          Berichtstabelle.INSERT;
      //*******************************************************************************************************
      //                                 Projekt Verbindung wird untersucht
      //*******************************************************************************************************
          IF Proj.GET(Liefkopf."Campaign No.") THEN BEGIN
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'PROJEKT';
            Berichtstabelle.Index := Liefkopf."No.";
            Berichtstabelle."Belegnr." := Proj."No.";
            Berichtstabelle."Feld 1" := Proj.Description;
            Berichtstabelle."Feld 4" := Proj.Projektvolumen;
            Berichtstabelle."Feld 5" := Proj.Projektwert;
            Berichtstabelle."Feld 8" := Proj.Projektstatus;
            Berichtstabelle."Feld 9" := Proj.Projektklasse;
            Berichtstabelle."Feld 10" := Proj.Applikation;
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
          END;
      //*******************************************************************************************************
      //                                     Aufgaben werden untersucht
      //*******************************************************************************************************
          Aufgaben.RESET;
          Aufgaben.SETRANGE("System To-do Type",Aufgaben."System To-do Type" :: Organizer);
          Aufgaben.SETRANGE("Arch. Belegnr.",Liefkopf."Order No.");
          IF Aufgaben.FINDFIRST THEN BEGIN
            Bemerkungszeilen.RESET;
            Bemerkungszeilen.SETRANGE("Table Name",Bemerkungszeilen."Table Name" :: "To-do");
            Bemerkungszeilen.SETRANGE("No.",Aufgaben."No.");
            IF Bemerkungszeilen.FINDFIRST THEN BEGIN
              REPEAT
                Berichtstabelle.INIT;
                Berichtstabelle.Tabelle := 'BEMERKUNG';
                Berichtstabelle.Index := Liefkopf."No.";
                Berichtstabelle.Datum := Bemerkungszeilen.Date;
                Berichtstabelle."Belegnr." := Aufgaben."No.";
                Berichtstabelle."Zeilennr." := Bemerkungszeilen."Line No.";
                Berichtstabelle."Feld 1" := Bemerkungszeilen.Comment;
                Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                Berichtstabelle.User := USERID;
                Berichtstabelle.INSERT;
              UNTIL Bemerkungszeilen.NEXT = 0;
            END;
          END;
      //*******************************************************************************************************
      //                               Musterberwachung wird untersucht
      //*******************************************************************************************************
          Muster.RESET;
          Muster.SETRANGE(Nr,Liefkopf."Order No.");
          IF Muster.FINDFIRST THEN        BEGIN
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'MšWACH';
            Berichtstabelle.Index := Liefkopf."No.";
            Berichtstabelle."Belegnr." := Muster.Nr;
            Berichtstabelle."Feld 1" := Muster.Projektname;
            Berichtstabelle."Feld 4" := Muster."Anzahl pro System";
            Berichtstabelle."Feld 10" := Muster.Applikation;
            Berichtstabelle."Feld 12" := Muster.Potenzial;
            Berichtstabelle."Feld 13" := FORMAT(Muster.Status);
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
          END;
          Muster.RESET;
          Muster.SETRANGE("Arch. Belegnr.",Liefkopf."Order No.");
          IF Muster.FINDFIRST THEN BEGIN
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'MšWACH';
            Berichtstabelle.Index := Liefkopf."No.";
            Berichtstabelle."Belegnr." := Muster.Nr;
            Berichtstabelle."Feld 1" := Muster.Projektname;
            Berichtstabelle."Feld 4" := Muster."Anzahl pro System";
            Berichtstabelle."Feld 10" := Muster.Applikation;
            Berichtstabelle."Feld 12" := Muster.Potenzial;
            Berichtstabelle."Feld 13" := FORMAT(Muster.Status);
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
          END;
      //*******************************************************************************************************
      //                               Verkaufslieferzeile wird untersucht
      //*******************************************************************************************************
          Liefzeile.RESET;
          Liefzeile.SETFILTER(Type,'%1',Liefzeile.Type :: Item);
          Liefzeile.SETFILTER("Document No.",'%1',Liefkopf."No.");
          Liefzeile.SETFILTER(Quantity,'>%1',0);
          IF Liefzeile.FINDFIRST THEN
            REPEAT
              Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'LIEFERZEILE';
              Berichtstabelle.Index := Liefkopf."No.";
              Berichtstabelle."Belegnr." := Liefkopf."No.";
              Berichtstabelle."Zeilennr." := Liefzeile."Line No.";
              Berichtstabelle."Feld 3" := Liefzeile."Artikelnr. 2";
              Berichtstabelle."Feld 4" := Liefzeile.Quantity;
              Berichtstabelle."Feld 5" := Liefzeile."DC-Preis (EKW)";
              //Herstellerkurzname wird hinzugefgt
              IF Hersteller.GET(Liefzeile."Manufacturer Code") THEN
                Berichtstabelle."Feld 6" := Hersteller.Herstellerkurzname;
              Berichtstabelle."Feld 10" := Liefzeile.Endkunde;
              IF Artikel.GET(Liefzeile."No.") THEN BEGIN
                "Ek-Preise".RESET;
                "Ek-Preise".SETRANGE("Item No.",Artikel."No.");
                IF "Ek-Preise".FINDLAST THEN
                  Berichtstabelle."Feld 13" := FORMAT("Ek-Preise"."Direct Unit Cost")
                ELSE
                  Berichtstabelle."Feld 13" := FORMAT(0);
                Berichtstabelle."Feld 17" := Artikel.Registrierbar;
              END;
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
              Berichtstabelle.User := USERID;
              Berichtstabelle.INSERT;
            UNTIL Liefzeile.NEXT = 0;
        UNTIL Liefkopf.NEXT = 0;
      END;
    END;

    PROCEDURE Suche_Leihstellungen@1140014();
    VAR
      Leihstellung@1140000 : Record 50024;
      Debitor@1140001 : Record 18;
      wandeln@1140002 : Boolean;
    BEGIN
      IF (var_datum_von<>0D) AND (var_datum_bis=0D) THEN
        Leihstellung.SETFILTER("Ablaufdatum Serviceleistung",'>=%1',var_datum_von);
      IF (var_datum_von<>0D) AND (var_datum_bis<>0D) THEN
        Leihstellung.SETFILTER("Ablaufdatum Serviceleistung",'>=%1&<=%2',var_datum_von,var_datum_bis);
      IF (var_datum_von=0D) AND (var_datum_bis<>0D) THEN
        Leihstellung.SETFILTER("Ablaufdatum Serviceleistung",'<=%1',var_datum_bis);
      Leihstellung.SETFILTER(Art,'%1',Leihstellung.Art :: Leihstellung);
      IF Leihstellung.FINDFIRST THEN
        REPEAT
          wandeln := FALSE;
          Debitor.RESET;
          Debitor.SETFILTER("No.",Leihstellung."Debitornr.");
          Debitor.SETFILTER("Betreuer Innendienst",var_betreuer);
          Debitor.SETFILTER("Salesperson Code",var_verk„ufer);
          Debitor.SETFILTER(Teams,var_team);
          Debitor.SETFILTER("Territory Code",var_gebiet);
          IF Debitor.FINDFIRST THEN
            wandeln := TRUE
          ELSE BEGIN
            Debitor.RESET;
            IF Debitor.GET(Leihstellung."Debitornr.") THEN BEGIN
              IF (Debitor."Betreuer Innendienst" = 'MULTI') AND (Debitor."Salesperson Code" = 'MULTI') THEN BEGIN
                IF Proj.GET(Leihstellung."Kampagnennr.") THEN BEGIN
                  Proj.RESET;
                  Proj.SETFILTER("Betreuer Innendienst",var_betreuer);
                  Proj.SETFILTER("Salesperson Code",var_verk„ufer);
                  Proj.SETFILTER(Teams,var_team);
                  Proj.SETFILTER("Territory Code",var_gebiet);
                  Proj.SETFILTER("No.",Leihstellung."Kampagnennr.");
                  IF Proj.FINDFIRST THEN
                    wandeln := TRUE;
                END;
              END;
            END;
          END;
          IF wandeln = TRUE THEN BEGIN
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'LEIHSTELLUNG';
            Berichtstabelle.Index := Leihstellung."Lfd. Nr.";
            Berichtstabelle."Belegnr." := Leihstellung."Lfd. Nr.";
            Berichtstabelle.Datum := Leihstellung.Belegdatum;
            Berichtstabelle."Feld 3" := Leihstellung."Artikelnr. 2";
            Berichtstabelle."Feld 4" := Leihstellung.Menge;
            Berichtstabelle."Feld 6" := Leihstellung."Seriennr.";
            Berichtstabelle."Feld 7" := Leihstellung."Kampagnennr.";
            Berichtstabelle."Feld 10" := Debitor.Name;
            Berichtstabelle."Feld 13" := Debitor.City;
            Berichtstabelle."Feld 14" := Debitor."Betreuer Innendienst";
            Berichtstabelle."Feld 15" := Debitor."Salesperson Code";
            Berichtstabelle."Feld 16" := Debitor."Territory Code";
            Berichtstabelle."Feld 2" := Debitor."Post Code";
            Berichtstabelle."Feld 19" := Debitor."No.";
            Berichtstabelle."Feld 18" := Leihstellung."Ablaufdatum Serviceleistung";
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
          END;
        UNTIL Leihstellung.NEXT = 0;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'CopyHeader': CASE SectionId OF
          'Body2': OnPreSectionLieferkopf_Body2(Berichtstabelle);
          'Body3': OnPreSectionLieferkopf_Body3(Berichtstabelle);
          'Body4': OnPreSectionLieferkopf_Body4(Berichtstabelle);
          'Body5': OnPreSectionLieferkopf_Body5(Berichtstabelle);
        END;
        'CopyProject': CASE SectionId OF
          'Body6': OnPreSectionProjekt_Body6(Berichtstabelle_Projekt);
        END;
        'CopyMusteruberwachung': CASE SectionId OF
          'Body7': OnPreSectionMusteruberwachung_Body7(Berichtstabelle_Muster);
        END;
        'CopyLine': CASE SectionId OF
          'Body10': OnPreSectionLieferzeile_Body10(Berichtstabelle_Zeilen);
          'Body11': OnPreSectionLieferzeile_Body11(Berichtstabelle_Zeilen);
          'Body12': OnPreSectionLieferzeile_Body12(Berichtstabelle_Zeilen);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>10f450a1-f3b2-427c-9232-f42da6ac31b8</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>e08d495d-1434-43bf-ba47-eae6d144cfdf</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="filter">
          <DataField>filter</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="Feld16_Lieferkopf">
          <DataField>Feld16_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld15_Lieferkopf">
          <DataField>Feld15_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld14_Lieferkopf">
          <DataField>Feld14_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld2_Lieferkopf">
          <DataField>Feld2_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld13_Lieferkopf">
          <DataField>Feld13_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld10_Lieferkopf">
          <DataField>Feld10_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld19_Lieferkopf">
          <DataField>Feld19_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld18_Lieferkopf">
          <DataField>Feld18_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld7_Lieferkopf">
          <DataField>Feld7_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld6_Lieferkopf">
          <DataField>Feld6_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld4_Lieferkopf">
          <DataField>Feld4_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld4_LieferkopfFormat">
          <DataField>Feld4_LieferkopfFormat</DataField>
        </Field>
        <Field Name="Feld3_Lieferkopf">
          <DataField>Feld3_Lieferkopf</DataField>
        </Field>
        <Field Name="Datum_Lieferkopf">
          <DataField>Datum_Lieferkopf</DataField>
        </Field>
        <Field Name="Belegnr_Lieferkopf">
          <DataField>Belegnr_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld9_Lieferkopf">
          <DataField>Feld9_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld10_Projekt">
          <DataField>Feld10_Projekt</DataField>
        </Field>
        <Field Name="Feld4_Projekt">
          <DataField>Feld4_Projekt</DataField>
        </Field>
        <Field Name="Feld4_ProjektFormat">
          <DataField>Feld4_ProjektFormat</DataField>
        </Field>
        <Field Name="Feld9_Projekt">
          <DataField>Feld9_Projekt</DataField>
        </Field>
        <Field Name="Feld1_Projekt">
          <DataField>Feld1_Projekt</DataField>
        </Field>
        <Field Name="Feld5_Projekt">
          <DataField>Feld5_Projekt</DataField>
        </Field>
        <Field Name="Feld5_ProjektFormat">
          <DataField>Feld5_ProjektFormat</DataField>
        </Field>
        <Field Name="Feld8_Projekt">
          <DataField>Feld8_Projekt</DataField>
        </Field>
        <Field Name="Belegnr_Projekt">
          <DataField>Belegnr_Projekt</DataField>
        </Field>
        <Field Name="Feld1_Musteruberwachung">
          <DataField>Feld1_Musteruberwachung</DataField>
        </Field>
        <Field Name="Feld13_Musteruberwachung">
          <DataField>Feld13_Musteruberwachung</DataField>
        </Field>
        <Field Name="Feld4_Musteruberwachung">
          <DataField>Feld4_Musteruberwachung</DataField>
        </Field>
        <Field Name="Feld4_MusteruberwachungFormat">
          <DataField>Feld4_MusteruberwachungFormat</DataField>
        </Field>
        <Field Name="Feld12_Musteruberwachung">
          <DataField>Feld12_Musteruberwachung</DataField>
        </Field>
        <Field Name="Feld10_Musteruberwachung">
          <DataField>Feld10_Musteruberwachung</DataField>
        </Field>
        <Field Name="bemerkungstext">
          <DataField>bemerkungstext</DataField>
        </Field>
        <Field Name="Datum_Bemerkung">
          <DataField>Datum_Bemerkung</DataField>
        </Field>
        <Field Name="Feld1_Bemerkung">
          <DataField>Feld1_Bemerkung</DataField>
        </Field>
        <Field Name="Feld6_Lieferzeile">
          <DataField>Feld6_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld3_Lieferzeile">
          <DataField>Feld3_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld4_Lieferzeile">
          <DataField>Feld4_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld4_LieferzeileFormat">
          <DataField>Feld4_LieferzeileFormat</DataField>
        </Field>
        <Field Name="Feld5_Lieferzeile">
          <DataField>Feld5_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld5_LieferzeileFormat">
          <DataField>Feld5_LieferzeileFormat</DataField>
        </Field>
        <Field Name="Feld13_Lieferzeile">
          <DataField>Feld13_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld10_Lieferzeile">
          <DataField>Feld10_Lieferzeile</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

