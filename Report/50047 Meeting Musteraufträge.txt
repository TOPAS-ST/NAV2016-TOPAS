OBJECT Report 50047 Meeting - Musterauftr„ge
{
  OBJECT-PROPERTIES
  {
    Date=15.11.21;
    Time=11:12:46;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  filter := 'Betreuer: ' + var_betreuer + ', Verk„ufercode: ' + var_verk„ufer +
                  ', Teams: ' + var_team + ',Gebietscode: ' + var_gebiet + ' ,Belegdatum: ' + FORMAT(var_datum_von) + '..' + FORMAT(var_datum_bis);

                  //*******************************************************************************************************
                  //                                   Einstellungen werden geprft
                  //*******************************************************************************************************
                  IF checkbtnmuster = TRUE THEN
                    Suche_Muster;
                  IF checkbtnleih = TRUE THEN
                    Suche_Leihstellungen;

                  Berichtstabelle_Projekt.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Muster.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Bemerkung.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Zeilen.COPY(Berichtstabelle,TRUE);

                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1000000000;;DataItem;CopyHeader        ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle.RESET;
                               Berichtstabelle.SETCURRENTKEY("Feld 10",Datum,Index);
                               Berichtstabelle.SETFILTER(Tabelle,'%1|%2','LIEFERKOPF','LEIHSTELLUNG');
                               SETRANGE(Number,1,Berichtstabelle.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle.NEXT;
                                  END;
                                END;
                                 }

    { 2   ;1   ;Column  ;TODAY_0_4           ;
               IncludeCaption=No;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 3   ;1   ;Column  ;USERID              ;
               IncludeCaption=No;
               SourceExpr=USERID }

    { 4   ;1   ;Column  ;filter              ;
               IncludeCaption=No;
               SourceExpr=filter }

    { 5   ;1   ;Column  ;ReportForNavPageNo  ;
               IncludeCaption=No;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 6   ;1   ;Column  ;Feld16_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 16" }

    { 7   ;1   ;Column  ;Feld15_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 15" }

    { 8   ;1   ;Column  ;Feld14_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 14" }

    { 9   ;1   ;Column  ;Feld2_Lieferkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 2" }

    { 10  ;1   ;Column  ;Feld13_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 13" }

    { 11  ;1   ;Column  ;Feld10_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 10" }

    { 12  ;1   ;Column  ;Feld19_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 19" }

    { 13  ;1   ;Column  ;Feld18_Lieferkopf   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 18" }

    { 14  ;1   ;Column  ;Feld7_Lieferkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 7" }

    { 15  ;1   ;Column  ;Feld6_Lieferkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 6" }

    { 16  ;1   ;Column  ;Feld4_Lieferkopf    ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 4" }

    { 17  ;1   ;Column  ;Feld3_Lieferkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 3" }

    { 18  ;1   ;Column  ;Datum_Lieferkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle.Datum }

    { 19  ;1   ;Column  ;Belegnr_Lieferkopf  ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Belegnr." }

    { 20  ;1   ;Column  ;Feld9_Lieferkopf    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle."Feld 9" }

    { 1000000001;1;DataItem;CopyProject      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Projekt.RESET;
                               Berichtstabelle_Projekt.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Projekt.SETFILTER(Tabelle,'%1','PROJEKT');
                               Berichtstabelle_Projekt.SETFILTER(Index,'%1',Berichtstabelle.Index);
                               SETRANGE(Number,1,Berichtstabelle_Projekt.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Projekt.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Projekt.NEXT;
                                  END;
                                END;
                                 }

    { 22  ;2   ;Column  ;Feld10_Projekt      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Feld 10" }

    { 23  ;2   ;Column  ;Feld4_Projekt       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Feld 4" }

    { 24  ;2   ;Column  ;Feld9_Projekt       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Feld 9" }

    { 25  ;2   ;Column  ;Feld1_Projekt       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Feld 1" }

    { 26  ;2   ;Column  ;Feld5_Projekt       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Feld 5" }

    { 27  ;2   ;Column  ;Feld8_Projekt       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Feld 8" }

    { 28  ;2   ;Column  ;Belegnr_Projekt     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Projekt."Belegnr." }

    { 1000000002;1;DataItem;CopyMusterberwachung;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Muster.RESET;
                               Berichtstabelle_Muster.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Muster.SETFILTER(Tabelle,'%1','MšWACH');
                               Berichtstabelle_Muster.SETFILTER(Index,'%1',Berichtstabelle.Index);
                               SETRANGE(Number,1,Berichtstabelle_Muster.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Muster.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Muster.NEXT;
                                  END;
                                END;
                                 }

    { 30  ;2   ;Column  ;Feld1_Musteruberwachung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Muster."Feld 1" }

    { 31  ;2   ;Column  ;Feld13_Musteruberwachung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Muster."Feld 13" }

    { 32  ;2   ;Column  ;Feld4_Musteruberwachung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Muster."Feld 4" }

    { 33  ;2   ;Column  ;Feld12_Musteruberwachung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Muster."Feld 12" }

    { 34  ;2   ;Column  ;Feld10_Musteruberwachung;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Muster."Feld 10" }

    { 1000000003;1;DataItem;CopyComment      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Bemerkung.RESET;
                               Berichtstabelle_Bemerkung.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Bemerkung.SETFILTER(Tabelle,'%1','BEMERKUNG');
                               Berichtstabelle_Bemerkung.SETFILTER(Index,'%1',Berichtstabelle.Index);
                               SETRANGE(Number,1,Berichtstabelle_Bemerkung.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Bemerkung.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Bemerkung.NEXT;
                                  END;

                                  IF Berichtstabelle_Bemerkung."Zeilennr." = 10000 THEN
                                    bemerkungstext := 'Bemerkung vom:'
                                  ELSE
                                    bemerkungstext := '';
                                END;
                                 }

    { 36  ;2   ;Column  ;bemerkungstext      ;
               IncludeCaption=No;
               SourceExpr=bemerkungstext }

    { 37  ;2   ;Column  ;Datum_Bemerkung     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Bemerkung.Datum }

    { 38  ;2   ;Column  ;Feld1_Bemerkung     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Bemerkung."Feld 1" }

    { 1000000004;1;DataItem;CopyLine         ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=FILTER(>0));
               OnPreDataItem=BEGIN
                               Berichtstabelle_Zeilen.RESET;
                               Berichtstabelle_Zeilen.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Zeilen.SETFILTER(Tabelle,'%1','LIEFERZEILE');
                               Berichtstabelle_Zeilen.SETFILTER(Index,'%1',Berichtstabelle.Index);
                               SETRANGE(Number,1,Berichtstabelle_Zeilen.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Zeilen.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Zeilen.NEXT;
                                  END;
                                END;
                                 }

    { 40  ;2   ;Column  ;Feld6_Lieferzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Zeilen."Feld 6" }

    { 41  ;2   ;Column  ;Feld3_Lieferzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Zeilen."Feld 3" }

    { 42  ;2   ;Column  ;Feld4_Lieferzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Zeilen."Feld 4" }

    { 43  ;2   ;Column  ;Feld5_Lieferzeile   ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Zeilen."Feld 5" }

    { 44  ;2   ;Column  ;Feld13_Lieferzeile  ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Zeilen."Feld 13" }

    { 45  ;2   ;Column  ;Feld10_Lieferzeile  ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Zeilen."Feld 10" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140011;2;Field     ;
                  CaptionML=DEU=Musterauftr„ge;
                  SourceExpr=checkbtnmuster }

      { 1140013;2;Field     ;
                  CaptionML=DEU=Leihstellungen;
                  SourceExpr=checkbtnleih }

      { 1140016;2;Field     ;
                  CaptionML=DEU=Belegdatum von;
                  SourceExpr=var_datum_von }

      { 1140018;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=var_datum_bis }

      { 1140003;2;Field     ;
                  CaptionML=DEU=Betreuer Innendienst;
                  SourceExpr=var_betreuer;
                  TableRelation=Salesperson/Purchaser }

      { 1140005;2;Field     ;
                  CaptionML=DEU=Verk„ufercode;
                  SourceExpr=var_verk„ufer;
                  TableRelation=Salesperson/Purchaser }

      { 1140009;2;Field     ;
                  CaptionML=DEU=Teams;
                  SourceExpr=var_team;
                  TableRelation=Team }

      { 1140002;2;Field     ;
                  CaptionML=DEU=Gebietscode;
                  SourceExpr=var_gebiet;
                  TableRelation=Territory }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      var_betreuer@1140001 : Code[20];
      var_verk„ufer@1140002 : Code[20];
      var_gebiet@1140006 : Code[20];
      var_team@1140019 : Code[20];
      var_datum_von@1140015 : Date;
      var_datum_bis@1140016 : Date;
      checkbtnmuster@1140020 : Boolean;
      checkbtnleih@1140000 : Boolean;
      anzeige@1140018 : Boolean;
      z„hler@1140005 : Decimal;
      Berichtstabelle@1140003 : TEMPORARY Record 50037;
      Berichtstabelle_Projekt@1000000000 : TEMPORARY Record 50037;
      Berichtstabelle_Muster@1000000001 : TEMPORARY Record 50037;
      Berichtstabelle_Bemerkung@1000000002 : TEMPORARY Record 50037;
      Berichtstabelle_Zeilen@1000000003 : TEMPORARY Record 50037;
      Proj@1140007 : Record 5071;
      "Ek-Preise"@1140004 : Record 7012;
      bemerkungstext@1140010 : Text[30];
      kundenklasse@1140011 : Text[30];
      filter@1140012 : Text[250];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionCopyHeader_Body2@1000000041(VAR CopyHeader@1000000000 : Record 50037);
    BEGIN
      WITH CopyHeader DO BEGIN
        ReportForNav.ShowOutput(Tabelle = 'LEIHSTELLUNG');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionCopyHeader_Body3@1000000042(VAR CopyHeader@1000000000 : Record 50037);
    BEGIN
      WITH CopyHeader DO BEGIN
        ReportForNav.ShowOutput(Tabelle = 'LEIHSTELLUNG');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionCopyHeader_Body4@1000000043(VAR CopyHeader@1000000000 : Record 50037);
    BEGIN
      WITH CopyHeader DO BEGIN
        ReportForNav.ShowOutput(Tabelle = 'LIEFERKOPF');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionCopyHeader_Body5@1000000044(VAR CopyHeader@1000000000 : Record 50037);
    BEGIN
      WITH CopyHeader DO BEGIN
        ReportForNav.ShowOutput(Tabelle = 'LIEFERKOPF');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionCopyProject_Body6@1000000045(VAR CopyProject@1000000000 : Record 50037);
    BEGIN
      WITH CopyProject DO BEGIN
        ReportForNav.ShowOutput(Berichtstabelle."Feld 2" <> '');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionCopyMusteruberwachung_Body7@1000000046(VAR CopyMusterberwachung@1000000000 : Record 50037);
    BEGIN
      WITH CopyMusterberwachung DO BEGIN
        ReportForNav.ShowOutput(Berichtstabelle."Feld 2" = '');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionCopyLine_Body10@1000000047(VAR CopyLine@1000000000 : Record 50037);
    BEGIN
      WITH CopyLine DO BEGIN
        ReportForNav.ShowOutput("Feld 17" = FALSE);
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionCopyLine_Body11@1000000048(VAR CopyLine@1000000000 : Record 50037);
    BEGIN
      WITH CopyLine DO BEGIN
        ReportForNav.ShowOutput("Feld 17" = TRUE);
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionCopyLine_Body12@1000000049(VAR CopyLine@1000000000 : Record 50037);
    BEGIN
      WITH CopyLine DO BEGIN
        ReportForNav.ShowOutput("Feld 10" <> '' );
      END;// Autogenerated by ForNav;
    END;

    PROCEDURE Suche_Muster@1140013();
    VAR
      Liefkopf@1140000 : Record 110;
      Liefzeile@1140007 : Record 111;
      Aufgaben@1140003 : Record 5080;
      Bemerkungszeilen@1140004 : Record 5061;
      Muster@1140006 : Record 50029;
      Hersteller@1140005 : Record 5720;
      Artikel@1140008 : Record 27;
      kont_verb@1140001 : Record 5054;
      branche@1140002 : Record 5058;
    BEGIN
      //*******************************************************************************************************
      //                               Verkaufslieferk”pfe werden untersucht
      //*******************************************************************************************************
      Liefkopf.RESET;
      Liefkopf.SETFILTER("Location Code",'%1','MUST');
      Liefkopf.SETFILTER("Betreuer Innendienst",var_betreuer);
      Liefkopf.SETFILTER("Salesperson Code",var_verk„ufer);
      Liefkopf.SETFILTER(Teams,var_team);
      Liefkopf.SETFILTER("Territory Code",var_gebiet);
      IF (var_datum_von<>0D) AND (var_datum_bis=0D) THEN
        Liefkopf.SETFILTER("Posting Date",'>=%1',var_datum_von);
      IF (var_datum_von<>0D) AND (var_datum_bis<>0D) THEN
        Liefkopf.SETFILTER("Posting Date",'>=%1&<=%2',var_datum_von,var_datum_bis);
      IF (var_datum_von=0D) AND (var_datum_bis<>0D) THEN
        Liefkopf.SETFILTER("Posting Date",'<=%1',var_datum_bis);
      IF Liefkopf.FINDFIRST THEN BEGIN
        REPEAT
          Berichtstabelle.INIT;
          Berichtstabelle.Tabelle := 'LIEFERKOPF';
          Berichtstabelle.Index := Liefkopf."No.";
          Berichtstabelle.Datum := Liefkopf."Posting Date";
          Berichtstabelle."Belegnr." := Liefkopf."Order No.";
          Berichtstabelle."Feld 2" := Liefkopf."Campaign No.";
          Berichtstabelle."Feld 3" := Liefkopf."Sell-to Post Code";
          Berichtstabelle."Feld 6" := Liefkopf."Betreuer Innendienst";
          Berichtstabelle."Feld 7" := Liefkopf."Salesperson Code";
          Berichtstabelle."Feld 9" := Liefkopf."Territory Code";
          Berichtstabelle."Feld 10" := Liefkopf."Sell-to Customer Name";
          Berichtstabelle."Feld 13" := Liefkopf."Sell-to City";
          //Branche wird geprft
          kont_verb.RESET;
          kont_verb.SETRANGE("No.",Liefkopf."Sell-to Customer No.");
          kont_verb.SETRANGE("Business Relation Code",'DEB');
          IF kont_verb.FINDFIRST THEN BEGIN
            branche.RESET;
            branche.SETRANGE("Contact No.",kont_verb."Contact No.");
            IF branche.FINDFIRST THEN BEGIN
              branche.SETFILTER(branche."Industry Group Code",'%1|%2','BESTšCKER','HŽNDLER');
              IF branche.FINDFIRST THEN BEGIN
                Berichtstabelle."Feld 14" := branche."Industry Group Code";
              END;
            END ELSE
              Berichtstabelle."Feld 16" := 'Branche fehlt!'
          END;
          Berichtstabelle."Feld 15" := Liefkopf."Your Reference";
          Berichtstabelle."Feld 19" := Liefkopf."Sell-to Customer No.";
          Berichtstabelle.Uhrzeit := CURRENTDATETIME;
          Berichtstabelle.User := USERID;
          Berichtstabelle.INSERT;
      //*******************************************************************************************************
      //                                 Projekt Verbindung wird untersucht
      //*******************************************************************************************************
          IF Proj.GET(Liefkopf."Campaign No.") THEN BEGIN
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'PROJEKT';
            Berichtstabelle.Index := Liefkopf."No.";
            Berichtstabelle."Belegnr." := Proj."No.";
            Berichtstabelle."Feld 1" := Proj.Description;
            Berichtstabelle."Feld 4" := Proj.Projektvolumen;
            Berichtstabelle."Feld 5" := Proj.Projektwert;
            Berichtstabelle."Feld 8" := Proj.Projektstatus;
            Berichtstabelle."Feld 9" := Proj.Projektklasse;
            Berichtstabelle."Feld 10" := Proj.Applikation;
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
          END;
      //*******************************************************************************************************
      //                                     Aufgaben werden untersucht
      //*******************************************************************************************************
          Aufgaben.RESET;
          Aufgaben.SETRANGE("System To-do Type",Aufgaben."System To-do Type" :: Organizer);
          Aufgaben.SETRANGE("Arch. Belegnr.",Liefkopf."Order No.");
          IF Aufgaben.FINDFIRST THEN BEGIN
            Bemerkungszeilen.RESET;
            Bemerkungszeilen.SETRANGE("Table Name",Bemerkungszeilen."Table Name" :: "To-do");
            Bemerkungszeilen.SETRANGE("No.",Aufgaben."No.");
            IF Bemerkungszeilen.FINDFIRST THEN BEGIN
              REPEAT
                Berichtstabelle.INIT;
                Berichtstabelle.Tabelle := 'BEMERKUNG';
                Berichtstabelle.Index := Liefkopf."No.";
                Berichtstabelle.Datum := Bemerkungszeilen.Date;
                Berichtstabelle."Belegnr." := Aufgaben."No.";
                Berichtstabelle."Zeilennr." := Bemerkungszeilen."Line No.";
                Berichtstabelle."Feld 1" := Bemerkungszeilen.Comment;
                Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                Berichtstabelle.User := USERID;
                Berichtstabelle.INSERT;
              UNTIL Bemerkungszeilen.NEXT = 0;
            END;
          END;
      //*******************************************************************************************************
      //                               Musterberwachung wird untersucht
      //*******************************************************************************************************
          Muster.RESET;
          Muster.SETRANGE(Nr,Liefkopf."Order No.");
          IF Muster.FINDFIRST THEN        BEGIN
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'MšWACH';
            Berichtstabelle.Index := Liefkopf."No.";
            Berichtstabelle."Belegnr." := Muster.Nr;
            Berichtstabelle."Feld 1" := Muster.Projektname;
            Berichtstabelle."Feld 4" := Muster."Anzahl pro System";
            Berichtstabelle."Feld 10" := Muster.Applikation;
            Berichtstabelle."Feld 12" := Muster.Potenzial;
            Berichtstabelle."Feld 13" := FORMAT(Muster.Status);
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
          END;
          Muster.RESET;
          Muster.SETRANGE("Arch. Belegnr.",Liefkopf."Order No.");
          IF Muster.FINDFIRST THEN BEGIN
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'MšWACH';
            Berichtstabelle.Index := Liefkopf."No.";
            Berichtstabelle."Belegnr." := Muster.Nr;
            Berichtstabelle."Feld 1" := Muster.Projektname;
            Berichtstabelle."Feld 4" := Muster."Anzahl pro System";
            Berichtstabelle."Feld 10" := Muster.Applikation;
            Berichtstabelle."Feld 12" := Muster.Potenzial;
            Berichtstabelle."Feld 13" := FORMAT(Muster.Status);
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
          END;
      //*******************************************************************************************************
      //                               Verkaufslieferzeile wird untersucht
      //*******************************************************************************************************
          Liefzeile.RESET;
          Liefzeile.SETFILTER(Type,'%1',Liefzeile.Type :: Item);
          Liefzeile.SETFILTER("Document No.",'%1',Liefkopf."No.");
          Liefzeile.SETFILTER(Quantity,'>%1',0);
          IF Liefzeile.FINDFIRST THEN
            REPEAT
              Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'LIEFERZEILE';
              Berichtstabelle.Index := Liefkopf."No.";
              Berichtstabelle."Belegnr." := Liefkopf."No.";
              Berichtstabelle."Zeilennr." := Liefzeile."Line No.";
              Berichtstabelle."Feld 3" := Liefzeile."Artikelnr. 2";
              Berichtstabelle."Feld 4" := Liefzeile.Quantity;
              Berichtstabelle."Feld 5" := Liefzeile."DC-Preis (EKW)";
              //Herstellerkurzname wird hinzugefgt
              IF Hersteller.GET(Liefzeile."Manufacturer Code") THEN
                Berichtstabelle."Feld 6" := Hersteller.Herstellerkurzname;
              Berichtstabelle."Feld 10" := Liefzeile.Endkunde;
              IF Artikel.GET(Liefzeile."No.") THEN BEGIN
                "Ek-Preise".RESET;
                "Ek-Preise".SETRANGE("Item No.",Artikel."No.");
                IF "Ek-Preise".FINDLAST THEN
                  Berichtstabelle."Feld 13" := FORMAT("Ek-Preise"."Direct Unit Cost")
                ELSE
                  Berichtstabelle."Feld 13" := FORMAT(0);
                Berichtstabelle."Feld 17" := Artikel.Registrierbar;
              END;
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
              Berichtstabelle.User := USERID;
              Berichtstabelle.INSERT;
            UNTIL Liefzeile.NEXT = 0;
        UNTIL Liefkopf.NEXT = 0;
      END;
    END;

    PROCEDURE Suche_Leihstellungen@1140014();
    VAR
      Leihstellung@1140000 : Record 50024;
      Debitor@1140001 : Record 18;
      wandeln@1140002 : Boolean;
    BEGIN
      IF (var_datum_von<>0D) AND (var_datum_bis=0D) THEN
        Leihstellung.SETFILTER("Ablaufdatum Serviceleistung",'>=%1',var_datum_von);
      IF (var_datum_von<>0D) AND (var_datum_bis<>0D) THEN
        Leihstellung.SETFILTER("Ablaufdatum Serviceleistung",'>=%1&<=%2',var_datum_von,var_datum_bis);
      IF (var_datum_von=0D) AND (var_datum_bis<>0D) THEN
        Leihstellung.SETFILTER("Ablaufdatum Serviceleistung",'<=%1',var_datum_bis);
      Leihstellung.SETFILTER(Art,'%1',Leihstellung.Art :: Leihstellung);
      IF Leihstellung.FINDFIRST THEN
        REPEAT
          wandeln := FALSE;
          Debitor.RESET;
          Debitor.SETFILTER("No.",Leihstellung."Debitornr.");
          Debitor.SETFILTER("Betreuer Innendienst",var_betreuer);
          Debitor.SETFILTER("Salesperson Code",var_verk„ufer);
          Debitor.SETFILTER(Teams,var_team);
          Debitor.SETFILTER("Territory Code",var_gebiet);
          IF Debitor.FINDFIRST THEN
            wandeln := TRUE
          ELSE BEGIN
            Debitor.RESET;
            IF Debitor.GET(Leihstellung."Debitornr.") THEN BEGIN
              IF (Debitor."Betreuer Innendienst" = 'MULTI') AND (Debitor."Salesperson Code" = 'MULTI') THEN BEGIN
                IF Proj.GET(Leihstellung."Kampagnennr.") THEN BEGIN
                  Proj.RESET;
                  Proj.SETFILTER("Betreuer Innendienst",var_betreuer);
                  Proj.SETFILTER("Salesperson Code",var_verk„ufer);
                  Proj.SETFILTER(Teams,var_team);
                  Proj.SETFILTER("Territory Code",var_gebiet);
                  Proj.SETFILTER("No.",Leihstellung."Kampagnennr.");
                  IF Proj.FINDFIRST THEN
                    wandeln := TRUE;
                END;
              END;
            END;
          END;
          IF wandeln = TRUE THEN BEGIN
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'LEIHSTELLUNG';
            Berichtstabelle.Index := Leihstellung."Lfd. Nr.";
            Berichtstabelle."Belegnr." := Leihstellung."Lfd. Nr.";
            Berichtstabelle.Datum := Leihstellung.Belegdatum;
            Berichtstabelle."Feld 3" := Leihstellung."Artikelnr. 2";
            Berichtstabelle."Feld 4" := Leihstellung.Menge;
            Berichtstabelle."Feld 6" := Leihstellung."Seriennr.";
            Berichtstabelle."Feld 7" := Leihstellung."Kampagnennr.";
            Berichtstabelle."Feld 10" := Debitor.Name;
            Berichtstabelle."Feld 13" := Debitor.City;
            Berichtstabelle."Feld 14" := Debitor."Betreuer Innendienst";
            Berichtstabelle."Feld 15" := Debitor."Salesperson Code";
            Berichtstabelle."Feld 16" := Debitor."Territory Code";
            Berichtstabelle."Feld 2" := Debitor."Post Code";
            Berichtstabelle."Feld 19" := Debitor."No.";
            Berichtstabelle."Feld 18" := Leihstellung."Ablaufdatum Serviceleistung";
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
          END;
        UNTIL Leihstellung.NEXT = 0;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'CopyHeader': CASE SectionId OF
          'Body2': OnPreSectionCopyHeader_Body2(Berichtstabelle);
          'Body3': OnPreSectionCopyHeader_Body3(Berichtstabelle);
          'Body4': OnPreSectionCopyHeader_Body4(Berichtstabelle);
          'Body5': OnPreSectionCopyHeader_Body5(Berichtstabelle);
        END;
        'CopyProject': CASE SectionId OF
          'Body6': OnPreSectionCopyProject_Body6(Berichtstabelle_Projekt);
        END;
        'CopyMusteruberwachung': CASE SectionId OF
          'Body7': OnPreSectionCopyMusteruberwachung_Body7(Berichtstabelle_Muster);
        END;
        'CopyLine': CASE SectionId OF
          'Body10': OnPreSectionCopyLine_Body10(Berichtstabelle_Zeilen);
          'Body11': OnPreSectionCopyLine_Body11(Berichtstabelle_Zeilen);
          'Body12': OnPreSectionCopyLine_Body12(Berichtstabelle_Zeilen);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="filter">
          <DataField>filter</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="Feld16_Lieferkopf">
          <DataField>Feld16_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld15_Lieferkopf">
          <DataField>Feld15_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld14_Lieferkopf">
          <DataField>Feld14_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld2_Lieferkopf">
          <DataField>Feld2_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld13_Lieferkopf">
          <DataField>Feld13_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld10_Lieferkopf">
          <DataField>Feld10_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld19_Lieferkopf">
          <DataField>Feld19_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld18_Lieferkopf">
          <DataField>Feld18_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld7_Lieferkopf">
          <DataField>Feld7_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld6_Lieferkopf">
          <DataField>Feld6_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld4_Lieferkopf">
          <DataField>Feld4_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld4_LieferkopfFormat">
          <DataField>Feld4_LieferkopfFormat</DataField>
        </Field>
        <Field Name="Feld3_Lieferkopf">
          <DataField>Feld3_Lieferkopf</DataField>
        </Field>
        <Field Name="Datum_Lieferkopf">
          <DataField>Datum_Lieferkopf</DataField>
        </Field>
        <Field Name="Belegnr_Lieferkopf">
          <DataField>Belegnr_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld9_Lieferkopf">
          <DataField>Feld9_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld10_Projekt">
          <DataField>Feld10_Projekt</DataField>
        </Field>
        <Field Name="Feld4_Projekt">
          <DataField>Feld4_Projekt</DataField>
        </Field>
        <Field Name="Feld4_ProjektFormat">
          <DataField>Feld4_ProjektFormat</DataField>
        </Field>
        <Field Name="Feld9_Projekt">
          <DataField>Feld9_Projekt</DataField>
        </Field>
        <Field Name="Feld1_Projekt">
          <DataField>Feld1_Projekt</DataField>
        </Field>
        <Field Name="Feld5_Projekt">
          <DataField>Feld5_Projekt</DataField>
        </Field>
        <Field Name="Feld5_ProjektFormat">
          <DataField>Feld5_ProjektFormat</DataField>
        </Field>
        <Field Name="Feld8_Projekt">
          <DataField>Feld8_Projekt</DataField>
        </Field>
        <Field Name="Belegnr_Projekt">
          <DataField>Belegnr_Projekt</DataField>
        </Field>
        <Field Name="Feld1_Musteruberwachung">
          <DataField>Feld1_Musteruberwachung</DataField>
        </Field>
        <Field Name="Feld13_Musteruberwachung">
          <DataField>Feld13_Musteruberwachung</DataField>
        </Field>
        <Field Name="Feld4_Musteruberwachung">
          <DataField>Feld4_Musteruberwachung</DataField>
        </Field>
        <Field Name="Feld4_MusteruberwachungFormat">
          <DataField>Feld4_MusteruberwachungFormat</DataField>
        </Field>
        <Field Name="Feld12_Musteruberwachung">
          <DataField>Feld12_Musteruberwachung</DataField>
        </Field>
        <Field Name="Feld10_Musteruberwachung">
          <DataField>Feld10_Musteruberwachung</DataField>
        </Field>
        <Field Name="bemerkungstext">
          <DataField>bemerkungstext</DataField>
        </Field>
        <Field Name="Datum_Bemerkung">
          <DataField>Datum_Bemerkung</DataField>
        </Field>
        <Field Name="Feld1_Bemerkung">
          <DataField>Feld1_Bemerkung</DataField>
        </Field>
        <Field Name="Feld6_Lieferzeile">
          <DataField>Feld6_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld3_Lieferzeile">
          <DataField>Feld3_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld4_Lieferzeile">
          <DataField>Feld4_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld4_LieferzeileFormat">
          <DataField>Feld4_LieferzeileFormat</DataField>
        </Field>
        <Field Name="Feld5_Lieferzeile">
          <DataField>Feld5_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld5_LieferzeileFormat">
          <DataField>Feld5_LieferzeileFormat</DataField>
        </Field>
        <Field Name="Feld13_Lieferzeile">
          <DataField>Feld13_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld10_Lieferzeile">
          <DataField>Feld10_Lieferzeile</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

