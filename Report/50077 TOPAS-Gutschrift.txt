OBJECT Report 50077 TOPAS-Gutschrift
{
  OBJECT-PROPERTIES
  {
    Date=05.07.24;
    Time=13:20:18;
    Modified=Yes;
    Version List=Beleg,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table114;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufsgutschrift;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo",Picture);
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  //25.04.2012-ST
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesCrMemoBillTo(DebAdr,"Sales Cr.Memo Header");
                                  IF "Applies-to Doc. No." = '' THEN
                                    AusgleichText := ''
                                  ELSE
                                    AusgleichText := STRSUBSTNO('(Ausgleich fr %1 %2)',"Applies-to Doc. Type","Applies-to Doc. No.");
                                  FormatAdr.SalesCrMemoShipTo(LieferAnAdr,"Sales Cr.Memo Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + '°' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  v_bonusdatum := 0D;
                                  v_FER_SPL := FALSE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  //Bonusdatum fllen
                                  IF  Customer.Bonusregelung <>'' THEN
                                  v_bonusdatum := Customer.Bonusdatum;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 4   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  IF Number > 1 THEN
                                    ReportForNav.PrinterSettings.PaperSource(2);
                                  ReportForNav.PageNo := 1;
                                  IF Number > 1 THEN
                                    KopieText := 'Kopie';
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkGutDruckZ„hler.RUN("Sales Cr.Memo Header");
                              END;
                               }

    { 5   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000003;3;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 6   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 1000000004;3;Column;CompanyEORINr      ;
               SourceExpr=CompanyInfo[16] }

    { 7   ;3   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 8   ;3   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 9   ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 10  ;3   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 11  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 12  ;3   ;Column  ;Applies_toDocNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Applies-to Doc. No." }

    { 13  ;3   ;Column  ;No_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."No." }

    { 14  ;3   ;Column  ;Bill_toCustomerNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Bill-to Customer No." }

    { 15  ;3   ;Column  ;SalesCrMemoHeaderPostingDate_0_1;
               SourceExpr=FORMAT("Sales Cr.Memo Header"."Posting Date",0,1) }

    { 16  ;3   ;Column  ;ExternalDocumentNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."External Document No." }

    { 17  ;3   ;Column  ;OurAccountNo_Customer;
               SourceExpr=Customer."Our Account No." }

    { 18  ;3   ;Column  ;VATRegistrationNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."VAT Registration No." }

    { 19  ;3   ;Column  ;KopieText           ;
               SourceExpr=KopieText }

    { 28  ;3   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 27  ;3   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 26  ;3   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 25  ;3   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 24  ;3   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 23  ;3   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 21  ;3   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 20  ;3   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 22  ;3   ;Column  ;STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_;
               SourceExpr=STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo)) }

    { 29  ;3   ;DataItem;                    ;
               DataItemTable=Table115;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                   IF v_FER_SPL = FALSE THEN BEGIN
                                     IF (("Sales Cr.Memo Line"."Manufacturer Code" = '82') OR ("Sales Cr.Memo Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                     END;
                                   END;
                                END;

               DataItemLinkReference=Sales Cr.Memo Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 30  ;4   ;Column  ;Amount_InvDiscountAmount;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 31  ;4   ;Column  ;Description_SalesCrMemoLine;
               SourceExpr=Description }

    { 32  ;4   ;Column  ;UnitPrice_SalesCrMemoLine;
               SourceExpr="Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 33  ;4   ;Column  ;Quantity_SalesCrMemoLine;
               SourceExpr=Quantity }

    { 34  ;4   ;Column  ;No_SalesCrMemoLine  ;
               SourceExpr="No." }

    { 35  ;4   ;Column  ;InvDiscountAmount_SalesCrMemoLine;
               SourceExpr=-"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 36  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 37  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 38  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 39  ;4   ;Column  ;MWSTBetragZeileVATAmountText;
               SourceExpr=MWSTBetragZeile.VATAmountText }

    { 40  ;4   ;Column  ;AmountIncludingVAT_SalesCrMemoLine;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 41  ;4   ;Column  ;AmountIncludingVAT_Amount;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 42  ;4   ;Column  ;Amount_SalesCrMemoLine;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 43  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnAfterGetRecord=BEGIN
                                   v_reverse := ' ';
                                  {
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" = 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '**';
                                    v_reverse1 := '1';
                                  END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" <> 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '***';
                                    v_reverse2 := '1';
                                  END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (Item."Gen. Prod. Posting Group" = 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '**';
                                    v_reverse1 := '1';
                                   END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (Item."Gen. Prod. Posting Group" <> 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '***';
                                    v_reverse2 := '1';
                                  END;
                                  }

                                  ////  Ab hier fr 19%
                                  IF "Sales Cr.Memo Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Cr.Memo Line".Quantity > 0 THEN BEGIN
                                    IF ((Item."Gen. Prod. Posting Group" = 'SYSTEM') OR (Item."Gen. Prod. Posting Group" = 'HANDEL')) THEN BEGIN
                                        IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = 'SCHULUNG') OR (Item."Gen. Prod. Posting Group" = 'SERVICE') OR (Item."Gen. Prod. Posting Group" = 'STD_POOL')) THEN BEGIN
                                          IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  ////  Ab hier fr 16%

                                  {
                                  IF "Sales Cr.Memo Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Cr.Memo Line".Quantity > 0 THEN BEGIN
                                    IF ((Item."Gen. Prod. Posting Group" = '16_SYSTEM') OR (Item."Gen. Prod. Posting Group" = '16_HANDEL')) THEN BEGIN
                                        IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = '16_SCHULUN') OR (Item."Gen. Prod. Posting Group" = '16_SERVICE') OR (Item."Gen. Prod. Posting Group" = '16_STD_POO')) THEN BEGIN
                                          IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  }
                                END;

               DataItemLink=No.=FIELD(No.) }

    { 44  ;5   ;Column  ;v_reverse           ;
               SourceExpr=v_reverse }

    { 45  ;5   ;Column  ;UnitofMeasure_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Unit of Measure" }

    { 46  ;5   ;Column  ;SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmount;
               SourceExpr="Sales Cr.Memo Line".Amount+"Sales Cr.Memo Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 47  ;5   ;Column  ;LineNo_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Line No." }

    { 48  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 49  ;5   ;Column  ;Artikelnr2_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Artikelnr. 2" }

    { 50  ;5   ;Column  ;Description_SalesCrMemoLine4;
               SourceExpr="Sales Cr.Memo Line".Description }

    { 51  ;5   ;Column  ;Quantity_SalesCrMemoLine3;
               SourceExpr="Sales Cr.Memo Line".Quantity }

    { 52  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               SourceExpr="Country/Region of Origin Code" }

    { 53  ;5   ;Column  ;UnitPrice_SalesCrMemoLine3;
               SourceExpr="Sales Cr.Memo Line"."Unit Price";
               AutoFormatType=2 }

    { 54  ;5   ;Column  ;Description2_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Description 2" }

    { 55  ;5   ;Column  ;Cross_ReferenceNo_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Cross-Reference No." }

    { 56  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Cr.Memo Header;
               DataItemLink=No.=FIELD(No.) }

    { 57  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 58  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Header"."Currency Code" }

    { 59  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Header"."Currency Code" }

    { 60  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 61  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 62  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 63  ;4   ;Column  ;v_bonusdatum        ;
               SourceExpr=v_bonusdatum }

    { 64  ;4   ;Column  ;Sell_toCustomerNo_SalesCrMemoHeader_Lbl;
               SourceExpr="Sales Cr.Memo Header".FIELDCAPTION("Sell-to Customer No.") }

    { 65  ;4   ;Column  ;Sell_toCustomerNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Sell-to Customer No." }

    { 66  ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 67  ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 68  ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 69  ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 70  ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 71  ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 72  ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 73  ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      VerkEinkPerson@1140001 : Record 13;
      Firmendaten@1140002 : Record 79;
      MWSTBetragZeile@1140003 : TEMPORARY Record 290;
      language@1140028 : Record 8;
      VerkGutDruckZ„hler@1140004 : Codeunit 316;
      FormatAdr@1140005 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [20] OF Text;
      DebAdr@1140006 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140007 : ARRAY [8] OF Text[50];
      FirmaAdr@1140008 : ARRAY [8] OF Text[50];
      Verk„uferText@1140009 : Text[30];
      MWStNrText@1140010 : Text[30];
      ReferenzText@1140011 : Text[30];
      AusgleichText@1140012 : Text[40];
      TotalText@1140013 : Text[50];
      TotalInklMWStText@1140014 : Text[50];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      LiefAdrAnzeigen@1140019 : Boolean;
      i@1140020 : Integer;
      waehrung@1140021 : Code[10];
      waehrung2@1140022 : Code[10];
      ansp_anrede@1140024 : Text[30];
      ansp_telefon@1140025 : Text[30];
      ansp_fax@1140026 : Text[30];
      v_bonusdatum@1140027 : Date;
      v_FER_SPL@1140023 : Boolean;
      v_reverse@1140029 : Text[3];
      v_reverse1@1140030 : Text[3];
      v_reverse2@1140031 : Text[3];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body6@5033(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body7@5034(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body8@5035(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body9@5036(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Footer12@5037(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Footer14@5038(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
          ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body16@5039(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body17@5040(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Description <> '') OR ("Sales Cr.Memo Line"."Description 2" <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body18@5041(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item)
        AND ("Sales Cr.Memo Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5042(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item) AND
        ("Sales Cr.Memo Line"."VAT Prod. Posting Group" = '13B2'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body25@5043(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput( Customer.Bonusregelung <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body26@5044(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body27@5045(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(( "Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body28@5046(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body29@5047(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(( "Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body31@5048(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Cr.Memo Header"."Sell-to Customer No." <> "Sales Cr.Memo Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesCrMemoLine': CASE SectionId OF
          'Body6': OnPreSectionSalesCrMemoLine_Body6("Sales Cr.Memo Line");
          'Body7': OnPreSectionSalesCrMemoLine_Body7("Sales Cr.Memo Line");
          'Body8': OnPreSectionSalesCrMemoLine_Body8("Sales Cr.Memo Line");
          'Body9': OnPreSectionSalesCrMemoLine_Body9("Sales Cr.Memo Line");
          'Footer12': OnPreSectionSalesCrMemoLine_Footer12("Sales Cr.Memo Line");
          'Footer14': OnPreSectionSalesCrMemoLine_Footer14("Sales Cr.Memo Line");
        END;
        'Item': CASE SectionId OF
          'Body16': OnPreSectionItem_Body16(Item);
          'Body17': OnPreSectionItem_Body17(Item);
          'Body18': OnPreSectionItem_Body18(Item);
          'Body19': OnPreSectionItem_Body19(Item);
        END;
        'Total2': CASE SectionId OF
          'Body25': OnPreSectionTotal2_Body25(Total2);
          'Body26': OnPreSectionTotal2_Body26(Total2);
          'Body27': OnPreSectionTotal2_Body27(Total2);
          'Body28': OnPreSectionTotal2_Body28(Total2);
          'Body29': OnPreSectionTotal2_Body29(Total2);
          'Body31': OnPreSectionTotal2_Body31(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'SalesCrMemoLine': WITH "Sales Cr.Memo Line" DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  Verkaufsgutschriftszeile, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.

      250122 st: šbertrag- und Fortsetzungsbetrag Sektionen ausgeblendet, da mit 6.1.0 mitunter fehlerhaft
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="CompanyEORINr">
          <DataField>CompanyEORINr</DataField>
        </Field>
        <Field Name="ansp_fax">
          <DataField>ansp_fax</DataField>
        </Field>
        <Field Name="ansp_telefon">
          <DataField>ansp_telefon</DataField>
        </Field>
        <Field Name="Salesperson_Purchaserfirstname__Salesperson_PurchaserName">
          <DataField>Salesperson_Purchaserfirstname__Salesperson_PurchaserName</DataField>
        </Field>
        <Field Name="ansp_anrede">
          <DataField>ansp_anrede</DataField>
        </Field>
        <Field Name="E_Mail_Salesperson_Purchaser">
          <DataField>E_Mail_Salesperson_Purchaser</DataField>
        </Field>
        <Field Name="Applies_toDocNo_SalesCrMemoHeader">
          <DataField>Applies_toDocNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="No_SalesCrMemoHeader">
          <DataField>No_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesCrMemoHeader">
          <DataField>Bill_toCustomerNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="SalesCrMemoHeaderPostingDate_0_1">
          <DataField>SalesCrMemoHeaderPostingDate_0_1</DataField>
        </Field>
        <Field Name="ExternalDocumentNo_SalesCrMemoHeader">
          <DataField>ExternalDocumentNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="OurAccountNo_Customer">
          <DataField>OurAccountNo_Customer</DataField>
        </Field>
        <Field Name="VATRegistrationNo_SalesCrMemoHeader">
          <DataField>VATRegistrationNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="KopieText">
          <DataField>KopieText</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_">
          <DataField>STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmount">
          <DataField>Amount_InvDiscountAmount</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmountFormat">
          <DataField>Amount_InvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description_SalesCrMemoLine">
          <DataField>Description_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLine">
          <DataField>UnitPrice_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLineFormat">
          <DataField>UnitPrice_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine">
          <DataField>Quantity_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLineFormat">
          <DataField>Quantity_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="No_SalesCrMemoLine">
          <DataField>No_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="InvDiscountAmount_SalesCrMemoLine">
          <DataField>InvDiscountAmount_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="InvDiscountAmount_SalesCrMemoLineFormat">
          <DataField>InvDiscountAmount_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="MWSTBetragZeileVATAmountText">
          <DataField>MWSTBetragZeileVATAmountText</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_SalesCrMemoLine">
          <DataField>AmountIncludingVAT_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_SalesCrMemoLineFormat">
          <DataField>AmountIncludingVAT_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_Amount">
          <DataField>AmountIncludingVAT_Amount</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_AmountFormat">
          <DataField>AmountIncludingVAT_AmountFormat</DataField>
        </Field>
        <Field Name="Amount_SalesCrMemoLine">
          <DataField>Amount_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Amount_SalesCrMemoLineFormat">
          <DataField>Amount_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="v_reverse">
          <DataField>v_reverse</DataField>
        </Field>
        <Field Name="UnitofMeasure_SalesCrMemoLine">
          <DataField>UnitofMeasure_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmount">
          <DataField>SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmount</DataField>
        </Field>
        <Field Name="SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmountFormat">
          <DataField>SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="LineNo_SalesCrMemoLine">
          <DataField>LineNo_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Herstellerkurzname_Item">
          <DataField>Herstellerkurzname_Item</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesCrMemoLine">
          <DataField>Artikelnr2_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Description_SalesCrMemoLine4">
          <DataField>Description_SalesCrMemoLine4</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine3">
          <DataField>Quantity_SalesCrMemoLine3</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine3Format">
          <DataField>Quantity_SalesCrMemoLine3Format</DataField>
        </Field>
        <Field Name="Country_RegionofOriginCode_Item">
          <DataField>Country_RegionofOriginCode_Item</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLine3">
          <DataField>UnitPrice_SalesCrMemoLine3</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLine3Format">
          <DataField>UnitPrice_SalesCrMemoLine3Format</DataField>
        </Field>
        <Field Name="Description2_SalesCrMemoLine">
          <DataField>Description2_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesCrMemoLine">
          <DataField>Cross_ReferenceNo_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="v_bonusdatum">
          <DataField>v_bonusdatum</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesCrMemoHeader_Lbl">
          <DataField>Sell_toCustomerNo_SalesCrMemoHeader_Lbl</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesCrMemoHeader">
          <DataField>Sell_toCustomerNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

