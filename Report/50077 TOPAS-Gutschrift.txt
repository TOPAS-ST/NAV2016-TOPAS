OBJECT Report 50077 TOPAS-Gutschrift
{
  OBJECT-PROPERTIES
  {
    Date=02.02.18;
    Time=15:14:44;
    Modified=Yes;
    Version List=Beleg,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table114;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufsgutschrift;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  //25.04.2012-ST
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesCrMemoBillTo(DebAdr,"Sales Cr.Memo Header");
                                  IF "Applies-to Doc. No." = '' THEN
                                    AusgleichText := ''
                                  ELSE
                                    AusgleichText := STRSUBSTNO('(Ausgleich fr %1 %2)',"Applies-to Doc. Type","Applies-to Doc. No.");
                                  FormatAdr.SalesCrMemoShipTo(LieferAnAdr,"Sales Cr.Memo Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + '°' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  v_bonusdatum := 0D;
                                  v_FER_SPL := FALSE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  //Bonusdatum fllen
                                  IF  Customer.Bonusregelung <>'' THEN
                                  v_bonusdatum :=Customer.Bonusdatum;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 4   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  IF Number > 1 THEN
                                    ReportForNav.PrinterSettings.PaperSource(2);
                                  ReportForNav.PageNo := 1;
                                  IF Number > 1 THEN
                                    KopieText := 'Kopie';
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkGutDruckZ„hler.RUN("Sales Cr.Memo Header");
                              END;
                               }

    { 5   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 6   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ', ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 7   ;3   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 8   ;3   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 9   ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 10  ;3   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 11  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 12  ;3   ;Column  ;Applies_toDocNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Applies-to Doc. No." }

    { 13  ;3   ;Column  ;No_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."No." }

    { 14  ;3   ;Column  ;Bill_toCustomerNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Bill-to Customer No." }

    { 15  ;3   ;Column  ;SalesCrMemoHeaderPostingDate_0_1;
               SourceExpr=FORMAT("Sales Cr.Memo Header"."Posting Date",0,1) }

    { 16  ;3   ;Column  ;ExternalDocumentNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."External Document No." }

    { 17  ;3   ;Column  ;OurAccountNo_Customer;
               SourceExpr=Customer."Our Account No." }

    { 18  ;3   ;Column  ;VATRegistrationNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."VAT Registration No." }

    { 19  ;3   ;Column  ;KopieText           ;
               SourceExpr=KopieText }

    { 28  ;3   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 27  ;3   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 26  ;3   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 25  ;3   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 24  ;3   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 23  ;3   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 21  ;3   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 20  ;3   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 22  ;3   ;Column  ;STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_;
               SourceExpr=STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo)) }

    { 29  ;3   ;DataItem;                    ;
               DataItemTable=Table115;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                   IF v_FER_SPL=FALSE THEN BEGIN
                                     IF (("Sales Cr.Memo Line"."Manufacturer Code" = '82') OR ("Sales Cr.Memo Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                     END;
                                   END;
                                END;

               DataItemLinkReference=Sales Cr.Memo Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 30  ;4   ;Column  ;Amount_InvDiscountAmount;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 31  ;4   ;Column  ;Description_SalesCrMemoLine;
               SourceExpr=Description }

    { 32  ;4   ;Column  ;UnitPrice_SalesCrMemoLine;
               SourceExpr="Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 33  ;4   ;Column  ;Quantity_SalesCrMemoLine;
               SourceExpr=Quantity }

    { 34  ;4   ;Column  ;No_SalesCrMemoLine  ;
               SourceExpr="No." }

    { 35  ;4   ;Column  ;InvDiscountAmount_SalesCrMemoLine;
               SourceExpr=-"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 36  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 37  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 38  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 39  ;4   ;Column  ;MWSTBetragZeileVATAmountText;
               SourceExpr=MWSTBetragZeile.VATAmountText }

    { 40  ;4   ;Column  ;AmountIncludingVAT_SalesCrMemoLine;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 41  ;4   ;Column  ;AmountIncludingVAT_Amount;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 42  ;4   ;Column  ;Amount_SalesCrMemoLine;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 43  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnAfterGetRecord=BEGIN
                                   v_reverse := ' ';
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" = 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '**';
                                    v_reverse1 := '1';
                                  END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" <> 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '***';
                                    v_reverse2 := '1';
                                  END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (Item."Gen. Prod. Posting Group" = 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '**';
                                    v_reverse1 := '1';
                                   END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (Item."Gen. Prod. Posting Group" <> 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '***';
                                    v_reverse2 := '1';
                                  END;
                                END;

               DataItemLink=No.=FIELD(No.) }

    { 44  ;5   ;Column  ;v_reverse           ;
               SourceExpr=v_reverse }

    { 45  ;5   ;Column  ;UnitofMeasure_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Unit of Measure" }

    { 46  ;5   ;Column  ;SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmount;
               SourceExpr="Sales Cr.Memo Line".Amount+"Sales Cr.Memo Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 47  ;5   ;Column  ;LineNo_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Line No." }

    { 48  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 49  ;5   ;Column  ;Artikelnr2_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Artikelnr. 2" }

    { 50  ;5   ;Column  ;Description_SalesCrMemoLine4;
               SourceExpr="Sales Cr.Memo Line".Description }

    { 51  ;5   ;Column  ;Quantity_SalesCrMemoLine3;
               SourceExpr="Sales Cr.Memo Line".Quantity }

    { 52  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               SourceExpr="Country/Region of Origin Code" }

    { 53  ;5   ;Column  ;UnitPrice_SalesCrMemoLine3;
               SourceExpr="Sales Cr.Memo Line"."Unit Price";
               AutoFormatType=2 }

    { 54  ;5   ;Column  ;Description2_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Description 2" }

    { 55  ;5   ;Column  ;Cross_ReferenceNo_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Cross-Reference No." }

    { 56  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Cr.Memo Header;
               DataItemLink=No.=FIELD(No.) }

    { 57  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 58  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Header"."Currency Code" }

    { 59  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Header"."Currency Code" }

    { 60  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 61  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 62  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 63  ;4   ;Column  ;v_bonusdatum        ;
               SourceExpr=v_bonusdatum }

    { 64  ;4   ;Column  ;Sell_toCustomerNo_SalesCrMemoHeader_Lbl;
               SourceExpr="Sales Cr.Memo Header".FIELDCAPTION("Sell-to Customer No.") }

    { 65  ;4   ;Column  ;Sell_toCustomerNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Sell-to Customer No." }

    { 66  ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 67  ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 68  ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 69  ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 70  ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 71  ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 72  ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 73  ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      VerkEinkPerson@1140001 : Record 13;
      Firmendaten@1140002 : Record 79;
      MWSTBetragZeile@1140003 : TEMPORARY Record 290;
      language@1140028 : Record 8;
      VerkGutDruckZ„hler@1140004 : Codeunit 316;
      FormatAdr@1140005 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140006 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140007 : ARRAY [8] OF Text[50];
      FirmaAdr@1140008 : ARRAY [8] OF Text[50];
      Verk„uferText@1140009 : Text[30];
      MWStNrText@1140010 : Text[30];
      ReferenzText@1140011 : Text[30];
      AusgleichText@1140012 : Text[40];
      TotalText@1140013 : Text[50];
      TotalInklMWStText@1140014 : Text[50];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      LiefAdrAnzeigen@1140019 : Boolean;
      i@1140020 : Integer;
      waehrung@1140021 : Code[10];
      waehrung2@1140022 : Code[10];
      ansp_anrede@1140024 : Text[30];
      ansp_telefon@1140025 : Text[30];
      ansp_fax@1140026 : Text[30];
      v_bonusdatum@1140027 : Date;
      v_FER_SPL@1140023 : Boolean;
      v_reverse@1140029 : Text[3];
      v_reverse1@1140030 : Text[3];
      v_reverse2@1140031 : Text[3];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body6@5033(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body7@5034(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body8@5035(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body9@5036(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Footer12@5037(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Footer14@5038(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
          ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body16@5039(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body17@5040(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Cr.Memo Line"."Description 2" <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body18@5041(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item)
        AND ("Sales Cr.Memo Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5042(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item) AND
        ("Sales Cr.Memo Line"."VAT Prod. Posting Group" = '13B2'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body25@5043(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput( Customer.Bonusregelung <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body26@5044(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body27@5045(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(( "Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body28@5046(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body29@5047(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(( "Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body31@5048(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Cr.Memo Header"."Sell-to Customer No." <> "Sales Cr.Memo Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesCrMemoLine': CASE SectionId OF
          'Body6': OnPreSectionSalesCrMemoLine_Body6("Sales Cr.Memo Line");
          'Body7': OnPreSectionSalesCrMemoLine_Body7("Sales Cr.Memo Line");
          'Body8': OnPreSectionSalesCrMemoLine_Body8("Sales Cr.Memo Line");
          'Body9': OnPreSectionSalesCrMemoLine_Body9("Sales Cr.Memo Line");
          'Footer12': OnPreSectionSalesCrMemoLine_Footer12("Sales Cr.Memo Line");
          'Footer14': OnPreSectionSalesCrMemoLine_Footer14("Sales Cr.Memo Line");
        END;
        'Item': CASE SectionId OF
          'Body16': OnPreSectionItem_Body16(Item);
          'Body17': OnPreSectionItem_Body17(Item);
          'Body18': OnPreSectionItem_Body18(Item);
          'Body19': OnPreSectionItem_Body19(Item);
        END;
        'Total2': CASE SectionId OF
          'Body25': OnPreSectionTotal2_Body25(Total2);
          'Body26': OnPreSectionTotal2_Body26(Total2);
          'Body27': OnPreSectionTotal2_Body27(Total2);
          'Body28': OnPreSectionTotal2_Body28(Total2);
          'Body29': OnPreSectionTotal2_Body29(Total2);
          'Body31': OnPreSectionTotal2_Body31(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // Do not change (Autogenerated by Reports ForNAV) - Instead change the Create Totals, Total Fields or Group Total Fields properties on the Data item in the ForNAV designer
      CASE DataItemId OF
        'SalesCrMemoLine': WITH "Sales Cr.Memo Line" DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  Verkaufsgutschriftszeile, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>a019f672-c089-438d-a446-ea752eb70cda</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>a6440819-d4a1-472c-b00d-888d2083414c</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="ansp_fax">
          <DataField>ansp_fax</DataField>
        </Field>
        <Field Name="ansp_telefon">
          <DataField>ansp_telefon</DataField>
        </Field>
        <Field Name="Salesperson_Purchaserfirstname__Salesperson_PurchaserName">
          <DataField>Salesperson_Purchaserfirstname__Salesperson_PurchaserName</DataField>
        </Field>
        <Field Name="ansp_anrede">
          <DataField>ansp_anrede</DataField>
        </Field>
        <Field Name="E_Mail_Salesperson_Purchaser">
          <DataField>E_Mail_Salesperson_Purchaser</DataField>
        </Field>
        <Field Name="Applies_toDocNo_SalesCrMemoHeader">
          <DataField>Applies_toDocNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="No_SalesCrMemoHeader">
          <DataField>No_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesCrMemoHeader">
          <DataField>Bill_toCustomerNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="SalesCrMemoHeaderPostingDate_0_1">
          <DataField>SalesCrMemoHeaderPostingDate_0_1</DataField>
        </Field>
        <Field Name="ExternalDocumentNo_SalesCrMemoHeader">
          <DataField>ExternalDocumentNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="OurAccountNo_Customer">
          <DataField>OurAccountNo_Customer</DataField>
        </Field>
        <Field Name="VATRegistrationNo_SalesCrMemoHeader">
          <DataField>VATRegistrationNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="KopieText">
          <DataField>KopieText</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_">
          <DataField>STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmount">
          <DataField>Amount_InvDiscountAmount</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmountFormat">
          <DataField>Amount_InvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description_SalesCrMemoLine">
          <DataField>Description_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLine">
          <DataField>UnitPrice_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLineFormat">
          <DataField>UnitPrice_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine">
          <DataField>Quantity_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLineFormat">
          <DataField>Quantity_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="No_SalesCrMemoLine">
          <DataField>No_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="InvDiscountAmount_SalesCrMemoLine">
          <DataField>InvDiscountAmount_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="InvDiscountAmount_SalesCrMemoLineFormat">
          <DataField>InvDiscountAmount_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="MWSTBetragZeileVATAmountText">
          <DataField>MWSTBetragZeileVATAmountText</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_SalesCrMemoLine">
          <DataField>AmountIncludingVAT_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_SalesCrMemoLineFormat">
          <DataField>AmountIncludingVAT_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_Amount">
          <DataField>AmountIncludingVAT_Amount</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_AmountFormat">
          <DataField>AmountIncludingVAT_AmountFormat</DataField>
        </Field>
        <Field Name="Amount_SalesCrMemoLine">
          <DataField>Amount_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Amount_SalesCrMemoLineFormat">
          <DataField>Amount_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="v_reverse">
          <DataField>v_reverse</DataField>
        </Field>
        <Field Name="UnitofMeasure_SalesCrMemoLine">
          <DataField>UnitofMeasure_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmount">
          <DataField>SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmount</DataField>
        </Field>
        <Field Name="SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmountFormat">
          <DataField>SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="LineNo_SalesCrMemoLine">
          <DataField>LineNo_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Herstellerkurzname_Item">
          <DataField>Herstellerkurzname_Item</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesCrMemoLine">
          <DataField>Artikelnr2_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Description_SalesCrMemoLine4">
          <DataField>Description_SalesCrMemoLine4</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine3">
          <DataField>Quantity_SalesCrMemoLine3</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine3Format">
          <DataField>Quantity_SalesCrMemoLine3Format</DataField>
        </Field>
        <Field Name="Country_RegionofOriginCode_Item">
          <DataField>Country_RegionofOriginCode_Item</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLine3">
          <DataField>UnitPrice_SalesCrMemoLine3</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLine3Format">
          <DataField>UnitPrice_SalesCrMemoLine3Format</DataField>
        </Field>
        <Field Name="Description2_SalesCrMemoLine">
          <DataField>Description2_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesCrMemoLine">
          <DataField>Cross_ReferenceNo_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="v_bonusdatum">
          <DataField>v_bonusdatum</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesCrMemoHeader_Lbl">
          <DataField>Sell_toCustomerNo_SalesCrMemoHeader_Lbl</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesCrMemoHeader">
          <DataField>Sell_toCustomerNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

