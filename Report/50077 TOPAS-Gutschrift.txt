OBJECT Report 50077 TOPAS-Gutschrift
{
  OBJECT-PROPERTIES
  {
    Date=14.07.20;
    Time=15:21:12;
    Modified=Yes;
    Version List=Beleg,FORNAV3.1.0.1460/1460;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table114;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufsgutschrift;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo",Picture);
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  //25.04.2012-ST
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesCrMemoBillTo(DebAdr,"Sales Cr.Memo Header");
                                  IF "Applies-to Doc. No." = '' THEN
                                    AusgleichText := ''
                                  ELSE
                                    AusgleichText := STRSUBSTNO('(Ausgleich fr %1 %2)',"Applies-to Doc. Type","Applies-to Doc. No.");
                                  FormatAdr.SalesCrMemoShipTo(LieferAnAdr,"Sales Cr.Memo Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + '°' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  v_bonusdatum := 0D;
                                  v_FER_SPL := FALSE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  //Bonusdatum fllen
                                  IF  Customer.Bonusregelung <>'' THEN
                                  v_bonusdatum :=Customer.Bonusdatum;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 4   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  IF Number > 1 THEN
                                    ReportForNav.PrinterSettings.PaperSource(2);
                                  ReportForNav.PageNo := 1;
                                  IF Number > 1 THEN
                                    KopieText := 'Kopie';
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkGutDruckZ„hler.RUN("Sales Cr.Memo Header");
                              END;
                               }

    { 5   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000003;3;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 6   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 7   ;3   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 8   ;3   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 9   ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 10  ;3   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 11  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 12  ;3   ;Column  ;Applies_toDocNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Applies-to Doc. No." }

    { 13  ;3   ;Column  ;No_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."No." }

    { 14  ;3   ;Column  ;Bill_toCustomerNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Bill-to Customer No." }

    { 15  ;3   ;Column  ;SalesCrMemoHeaderPostingDate_0_1;
               SourceExpr=FORMAT("Sales Cr.Memo Header"."Posting Date",0,1) }

    { 16  ;3   ;Column  ;ExternalDocumentNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."External Document No." }

    { 17  ;3   ;Column  ;OurAccountNo_Customer;
               SourceExpr=Customer."Our Account No." }

    { 18  ;3   ;Column  ;VATRegistrationNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."VAT Registration No." }

    { 19  ;3   ;Column  ;KopieText           ;
               SourceExpr=KopieText }

    { 28  ;3   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 27  ;3   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 26  ;3   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 25  ;3   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 24  ;3   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 23  ;3   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 21  ;3   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 20  ;3   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 22  ;3   ;Column  ;STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_;
               SourceExpr=STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo)) }

    { 29  ;3   ;DataItem;                    ;
               DataItemTable=Table115;
               DataItemTableView=SORTING(Document No.,Line No.)
                                 WHERE(Quantity=FILTER(>0));
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                   IF v_FER_SPL=FALSE THEN BEGIN
                                     IF (("Sales Cr.Memo Line"."Manufacturer Code" = '82') OR ("Sales Cr.Memo Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                     END;
                                   END;
                                END;

               DataItemLinkReference=Sales Cr.Memo Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 30  ;4   ;Column  ;Amount_InvDiscountAmount;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 31  ;4   ;Column  ;Description_SalesCrMemoLine;
               SourceExpr=Description }

    { 32  ;4   ;Column  ;UnitPrice_SalesCrMemoLine;
               SourceExpr="Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 33  ;4   ;Column  ;Quantity_SalesCrMemoLine;
               SourceExpr=Quantity }

    { 34  ;4   ;Column  ;No_SalesCrMemoLine  ;
               SourceExpr="No." }

    { 35  ;4   ;Column  ;InvDiscountAmount_SalesCrMemoLine;
               SourceExpr=-"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 36  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 37  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 38  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 39  ;4   ;Column  ;MWSTBetragZeileVATAmountText;
               SourceExpr=MWSTBetragZeile.VATAmountText }

    { 40  ;4   ;Column  ;AmountIncludingVAT_SalesCrMemoLine;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 41  ;4   ;Column  ;AmountIncludingVAT_Amount;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 42  ;4   ;Column  ;Amount_SalesCrMemoLine;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 43  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnAfterGetRecord=BEGIN
                                   v_reverse := ' ';
                                  {
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" = 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '**';
                                    v_reverse1 := '1';
                                  END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" <> 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '***';
                                    v_reverse2 := '1';
                                  END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (Item."Gen. Prod. Posting Group" = 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '**';
                                    v_reverse1 := '1';
                                   END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (Item."Gen. Prod. Posting Group" <> 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '***';
                                    v_reverse2 := '1';
                                  END;
                                  }





                                  ////  Ab hier fr 19%
                                  IF "Sales Cr.Memo Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Cr.Memo Line".Quantity > 0 THEN BEGIN
                                    IF ((Item."Gen. Prod. Posting Group" = 'SYSTEM') OR (Item."Gen. Prod. Posting Group" = 'HANDEL')) THEN BEGIN
                                        IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = 'SCHULUNG') OR (Item."Gen. Prod. Posting Group" = 'SERVICE') OR (Item."Gen. Prod. Posting Group" = 'STD_POOL')) THEN BEGIN
                                          IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  ////  Ab hier fr 16%
                                  IF "Sales Cr.Memo Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Cr.Memo Line".Quantity > 0 THEN BEGIN
                                    IF ((Item."Gen. Prod. Posting Group" = '16_SYSTEM') OR (Item."Gen. Prod. Posting Group" = '16_HANDEL')) THEN BEGIN
                                        IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = '16_SCHULUN') OR (Item."Gen. Prod. Posting Group" = '16_SERVICE') OR (Item."Gen. Prod. Posting Group" = '16_STD_POO')) THEN BEGIN
                                          IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;



                                END;

               DataItemLink=No.=FIELD(No.) }

    { 44  ;5   ;Column  ;v_reverse           ;
               SourceExpr=v_reverse }

    { 45  ;5   ;Column  ;UnitofMeasure_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Unit of Measure" }

    { 46  ;5   ;Column  ;SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmount;
               SourceExpr="Sales Cr.Memo Line".Amount+"Sales Cr.Memo Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 47  ;5   ;Column  ;LineNo_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Line No." }

    { 48  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 49  ;5   ;Column  ;Artikelnr2_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Artikelnr. 2" }

    { 50  ;5   ;Column  ;Description_SalesCrMemoLine4;
               SourceExpr="Sales Cr.Memo Line".Description }

    { 51  ;5   ;Column  ;Quantity_SalesCrMemoLine3;
               SourceExpr="Sales Cr.Memo Line".Quantity }

    { 52  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               SourceExpr="Country/Region of Origin Code" }

    { 53  ;5   ;Column  ;UnitPrice_SalesCrMemoLine3;
               SourceExpr="Sales Cr.Memo Line"."Unit Price";
               AutoFormatType=2 }

    { 54  ;5   ;Column  ;Description2_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Description 2" }

    { 55  ;5   ;Column  ;Cross_ReferenceNo_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Cross-Reference No." }

    { 56  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Cr.Memo Header;
               DataItemLink=No.=FIELD(No.) }

    { 57  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 58  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Header"."Currency Code" }

    { 59  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Header"."Currency Code" }

    { 60  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 61  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 62  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 63  ;4   ;Column  ;v_bonusdatum        ;
               SourceExpr=v_bonusdatum }

    { 64  ;4   ;Column  ;Sell_toCustomerNo_SalesCrMemoHeader_Lbl;
               SourceExpr="Sales Cr.Memo Header".FIELDCAPTION("Sell-to Customer No.") }

    { 65  ;4   ;Column  ;Sell_toCustomerNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Sell-to Customer No." }

    { 66  ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 67  ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 68  ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 69  ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 70  ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 71  ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 72  ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 73  ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      VerkEinkPerson@1140001 : Record 13;
      Firmendaten@1140002 : Record 79;
      MWSTBetragZeile@1140003 : TEMPORARY Record 290;
      language@1140028 : Record 8;
      VerkGutDruckZ„hler@1140004 : Codeunit 316;
      FormatAdr@1140005 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140006 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140007 : ARRAY [8] OF Text[50];
      FirmaAdr@1140008 : ARRAY [8] OF Text[50];
      Verk„uferText@1140009 : Text[30];
      MWStNrText@1140010 : Text[30];
      ReferenzText@1140011 : Text[30];
      AusgleichText@1140012 : Text[40];
      TotalText@1140013 : Text[50];
      TotalInklMWStText@1140014 : Text[50];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      LiefAdrAnzeigen@1140019 : Boolean;
      i@1140020 : Integer;
      waehrung@1140021 : Code[10];
      waehrung2@1140022 : Code[10];
      ansp_anrede@1140024 : Text[30];
      ansp_telefon@1140025 : Text[30];
      ansp_fax@1140026 : Text[30];
      v_bonusdatum@1140027 : Date;
      v_FER_SPL@1140023 : Boolean;
      v_reverse@1140029 : Text[3];
      v_reverse1@1140030 : Text[3];
      v_reverse2@1140031 : Text[3];
      ReportForNav@5000 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body6@5033(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body7@5034(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body8@5035(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body9@5036(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Footer12@5037(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Footer14@5038(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
          ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body16@5039(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body17@5040(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Cr.Memo Line"."Description 2" <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body18@5041(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item)
        AND ("Sales Cr.Memo Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5042(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item) AND
        ("Sales Cr.Memo Line"."VAT Prod. Posting Group" = '16_13B2'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body25@5043(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput( Customer.Bonusregelung <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body26@5044(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body27@5045(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(( "Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body28@5046(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body29@5047(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(( "Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body31@5048(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Cr.Memo Header"."Sell-to Customer No." <> "Sales Cr.Memo Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesCrMemoLine': CASE SectionId OF
          'Body6': OnPreSectionSalesCrMemoLine_Body6("Sales Cr.Memo Line");
          'Body7': OnPreSectionSalesCrMemoLine_Body7("Sales Cr.Memo Line");
          'Body8': OnPreSectionSalesCrMemoLine_Body8("Sales Cr.Memo Line");
          'Body9': OnPreSectionSalesCrMemoLine_Body9("Sales Cr.Memo Line");
          'Footer12': OnPreSectionSalesCrMemoLine_Footer12("Sales Cr.Memo Line");
          'Footer14': OnPreSectionSalesCrMemoLine_Footer14("Sales Cr.Memo Line");
        END;
        'Item': CASE SectionId OF
          'Body16': OnPreSectionItem_Body16(Item);
          'Body17': OnPreSectionItem_Body17(Item);
          'Body18': OnPreSectionItem_Body18(Item);
          'Body19': OnPreSectionItem_Body19(Item);
        END;
        'Total2': CASE SectionId OF
          'Body25': OnPreSectionTotal2_Body25(Total2);
          'Body26': OnPreSectionTotal2_Body26(Total2);
          'Body27': OnPreSectionTotal2_Body27(Total2);
          'Body28': OnPreSectionTotal2_Body28(Total2);
          'Body29': OnPreSectionTotal2_Body29(Total2);
          'Body31': OnPreSectionTotal2_Body31(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5014(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5015();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      CASE DataItemId OF
        'SalesCrMemoLine': WITH "Sales Cr.Memo Line" DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  Verkaufsgutschriftszeile, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>lzABAN1923LcOJrm/UbMO2AU0VtVXVKaBM/u8kzoWNbYlrRK2a7tmQ4FlYlUck2R2STTtvwye1MR8wZz1VfjFxuABJlgJgACUGa5uyqiwkoSxOHDj/+EHz9++tfPDyn4iIoyybMXe/bI2gMom+TTJLt/sbesZgfh3r/+yz/9r59+qYr4Gi3yoipfx4/5shqjIonT5AsqwOrPd11F7giOPFJb79EeuIgf0Is9WtNZXlzEH/fAcZ5VRZ7ePC7wuxP08fTzokBlOWIaHb09Z37CfSAo9pE0s9+2Cl6Atif74HiZVssC4WcZWuJP0n1wtbxLk8kr9HiTf0Ck9DSYxCEKoRXMXORauP8nSblI48em3zeXV4fjg5+XVTmZF8ms2gO9kXRjdUYYyZHt+riCy7v/hybVRf5iz7OsINgDZwlKp+/RHYbtYzJBb4v0xd68qhbPnz27OHw3Pr1+dwAt2x99gh9GVb6Iy9EUPQ8sN3x28pjFD8mkxMUi69nlSVzFz47zh0WcPX7/Xd23737YA2/i4j7JSox4iEdt4/89/L+Lu3IV36OXKLmfVy/2YBTQJ++TaTXHD2yrfrBAxaskm77YO3RxX/HM4L/I/O6DYIEHfLJIcFnPbYf+NktwiRuUVfPycnb4JknT5AFVqNjDZAPAT0dxNi3rP/GP8wo92JQGxnGKyuPiDXrIX6J4ij/o00EDKRkj+YpUg6kHfSI9vkLFNZrkBe5kVSwR7hQtdRPfpWSayD+27a69eJegT7jdy+ub84ufv7/IRz+QQfz1LElxd0kfMNG/eY0p8PTti5/R3YhQ0Yd4OSvvexNOP6inEaOM69kfozQ9qHJMYmWVP+AlQR7i/8FVkWQVwj0/x3219ygOa7BsQNNWo4BI++sqLvAUkFY4uHLhCVfPXyfZh3ogL87OT1+ffM8bzg/NGOAe0+l2HOAZO5Jn9VDWxwbZacc0VubZ7dWymMzjcscDddYHepxPER3pEaoKtMQjPM8ylE0TlJUVHamjOFK4PlKHjvRVvkjQeDJPUTJD2xrh0Ap4Fxfc1nnIQKv5D/ryhbJ8uEMFRcXlodJ7tL7MUVI9DQXBSLqRrrXw9JGC9y9Pr0/prxfHlxfjm+/tH34ADQLe3tpwBSgwSFyj2Yu9gDv4Zl4pd6uH0zyBLKetuchldorl9COZ/XbS6+dv4s+X2YRQRPNqFqclATrOxphlEXqnT8ZYDGHptNZKIw/OMHdyoLU5tHoUtN+8Ea6PMuSO8iqZENF7lH9uR7n+HHNrPD32HnidT2LSzbM0j7FgsaHrjHwsxmDAIjLG2gbuswe9/frNDfqMC9Pqbs+S4gGv5rhCWTPfY1TV7Lppm1vsmWxwsBlcxB3c6/gOpf1x1Y/qIbl+11lMhPuOtTlCx7JGmDZtrLaEtsWOcl367oOyesREfZSnUzLDC1JNK7HGFWFkBxfF6Dnu9p9OL96+uDn8hbBu8ruFiH0kGDEe85g0g6krL5LqsRk76dnbEjVdohQlxGyDMW4g6tBabQNIgzVIG/R4xMNC69Z/Wr5tjPDbcTU6OD8ZNRjXCL87vMEDuR/VkLYY9x/qoQx1UXZkKLu0VscA5VCLcANzwn1/enp6QPBicGWesciuP9bD1tXF1pVh69FaPS62pL8Mu6M/GWYAIcHO8X0pAbtRMIqiyHfMCJg0e5gm9xnmc7jYm2Q6TdFrRPTYl3nxpX71Yq950CBMzQlMwhjmi5zHPteL6E2CvzkJ+PdaR5Vmx5PNjk+b40td/uwET5kdnQVgPC2E/ofmZVVGb2LCrU2ML5uYgDbHl6X8ibH5EyOfEB1RajwhQ5NhMBGQI2gNJyKQTURIm+NLYP5ERN1ERFY0CmDEmwXYLBjLxmqb60QjG8+I12NaxnCTzoAfwXf74Dv8D314lZfVLJ7MJdMg/05veqDxdISy6Yho9QqiuhHS3VQE3si2XGjvY6wx1FFIFKS1ObH2AbS9kRMGXl+R3nTwMNKZSOKz+PMI/InI6fqvdkKaH3rIacvfSGpwWLRavgDeRAyuIWb7bo1ZgCGLfLiJWU3Hvu2GYegSEySoAXR9XwvAq3meoQbBG5SuEGyea0LIkZ5yCG1LiiG12qCOmHQ6HG1oO4TkwpDSXhg5HBwxdE4Nne/tjgscTqfEGQx0uUD3nd5EhMZcwLalM0JNTagjH1eUDR0X07MXOsG+u8mZKd13pOy5zlYmpCZlCfDNey2AHcscYKnhaVPL09GRe64uwHxmawww5rYSeMlbPXDNZZgttTdtanA6fCnGB9djlAqPcJFAJskcK6z58tYxPrx+x3CFh6q8R0UymVcS4IWf6M2Gaz4bUgvVpiaqo2OihuuzEarNBmEpdhg4QbiV2XiXF2XVOYT5BmhbRA9t3xxtqcVpU5PT4ctSRReo625gHEGsQ2Ny9+1RxPGBOra1D8nWXYPf+fjydX6fD/lAucWkPlCbWm4O38UrdSY5K6pyodCZhPWnAI48Ze2KqFTnR4cXz8HJKXQB9Cwb4LYsYDlBBBwrcIBld7gMFtQjo0hbE5NaYzY1x4hQ0UY3UETX1UV3/P787Obg6Px49BxcHV28Ojk9O/vll19aTEWvtZB0bW0kpYaUTS0pFxog6Ssiaesiefr2+uAVLpQ/b8Fjnujh5WjjJbWjILWjCOfRxstTw8sPB/CSOoiJoX4XZx/AyzjL8o9kG5SaUBsv9JD0tLc0pNYUpNYU2fPRRtJVRNI1449+iNkeVghsGGC2h/8DtuVboJXRK/4oLqiHbaCNrdQugtQuck2kj6OIra3JHT8ls4qyv4vL14dYuNhHhy877ih4rYejtpyBUvMHUvPHM5EzUA1HL/xWvNHTliVQas9Aas94JrLEVkTLM+eM4yqeVuUiLj7EZYnAUVyUSXY/j5clUecoGcrK6KGrLXmg1D6B1D7xTCSPpYiuHRhqlFg9xIpiiHkglpBWgLmh5/sRYDTtwYJ66OpLI6k9Aqk94hlIIxipoeuGuuiyKuPJ9emYqIzQs3gaJftaD0l92SPdsoLU8vEMZA9UtHxcTxdJwiP3wdvxyQFYZlPwb1f/l8NE+QX00NSXQFJLB1JLxzeQQFDR0nHhAJpSrnqcPzyg4kutWR7+vL+hdgrfa+Hq68sqqd0Dqd3jG8gqqGj3OJF0U1WsfULCIgPME2ul0iEsEuuYm7xUXFAPW31JJbWRHGoj+QaSCiraSI6vh22PVZ6+vcHq5UuBbc6+1sNRWyY5UgvJoRaSbyKTFC0kx9HDkbDJmkESTrnJQddf6eGnLYkcqRXkUCvIN5FEilaQY5mHcp2gOlKeaJkC3ikpoYestlRy5PGI1C4KTKQSYxdF9ghGUQSDfTsIRxhLi1hwa0B7YTTCGiN0laK6bJ9Q7ZtlWiWvk6wL/t0wBfIiy8EzjHOSlvWP/7hGk3m2zO7rkLrjAk2TCpBgcoFf/hj/zUg5tjzjrKeltGYr0JZ1jtQuc6hdFhjIOgv2Aht5u3iQbFnbYW8dbMaCHpyfkIjFNg60/pmPmCDQ7onUr+5QKygwCNK0VjZmKFnSUbSmDq0N5iz+DJ7/iUZ7gOdMjAf5Ie89tTICA8loWWq99+W9r6Mqmu7XG83PexEWgwOgyn2gtEnWe9gMYmUqOa5gFCFvDpo+xlm5uJ3xt3dX7+QjoAp1wBeqwyMIFUewPg/MCCqUolnO3Wnqv5ePhKqwgVI4CmckiuZB5HBHwj2aNEuKsspwg7e33PekL7xhP6EyKUYuVUUDvgowjJGiqh9Z4tmOMywbuKPuvZaPoz0WoxTowhmHolptW+u2INXtbt/EScqfBt7I5OXlQ6VaW6inW3grag5t/gitRlI5Mkl1lFQVAncoAddf/zb5MCvie5SBhJiwYHWStcyW9ZM4u0d3KGu4aYrw6MCnpJqDCqtskzhNwV08+QDi9FP8WIIkmya4Q6h+y+gLIKuPTimpGU9vZFM3GZgOquqFShFAvYf+avHYkbXv8abEJVMCJUZItKhMAiMOF4s0QeVtlZ/kk4v8VnD8sU+1wx9p6XGh9vEUV34+hepxoZ7u43u9aeCocHQa5Drc4bK8x6rDAyaoIyyfGjUZ9wcVKJsggBFbktlpJ4D3Rk5oVLML+bqRjNCYjVVo8wnN9XZEaKq0tQVy0nYvuFKXt0uV0VDPvcDsvULIJ6cGbDk5bTDTdbMLMObBxmM5JVElNeQrRsKBMaG6IX9gUGFgr5bZFGXsmJhz4d2Aes/ko6EKa6ivwjBbkCIGDHe1Lo6SNMWMtB2o6jJR+Uxv1Wi7Plyp49ilWnekp54w+5sCHuxHw7SF8Vo+1ESF/0Kdl6j+W0pEHtWDI30pzuwdYtWJS0RN15WIiHNMn8SlJNk9GcWtdWsLzQPZN1okEWnLZU/qp/Woch45fQDH83iBBKHp9buexmpzBXOjsvad3Ud5gSEoMbhpKhs5aYL2jPBs8rNNKDOpsOqaDo9b6l/12oPeCmdKmEchc1bW566F4YVwPi8QOFzOKqyfl3gocauFd4wV92yT2zYP5SuF6ruRvn8gZIzFkLtSNJbJ6Wesm2dx2mpPqgxU6Tu95aLtlvekaqxH1dhIzy0f2kOeSM8aJpzXCdFLY2z4ZJ078nAyyZdZBUimk85+6D2TUwxVXCN92zy0hhTXZkyKNHO5LGi/8ayv0uJsEgm/oGaGA+0UB55UHfXaQ8iWgYxiDiPzV17jpVbEsTmsnZSYu9Q5QBSXnspnmhjrSyppbIbXnie2lI6c9DFmjuMH1n60ibEfhSPfCh0nII4kO6z3dhwh4M1OjdTpwXFWNDNUZ7khf/LmYfVSE23tI5eeNHbDC9uKDbzljDsLa10uHDk8aeJJzm3b1oqiT9Dd4bTg6lbtK02stM9WelK12ovaig282a4aVl79QhktKEYL6qLFSRcwgJY0wsK32ooN/MGMmeuHfLRs36+dwe5AcAB38V6TFEm9tUufUP3/5nr89mh8c3F5W+eiuppU9u3Z5fWbw5vbJkkePeoT3yPMQrnmgGYVepOln7vHl5oHvt1WrC/YbFuNtCN3JD5nvUnajpi0HV20tEWULzUqfNhWrC+iPCWwfMfvHw0bAMsVg6UZ5m/rJ9XxpXEYfpcYSl/CqDFNP4hGUAMsTwwWJxWcHCxtEeNL7Q6/ze+kluamr/wogRVAWxJIuQmWLwbL1wVLW8L40mhzv03YpJZ6pvcQqoHlO6NQA6xADFagmzZMn8PL0ye1potaepg+h1cCK7T8kSTmaQOsUAxWqAuWPoPn2yA/PZNkRtzMg9pDuBUKgoQvZ3le9fNCNk966l4vo2P3fjPzoyxPpDC3ZBpP0Hl2lFfYlG4fvkYfUUoS2TJpI7eRNdKGSltkLYExmwBh2Oag8+s/oE2suk1yk1rJ+2AyjwtMWi8sU/ONnkl/mT+gBUZRcmy9K6JJtJy9MtNz7NIw8rY9n+P6tZV8v2RSeOEKNAu1wO3buHObWgnMJNaxRXf1e1wVqJrMW4I8JD7feutCyWtc5wpl3MZNnVtIYwk1A3KZYyE1WnyXsSemWp8TyXz29W8FmCbEjVzOvv5tXiyze/K7RGXrWcZ/3aO0QhlYZiUqEIjT9B49IIxDBn5G5WT+9ddZVd4hkgsbf0590DdzBNBnNFmS5kA+A83EgRjXUC7rBOegykG+LECdkiEupgAvjgdcIpuCSZ5NE/JlST4t4xQpRYZsv9EnRrHW1L+L7Jx6G29RoEI7oR7tnCZ4rqvlQ/kxL+7QPE6r5+A8w4RQYhwJoXxCSYlp5FOCSSwu4uUMzJNsH/9dljXNvSfTgknp669f/z8lrmKYusBdUoIveAb/HM9TQq5JBj7maYq/ffn1vzAB1DWBtnfgLkXJXdU4ueuE96Cck4AhzBRi/GmVVCkiRHGf59MSf1wlKUgqMI9LXGSCko9oChbxIyE60tRsmaYjNWLcWmNPJUJHO5aarxYrKC881tdLcc54gxtWapLkfC1BeIHiCt3kFR4ZptgH4tLf/99/XebVn5ofmCwn6ZJQEHh3eNO8oQXOs48jcmFDs9HRFG/eiK4I8KT5wNsdpzqdPxkgTYTPppPvooIoGngAozqqYz0nfZN7nq2S5qBnkutHAlVKlF+8m5BWjxIkXhJlGXd/kyzjLqMuSiX1gMa4OVq9oPNo5e8PBPGU+wBqnH4ZOpNxlZcNqyKd7o66kb8lIxQte41YqboSqarXQdmqe45eyFTgDEGpi+UadC9fdbrfKxO0NHZ4V2iJVL0OrVbd08yBFDCpAHzIhSvaMukdFlXyAaVNHG9cVM1BlHeoqKjsaQy7DdnXPP63ZVkls8cuRretwGAiNFSm1USI1KZuIlrVSTNdkt8PH+NMROBveSLeFuWCKOJlirlvE9BBxFLxSNTSyyK5TzJpMFprXm58sx6lpj83OpmXVnMjcrJ1c9P62TQTMLnM3PB5SrTtRdKETmDM71E9M/9nGWMlDuNTzpPFAskTQzcTs/nJFuZF4/Tyal5E/rxuXlqXnmaiJ5eJUnFsLvPyvC1PDLmWJ27isWtNUL4vRzX0puDGJp0B/kaiVhSm0OHfRipopodyrd7uJvegy7YXxmmSfUHposA2Xz0J5JIvsCiSichy780EW3ob02Eky0VxDN10tKEMmhmlnNV5P9vyuNNBgrm2PR1zbCV1U8ECbQKokUwWBTt0gLbxDsRrteE5FGhM645Dx9oPuO4Mg3DRZvyM849kh9KLGV2NXhS8MGBHrypQcroK8kzdFHFWbtpwzGNPuC3QL6S3N8Bx94dkW357FpxnsCW+Mj2gBwXRHp7nDvj8u7DI2ktwe559bB0HzRPuaSpRWf016Gnsmw8T0SYh6QUwe/3MbnxMbdsZxHTdI03uxkTVly4HAf4gyZZ1teSuyem4KuqbRsEqL36vjAGwGnvsK2DFlp/i8h7YJaBJd2s3wNMuAmz8bNxL7oJ1ZxPPx+TKwmFkfqZuNN3a5bP0o3z6yHIp8tvuhfK8jMvL7KpAlE9twc/UtsFcZifxM9UjUeBUmyM2PKvs9rwl3FOjdayFcG2F5nGlH28LRO735W5Jrl4OwCBYbL5G2EFX0SAn63BvuZmvH4QQhT01jXcShViZMjVNDLowHvAIG/kf/oyKvKXplZ6Wz96guCTXDnIXc39e5B8YzpVG1EN/rmRusW6uWteYry/RbSatm+g8rzdg4oTc41gELiq0154qyXvDmgznR1MjWM2PzFvWzU/rMfMNIreZ9HCEU/GPARmtJOmBS4Ju/8iBaL0IShpOhKYGsZoImWusm4jWPeYbhIUzueQkgsRoJgYFyUssJypEtmY/LIsvdRKTRp/ZnA5RUcP50AgE7M+HzCXWzUfrFvNNhPtqPjzInxBVvqWZDKJx72cFVFkektJmUxIYy32Zl6ybktZTFhgEHzI5gGRTIrmuMWRDD8tJkdQmzTpyghhqSXlDqI3FtswD1kHdesEE2cekyVCCnsOeI7Wjgc2U7WlYrRt+HXXusQBxYcMpMpbcMp9aN0WtX80gQ5nvDilWQ/tdTxAYdM/qlpwgzLN81mxckeOnQsEx9Inh/BgLdLHXj5mf9iJC2yBtmb/aXLE9QeqRgZ307ZopV8Rtr7SKJKUNp8lYzgsvOWwLKRn7P9Vu+OM8XT5kbZeirXrlBAnAuB6T3qVmjCN2N76TgPGdyNKt10MycZ0YJNuymaNiMlGuK8mVVCZpeTP61kmepU5gTyFvknZri1ExgjxXXPIOOeQNd0beIUPe7k7IW8/f3mQwZNJOCfJu1llohrOGUPW+TtDUZT/lvhqktx67Mk0ounJ3evwoG9fZGFibFisvy9suplLN+lf4SD7uJ6ygYKvhTIKMWNwVFHFWkLOzFRQp7wHWgzJaQ3wDXLqGmKPfYRCMHP7WlUOuFSRXVMolxUZGbbRERTmZL9Pp17/doeI+zu67EPf//k9gO3fg8K4cQXBRjLAWmIzejR5G9SMPvB1XP4N/pqcnkhIs4qIC+N8szw4mMZ6FlOzZ1EcVyKMCVcsiI4/+WSHqSLtGraCkemZ4EizakbvffP2R7F9PCVn76Zl8y+unpjWFPbFxviwm6PTzoujtudRbblxfAVNIOoKGI7PVNyHt/Whzwuaa56PmnzoIJ58BuonQhsHX/eEeaR7YpBjso6PTx8ZT/qPSSGRR/YfLKsc84SGuGpZhs4+UevIzqo6XBREcj01mpBoh7jlm042FQehc/eltTyP05pV7oFjkRR/sldfr1aZPlzbKPZgrdBYPturrY9G5N0cA9vCINJ2hw70LdHrH2BBNh+rzfHpOw+EuhTpdal1ftD/c9DkSX9pgZyJOZ6hT51nj1FmFMNeZyNj58rj5aQbdSIOdwqLZjH3W7g0Rq4G007rOEYX+2vr9ZYiovwi8IUe1yTKwDQRSraUfrJIorzEvjyuUnqTaE7VCJr3Vj2hCS9209X9LvZyNealV362F5kGDFF/MreR2nQiTG0dm4rPRdNnoeWx4ui7USQe2Iiaxnqug427qt9CS2Jdy3Zbda4aWul3J8zvuLGYr2CH56m/n+lZ/t4QfWapAvgL/+rcJNYU62b9WdKXq1IYGOcC8sL/rwQW63vcwA1oofbVEtQnUmi5ePQcrNEkg5vc3aXlQR54x0iJdUUevNMHZKHpa1Q0HDXKPeatIEF+U9egfRPLpZClbgSvzsZhIPntQ8skTWLXVqEs+3paEtyvJx+5IyI7Ec4CR7EnKY2zY2BoI1fcieZ5mf1fARLtTCQxymQXu71Il0MmAtqIrZZVAkNNMCjT8naoE0EhUKasEUF9UBdbvUSWARlJLWSWABrE90e9GJYCaoTl6mQKgIKucFNywF5IuyjK59cBbtR1p3Vh0LuiOkd0mjnk208McyQ6bPM6UjS+FjuRk62auS+ZxP0pg82jrqpTR2dZgZ2dboSAXk4yqQ+Wzra4s8/s3P94KnZ0eb4WO5v08ysdbh2H95idcofNtTrhKLzuI2r7xxaQom61tCxf3qoDRuu7bV/LrbtoAXihIUiDsPRzqPdTtvcCmooPaoW3kGFz146kyK6WD+BtsR0XQDn+kv77c3fpLXb4VKuRdrirv0juaf40m82x0cB3fxRW5/5Qk3FnddMp5ZwDklr2hqpk2pHdX2C3Fu3qJt+2hzNu2durtNqrbYg+uhyPZrQK6y5qEHm3kYhEcY+fkYrE1c7HsKodzPS4mlQskIUzKeZwZ0ngybUnTuNjdGudHzgppyx2iLXe7gsRmU7q4wXZJTu+OWtftkxxR7XTsuKFEkick/3WdnTgDn5aYVjNwcX788oZk5J2S1MJvwRwV96gOVyJVJQhgY7BcFJgJdoXJZ1fF11/rOIQvBbpHaZcZG1e/KPLpclKV4BNJlZzlFXiIs+UsnlTLAk1JU+Ty8tNlkS9QnIG3Ge6gYt7hp9SvkWq4nkYuEzcy/dWlYcRhUALWrMygnKB/acm34VEk2suARz1d/klz0dit59Dj6yFCHiVOMbUqYCb/YE/+eVvVa0UZtWRnGJj7wIW+JTtoLs6OJJeYGN4z/SlGdep+bjTc6qX+UvaM8koqL2WPHyMlh9pRhdr7h0LaKIOkstPfMziYw96cPkDU/1BIGyWHVHb7C3JcSbdXVp5pR7S9YttQhXv0FRsmzel59iF9835ckUc8RDcLGSBrlCVS2efv8/efpcgGysgqkTDFSQqiIXi+UWpl1RS+0NeXaoGvCp5vj1wV8DBt3TS+gT+jJEXvDm8aF4wIT2l5A4iNpJlqll7o60uzyFZwiLmR6cpv0Opuv8D4KeV+Gf7KAHsj+aaakhf6BjfVR6rYqykSXOCGtk54hQ3ANRJpqul5oa8v0kLmMnJxcEakwXjVPbxbc+v6RvLs6Xl/+bqG7ODhwKFDzoHD3nG6b3BezuEebBLvPUq3Y/pnSzYOUTmCO78l4RHS5njnFpVO/2wFOK5CLAlWkg6lf46wf9bL0UqFNNCQx8Fs7TyPwz13pHOAh3Mc8ODbUTj3eJLCnpV0dP3jhIyRVDfJPYTKFJJW3T8WyLEa6ia4J0Y5haVNRZtNMU1wz4cyhYa2Ztm611TI0ZrOWbfHPfQp11XlXeCdxhNfRba7M8kSHitXCuXD4x3lEw8PHICWie9qnFz+LtHG5MNzOIJyd33nsnM91iA7tSj2XlD+zx5Uzx+Ie2Zb9/LxMo63iQ2654Lr80iz+9u7Q4+X1twTRG41Kc25UIsdFlTGdayjIrdTkn5s+3rDdX7W0BYmbnAUl5TS9sWF+DccvosLpudff226zs0YbzX/QV86jxfLhztUtEALriZXvqMQCnIlie4o7Ke+29klhZDdhYe2vdU9UUEmJeF9cQqHiYbvtJZsir75NK5GNLADjBfoSzJLPtCYNercEZfQN71CI4tWeeNBkDVJeA2k23MV1FGf6+h6lrsPmjeqEA9d4kNWYxdno3oRX+9epV4NT79YCYZGFrHyLkWkea2xMzwt5AKy3UzLAypLckvfPdatp2l9g/tT5ohT3RYmLDLyKitvdkR6F/ZFqx0laFv8CbN2Ml1/eMrk/GE7U2HkfX7CIUn1W6RgJHBdD94iBcXhuGul/s7ukYKRwa0GFhx2GddyQCl8tTMpb9f0NZ5FIC5sQIlbTlSxTkwG1xRYChshNStXRZZow4q4cosaoGoU9qQuGzVzHVpWj9caaYSyswuiowpsEW0QHcsoklosr7ZzFxftGz/8iXf+Gfbi/FfJap940hnCnYXzO5ZB2JPl/x74oWPtNMrJEWSCkiOrcFLi75sfOtZOI5ocyyCiic2fbM4TO0yvJqqkyitpgOiWI5eMjnc6JDOU/HinSn40R5RtafB4JxQfq1grZaRyOjtTOR1bP4DJti1FFqt6vPObcVnbyBRV5rK2ifxSCAGpuawGuL89o7WNxJcyo7X54kuseIZKTPYp52Z3o3vaRgLrybqnSjo+x9Y7HgSHjgdB7eNBTGK/LvLej0aSCFx9/mhgONrulvgjL37u2/HKnR6hcWyTi+sUEg0o8UoB0L8934RGtqYy3xTkjhJfTgC3wjeluzj1LmIvlNkEN6NDuk/mk/xQ5+1GxalunBoGAzTe0H6OYxoRsJnamhsFI+FIGhFyKpvIv80guaE3Qm6gEZUnHuIf2A743BAZkW1nGn7BI10aq8YEN20z5qLb0ac1P30vH7x/eXp9Sn+9OL68GN98b//wA6A42obBFLzoehroxgyAr9tvBRu4Q3AoNgIdSTn+wYHqKSlh79DlbhIukjZWSiD0R9EWlUBBZi/5nT7sSbXIG4Vi6WmNxFf68KyO0xJ8+PpfWYYyUCaTOTjNqnuUVg9JhpkctjPw83g5qzdt68PhR3m2LD+iAiXZXUwKgI/tTuOLve1Upi+xzfKCKauTjslNfWTa2KssnZErOCZg4Unz94ETDU1dA/LH2zsC2zSultwbQ3vvDbDcacJmR5ACTE7+THpG3xZRvw0tf+QaLAGS6+AOtdkHXux1vw3AM0rytW0PJonMlnswVTbNHYdvk3O5Mu+Kh53dzQn93fkwBem6pPTprNxskVHmRR5V/vGPADT3rc0wf0QgwWwVE+YD5pXlZB7PqhRzWAReJyRStM21Rj46x52PD0is6zIjlFkuF4v0kVwyc5/n07KlcpWiBgtgy4a94QIYTAittCHqqieEhrxLInZ2eyfcXY5GRzMZV70AXGsnCwBT6AUm8gokD5hUU3KNX1mvCKwsYMpHSVlhwh9Ryv8juIk/A7xYEECfF3lRgRIVH5MJGq1IXlJGn9bNknltm9Zdyf1JGttVLt8LzqV1Xlr4nd3nA8Md0rrBHbWu/Rsw+8NlOVvOi7Rl7qOOu7f025DviOXm668MKPrv4YYfx93KDT+Oq2FU8vL57868VL85Vp+iDaxLl7EuHdsT2SlGDPy6udATHM9jrLyAA8BeIZvVf2BVBhuDZcfPS/SwmH39FVuLRUnOVi2rPE3+ukymdWc6Zr/1mlkpsf3K9Rejt2Wj1mwxeoPJrlUuHXEESad4i9GxOIvRe/Kqc6zdxZZ5ukbtKq5sN6dZiFUwAnEGDqcFKktUr5rxPFksyNHFeFo/bQl+47kBrW45ubUhrQ7avSr3wDiCXFJcWrU5tLqzi2Cc3YWLO57J3jSTfcj2nhJuppc6a4zS9LbKj5dllT+gon+CvtmeuX19l/KcY6qfGiyB3W5pCzLUyudHIVLFcfxvM0OGs2MwM/6W98HNmJO/lVsjHEGeKy5z4gVpB0/nQmyQtuOEI3eLbMjXvyHCXXnfAlEaL8yFYOSrJeJpPGqHGRad3C3q3nsDatyyqFzjE77+sR83VAPQc0ahJoCC69eZ9wYAbvmyhzWnn28gCKGrhmB9hloPQW7Gk957AwSNRJXqoUnHNxBV0FFCsInI00OQm6am914fwcBIpKhmgnQCgw1HCNUQrLez9RDk5i3qvTdA0Mh5qpoO0gn05YgNbSUEh07vcgDkJprqvTcA0EiOqCZ7dAKD46PQUgJQNdicAYibRKb33gBAIzmimrHRCUwMKjVVRun8DoMON31Q770BekYyRJyS0UypDgY3+vgtbjeqsh+RUYdEcVd8v5xGPONgGGKd++f48Orm/PLie1oa21IHVQ5aYwp02ejasC0uW1e2rbUzCA5GUYp7TDvMleRKpqZGjkBmXfx7+Bfa8pAWJjsy1gh2URNB28SwqqyTFpBtwm+bGDJnfK3cfGwTXtsEN961r4xp5Ohjm3BpEwE3orWvrWjk5mObcNomhhimbMu1Zg+WsA3YtjEs0rSS8LFt2G0bQ3qH0CUxHPK7KQdFPFXCTzm89CwpHlCGWSTKRldJfZtLMxibBqxa3EHRorfM5/yxcbgr2yTNpjm+xGL3Pu9xH262y/ElKafYbJ8rHucPizh7PM9meTdj3SC5RE6/ID8krbjCVuBffgTf7YPvwI+Afez+BT/AT9efe+ud4i4L+sVhu6cg7Jcn7Je/3hCX0dMvrua5KFMghw+yzQTrzXCnlH5xFn+WNBIIGwnXG+HydfrFu8Oba3R/kUtaCoUtRestcdk7/WKomUhMmtZ6O1we344oL8qq9kMKm1pjjr221teBLVsHh9fvZM3Y4mbgejNSyn6oyntUkEAkWXNQ3Jyz3hyX99NP3p+eng7Nli3hJO56Y1x+2S6mvKxm8WQua0vMT+wNDiEb2Eusni3qvF/itvo8Is7Kxe2MLMRamvHqXhURV+pvVlqhFM3a9NncddMvJq48EGm6C1SUefbsCr+cx+WaqovlRVmBDLdEc8j+2LDf4e8b5k+6zV2GzKe33acz0hpp7PaW+35AoNjhJoBxVqBpJ5mFALbFxHVHRvidHryJk5QVz/wlfHpLyvFHLdMPLBP75XCxSBNUEhPmJJ+M1s0X/qqnH2ELBn+jbrw03eTlYR7s5nq3uPxBtyea9mrzz1EiN/hsroVKvjIy+Jqe9lnn2eX1m8Ob7xU7TNglCZTAnWpT0Vr7NrWnbb55ut43Wgep4ta6FWjgTVddE1BPP1eoyOIUdLmG11Hlqj3tZ+1XurCuaXd0cmjDl8sCHE6a3PTrveGydfwBLY/70VYma943gYqclsSiNimrovawbfRNdESV/UgXqL7AeJUvErRK1W5zmTpTSFxvn0mfoDvWgQG5I2kKCXwXTa0Rr9ZWkYbcuWsKCdwVjR1k8WptrQDIpc+mkMBD0dRq82ptVRTIXZ1NIYFToql1/e6NO9YZAbkcqikk8EM0tTq8Wls9EXJZclNI4HpoanV5tbbKLhTcEnIndjY0tXq8WltNHXKFf1NIxtyc/ood31yP3x6Nby4uv/+uPtYK/mB/t0+58zUiAc2Nq3xEwhUu8vbsKeQK1VVtt3VlV5PKvm0qu2Ura+q65XVT5AHhbcdvej7Wd0z7Jdg6Vm9+evYLZilN98rX8WO+rMaIuPWTL6j4l/8B</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

