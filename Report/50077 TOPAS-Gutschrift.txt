OBJECT Report 50077 TOPAS-Gutschrift
{
  OBJECT-PROPERTIES
  {
    Date=25.01.22;
    Time=16:15:25;
    Modified=Yes;
    Version List=Beleg,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table114;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufsgutschrift;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo",Picture);
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  //25.04.2012-ST
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesCrMemoBillTo(DebAdr,"Sales Cr.Memo Header");
                                  IF "Applies-to Doc. No." = '' THEN
                                    AusgleichText := ''
                                  ELSE
                                    AusgleichText := STRSUBSTNO('(Ausgleich fr %1 %2)',"Applies-to Doc. Type","Applies-to Doc. No.");
                                  FormatAdr.SalesCrMemoShipTo(LieferAnAdr,"Sales Cr.Memo Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + '°' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  v_bonusdatum := 0D;
                                  v_FER_SPL := FALSE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  //Bonusdatum fllen
                                  IF  Customer.Bonusregelung <>'' THEN
                                  v_bonusdatum := Customer.Bonusdatum;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 4   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  IF Number > 1 THEN
                                    ReportForNav.PrinterSettings.PaperSource(2);
                                  ReportForNav.PageNo := 1;
                                  IF Number > 1 THEN
                                    KopieText := 'Kopie';
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkGutDruckZ„hler.RUN("Sales Cr.Memo Header");
                              END;
                               }

    { 5   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000003;3;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 6   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 7   ;3   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 8   ;3   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 9   ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 10  ;3   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 11  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 12  ;3   ;Column  ;Applies_toDocNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Applies-to Doc. No." }

    { 13  ;3   ;Column  ;No_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."No." }

    { 14  ;3   ;Column  ;Bill_toCustomerNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Bill-to Customer No." }

    { 15  ;3   ;Column  ;SalesCrMemoHeaderPostingDate_0_1;
               SourceExpr=FORMAT("Sales Cr.Memo Header"."Posting Date",0,1) }

    { 16  ;3   ;Column  ;ExternalDocumentNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."External Document No." }

    { 17  ;3   ;Column  ;OurAccountNo_Customer;
               SourceExpr=Customer."Our Account No." }

    { 18  ;3   ;Column  ;VATRegistrationNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."VAT Registration No." }

    { 19  ;3   ;Column  ;KopieText           ;
               SourceExpr=KopieText }

    { 28  ;3   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 27  ;3   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 26  ;3   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 25  ;3   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 24  ;3   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 23  ;3   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 21  ;3   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 20  ;3   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 22  ;3   ;Column  ;STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_;
               SourceExpr=STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo)) }

    { 29  ;3   ;DataItem;                    ;
               DataItemTable=Table115;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                   IF v_FER_SPL = FALSE THEN BEGIN
                                     IF (("Sales Cr.Memo Line"."Manufacturer Code" = '82') OR ("Sales Cr.Memo Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                     END;
                                   END;
                                END;

               DataItemLinkReference=Sales Cr.Memo Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 30  ;4   ;Column  ;Amount_InvDiscountAmount;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 31  ;4   ;Column  ;Description_SalesCrMemoLine;
               SourceExpr=Description }

    { 32  ;4   ;Column  ;UnitPrice_SalesCrMemoLine;
               SourceExpr="Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 33  ;4   ;Column  ;Quantity_SalesCrMemoLine;
               SourceExpr=Quantity }

    { 34  ;4   ;Column  ;No_SalesCrMemoLine  ;
               SourceExpr="No." }

    { 35  ;4   ;Column  ;InvDiscountAmount_SalesCrMemoLine;
               SourceExpr=-"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 36  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 37  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 38  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 39  ;4   ;Column  ;MWSTBetragZeileVATAmountText;
               SourceExpr=MWSTBetragZeile.VATAmountText }

    { 40  ;4   ;Column  ;AmountIncludingVAT_SalesCrMemoLine;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 41  ;4   ;Column  ;AmountIncludingVAT_Amount;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 42  ;4   ;Column  ;Amount_SalesCrMemoLine;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 43  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnAfterGetRecord=BEGIN
                                   v_reverse := ' ';
                                  {
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" = 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '**';
                                    v_reverse1 := '1';
                                  END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" <> 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '***';
                                    v_reverse2 := '1';
                                  END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (Item."Gen. Prod. Posting Group" = 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '**';
                                    v_reverse1 := '1';
                                   END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (Item."Gen. Prod. Posting Group" <> 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '***';
                                    v_reverse2 := '1';
                                  END;
                                  }

                                  ////  Ab hier fr 19%
                                  IF "Sales Cr.Memo Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Cr.Memo Line".Quantity > 0 THEN BEGIN
                                    IF ((Item."Gen. Prod. Posting Group" = 'SYSTEM') OR (Item."Gen. Prod. Posting Group" = 'HANDEL')) THEN BEGIN
                                        IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = 'SCHULUNG') OR (Item."Gen. Prod. Posting Group" = 'SERVICE') OR (Item."Gen. Prod. Posting Group" = 'STD_POOL')) THEN BEGIN
                                          IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  ////  Ab hier fr 16%

                                  {
                                  IF "Sales Cr.Memo Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Cr.Memo Line".Quantity > 0 THEN BEGIN
                                    IF ((Item."Gen. Prod. Posting Group" = '16_SYSTEM') OR (Item."Gen. Prod. Posting Group" = '16_HANDEL')) THEN BEGIN
                                        IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = '16_SCHULUN') OR (Item."Gen. Prod. Posting Group" = '16_SERVICE') OR (Item."Gen. Prod. Posting Group" = '16_STD_POO')) THEN BEGIN
                                          IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  }
                                END;

               DataItemLink=No.=FIELD(No.) }

    { 44  ;5   ;Column  ;v_reverse           ;
               SourceExpr=v_reverse }

    { 45  ;5   ;Column  ;UnitofMeasure_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Unit of Measure" }

    { 46  ;5   ;Column  ;SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmount;
               SourceExpr="Sales Cr.Memo Line".Amount+"Sales Cr.Memo Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 47  ;5   ;Column  ;LineNo_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Line No." }

    { 48  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 49  ;5   ;Column  ;Artikelnr2_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Artikelnr. 2" }

    { 50  ;5   ;Column  ;Description_SalesCrMemoLine4;
               SourceExpr="Sales Cr.Memo Line".Description }

    { 51  ;5   ;Column  ;Quantity_SalesCrMemoLine3;
               SourceExpr="Sales Cr.Memo Line".Quantity }

    { 52  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               SourceExpr="Country/Region of Origin Code" }

    { 53  ;5   ;Column  ;UnitPrice_SalesCrMemoLine3;
               SourceExpr="Sales Cr.Memo Line"."Unit Price";
               AutoFormatType=2 }

    { 54  ;5   ;Column  ;Description2_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Description 2" }

    { 55  ;5   ;Column  ;Cross_ReferenceNo_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Cross-Reference No." }

    { 56  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Cr.Memo Header;
               DataItemLink=No.=FIELD(No.) }

    { 57  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 58  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Header"."Currency Code" }

    { 59  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Header"."Currency Code" }

    { 60  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 61  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 62  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 63  ;4   ;Column  ;v_bonusdatum        ;
               SourceExpr=v_bonusdatum }

    { 64  ;4   ;Column  ;Sell_toCustomerNo_SalesCrMemoHeader_Lbl;
               SourceExpr="Sales Cr.Memo Header".FIELDCAPTION("Sell-to Customer No.") }

    { 65  ;4   ;Column  ;Sell_toCustomerNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Sell-to Customer No." }

    { 66  ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 67  ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 68  ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 69  ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 70  ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 71  ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 72  ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 73  ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      VerkEinkPerson@1140001 : Record 13;
      Firmendaten@1140002 : Record 79;
      MWSTBetragZeile@1140003 : TEMPORARY Record 290;
      language@1140028 : Record 8;
      VerkGutDruckZ„hler@1140004 : Codeunit 316;
      FormatAdr@1140005 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140006 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140007 : ARRAY [8] OF Text[50];
      FirmaAdr@1140008 : ARRAY [8] OF Text[50];
      Verk„uferText@1140009 : Text[30];
      MWStNrText@1140010 : Text[30];
      ReferenzText@1140011 : Text[30];
      AusgleichText@1140012 : Text[40];
      TotalText@1140013 : Text[50];
      TotalInklMWStText@1140014 : Text[50];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      LiefAdrAnzeigen@1140019 : Boolean;
      i@1140020 : Integer;
      waehrung@1140021 : Code[10];
      waehrung2@1140022 : Code[10];
      ansp_anrede@1140024 : Text[30];
      ansp_telefon@1140025 : Text[30];
      ansp_fax@1140026 : Text[30];
      v_bonusdatum@1140027 : Date;
      v_FER_SPL@1140023 : Boolean;
      v_reverse@1140029 : Text[3];
      v_reverse1@1140030 : Text[3];
      v_reverse2@1140031 : Text[3];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body6@5033(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body7@5034(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body8@5035(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body9@5036(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Footer12@5037(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Footer14@5038(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
          ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body16@5039(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body17@5040(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Description <> '') OR ("Sales Cr.Memo Line"."Description 2" <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body18@5041(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item)
        AND ("Sales Cr.Memo Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5042(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item) AND
        ("Sales Cr.Memo Line"."VAT Prod. Posting Group" = '13B2'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body25@5043(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput( Customer.Bonusregelung <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body26@5044(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body27@5045(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(( "Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body28@5046(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body29@5047(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(( "Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body31@5048(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Cr.Memo Header"."Sell-to Customer No." <> "Sales Cr.Memo Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesCrMemoLine': CASE SectionId OF
          'Body6': OnPreSectionSalesCrMemoLine_Body6("Sales Cr.Memo Line");
          'Body7': OnPreSectionSalesCrMemoLine_Body7("Sales Cr.Memo Line");
          'Body8': OnPreSectionSalesCrMemoLine_Body8("Sales Cr.Memo Line");
          'Body9': OnPreSectionSalesCrMemoLine_Body9("Sales Cr.Memo Line");
          'Footer12': OnPreSectionSalesCrMemoLine_Footer12("Sales Cr.Memo Line");
          'Footer14': OnPreSectionSalesCrMemoLine_Footer14("Sales Cr.Memo Line");
        END;
        'Item': CASE SectionId OF
          'Body16': OnPreSectionItem_Body16(Item);
          'Body17': OnPreSectionItem_Body17(Item);
          'Body18': OnPreSectionItem_Body18(Item);
          'Body19': OnPreSectionItem_Body19(Item);
        END;
        'Total2': CASE SectionId OF
          'Body25': OnPreSectionTotal2_Body25(Total2);
          'Body26': OnPreSectionTotal2_Body26(Total2);
          'Body27': OnPreSectionTotal2_Body27(Total2);
          'Body28': OnPreSectionTotal2_Body28(Total2);
          'Body29': OnPreSectionTotal2_Body29(Total2);
          'Body31': OnPreSectionTotal2_Body31(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'SalesCrMemoLine': WITH "Sales Cr.Memo Line" DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  Verkaufsgutschriftszeile, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.

      250122 st: šbertrag- und Fortsetzungsbetrag Sektionen ausgeblendet, da mit 6.1.0 mitunter fehlerhaft
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="ansp_fax">
          <DataField>ansp_fax</DataField>
        </Field>
        <Field Name="ansp_telefon">
          <DataField>ansp_telefon</DataField>
        </Field>
        <Field Name="Salesperson_Purchaserfirstname__Salesperson_PurchaserName">
          <DataField>Salesperson_Purchaserfirstname__Salesperson_PurchaserName</DataField>
        </Field>
        <Field Name="ansp_anrede">
          <DataField>ansp_anrede</DataField>
        </Field>
        <Field Name="E_Mail_Salesperson_Purchaser">
          <DataField>E_Mail_Salesperson_Purchaser</DataField>
        </Field>
        <Field Name="Applies_toDocNo_SalesCrMemoHeader">
          <DataField>Applies_toDocNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="No_SalesCrMemoHeader">
          <DataField>No_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesCrMemoHeader">
          <DataField>Bill_toCustomerNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="SalesCrMemoHeaderPostingDate_0_1">
          <DataField>SalesCrMemoHeaderPostingDate_0_1</DataField>
        </Field>
        <Field Name="ExternalDocumentNo_SalesCrMemoHeader">
          <DataField>ExternalDocumentNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="OurAccountNo_Customer">
          <DataField>OurAccountNo_Customer</DataField>
        </Field>
        <Field Name="VATRegistrationNo_SalesCrMemoHeader">
          <DataField>VATRegistrationNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="KopieText">
          <DataField>KopieText</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_">
          <DataField>STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmount">
          <DataField>Amount_InvDiscountAmount</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmountFormat">
          <DataField>Amount_InvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description_SalesCrMemoLine">
          <DataField>Description_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLine">
          <DataField>UnitPrice_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLineFormat">
          <DataField>UnitPrice_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine">
          <DataField>Quantity_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLineFormat">
          <DataField>Quantity_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="No_SalesCrMemoLine">
          <DataField>No_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="InvDiscountAmount_SalesCrMemoLine">
          <DataField>InvDiscountAmount_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="InvDiscountAmount_SalesCrMemoLineFormat">
          <DataField>InvDiscountAmount_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="MWSTBetragZeileVATAmountText">
          <DataField>MWSTBetragZeileVATAmountText</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_SalesCrMemoLine">
          <DataField>AmountIncludingVAT_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_SalesCrMemoLineFormat">
          <DataField>AmountIncludingVAT_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_Amount">
          <DataField>AmountIncludingVAT_Amount</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_AmountFormat">
          <DataField>AmountIncludingVAT_AmountFormat</DataField>
        </Field>
        <Field Name="Amount_SalesCrMemoLine">
          <DataField>Amount_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Amount_SalesCrMemoLineFormat">
          <DataField>Amount_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="v_reverse">
          <DataField>v_reverse</DataField>
        </Field>
        <Field Name="UnitofMeasure_SalesCrMemoLine">
          <DataField>UnitofMeasure_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmount">
          <DataField>SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmount</DataField>
        </Field>
        <Field Name="SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmountFormat">
          <DataField>SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="LineNo_SalesCrMemoLine">
          <DataField>LineNo_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Herstellerkurzname_Item">
          <DataField>Herstellerkurzname_Item</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesCrMemoLine">
          <DataField>Artikelnr2_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Description_SalesCrMemoLine4">
          <DataField>Description_SalesCrMemoLine4</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine3">
          <DataField>Quantity_SalesCrMemoLine3</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine3Format">
          <DataField>Quantity_SalesCrMemoLine3Format</DataField>
        </Field>
        <Field Name="Country_RegionofOriginCode_Item">
          <DataField>Country_RegionofOriginCode_Item</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLine3">
          <DataField>UnitPrice_SalesCrMemoLine3</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLine3Format">
          <DataField>UnitPrice_SalesCrMemoLine3Format</DataField>
        </Field>
        <Field Name="Description2_SalesCrMemoLine">
          <DataField>Description2_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesCrMemoLine">
          <DataField>Cross_ReferenceNo_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="v_bonusdatum">
          <DataField>v_bonusdatum</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesCrMemoHeader_Lbl">
          <DataField>Sell_toCustomerNo_SalesCrMemoHeader_Lbl</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesCrMemoHeader">
          <DataField>Sell_toCustomerNo_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

