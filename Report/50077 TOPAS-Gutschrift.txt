OBJECT Report 50077 TOPAS-Gutschrift
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=09:35:59;
    Modified=Yes;
    Version List=Beleg,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table114;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufsgutschrift;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo",Picture);
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  //25.04.2012-ST
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesCrMemoBillTo(DebAdr,"Sales Cr.Memo Header");
                                  IF "Applies-to Doc. No." = '' THEN
                                    AusgleichText := ''
                                  ELSE
                                    AusgleichText := STRSUBSTNO('(Ausgleich fr %1 %2)',"Applies-to Doc. Type","Applies-to Doc. No.");
                                  FormatAdr.SalesCrMemoShipTo(LieferAnAdr,"Sales Cr.Memo Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + '°' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  v_bonusdatum := 0D;
                                  v_FER_SPL := FALSE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  //Bonusdatum fllen
                                  IF  Customer.Bonusregelung <>'' THEN
                                  v_bonusdatum :=Customer.Bonusdatum;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 4   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  IF Number > 1 THEN
                                    ReportForNav.PrinterSettings.PaperSource(2);
                                  ReportForNav.PageNo := 1;
                                  IF Number > 1 THEN
                                    KopieText := 'Kopie';
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkGutDruckZ„hler.RUN("Sales Cr.Memo Header");
                              END;
                               }

    { 5   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000003;3;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 6   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 7   ;3   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 8   ;3   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 9   ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 10  ;3   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 11  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 12  ;3   ;Column  ;Applies_toDocNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Applies-to Doc. No." }

    { 13  ;3   ;Column  ;No_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."No." }

    { 14  ;3   ;Column  ;Bill_toCustomerNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Bill-to Customer No." }

    { 15  ;3   ;Column  ;SalesCrMemoHeaderPostingDate_0_1;
               SourceExpr=FORMAT("Sales Cr.Memo Header"."Posting Date",0,1) }

    { 16  ;3   ;Column  ;ExternalDocumentNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."External Document No." }

    { 17  ;3   ;Column  ;OurAccountNo_Customer;
               SourceExpr=Customer."Our Account No." }

    { 18  ;3   ;Column  ;VATRegistrationNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."VAT Registration No." }

    { 19  ;3   ;Column  ;KopieText           ;
               SourceExpr=KopieText }

    { 28  ;3   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 27  ;3   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 26  ;3   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 25  ;3   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 24  ;3   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 23  ;3   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 21  ;3   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 20  ;3   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 22  ;3   ;Column  ;STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_;
               SourceExpr=STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo)) }

    { 29  ;3   ;DataItem;                    ;
               DataItemTable=Table115;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                   IF v_FER_SPL=FALSE THEN BEGIN
                                     IF (("Sales Cr.Memo Line"."Manufacturer Code" = '82') OR ("Sales Cr.Memo Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                     END;
                                   END;
                                END;

               DataItemLinkReference=Sales Cr.Memo Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 30  ;4   ;Column  ;Amount_InvDiscountAmount;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 31  ;4   ;Column  ;Description_SalesCrMemoLine;
               SourceExpr=Description }

    { 32  ;4   ;Column  ;UnitPrice_SalesCrMemoLine;
               SourceExpr="Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 33  ;4   ;Column  ;Quantity_SalesCrMemoLine;
               SourceExpr=Quantity }

    { 34  ;4   ;Column  ;No_SalesCrMemoLine  ;
               SourceExpr="No." }

    { 35  ;4   ;Column  ;InvDiscountAmount_SalesCrMemoLine;
               SourceExpr=-"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 36  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 37  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 38  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 39  ;4   ;Column  ;MWSTBetragZeileVATAmountText;
               SourceExpr=MWSTBetragZeile.VATAmountText }

    { 40  ;4   ;Column  ;AmountIncludingVAT_SalesCrMemoLine;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 41  ;4   ;Column  ;AmountIncludingVAT_Amount;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 42  ;4   ;Column  ;Amount_SalesCrMemoLine;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 43  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnAfterGetRecord=BEGIN
                                   v_reverse := ' ';
                                  {
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" = 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '**';
                                    v_reverse1 := '1';
                                  END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" <> 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '***';
                                    v_reverse2 := '1';
                                  END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (Item."Gen. Prod. Posting Group" = 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '**';
                                    v_reverse1 := '1';
                                   END;
                                  IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (Item."Gen. Prod. Posting Group" <> 'HANDEL')
                                  AND ("Sales Cr.Memo Line".Quantity > 0)) THEN BEGIN
                                    v_reverse := '***';
                                    v_reverse2 := '1';
                                  END;
                                  }





                                  ////  Ab hier fr 19%
                                  IF "Sales Cr.Memo Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Cr.Memo Line".Quantity > 0 THEN BEGIN
                                    IF ((Item."Gen. Prod. Posting Group" = 'SYSTEM') OR (Item."Gen. Prod. Posting Group" = 'HANDEL')) THEN BEGIN
                                        IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = 'SCHULUNG') OR (Item."Gen. Prod. Posting Group" = 'SERVICE') OR (Item."Gen. Prod. Posting Group" = 'STD_POOL')) THEN BEGIN
                                          IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  ////  Ab hier fr 16%

                                  {
                                  IF "Sales Cr.Memo Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Cr.Memo Line".Quantity > 0 THEN BEGIN
                                    IF ((Item."Gen. Prod. Posting Group" = '16_SYSTEM') OR (Item."Gen. Prod. Posting Group" = '16_HANDEL')) THEN BEGIN
                                        IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = '16_SCHULUN') OR (Item."Gen. Prod. Posting Group" = '16_SERVICE') OR (Item."Gen. Prod. Posting Group" = '16_STD_POO')) THEN BEGIN
                                          IF (("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  }
                                END;

               DataItemLink=No.=FIELD(No.) }

    { 44  ;5   ;Column  ;v_reverse           ;
               SourceExpr=v_reverse }

    { 45  ;5   ;Column  ;UnitofMeasure_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Unit of Measure" }

    { 46  ;5   ;Column  ;SalesCrMemoLineAmount_SalesCrMemoLineInvDiscountAmount;
               SourceExpr="Sales Cr.Memo Line".Amount+"Sales Cr.Memo Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Line".GetCurrencyCode }

    { 47  ;5   ;Column  ;LineNo_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Line No." }

    { 48  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 49  ;5   ;Column  ;Artikelnr2_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Artikelnr. 2" }

    { 50  ;5   ;Column  ;Description_SalesCrMemoLine4;
               SourceExpr="Sales Cr.Memo Line".Description }

    { 51  ;5   ;Column  ;Quantity_SalesCrMemoLine3;
               SourceExpr="Sales Cr.Memo Line".Quantity }

    { 52  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               SourceExpr="Country/Region of Origin Code" }

    { 53  ;5   ;Column  ;UnitPrice_SalesCrMemoLine3;
               SourceExpr="Sales Cr.Memo Line"."Unit Price";
               AutoFormatType=2 }

    { 54  ;5   ;Column  ;Description2_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Description 2" }

    { 55  ;5   ;Column  ;Cross_ReferenceNo_SalesCrMemoLine;
               SourceExpr="Sales Cr.Memo Line"."Cross-Reference No." }

    { 56  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Cr.Memo Header;
               DataItemLink=No.=FIELD(No.) }

    { 57  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 58  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Header"."Currency Code" }

    { 59  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Cr.Memo Header"."Currency Code" }

    { 60  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 61  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 62  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 63  ;4   ;Column  ;v_bonusdatum        ;
               SourceExpr=v_bonusdatum }

    { 64  ;4   ;Column  ;Sell_toCustomerNo_SalesCrMemoHeader_Lbl;
               SourceExpr="Sales Cr.Memo Header".FIELDCAPTION("Sell-to Customer No.") }

    { 65  ;4   ;Column  ;Sell_toCustomerNo_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Sell-to Customer No." }

    { 66  ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 67  ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 68  ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 69  ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 70  ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 71  ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 72  ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 73  ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      VerkEinkPerson@1140001 : Record 13;
      Firmendaten@1140002 : Record 79;
      MWSTBetragZeile@1140003 : TEMPORARY Record 290;
      language@1140028 : Record 8;
      VerkGutDruckZ„hler@1140004 : Codeunit 316;
      FormatAdr@1140005 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140006 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140007 : ARRAY [8] OF Text[50];
      FirmaAdr@1140008 : ARRAY [8] OF Text[50];
      Verk„uferText@1140009 : Text[30];
      MWStNrText@1140010 : Text[30];
      ReferenzText@1140011 : Text[30];
      AusgleichText@1140012 : Text[40];
      TotalText@1140013 : Text[50];
      TotalInklMWStText@1140014 : Text[50];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      LiefAdrAnzeigen@1140019 : Boolean;
      i@1140020 : Integer;
      waehrung@1140021 : Code[10];
      waehrung2@1140022 : Code[10];
      ansp_anrede@1140024 : Text[30];
      ansp_telefon@1140025 : Text[30];
      ansp_fax@1140026 : Text[30];
      v_bonusdatum@1140027 : Date;
      v_FER_SPL@1140023 : Boolean;
      v_reverse@1140029 : Text[3];
      v_reverse1@1140030 : Text[3];
      v_reverse2@1140031 : Text[3];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body6@5033(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body7@5034(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body8@5035(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body9@5036(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Footer12@5037(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Footer14@5038(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
          ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body16@5039(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body17@5040(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Description <> '') OR ("Sales Cr.Memo Line"."Description 2" <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body18@5041(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item)
        AND ("Sales Cr.Memo Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5042(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Line".Type = "Sales Cr.Memo Line".Type::Item) AND
        ("Sales Cr.Memo Line"."VAT Prod. Posting Group" = '13B2'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body25@5043(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput( Customer.Bonusregelung <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body26@5044(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body27@5045(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(( "Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body28@5046(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(("Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body29@5047(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(( "Sales Cr.Memo Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body31@5048(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Cr.Memo Header"."Sell-to Customer No." <> "Sales Cr.Memo Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesCrMemoLine': CASE SectionId OF
          'Body6': OnPreSectionSalesCrMemoLine_Body6("Sales Cr.Memo Line");
          'Body7': OnPreSectionSalesCrMemoLine_Body7("Sales Cr.Memo Line");
          'Body8': OnPreSectionSalesCrMemoLine_Body8("Sales Cr.Memo Line");
          'Body9': OnPreSectionSalesCrMemoLine_Body9("Sales Cr.Memo Line");
          'Footer12': OnPreSectionSalesCrMemoLine_Footer12("Sales Cr.Memo Line");
          'Footer14': OnPreSectionSalesCrMemoLine_Footer14("Sales Cr.Memo Line");
        END;
        'Item': CASE SectionId OF
          'Body16': OnPreSectionItem_Body16(Item);
          'Body17': OnPreSectionItem_Body17(Item);
          'Body18': OnPreSectionItem_Body18(Item);
          'Body19': OnPreSectionItem_Body19(Item);
        END;
        'Total2': CASE SectionId OF
          'Body25': OnPreSectionTotal2_Body25(Total2);
          'Body26': OnPreSectionTotal2_Body26(Total2);
          'Body27': OnPreSectionTotal2_Body27(Total2);
          'Body28': OnPreSectionTotal2_Body28(Total2);
          'Body29': OnPreSectionTotal2_Body29(Total2);
          'Body31': OnPreSectionTotal2_Body31(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'SalesCrMemoLine': WITH "Sales Cr.Memo Line" DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  Verkaufsgutschriftszeile, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>uDABAN1923LcOJrm/UbMO3AU0VtVXVKaAM/u8kzoWNbYlrRK2a7tmQ4FlYlUck2R2STTtvwye1MR
8wZz1VfjFxuABJlgJgACUGa5uyqiwkoSxOHDj/+EHz9++tfPD6n1ERVlkmcv9sDI3rNQNsmnSXb/
Ym9ZzQ7CvX/9l3/6Xz/9UhXxNVrkRVW+jh/zZTVGRRKnyRdUWKs/33UVuSM48khtvUd71kX8gF7s
3VxeHY4Pfl5W5WReJLNqzzrOs6rI05vHBX59gj6efl4UqCxHTLujt+fMT7hvCYp9JC3ttw1bL6y2
M/vW8TKtlgXCzzK0xJ+k+9bV8i5NJq/Q403+AZHS02AShyiEdjBzkWvjIZwk5SKNH0Vdp+2e5cVF
/LEbrjPCYI6A6+MKLu/+H5pUF/mLPc+2g6B7IKjwLEHp9D26w7h+TCbobZG+2JtX1eL5s2cXh+/G
p9fvDqAN/NEn+GFU5Yu4HE3R88B2w2cnj1n8kExKXCyyn12exFX87Dh/WMTZ4/ff1Q1998Oe9SYu
7pOsxFMSYkwA/t/D/7u4o1fxPXqJkvt59WIPRgF98j6ZVnP8ANj1gwUqXiXZ9MXeoYv7iucN/0UI
YN8KFrj3J4sEl/XcFpi3WYJL3KCsmpeXs8M3SZomD6hCxR6mK8v66SjOpmX9J/5xXqEHQIlkHKeo
PC7eoIf8JYqn+IM+lTSAkzGSr0g1mLzQJ9LjK1Rco0le4E5WxRLhTtFSN/FdSjAn/wDgrr14l6BP
uN3L65vzi5+/v8hHP5BB/PUsSXF3SR/wqnjzGtPn6dsXP6O7EaGxD/FyVt73yIF+UE8jRhnXsz9G
aXpQ5ZgAyyp/wGuGPMT/W1dFklUI9/wc9xXsURzWYNmApq1GARHuyMPV89dJ9qHu44uz89PXJ9/z
evpD0z1IZr/AE9l+Sx5uzhLT6XYc1jN2JM/qoayPDbLTjmmszLPbq2Uxmcel+UCd9YEe51NER3qE
qgIt8QjPswxl0wRlZUVH6mxzpHB9pA4d6at8kaDxZJ6iZIa2QNzv4oJbMQ8ZaDf/QV++BpYPd6ig
qLjGqPQerS9zlFQ6KGyMdq2Cp4/Wev/y9PqU/npxfHkxvvke/PCD1aDg8VDoI742XAEKDBLXaPZi
L+AOvgGVEkA93uYJZDltzUUus1MsyB8JibSUUT9/E3++zCaEbJpXszgtCdBxNsYsiywK+mSMZRKW
XWutNPLgDHMnB9qbQ6tHQfvNG+H6KEPuKK+SCRHMR/nndpTrzzG3xvMH9qzX+SQm3TxL8xgLFgBd
Z+RjMQYDFpExVkdwnz3o7ddvbtBnXJhWd3uWFA94yccVyhqCGKOqZtdN29xiz2SDg83gIu7gXsd3
KO2Pq35UD8n1u85iKt137M0ROrY9wsQLsFITApsd5br03bfK6hFT/VGeTskML0g1rcQaV4TbHVwU
o+e42386vXj74ubwF8Lfye8WIvaRYMR4zGPSDKauvEiqx2bspGdvS9R0iVKUELMNxriBqENrBQaQ
BmuQNujxiIeF1q3/tH1gjPDbcTU6OD8ZNRjXCL87vMEDuR/VkLYY9x/qoQx1UXZkKLu0VscA5VCL
cANzwn1/enp6QPBicGWesciuP9bD1tXF1pVh69FaPS62pL8Mu6M/GWYAIcHO8X0pAbtRMIqiyHfM
CJg0e5gm9xnmc7jYm2Q6TdFrRPTYl3nxpX71Yq950CBMzQlMwhjmi5zHPteL6E2CvzkJ+PdaR5Vm
x5PNjk+b40td/uwET5kdnQVgPC2E/ofmZVVGb2LCrU2ML5uYgDbHl6X8iQH8iZFPiI4oNZ6Qockw
mAjIEbSGExHIJiKkzfElMH8iom4iIjsaBTDizQJsFowNsNrmOtEI4BnxekzLGG7SGetH67t96zv8
D314lZfVLJ7MJdMg/05veqDxdISy6Yho9QqiuhHS3VQE3gjYLgT7GGsMdRQSBWltTux9CwJv5ISB
11ekNx08jHQmkvgs/jyy/kTkdP1XOyHNDz3ktOVvJDU4bFotXwBvIgbXEAO+W2MWYMgiH25iVtOx
D9wwDF1iggQ1gK7vawF4Nc8z1CB4g9IVgs1zTQg50lMOIbClGFKrDeqISafDEUDgEJILQ0p7YeRw
cMTQOTV0vrc7LnA4nRJXsaXLBbrv9CYiNOYCAEhnhJqaUEc+rigbOi6mZy90gn13kzNTuu9I2XOd
rUxITcoS4Jv3WgA7tjnAUsMTUMvT0ZF7ri7AfGZrDDDmthJ4yVs9cM1lGJDam4AanA5fivHB9Ril
wiNcJJBJMscOa768dYwPr98xXOGhKu9RkUzmlQR44Sd6s+Gaz4bUQgXURHV0TNRwfTZCtdkgLAWE
gROEW5mNd3lRVp1DmG+AtkX00PbN0ZZanICanA5fliq6QF13A+MIYh0ak7sPRhHHB+oAex+SrbsG
v/Px5ev8Ph/ygXKLSX2ggFpuDt/FK3UmOSuqcqHQmYT1pwCOPGXtiqhU50eHF8+tk1PoWtCzgYXb
si3bCSLLsQPHskGHy2BBPTKKtDUxqTUGqDlGhIo2uoEiuq4uuuP352c3B0fnx6Pn1tXRxauT07Oz
X375pcVU9FoLSRdoIyk1pAC1pFxogKSviCTQRfL07fXBK1wof96CxzzRw8vRxktqR0FqRxHOo42X
p4aXHw7gJXUQE0P9Ls4+WC/jLMs/ku1iakJtvNBD0tPe0pBaU5BaU2TPRxtJVxFJ14w/+iFme1gh
ADDAbA//ZwHbt61WRq/4o7igHraBNrZSuwhSu8g1kT6OIrZAkzt+SmYVZX8Xl68PsXABR4cvO+4o
eK2Ho7acgVLzB1LzxzORM1ANRy/8VrzR05YlUGrPQGrPeCayBCii5ZlzxnEVT6tyERcf4rJE1lFc
lEl2P4+XJVHnKBnKyuihqy15oNQ+gdQ+8Uwkj62ILggMNUqsHmJFMcQ8EEtIO8Dc0PP9yGI07cGC
eujqSyOpPQKpPeIZSCMYqaHrhrrosirjyfXpmKiM0LN5GiX7Wg9Jfdkj3bKC1PLxDGQPVLR8XE8X
ScIj962345MDa5lNrX+7+r8cJsovoIemvgSSWjqQWjq+gQSCipaOCwfQlHLV4/zhARVfas3y8Of9
DbVT+F4LV19fVkntHkjtHt9AVkFFu8eJpJuqYu0TEhYZYJ5YK5UOYZFYx9zkpeKCetjqSyqpjeRQ
G8k3kFRQ0UZyfD1se6zy9O0NVi9fCmxz9rUejtoyyZFaSA61kHwTmaRoITmOHo6ETdYMknDKTQ66
/koPP21J5EitIIdaQb6JJFK0ghzbPJTrBNWR8kTLFPBOSQk9ZLWlkiOPR6R2UWAilRi7KAIjGEUR
DPZBEI4wljax4NaA9sJohDVG6CpFdQGfUO2bZVolr5OsC/7dMAXyIsutZxjnJC3rH/9xjSbzbJnd
1yF1xwWaJpVFIrkFfvlj/Dcj5djyjLOeltKarUBb1jlSu8yhdllgIOts2Ats5O3iQbJlDcLeOtiM
BT04PyERi20caP0zHzFBoN0TqV/doVZQYBCkaa9szFCypKNoTR1aG8xZ/Nl6/ica7WE9Z2I8yA95
76mVERhIRttW670v730dVdF0v95oft6LsBgcAFXuA6VNst7DZhArU8lxBaMIeXPQ9DHOysXtjL+9
u3onHwFVqAO+UB0eQag4gvV5YEZQoRTNcu5OU/+9fCRUhQ2UwlE4I1E0DyKHOxLu0aRZUpRVhhu8
veW+J33hDfsJlUkxcqkqGvBVgGGMFFX9yBbPdpxh2cAdde+1fBztsRilQBfOOBTVamCv24JUt7t9
Eycpfxp4I5OXlw+Vam2hnm7hrag5BPwR2o2kcmSS6iipKmTdocS6/vq3yYdZEd+jzEqICWutjqWW
2bJ+Emf36A5lDTdNER6d9Smp5laFVbZJnKbWXTz5YMXpp/ixtJJsmuAOofotoy9YWX22SknNeHoj
m7rJwHRQVS9UigDqPfRXiwdE9r7HmxKXTAmUGCHRojIJjDhcLNIElbdVfpJPLvJbzvnZTaod/khL
jwu1j6e48vMpVI8L9XQf3+tNA0eFo9Mg1+EOl+U9Vh0eMEEdYfnUqMm4P6hA2QRZGLElmZ12Anhv
5IRGNbuQrxvJCI3ZWIWAT2iutyNCU6WtLZCTtnvBlbq8XaqMhnruBWbvFUI+OTVgy8lpg5mum10W
Yx5sPJZTElVSQ75iJBwYE6ob8gcGFQb2aplNUcaOiTk83g2o90w+GqqwhvoqDLMFKWLAcFfr4ihJ
U8xI24GqLhOVz/RWjbbrw5U6jl2qdUd66gmzvyngwX40TFsYr+VDTVT4L9R5ieq/pUTkUT040pfi
zN4hVp24RNR0XYmIOGfkSVxKkt2TUdzat0BoHsi+0SKJSFsue1I/rUeV88jpAziexwskCE2v3/U0
VsAVzI3K2nd2H+UFhqDE4KapbOSkCdozwrPJz6Z712hSYdU1HR631L/qtQe9Fc6UMI9C5qysz10L
wwvhfF4g63A5q7B+XuKhxK0W3jFW3LNNbts8lK8Uqu9G+v6BkDEWQ+5K0Vgmp5+xbp7Faas9qTJQ
pe/0lou2W96TqrEeVWMjPbd8CIY8kZ49TDivE6KXxtjwyTp35OFkki+zyiLpUDr7ofdMTjFUcY30
bfPQHlJcmzEp0szlsqD9xrO+SouzSST8gpoZDrRTHHhSddRrDyHbBjKKOYzMX3mNl1oRx+awdlJi
7lLnAFFceiqfaWKsL6mksRlee57YVjpy0seYOY4f2PvRJsZ+FI58O3ScgDiSQFjv7ThCwJudGqnT
g+OsaGaoTjFD/uTNw+qlJtraRy49aeyGF7YVG3jLGXcW1rpcOHJ40sSTnNsG9oqiT9Dd4bTg6lbt
K02stM9WelK12ovaig282a4aVl79QhktKEYL6qLFSRcwgJY0wsK324oN/MGMmeuHfLSA79fOYHcg
OIC7eK9JiqTe2qVPqP5/cz1+ezS+ubi8rZNVXU0qcHt2ef3m8Oa2SZJHj/rE9wizUK45oFmF3mTp
5+7xpeaBD9qK9QUbAGqkHbkj8TnrTdJ2xKTt6KKlLaJ8qVHhw7ZifRHlKYHlO37/aNgAWK4YLM0w
f6CfVMeXxmH4XWIofQmjxjT9IBpBDbA8MVieLljaIsaX2h1+m99JLc1NX/lRAiuAQBJIuQmWLwbL
1wVLW8L40mhzv03YpJZ6pvcQqoHlO6NQA6xADFagmzZMn8PL0ye1potaepg+h1cCK7T9kSTmaQOs
UAxWqAuWPoPn2yA/PZNkRtzMg9pDuBUKgoQvZ3le9fNCNk966l4vo2P3fjPzoyxPpDC3ZBpP0Hl2
lFfYlG4fvkYfUUoS2TJpI7eRNRJApS2ylsCYTYAwbHPQ+fUfEBCrbpPcpFbyvjWZxwUmrRe2qflG
z6S/zB/QAqMoObbeFdEkWs5emek5dmkYeduez3H9AiXfL5kUXrgCzUItcPs27tymVgIziXVs0V39
HlcFqibzliAPic+33rpQ8hrXuUIZt3FT5xbSWELNgFzmWEiNFt9l7Imp1udEMp99/VthTRPiRi5n
X/82L5bZPfldorL1LOO/7lFaocxaZiUqkBWn6T16QBiHzPoZlZP5119nVXmHSC5s/Dn1Qd/MkYU+
o8mSNGflM6uZOCvGNZTLOtu5VeVWviysOiVDXEwtvDgecIlsak3ybJqQL0vyaRmnSCkyZPuNPjGK
tab+XWTn1Nt4iwIV2gn1aOc0wXNdLR/Kj3lxh+ZxWj23zjNMCCXGkRDKJ5SUmEY+JZjE4iJezqx5
ku3jv8uyprn3ZFowKX399ev/p8RVDFOXdZeU1hc8g3+O5ykh1ySzPuZpir99+fW/MAHUNVlt76y7
FCV3VePkrhPeW+WcBAxhphDjT6ukShEhivs8n5b44ypJraSy5nGJi0xQ8hFNrUX8SIiONDVbpulI
jRi31thTidDRjqXmq8UKyguP9fVSnDPe4IaVDqb3Pi5QXKGbvMIdxwT5QDz2+//7r8u8+lPzA1Pd
JF0SArHeHd40b2iB8+zjiNzW0OxjNMWbN6IbADxpPvB2Q6nO1k/6T5Phsynlu6AfOlg8gFEdtME6
zdvCeCkxVdI89EyC/YibYb2X35w/VaL84t2EtHqUIPGSKMu4+5tkGXcZdVEqqQc0xs3R6gWdRyt/
fyCIp9y3oMbpl6EzGVd52bAq0unuqBv5WzJC0bLXiJWqK5Gqeh2Urbrn6IVMBc4QlLpYrkH38lWn
+70yQUtjh3eFlkjV69Bq1T3NHEgBkwrAh1y4oi2T3mFRJR9Q2sTxxkXVHER5h4qKyp7GsNuQfc3j
f1uWVTJ77GJ02woMJkJDZVpNhEht6iaiVZ000yX5/fAxzkQE/pYn4m1RLogiXqaY+zYBHURuFY9E
Lb0skvskkwajteblxjfrUWr6c6OTeWk1NyInWzc3rZ9NMwGTy8wNn6dE214kTegExvwe1TPzf5Yx
VuIwPuU8WSyQPDF0MzGbn2xhXjROL6/mReTP6+aldelpJnpymSgVB3CZl+dteWLI3T1xE49dq4ry
fTmqoTcFNzbpDPA3ErWiMIUO/zZSQTM9lGv3dje5B122vTBOk+wLShcFtvnqSSCXfFmLIpmILPfe
TLCltzEdRrJcFMfQTUcbyqCZUcpZnfcDtsedDhLMte3pmGMroZsKFmgTQI1ksijYoQO0jXcgXqsN
z6FAY1p3HDr2fsB1ZxiEizbjZ5x/JDuUXszoavSi4IUBO3pVgZLTVZBn6qaIs3LThmMee8JtgX4h
vb0Bjrs/JNvy27PgPIMt8ZXpAT0oiPbwPHfA59+FRdZuhNvz7GPrWWiecE9Ticrqr0FPY998mIg2
CUkvgNnrZ3bjYwqAM4jpukea3JyJqi9dDgL8QZIt62qJL2Q6ror6KlJrlRe/V8YAWI099hWwYstP
cXkP7BLQpLu1G8DoqkMYrLuaeB4md+hmw9pLJx6rzM/UjaZbu3yWfpRPH1kuRX6DXijPy7i8zK4K
RPnUFvxMbRvMZXYSP1M9EgVOtTliw7PKbs9bwj01WsdaCNdWaB5X+vG2QOQCYO6W5OrlAAyCxeZr
hB10FQ1ysg73lpv5+kEIUdhT03gnUYiVKVPTxKAL4wGPsJH/4c+oyFuaXulp+ewNikty7eCG03xz
XuQfGM6VRtRDf65kbrFurlrXmK8v0QGT1k10ntcbMHFC7nEsAhcV2mtPleS9YU2G86OpEazmR+Yt
6+an9Zj5BpHbTHo4wqn4x4CMVpL0wCVBt3/kQLReBCUNJ0JTg1hNhMw11k1E6x7zDcLCmVxyEkFi
NBODguQllhMVIluzH5bFlzqJSaPPbE6HqKjhfGgEAvbnQ+YS6+ajdYv5JsJ9NR8e5E+IKt/STAbR
uPezAqosD0lpsykJjOW+zEvWTUnrKQsMgg+ZHECyKZFc1xiyoYflpEhqk2YdOUEMtaS8IdTGYlvm
Aeugbr1gguxj0mQoQc9hz5Ha0cBmyvY0rNYNv44691iAuLDhFBlLbplPrZui1q9mkKHMd4cUq6H9
ricIDLpndUtOEOZZPms2rsjxU6HgGPrEcH6MBbrY68fMT3sRITBIW+avNleAJ0g9MrCTvl0z5Yq4
7ZVWkaS04TQZy3nhJYdtISVj/6faDX+cp8uHrO1StFWvnCABGNdj0rvUjHHE7sZ3EjC+E1m69XpI
Jq4Tg2RbgDkqJhPlupJcSWWSljejb53kWeoE9hTyJmm3thgVI8hzxSXvkEPecGfkHTLk7e6EvPX8
7U0GQybtlCDvZp2FZjhrCFXv6wRNXfZT7qtBeuuxK9OEoit3p8ePsnGdjYG1abHysrztgi7VrH+F
j+TjfsIKCrYaziTIiMVdQRFnBTk7W0GR8h5gPSijNcQ3wKVriDn6HQbByOFvXTnkWkFyRaVcUmxk
1EZLVJST+TKdfv3bHSru4+y+C3H/7/+0gHNnHd6VI2hdFCOsBSajd6OHUf3Is96Oq5+tf6anJ5LS
WsRFZeF/szw7mMR4FlKyrVMfVSCPClQti4w8+meFqCPtGrWCkuqZ4UmwaEfufvP1R7J/PSVk7adn
8i2vn5rWFPbExvmymKDTz4uit+dS78pxfQVMIekIGo7MVt/EvPfD0Qmba56Pmn/qIJx8ZtFNhDZO
vu4P90jzwCbFYB8dnT42nvIflUYiC/s/XFY55gkPcdWwDMA+UurJz6g6XhZEcDw2mZFqhLjnmE03
Fgahc/Wntz2u0JtX7oFikRd9sFder1ebPl3aKPdgrtBZPNiqr49F594cWbCHR6TpDB3uXaDTO8aG
aDpUn+fTcxoOdynU6VLr+qL94abPkfjSBjsTcTpDnTrPGqfOKoS5zkTGzpfHzU8z6EYa7BQWzWbs
s3ZviFgNpJ3WdY4o9Bfo95chov4i8IYc1SbLABgIpFpLP1glUV5jXh5XKD1JtSdqhUx6qx/RhLa6
aev/lno5G/NSq75bC82DBim+mFvJQZ0IkxtHZuKz0XTZ6HlseLou1EkHtiImsZ6roONu6rfQltiX
ct2W3WuGtrpdyfM77ixmK9gh+epv5/p2f7eEH1mqQL4C//q3CTWFOtm/VnSl6tSGBjnAvLC/68EF
ut73MANaKH21RLUJ1JouXj0HKzRJIOb3N2l5UEeeMdIiXVFHrzTB2Sh6WtUNBw1yj3mrSBBflPXo
H0Ty6WQpW4Er87GYSD4wKPnkCazaatQlH29LwtuV5GN3JGRH4jnASPYk5TE2bGwNhOp7kTxPs78r
YKLdqQQGucwC93epEuhkQFvRlbJKIMhpJgUa/k5VAmgkqpRVAqgvqgL796gSQCOppawSQIPYnuh3
oxJAzdAcvUwBUJBVTgpu2AtJF2WZ3HrgrdqOtG4sOhd0x8huE8c8m+lhjmSHTR5nysaXQkdysnUz
1yXzuB8lsHm0dVXK6GxrsLOzrVCQi0lG1aHy2VZXlvn9mx9vhc5Oj7dCR/N+HuXjrcOwfvMTrtD5
NidcpZcdRG3f+GJSlM0WAOHiXhUwWtd9+0p+3U0bwAsFSQqEvYdDvYe6vRfYVHRQO7SNHIOrfjxV
ZqV0EH+D7agI2uGP9NeXu1t/qcu3QoW8y1XlXXpH86/RZJ6NDq7ju7gi95+ShDurm0457wyA3LI3
VDXThvTuCtBSvKuXeBsMZd4G2qm326humz24Ho5ktwroLmsSerSRi0VwjJ2TiwVo5mLZVQ7nelxM
KhdIQpiU8zgzpPFk2pKmcQHdGudHzgppyx2iLXe7ggSwKV3cYLskp3dHrev2SY6odjp23FAiyROS
/7rOTpxZn5aYVjPr4vz45Q3JyDslqYXfWnNU3KM6XIlUlSALG4PlosBMsCtMPrsqvv5axyF8KdA9
SrvM2Lj6RZFPl5OqtD6RVMlZXlkPcbacxZNqWaApaYpcXn66LPIFijPrbYY7qJh3+Cn1a6QarqeR
y8SNTH91aRhxGJSANSszKCfoX1rybXgUifYy4FFPl3/SXDSg9Rx6fD1EyKPEKaZWBczkH+zJP2+r
eq0oo5bsDANzH7jQtwSC5uLsSHKJieE9059iVKfu50bDrV7qL2XPKK+k8lL2+DFScqgdVai9fyik
jTJIKjv9PYODOezN6QNE/Q+FtFFySGW3vyDHlXR7ZeWZdkTbKwBAFe7RV2yYNKfn2Yf0zftxRR7x
EN0sZICsUZZIZZ+/z99/liIbKCOrRMIUJymIhuD5RqmVVVP4Ql9fqgW+Kng+GLkq4GHauml8A39G
SYreHd40LhgRntLyBhAbSTPVLL3Q15dmEVBwiLmR6cpv0Oqux8D4KeV+Gf7KAHsj+aaakhf6BjfV
R6rYqykSXOCGtk54hQ3ANRJpqul5oa8v0kLmMnJxcEakwXjVPbxbc+v6RvLs6Xl/+bqG7ODhwKFD
zoHD3nG6b3BezuEebBLvPUq3Y/pnSzYOUTmCO78l4RHS5njnFpVO/2wFOK5CLAlWkg6lf46wf9bL
0UqFNNCQx8Fs7TyPwz13pHOAh3Mc8ODbUTj3eJLCnpV0dP3jhIyRVDfJPYTKFJJW3T8WyLEa6ia4
J0Y5haVNRZtNMU1wz4cyhYa2Ztm611TI0ZrOWbfHPfQp11XlXeCdxhPfVba7M8kSHitXCuXD4x3l
Ew/POrBaJr6rcXL5u0Qbkw/P4QjK3fWdy871WIPs1KLYe0H5P3tQPX8g7hnFe/l4OcfbvAXdc8H1
eaTW/e3docdLbE48Xk+4Oo8LtdhhQWVcxzoqcjsl6ajm9Ybr7KohHUy71lFcUkLaFxfi33D4Li6Y
jn39tekZN2e83fwHfek8Xiwf7lDRAh3s+o5CKMiVJLqjsJ/6bmeXFEJ2Fx4CsNU9UUEmJeF9cQqH
iYbvtJZsir75NK5GNLDDGi/Ql2SWfKAxa9S5Iy6hb3qFRhat8saDIGuS8BpIt+cqqKM+19H1bHff
at6oQjx0iQ9Zrl2cjepFfL17lXo1PP1iJRgaWcTKuxSR5rXGzvC0kAvIdjMtD6gsyS1991i3nqb1
De5PmSNOdVuYsMjIq6y82RHpXdgXrXaUILD5E2bvZLr+8JTJ+cN2psLI+/yEQ5Lqt0jBSOC6HrxF
CorDcddK/Z3dIwUjg1sNbDjsMq7lgFL4amdS3q4pdDyLQFzYgBK3nKhinZgMrimwFTZCalauiixR
lxVx5RY1QNUo7EldNmrmOrTtHq810ghlZxdERxXYItogOrZRJLVYXm3nLi7aN374E+/8M+zF+a+S
1T7xpDOEOwvnd2yDsCfb/z3wQ8feaZSTI8gEJUdW4aTE3zc/dOydRjQ5tkFEE5s/2ZwndpheTVRJ
lVfSANEtRy4ZHe90SGYo+fFOlfxojijb0uDxTig+VrFWykjldHamcjpAP4AJAFuRxaoe7/xmXBYY
maLKXBaYyC+FEJCay2qA+9szWmAkvpQZLeCLL7HiGSox2aecm92N7gmMBNaTdU+VdHwO0DseBIeO
B0Ht40FMYr8u8t6PRpIIXH3+aGA4AndL/JEXP/fteOVOj9A4wOTiOoVEA0q8UgD0b883oZGtqcw3
BbmjxJcTwK3wTekuTr3N2AtlNsHN6JDuk/kkP9R5u1FxqjurhsEAjTe0n+OYRgRsprbmRsFIOJJG
hJzKLvNvM0hu6I2QG2hE5YmH+Ae2Az43REZk25mGX/BIl8aqMcFNGjEX3Y4+/fDpe/nW+5en16f0
14vjy4vxzffghx8sChPYVTAFL7qeBroxI+Tr9irYwB2CQ7GBu45/cKB6SkrYO3S5m4SLpI2VEgj9
UbRFJVCQ2Ut+pw97Ui3yRqFYetoj8ZU+PKvjtLQ+fP2vLEOZVSaTuXWaVfcorR6SDDM5bGfg5/Fy
Vm/a1ofDj/JsWX5EBUqyu5gUsD62O40v9rZTmb7ENssLpqxOOiY39ZFpY6+ydEau4JiAjSfN37ec
aGjqGpA/3t4R2KZxteTeGNp7b4DlThM2O4IUYHLyZ9Iz+kBE/QDa/sg1WAIk18EdarMPvNjrfhuA
Z5Tka9seTBKZLfdgqmyaOw7fJudyZd4VDzu7mxP6u/NhCtJ1SenTWbnZIqPMizyq/OMfLau5b22G
+SOyEsxWMWE+YF5ZTubxrEoxh0XW64SEkra51shH57jz8QGJdV1mhDLL5WKRPpJLZu7zfFq2VK5S
1GABbNmwN1wAgwmhlTZEXfWE0JB3ScTObu+Eu8vR6Ggm46oXgGvvZAFgCr3ARF5ZyQMm1ZRc41fW
KwIrC5jyUVJWmPBHlPL/aN3Eny28WJCFPi/yorJKVHxMJmi0InlJGX1aN0vmtW1adyX3J2lsV7l8
LziX1nlp4Xd2nw8Md0jrBnfUuuA3YPaHy3K2nBdpy9xHHXdv6bch3xHLzddfGVD038MNP467lRt+
HFfDqOTl89+deal+c6w+RRtYly5jXTrAE9kpRgz8urnQ0zqex1h5sQ4s9grZrP4DqzLYGCw7fl6i
h8Xs66/YWixKcrZqWeVp8tdlMq070zH7rdfMSontV66/GL0tG7Vmi9EbTHatcumII0g6xVuMjs1Z
jN6TV51j7y62zNM1aldxZbs5zUKsgpEVZ9bhtEBliepVM54niwU5uhhP66ctwW88N6DVLSe3NqTV
QbtX5R4YR5BLikurgEOrO7sIxtlduLjjmexNM9mHgPeUcDO91FljlKa3VX68LKv8ARX9E/TN9szt
67uU5xxT/dRgCex2S1uQoVY+PwqRKo7jf5sZMpwdg5nxt7wPbsac/K3cGuEI8lxxmRMvSDt4Ohdi
g7QdJxy5W2RDvv4NEe7K+xaI0nhhLgQjXy0RT+NRO8yw6ORuUffeG1DjlkXlGp/w9Y/9uKEagJ4z
CjUBFFy/zrw3AHDLlz2sOf18A0EIXTUE6zPUeghyM5703hsgaCSqVA9NOr6BqIKOEoJNRJ4egtw0
Nb33+ggGRiJFNROkExhsOEKohmC9na2HIDdvUe+9AYJGzlPVdJBOoC9HAARKCA6d3uUAyE001Xtv
AKCRHFFN9ugEBsdHoa0EoGqwOQMQN4lM770BgEZyRDVjoxOYGFRqqozS+R0GHW76oN57A/SMZIg4
JaOZUh0MbvTxW9xuVGU/IqOOmeKu+H45jXjGwTDEOjnQ8eHVzfnlxfe0NLalDqrcao0pq8tG18Z1
cdm6sm2tnUFwMIpS3GPaYa4kVzI1NXIEMuvi38O/0JaHtDDZkbFGsIuaCNomhlVlnbSAbBN+28SQ
OeNr5eZjm/DaJrjxrn1lTCNHH9uES5sIuBGtfW1FIzcf24TTNjHEMGVbrjV7sIVtwLaNYZGmlYSP
bQO0bQzpHUKXxHDI76YcFPFUCT/l8NKzpHhAGWaRKBtdJfVtLs1gAI1otbmDokVvmc/5Y+NwV7ZJ
mk1zfInF7n3e4z7cbJfjS1JOsdk+VzzOHxZx9niezfJuxrpBcomcfkF+SFpxha3Av/xofbdvfWf9
aLGP3b/gB/jp+nNvvVPcZUG/OGz3FIT98oT98tcb4jJ6+sXVPBdlCuTwQbaZYL0Z7pTSL87iz5JG
AmEj4XojXL5Ov3h3eHON7i9ySUuhsKVovSUue6dfDDUTiUnTXm+Hy+PbEeVFWdV+SGFTa8yx19b6
OgCydXB4/U7WDBA3A9ebkVL2Q1Xeo4IEIsmag+LmnPXmuLyffvL+9PR0aLaAhJO4641x+WW7mPKy
msWTuawtMT8BGxxCNrCXWD1b1Hm/xG31eUSclYvbGVmItTTj1b0qIq7U36y0QimatemzueumX0xc
eSDSdBeoKPPs2RV+OY/LNVUXy4uysjLcEs0h+2PDfoe/b5g/6TZ3GTKf3nafzkhrpLHbW+77AYEC
wk0A46xA004yCwFsi4nrjozwOz14EycpK575S/j0lpTjj1qmH9gm9svhYpEmqCQmzEk+Ga2bL/xV
Tz/CFgz+Rt14abrJy8M82M31bnH5g25PNO3V5p+jRG7wAa6FSr4yMvianvZZ59nl9ZvDm+8VO0zY
JQmUwJ1qc9Xa+4Da04Bvnq73jdZBqri1bwUaeNNV1wTU088VKrI4tbpkxOuoctWe9rP2K11Y17Q7
Ojm04ctlYR1Omtz0673hsnX8AS2P+9FWJmveN4GKnJbEojYpq6L2sG30TXRElf1IF6i+wHiVLxK0
StUOuEydKSSut8+kT9Ad68CA3JE0hQS+i6bWiFdrq0hD7tw1hQTuisYOsnm1tlYA5NJnU0jgoWhq
BbxaWxUFcldnU0jglGhqXb974451RkAuh2oKCfwQTa0Or9ZWT4RcltwUErgemlpdXq2tsgsFt4Tc
iZ0NTa0er9ZWU4dc4d8UkjE3p79ixzfX47dH45uLy++/q4+WWn8A3+1T7nyNSEBz4yofkXCFi7w9
nAq5QnVV221d2dWkArdNZbdsZU1dt7xuijwgvO34Tc/H+o5pvwRbx+rNT89+wSyl6V75On7Ml9UY
Ebd+8gUV//I/</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

