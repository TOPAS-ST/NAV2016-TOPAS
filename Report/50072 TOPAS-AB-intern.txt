OBJECT Report 50072 TOPAS-AB-intern
{
  OBJECT-PROPERTIES
  {
    Date=21.03.18;
    Time=10:25:41;
    Modified=Yes;
    Version List=Beleg AB intern --> 50076,50131, ,FORNAV2.0.0.1168/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   ;ReportForNav := ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner := ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table112;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufsrechnung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                               RestmengeAU := 0;
                               RestmengeZeile := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);

                                  IF "Sales Invoice Header"."Location Code" = 'MUST' THEN CurrReport.SKIP;
                                  IF "Order No." = '' THEN
                                    AuftragNrText := ''
                                  ELSE
                                    AuftragNrText := FIELDNAME("Order No.");
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesInvBillTo(DebAdr,"Sales Invoice Header");
                                  Deb.GET("Bill-to Customer No.");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesInvShipTo(LieferAnAdr,"Sales Invoice Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + 'EUR' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;

                                  // KW fr Ablage bestimmen
                                  n„chste_lief_jahr := '';
                                  n„chste_lief_woche := '';
                                  n„chste_lief_tab.RESET;
                                  n„chste_lief_tab.SETFILTER("Document No.",'%1',"Sales Invoice Header"."Order No.");
                                  n„chste_lief_tab.SETFILTER(Type,'%1',n„chste_lief_tab.Type::Item);
                                  n„chste_lief_tab.SETFILTER("Outstanding Quantity",'>%1',0);
                                  n„chste_lief_tab.SETCURRENTKEY("Document Type",Type,"Promised Delivery Date");
                                  IF (n„chste_lief_tab.FINDFIRST) AND (n„chste_lief_tab."Promised Delivery Date" <> 0D) THEN BEGIN
                                    n„chste_lief_woche := 'KW ' + FORMAT(DATE2DWY(n„chste_lief_tab."Promised Delivery Date", 2));
                                    n„chste_lief_jahr := FORMAT(DATE2DWY(n„chste_lief_tab."Promised Delivery Date", 3));
                                    IF n„chste_lief_tab."Promised Delivery Date" = 31122053D THEN BEGIN
                                      n„chste_lief_jahr := '';
                                      n„chste_lief_woche := 'Auf Abruf';
                                    END;
                                    IF (n„chste_lief_tab.FINDLAST) AND (n„chste_lief_tab."Promised Delivery Date" = 31122055D) THEN BEGIN
                                      n„chste_lief_jahr := '';
                                      n„chste_lief_woche := 'Termin folgt';
                                    END;
                                  END;
                                  v_FER_SPL := FALSE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table291;
               OnAfterGetRecord=BEGIN
                                  spedition := "Shipping Agent";
                                END;

               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  verk_debitor := Customer;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 4   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Deb."Invoice Copies":=0;
                               AnzSchleifen := ABS(AnzKopien) + Deb."Invoice Copies";
                               IF AnzSchleifen <= 0 THEN
                                 AnzSchleifen := 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               "WŽ berprfen" := '';
                               "ab vor wandlung" := '';
                               "via EMail_adresse":= '';
                               "via Email_unterschrift" := '';
                               "via Email" := '';
                               "via email_adr_r":= '';
                               "via Email_unterschrift_R" := '';
                               "via Email_R" := '';
                               Service_via_EMail := '';
                               nicht_rechnen := '';
                               Kunde.GET("Sales Invoice Header"."Sell-to Customer No.");
                               IF Kunde."AB vor Wandlung" THEN "ab vor wandlung" := 'Achtung erst AB dann Wandeln !!!';
                               IF Kunde."AB via EMail" THEN BEGIN
                                 "via Email_unterschrift" :='Erledigt von ..............';
                                 "via Email" := 'Achtung via E-Mail versenden !!!';
                               END;
                               IF Kunde."Rech via EMail" THEN BEGIN
                                 "via Email_unterschrift_R" := 'Erledigt von ..............';
                                 "via Email_R" := 'Achtung: Rechnung via E-Mail versenden!';
                               END;
                               IF Kunde."SerNr. via EMail" THEN
                                 "Seriennummer via EMail" := 'Achtung: Seriennummern via E-Mail versenden'
                               ELSE
                                 "Seriennummer via EMail" := '';
                               IF Kunde."Best„tigung via Internet" THEN BEGIN
                                 "via Email_unterschrift" := 'Termin eingehend beim Kunden';
                                 "via Email" := 'Best. per Internet (Vertrieb) !';
                                 "via Email_R" := 'Erledigt von ..............';
                               END;
                               //17.10.12
                               IF Kunde."Service via EMail" THEN
                                 Service_via_EMail := Kunde.FIELDCAPTION("Service via EMail");
                               //19.10.11 UB
                               IF "Sales Invoice Header"."Nicht rechnen" THEN
                                 nicht_rechnen := 'Nicht rechnen, ist fix !!!';
                               //ENDE NEU
                               vkk.RESET;
                               vkk.SETFILTER("No.",'%1',"Sales Invoice Header"."Order No.");
                               vkk.SETFILTER(W„hrungsabgleich,'%1',TRUE);
                               IF vkk.FINDFIRST THEN
                                   "WŽ berprfen" := 'WŽ berprfen, +/- 3% !'  ;
                               IF (("Sales Invoice Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Invoice Header"."Shipment Method Code" = 'ACC-ENG')) THEN
                                 Account := "Sales Invoice Header".Spediteuraccount
                               ELSE
                                 Account := "Shipping Agent".Name;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number > 1 THEN
                                    KopieText := 'skopie';
                                  ReportForNav.PageNo := 1;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkRechDruckZ„hler.RUN("Sales Invoice Header");
                              END;
                               }

    { 5   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 6   ;3   ;Column  ;Service_via_EMail   ;
               SourceExpr=Service_via_EMail }

    { 7   ;3   ;Column  ;nicht_rechnen       ;
               IncludeCaption=No;
               SourceExpr=nicht_rechnen }

    { 8   ;3   ;Column  ;WAuberprufen        ;
               IncludeCaption=No;
               SourceExpr="WŽ berprfen" }

    { 9   ;3   ;Column  ;nachste_lief_jahr   ;
               IncludeCaption=No;
               SourceExpr=n„chste_lief_jahr }

    { 10  ;3   ;Column  ;nachste_lief_woche  ;
               IncludeCaption=No;
               SourceExpr=n„chste_lief_woche }

    { 11  ;3   ;Column  ;SeriennummerviaEMail;
               IncludeCaption=No;
               SourceExpr="Seriennummer via EMail" }

    { 12  ;3   ;Column  ;viaEmail_unterschrift_R;
               IncludeCaption=No;
               SourceExpr="via Email_unterschrift_R" }

    { 13  ;3   ;Column  ;viaEmail_R          ;
               IncludeCaption=No;
               SourceExpr="via Email_R" }

    { 14  ;3   ;Column  ;viaEmail_unterschrift;
               IncludeCaption=No;
               SourceExpr="via Email_unterschrift" }

    { 15  ;3   ;Column  ;viaEmail            ;
               IncludeCaption=No;
               SourceExpr="via Email" }

    { 16  ;3   ;Column  ;abvorwandlung       ;
               IncludeCaption=No;
               SourceExpr="ab vor wandlung" }

    { 17  ;3   ;Column  ;No_SalesInvoiceHeader;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header"."No." }

    { 18  ;3   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header"."Sell-to Customer No." }

    { 19  ;3   ;Column  ;OrderNo_SalesInvoiceHeader;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header"."Order No." }

    { 20  ;3   ;Column  ;VATRegistrationNo_verk_debitor;
               IncludeCaption=No;
               SourceExpr=verk_debitor."VAT Registration No." }

    { 21  ;3   ;Column  ;OurAccountNo_verk_debitor;
               IncludeCaption=No;
               SourceExpr=verk_debitor."Our Account No." }

    { 22  ;3   ;Column  ;SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header"."External Document No."+' '+"Sales Invoice Header"."Your Reference" }

    { 23  ;3   ;Column  ;PostingDate_SalesInvoiceHeader;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header"."Posting Date" }

    { 24  ;3   ;Column  ;DebAdr8             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[8] }

    { 25  ;3   ;Column  ;DebAdr7             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[7] }

    { 26  ;3   ;Column  ;DebAdr6             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[6] }

    { 27  ;3   ;Column  ;DebAdr5             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[5] }

    { 28  ;3   ;Column  ;DebAdr4             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[4] }

    { 29  ;3   ;Column  ;DebAdr3             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[3] }

    { 30  ;3   ;Column  ;DebAdr2             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[2] }

    { 31  ;3   ;Column  ;DebAdr1             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[1] }

    { 32  ;3   ;Column  ;STRSUBSTNO_Seite_Pct1_FORMAT_ReportForNavPageNo_;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO('Seite:  %1',FORMAT(ReportForNav.PageNo)) }

    { 33  ;3   ;DataItem;Verkaufsrechnungszeile;
               DataItemTable=Table113;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                               {lshanf c02}
                               grechrabbetr := 0;
                               {lshend}
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  {lshanf c02}
                                  IF "Inv. Discount Amount" <> 0 THEN BEGIN
                                    "grechrab%" := ("Inv. Discount Amount" * 100) / (Amount + "Inv. Discount Amount");
                                    grechrabbetr := grechrabbetr + Amount + "Inv. Discount Amount";
                                  END;
                                  {lshend}
                                  //TOPAS 02.07.08 ST - Sachkonten Restmenge aus Auftrag holen , zum andrucken
                                  Auftrag.SETFILTER(Type,'%1',Auftrag.Type::"G/L Account");
                                  Auftrag.SETFILTER("Document No.",'%1',Verkaufsrechnungszeile."Order No.");
                                  Auftrag.SETFILTER("Line No.",'%1',Verkaufsrechnungszeile."Order Line No.");
                                  IF Auftrag.FINDFIRST THEN BEGIN
                                    RestmengeZeile := Auftrag."Outstanding Quantity" + Auftrag."Qty. Shipped Not Invoiced";
                                  END ELSE BEGIN
                                    RestmengeZeile := 0;
                                  END;
                                  IF v_FER_SPL = FALSE THEN BEGIN
                                    IF ((Verkaufsrechnungszeile."Manufacturer Code" = '82') OR (Verkaufsrechnungszeile."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 34  ;4   ;Column  ;STRSUBSTNO_Seite_Pct1_FORMAT_ReportForNavPageNo_1_;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO('Seite:  %1',FORMAT(ReportForNav.PageNo-1)) }

    { 35  ;4   ;Column  ;Amount_InvDiscountAmount;
               IncludeCaption=No;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 36  ;4   ;Column  ;Description_Verkaufsrechnungszeile;
               IncludeCaption=No;
               SourceExpr=Description }

    { 37  ;4   ;Column  ;RestmengeZeile      ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=RestmengeZeile }

    { 38  ;4   ;Column  ;UnitPrice_Verkaufsrechnungszeile;
               IncludeCaption=No;
               SourceExpr="Unit Price";
               AutoFormatType=2;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 39  ;4   ;Column  ;Quantity_Verkaufsrechnungszeile;
               IncludeCaption=No;
               SourceExpr=Quantity }

    { 40  ;4   ;Column  ;STRSUBSTNO_Seite_Pct1_FORMAT_ReportForNavPageNo_1_2;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO('Seite:  %1',FORMAT(ReportForNav.PageNo+1)) }

    { 41  ;4   ;Column  ;InvDiscountAmount_Verkaufsrechnungszeile;
               IncludeCaption=No;
               SourceExpr=-"Inv. Discount Amount" }

    { 42  ;4   ;Column  ;grechrabbetr        ;
               IncludeCaption=No;
               SourceExpr=grechrabbetr }

    { 43  ;4   ;Column  ;grechrabPct         ;
               IncludeCaption=No;
               SourceExpr="grechrab%" }

    { 44  ;4   ;Column  ;waehrung2           ;
               IncludeCaption=No;
               SourceExpr=waehrung2 }

    { 45  ;4   ;Column  ;TotalInklMWStText   ;
               IncludeCaption=No;
               SourceExpr=TotalInklMWStText }

    { 46  ;4   ;Column  ;TotalText           ;
               IncludeCaption=No;
               SourceExpr=TotalText }

    { 47  ;4   ;Column  ;MWSTBetragZeileVATAmountText;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile.VATAmountText }

    { 48  ;4   ;Column  ;AmountIncludingVAT_Verkaufsrechnungszeile;
               IncludeCaption=No;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 49  ;4   ;Column  ;AmountIncludingVAT_Amount;
               IncludeCaption=No;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 50  ;4   ;Column  ;Amount_Verkaufsrechnungszeile;
               IncludeCaption=No;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 51  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnPreDataItem=BEGIN
                               IF debart <> '' THEN
                               debart := 'Ihre Artikelnummer: ' + debart;
                               //TOPAS 02.07.08 ST - Restmenge aus Auftrag holen, zum andrucken
                               Auftrag.SETFILTER(Type,'%1',Auftrag.Type::Item);
                               Auftrag.SETFILTER("Document No.",'%1',Verkaufsrechnungszeile."Order No.");
                               Auftrag.SETFILTER("Line No.",'%1',Verkaufsrechnungszeile."Order Line No.");
                               IF Auftrag.FINDFIRST THEN BEGIN
                                 IF Auftrag."Outstanding Quantity" <> 0 THEN BEGIN
                                   RestmengeZeile := Auftrag."Outstanding Quantity" + Auftrag."Qty. Shipped Not Invoiced";
                                   RestmengeAU := RestmengeAU + RestmengeZeile;
                                 END ELSE BEGIN
                                   IF Auftrag."Qty. Shipped Not Invoiced" <> 0 THEN
                                     RestmengeAU := RestmengeAU + Auftrag."Qty. Shipped Not Invoiced";
                                 END;
                                 IF Auftrag."Promised Delivery Date" = 31122053D THEN BEGIN
                                   liefert := 'Abruf';
                                 END;
                                 IF Auftrag."Promised Delivery Date"= 31122055D THEN BEGIN
                                   IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                     liefert := 'folgt';
                                   END ELSE BEGIN
                                     liefert := 'To Follow';
                                   END;
                                 END;
                               END;
                             END;

               OnPostDataItem=BEGIN
                                debart := '';
                                liefert := '';
                              END;

               DataItemLinkReference=Verkaufsrechnungszeile;
               DataItemLink=No.=FIELD(No.) }

    { 52  ;5   ;Column  ;LineNo_Verkaufsrechnungszeile;
               IncludeCaption=No;
               SourceExpr=Verkaufsrechnungszeile."Line No." }

    { 53  ;5   ;Column  ;SearchDescription_Item;
               IncludeCaption=No;
               SourceExpr="Search Description" }

    { 54  ;5   ;Column  ;Artikelnr2_Verkaufsrechnungszeile;
               IncludeCaption=No;
               SourceExpr=Verkaufsrechnungszeile."Artikelnr. 2" }

    { 55  ;5   ;Column  ;Description_Verkaufsrechnungszeile3;
               IncludeCaption=No;
               SourceExpr=Verkaufsrechnungszeile.Description }

    { 56  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               IncludeCaption=No;
               SourceExpr="Country/Region of Origin Code" }

    { 57  ;5   ;Column  ;Quantity_Verkaufsrechnungszeile2;
               IncludeCaption=No;
               SourceExpr=Verkaufsrechnungszeile.Quantity }

    { 58  ;5   ;Column  ;RestmengeZeile2     ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=RestmengeZeile }

    { 59  ;5   ;Column  ;liefert             ;
               IncludeCaption=No;
               SourceExpr=liefert }

    { 60  ;5   ;Column  ;UnitPrice_Verkaufsrechnungszeile2;
               IncludeCaption=No;
               SourceExpr=Verkaufsrechnungszeile."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 61  ;5   ;Column  ;VerkaufsrechnungszeileAmount_VerkaufsrechnungszeileInvDiscou;
               IncludeCaption=No;
               SourceExpr=Verkaufsrechnungszeile.Amount+Verkaufsrechnungszeile."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 62  ;5   ;Column  ;PromisedDeliveryDate_Auftrag;
               IncludeCaption=No;
               SourceExpr=Auftrag."Promised Delivery Date" }

    { 63  ;5   ;Column  ;Description2_Verkaufsrechnungszeile;
               IncludeCaption=No;
               SourceExpr=Verkaufsrechnungszeile."Description 2" }

    { 64  ;5   ;Column  ;Endkunde_Verkaufsrechnungszeile;
               IncludeCaption=No;
               SourceExpr=Verkaufsrechnungszeile.Endkunde }

    { 65  ;5   ;Column  ;Cross_ReferenceNo_Verkaufsrechnungszeile;
               IncludeCaption=No;
               SourceExpr=Verkaufsrechnungszeile."Cross-Reference No." }

    { 66  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=No.=FIELD(No.) }

    { 67  ;4   ;Column  ;Comment_SalesCommentLine;
               IncludeCaption=No;
               SourceExpr=Comment }

    { 70  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 71  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 72  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 73  ;4   ;Column  ;VATBase_MWSTBetragZeile2;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 74  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 75  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 76  ;4   ;Column  ;Account             ;
               IncludeCaption=No;
               SourceExpr=Account }

    { 77  ;4   ;Column  ;Description_LieferBed;
               IncludeCaption=No;
               SourceExpr=LieferBed.Description }

    { 78  ;4   ;Column  ;gzbedtx             ;
               IncludeCaption=No;
               SourceExpr=gzbedtx }

    { 79  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 80  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader2_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header".FIELDCAPTION("Sell-to Customer No.") }

    { 81  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader2;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header"."Sell-to Customer No." }

    { 82  ;4   ;Column  ;LieferAnAdr1        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[1] }

    { 83  ;4   ;Column  ;LieferAnAdr8        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[8] }

    { 84  ;4   ;Column  ;LieferAnAdr7        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[7] }

    { 85  ;4   ;Column  ;LieferAnAdr6        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[6] }

    { 86  ;4   ;Column  ;LieferAnAdr5        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[5] }

    { 87  ;4   ;Column  ;LieferAnAdr4        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[4] }

    { 88  ;4   ;Column  ;LieferAnAdr3        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[3] }

    { 89  ;4   ;Column  ;LieferAnAdr2        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[2] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      spedition@1000000014 : Record 291;
      art1@1000000013 : Record 27;
      verk_debitor@1000000012 : Record 18;
      FIBUEinrichtung@1000000011 : Record 98;
      LieferBed@1000000010 : Record 10;
      ZlgBed@1000000009 : Record 3;
      VerkEinkPerson@1000000008 : Record 13;
      Firmendaten@1000000007 : Record 79;
      Deb@1000000006 : Record 18;
      Kunde@1000000016 : Record 18;
      vk_rech_zeile@1000000015 : Record 37;
      MWSTBetragZeile@1000000005 : TEMPORARY Record 290;
      Language@1000000004 : Record 8;
      VerkRechDruckZ„hler@1000000003 : Codeunit 315;
      FormatAdr@1000000002 : Codeunit 365;
      TOPAS_Funktionen@1000000000 : Codeunit 50006;
      waehrung2@1140000 : Code[10];
      waehrung@1140001 : Code[10];
      debart@1140002 : Text[80];
      CompanyInfo@1000000001 : ARRAY [15] OF Text;
      DebAdr@1140015 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140016 : ARRAY [8] OF Text[50];
      FirmaAdr@1140017 : ARRAY [8] OF Text[50];
      AuftragNrText@1140018 : Text[30];
      Verk„uferText@1140019 : Text[30];
      MWStNrText@1140020 : Text[30];
      ReferenzText@1140021 : Text[30];
      TotalText@1140022 : Text[50];
      TotalInklMWStText@1140023 : Text[50];
      MehrZeilen@1140024 : Boolean;
      AnzKopien@1140025 : Integer;
      AnzSchleifen@1140026 : Integer;
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      "--------LSH--------"@1140030 : Integer;
      "grechrab%"@1140031 : Decimal;
      grechrabbetr@1140032 : Decimal;
      gzbedtx@1140033 : Text[100];
      "via Email"@1140034 : Text[40];
      "via Email_unterschrift"@1140035 : Text[40];
      "via EMail_adresse"@1140036 : Text[40];
      "ab vor wandlung"@1140037 : Text[40];
      "via Email_R"@1140038 : Text[40];
      "via Email_unterschrift_R"@1140039 : Text[40];
      "via email_adr_r"@1140040 : Text[40];
      "Seriennummer via EMail"@1140041 : Text[50];
      Service_via_EMail@1140055 : Text[40];
      Account@1140044 : Text[90];
      Auftrag@1140045 : Record 37;
      RestmengeZeile@1140046 : Decimal;
      RestmengeAU@1140047 : Decimal;
      liefert@1140048 : Code[10];
      n„chste_lief_tab@1140049 : Record 37;
      n„chste_lief_woche@1140050 : Text[30];
      n„chste_lief_jahr@1140051 : Text[30];
      "WŽ berprfen"@1140052 : Text[30];
      vkk@1140053 : Record 36;
      nicht_rechnen@1140054 : Text[30];
      v_FER_SPL@1140056 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1168, Version=2.0.0.1168, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1168, Version=2.0.0.1168, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header2@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput("Sales Invoice Header"."Shipping Agent Code"='UPS-RG4')
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Body6@5011(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        //ReportForNav.ShowOutput(Art = 0);
        // Unterdckt Artikeltexte wenn eine Artikelzeile nicht berechnet wird
        vk_rech_zeile.SETFILTER(vk_rech_zeile."Document No.",'%1',Verkaufsrechnungszeile."Document No." );
        vk_rech_zeile.SETFILTER(vk_rech_zeile."Line No.",'%1',Verkaufsrechnungszeile."Attached to Line No." );
        IF vk_rech_zeile.FINDFIRST THEN BEGIN
          ReportForNav.ShowOutput(((vk_rech_zeile.Type = vk_rech_zeile.Type::Item) AND (vk_rech_zeile.Quantity > 0)) OR (vk_rech_zeile.Type = 0));
        END ELSE BEGIN
          IF ((Verkaufsrechnungszeile."Attached to Line No." = 0) AND (Verkaufsrechnungszeile.Type = 0) AND (Verkaufsrechnungszeile.Description <> '')) THEN
            ReportForNav.ShowOutput(TRUE)
          ELSE
            ReportForNav.ShowOutput(FALSE);
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Body7@5012(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput((Type = Type::"G/L Account")  AND (Verkaufsrechnungszeile.Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Footer9@5013(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Footer11@5014(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Footer13@5015(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput(RestmengeAU = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body14@5016(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Verkaufsrechnungszeile.Type = Verkaufsrechnungszeile.Type::Item)
        AND ((Verkaufsrechnungszeile.Quantity > 0) OR (Verkaufsrechnungszeile.Einkaufsw„hrungsfaktor > 0)) AND (Auftrag."Promised Delivery Date" = 31122055D));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body15@5017(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Verkaufsrechnungszeile.Type = Verkaufsrechnungszeile.Type::Item)
        AND ((Verkaufsrechnungszeile.Quantity > 0) OR (Verkaufsrechnungszeile.Einkaufsw„hrungsfaktor > 0)) AND (Auftrag."Promised Delivery Date" = 31122053D));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body16@5018(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Verkaufsrechnungszeile.Type =Verkaufsrechnungszeile.Type::Item)
        AND ((Verkaufsrechnungszeile.Quantity > 0) OR (Verkaufsrechnungszeile.Einkaufsw„hrungsfaktor > 0)) AND (Auftrag."Promised Delivery Date" < 31122053D));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body17@5019(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Verkaufsrechnungszeile."Description 2" <> '')
        AND (Verkaufsrechnungszeile.Type =Verkaufsrechnungszeile.Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body18@5020(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Beschreibung 3" <> '') AND (Verkaufsrechnungszeile.Type = Verkaufsrechnungszeile.Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5021(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Verkaufsrechnungszeile.Type = Verkaufsrechnungszeile.Type::Item)
        AND (Verkaufsrechnungszeile.Quantity > 0) OR (Verkaufsrechnungszeile."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body20@5022(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Verkaufsrechnungszeile."VAT Prod. Posting Group" = '13B2')
         AND (Verkaufsrechnungszeile.Type = Verkaufsrechnungszeile.Type::Item) AND (Verkaufsrechnungszeile.Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body28@5028(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        {lshanf c01}
        //IF ZlgBed."Discount %" <> 0 THEN BEGIN
        //  "Sales Invoice Header".CALCFIELDS(Skontobetrag);
          IF COPYSTR(ZlgBed.Description,1,1) <> '*' THEN
            gzbedtx := ZlgBed.Description;
        //    ELSE
        //    BEGIN
        //    gzbedtx := ZlgBed.Description;
        //      END
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body30@5029(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Invoice Header"."Sell-to Customer No." <> "Sales Invoice Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header2': OnPreSectionSeiteSchleife_Header2(SeiteSchleife);
        END;
        'Verkaufsrechnungszeile': CASE SectionId OF
          'Body6': OnPreSectionVerkaufsrechnungszeile_Body6(Verkaufsrechnungszeile);
          'Body7': OnPreSectionVerkaufsrechnungszeile_Body7(Verkaufsrechnungszeile);
          'Footer9': OnPreSectionVerkaufsrechnungszeile_Footer9(Verkaufsrechnungszeile);
          'Footer11': OnPreSectionVerkaufsrechnungszeile_Footer11(Verkaufsrechnungszeile);
          'Footer13': OnPreSectionVerkaufsrechnungszeile_Footer13(Verkaufsrechnungszeile);
        END;
        'Item': CASE SectionId OF
          'Body14': OnPreSectionItem_Body14(Item);
          'Body15': OnPreSectionItem_Body15(Item);
          'Body16': OnPreSectionItem_Body16(Item);
          'Body17': OnPreSectionItem_Body17(Item);
          'Body18': OnPreSectionItem_Body18(Item);
          'Body19': OnPreSectionItem_Body19(Item);
          'Body20': OnPreSectionItem_Body20(Item);
        END;
        'Total': CASE SectionId OF
          'Body28': OnPreSectionTotal_Body28(Total);
        END;
        'Total2': CASE SectionId OF
          'Body30': OnPreSectionTotal2_Body30(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // Do not change (Autogenerated by Reports ForNAV) - Instead change the Create Totals, Total Fields or Group Total Fields properties on the Data item in the ForNAV designer
      CASE DataItemId OF
        'Verkaufsrechnungszeile': WITH Verkaufsrechnungszeile DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      030299 pl
      c01  Total, Body(1) und Globals
           Zahlungsbedingung vom Skonto abh„nging ausdrucken.
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      c02  Verkaufsrechnungszeile, C/AL und Globals
           Rechnungsrabatt %-Satz und Rabattgrundlage in Rechnungsrabattzeile mit ausdrucken.
      131099 al
      c03  Verkaufsrechnungszeile, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>70eadece-f191-4a6b-ad14-6d54a210d734</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>542470ac-3c3a-4174-8a14-b0ef913124ea</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="Service_via_EMail">
          <DataField>Service_via_EMail</DataField>
        </Field>
        <Field Name="nicht_rechnen">
          <DataField>nicht_rechnen</DataField>
        </Field>
        <Field Name="WAuberprufen">
          <DataField>WAuberprufen</DataField>
        </Field>
        <Field Name="nachste_lief_jahr">
          <DataField>nachste_lief_jahr</DataField>
        </Field>
        <Field Name="nachste_lief_woche">
          <DataField>nachste_lief_woche</DataField>
        </Field>
        <Field Name="SeriennummerviaEMail">
          <DataField>SeriennummerviaEMail</DataField>
        </Field>
        <Field Name="viaEmail_unterschrift_R">
          <DataField>viaEmail_unterschrift_R</DataField>
        </Field>
        <Field Name="viaEmail_R">
          <DataField>viaEmail_R</DataField>
        </Field>
        <Field Name="viaEmail_unterschrift">
          <DataField>viaEmail_unterschrift</DataField>
        </Field>
        <Field Name="viaEmail">
          <DataField>viaEmail</DataField>
        </Field>
        <Field Name="abvorwandlung">
          <DataField>abvorwandlung</DataField>
        </Field>
        <Field Name="No_SalesInvoiceHeader">
          <DataField>No_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesInvoiceHeader">
          <DataField>Sell_toCustomerNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="OrderNo_SalesInvoiceHeader">
          <DataField>OrderNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="VATRegistrationNo_verk_debitor">
          <DataField>VATRegistrationNo_verk_debitor</DataField>
        </Field>
        <Field Name="OurAccountNo_verk_debitor">
          <DataField>OurAccountNo_verk_debitor</DataField>
        </Field>
        <Field Name="SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour">
          <DataField>SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour</DataField>
        </Field>
        <Field Name="PostingDate_SalesInvoiceHeader">
          <DataField>PostingDate_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="STRSUBSTNO_Seite_Pct1_FORMAT_ReportForNavPageNo_">
          <DataField>STRSUBSTNO_Seite_Pct1_FORMAT_ReportForNavPageNo_</DataField>
        </Field>
        <Field Name="STRSUBSTNO_Seite_Pct1_FORMAT_ReportForNavPageNo_1_">
          <DataField>STRSUBSTNO_Seite_Pct1_FORMAT_ReportForNavPageNo_1_</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmount">
          <DataField>Amount_InvDiscountAmount</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmountFormat">
          <DataField>Amount_InvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description_Verkaufsrechnungszeile">
          <DataField>Description_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="RestmengeZeile">
          <DataField>RestmengeZeile</DataField>
        </Field>
        <Field Name="RestmengeZeileFormat">
          <DataField>RestmengeZeileFormat</DataField>
        </Field>
        <Field Name="UnitPrice_Verkaufsrechnungszeile">
          <DataField>UnitPrice_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="UnitPrice_VerkaufsrechnungszeileFormat">
          <DataField>UnitPrice_VerkaufsrechnungszeileFormat</DataField>
        </Field>
        <Field Name="Quantity_Verkaufsrechnungszeile">
          <DataField>Quantity_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="Quantity_VerkaufsrechnungszeileFormat">
          <DataField>Quantity_VerkaufsrechnungszeileFormat</DataField>
        </Field>
        <Field Name="STRSUBSTNO_Seite_Pct1_FORMAT_ReportForNavPageNo_1_2">
          <DataField>STRSUBSTNO_Seite_Pct1_FORMAT_ReportForNavPageNo_1_2</DataField>
        </Field>
        <Field Name="InvDiscountAmount_Verkaufsrechnungszeile">
          <DataField>InvDiscountAmount_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="InvDiscountAmount_VerkaufsrechnungszeileFormat">
          <DataField>InvDiscountAmount_VerkaufsrechnungszeileFormat</DataField>
        </Field>
        <Field Name="grechrabbetr">
          <DataField>grechrabbetr</DataField>
        </Field>
        <Field Name="grechrabbetrFormat">
          <DataField>grechrabbetrFormat</DataField>
        </Field>
        <Field Name="grechrabPct">
          <DataField>grechrabPct</DataField>
        </Field>
        <Field Name="grechrabPctFormat">
          <DataField>grechrabPctFormat</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="MWSTBetragZeileVATAmountText">
          <DataField>MWSTBetragZeileVATAmountText</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_Verkaufsrechnungszeile">
          <DataField>AmountIncludingVAT_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_VerkaufsrechnungszeileFormat">
          <DataField>AmountIncludingVAT_VerkaufsrechnungszeileFormat</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_Amount">
          <DataField>AmountIncludingVAT_Amount</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_AmountFormat">
          <DataField>AmountIncludingVAT_AmountFormat</DataField>
        </Field>
        <Field Name="Amount_Verkaufsrechnungszeile">
          <DataField>Amount_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="Amount_VerkaufsrechnungszeileFormat">
          <DataField>Amount_VerkaufsrechnungszeileFormat</DataField>
        </Field>
        <Field Name="LineNo_Verkaufsrechnungszeile">
          <DataField>LineNo_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="SearchDescription_Item">
          <DataField>SearchDescription_Item</DataField>
        </Field>
        <Field Name="Artikelnr2_Verkaufsrechnungszeile">
          <DataField>Artikelnr2_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="Description_Verkaufsrechnungszeile3">
          <DataField>Description_Verkaufsrechnungszeile3</DataField>
        </Field>
        <Field Name="Country_RegionofOriginCode_Item">
          <DataField>Country_RegionofOriginCode_Item</DataField>
        </Field>
        <Field Name="Quantity_Verkaufsrechnungszeile2">
          <DataField>Quantity_Verkaufsrechnungszeile2</DataField>
        </Field>
        <Field Name="Quantity_Verkaufsrechnungszeile2Format">
          <DataField>Quantity_Verkaufsrechnungszeile2Format</DataField>
        </Field>
        <Field Name="RestmengeZeile2">
          <DataField>RestmengeZeile2</DataField>
        </Field>
        <Field Name="RestmengeZeile2Format">
          <DataField>RestmengeZeile2Format</DataField>
        </Field>
        <Field Name="liefert">
          <DataField>liefert</DataField>
        </Field>
        <Field Name="UnitPrice_Verkaufsrechnungszeile2">
          <DataField>UnitPrice_Verkaufsrechnungszeile2</DataField>
        </Field>
        <Field Name="UnitPrice_Verkaufsrechnungszeile2Format">
          <DataField>UnitPrice_Verkaufsrechnungszeile2Format</DataField>
        </Field>
        <Field Name="VerkaufsrechnungszeileAmount_VerkaufsrechnungszeileInvDiscou">
          <DataField>VerkaufsrechnungszeileAmount_VerkaufsrechnungszeileInvDiscou</DataField>
        </Field>
        <Field Name="VerkaufsrechnungszeileAmount_VerkaufsrechnungszeileInvDiscouFormat">
          <DataField>VerkaufsrechnungszeileAmount_VerkaufsrechnungszeileInvDiscouFormat</DataField>
        </Field>
        <Field Name="PromisedDeliveryDate_Auftrag">
          <DataField>PromisedDeliveryDate_Auftrag</DataField>
        </Field>
        <Field Name="Description2_Verkaufsrechnungszeile">
          <DataField>Description2_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="Endkunde_Verkaufsrechnungszeile">
          <DataField>Endkunde_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_Verkaufsrechnungszeile">
          <DataField>Cross_ReferenceNo_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="Comment_SalesCommentLine">
          <DataField>Comment_SalesCommentLine</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile2">
          <DataField>VATBase_MWSTBetragZeile2</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile2Format">
          <DataField>VATBase_MWSTBetragZeile2Format</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="Account">
          <DataField>Account</DataField>
        </Field>
        <Field Name="Description_LieferBed">
          <DataField>Description_LieferBed</DataField>
        </Field>
        <Field Name="gzbedtx">
          <DataField>gzbedtx</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesInvoiceHeader2_Lbl">
          <DataField>Sell_toCustomerNo_SalesInvoiceHeader2_Lbl</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesInvoiceHeader2">
          <DataField>Sell_toCustomerNo_SalesInvoiceHeader2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

