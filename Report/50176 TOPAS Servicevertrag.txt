OBJECT Report 50176 TOPAS Servicevertrag
{
  OBJECT-PROPERTIES
  {
    Date=04.06.18;
    Time=17:03:29;
    Modified=Yes;
    Version List=fertig,FORNAV3.1.0.1460/1460;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                                                                                                                              ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50011;
               DataItemTableView=WHERE(Status=FILTER(<>ACTS&<>Champs Partner));
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo","Systeme Logo");
                             END;

               ReqFilterFields=Wartungsvertragsnr. }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table50024;
               DataItemTableView=SORTING(Gruppierung,Basisger„t)
                                 ORDER(Descending)
                                 WHERE(Art=FILTER(Service),
                                       Inaktiv=FILTER(No),
                                       SUP Artikelnr.=FILTER(<>CHAMPS-RE_INSTATE#01&<>RE_INSTATEMENT_FEE));
               OnPreDataItem=BEGIN
                               ReportForNav.PrinterSettings.PaperSource(3);
                               Nummer := 0;
                               kopf_text := '';
                               status_text := '';
                               //Blendet nun abgelaufene Servicepositionen aus
                               IF alles_drucken = FALSE THEN
                                 "Serviceleist. & Leihstellungen".SETFILTER("Ablaufdatum Serviceleistung",'>=%1',WORKDATE);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Shipment.GET("Serviceleist. & Leihstellungen"."Nr.") THEN BEGIN
                                    IF (Shipment."Sell-to Country/Region Code" <> 'DE') THEN BEGIN
                                    //AND(Shipment."Sell-to Country/Region Code" <>'AT')
                                    //AND (Shipment."Sell-to Country/Region Code" <>'CH')) THEN
                                      CurrReport.LANGUAGE(1033); // Englischer L„ndercode  (ENU Englisch(USA))
                                    END ELSE BEGIN
                                      CurrReport.LANGUAGE(1031); // Deutscher L„ndercode
                                    END;
                                  END;
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  //Suche nach 1. Basisger„t zum Andruck des Benuters + PW
                                  ZugangsdatenAndruck.RESET;
                                  ZugangsdatenAndruck.SETRANGE(Art,ZugangsdatenAndruck.Art::Service);
                                  ZugangsdatenAndruck.SETRANGE(Inaktiv,FALSE);
                                  ZugangsdatenAndruck.SETRANGE(Basisger„t,TRUE);
                                  ZugangsdatenAndruck.SETRANGE("Zu exportieren",TRUE);
                                  ZugangsdatenAndruck.SETRANGE("Wartungsvertragsnr.","Serviceleist. & Leihstellungen"."Wartungsvertragsnr.");
                                  IF ZugangsdatenAndruck.FINDFIRST THEN BEGIN
                                    benutzer := ZugangsdatenAndruck.Benutzername;
                                    pw := ZugangsdatenAndruck.Passwort;
                                  END ELSE BEGIN
                                    //Wartungsvertrag verfgt ber kein Basisger„t
                                    ZugangsdatenAndruck.RESET;
                                    ZugangsdatenAndruck.SETRANGE(Art,ZugangsdatenAndruck.Art::Service);
                                    ZugangsdatenAndruck.SETRANGE(Inaktiv,FALSE);
                                    ZugangsdatenAndruck.SETRANGE("Zu exportieren",TRUE);
                                    ZugangsdatenAndruck.SETRANGE("Wartungsvertragsnr.","Serviceleist. & Leihstellungen"."Wartungsvertragsnr.");
                                    IF ZugangsdatenAndruck.FINDFIRST THEN BEGIN
                                      benutzer := ZugangsdatenAndruck.Benutzername;
                                      pw := ZugangsdatenAndruck.Passwort;
                                    END
                                  END;
                                  sup_artikelnr := "Serviceleist. & Leihstellungen"."SUP Artikelnr.";
                                  Artikel.GET("SUP Artikelnr.");
                                  sup_artikelnr_lang := Artikel."No. 2";
                                  IF ((STRPOS(sup_artikelnr_lang,'HW') <> 0) OR (STRPOS(sup_artikelnr_lang,'AHR') <> 0)
                                  OR (STRPOS(sup_artikelnr_lang,'RPLC') <> 0) OR (sup_artikelnr_lang = 'CHAMPS-SUPP-8X5/YR')
                                  OR (STRPOS(sup_artikelnr_lang,'ENH-SUPP-PROG') <> 0))
                                  AND ((STRPOS(sup_artikelnr_lang,'SW') = 0) AND (STRPOS(sup_artikelnr_lang,'SOFTWARE') = 0)) THEN BEGIN
                                    benutzer := '-';
                                    pw := '-';
                                  END;
                                END;

               DataItemLink=Wartungsvertragsnr.=FIELD(Wartungsvertragsnr.) }

    { 1000000014;2;Column;SystemeLogo_Firmendaten;
               SourceExpr=Firmendaten."Systeme Logo" }

    { 4   ;2   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000003;2;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;2;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;2;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;2;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;2;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;2;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;2;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;2;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;2;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;2;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;2;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;2;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 5   ;2   ;Column  ;AndruckFeld8        ;
               SourceExpr=AndruckFeld[8] }

    { 6   ;2   ;Column  ;AndruckFeld7        ;
               SourceExpr=AndruckFeld[7] }

    { 7   ;2   ;Column  ;AndruckFeld6        ;
               SourceExpr=AndruckFeld[6] }

    { 8   ;2   ;Column  ;AndruckFeld5        ;
               SourceExpr=AndruckFeld[5] }

    { 9   ;2   ;Column  ;AndruckFeld4        ;
               SourceExpr=AndruckFeld[4] }

    { 10  ;2   ;Column  ;AndruckFeld3        ;
               SourceExpr=AndruckFeld[3] }

    { 11  ;2   ;Column  ;AndruckFeld2        ;
               SourceExpr=AndruckFeld[2] }

    { 12  ;2   ;Column  ;AndruckFeld1        ;
               SourceExpr=AndruckFeld[1] }

    { 1000000004;2;Column;ReportForNavPageNo ;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 22  ;2   ;Column  ;datum               ;
               SourceExpr=datum }

    { 21  ;2   ;Column  ;debitornr           ;
               SourceExpr=debitornr }

    { 3   ;2   ;Column  ;Nr_Serviceleist_Leihstellungen;
               SourceExpr="Nr." }

    { 13  ;2   ;Column  ;ansp_email          ;
               SourceExpr=ansp_email }

    { 14  ;2   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 15  ;2   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 16  ;2   ;Column  ;ansp_name           ;
               SourceExpr=ansp_name }

    { 17  ;2   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 18  ;2   ;Column  ;ihre_ref            ;
               SourceExpr=ihre_ref }

    { 19  ;2   ;Column  ;auftragsnr          ;
               SourceExpr=auftragsnr }

    { 20  ;2   ;Column  ;kopf_text           ;
               SourceExpr=kopf_text }

    { 23  ;2   ;Column  ;Wartungsvertragsnr_Wartungsvertrag;
               SourceExpr=Wartungsvertrag."Wartungsvertragsnr." }

    { 24  ;2   ;Column  ;SystemProjektinfos_Serviceleist_Leihstellungen;
               SourceExpr="System Projektinfos" }

    { 25  ;2   ;Column  ;pw                  ;
               SourceExpr=pw }

    { 26  ;2   ;Column  ;benutzer            ;
               SourceExpr=benutzer }

    { 27  ;2   ;Column  ;AblaufdatumServiceleistung_Serviceleist_Leihstellungen;
               SourceExpr="Ablaufdatum Serviceleistung" }

    { 28  ;2   ;Column  ;Lizenzdatum_Serviceleist_Leihstellungen;
               SourceExpr=Lizenzdatum }

    { 29  ;2   ;Column  ;Auftragsnr_Serviceleist_Leihstellungen;
               SourceExpr="Auftragsnr." }

    { 30  ;2   ;Column  ;Nummer              ;
               SourceExpr=Nummer }

    { 31  ;2   ;Column  ;sup_artikelnr_lang  ;
               SourceExpr=sup_artikelnr_lang }

    { 32  ;2   ;DataItem;                    ;
               DataItemTable=Table111;
               DataItemTableView=SORTING(Document No.,Line No.)
                                 WHERE(Type=FILTER(' '));
               DataItemLink=Document No.=FIELD(Nr.),
                            Attached to Line No.=FIELD(Belegzeilennr.) }

    { 33  ;3   ;Column  ;Description_SalesShipmentLine;
               SourceExpr=Description }

    { 34  ;2   ;DataItem;TOPAS Bemerkungen oben;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Leihstellung),
                                       Andruck=FILTER(Text oben));
               DataItemLink=Nr.=FIELD(Lfd. Nr.) }

    { 35  ;2   ;DataItem;Servicepositionen   ;
               DataItemTable=Table50024;
               DataItemTableView=SORTING(Lfd. Nr.,Art,Nr.);
               DataItemLink=Lfd. Nr.=FIELD(Lfd. Nr.) }

    { 36  ;3   ;Column  ;board_ini_text      ;
               SourceExpr=board_ini_text }

    { 37  ;3   ;Column  ;Menge_Serviceleist_Leihstellungen;
               DecimalPlaces=0:0;
               SourceExpr="Serviceleist. & Leihstellungen".Menge }

    { 38  ;3   ;Column  ;seriennr            ;
               SourceExpr=seriennr }

    { 39  ;3   ;Column  ;Artikelnr2_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Artikelnr. 2" }

    { 1000000000;3;Column;ProductKey         ;
               SourceExpr="Serviceleist. & Leihstellungen"."Product Key" }

    { 40  ;2   ;DataItem;TOPAS Bemerkungen unten;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Leihstellung),
                                       Andruck=FILTER(Text unten));
               DataItemLink=Nr.=FIELD(Lfd. Nr.) }

    { 41  ;3   ;Column  ;Bemerkung_TOPASBemerkungenunten;
               SourceExpr=Bemerkung }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1140000;2;Field     ;
                  CaptionML=DEU=Alles drucken;
                  SourceExpr=alles_drucken }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Debitor@1140007 : Record 18;
      Artikel@1140008 : Record 27;
      ZugangsdatenAndruck@1140027 : Record 50024;
      KopfdatenAndruck@1140032 : Record 50024;
      LetzteServicePos@1140001 : Record 50024;
      Systempositionen@1140025 : Record 50024;
      Shipment@1140023 : Record 110;
      SalesHeader@1140018 : Record 36;
      ArchHeader@1140014 : Record 5107;
      Beleghistorie@1000000000 : Record 50008;
      Land_Region@1140024 : Record 9;
      Verk„ufer@1140015 : Record 13;
      Firmendaten@1000000003 : Record 79;
      FormatAddr@1140031 : Codeunit 365;
      TOPAS_Funktionen@1000000002 : Codeunit 50006;
      CompanyInfo@1000000001 : ARRAY [15] OF Text;
      kopf_text@1140000 : Text[50];
      SUP_Art_Beschr@1140009 : Text;
      AndruckFeld@1140033 : ARRAY [8] OF Text[50];
      Nummer@1140005 : Integer;
      status_text@1140006 : Text[100];
      ihre_ref@1140013 : Text[100];
      ansp_name@1140016 : Text[100];
      ansp_anrede@1140012 : Text[50];
      ansp_telefon@1140011 : Text[50];
      ansp_fax@1140010 : Text[50];
      ansp_email@1140017 : Text[80];
      sup_artikelnr@1140019 : Code[20];
      sup_artikelnr_lang@1140022 : Code[40];
      andruck_champs@1140026 : Boolean;
      auftragsnr@1140030 : Code[20];
      debitornr@1140029 : Code[20];
      datum@1140028 : Date;
      benutzer@1140020 : Text;
      pw@1140021 : Text;
      seriennr@1140002 : Code[60];
      board_ini_text@1140004 : Text;
      wdate@1140034 : Date;
      alles_drucken@1140035 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header1@5010(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        LetzteServicePos.RESET;
        LetzteServicePos.SETRANGE("Wartungsvertragsnr.","Wartungsvertragsnr.");
        LetzteServicePos.SETRANGE(Art,LetzteServicePos.Art::Service);
        IF LetzteServicePos.FINDFIRST THEN BEGIN
          REPEAT
            IF (STRPOS(LetzteServicePos."SUP Artikelnr.",'CHAMPS') <> 0)
            OR (STRPOS(LetzteServicePos."SUP Artikelnr.",'ACTS') <> 0) THEN BEGIN
              andruck_champs := TRUE;
              IF CurrReport.LANGUAGE = 1031 THEN
                kopf_text := 'Champs Servicevertrag'
              ELSE
                kopf_text := 'Champs Service Agreement';
            END ELSE BEGIN
              IF STRPOS(LetzteServicePos."SUP Artikelnr.",'ACHAT') <> 0 THEN BEGIN
                andruck_champs := TRUE;
                IF CurrReport.LANGUAGE = 1031 THEN
                  kopf_text := 'ACHAT Servicevertrag'
                ELSE
                  kopf_text := 'ACHAT Service Agreement';
              END;
            END;
          UNTIL LetzteServicePos.NEXT = 0;
        END;
        IF andruck_champs = FALSE THEN
          kopf_text := 'Software Upgrade Protection';
        KopfdatenAndruck.RESET;
        KopfdatenAndruck.SETRANGE(Art,KopfdatenAndruck.Art::Service);
        KopfdatenAndruck.SETRANGE("Wartungsvertragsnr.","Wartungsvertragsnr.");
        KopfdatenAndruck.SETRANGE(Inaktiv,FALSE);
        IF KopfdatenAndruck.FINDLAST THEN ;
        auftragsnr := KopfdatenAndruck."Auftragsnr.";
        debitornr := KopfdatenAndruck."Debitornr.";
        datum := KopfdatenAndruck.Belegdatum;
        ihre_ref := '';
        ansp_telefon := '';
        ansp_fax:= '';
        ansp_anrede := '';
        ansp_name := '';
        ansp_email := '';
        ArchHeader.RESET;
        ArchHeader.SETRANGE(ArchHeader."No.",KopfdatenAndruck."Auftragsnr.");
        IF ArchHeader.FINDFIRST THEN BEGIN
          IF ArchHeader."External Document No." <> '' THEN ihre_ref := ArchHeader."External Document No."+' ';
          IF ArchHeader."Your Reference"  <> '' THEN ihre_ref := ihre_ref + ArchHeader."Your Reference";
          Land_Region.GET(ArchHeader."Sell-to Country/Region Code");
          IF Verk„ufer.GET(ArchHeader."Betreuer Innendienst") THEN BEGIN
            IF  CurrReport.LANGUAGE = 1031 THEN BEGIN
              ansp_fax := Verk„ufer."Fax No.";
              ansp_anrede := Verk„ufer.Ansprech;
              ansp_telefon := Verk„ufer."Phone No.";
            END ELSE BEGIN
              ansp_fax := Verk„ufer.Fax_international;
              ansp_anrede := Verk„ufer.Ansprech_eng;
              ansp_telefon := Verk„ufer.Tel_international;
            END;
            ansp_name := Verk„ufer."First name" + ' ' + Verk„ufer.Name;
            ansp_email := Verk„ufer."E-Mail";
          END;
        END ELSE BEGIN
          SalesHeader.RESET;
          SalesHeader.SETRANGE(SalesHeader."No.",KopfdatenAndruck."Auftragsnr.");
          IF SalesHeader.FINDFIRST THEN BEGIN
            IF SalesHeader."External Document No." <> '' THEN ihre_ref := SalesHeader."External Document No."+' ';
            IF SalesHeader."Your Reference"  <> '' THEN ihre_ref := ihre_ref + SalesHeader."Your Reference";
            Land_Region.GET(SalesHeader."Sell-to Country/Region Code");
            IF Verk„ufer.GET(SalesHeader."Betreuer Innendienst") THEN BEGIN
              IF  CurrReport.LANGUAGE = 1031 THEN BEGIN
                ansp_fax := Verk„ufer."Fax No.";
                ansp_anrede := Verk„ufer.Ansprech;
                ansp_telefon := Verk„ufer."Phone No.";
              END ELSE BEGIN
                ansp_fax := Verk„ufer.Fax_international;
                ansp_anrede := Verk„ufer.Ansprech_eng;
                ansp_telefon := Verk„ufer.Tel_international;
              END;
              ansp_name := Verk„ufer."First name" + ' ' + Verk„ufer.Name;
              ansp_email := Verk„ufer."E-Mail";
            END;
          END ELSE BEGIN
            //Daten aus „lteren NAV Versionen
            Beleghistorie.RESET;
            Beleghistorie.SETRANGE("Auftragsnr.",KopfdatenAndruck."Auftragsnr.");
            IF Beleghistorie.FINDFIRST THEN BEGIN
              //Noch berarbeiten, da es das Feld nicht in der Beleghistorie gibt
              //IF Beleghistorie."Externe Belegnr." <> '' THEN ihre_ref := SalesHeader."External Document No."+' ';
              IF Beleghistorie.Referenz  <> '' THEN ihre_ref := ihre_ref + Beleghistorie.Referenz;
              //Noch berarbeiten, da es das Feld nicht in der Beleghistorie gibt
              //Land_Region.GET(Beleghistorie."Sell-to Country/Region Code");
              Land_Region.GET('DE');
              IF Verk„ufer.GET(Beleghistorie."Betreuer Innendienst") THEN BEGIN
                IF  CurrReport.LANGUAGE = 1031 THEN BEGIN
                  ansp_fax := Verk„ufer."Fax No.";
                  ansp_anrede := Verk„ufer.Ansprech;
                  ansp_telefon := Verk„ufer."Phone No.";
                END ELSE BEGIN
                  ansp_fax := Verk„ufer.Fax_international;
                  ansp_anrede := Verk„ufer.Ansprech_eng;
                  ansp_telefon := Verk„ufer.Tel_international;
                END;
                ansp_name := Verk„ufer."First name" + ' ' + Verk„ufer.Name;
                ansp_email := Verk„ufer."E-Mail";
              END;
            END;
          END;
        END;
        FormatAddr.FormatAddr(AndruckFeld,KopfdatenAndruck.Debitorname,KopfdatenAndruck."Name 2",KopfdatenAndruck.Kontakt,
        KopfdatenAndruck.Adresse,KopfdatenAndruck."Adresse 2",KopfdatenAndruck.Ort,KopfdatenAndruck."PLZ-Code",'',Land_Region.Code);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header2@5011(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput(andruck_champs = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header3@5012(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput(andruck_champs = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_GroupHeader5@5013(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        Nummer += 1;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_GroupFooter6@5014(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput((STRPOS(sup_artikelnr_lang,'SW') <> 0) AND (STRPOS(sup_artikelnr_lang,'CHAMPS') <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body8@5015(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(sup_artikelnr <> Servicepositionen."SUP Artikelnr.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer9@5016(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(sup_artikelnr <> Servicepositionen."SUP Artikelnr.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServicepositionen_Body10@5017(VAR Servicepositionen@1000000000 : Record 50024);
    BEGIN
      WITH Servicepositionen DO BEGIN
        seriennr := "Seriennr.";
        IF Artikel.GET("Artikelnr.") THEN BEGIN
          IF (Artikel."Item Tracking Code" = 'PRODUCTKEY') OR ((Artikel."Item Tracking Code" = 'SN-ODER-PK') AND (STRPOS("Seriennr.",'NODATA') <> 0)) THEN
            seriennr := "Product Key";
        END;
        IF STRPOS(seriennr,'S/N: ') = 1 THEN
          seriennr := COPYSTR(seriennr,STRLEN('S/N: ')+1);
        IF STRPOS(seriennr,'S/N:') = 1 THEN
          seriennr := COPYSTR(seriennr,STRLEN('S/N:')+1);
        board_ini_text := '';
        IF Basisger„t = TRUE THEN
          BEGIN
            Systempositionen.SETRANGE(Art,Systempositionen.Art::System);
            Systempositionen.SETRANGE("Wartungsvertragsnr.","Wartungsvertragsnr.");
            Systempositionen.SETRANGE("Artikelnr.","Artikelnr.");
            Systempositionen.SETRANGE("Seriennr.","Seriennr.");
            IF Systempositionen.FINDFIRST THEN
              board_ini_text := 'Board ini: ' + Systempositionen."Board ini";
          END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServicepositionen_Body12@1000000003(VAR Servicepositionen@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        IF Artikel.GET("Artikelnr.") THEN
          IF Artikel."Item Tracking Code" = 'SERIENNR+P' THEN
            ReportForNav.ShowOutput("Product Key" <> '')
          ELSE
            ReportForNav.ShowOutput(FALSE);
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': CASE SectionId OF
          'Header1': OnPreSectionServiceleist_Leihstellungen_Header1("Serviceleist. & Leihstellungen");
          'Header2': OnPreSectionServiceleist_Leihstellungen_Header2("Serviceleist. & Leihstellungen");
          'Header3': OnPreSectionServiceleist_Leihstellungen_Header3("Serviceleist. & Leihstellungen");
          'GroupHeader5': OnPreSectionServiceleist_Leihstellungen_GroupHeader5("Serviceleist. & Leihstellungen");
          'GroupFooter6': OnPreSectionServiceleist_Leihstellungen_GroupFooter6("Serviceleist. & Leihstellungen");
        END;
        'SalesShipmentLine': CASE SectionId OF
          'Body8': OnPreSectionSalesShipmentLine_Body8("Sales Shipment Line");
          'Footer9': OnPreSectionSalesShipmentLine_Footer9("Sales Shipment Line");
        END;
        'Servicepositionen': CASE SectionId OF
          'Body10': OnPreSectionServicepositionen_Body10(Servicepositionen);
          'Body12': OnPreSectionServicepositionen_Body12(Servicepositionen);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5014(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5015();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': WITH "Serviceleist. & Leihstellungen" DO CASE Operation OF
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

