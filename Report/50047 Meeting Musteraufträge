OBJECT Report 50047 Meeting - Musterauftr„ge
{
  OBJECT-PROPERTIES
  {
    Date=30.05.17;
    Time=14:27:56;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  filter:= 'Betreuer: ' + var_betreuer + ', Verk„ufercode: ' + var_verk„ufer +
                  ', Teams: ' + var_team + ',Gebietscode: ' + var_gebiet + ' ,Belegdatum: ' + FORMAT(var_datum_von) + '..' + FORMAT(var_datum_bis);

                  //*******************************************************************************************************
                  //                    Sicherheitsabfrage ob Temp Tabelle auch Berichtstabelle ist
                  //*******************************************************************************************************
                  IF Berichtstabelle.TABLECAPTION <> 'Berichtstabelle' THEN
                    ERROR('Eine Sicherheitssperre verhindert die Ausfhrung dieses Berichtes.'+
                          'Stellen Sie sicher, dass die TABLECAPTION der Berichtstabelle auch auf Berichtstabelle lautet.');
                  Berichtstabelle.RESET;
                  IF Berichtstabelle.ISEMPTY = FALSE THEN BEGIN
                    REPEAT
                      Berichtstabelle.RESET;
                      IF Berichtstabelle.ISEMPTY = FALSE THEN
                        SLEEP(500);
                    UNTIL Berichtstabelle.ISEMPTY = TRUE;
                  END;

                  //*******************************************************************************************************
                  //                                   Einstellungen werden geprft
                  //*******************************************************************************************************
                  IF checkbtnmuster = TRUE THEN
                    Suche_Muster;
                  IF checkbtnleih = TRUE THEN
                    Suche_Leihstellungen;

                  //*******************************************************************************************************
                  //                                   Kontaktmemos werden durchsucht
                  //*******************************************************************************************************
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   IF Berichtstabelle.TABLECAPTION = 'Berichtstabelle' THEN
                     Berichtstabelle.DELETEALL;
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;Lieferkopf          ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Feld 10,Datum,Index)
                                 WHERE(Tabelle=FILTER(LIEFERKOPF|LEIHSTELLUNG)) }

    { 2   ;1   ;Column  ;TODAY_0_4           ;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 3   ;1   ;Column  ;USERID              ;
               SourceExpr=USERID }

    { 4   ;1   ;Column  ;filter              ;
               SourceExpr=filter }

    { 5   ;1   ;Column  ;ReportForNavPageNo  ;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 6   ;1   ;Column  ;Feld16_Lieferkopf   ;
               SourceExpr="Feld 16" }

    { 7   ;1   ;Column  ;Feld15_Lieferkopf   ;
               SourceExpr="Feld 15" }

    { 8   ;1   ;Column  ;Feld14_Lieferkopf   ;
               SourceExpr="Feld 14" }

    { 9   ;1   ;Column  ;Feld2_Lieferkopf    ;
               SourceExpr="Feld 2" }

    { 10  ;1   ;Column  ;Feld13_Lieferkopf   ;
               SourceExpr="Feld 13" }

    { 11  ;1   ;Column  ;Feld10_Lieferkopf   ;
               SourceExpr="Feld 10" }

    { 12  ;1   ;Column  ;Feld19_Lieferkopf   ;
               SourceExpr="Feld 19" }

    { 13  ;1   ;Column  ;Feld18_Lieferkopf   ;
               SourceExpr="Feld 18" }

    { 14  ;1   ;Column  ;Feld7_Lieferkopf    ;
               SourceExpr="Feld 7" }

    { 15  ;1   ;Column  ;Feld6_Lieferkopf    ;
               SourceExpr="Feld 6" }

    { 16  ;1   ;Column  ;Feld4_Lieferkopf    ;
               DecimalPlaces=0:0;
               SourceExpr="Feld 4" }

    { 17  ;1   ;Column  ;Feld3_Lieferkopf    ;
               SourceExpr="Feld 3" }

    { 18  ;1   ;Column  ;Datum_Lieferkopf    ;
               SourceExpr=Datum }

    { 19  ;1   ;Column  ;Belegnr_Lieferkopf  ;
               SourceExpr="Belegnr." }

    { 20  ;1   ;Column  ;Feld9_Lieferkopf    ;
               SourceExpr="Feld 9" }

    { 21  ;1   ;DataItem;Projekt             ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(PROJEKT));
               DataItemLink=Index=FIELD(Index) }

    { 22  ;2   ;Column  ;Feld10_Projekt      ;
               SourceExpr="Feld 10" }

    { 23  ;2   ;Column  ;Feld4_Projekt       ;
               SourceExpr="Feld 4" }

    { 24  ;2   ;Column  ;Feld9_Projekt       ;
               SourceExpr="Feld 9" }

    { 25  ;2   ;Column  ;Feld1_Projekt       ;
               SourceExpr="Feld 1" }

    { 26  ;2   ;Column  ;Feld5_Projekt       ;
               SourceExpr="Feld 5" }

    { 27  ;2   ;Column  ;Feld8_Projekt       ;
               SourceExpr="Feld 8" }

    { 28  ;2   ;Column  ;Belegnr_Projekt     ;
               SourceExpr="Belegnr." }

    { 29  ;1   ;DataItem;Musterberwachung   ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(MšWACH));
               DataItemLink=Index=FIELD(Index) }

    { 30  ;2   ;Column  ;Feld1_Musteruberwachung;
               SourceExpr="Feld 1" }

    { 31  ;2   ;Column  ;Feld13_Musteruberwachung;
               SourceExpr="Feld 13" }

    { 32  ;2   ;Column  ;Feld4_Musteruberwachung;
               SourceExpr="Feld 4" }

    { 33  ;2   ;Column  ;Feld12_Musteruberwachung;
               SourceExpr="Feld 12" }

    { 34  ;2   ;Column  ;Feld10_Musteruberwachung;
               SourceExpr="Feld 10" }

    { 35  ;1   ;DataItem;Bemerkung           ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(BEMERKUNG));
               OnAfterGetRecord=BEGIN
                                  IF "Zeilennr." = 10000 THEN
                                    bemerkungstext := 'Bemerkung vom:'
                                  ELSE
                                    bemerkungstext := '';
                                END;

               DataItemLink=Index=FIELD(Index) }

    { 36  ;2   ;Column  ;bemerkungstext      ;
               SourceExpr=bemerkungstext }

    { 37  ;2   ;Column  ;Datum_Bemerkung     ;
               SourceExpr=Datum }

    { 38  ;2   ;Column  ;Feld1_Bemerkung     ;
               SourceExpr="Feld 1" }

    { 39  ;1   ;DataItem;Lieferzeile         ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(LIEFERZEILE));
               DataItemLink=Index=FIELD(Index) }

    { 40  ;2   ;Column  ;Feld6_Lieferzeile   ;
               SourceExpr="Feld 6" }

    { 41  ;2   ;Column  ;Feld3_Lieferzeile   ;
               SourceExpr="Feld 3" }

    { 42  ;2   ;Column  ;Feld4_Lieferzeile   ;
               SourceExpr="Feld 4" }

    { 43  ;2   ;Column  ;Feld5_Lieferzeile   ;
               SourceExpr="Feld 5" }

    { 44  ;2   ;Column  ;Feld13_Lieferzeile  ;
               SourceExpr="Feld 13" }

    { 45  ;2   ;Column  ;Feld10_Lieferzeile  ;
               SourceExpr="Feld 10" }

    { 46  ;    ;DataItem;Leihstellung        ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Feld 10,Datum,Index)
                                 WHERE(Tabelle=FILTER(LEIHSTELLUNG)) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140011;2;Field     ;
                  CaptionML=DEU=Musterauftr„ge;
                  SourceExpr=checkbtnmuster }

      { 1140013;2;Field     ;
                  CaptionML=DEU=Leihstellungen;
                  SourceExpr=checkbtnleih }

      { 1140016;2;Field     ;
                  CaptionML=DEU=Belegdatum von;
                  SourceExpr=var_datum_von }

      { 1140018;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=var_datum_bis }

      { 1140003;2;Field     ;
                  CaptionML=DEU=Betreuer Innendienst;
                  SourceExpr=var_betreuer;
                  TableRelation=Salesperson/Purchaser }

      { 1140005;2;Field     ;
                  CaptionML=DEU=Verk„ufercode;
                  SourceExpr=var_verk„ufer;
                  TableRelation=Salesperson/Purchaser }

      { 1140009;2;Field     ;
                  CaptionML=DEU=Teams;
                  SourceExpr=var_team;
                  TableRelation=Team }

      { 1140002;2;Field     ;
                  CaptionML=DEU=Gebietscode;
                  SourceExpr=var_gebiet;
                  TableRelation=Territory }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      var_betreuer@1140001 : Code[20];
      var_verk„ufer@1140002 : Code[20];
      var_gebiet@1140006 : Code[20];
      var_team@1140019 : Code[20];
      var_datum_von@1140015 : Date;
      var_datum_bis@1140016 : Date;
      checkbtnmuster@1140020 : Boolean;
      checkbtnleih@1140000 : Boolean;
      anzeige@1140018 : Boolean;
      z„hler@1140005 : Decimal;
      Berichtstabelle@1140003 : Record 50037;
      Proj@1140007 : Record 5071;
      "Ek-Preise"@1140004 : Record 7012;
      bemerkungstext@1140010 : Text[30];
      kundenklasse@1140011 : Text[30];
      filter@1140012 : Text[250];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionLieferkopf_Body2@5013(VAR Lieferkopf@1000000000 : Record 50037);
    BEGIN
      WITH Lieferkopf DO BEGIN
        ReportForNav.ShowOutput(Tabelle = 'LEIHSTELLUNG');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionLieferkopf_Body3@5014(VAR Lieferkopf@1000000000 : Record 50037);
    BEGIN
      WITH Lieferkopf DO BEGIN
        ReportForNav.ShowOutput(Tabelle = 'LEIHSTELLUNG');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionLieferkopf_Body4@5015(VAR Lieferkopf@1000000000 : Record 50037);
    BEGIN
      WITH Lieferkopf DO BEGIN
        ReportForNav.ShowOutput(Tabelle = 'LIEFERKOPF');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionLieferkopf_Body5@5016(VAR Lieferkopf@1000000000 : Record 50037);
    BEGIN
      WITH Lieferkopf DO BEGIN
        ReportForNav.ShowOutput(Tabelle = 'LIEFERKOPF');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionProjekt_Body6@5017(VAR Projekt@1000000000 : Record 50037);
    BEGIN
      WITH Projekt DO BEGIN
        ReportForNav.ShowOutput(Lieferkopf."Feld 2" <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMusteruberwachung_Body7@5018(VAR Musterberwachung@1000000000 : Record 50037);
    BEGIN
      WITH Musterberwachung DO BEGIN
        ReportForNav.ShowOutput(Lieferkopf."Feld 2" = '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionLieferzeile_Body10@5019(VAR Lieferzeile@1000000000 : Record 50037);
    BEGIN
      WITH Lieferzeile DO BEGIN
        ReportForNav.ShowOutput("Feld 17" = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionLieferzeile_Body11@5020(VAR Lieferzeile@1000000000 : Record 50037);
    BEGIN
      WITH Lieferzeile DO BEGIN
        ReportForNav.ShowOutput("Feld 17" = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionLieferzeile_Body12@5021(VAR Lieferzeile@1000000000 : Record 50037);
    BEGIN
      WITH Lieferzeile DO BEGIN
        ReportForNav.ShowOutput("Feld 10" <> '' );
      END;
    END;

    PROCEDURE Suche_Muster@1140013();
    VAR
      Liefkopf@1140000 : Record 110;
      Liefzeile@1140007 : Record 111;
      Aufgaben@1140003 : Record 5080;
      Bemerkungszeilen@1140004 : Record 5061;
      Muster@1140006 : Record 50029;
      Hersteller@1140005 : Record 5720;
      Artikel@1140008 : Record 27;
      kont_verb@1140001 : Record 5054;
      branche@1140002 : Record 5058;
    BEGIN
      //*******************************************************************************************************
      //                               Verkaufslieferk”pfe werden untersucht
      //*******************************************************************************************************
      Liefkopf.RESET;
      Liefkopf.SETFILTER("Location Code",'%1','MUST');
      Liefkopf.SETFILTER("Betreuer Innendienst",var_betreuer);
      Liefkopf.SETFILTER("Salesperson Code",var_verk„ufer);
      Liefkopf.SETFILTER(Teams,var_team);
      Liefkopf.SETFILTER("Territory Code",var_gebiet);
      IF (var_datum_von<>0D) AND (var_datum_bis=0D) THEN
        Liefkopf.SETFILTER("Posting Date",'>=%1',var_datum_von);
      IF (var_datum_von<>0D) AND (var_datum_bis<>0D) THEN
        Liefkopf.SETFILTER("Posting Date",'>=%1&<=%2',var_datum_von,var_datum_bis);
      IF (var_datum_von=0D) AND (var_datum_bis<>0D) THEN
        Liefkopf.SETFILTER("Posting Date",'<=%1',var_datum_bis);
      IF Liefkopf.FINDFIRST THEN BEGIN
        REPEAT
          Berichtstabelle.INIT;
          Berichtstabelle.Tabelle := 'LIEFERKOPF';
          Berichtstabelle.Index := Liefkopf."No.";
          Berichtstabelle.Datum := Liefkopf."Posting Date";
          Berichtstabelle."Belegnr." := Liefkopf."Order No.";
          Berichtstabelle."Feld 2" := Liefkopf."Campaign No.";
          Berichtstabelle."Feld 3" := Liefkopf."Sell-to Post Code";
          Berichtstabelle."Feld 6" := Liefkopf."Betreuer Innendienst";
          Berichtstabelle."Feld 7" := Liefkopf."Salesperson Code";
          Berichtstabelle."Feld 9" := Liefkopf."Territory Code";
          Berichtstabelle."Feld 10" := Liefkopf."Sell-to Customer Name";
          Berichtstabelle."Feld 13" := Liefkopf."Sell-to City";
          //Branche wird geprft
          kont_verb.RESET;
          kont_verb.SETRANGE("No.",Liefkopf."Sell-to Customer No.");
          kont_verb.SETRANGE("Business Relation Code",'DEB');
          IF kont_verb.FINDFIRST THEN BEGIN
            branche.RESET;
            branche.SETRANGE("Contact No.",kont_verb."Contact No.");
            IF branche.FINDFIRST THEN BEGIN
              branche.SETFILTER(branche."Industry Group Code",'%1|%2','BESTšCKER','HŽNDLER');
              IF branche.FINDFIRST THEN BEGIN
                Berichtstabelle."Feld 14" := branche."Industry Group Code";
              END;
            END ELSE
              Berichtstabelle."Feld 16" := 'Branche fehlt!'
          END;
          Berichtstabelle."Feld 15" := Liefkopf."Your Reference";
          Berichtstabelle."Feld 19" := Liefkopf."Sell-to Customer No.";
          Berichtstabelle.Uhrzeit := CURRENTDATETIME;
          Berichtstabelle.User := USERID;
          Berichtstabelle.INSERT;
      //*******************************************************************************************************
      //                                 Projekt Verbindung wird untersucht
      //*******************************************************************************************************
          IF Proj.GET(Liefkopf."Campaign No.") THEN BEGIN
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'PROJEKT';
            Berichtstabelle.Index := Liefkopf."No.";
            Berichtstabelle."Belegnr." := Proj."No.";
            Berichtstabelle."Feld 1" := Proj.Description;
            Berichtstabelle."Feld 4" := Proj.Projektvolumen;
            Berichtstabelle."Feld 5" := Proj.Projektwert;
            Berichtstabelle."Feld 8" := Proj.Projektstatus;
            Berichtstabelle."Feld 9" := Proj.Projektklasse;
            Berichtstabelle."Feld 10" := Proj.Applikation;
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
          END;
      //*******************************************************************************************************
      //                                     Aufgaben werden untersucht
      //*******************************************************************************************************
          Aufgaben.RESET;
          Aufgaben.SETRANGE("System To-do Type",Aufgaben."System To-do Type" :: Organizer);
          Aufgaben.SETRANGE("Arch. Belegnr.",Liefkopf."Order No.");
          IF Aufgaben.FINDFIRST THEN BEGIN
            Bemerkungszeilen.RESET;
            Bemerkungszeilen.SETRANGE("Table Name",Bemerkungszeilen."Table Name" :: "To-do");
            Bemerkungszeilen.SETRANGE("No.",Aufgaben."No.");
            IF Bemerkungszeilen.FINDFIRST THEN BEGIN
              REPEAT
                Berichtstabelle.INIT;
                Berichtstabelle.Tabelle := 'BEMERKUNG';
                Berichtstabelle.Index := Liefkopf."No.";
                Berichtstabelle.Datum := Bemerkungszeilen.Date;
                Berichtstabelle."Belegnr." := Aufgaben."No.";
                Berichtstabelle."Zeilennr." := Bemerkungszeilen."Line No.";
                Berichtstabelle."Feld 1" := Bemerkungszeilen.Comment;
                Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                Berichtstabelle.User := USERID;
                Berichtstabelle.INSERT;
              UNTIL Bemerkungszeilen.NEXT = 0;
            END;
          END;
      //*******************************************************************************************************
      //                               Musterberwachung wird untersucht
      //*******************************************************************************************************
          Muster.RESET;
          Muster.SETRANGE(Nr,Liefkopf."Order No.");
          IF Muster.FINDFIRST THEN        BEGIN
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'MšWACH';
            Berichtstabelle.Index := Liefkopf."No.";
            Berichtstabelle."Belegnr." := Muster.Nr;
            Berichtstabelle."Feld 1" := Muster.Projektname;
            Berichtstabelle."Feld 4" := Muster."Anzahl pro System";
            Berichtstabelle."Feld 10" := Muster.Applikation;
            Berichtstabelle."Feld 12" := Muster.Potenzial;
            Berichtstabelle."Feld 13" := FORMAT(Muster.Status);
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
          END;
          Muster.RESET;
          Muster.SETRANGE("Arch. Belegnr.",Liefkopf."Order No.");
          IF Muster.FINDFIRST THEN BEGIN
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'MšWACH';
            Berichtstabelle.Index := Liefkopf."No.";
            Berichtstabelle."Belegnr." := Muster.Nr;
            Berichtstabelle."Feld 1" := Muster.Projektname;
            Berichtstabelle."Feld 4" := Muster."Anzahl pro System";
            Berichtstabelle."Feld 10" := Muster.Applikation;
            Berichtstabelle."Feld 12" := Muster.Potenzial;
            Berichtstabelle."Feld 13" := FORMAT(Muster.Status);
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
          END;
      //*******************************************************************************************************
      //                               Verkaufslieferzeile wird untersucht
      //*******************************************************************************************************
          Liefzeile.RESET;
          Liefzeile.SETFILTER(Type,'%1',Liefzeile.Type :: Item);
          Liefzeile.SETFILTER("Document No.",'%1',Liefkopf."No.");
          Liefzeile.SETFILTER(Quantity,'>%1',0);
          IF Liefzeile.FINDFIRST THEN
            REPEAT
              Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'LIEFERZEILE';
              Berichtstabelle.Index := Liefkopf."No.";
              Berichtstabelle."Belegnr." := Liefkopf."No.";
              Berichtstabelle."Zeilennr." := Liefzeile."Line No.";
              Berichtstabelle."Feld 3" := Liefzeile."Artikelnr. 2";
              Berichtstabelle."Feld 4" := Liefzeile.Quantity;
              Berichtstabelle."Feld 5" := Liefzeile."DC-Preis (EKW)";
              //Herstellerkurzname wird hinzugefgt
              IF Hersteller.GET(Liefzeile."Manufacturer Code") THEN
                Berichtstabelle."Feld 6" := Hersteller.Herstellerkurzname;
              Berichtstabelle."Feld 10" := Liefzeile.Endkunde;
              IF Artikel.GET(Liefzeile."No.") THEN BEGIN
                "Ek-Preise".RESET;
                "Ek-Preise".SETRANGE("Item No.",Artikel."No.");
                IF "Ek-Preise".FINDLAST THEN
                  Berichtstabelle."Feld 13" := FORMAT("Ek-Preise"."Direct Unit Cost")
                ELSE
                  Berichtstabelle."Feld 13" := FORMAT(0);
                Berichtstabelle."Feld 17" := Artikel.Registrierbar;
              END;
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
              Berichtstabelle.User := USERID;
              Berichtstabelle.INSERT;
            UNTIL Liefzeile.NEXT = 0;
        UNTIL Liefkopf.NEXT = 0;
      END;
    END;

    PROCEDURE Suche_Leihstellungen@1140014();
    VAR
      Leihstellung@1140000 : Record 50024;
      Debitor@1140001 : Record 18;
      wandeln@1140002 : Boolean;
    BEGIN
      IF (var_datum_von<>0D) AND (var_datum_bis=0D) THEN
        Leihstellung.SETFILTER("Ablaufdatum Serviceleistung",'>=%1',var_datum_von);
      IF (var_datum_von<>0D) AND (var_datum_bis<>0D) THEN
        Leihstellung.SETFILTER("Ablaufdatum Serviceleistung",'>=%1&<=%2',var_datum_von,var_datum_bis);
      IF (var_datum_von=0D) AND (var_datum_bis<>0D) THEN
        Leihstellung.SETFILTER("Ablaufdatum Serviceleistung",'<=%1',var_datum_bis);
      Leihstellung.SETFILTER(Art,'%1',Leihstellung.Art :: Leihstellung);
      IF Leihstellung.FINDFIRST THEN
        REPEAT
          wandeln := FALSE;
          Debitor.RESET;
          Debitor.SETFILTER("No.",Leihstellung."Debitornr.");
          Debitor.SETFILTER("Betreuer Innendienst",var_betreuer);
          Debitor.SETFILTER("Salesperson Code",var_verk„ufer);
          Debitor.SETFILTER(Teams,var_team);
          Debitor.SETFILTER("Territory Code",var_gebiet);
          IF Debitor.FINDFIRST THEN
            wandeln := TRUE
          ELSE BEGIN
            Debitor.RESET;
            IF Debitor.GET(Leihstellung."Debitornr.") THEN BEGIN
              IF (Debitor."Betreuer Innendienst" = 'MULTI') AND (Debitor."Salesperson Code" = 'MULTI') THEN BEGIN
                IF Projekt.GET(Leihstellung."Kampagnennr.") THEN BEGIN
                  Proj.RESET;
                  Proj.SETFILTER("Betreuer Innendienst",var_betreuer);
                  Proj.SETFILTER("Salesperson Code",var_verk„ufer);
                  Proj.SETFILTER(Teams,var_team);
                  Proj.SETFILTER("Territory Code",var_gebiet);
                  Proj.SETFILTER("No.",Leihstellung."Kampagnennr.");
                  IF Proj.FINDFIRST THEN
                    wandeln := TRUE;
                END;
              END;
            END;
          END;
          IF wandeln = TRUE THEN BEGIN
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'LEIHSTELLUNG';
            Berichtstabelle.Index := Leihstellung."Lfd. Nr.";
            Berichtstabelle."Belegnr." := Leihstellung."Lfd. Nr.";
            Berichtstabelle.Datum := Leihstellung.Belegdatum;
            Berichtstabelle."Feld 3" := Leihstellung."Artikelnr. 2";
            Berichtstabelle."Feld 4" := Leihstellung.Menge;
            Berichtstabelle."Feld 6" := Leihstellung."Seriennr.";
            Berichtstabelle."Feld 7" := Leihstellung."Kampagnennr.";
            Berichtstabelle."Feld 10" := Debitor.Name;
            Berichtstabelle."Feld 13" := Debitor.City;
            Berichtstabelle."Feld 14" := Debitor."Betreuer Innendienst";
            Berichtstabelle."Feld 15" := Debitor."Salesperson Code";
            Berichtstabelle."Feld 16" := Debitor."Territory Code";
            Berichtstabelle."Feld 2" := Debitor."Post Code";
            Berichtstabelle."Feld 19" := Debitor."No.";
            Berichtstabelle."Feld 18" := Leihstellung."Ablaufdatum Serviceleistung";
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.User := USERID;
            Berichtstabelle.INSERT;
          END;
        UNTIL Leihstellung.NEXT = 0;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Lieferkopf': CASE SectionId OF
          'Body2': OnPreSectionLieferkopf_Body2(Lieferkopf);
          'Body3': OnPreSectionLieferkopf_Body3(Lieferkopf);
          'Body4': OnPreSectionLieferkopf_Body4(Lieferkopf);
          'Body5': OnPreSectionLieferkopf_Body5(Lieferkopf);
        END;
        'Projekt': CASE SectionId OF
          'Body6': OnPreSectionProjekt_Body6(Projekt);
        END;
        'Musteruberwachung': CASE SectionId OF
          'Body7': OnPreSectionMusteruberwachung_Body7(Musterberwachung);
        END;
        'Lieferzeile': CASE SectionId OF
          'Body10': OnPreSectionLieferzeile_Body10(Lieferzeile);
          'Body11': OnPreSectionLieferzeile_Body11(Lieferzeile);
          'Body12': OnPreSectionLieferzeile_Body12(Lieferzeile);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>8e878863-e753-4b26-876c-447b965792cb</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>45d4e7ef-bd33-4fc8-b780-3d902db9e263</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="filter">
          <DataField>filter</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="Feld16_Lieferkopf">
          <DataField>Feld16_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld15_Lieferkopf">
          <DataField>Feld15_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld14_Lieferkopf">
          <DataField>Feld14_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld2_Lieferkopf">
          <DataField>Feld2_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld13_Lieferkopf">
          <DataField>Feld13_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld10_Lieferkopf">
          <DataField>Feld10_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld19_Lieferkopf">
          <DataField>Feld19_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld18_Lieferkopf">
          <DataField>Feld18_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld7_Lieferkopf">
          <DataField>Feld7_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld6_Lieferkopf">
          <DataField>Feld6_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld4_Lieferkopf">
          <DataField>Feld4_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld4_LieferkopfFormat">
          <DataField>Feld4_LieferkopfFormat</DataField>
        </Field>
        <Field Name="Feld3_Lieferkopf">
          <DataField>Feld3_Lieferkopf</DataField>
        </Field>
        <Field Name="Datum_Lieferkopf">
          <DataField>Datum_Lieferkopf</DataField>
        </Field>
        <Field Name="Belegnr_Lieferkopf">
          <DataField>Belegnr_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld9_Lieferkopf">
          <DataField>Feld9_Lieferkopf</DataField>
        </Field>
        <Field Name="Feld10_Projekt">
          <DataField>Feld10_Projekt</DataField>
        </Field>
        <Field Name="Feld4_Projekt">
          <DataField>Feld4_Projekt</DataField>
        </Field>
        <Field Name="Feld4_ProjektFormat">
          <DataField>Feld4_ProjektFormat</DataField>
        </Field>
        <Field Name="Feld9_Projekt">
          <DataField>Feld9_Projekt</DataField>
        </Field>
        <Field Name="Feld1_Projekt">
          <DataField>Feld1_Projekt</DataField>
        </Field>
        <Field Name="Feld5_Projekt">
          <DataField>Feld5_Projekt</DataField>
        </Field>
        <Field Name="Feld5_ProjektFormat">
          <DataField>Feld5_ProjektFormat</DataField>
        </Field>
        <Field Name="Feld8_Projekt">
          <DataField>Feld8_Projekt</DataField>
        </Field>
        <Field Name="Belegnr_Projekt">
          <DataField>Belegnr_Projekt</DataField>
        </Field>
        <Field Name="Feld1_Musteruberwachung">
          <DataField>Feld1_Musteruberwachung</DataField>
        </Field>
        <Field Name="Feld13_Musteruberwachung">
          <DataField>Feld13_Musteruberwachung</DataField>
        </Field>
        <Field Name="Feld4_Musteruberwachung">
          <DataField>Feld4_Musteruberwachung</DataField>
        </Field>
        <Field Name="Feld4_MusteruberwachungFormat">
          <DataField>Feld4_MusteruberwachungFormat</DataField>
        </Field>
        <Field Name="Feld12_Musteruberwachung">
          <DataField>Feld12_Musteruberwachung</DataField>
        </Field>
        <Field Name="Feld10_Musteruberwachung">
          <DataField>Feld10_Musteruberwachung</DataField>
        </Field>
        <Field Name="bemerkungstext">
          <DataField>bemerkungstext</DataField>
        </Field>
        <Field Name="Datum_Bemerkung">
          <DataField>Datum_Bemerkung</DataField>
        </Field>
        <Field Name="Feld1_Bemerkung">
          <DataField>Feld1_Bemerkung</DataField>
        </Field>
        <Field Name="Feld6_Lieferzeile">
          <DataField>Feld6_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld3_Lieferzeile">
          <DataField>Feld3_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld4_Lieferzeile">
          <DataField>Feld4_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld4_LieferzeileFormat">
          <DataField>Feld4_LieferzeileFormat</DataField>
        </Field>
        <Field Name="Feld5_Lieferzeile">
          <DataField>Feld5_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld5_LieferzeileFormat">
          <DataField>Feld5_LieferzeileFormat</DataField>
        </Field>
        <Field Name="Feld13_Lieferzeile">
          <DataField>Feld13_Lieferzeile</DataField>
        </Field>
        <Field Name="Feld10_Lieferzeile">
          <DataField>Feld10_Lieferzeile</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

