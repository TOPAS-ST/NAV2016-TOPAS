OBJECT Report 50079 TOPAS-Mahnung
{
  OBJECT-PROPERTIES
  {
    Date=05.07.24;
    Time=13:21:15;
    Modified=Yes;
    Version List=Beleg,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS(Picture,"ISO Logo");
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table297;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Mahnung;
               OnPreDataItem=BEGIN
                               FormatAdrCodeunit.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  FormatAddr(DebAdr);
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  ReportForNav.PageNo := 1;
                                  IF NOT CurrReport.PREVIEW THEN
                                    IncrNoPrinted;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := 'EUR';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  SoR_Text := '';
                                  v_adr_ok := '';
                                END;

               ReqFilterFields=No. }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                   // TOPAS  17.03.06  Angang
                                  //IF Debitor."Zlg.-Bedingungscode"='SOR' THEN
                                  // SoR_Text :='Sale or Return - nicht versenden';
                                   // TOPAS  17.03.06  ENDE
                                END;

               DataItemLink=No.=FIELD(Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000000;2;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 4   ;2   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000003;2;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;2;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;2;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;2;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;2;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;2;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;2;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;2;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;2;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;2;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;2;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;2;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 1000000004;2;Column;CompanyEORINr      ;
               SourceExpr=CompanyInfo[16] }

    { 5   ;2   ;Column  ;SoR_Text            ;
               SourceExpr=SoR_Text }

    { 6   ;2   ;Column  ;YourReference_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."Your Reference" }

    { 7   ;2   ;Column  ;OurAccountNo_Customer;
               SourceExpr=Customer."Our Account No." }

    { 8   ;2   ;Column  ;VATRegistrationNo_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."VAT Registration No." }

    { 9   ;2   ;Column  ;MWStNrText          ;
               SourceExpr=MWStNrText }

    { 10  ;2   ;Column  ;STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_;
               SourceExpr=STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo)) }

    { 11  ;2   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 12  ;2   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 13  ;2   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 14  ;2   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 15  ;2   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 16  ;2   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 17  ;2   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 18  ;2   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 19  ;2   ;Column  ;CustomerNo_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."Customer No." }

    { 20  ;2   ;Column  ;DocumentDate_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."Document Date" }

    { 21  ;2   ;Column  ;No_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."No." }

    { 22  ;2   ;Column  ;ReminderLevel_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."Reminder Level" }

    { 23  ;2   ;DataItem;Vortext             ;
               DataItemTable=Table298;
               OnPreDataItem=BEGIN
                               //lshanf c01
                               gzeile := 0;
                               //lshend c01
                             END;

               OnAfterGetRecord=BEGIN
                                  //lshanf c01
                                  IF Type <> 0 THEN
                                    CurrReport.BREAK
                                  ELSE
                                    gzeile := "Line No.";
                                  //lshend c01
                                END;

               DataItemLinkReference=Issued Reminder Header;
               DataItemLink=Reminder No.=FIELD(No.) }

    { 24  ;3   ;Column  ;Description_Vortext ;
               SourceExpr=Description }

    { 25  ;2   ;DataItem;                    ;
               DataItemTable=Table298;
               DataItemTableView=SORTING(Reminder No.,Line No.);
               OnPreDataItem=BEGIN
                               //lshanf c01
                               SETFILTER("Line No.",'>%1',gzeile);
                               //lshend c01
                               IF FIND('-') THEN BEGIN
                                 StartZeileNr := 0;
                                 REPEAT
                                   Fortsetzen := Type = Type::" ";
                                   IF Fortsetzen AND (Description = '') THEN
                                     StartZeileNr := "Line No.";
                                 UNTIL (NEXT = 0) OR NOT Fortsetzen;
                               END;
                               IF FIND('+') THEN BEGIN
                                 EndeZeileNr := "Line No." + 1;
                                 REPEAT
                                   Fortsetzen := Type = Type::" ";
                                   IF Fortsetzen AND (Description = '') THEN
                                     EndeZeileNr := "Line No.";
                                 UNTIL (NEXT(-1) = 0) OR NOT Fortsetzen;
                               END;
                               MWSTBetragZeile.DELETEALL;
                               //lshanf c01
                               {
                               SETFILTER("Zeilennr.",'<%1',EndeZeileNr);
                               }
                               SETFILTER("Line No.",'>%1&<%2',gzeile,EndeZeileNr);
                               //lshend
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."VAT Amount" := "VAT Amount";
                                  MWSTBetragZeile."Amount Including VAT" := Amount + "VAT Amount";
                                  MWSTBetragZeile.InsertLine;
                                  CASE Type OF
                                    Type::"G/L Account":
                                      "Remaining Amount" := Amount;
                                    Type::"Customer Ledger Entry":
                                      MahnungZinsBetrag := Amount;
                                  END;
                                  // Neu TOPAS 2.9.2014 UB  Prfen, ob Rechnungsanschrift abweicht von Mahnungsanschrift
                                  verkaufsrechnungskopf.RESET;
                                  verkaufsrechnungskopf.SETFILTER(verkaufsrechnungskopf."No.",'%1',"Issued Reminder Line"."Document No.");
                                  IF verkaufsrechnungskopf.FINDFIRST THEN BEGIN
                                    IF "Issued Reminder Header".Name <> verkaufsrechnungskopf."Bill-to Name" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header"."Name 2" <> verkaufsrechnungskopf."Bill-to Name 2" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header".Address <> verkaufsrechnungskopf."Bill-to Address" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header"."Address 2" <> verkaufsrechnungskopf."Bill-to Address 2" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header"."Post Code" <> verkaufsrechnungskopf."Bill-to Post Code" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header".City <> verkaufsrechnungskopf."Bill-to City" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header".County <> verkaufsrechnungskopf."Bill-to County" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header"."Country/Region Code" <> verkaufsrechnungskopf."Bill-to Country/Region Code" THEN v_adr_ok := '*';
                                  END;
                                END;

               DataItemLinkReference=Issued Reminder Header;
               DataItemLink=Reminder No.=FIELD(No.) }

    { 26  ;3   ;Column  ;IssuedReminderLineFIELDCAPTION_DocumentType;
               SourceExpr="Issued Reminder Line".FIELDCAPTION("Document Type") }

    { 27  ;3   ;Column  ;IssuedReminderLineFIELDCAPTION_RemainingAmount;
               SourceExpr="Issued Reminder Line".FIELDCAPTION("Remaining Amount") }

    { 28  ;3   ;Column  ;IssuedReminderLineFIELDCAPTION_DocumentNo;
               SourceExpr="Issued Reminder Line".FIELDCAPTION("Document No.") }

    { 29  ;3   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 30  ;3   ;Column  ;RemainingAmount_IssuedReminderLine;
               SourceExpr="Remaining Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 31  ;3   ;Column  ;Description_IssuedReminderLine;
               SourceExpr=Description }

    { 32  ;3   ;Column  ;NoofReminders_IssuedReminderLine;
               SourceExpr="No. of Reminders" }

    { 33  ;3   ;Column  ;DocumentType_IssuedReminderLine;
               SourceExpr="Document Type" }

    { 34  ;3   ;Column  ;OriginalAmount_IssuedReminderLine;
               SourceExpr="Original Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 35  ;3   ;Column  ;DueDate_IssuedReminderLine;
               SourceExpr="Due Date" }

    { 36  ;3   ;Column  ;DocumentNo_IssuedReminderLine;
               SourceExpr="Document No." }

    { 37  ;3   ;Column  ;DocumentDate_IssuedReminderLine;
               SourceExpr="Document Date" }

    { 38  ;3   ;Column  ;v_adr_ok            ;
               SourceExpr=v_adr_ok }

    { 39  ;3   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 40  ;3   ;Column  ;RemainingAmount_MahnungZinsBetrag;
               SourceExpr="Remaining Amount" + MahnungZinsBetrag;
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 41  ;3   ;Column  ;VATAmount_IssuedReminderLine_Lbl;
               SourceExpr="Issued Reminder Line".FIELDCAPTION("VAT Amount") }

    { 42  ;3   ;Column  ;VATAmount_IssuedReminderLine;
               SourceExpr="VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 43  ;3   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 44  ;3   ;Column  ;RemainingAmount_MahnungZinsBetrag_VATAmount;
               SourceExpr="Remaining Amount" + MahnungZinsBetrag + "VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 45  ;2   ;DataItem;RegMahnungZeile2    ;
               DataItemTable=Table298;
               DataItemTableView=SORTING(Reminder No.,Line No.);
               OnPreDataItem=BEGIN
                               SETFILTER("Line No.",'>=%1',EndeZeileNr);
                             END;

               DataItemLinkReference=Issued Reminder Header;
               DataItemLink=Reminder No.=FIELD(No.) }

    { 46  ;3   ;Column  ;Description_RegMahnungZeile2;
               SourceExpr=Description }

    { 47  ;2   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF "Issued Reminder Line"."VAT Amount" = 0 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 48  ;3   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 49  ;3   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 50  ;3   ;Column  ;AmountIncludingVAT_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 51  ;3   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      Firmendaten@1140001 : Record 79;
      MWSTBetragZeile@1140002 : TEMPORARY Record 290;
      mahnzeile@1000000003 : Record 298;
      verkaufsrechnungskopf@1000000002 : Record 112;
      FormatAdrCodeunit@1140003 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [20] OF Text;
      DebAdr@1140004 : ARRAY [8] OF Text[50];
      FirmaAdr@1140005 : ARRAY [8] OF Text[50];
      MWStNrText@1140006 : Text[30];
      ReferenzText@1140007 : Text[30];
      TotalText@1140008 : Text[50];
      TotalInklMWStText@1140009 : Text[50];
      MahnungZinsBetrag@1140010 : Decimal;
      StartZeileNr@1140011 : Integer;
      EndeZeileNr@1140012 : Integer;
      Fortsetzen@1140013 : Boolean;
      "-------lsh---------"@1140014 : Integer;
      gzeile@1140015 : Integer;
      waehrung2@1140016 : Code[10];
      waehrung@1140017 : Code[10];
      SoR_Text@1140018 : Text[40];
      v_adr_ok@1140021 : Text[5];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionInteger_Header1@5025(VAR Integer@1000000000 : Record 2000000026);
    BEGIN
      WITH Integer DO BEGIN
        SoR_Text := '';
        IF mahnzeile."Document Type" = mahnzeile."Document Type"::Invoice THEN BEGIN
          mahnzeile.SETFILTER(mahnzeile."Reminder No.",'%1',"Issued Reminder Header"."No.");
          mahnzeile.FIND('-');
          verkaufsrechnungskopf.SETFILTER(verkaufsrechnungskopf."No.",'%1',mahnzeile."Document No.");
          verkaufsrechnungskopf.FIND('-');
          IF verkaufsrechnungskopf."Payment Terms Code" = 'SOR' THEN BEGIN
            SoR_Text := 'Sale or Return - nicht versenden!' ;
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Body7@5026(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := "Line No." <= StartZeileNr;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Body8@5027(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := ("Line No." > StartZeileNr) AND (Type = Type::"Customer Ledger Entry");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Body9@5028(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := ("Line No." > StartZeileNr) AND (Type <> Type::"Customer Ledger Entry");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Footer12@5029(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := MahnungZinsBetrag <> 0;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Footer14@5030(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := "VAT Amount" <> 0
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Integer': CASE SectionId OF
          'Header1': OnPreSectionInteger_Header1(Integer);
        END;
        'IssuedReminderLine': CASE SectionId OF
          'Body7': OnPreSectionIssuedReminderLine_Body7("Issued Reminder Line");
          'Body8': OnPreSectionIssuedReminderLine_Body8("Issued Reminder Line");
          'Body9': OnPreSectionIssuedReminderLine_Body9("Issued Reminder Line");
          'Footer12': OnPreSectionIssuedReminderLine_Footer12("Issued Reminder Line");
          'Footer14': OnPreSectionIssuedReminderLine_Footer14("Issued Reminder Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'IssuedReminderLine': WITH "Issued Reminder Line" DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,"Remaining Amount");
                ReportForNav.AddTotal(DataItemId,1,"VAT Amount");
                ReportForNav.AddTotal(DataItemId,2,MahnungZinsBetrag);
              END;
           'Restore': BEGIN
                 "Remaining Amount" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 MahnungZinsBetrag := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
                ReportForNav.AddTotal(DataItemId,2,MWSTBetragZeile."Amount Including VAT");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 MWSTBetragZeile."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      copyright Lederer Systemhaus GmbH
      Žnderungen Standard
      291299 pl
                   Layout angepasst
      c01/di/gl/se Vortext vor šberschrift

      220222 st: šbertrag- und Fortsetzungsbetrag Sektionen ausgeblendet, da mit 6.1.0 mitunter fehlerhaft
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
AQ==</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="CompanyEORINr">
          <DataField>CompanyEORINr</DataField>
        </Field>
        <Field Name="SoR_Text">
          <DataField>SoR_Text</DataField>
        </Field>
        <Field Name="YourReference_IssuedReminderHeader">
          <DataField>YourReference_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="OurAccountNo_Customer">
          <DataField>OurAccountNo_Customer</DataField>
        </Field>
        <Field Name="VATRegistrationNo_IssuedReminderHeader">
          <DataField>VATRegistrationNo_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="MWStNrText">
          <DataField>MWStNrText</DataField>
        </Field>
        <Field Name="STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_">
          <DataField>STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="CustomerNo_IssuedReminderHeader">
          <DataField>CustomerNo_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="DocumentDate_IssuedReminderHeader">
          <DataField>DocumentDate_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="No_IssuedReminderHeader">
          <DataField>No_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="ReminderLevel_IssuedReminderHeader">
          <DataField>ReminderLevel_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="Description_Vortext">
          <DataField>Description_Vortext</DataField>
        </Field>
        <Field Name="IssuedReminderLineFIELDCAPTION_DocumentType">
          <DataField>IssuedReminderLineFIELDCAPTION_DocumentType</DataField>
        </Field>
        <Field Name="IssuedReminderLineFIELDCAPTION_RemainingAmount">
          <DataField>IssuedReminderLineFIELDCAPTION_RemainingAmount</DataField>
        </Field>
        <Field Name="IssuedReminderLineFIELDCAPTION_DocumentNo">
          <DataField>IssuedReminderLineFIELDCAPTION_DocumentNo</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="RemainingAmount_IssuedReminderLine">
          <DataField>RemainingAmount_IssuedReminderLine</DataField>
        </Field>
        <Field Name="RemainingAmount_IssuedReminderLineFormat">
          <DataField>RemainingAmount_IssuedReminderLineFormat</DataField>
        </Field>
        <Field Name="Description_IssuedReminderLine">
          <DataField>Description_IssuedReminderLine</DataField>
        </Field>
        <Field Name="NoofReminders_IssuedReminderLine">
          <DataField>NoofReminders_IssuedReminderLine</DataField>
        </Field>
        <Field Name="DocumentType_IssuedReminderLine">
          <DataField>DocumentType_IssuedReminderLine</DataField>
        </Field>
        <Field Name="OriginalAmount_IssuedReminderLine">
          <DataField>OriginalAmount_IssuedReminderLine</DataField>
        </Field>
        <Field Name="OriginalAmount_IssuedReminderLineFormat">
          <DataField>OriginalAmount_IssuedReminderLineFormat</DataField>
        </Field>
        <Field Name="DueDate_IssuedReminderLine">
          <DataField>DueDate_IssuedReminderLine</DataField>
        </Field>
        <Field Name="DocumentNo_IssuedReminderLine">
          <DataField>DocumentNo_IssuedReminderLine</DataField>
        </Field>
        <Field Name="DocumentDate_IssuedReminderLine">
          <DataField>DocumentDate_IssuedReminderLine</DataField>
        </Field>
        <Field Name="v_adr_ok">
          <DataField>v_adr_ok</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="RemainingAmount_MahnungZinsBetrag">
          <DataField>RemainingAmount_MahnungZinsBetrag</DataField>
        </Field>
        <Field Name="RemainingAmount_MahnungZinsBetragFormat">
          <DataField>RemainingAmount_MahnungZinsBetragFormat</DataField>
        </Field>
        <Field Name="VATAmount_IssuedReminderLine_Lbl">
          <DataField>VATAmount_IssuedReminderLine_Lbl</DataField>
        </Field>
        <Field Name="VATAmount_IssuedReminderLine">
          <DataField>VATAmount_IssuedReminderLine</DataField>
        </Field>
        <Field Name="VATAmount_IssuedReminderLineFormat">
          <DataField>VATAmount_IssuedReminderLineFormat</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="RemainingAmount_MahnungZinsBetrag_VATAmount">
          <DataField>RemainingAmount_MahnungZinsBetrag_VATAmount</DataField>
        </Field>
        <Field Name="RemainingAmount_MahnungZinsBetrag_VATAmountFormat">
          <DataField>RemainingAmount_MahnungZinsBetrag_VATAmountFormat</DataField>
        </Field>
        <Field Name="Description_RegMahnungZeile2">
          <DataField>Description_RegMahnungZeile2</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_MWSTBetragZeile">
          <DataField>AmountIncludingVAT_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_MWSTBetragZeileFormat">
          <DataField>AmountIncludingVAT_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

