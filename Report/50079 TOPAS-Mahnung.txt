OBJECT Report 50079 TOPAS-Mahnung
{
  OBJECT-PROPERTIES
  {
    Date=22.02.22;
    Time=10:19:30;
    Modified=Yes;
    Version List=Beleg,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS(Picture,"ISO Logo");
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table297;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Mahnung;
               OnPreDataItem=BEGIN
                               FormatAdrCodeunit.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  FormatAddr(DebAdr);
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  ReportForNav.PageNo := 1;
                                  IF NOT CurrReport.PREVIEW THEN
                                    IncrNoPrinted;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := 'EUR';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  SoR_Text := '';
                                  v_adr_ok := '';
                                END;

               ReqFilterFields=No. }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                   // TOPAS  17.03.06  Angang
                                  //IF Debitor."Zlg.-Bedingungscode"='SOR' THEN
                                  // SoR_Text :='Sale or Return - nicht versenden';
                                   // TOPAS  17.03.06  ENDE
                                END;

               DataItemLink=No.=FIELD(Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000000;2;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 4   ;2   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000003;2;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;2;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;2;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;2;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;2;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;2;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;2;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;2;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;2;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;2;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;2;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;2;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 5   ;2   ;Column  ;SoR_Text            ;
               SourceExpr=SoR_Text }

    { 6   ;2   ;Column  ;YourReference_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."Your Reference" }

    { 7   ;2   ;Column  ;OurAccountNo_Customer;
               SourceExpr=Customer."Our Account No." }

    { 8   ;2   ;Column  ;VATRegistrationNo_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."VAT Registration No." }

    { 9   ;2   ;Column  ;MWStNrText          ;
               SourceExpr=MWStNrText }

    { 10  ;2   ;Column  ;STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_;
               SourceExpr=STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo)) }

    { 11  ;2   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 12  ;2   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 13  ;2   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 14  ;2   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 15  ;2   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 16  ;2   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 17  ;2   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 18  ;2   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 19  ;2   ;Column  ;CustomerNo_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."Customer No." }

    { 20  ;2   ;Column  ;DocumentDate_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."Document Date" }

    { 21  ;2   ;Column  ;No_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."No." }

    { 22  ;2   ;Column  ;ReminderLevel_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."Reminder Level" }

    { 23  ;2   ;DataItem;Vortext             ;
               DataItemTable=Table298;
               OnPreDataItem=BEGIN
                               //lshanf c01
                               gzeile := 0;
                               //lshend c01
                             END;

               OnAfterGetRecord=BEGIN
                                  //lshanf c01
                                  IF Type <> 0 THEN
                                    CurrReport.BREAK
                                  ELSE
                                    gzeile := "Line No.";
                                  //lshend c01
                                END;

               DataItemLinkReference=Issued Reminder Header;
               DataItemLink=Reminder No.=FIELD(No.) }

    { 24  ;3   ;Column  ;Description_Vortext ;
               SourceExpr=Description }

    { 25  ;2   ;DataItem;                    ;
               DataItemTable=Table298;
               DataItemTableView=SORTING(Reminder No.,Line No.);
               OnPreDataItem=BEGIN
                               //lshanf c01
                               SETFILTER("Line No.",'>%1',gzeile);
                               //lshend c01
                               IF FIND('-') THEN BEGIN
                                 StartZeileNr := 0;
                                 REPEAT
                                   Fortsetzen := Type = Type::" ";
                                   IF Fortsetzen AND (Description = '') THEN
                                     StartZeileNr := "Line No.";
                                 UNTIL (NEXT = 0) OR NOT Fortsetzen;
                               END;
                               IF FIND('+') THEN BEGIN
                                 EndeZeileNr := "Line No." + 1;
                                 REPEAT
                                   Fortsetzen := Type = Type::" ";
                                   IF Fortsetzen AND (Description = '') THEN
                                     EndeZeileNr := "Line No.";
                                 UNTIL (NEXT(-1) = 0) OR NOT Fortsetzen;
                               END;
                               MWSTBetragZeile.DELETEALL;
                               //lshanf c01
                               {
                               SETFILTER("Zeilennr.",'<%1',EndeZeileNr);
                               }
                               SETFILTER("Line No.",'>%1&<%2',gzeile,EndeZeileNr);
                               //lshend
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."VAT Amount" := "VAT Amount";
                                  MWSTBetragZeile."Amount Including VAT" := Amount + "VAT Amount";
                                  MWSTBetragZeile.InsertLine;
                                  CASE Type OF
                                    Type::"G/L Account":
                                      "Remaining Amount" := Amount;
                                    Type::"Customer Ledger Entry":
                                      MahnungZinsBetrag := Amount;
                                  END;
                                  // Neu TOPAS 2.9.2014 UB  Prfen, ob Rechnungsanschrift abweicht von Mahnungsanschrift
                                  verkaufsrechnungskopf.RESET;
                                  verkaufsrechnungskopf.SETFILTER(verkaufsrechnungskopf."No.",'%1',"Issued Reminder Line"."Document No.");
                                  IF verkaufsrechnungskopf.FINDFIRST THEN BEGIN
                                    IF "Issued Reminder Header".Name <> verkaufsrechnungskopf."Bill-to Name" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header"."Name 2" <> verkaufsrechnungskopf."Bill-to Name 2" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header".Address <> verkaufsrechnungskopf."Bill-to Address" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header"."Address 2" <> verkaufsrechnungskopf."Bill-to Address 2" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header"."Post Code" <> verkaufsrechnungskopf."Bill-to Post Code" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header".City <> verkaufsrechnungskopf."Bill-to City" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header".County <> verkaufsrechnungskopf."Bill-to County" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header"."Country/Region Code" <> verkaufsrechnungskopf."Bill-to Country/Region Code" THEN v_adr_ok := '*';
                                  END;
                                END;

               DataItemLinkReference=Issued Reminder Header;
               DataItemLink=Reminder No.=FIELD(No.) }

    { 26  ;3   ;Column  ;IssuedReminderLineFIELDCAPTION_DocumentType;
               SourceExpr="Issued Reminder Line".FIELDCAPTION("Document Type") }

    { 27  ;3   ;Column  ;IssuedReminderLineFIELDCAPTION_RemainingAmount;
               SourceExpr="Issued Reminder Line".FIELDCAPTION("Remaining Amount") }

    { 28  ;3   ;Column  ;IssuedReminderLineFIELDCAPTION_DocumentNo;
               SourceExpr="Issued Reminder Line".FIELDCAPTION("Document No.") }

    { 29  ;3   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 30  ;3   ;Column  ;RemainingAmount_IssuedReminderLine;
               SourceExpr="Remaining Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 31  ;3   ;Column  ;Description_IssuedReminderLine;
               SourceExpr=Description }

    { 32  ;3   ;Column  ;NoofReminders_IssuedReminderLine;
               SourceExpr="No. of Reminders" }

    { 33  ;3   ;Column  ;DocumentType_IssuedReminderLine;
               SourceExpr="Document Type" }

    { 34  ;3   ;Column  ;OriginalAmount_IssuedReminderLine;
               SourceExpr="Original Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 35  ;3   ;Column  ;DueDate_IssuedReminderLine;
               SourceExpr="Due Date" }

    { 36  ;3   ;Column  ;DocumentNo_IssuedReminderLine;
               SourceExpr="Document No." }

    { 37  ;3   ;Column  ;DocumentDate_IssuedReminderLine;
               SourceExpr="Document Date" }

    { 38  ;3   ;Column  ;v_adr_ok            ;
               SourceExpr=v_adr_ok }

    { 39  ;3   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 40  ;3   ;Column  ;RemainingAmount_MahnungZinsBetrag;
               SourceExpr="Remaining Amount" + MahnungZinsBetrag;
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 41  ;3   ;Column  ;VATAmount_IssuedReminderLine_Lbl;
               SourceExpr="Issued Reminder Line".FIELDCAPTION("VAT Amount") }

    { 42  ;3   ;Column  ;VATAmount_IssuedReminderLine;
               SourceExpr="VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 43  ;3   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 44  ;3   ;Column  ;RemainingAmount_MahnungZinsBetrag_VATAmount;
               SourceExpr="Remaining Amount" + MahnungZinsBetrag + "VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 45  ;2   ;DataItem;RegMahnungZeile2    ;
               DataItemTable=Table298;
               DataItemTableView=SORTING(Reminder No.,Line No.);
               OnPreDataItem=BEGIN
                               SETFILTER("Line No.",'>=%1',EndeZeileNr);
                             END;

               DataItemLinkReference=Issued Reminder Header;
               DataItemLink=Reminder No.=FIELD(No.) }

    { 46  ;3   ;Column  ;Description_RegMahnungZeile2;
               SourceExpr=Description }

    { 47  ;2   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF "Issued Reminder Line"."VAT Amount" = 0 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 48  ;3   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 49  ;3   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 50  ;3   ;Column  ;AmountIncludingVAT_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 51  ;3   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      Firmendaten@1140001 : Record 79;
      MWSTBetragZeile@1140002 : TEMPORARY Record 290;
      mahnzeile@1000000003 : Record 298;
      verkaufsrechnungskopf@1000000002 : Record 112;
      FormatAdrCodeunit@1140003 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140004 : ARRAY [8] OF Text[50];
      FirmaAdr@1140005 : ARRAY [8] OF Text[50];
      MWStNrText@1140006 : Text[30];
      ReferenzText@1140007 : Text[30];
      TotalText@1140008 : Text[50];
      TotalInklMWStText@1140009 : Text[50];
      MahnungZinsBetrag@1140010 : Decimal;
      StartZeileNr@1140011 : Integer;
      EndeZeileNr@1140012 : Integer;
      Fortsetzen@1140013 : Boolean;
      "-------lsh---------"@1140014 : Integer;
      gzeile@1140015 : Integer;
      waehrung2@1140016 : Code[10];
      waehrung@1140017 : Code[10];
      SoR_Text@1140018 : Text[40];
      v_adr_ok@1140021 : Text[5];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionInteger_Header1@5025(VAR Integer@1000000000 : Record 2000000026);
    BEGIN
      WITH Integer DO BEGIN
        SoR_Text := '';
        IF mahnzeile."Document Type" = mahnzeile."Document Type"::Invoice THEN BEGIN
          mahnzeile.SETFILTER(mahnzeile."Reminder No.",'%1',"Issued Reminder Header"."No.");
          mahnzeile.FIND('-');
          verkaufsrechnungskopf.SETFILTER(verkaufsrechnungskopf."No.",'%1',mahnzeile."Document No.");
          verkaufsrechnungskopf.FIND('-');
          IF verkaufsrechnungskopf."Payment Terms Code" = 'SOR' THEN BEGIN
            SoR_Text := 'Sale or Return - nicht versenden!' ;
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Body7@5026(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := "Line No." <= StartZeileNr;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Body8@5027(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := ("Line No." > StartZeileNr) AND (Type = Type::"Customer Ledger Entry");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Body9@5028(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := ("Line No." > StartZeileNr) AND (Type <> Type::"Customer Ledger Entry");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Footer12@5029(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := MahnungZinsBetrag <> 0;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Footer14@5030(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := "VAT Amount" <> 0
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Integer': CASE SectionId OF
          'Header1': OnPreSectionInteger_Header1(Integer);
        END;
        'IssuedReminderLine': CASE SectionId OF
          'Body7': OnPreSectionIssuedReminderLine_Body7("Issued Reminder Line");
          'Body8': OnPreSectionIssuedReminderLine_Body8("Issued Reminder Line");
          'Body9': OnPreSectionIssuedReminderLine_Body9("Issued Reminder Line");
          'Footer12': OnPreSectionIssuedReminderLine_Footer12("Issued Reminder Line");
          'Footer14': OnPreSectionIssuedReminderLine_Footer14("Issued Reminder Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'IssuedReminderLine': WITH "Issued Reminder Line" DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,"Remaining Amount");
                ReportForNav.AddTotal(DataItemId,1,"VAT Amount");
                ReportForNav.AddTotal(DataItemId,2,MahnungZinsBetrag);
              END;
           'Restore': BEGIN
                 "Remaining Amount" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 MahnungZinsBetrag := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
                ReportForNav.AddTotal(DataItemId,2,MWSTBetragZeile."Amount Including VAT");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 MWSTBetragZeile."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      copyright Lederer Systemhaus GmbH
      Žnderungen Standard
      291299 pl
                   Layout angepasst
      c01/di/gl/se Vortext vor šberschrift

      220222 st: šbertrag- und Fortsetzungsbetrag Sektionen ausgeblendet, da mit 6.1.0 mitunter fehlerhaft
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
zqJrDJqDf/F95SWn4WO8ysQISfLH/wM=</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="SoR_Text">
          <DataField>SoR_Text</DataField>
        </Field>
        <Field Name="YourReference_IssuedReminderHeader">
          <DataField>YourReference_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="OurAccountNo_Customer">
          <DataField>OurAccountNo_Customer</DataField>
        </Field>
        <Field Name="VATRegistrationNo_IssuedReminderHeader">
          <DataField>VATRegistrationNo_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="MWStNrText">
          <DataField>MWStNrText</DataField>
        </Field>
        <Field Name="STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_">
          <DataField>STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="CustomerNo_IssuedReminderHeader">
          <DataField>CustomerNo_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="DocumentDate_IssuedReminderHeader">
          <DataField>DocumentDate_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="No_IssuedReminderHeader">
          <DataField>No_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="ReminderLevel_IssuedReminderHeader">
          <DataField>ReminderLevel_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="Description_Vortext">
          <DataField>Description_Vortext</DataField>
        </Field>
        <Field Name="IssuedReminderLineFIELDCAPTION_DocumentType">
          <DataField>IssuedReminderLineFIELDCAPTION_DocumentType</DataField>
        </Field>
        <Field Name="IssuedReminderLineFIELDCAPTION_RemainingAmount">
          <DataField>IssuedReminderLineFIELDCAPTION_RemainingAmount</DataField>
        </Field>
        <Field Name="IssuedReminderLineFIELDCAPTION_DocumentNo">
          <DataField>IssuedReminderLineFIELDCAPTION_DocumentNo</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="RemainingAmount_IssuedReminderLine">
          <DataField>RemainingAmount_IssuedReminderLine</DataField>
        </Field>
        <Field Name="RemainingAmount_IssuedReminderLineFormat">
          <DataField>RemainingAmount_IssuedReminderLineFormat</DataField>
        </Field>
        <Field Name="Description_IssuedReminderLine">
          <DataField>Description_IssuedReminderLine</DataField>
        </Field>
        <Field Name="NoofReminders_IssuedReminderLine">
          <DataField>NoofReminders_IssuedReminderLine</DataField>
        </Field>
        <Field Name="DocumentType_IssuedReminderLine">
          <DataField>DocumentType_IssuedReminderLine</DataField>
        </Field>
        <Field Name="OriginalAmount_IssuedReminderLine">
          <DataField>OriginalAmount_IssuedReminderLine</DataField>
        </Field>
        <Field Name="OriginalAmount_IssuedReminderLineFormat">
          <DataField>OriginalAmount_IssuedReminderLineFormat</DataField>
        </Field>
        <Field Name="DueDate_IssuedReminderLine">
          <DataField>DueDate_IssuedReminderLine</DataField>
        </Field>
        <Field Name="DocumentNo_IssuedReminderLine">
          <DataField>DocumentNo_IssuedReminderLine</DataField>
        </Field>
        <Field Name="DocumentDate_IssuedReminderLine">
          <DataField>DocumentDate_IssuedReminderLine</DataField>
        </Field>
        <Field Name="v_adr_ok">
          <DataField>v_adr_ok</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="RemainingAmount_MahnungZinsBetrag">
          <DataField>RemainingAmount_MahnungZinsBetrag</DataField>
        </Field>
        <Field Name="RemainingAmount_MahnungZinsBetragFormat">
          <DataField>RemainingAmount_MahnungZinsBetragFormat</DataField>
        </Field>
        <Field Name="VATAmount_IssuedReminderLine_Lbl">
          <DataField>VATAmount_IssuedReminderLine_Lbl</DataField>
        </Field>
        <Field Name="VATAmount_IssuedReminderLine">
          <DataField>VATAmount_IssuedReminderLine</DataField>
        </Field>
        <Field Name="VATAmount_IssuedReminderLineFormat">
          <DataField>VATAmount_IssuedReminderLineFormat</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="RemainingAmount_MahnungZinsBetrag_VATAmount">
          <DataField>RemainingAmount_MahnungZinsBetrag_VATAmount</DataField>
        </Field>
        <Field Name="RemainingAmount_MahnungZinsBetrag_VATAmountFormat">
          <DataField>RemainingAmount_MahnungZinsBetrag_VATAmountFormat</DataField>
        </Field>
        <Field Name="Description_RegMahnungZeile2">
          <DataField>Description_RegMahnungZeile2</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_MWSTBetragZeile">
          <DataField>AmountIncludingVAT_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_MWSTBetragZeileFormat">
          <DataField>AmountIncludingVAT_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

