OBJECT Report 50079 TOPAS-Mahnung
{
  OBJECT-PROPERTIES
  {
    Date=06.02.18;
    Time=17:36:49;
    Modified=Yes;
    Version List=Beleg,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS(Picture,"ISO Logo");
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table297;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Mahnung;
               OnPreDataItem=BEGIN
                               FormatAdrCodeunit.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  FormatAddr(DebAdr);
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  ReportForNav.PageNo := 1;
                                  IF NOT CurrReport.PREVIEW THEN
                                    IncrNoPrinted;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := 'EUR';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ '+"Currency Code"+' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  SoR_Text := '';
                                  v_adr_ok := '';
                                END;

               ReqFilterFields=No. }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                   // TOPAS  17.03.06  Angang
                                  //IF Debitor."Zlg.-Bedingungscode"='SOR' THEN
                                  // SoR_Text :='Sale or Return - nicht versenden';
                                   // TOPAS  17.03.06  ENDE
                                END;

               DataItemLink=No.=FIELD(Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000000;2;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 4   ;2   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000003;2;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;2;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ', ' + CompanyInfo[5] }

    { 1000000005;2;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;2;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;2;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;2;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;2;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;2;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;2;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;2;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;2;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;2;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 5   ;2   ;Column  ;SoR_Text            ;
               SourceExpr=SoR_Text }

    { 6   ;2   ;Column  ;YourReference_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."Your Reference" }

    { 7   ;2   ;Column  ;OurAccountNo_Customer;
               SourceExpr=Customer."Our Account No." }

    { 8   ;2   ;Column  ;VATRegistrationNo_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."VAT Registration No." }

    { 9   ;2   ;Column  ;MWStNrText          ;
               SourceExpr=MWStNrText }

    { 10  ;2   ;Column  ;STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_;
               SourceExpr=STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo)) }

    { 11  ;2   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 12  ;2   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 13  ;2   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 14  ;2   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 15  ;2   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 16  ;2   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 17  ;2   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 18  ;2   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 19  ;2   ;Column  ;CustomerNo_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."Customer No." }

    { 20  ;2   ;Column  ;DocumentDate_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."Document Date" }

    { 21  ;2   ;Column  ;No_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."No." }

    { 22  ;2   ;Column  ;ReminderLevel_IssuedReminderHeader;
               SourceExpr="Issued Reminder Header"."Reminder Level" }

    { 23  ;2   ;DataItem;Vortext             ;
               DataItemTable=Table298;
               OnPreDataItem=BEGIN
                               //lshanf c01
                               gzeile := 0;
                               //lshend c01
                             END;

               OnAfterGetRecord=BEGIN
                                  //lshanf c01
                                  IF Type <> 0 THEN
                                    CurrReport.BREAK
                                  ELSE
                                    gzeile := "Line No.";
                                  //lshend c01
                                END;

               DataItemLinkReference=Issued Reminder Header;
               DataItemLink=Reminder No.=FIELD(No.) }

    { 24  ;3   ;Column  ;Description_Vortext ;
               SourceExpr=Description }

    { 25  ;2   ;DataItem;                    ;
               DataItemTable=Table298;
               DataItemTableView=SORTING(Reminder No.,Line No.);
               OnPreDataItem=BEGIN
                               //lshanf c01
                               SETFILTER("Line No.",'>%1',gzeile);
                               //lshend c01
                               IF FIND('-') THEN BEGIN
                                 StartZeileNr := 0;
                                 REPEAT
                                   Fortsetzen := Type = Type::" ";
                                   IF Fortsetzen AND (Description = '') THEN
                                     StartZeileNr := "Line No.";
                                 UNTIL (NEXT = 0) OR NOT Fortsetzen;
                               END;
                               IF FIND('+') THEN BEGIN
                                 EndeZeileNr := "Line No." + 1;
                                 REPEAT
                                   Fortsetzen := Type = Type::" ";
                                   IF Fortsetzen AND (Description = '') THEN
                                     EndeZeileNr := "Line No.";
                                 UNTIL (NEXT(-1) = 0) OR NOT Fortsetzen;
                               END;
                               MWSTBetragZeile.DELETEALL;
                               //lshanf c01
                               {
                               SETFILTER("Zeilennr.",'<%1',EndeZeileNr);
                               }
                               SETFILTER("Line No.",'>%1&<%2',gzeile,EndeZeileNr);
                               //lshend
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."VAT Amount" := "VAT Amount";
                                  MWSTBetragZeile."Amount Including VAT" := Amount + "VAT Amount";
                                  MWSTBetragZeile.InsertLine;
                                  CASE Type OF
                                    Type::"G/L Account":
                                      "Remaining Amount" := Amount;
                                    Type::"Customer Ledger Entry":
                                      MahnungZinsBetrag := Amount;
                                  END;
                                  // Neu TOPAS 2.9.2014 UB  Prfen, ob Rechnungsanschrift abweicht von Mahnungsanschrift
                                  verkaufsrechnungskopf.RESET;
                                  verkaufsrechnungskopf.SETFILTER(verkaufsrechnungskopf."No.",'%1',"Issued Reminder Line"."Document No.");
                                  IF verkaufsrechnungskopf.FINDFIRST THEN BEGIN
                                    IF "Issued Reminder Header".Name <> verkaufsrechnungskopf."Bill-to Name" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header"."Name 2" <> verkaufsrechnungskopf."Bill-to Name 2" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header".Address <> verkaufsrechnungskopf."Bill-to Address" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header"."Address 2" <> verkaufsrechnungskopf."Bill-to Address 2" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header"."Post Code" <> verkaufsrechnungskopf."Bill-to Post Code" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header".City <> verkaufsrechnungskopf."Bill-to City" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header".County <> verkaufsrechnungskopf."Bill-to County" THEN v_adr_ok := '*';
                                    IF "Issued Reminder Header"."Country/Region Code" <> verkaufsrechnungskopf."Bill-to Country/Region Code" THEN v_adr_ok := '*';
                                  END;
                                END;

               DataItemLinkReference=Issued Reminder Header;
               DataItemLink=Reminder No.=FIELD(No.) }

    { 26  ;3   ;Column  ;IssuedReminderLineFIELDCAPTION_DocumentType;
               SourceExpr="Issued Reminder Line".FIELDCAPTION("Document Type") }

    { 27  ;3   ;Column  ;IssuedReminderLineFIELDCAPTION_RemainingAmount;
               SourceExpr="Issued Reminder Line".FIELDCAPTION("Remaining Amount") }

    { 28  ;3   ;Column  ;IssuedReminderLineFIELDCAPTION_DocumentNo;
               SourceExpr="Issued Reminder Line".FIELDCAPTION("Document No.") }

    { 29  ;3   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 30  ;3   ;Column  ;RemainingAmount_IssuedReminderLine;
               SourceExpr="Remaining Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 31  ;3   ;Column  ;Description_IssuedReminderLine;
               SourceExpr=Description }

    { 32  ;3   ;Column  ;NoofReminders_IssuedReminderLine;
               SourceExpr="No. of Reminders" }

    { 33  ;3   ;Column  ;DocumentType_IssuedReminderLine;
               SourceExpr="Document Type" }

    { 34  ;3   ;Column  ;OriginalAmount_IssuedReminderLine;
               SourceExpr="Original Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 35  ;3   ;Column  ;DueDate_IssuedReminderLine;
               SourceExpr="Due Date" }

    { 36  ;3   ;Column  ;DocumentNo_IssuedReminderLine;
               SourceExpr="Document No." }

    { 37  ;3   ;Column  ;DocumentDate_IssuedReminderLine;
               SourceExpr="Document Date" }

    { 38  ;3   ;Column  ;v_adr_ok            ;
               SourceExpr=v_adr_ok }

    { 39  ;3   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 40  ;3   ;Column  ;RemainingAmount_MahnungZinsBetrag;
               SourceExpr="Remaining Amount" + MahnungZinsBetrag;
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 41  ;3   ;Column  ;VATAmount_IssuedReminderLine_Lbl;
               SourceExpr="Issued Reminder Line".FIELDCAPTION("VAT Amount") }

    { 42  ;3   ;Column  ;VATAmount_IssuedReminderLine;
               SourceExpr="VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 43  ;3   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 44  ;3   ;Column  ;RemainingAmount_MahnungZinsBetrag_VATAmount;
               SourceExpr="Remaining Amount" + MahnungZinsBetrag + "VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 45  ;2   ;DataItem;RegMahnungZeile2    ;
               DataItemTable=Table298;
               DataItemTableView=SORTING(Reminder No.,Line No.);
               OnPreDataItem=BEGIN
                               SETFILTER("Line No.",'>=%1',EndeZeileNr);
                             END;

               DataItemLinkReference=Issued Reminder Header;
               DataItemLink=Reminder No.=FIELD(No.) }

    { 46  ;3   ;Column  ;Description_RegMahnungZeile2;
               SourceExpr=Description }

    { 47  ;2   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF "Issued Reminder Line"."VAT Amount" = 0 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 48  ;3   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 49  ;3   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 50  ;3   ;Column  ;AmountIncludingVAT_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Issued Reminder Line".GetCurrencyCodeFromHeader }

    { 51  ;3   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      Firmendaten@1140001 : Record 79;
      MWSTBetragZeile@1140002 : TEMPORARY Record 290;
      mahnzeile@1000000003 : Record 298;
      verkaufsrechnungskopf@1000000002 : Record 112;
      FormatAdrCodeunit@1140003 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140004 : ARRAY [8] OF Text[50];
      FirmaAdr@1140005 : ARRAY [8] OF Text[50];
      MWStNrText@1140006 : Text[30];
      ReferenzText@1140007 : Text[30];
      TotalText@1140008 : Text[50];
      TotalInklMWStText@1140009 : Text[50];
      MahnungZinsBetrag@1140010 : Decimal;
      StartZeileNr@1140011 : Integer;
      EndeZeileNr@1140012 : Integer;
      Fortsetzen@1140013 : Boolean;
      "-------lsh---------"@1140014 : Integer;
      gzeile@1140015 : Integer;
      waehrung2@1140016 : Code[10];
      waehrung@1140017 : Code[10];
      SoR_Text@1140018 : Text[40];
      v_adr_ok@1140021 : Text[5];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionInteger_Header1@5025(VAR Integer@1000000000 : Record 2000000026);
    BEGIN
      WITH Integer DO BEGIN
        SoR_Text:='';
        IF mahnzeile."Document Type" = mahnzeile."Document Type"::Invoice THEN BEGIN
          mahnzeile.SETFILTER(mahnzeile."Reminder No.",'%1',"Issued Reminder Header"."No.");
          mahnzeile.FIND('-');
          verkaufsrechnungskopf.SETFILTER(verkaufsrechnungskopf."No.",'%1',mahnzeile."Document No.");
          verkaufsrechnungskopf.FIND('-');
          IF verkaufsrechnungskopf."Payment Terms Code" = 'SOR' THEN BEGIN
            SoR_Text := 'Sale or Return - nicht versenden!' ;
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Body7@5026(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := "Line No." <= StartZeileNr;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Body8@5027(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := ("Line No." > StartZeileNr) AND (Type = Type::"Customer Ledger Entry");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Body9@5028(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := ("Line No." > StartZeileNr) AND (Type <> Type::"Customer Ledger Entry");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Footer12@5029(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := MahnungZinsBetrag <> 0;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionIssuedReminderLine_Footer14@5030(VAR "Issued Reminder Line"@1000000000 : Record 298);
    BEGIN
      WITH "Issued Reminder Line" DO BEGIN
        ReportForNav.ShowOutput := "VAT Amount" <> 0
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Integer': CASE SectionId OF
          'Header1': OnPreSectionInteger_Header1(Integer);
        END;
        'IssuedReminderLine': CASE SectionId OF
          'Body7': OnPreSectionIssuedReminderLine_Body7("Issued Reminder Line");
          'Body8': OnPreSectionIssuedReminderLine_Body8("Issued Reminder Line");
          'Body9': OnPreSectionIssuedReminderLine_Body9("Issued Reminder Line");
          'Footer12': OnPreSectionIssuedReminderLine_Footer12("Issued Reminder Line");
          'Footer14': OnPreSectionIssuedReminderLine_Footer14("Issued Reminder Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // Do not change (Autogenerated by Reports ForNAV) - Instead change the Create Totals, Total Fields or Group Total Fields properties on the Data item in the ForNAV designer
      CASE DataItemId OF
        'IssuedReminderLine': WITH "Issued Reminder Line" DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,"Remaining Amount");
                ReportForNav.AddTotal(DataItemId,1,"VAT Amount");
                ReportForNav.AddTotal(DataItemId,2,MahnungZinsBetrag);
              END;
           'Restore': BEGIN
                 "Remaining Amount" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 MahnungZinsBetrag := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
                ReportForNav.AddTotal(DataItemId,2,MWSTBetragZeile."Amount Including VAT");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 MWSTBetragZeile."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      copyright Lederer Systemhaus GmbH
      Žnderungen Standard
      291299 pl
                   Layout angepasst
      c01/di/gl/se Vortext vor šberschrift
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>3c94a2fc-ee06-43a7-a050-e8ead89b79d9</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>66db3dc5-957c-4132-8ef2-e257ae0d1d1f</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="SoR_Text">
          <DataField>SoR_Text</DataField>
        </Field>
        <Field Name="YourReference_IssuedReminderHeader">
          <DataField>YourReference_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="OurAccountNo_Customer">
          <DataField>OurAccountNo_Customer</DataField>
        </Field>
        <Field Name="VATRegistrationNo_IssuedReminderHeader">
          <DataField>VATRegistrationNo_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="MWStNrText">
          <DataField>MWStNrText</DataField>
        </Field>
        <Field Name="STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_">
          <DataField>STRSUBSTNO_SeitePct1_FORMAT_ReportForNavPageNo_</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="CustomerNo_IssuedReminderHeader">
          <DataField>CustomerNo_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="DocumentDate_IssuedReminderHeader">
          <DataField>DocumentDate_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="No_IssuedReminderHeader">
          <DataField>No_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="ReminderLevel_IssuedReminderHeader">
          <DataField>ReminderLevel_IssuedReminderHeader</DataField>
        </Field>
        <Field Name="Description_Vortext">
          <DataField>Description_Vortext</DataField>
        </Field>
        <Field Name="IssuedReminderLineFIELDCAPTION_DocumentType">
          <DataField>IssuedReminderLineFIELDCAPTION_DocumentType</DataField>
        </Field>
        <Field Name="IssuedReminderLineFIELDCAPTION_RemainingAmount">
          <DataField>IssuedReminderLineFIELDCAPTION_RemainingAmount</DataField>
        </Field>
        <Field Name="IssuedReminderLineFIELDCAPTION_DocumentNo">
          <DataField>IssuedReminderLineFIELDCAPTION_DocumentNo</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="RemainingAmount_IssuedReminderLine">
          <DataField>RemainingAmount_IssuedReminderLine</DataField>
        </Field>
        <Field Name="RemainingAmount_IssuedReminderLineFormat">
          <DataField>RemainingAmount_IssuedReminderLineFormat</DataField>
        </Field>
        <Field Name="Description_IssuedReminderLine">
          <DataField>Description_IssuedReminderLine</DataField>
        </Field>
        <Field Name="NoofReminders_IssuedReminderLine">
          <DataField>NoofReminders_IssuedReminderLine</DataField>
        </Field>
        <Field Name="DocumentType_IssuedReminderLine">
          <DataField>DocumentType_IssuedReminderLine</DataField>
        </Field>
        <Field Name="OriginalAmount_IssuedReminderLine">
          <DataField>OriginalAmount_IssuedReminderLine</DataField>
        </Field>
        <Field Name="OriginalAmount_IssuedReminderLineFormat">
          <DataField>OriginalAmount_IssuedReminderLineFormat</DataField>
        </Field>
        <Field Name="DueDate_IssuedReminderLine">
          <DataField>DueDate_IssuedReminderLine</DataField>
        </Field>
        <Field Name="DocumentNo_IssuedReminderLine">
          <DataField>DocumentNo_IssuedReminderLine</DataField>
        </Field>
        <Field Name="DocumentDate_IssuedReminderLine">
          <DataField>DocumentDate_IssuedReminderLine</DataField>
        </Field>
        <Field Name="v_adr_ok">
          <DataField>v_adr_ok</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="RemainingAmount_MahnungZinsBetrag">
          <DataField>RemainingAmount_MahnungZinsBetrag</DataField>
        </Field>
        <Field Name="RemainingAmount_MahnungZinsBetragFormat">
          <DataField>RemainingAmount_MahnungZinsBetragFormat</DataField>
        </Field>
        <Field Name="VATAmount_IssuedReminderLine_Lbl">
          <DataField>VATAmount_IssuedReminderLine_Lbl</DataField>
        </Field>
        <Field Name="VATAmount_IssuedReminderLine">
          <DataField>VATAmount_IssuedReminderLine</DataField>
        </Field>
        <Field Name="VATAmount_IssuedReminderLineFormat">
          <DataField>VATAmount_IssuedReminderLineFormat</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="RemainingAmount_MahnungZinsBetrag_VATAmount">
          <DataField>RemainingAmount_MahnungZinsBetrag_VATAmount</DataField>
        </Field>
        <Field Name="RemainingAmount_MahnungZinsBetrag_VATAmountFormat">
          <DataField>RemainingAmount_MahnungZinsBetrag_VATAmountFormat</DataField>
        </Field>
        <Field Name="Description_RegMahnungZeile2">
          <DataField>Description_RegMahnungZeile2</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_MWSTBetragZeile">
          <DataField>AmountIncludingVAT_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_MWSTBetragZeileFormat">
          <DataField>AmountIncludingVAT_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

