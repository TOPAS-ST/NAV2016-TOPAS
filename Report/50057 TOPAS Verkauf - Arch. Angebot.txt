OBJECT Report 50057 TOPAS Verkauf - Arch. Angebot
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=09:35:58;
    Modified=Yes;
    Version List=Beleg - manuell --> 50152,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS("ISO Logo",Picture);

                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table5107;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Quote));
               ReqFilterHeadingML=DEU=Verkaufsangebot;
               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    IF VerkEinkPerson."Fax No." = '' THEN BEGIN
                                      Verk„uferText := STRSUBSTNO ('i.A. %1', VerkEinkPerson.Name);
                                      Verk„uferText1 := '';
                                      Verk„uferText2 := STRSUBSTNO ('(Tel. %1)', VerkEinkPerson."First name");
                                    END ELSE BEGIN
                                      Verk„uferText := STRSUBSTNO ('i.A. %1', VerkEinkPerson.Name);
                                      Verk„uferText1 := STRSUBSTNO ('%1',VerkEinkPerson."Fax No.");
                                      Verk„uferText2 := STRSUBSTNO ('(Tel. %1)', VerkEinkPerson."First name");
                                    END;
                                  END;

                                  IF "Sales Header Archive"."Betreuer Innendienst" = '' THEN BEGIN
                                    VerkEinkPersonInnen.INIT;
                                    Verk„uferTextInnen := '';
                                  END ELSE BEGIN
                                    VerkEinkPersonInnen.GET("Sales Header Archive"."Betreuer Innendienst");
                                    IF VerkEinkPersonInnen."Fax No." ='' THEN BEGIN
                                      Verk„uferTextInnen := STRSUBSTNO ('i.A. %1', VerkEinkPersonInnen.Name);
                                      Verk„uferText1Innen := '';
                                      Verk„uferText2Innen := STRSUBSTNO ('(Tel. %1)', VerkEinkPersonInnen."First name");
                                    END ELSE BEGIN
                                      Verk„uferTextInnen := STRSUBSTNO ('i.A. %1', VerkEinkPersonInnen.Name);
                                      Verk„uferText1Innen := STRSUBSTNO ('%1', VerkEinkPersonInnen."Fax No.");
                                      Verk„uferText2Innen := STRSUBSTNO ('(Tel. %1)', VerkEinkPersonInnen."First name");
                                    END;
                                  END;
                                  IF ("Salesperson Code" = '') AND
                                     ("Sales Header Archive"."Betreuer Innendienst" = '') THEN
                                    AngebotsText := STRSUBSTNO('Angebot Nr. %1',"Sales Header Archive"."No.")
                                  ELSE
                                    IF ("Salesperson Code" = '') THEN
                                      AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2',"Sales Header Archive"."No.",
                                        "Sales Header Archive"."Betreuer Innendienst")
                                    ELSE
                                      IF ("Sales Header Archive"."Betreuer Innendienst" = '') THEN
                                        AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2',"Sales Header Archive"."No.",
                                          "Sales Header Archive"."Salesperson Code")
                                      ELSE
                                        AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2 / %3',"Sales Header Archive"."No.",
                                          "Sales Header Archive"."Betreuer Innendienst", "Sales Header Archive"."Salesperson Code");

                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");

                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    PreisText := FIBUEinrichtung."LCY Code";
                                    IF PreisText = 'EUR' THEN
                                      PreisText += 'O';
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                    PreisText := "Currency Code";

                                  END;
                                  preisstellung := STRSUBSTNO(Text002,PreisText);

                                  FormatAdr.SalesHeaderArchBillTo(DebAdr,"Sales Header Archive");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");

                                  Verkaufsw„hrungskurs := WechKursBetrag (WORKDATE,"Currency Code", "Currency Factor");

                                  IF NOT Deb.GET("Sales Header Archive"."Sell-to Customer No.") THEN
                                    Deb.INIT
                                  ELSE
                                    IF Deb."System Preisbindung" THEN
                                      system_preisbindung := SysPreisbindungsText
                                    ELSE
                                      system_preisbindung := '';

                                  IF "Currency Code" = '' THEN
                                    w„hrung := '°'
                                  ELSE
                                    w„hrung := "Currency Code";

                                  v_FER_SPL := FALSE;
                                  adv_andruck_notwendig := FALSE;
                                  v_sum_system := 0;
                                  SalesLineArchive.RESET;
                                  SalesLineArchive.SETRANGE("Document No.","Sales Header Archive"."No.");
                                  SalesLineArchive.SETRANGE(Type,SalesLineArchive.Type::Item);
                                  SalesLineArchive.SETFILTER("Manufacturer Code",'20|57|5710|5720|59|82|85|96|9610|9620');
                                  IF SalesLineArchive.FINDFIRST THEN
                                    v_system := TRUE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table5050;
               DataItemLink=No.=FIELD(Kontaktnr.) }

    { 5   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               DataItemTableView=SORTING(Code);
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 6   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=VAR
                                  SalesLineArchive@1000000000 : Record 5108;
                                  TempSalesLine@1000000001 : TEMPORARY Record 37;
                                  NamePart@1140001 : ARRAY [5] OF Text[50];
                                  SubStr@1140002 : Text[30];
                                  i@1140003 : Integer;
                                BEGIN
                                  CLEAR(SalesLineArchTmp);
                                  SalesLineArchTmp.DELETEALL;
                                  SalesLineArchive.SETRANGE("Document Type","Sales Header Archive"."Document Type");
                                  SalesLineArchive.SETRANGE("Document No.","Sales Header Archive"."No.");
                                  SalesLineArchive.SETRANGE("Version No.","Sales Header Archive"."Version No.");
                                  IF SalesLineArchive.FINDSET THEN
                                    REPEAT
                                      SalesLineArchTmp := SalesLineArchive;
                                      SalesLineArchTmp.INSERT;
                                      TempSalesLine.TRANSFERFIELDS(SalesLineArchive);
                                      TempSalesLine.INSERT;
                                    UNTIL SalesLineArchive.NEXT = 0;

                                  KopieText := '';
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    Preis_info := 'Einzelpreis je Stck in ' + w„hrung;
                                    IF Number > 1 THEN KopieText := 'skopie';
                                    ReportForNav.PageNo := 1;
                                  END ELSE BEGIN
                                    Preis_info := 'Price per piece in ' + w„hrung;
                                    IF Number > 1 THEN KopieText := ' Copy';
                                    ReportForNav.PageNo := 1;
                                  END;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    //*** Versandbedingungen
                                    versand := '';
                                    IF "Sales Header Archive"."Shipment Method Code" <> 'AB_HAN' THEN BEGIN
                                      versand := LieferBed.Description;
                                    END;
                                    IF "Sales Header Archive"."Shipment Method Code" ='AB_HAN' THEN BEGIN
                                      IF "Sales Header Archive"."Currency Code" = 'USD' THEN versand := 'Lieferungen ab 2.500,-- USD frei Haus';
                                      IF "Sales Header Archive"."Currency Code" = '' THEN versand := 'Lieferungen ab 2.500,-- EURO frei Haus';
                                      IF "Sales Header Archive"."Currency Code" = 'YEN' THEN versand := 'Lieferungen ab 250.000,-- JPY frei Haus';
                                    END;
                                    IF "Sales Header Archive"."Currency Code" = 'USD' THEN
                                      IF "Sales Header Archive"."Territory Code" <> 'SYSTEM' THEN
                                        minbestellwert := '500,-- USD'
                                      ELSE
                                        minbestellwert := '50,-- USD';
                                    IF "Sales Header Archive"."Currency Code" = '' THEN minbestellwert := '50,-- EURO';
                                    IF "Sales Header Archive"."Currency Code" = 'YEN' THEN minbestellwert := '50.000,-- JPY';
                                    //**********************
                                  END ELSE BEGIN
                                    //*** Versandbedingungen
                                    versand := '';
                                    IF "Sales Header Archive"."Shipment Method Code" = 'FOB' THEN BEGIN
                                      versand := 'FOB';
                                    END ELSE BEGIN
                                      IF "Sales Header Archive"."Shipment Method Code" = 'FHAUS' THEN
                                        versand := 'ex works'
                                      ELSE
                                        versand := LieferBed.Description;
                                    END;
                                    IF "Sales Header Archive"."Currency Code" = 'USD' THEN
                                      IF "Sales Header Archive"."Territory Code" <> 'SYSTEM' THEN
                                        minbestellwert := '500,-- USD'
                                      ELSE
                                        minbestellwert := '50,-- USD';
                                    IF "Sales Header Archive"."Currency Code" = '' THEN BEGIN
                                      IF "Sales Header Archive"."Sell-to Country/Region Code" = 'DE' THEN
                                        minbestellwert := '50,-- EURO'
                                      ELSE
                                        minbestellwert := '250,-- EURO';
                                    END;
                                    IF "Sales Header Archive"."Currency Code" = 'YEN' THEN minbestellwert := '50.000,-- JPY';
                                    //**********************
                                  END;

                                  ende := FALSE;
                                  x := 1;
                                  text2 := "Sales Header Archive".Kontaktperson;
                                  REPEAT
                                    IF DebAdr[x] = "Sales Header Archive"."Sell-to Customer Name" THEN BEGIN
                                      IF DebAdr[x+1] = "Sales Header Archive"."Sell-to Customer Name 2" THEN BEGIN
                                        Anschrift[x] := DebAdr[x];
                                        Anschrift[x+1] := DebAdr[x+1];
                                        Anschrift[x+2] := text2;
                                        Anschrift[x+3] := DebAdr[x+2];
                                        Anschrift[x+4] := DebAdr[x+3];
                                        Anschrift[x+5] := DebAdr[x+4];
                                        Anschrift[x+6] := DebAdr[x+5];
                                        Anschrift[x+7] := DebAdr[x+6];
                                        Anschrift[x+8] := DebAdr[x+7];
                                        ende := TRUE;
                                      END ELSE BEGIN
                                        Anschrift[x] := DebAdr[x];
                                        Anschrift[x+1] := text2;
                                        Anschrift[x+2] := DebAdr[x+1];
                                        Anschrift[x+3] := DebAdr[x+2];
                                        Anschrift[x+4] := DebAdr[x+3];
                                        Anschrift[x+5] := DebAdr[x+4];
                                        Anschrift[x+6] := DebAdr[x+5];
                                        Anschrift[x+7] := DebAdr[x+6];
                                        Anschrift[x+8] := DebAdr[x+7];
                                        ende := TRUE;
                                      END;
                                    END;
                                    i := i + 1;
                                  UNTIL (i = 9) OR (ende);

                                  SalutationFormula.SETRANGE("Salutation Code",Contact."Salutation Code");
                                  SalutationFormula.SETRANGE("Language Code","Sales Header Archive"."Language Code");
                                  IF SalutationFormula.FINDFIRST THEN
                                  IF (Contact."Salutation Code" = 'MANDANT') OR (Contact."Salutation Code" = '') THEN
                                    Text1 := SalutationFormula.Salutation
                                  ELSE
                                    Text1 := STRSUBSTNO(SalutationFormula.Salutation,Contact.Surname);
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkDruckZ„hler.RUN("Sales Header Archive");
                              END;
                               }

    { 7   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 8   ;3   ;Column  ;Picture_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 9   ;3   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 10  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 12  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 13  ;3   ;Column  ;ansp_anrede         ;
               IncludeCaption=No;
               SourceExpr=ansp_anrede }

    { 11  ;3   ;Column  ;ansp_telefon        ;
               IncludeCaption=No;
               SourceExpr=ansp_telefon }

    { 14  ;3   ;Column  ;ansp_fax            ;
               IncludeCaption=No;
               SourceExpr=ansp_fax }

    { 15  ;3   ;Column  ;E_Mail_Contact      ;
               IncludeCaption=No;
               SourceExpr=Contact."E-Mail" }

    { 16  ;3   ;Column  ;FaxNo_Contact       ;
               IncludeCaption=No;
               SourceExpr=Contact."Fax No." }

    { 17  ;3   ;Column  ;PhoneNo_Contact     ;
               IncludeCaption=No;
               SourceExpr=Contact."Phone No." }

    { 19  ;3   ;Column  ;Sell_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header Archive"."Sell-to Customer No." }

    { 20  ;3   ;Column  ;DocumentDate_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header Archive"."Document Date" }

    { 21  ;3   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="Sales Header Archive"."No." }

    { 22  ;3   ;Column  ;ReportForNavPageNo  ;
               IncludeCaption=No;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 23  ;3   ;Column  ;KopieText           ;
               IncludeCaption=No;
               SourceExpr=KopieText }

    { 24  ;3   ;Column  ;Anschrift9          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[9] }

    { 25  ;3   ;Column  ;Anschrift8          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[8] }

    { 26  ;3   ;Column  ;Anschrift7          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[7] }

    { 27  ;3   ;Column  ;Anschrift6          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[6] }

    { 28  ;3   ;Column  ;Anschrift5          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[5] }

    { 29  ;3   ;Column  ;Anschrift4          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[4] }

    { 30  ;3   ;Column  ;Anschrift3          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[3] }

    { 18  ;3   ;Column  ;Anschrift2          ;
               SourceExpr=Anschrift[2] }

    { 31  ;3   ;Column  ;Anschrift1          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[1] }

    { 32  ;3   ;Column  ;ihre_ref            ;
               IncludeCaption=No;
               SourceExpr=ihre_ref }

    { 33  ;3   ;Column  ;SalesHeaderStatus   ;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Header Archive".Status) }

    { 34  ;3   ;Column  ;CurrencyFactor_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header Archive"."Currency Factor" }

    { 35  ;3   ;Column  ;Einkaufswahrungsfaktor_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive".Einkaufsw„hrungsfaktor }

    { 36  ;3   ;Column  ;Einkaufswahrungscode_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive".Einkaufsw„hrungscode }

    { 37  ;3   ;Column  ;CurrencyCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header Archive"."Currency Code" }

    { 1000000003;3;Column;system_preisbindung;
               IncludeCaption=No;
               SourceExpr=system_preisbindung }

    { 38  ;3   ;DataItem;                    ;
               DataItemTable=Table5108;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  Einkaufsw„hrungskurs := WechKursBetrag (WORKDATE, Einkaufsw„hrungscode, Einkaufsw„hrungsfaktor);
                                END;

               DataItemLinkReference=Sales Header Archive;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.),
                            Doc. No. Occurrence=FIELD(Doc. No. Occurrence),
                            Version No.=FIELD(Version No.) }

    { 39  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MehrZeilen := SalesLineArchTmp.FIND('+');
                               WHILE MehrZeilen AND (SalesLineArchTmp.Description = '') AND (SalesLineArchTmp."Description 2" = '') AND
                                     (SalesLineArchTmp."No." = '') AND (SalesLineArchTmp.Quantity = 0) AND
                                     (SalesLineArchTmp.Amount = 0)
                               DO
                                 MehrZeilen := SalesLineArchTmp.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SalesLineArchTmp.SETRANGE("Line No.",0,SalesLineArchTmp."Line No.");
                               SETRANGE(Number,1,SalesLineArchTmp.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    SalesLineArchTmp.FIND('-')
                                  ELSE
                                    SalesLineArchTmp.NEXT;
                                  "Sales Line Archive" := SalesLineArchTmp;
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "Sales Line Archive"."VAT %";
                                  MWSTBetragZeile."VAT Base" := "Sales Line Archive".Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Sales Line Archive"."Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;

                                  lead_symbol := '';
                                  lead_text := '';
                                  IF NOT Artikel.GET("Sales Line Archive"."No.") THEN
                                    Artikel.INIT
                                  ELSE BEGIN
                                    //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                    IF (Artikel."Lead Free" = FALSE) AND (Artikel."Item Tracking Code" = 'DATECODE') THEN BEGIN
                                      lead_symbol := 'ø';
                                      lead_text := BleifreiText;
                                    END;
                                  END;

                                  LieferText := "Sales Line Archive".LZ_Text;

                                  IF v_FER_SPL = FALSE THEN BEGIN
                                    IF (("Sales Line Archive"."Manufacturer Code" = '82') OR ("Sales Line Archive"."Manufacturer Code" = '85')) THEN BEGIN
                                    v_FER_SPL := TRUE;
                                    END;
                                  END;

                                  //10.07.15 ST - MSRP Andruck fr Systeme, anstatt VPE
                                  msrp := 0;
                                  msrp_w„h := 'USD';
                                  IF v_system = TRUE THEN BEGIN
                                    WITH FindSalesPrice DO BEGIN
                                      SETRANGE("Item No.","Sales Line Archive"."No.");
                                      SETFILTER("Ending Date",'%1|>=%2',0D,WORKDATE);
                                      //SETFILTER("Currency Code",'%1',"Sales Header Archive"."Currency Code");
                                      SETFILTER("Currency Code",'%1',msrp_w„h);
                                      IF "Sales Line Archive"."Unit of Measure" <> '' THEN
                                        SETFILTER("Unit of Measure Code",'%1|%2',"Sales Line Archive"."Unit of Measure",'');
                                      SETRANGE("Starting Date",0D,WORKDATE);
                                      SETRANGE("Sales Type","Sales Type"::"All Customers");
                                      SETRANGE("Sales Code");
                                      IF FINDLAST THEN
                                        msrp := FindSalesPrice."Unit Price";
                                    END;
                                  END;

                                  //03.07.18 ST - Andruck des Hinweises, dass noch keine ADV vorliegt, diese aber fr CHAMPS erforderlich ist
                                  IF (Customer.ADV = FALSE) AND (Customer."Territory Code" = 'SYSTEM') THEN BEGIN
                                    IF ("Sales Line Archive".Type = "Sales Line Archive".Type::Item) AND (Artikel.GET("Sales Line Archive"."No.") AND (Artikel."Software Upgrade Protection")) THEN
                                      TroubleshootingSetup.SETRANGE(Type,TroubleshootingSetup.Type::Item);
                                      TroubleshootingSetup.SETRANGE("No.",Artikel."No.");
                                      TroubleshootingSetup.SETRANGE("Troubleshooting No.",'CHAMPS');
                                      IF TroubleshootingSetup.FINDFIRST THEN
                                        adv_andruck_notwendig := TRUE;
                                    IF (STRPOS("Sales Line Archive"."Artikelnr. 2",'STUNDENSATZ') <> 0) OR (STRPOS("Sales Line Archive"."Artikelnr. 2",'TAGESSATZ') <> 0) THEN
                                      adv_andruck_notwendig := TRUE;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                SalesLineArchTmp.DELETEALL;
                              END;
                               }

    { 40  ;4   ;Column  ;Kontaktperson_kopie_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header Archive"."Kontaktperson (kopie)" }

    { 41  ;4   ;Column  ;Text1               ;
               IncludeCaption=No;
               SourceExpr=Text1 }

    { 42  ;4   ;Column  ;Text1_SalesHeader   ;
               IncludeCaption=No;
               SourceExpr="Sales Header Archive".Text1 }

    { 43  ;4   ;Column  ;Text2_SalesHeader   ;
               IncludeCaption=No;
               SourceExpr="Sales Header Archive".Text2 }

    { 44  ;4   ;Column  ;Preis_info          ;
               IncludeCaption=No;
               SourceExpr=Preis_info }

    { 45  ;4   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive".Description }

    { 47  ;4   ;Column  ;LineNo_VerkZeile    ;
               IncludeCaption=No;
               SourceExpr=SalesLineArchTmp."Line No." }

    { 48  ;4   ;Column  ;Verpackungsmenge_Artikel;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Artikel.Verpackungsmenge }

    { 49  ;4   ;Column  ;UnitPrice_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Header Archive"."Currency Code" }

    { 51  ;4   ;Column  ;Quantity_SalesLine  ;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive".Quantity }

    { 52  ;4   ;Column  ;Artikelnr2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive"."Artikelnr. 2" }

    { 53  ;4   ;Column  ;SalesLineQuantity_SalesLineUnitPrice;
               IncludeCaption=No;
               SourceExpr=("Sales Line Archive".Quantity*"Sales Line Archive"."Unit Price") }

    { 54  ;4   ;Column  ;msrp                ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=msrp }

    { 55  ;4   ;Column  ;Description2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive"."Description 2" }

    { 56  ;4   ;Column  ;WEEE_Reg_Nr__ArtikelWEEE_Reg_Nr;
               IncludeCaption=No;
               SourceExpr='WEEE-Reg.-Nr.: '+ Artikel."WEEE-Reg.-Nr." }

    { 57  ;4   ;Column  ;Cross_ReferenceNo_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive"."Cross-Reference No." }

    { 58  ;4   ;Column  ;Quotenr_SalesLine   ;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive"."Quotenr." }

    { 59  ;4   ;Column  ;ProfitPct_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive"."Profit %" }

    { 60  ;4   ;Column  ;VK_Preis_MW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive"."VK-Preis (MW)" }

    { 61  ;4   ;Column  ;DC_Preis_Wahrung_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive"."DC-Preis (W„hrung)" }

    { 62  ;4   ;Column  ;DC_Preis_MW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive"."DC-Preis (MW)" }

    { 63  ;4   ;Column  ;ZollsatzPct_Artikel ;
               IncludeCaption=No;
               SourceExpr=Artikel."Zollsatz %" }

    { 64  ;4   ;Column  ;DC_Preis_EKW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive"."DC-Preis (EKW)" }

    { 65  ;4   ;Column  ;VK_Preis_EKW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive"."VK-Preis (EKW)" }

    { 66  ;4   ;Column  ;HandlingskostenPct_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line Archive"."Handlingskosten %" }

    { 46  ;4   ;Column  ;lead_symbol         ;
               SourceExpr=lead_symbol }

    { 70  ;4   ;Column  ;lead_text           ;
               IncludeCaption=No;
               SourceExpr=lead_text }

    { 71  ;4   ;Column  ;wahrung             ;
               IncludeCaption=No;
               SourceExpr=w„hrung }

    { 72  ;4   ;Column  ;v_sum_system        ;
               IncludeCaption=No;
               SourceExpr=v_sum_system }

    { 73  ;4   ;Column  ;minbestellwert      ;
               IncludeCaption=No;
               SourceExpr=minbestellwert }

    { 74  ;4   ;Column  ;preisstellung       ;
               IncludeCaption=No;
               SourceExpr=preisstellung }

    { 75  ;4   ;Column  ;versand             ;
               IncludeCaption=No;
               SourceExpr=versand }

    { 50  ;4   ;Column  ;LieferText          ;
               SourceExpr=LieferText }

    { 76  ;4   ;Column  ;STRSUBSTNO__Pct1_ZlgBedDescription;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO('%1',ZlgBed.Description) }

    { 77  ;4   ;Column  ;STRSUBSTNO__inEURzumTageskursderLieferung;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO(':   in EUR zum Tageskurs der Lieferung') }

    { 78  ;4   ;Column  ;STRSUBSTNO__1EUR_Pct1Pct2Rechnungsstellungerfolgt_SalesHeade;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO(':   1 EUR=%1 %2 Rechnungsstellung erfolgt', "Sales Header Archive"."Euro-Parit„tsw„hrungscode", "Sales Header Archive"."Euro-Parit„tsw„hrungsfaktor") }

    { 79  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Header Archive;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 80  ;3   ;DataItem;Unterschrift2       ;
               DataItemTable=Table18;
               DataItemLinkReference=Sales Header Archive;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 81  ;4   ;Column  ;VerkauferTextInnen  ;
               IncludeCaption=No;
               SourceExpr=Verk„uferTextInnen }

    { 82  ;4   ;Column  ;VerkauferText       ;
               IncludeCaption=No;
               SourceExpr=Verk„uferText }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   v_total_drucken:=FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 2   ;2   ;Field     ;
                  CaptionML=DEU=2. Unterschrift;
                  SourceExpr=Unterzeichner2 }

      { 1140002;2;Field     ;
                  CaptionML=DEU=Totalbetrag drucken;
                  SourceExpr=v_total_drucken }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      LieferBed@1140001 : Record 10;
      ZlgBed@1140002 : Record 3;
      VerkEinkPerson@1140003 : Record 13;
      Firmendaten@1140004 : Record 79;
      MWSTBetragZeile@1140005 : TEMPORARY Record 290;
      SalesLineArchTmp@1140006 : TEMPORARY Record 5108;
      SalesLineArchive@1000000008 : Record 5108;
      W„hrungsWechKurs@1000000005 : Record 330;
      Artikel@1000000004 : Record 27;
      Deb@1000000003 : Record 18;
      VerkEinkPersonInnen@1000000002 : Record 13;
      FindSalesPrice@1000000010 : Record 7002;
      Language@1000000006 : Record 8;
      Benutzer@1000000012 : Record 2000000120;
      TroubleshootingSetup@1000000017 : Record 5945;
      SalutationFormula@1000000020 : Record 5069;
      VerkDruckZ„hler@1140007 : Codeunit 322;
      FormatAdr@1000000011 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      DebAdr@1000000021 : ARRAY [8] OF Text[50];
      Anschrift@1000000007 : ARRAY [9] OF Text[50];
      CompanyInfo@1000000013 : ARRAY [15] OF Text;
      Verk„uferText@1140014 : Text[100];
      MWStNrText@1140015 : Text[30];
      ReferenzText@1140016 : Text[30];
      TotalText@1140017 : Text[50];
      TotalInklMWStText@1140018 : Text[50];
      MehrZeilen@1140019 : Boolean;
      AnzKopien@1140020 : Integer;
      AnzSchleifen@1140021 : Integer;
      KopieText@1140022 : Text[30];
      i@1140024 : Integer;
      Einkaufsw„hrungskurs@1140030 : Decimal;
      Verkaufsw„hrungskurs@1140031 : Decimal;
      PreisText@1140033 : Text[30];
      LieferText@1140034 : Text[30];
      AngebotsText@1140036 : Text[100];
      Verk„uferTextInnen@1140037 : Text[100];
      Verk„uferText1@1140038 : Text[100];
      Verk„uferText2@1140039 : Text[100];
      Verk„uferText1Innen@1140040 : Text[100];
      Verk„uferText2Innen@1140041 : Text[100];
      Text1@1140042 : Text[90];
      text2@1140043 : Text[90];
      Text3@1140070 : Text[90];
      w„hrung@1140044 : Text[10];
      Unterzeichner1@1140045 : Text[10];
      Unterzeichner2@1140046 : Text[10];
      versand@1140048 : Text[100];
      minbestellwert@1140049 : Text[30];
      lead_free_text0@1140050 : Text[80];
      lead_free_text1@1140051 : Text[120];
      leadfree_symbol@1140052 : Text[3];
      leadfree_artikel@1140053 : Record 27;
      lead_artikel@1140077 : Record 27;
      lead_symbol@1140079 : Text[3];
      lead_text@1140078 : Text[120];
      lead_free_text2@1140054 : Text[120];
      Faxnummer@1140055 : TextConst 'DEU=@@NMR +49 5119686464@@';
      Faxpriorit„t@1140056 : TextConst 'DEU=@@PRI 0@@';
      Faxaufl”sung@1140057 : TextConst 'DEU=@@AFL HOCH@@';
      Faxzustellbest„tigung@1140058 : TextConst 'DEU=@@ZSB 1@@';
      Faxparameter@1140059 : Text[210];
      Faxbetreff@1140060 : Text[100];
      ansp_fax@1140061 : Text[30];
      ansp_telefon@1140062 : Text[30];
      ansp_anrede@1140063 : Text[40];
      ihre_ref@1140064 : Text[90];
      preisstellung@1140065 : Text[60];
      Preis_info@1140066 : Text[45];
      NamePart@1140072 : ARRAY [5] OF Text[50];
      Text000@1000000000 : TextConst 'DEU=Fehlende Zuordnung zwischen %1 (%2) und %3 in der Tabelle %4. Bitte wenden Sie sich an Ihren Systemadministrator.';
      Text002@1000000019 : TextConst 'DEU=in %1 zzgl. MwSt;ENU=in %1 plus V.A.T. if applicable';
      Text021@1140073 : TextConst 'DEU=Sie mssen formelle und informelle Anredeformeln in der Sprache %1 fr den Kontakt %2 einrichten.;ENU=You have to set up formal and informal salutation formulas in %1  language for the %2 contact.';
      Zusatz@1140074 : Text[30];
      x@1140075 : Integer;
      ende@1140076 : Boolean;
      v_FER_SPL@1140080 : Boolean;
      v_system@1140081 : Boolean;
      v_sum_system@1140083 : Decimal;
      v_total_drucken@1140084 : Boolean;
      msrp@1140086 : Decimal;
      msrp_w„h@1000000014 : Code[10];
      system_preisbindung@1000000015 : Text;
      adv_andruck_notwendig@1000000018 : Boolean;
      BleifreiText@1000000009 : TextConst 'DEU=ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.;ENU=ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
      SysPreisbindungsText@1000000016 : TextConst 'DEU=Die Konditionen basieren auf Basis der aktuellen Preisliste und sind gltig bis\    zur n„chsten Žnderung durch den Hersteller - gilt nur fr USD.;ENU=:    USD Conditions/Offers are based on current pricebook and valid to\   next change due to the manufacturer.';
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer2@5037(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(adv_andruck_notwendig);
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer1@5036(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         ReportForNav.ShowOutput(system_preisbindung <> '');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header2@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ihre_ref := '';
        IF "Sales Header Archive"."External Document No." <> '' THEN ihre_ref := "Sales Header Archive"."External Document No." + ' ';
        IF "Sales Header Archive"."Your Reference" <> '' THEN ihre_ref := ihre_ref + "Sales Header Archive"."Your Reference";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header3@5011(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput ("Sales Header Archive".Status <> "Sales Header Archive".Status::Released);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header4@5012(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput ("Sales Header Archive".Status <> "Sales Header Archive".Status::Released);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header6@5013(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Sales Header Archive"."Kontaktperson (kopie)" <> '') AND (ReportForNav.PageNo = 1));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header7@5014(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((ReportForNav.PageNo = 1) AND ("Sales Header Archive".Text1 = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header8@5015(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Sales Header Archive".Text1 <> '') AND (ReportForNav.PageNo = 1));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header9@5016(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(v_system = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header10@5017(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
          ReportForNav.ShowOutput(v_system = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body11@5018(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(SalesLineArchTmp.Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body12@5019(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(SalesLineArchTmp.Type = SalesLineArchTmp.Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body13@5020(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((SalesLineArchTmp.Type = SalesLineArchTmp.Type::Item) AND (v_system = FALSE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body14@5021(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(SalesLineArchTmp.Type = SalesLineArchTmp.Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body15@5022(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((SalesLineArchTmp.Type = SalesLineArchTmp.Type::Item) AND (v_system = TRUE));
         IF ((SalesLineArchTmp.Type = SalesLineArchTmp.Type::Item) AND (v_system = TRUE)) THEN
           v_sum_system := v_sum_system + ("Sales Line Archive".Quantity * "Sales Line Archive"."Unit Price");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body16@5023(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(SalesLineArchTmp."Description 2" <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body17@5024(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Artikel."WEEE-Reg.-Nr." <>'');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body18@5025(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput("Sales Line Archive"."Cross-Reference No."<> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body19@5026(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((Artikel.NCNR = TRUE) AND (SalesLineArchTmp."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body20@5027(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //Das Feld Angebotsstatus gibt es nicht mehr in NAV 2016
        //ReportForNav.ShowOutput (("Sales Header Archive".Angebotsstatus <> '') AND
        //  (SalesLineArchTmp.Type = SalesLineArchTmp.Type::Item));
        ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer24@5031(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer26@5032(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((v_system = TRUE) AND (v_total_drucken = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer28@5033(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer32@5034(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput("Sales Header Archive"."Euro-Parit„tsw„hrungscode" <> '')
      END;
    END;

    LOCAL PROCEDURE OnPreSectionUnterschrift2_Body33@5035(VAR Unterschrift2@1000000000 : Record 18);
    BEGIN
      Benutzer.RESET;
      Benutzer.SETRANGE("User Name",USERID);
      Benutzer.FINDFIRST;
      IF (Benutzer."Salesperson Code" = '') THEN
        ERROR(Text000,Benutzer.FIELDCAPTION("User Name"),USERID,Benutzer.FIELDCAPTION("Salesperson Code"),Benutzer.TABLECAPTION);
      WITH Unterschrift2 DO BEGIN
        Verk„uferText1 := '';
        Verk„uferText2 := '';
        IF Unterzeichner2 = '' THEN BEGIN
          IF VerkEinkPerson.GET(Benutzer."Salesperson Code") THEN
          CASE VerkEinkPerson."Commercial procuration" OF
              VerkEinkPerson."Commercial procuration"::Nein: Zusatz := 'i.A.';
              VerkEinkPerson."Commercial procuration"::Prokura: Zusatz := 'ppa.';
              VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz := '';
          END;
          Verk„uferText := Zusatz + ' ' + VerkEinkPerson."First name" + ' ' + VerkEinkPerson.Name;
          Verk„uferTextInnen := '';
        END ELSE BEGIN
          IF VerkEinkPerson.GET(Benutzer."Salesperson Code") THEN
            CASE VerkEinkPerson."Commercial procuration" OF
                VerkEinkPerson."Commercial procuration"::Nein: Zusatz := 'i.A.';
                VerkEinkPerson."Commercial procuration"::Prokura: Zusatz := 'ppa.';
                VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz := '';
            END;
        Verk„uferTextInnen := Zusatz + ' ' + VerkEinkPerson."First name" + ' ' + VerkEinkPerson.Name;
        IF VerkEinkPerson.GET(Unterzeichner2) THEN
          CASE VerkEinkPerson."Commercial procuration" OF
              VerkEinkPerson."Commercial procuration"::Nein: Zusatz := 'i.A.';
              VerkEinkPerson."Commercial procuration"::Prokura: Zusatz := 'ppa.';
              VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz := '';
          END;
        Verk„uferText := Zusatz + ' ' + VerkEinkPerson."First name" + ' ' + VerkEinkPerson.Name;
        END;
      END;
    END;

    PROCEDURE WechKursBetrag@2(Datum@1140000 : Date;W„hrungCode@1140001 : Code[10];W„hrungFaktor@1140002 : Decimal) : Decimal;
    VAR
      BezugAufWechselkursbetr@1140003 : Decimal;
      WechselkursBetr@1140004 : Decimal;
      BezugAufW„hrungscode@1140005 : Code[10];
      FesterWechselkursBetr@1140006 : Option;
    BEGIN
      IF W„hrungCode = '' THEN
        EXIT(1);
      W„hrungsWechKurs.FindCurrency(Datum,W„hrungCode,1);
      W„hrungsWechKurs.TESTFIELD("Exchange Rate Amount");
      W„hrungsWechKurs.TESTFIELD("Relational Exch. Rate Amount");
      BezugAufWechselkursbetr := W„hrungsWechKurs."Relational Exch. Rate Amount";
      WechselkursBetr := W„hrungsWechKurs."Exchange Rate Amount";
      BezugAufW„hrungscode := W„hrungsWechKurs."Relational Currency Code";
      IF W„hrungsWechKurs."Relational Currency Code" = '' THEN
        W„hrungsWechKurs."Exchange Rate Amount" := W„hrungFaktor * W„hrungsWechKurs."Relational Exch. Rate Amount"
      ELSE BEGIN
        W„hrungsWechKurs.FindCurrency(Datum,BezugAufW„hrungscode,2);
        W„hrungsWechKurs.TESTFIELD("Exchange Rate Amount");
        W„hrungsWechKurs.TESTFIELD("Relational Exch. Rate Amount");
        W„hrungsWechKurs."Exchange Rate Amount" := (W„hrungFaktor *
          (BezugAufWechselkursbetr * W„hrungsWechKurs."Relational Exch. Rate Amount"));
      END;
      EXIT(W„hrungsWechKurs."Exchange Rate Amount");
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header2': OnPreSectionSeiteSchleife_Header2(SeiteSchleife);
          'Header3': OnPreSectionSeiteSchleife_Header3(SeiteSchleife);
          'Header4': OnPreSectionSeiteSchleife_Header4(SeiteSchleife);
        END;
        'RundungsRahmen': CASE SectionId OF
          'Header6': OnPreSectionRundungsRahmen_Header6(RundungsRahmen);
          'Header7': OnPreSectionRundungsRahmen_Header7(RundungsRahmen);
          'Header8': OnPreSectionRundungsRahmen_Header8(RundungsRahmen);
          'Header9': OnPreSectionRundungsRahmen_Header9(RundungsRahmen);
          'Header10': OnPreSectionRundungsRahmen_Header10(RundungsRahmen);
          'Body11': OnPreSectionRundungsRahmen_Body11(RundungsRahmen);
          'Body12': OnPreSectionRundungsRahmen_Body12(RundungsRahmen);
          'Body13': OnPreSectionRundungsRahmen_Body13(RundungsRahmen);
          'Body14': OnPreSectionRundungsRahmen_Body14(RundungsRahmen);
          'Body15': OnPreSectionRundungsRahmen_Body15(RundungsRahmen);
          'Body16': OnPreSectionRundungsRahmen_Body16(RundungsRahmen);
          'Body17': OnPreSectionRundungsRahmen_Body17(RundungsRahmen);
          'Body18': OnPreSectionRundungsRahmen_Body18(RundungsRahmen);
          'Body19': OnPreSectionRundungsRahmen_Body19(RundungsRahmen);
          'Body20': OnPreSectionRundungsRahmen_Body20(RundungsRahmen);
          'Footer24': OnPreSectionRundungsRahmen_Footer24(RundungsRahmen);
          'Footer26': OnPreSectionRundungsRahmen_Footer26(RundungsRahmen);
          'Footer28': OnPreSectionRundungsRahmen_Footer28(RundungsRahmen);
          'Footer1': OnPreSectionRundungsRahmen_Footer1(RundungsRahmen);
          'Footer2': OnPreSectionRundungsRahmen_Footer2(RundungsRahmen);
          'Footer32': OnPreSectionRundungsRahmen_Footer32(RundungsRahmen);
        END;
        'Unterschrift2': CASE SectionId OF
          'Body33': OnPreSectionUnterschrift2_Body33(Unterschrift2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,SalesLineArchTmp.Amount);
                ReportForNav.AddTotal(DataItemId,1,SalesLineArchTmp."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,SalesLineArchTmp."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 SalesLineArchTmp.Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 SalesLineArchTmp."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 SalesLineArchTmp."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

