OBJECT Report 50085 TOPAS Auftragsbestand
{
  OBJECT-PROPERTIES
  {
    Date=15.05.17;
    Time=13:22:04;
    Modified=Yes;
    Version List=FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  //*******************************************************************************************************
                  //                    Sicherheitsabfrage ob Temp Tabelle auch Berichtstabelle ist
                  //*******************************************************************************************************
                  IF Berichtstabelle.TABLECAPTION <> 'Berichtstabelle' THEN
                    ERROR('Eine Sicherheitssperre verhindert die Ausfhrung dieses Berichtes.'+
                          'Stellen Sie sicher, dass die TABLECAPTION der Berichtstabelle auch auf Berichtstabelle lautet.');
                  Berichtstabelle.RESET;
                  IF Berichtstabelle.ISEMPTY = FALSE THEN
                    BEGIN
                      REPEAT
                        Berichtstabelle.RESET;
                        IF Berichtstabelle.ISEMPTY = FALSE THEN
                          BEGIN
                            SLEEP(500);
                            counter += 1;
                          END;
                        IF counter MOD 30 = 0 THEN
                          BEGIN
                            Berichtstabelle.FINDFIRST;
                            IF CONFIRM('Die Berichtstabelle ist seit %1 durch Anwender %2 gesperrt. Wollen Sie die Anwendung abbrechen?',
                            TRUE,Berichtstabelle.Uhrzeit,Berichtstabelle.User,counter,TRUE) THEN
                              ERROR('');
                          END;
                      UNTIL Berichtstabelle.ISEMPTY = TRUE;
                    END;
                  //*******************************************************************************************************
                  //                                 Akt. Auftr„ge werden durchsucht
                  //*******************************************************************************************************
                  SalesHeader.RESET;
                  IF (Startdatum<>0D) AND (Enddatum=0D) THEN
                    SalesHeader.SETFILTER(SalesHeader."Order Date",'>=%1',Startdatum);
                  IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
                    SalesHeader.SETFILTER(SalesHeader."Order Date",'>=%1&<=%2',Startdatum,Enddatum);
                  IF (Startdatum=0D) AND (Enddatum<>0D) THEN
                    SalesHeader.SETFILTER(SalesHeader."Order Date",'<=%1',Enddatum);
                  SalesHeader.SETFILTER("Betreuer Innendienst",betreuer);
                  SalesHeader.SETFILTER("Salesperson Code",verk„ufer);
                  SalesHeader.SETFILTER(Teams,teams);
                  SalesHeader.SETFILTER("Territory Code",gebietscode);
                  SalesHeader.SETFILTER(SalesHeader."Document Type",'%1',SalesHeader."Document Type" :: Order);
                  IF SalesHeader.FIND('-') THEN
                    REPEAT
                      belegzeilen_vorhanden := FALSE;
                      SalesLine.RESET;
                      SalesLine.SETFILTER(SalesLine."Document No.",SalesHeader."No.");
                      SalesLine.SETFILTER(SalesLine.Type,'%1',SalesLine.Type :: Item);
                      SalesLine.SETFILTER(SalesLine."Outstanding Quantity",'>%1',0);
                      SalesLine.SETFILTER(SalesLine."Manufacturer Code",hersteller);
                      IF (zugesagtes_startdatum <> 0D) AND (zugesagtes_enddatum = 0D) THEN
                        SalesLine.SETFILTER(SalesLine."Promised Delivery Date",'>=%1',zugesagtes_startdatum);
                      IF (zugesagtes_startdatum <> 0D) AND (zugesagtes_enddatum <> 0D) THEN
                        SalesLine.SETFILTER(SalesLine."Promised Delivery Date",'>=%1&<=%2',zugesagtes_startdatum,zugesagtes_enddatum);
                      IF (zugesagtes_startdatum = 0D) AND (zugesagtes_enddatum <> 0D) THEN
                        SalesLine.SETFILTER(SalesLine."Promised Delivery Date",'<=%1',zugesagtes_enddatum);
                      IF SalesLine.FINDFIRST THEN
                        BEGIN
                          belegzeilen_vorhanden := TRUE;
                          Berichtstabelle_temp.RESET;
                          Berichtstabelle_temp.SETFILTER(Tabelle,'%1','DEBITOR');
                          Berichtstabelle_temp.SETFILTER(Index,'%1',SalesHeader."Sell-to Customer No.");
                          IF NOT Berichtstabelle_temp.FINDFIRST THEN
                            BEGIN
                              //*******************************************************************************************************
                              //                                     Debitor Daten schreiben
                              //*******************************************************************************************************
                              Berichtstabelle.INIT;
                                Berichtstabelle.Tabelle := 'DEBITOR';
                                Berichtstabelle.Index := SalesHeader."Sell-to Customer No.";
                                Berichtstabelle."Feld 10" := SalesHeader."Sell-to Customer Name";
                                Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                                Berichtstabelle.User := USERID;
                              Berichtstabelle.INSERT;
                            END;
                          REPEAT
                            //*******************************************************************************************************
                            //                                      Auftragszeilen schreiben
                            //*******************************************************************************************************
                            Berichtstabelle.INIT;
                              Berichtstabelle.Tabelle := 'BELEGZEILE';
                              Berichtstabelle.Index := SalesLine."Document No.";
                              Berichtstabelle.Datum := SalesLine."Promised Delivery Date";
                              Berichtstabelle."Belegnr." := SalesLine."Document No.";
                              Berichtstabelle."Zeilennr." := SalesLine."Line No.";
                              Berichtstabelle."Feld 3" := SalesLine."Artikelnr. 2";
                              Berichtstabelle."Feld 4" := SalesLine."Outstanding Quantity";
                              Berichtstabelle."Feld 5" := SalesLine."Unit Price";
                              IF Quotedaten.GET(SalesLine."Quotenr.") THEN
                                Berichtstabelle."Feld 6" := Quotedaten."Quotenr. Hersteller";
                              IF SalesHeader."Currency Code" = '' THEN
                                Berichtstabelle."Feld 7" := '°'
                              ELSE
                                Berichtstabelle."Feld 7" := SalesHeader."Currency Code";
                              Berichtstabelle."Feld 10" := FORMAT(SalesLine."Outstanding Quantity" * SalesLine."Unit Price");
                              Berichtstabelle."Feld 11" := FORMAT(SalesLine."Requested Delivery Date");
                              Berichtstabelle."Feld 12" := FORMAT(ROUND(SalesLine."Profit %",0.01));
                              Berichtstabelle."Feld 13" := FORMAT(ROUND(SalesLine."Unit Cost (LCY)",0.01));
                                Berichtstabelle."Feld 14" := FORMAT(SalesLine.Quantity);
                              Berichtstabelle."Feld 15" := FORMAT(RckstandMenge);
                              Berichtstabelle."Feld 16" := FORMAT(SalesHeader."Currency Factor");
                              Berichtstabelle."Feld 18" := SalesLine."Shipment Date";
                              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                              Berichtstabelle.User := USERID;
                            Berichtstabelle.INSERT;
                          UNTIL SalesLine.NEXT = 0;
                        END;
                      //*******************************************************************************************************
                      //     Nachtr„glich alle anderen Daten schreiben, wenn auch wirklich Auftragszeilen vorhanden sind
                      //*******************************************************************************************************
                      IF belegzeilen_vorhanden THEN
                        BEGIN
                          //Auftragskopf
                          Berichtstabelle.INIT;
                            Berichtstabelle.Tabelle := 'BELEGKOPF';
                            Berichtstabelle.Index := SalesHeader."No.";
                            Berichtstabelle.Datum := SalesHeader."Order Date";
                            Berichtstabelle."Belegnr." := SalesHeader."No.";
                            Berichtstabelle."Feld 2" := SalesHeader."Sell-to Customer No.";
                            SalesHeader.CALCFIELDS(Amount);
                            Berichtstabelle."Feld 4" := SalesHeader.Amount;
                            Berichtstabelle."Feld 6" := SalesHeader."Betreuer Innendienst";
                            Berichtstabelle."Feld 7" := SalesHeader."Salesperson Code";
                            Berichtstabelle."Feld 8" := SalesHeader.Teams;
                            Berichtstabelle."Feld 9" := SalesHeader."Territory Code";
                            IF SalesHeader."Currency Code" <> '' THEN
                              Berichtstabelle."Feld 12" := SalesHeader."Currency Code"
                            ELSE
                              Berichtstabelle."Feld 12" := '°';
                            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                            Berichtstabelle.User := USERID;
                          Berichtstabelle.INSERT;
                        END;
                    UNTIL SalesHeader.NEXT = 0;
                  IF (zugesagtes_startdatum = 0D) AND (zugesagtes_enddatum = 0D) THEN
                    BEGIN
                      //*******************************************************************************************************
                      //                                 Archivierte Auftr„ge werden durchsucht
                      //*******************************************************************************************************
                      IF ohne_archiv = TRUE THEN
                        EXIT;
                      ArchSalesHeader.RESET;
                      IF (Startdatum<>0D) AND (Enddatum=0D) THEN
                        ArchSalesHeader.SETFILTER(ArchSalesHeader."Order Date",'>=%1',Startdatum);
                      IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
                        ArchSalesHeader.SETFILTER(ArchSalesHeader."Order Date",'>=%1&<=%2',Startdatum,Enddatum);
                      IF (Startdatum=0D) AND (Enddatum<>0D) THEN
                        ArchSalesHeader.SETFILTER(ArchSalesHeader."Order Date",'<=%1',Enddatum);
                      ArchSalesHeader.SETFILTER("Betreuer Innendienst",betreuer);
                      ArchSalesHeader.SETFILTER("Salesperson Code",verk„ufer);
                      ArchSalesHeader.SETFILTER(Teams,teams);
                      ArchSalesHeader.SETFILTER("Territory Code",gebietscode);
                      ArchSalesHeader.SETFILTER(ArchSalesHeader."Document Type",'%1',ArchSalesHeader."Document Type" :: Order);
                      IF ArchSalesHeader.FIND('-') THEN
                        REPEAT
                          arch_belegzeilen_vorhanden := FALSE;
                          ArchSalesLine.RESET;
                          ArchSalesLine.SETFILTER(ArchSalesLine."Document No.",ArchSalesHeader."No.");
                          ArchSalesLine.SETFILTER(ArchSalesLine.Type,'%1',ArchSalesLine.Type :: Item);
                          //ArchSalesLine.SETFILTER(ArchSalesLine."Outstanding Quantity",'>%1',0);
                          ArchSalesLine.SETFILTER(ArchSalesLine."Manufacturer Code",hersteller);
                          ArchSalesLine.SETFILTER("Version No.",'%1',ArchSalesHeader."Version No.");
                          IF ArchSalesLine.FINDFIRST THEN
                            BEGIN
                              arch_belegzeilen_vorhanden := TRUE;
                              Berichtstabelle_temp.RESET;
                              Berichtstabelle_temp.SETFILTER(Tabelle,'%1','ARCH_DEBITOR');
                              Berichtstabelle_temp.SETFILTER(Index,'%1',ArchSalesHeader."Sell-to Customer No.");
                              IF NOT Berichtstabelle_temp.FINDFIRST THEN
                                BEGIN
                                  //*******************************************************************************************************
                                  //                                     Debitor Daten schreiben
                                  //*******************************************************************************************************
                                  Berichtstabelle.INIT;
                                    Berichtstabelle.Tabelle := 'ARCH_DEBITOR';
                                    Berichtstabelle.Index := ArchSalesHeader."Sell-to Customer No.";
                                    Berichtstabelle."Feld 10" := ArchSalesHeader."Sell-to Customer Name";
                                    Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                                    Berichtstabelle.User := USERID;
                                  Berichtstabelle.INSERT;
                                END;
                              REPEAT
                                //*******************************************************************************************************
                                //                                 Archivierte Auftragszeilen schreiben
                                //*******************************************************************************************************
                                Berichtstabelle.INIT;
                                  Berichtstabelle.Tabelle := 'ARCH_BELEGZEILE';
                                  Berichtstabelle.Index := ArchSalesLine."Document No.";
                                  Berichtstabelle.Datum := ArchSalesLine."Promised Delivery Date";
                                  Berichtstabelle."Belegnr." := ArchSalesLine."Document No.";
                                  Berichtstabelle."Zeilennr." := ArchSalesLine."Line No.";
                                  Berichtstabelle."Feld 3" := ArchSalesLine."Artikelnr. 2";
                                  Berichtstabelle."Feld 4" := ArchSalesLine.Quantity;
                                  Berichtstabelle."Feld 5" := ArchSalesLine."Unit Price";
                                  IF Quotedaten.GET(ArchSalesLine."Quotenr.") THEN
                                    Berichtstabelle."Feld 6" := Quotedaten."Quotenr. Hersteller";
                                  IF ArchSalesHeader."Currency Code" = '' THEN
                                    Berichtstabelle."Feld 7" := '°'
                                  ELSE
                                    Berichtstabelle."Feld 7" := ArchSalesHeader."Currency Code";
                                  Berichtstabelle."Feld 10" := FORMAT(ArchSalesLine."Outstanding Quantity" * ArchSalesLine."Unit Price");
                                  Berichtstabelle."Feld 11" := FORMAT(ArchSalesLine."Requested Delivery Date");
                                  Berichtstabelle."Feld 12" := FORMAT(ROUND(ArchSalesLine."Profit %",0.01));
                                  Berichtstabelle."Feld 13" := FORMAT(ROUND(ArchSalesLine."Unit Cost (LCY)",0.01));
                                  Berichtstabelle."Feld 16" := FORMAT(ArchSalesHeader."Currency Factor");
                                  Berichtstabelle."Feld 18" := ArchSalesLine."Shipment Date";
                                  Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                                  Berichtstabelle.User := USERID;
                                Berichtstabelle.INSERT;
                              UNTIL ArchSalesLine.NEXT = 0;
                            END;
                          //*******************************************************************************************************
                          //     Nachtr„glich alle anderen Daten schreiben, wenn auch wirklich Auftragszeilen vorhanden sind
                          //*******************************************************************************************************
                          IF arch_belegzeilen_vorhanden THEN
                            BEGIN
                              //Auftragskopf
                              Berichtstabelle.INIT;
                                Berichtstabelle.Tabelle := 'ARCH_BELEGKOPF';
                                Berichtstabelle.Index := ArchSalesHeader."No.";
                                Berichtstabelle.Datum := ArchSalesHeader."Order Date";
                                Berichtstabelle."Belegnr." := ArchSalesHeader."No.";
                                Berichtstabelle."Feld 2" := ArchSalesHeader."Sell-to Customer No.";
                                ArchSalesHeader.CALCFIELDS(Amount);
                                Berichtstabelle."Feld 4" := ArchSalesHeader.Amount;
                                Berichtstabelle."Feld 6" := ArchSalesHeader."Betreuer Innendienst";
                                Berichtstabelle."Feld 7" := ArchSalesHeader."Salesperson Code";
                                Berichtstabelle."Feld 8" := ArchSalesHeader.Teams;
                                Berichtstabelle."Feld 9" := ArchSalesHeader."Territory Code";
                                IF ArchSalesHeader."Currency Code" <> '' THEN
                                  Berichtstabelle."Feld 12" := ArchSalesHeader."Currency Code"
                                ELSE
                                  Berichtstabelle."Feld 12" := '°';
                                Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                                Berichtstabelle.User := USERID;
                              Berichtstabelle.INSERT;
                            END;
                        UNTIL ArchSalesHeader.NEXT = 0;
                      //*******************************************************************************************************
                      //         Temp Datensatz erzeugt, damit die Berichtsansicht eine neue Seite fr arch. Angebote
                      //              ”ffnet und auf dieser neuen Seite der Header nicht zweimal angedruckt wird
                      //*******************************************************************************************************
                      Berichtstabelle_temp.RESET;
                      Berichtstabelle_temp.SETFILTER(Berichtstabelle_temp.Tabelle,'%1','ARCH_DEBITOR');
                      IF Berichtstabelle_temp.FINDFIRST THEN
                        BEGIN
                          Berichtstabelle.INIT;
                            Berichtstabelle.Tabelle := 'TEMP';
                            Berichtstabelle.Index := 'XXXX';
                          Berichtstabelle.INSERT;
                        END;
                    END;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   IF Berichtstabelle.TABLECAPTION = 'Berichtstabelle' THEN
                     Berichtstabelle.DELETEALL;
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;Debitor             ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(DEBITOR));
               OnPreDataItem=BEGIN
                               IF sort = sort :: Nr THEN
                                 Debitor.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               IF sort = sort :: Name THEN
                                 Debitor.SETCURRENTKEY("Feld 10",Datum,Index);
                               ReportForNav.GetDataItem('Debitor').NewPagePerRecord := NurEinProSeiteDrucken;
                             END;
                              }

    { 2   ;1   ;Column  ;USERID              ;
               SourceExpr=USERID }

    { 3   ;1   ;Column  ;ReportForNavPageNo  ;
               SourceExpr=ReportForNav.PageNo }

    { 4   ;1   ;Column  ;TODAY_0_4           ;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 5   ;1   ;Column  ;Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Teams;
               SourceExpr='Verk„ufercode: '+verk„ufer+' Betreuer Innendienst: ' + betreuer + ' Teams: ' + teams + ' Gebietscode: ' + gebietscode + ' Hersteller: ' + hersteller + '  Auftragsdatum: ' + FORMAT(Startdatum) + '..' + FORMAT(Enddatum) }

    { 6   ;1   ;Column  ;Feld10_Debitor      ;
               SourceExpr="Feld 10" }

    { 7   ;1   ;Column  ;Index_Debitor       ;
               SourceExpr=Index }

    { 8   ;1   ;Column  ;Euro                ;
               SourceExpr='Euro' }

    { 9   ;1   ;Column  ;AuftragBetrag_EURO  ;
               SourceExpr=AuftragBetrag_EURO;
               AutoFormatType=1 }

    { 10  ;1   ;Column  ;USD                 ;
               SourceExpr='USD' }

    { 11  ;1   ;Column  ;AuftragBetrag_USD   ;
               SourceExpr=AuftragBetrag_USD;
               AutoFormatType=1 }

    { 12  ;1   ;Column  ;JPY                 ;
               SourceExpr='JPY' }

    { 13  ;1   ;Column  ;AuftragBetrag_JPY   ;
               SourceExpr=AuftragBetrag_JPY;
               AutoFormatType=1 }

    { 14  ;1   ;Column  ;AuftragBetrag_USD_WechselkursExchangeRateAmount;
               SourceExpr=AuftragBetrag_USD/Wechselkurs."Exchange Rate Amount";
               AutoFormatType=1 }

    { 15  ;1   ;Column  ;ExchangeRateAmount_Wechselkurs;
               DecimalPlaces=4:4;
               SourceExpr=Wechselkurs."Exchange Rate Amount" }

    { 16  ;1   ;Column  ;AuftragBetrag_JPY_WechselkursExchangeRateAmount;
               SourceExpr=AuftragBetrag_JPY/Wechselkurs."Exchange Rate Amount";
               AutoFormatType=1 }

    { 17  ;1   ;Column  ;Gesamt_AU_EK        ;
               SourceExpr=Gesamt_AU_EK }

    { 18  ;1   ;Column  ;summe1_summe2       ;
               SourceExpr=summe[1]+summe[2];
               AutoFormatType=1 }

    { 19  ;1   ;Column  ;AuftragBetragMW     ;
               SourceExpr=AuftragBetragMW;
               AutoFormatType=1 }

    { 20  ;1   ;DataItem;Belegkopf           ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(BELEGKOPF));
               DataItemLink=Feld 2=FIELD(Index) }

    { 21  ;2   ;Column  ;waehrung            ;
               SourceExpr=waehrung }

    { 22  ;2   ;Column  ;AuftragBetrag       ;
               SourceExpr=AuftragBetrag;
               AutoFormatType=1 }

    { 23  ;2   ;DataItem;Belegzeile          ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(BELEGZEILE));
               OnAfterGetRecord=BEGIN
                                  NeuerAuftrag := Belegzeile.Index <> Auftragkopf."No.";
                                  IF NeuerAuftrag THEN
                                    Auftragkopf.GET(1,Belegzeile.Index);
                                  IF "Feld 18" <= WORKDATE THEN
                                    RckstandMenge := "Feld 14"
                                  ELSE
                                    RckstandMenge := '0';
                                  AuftragBetrag := "Feld 4" * "Feld 5";
                                  IF NOT Betr„geDruckInMW THEN
                                    BEGIN
                                      IF Auftragkopf."Currency Code" = 'USD' THEN
                                        AuftragBetrag_USD := AuftragBetrag;
                                      IF Auftragkopf."Currency Code" = 'JPY' THEN
                                      AuftragBetrag_JPY := AuftragBetrag;
                                      IF Auftragkopf."Currency Code" = '' THEN
                                        AuftragBetrag_EURO := AuftragBetrag;
                                    END;
                                  //AuftragBetrag := ROUND("Outstanding Quantity" * "Sales Line"."Line Amount" / Quantity);
                                  AuftragBetragMW := AuftragBetrag;
                                  IF Betr„geDruckInMW THEN
                                    AuftragBetrag_EURO := AuftragBetragMW;
                                  IF Auftragkopf."Currency Code" <> '' THEN BEGIN
                                    IF Auftragkopf."Currency Factor" <> 0 THEN
                                      AuftragBetragMW :=
                                        ROUND(
                                          W„hrungWechKurs.ExchangeAmtFCYToLCY(
                                            WORKDATE,Auftragkopf."Currency Code",
                                            AuftragBetragMW,Auftragkopf."Currency Factor"));
                                    IF Betr„geDruckInMW THEN
                                      BEGIN
                                        AuftragBetrag := AuftragBetragMW;
                                        AuftragBetrag_EURO := AuftragBetragMW;
                                      END;
                                  END;
                                  waehrung := "Feld 7";
                                  IF Betr„geDruckInMW=TRUE THEN
                                    waehrung:='EUR';
                                END;

               DataItemLink=Index=FIELD(Index) }

    { 24  ;3   ;Column  ;Feld11_Belegzeile   ;
               SourceExpr="Feld 11" }

    { 25  ;3   ;Column  ;Feld16_Belegzeile   ;
               SourceExpr="Feld 16" }

    { 26  ;3   ;Column  ;waehrung2           ;
               SourceExpr=waehrung }

    { 27  ;3   ;Column  ;Feld7_Belegzeile    ;
               SourceExpr="Feld 7" }

    { 28  ;3   ;Column  ;Feld13_Belegzeile   ;
               SourceExpr="Feld 13" }

    { 29  ;3   ;Column  ;Feld12_Belegzeile   ;
               SourceExpr="Feld 12" }

    { 30  ;3   ;Column  ;AuftragBetrag2      ;
               SourceExpr=AuftragBetrag;
               AutoFormatType=1 }

    { 31  ;3   ;Column  ;Feld5_Belegzeile    ;
               SourceExpr="Feld 5";
               AutoFormatType=2 }

    { 32  ;3   ;Column  ;RuckstandMenge      ;
               DecimalPlaces=0:5;
               SourceExpr=RckstandMenge }

    { 33  ;3   ;Column  ;Feld4_Belegzeile    ;
               DecimalPlaces=0:0;
               SourceExpr="Feld 4" }

    { 34  ;3   ;Column  ;Feld14_Belegzeile   ;
               SourceExpr="Feld 14" }

    { 35  ;3   ;Column  ;Datum_Belegzeile    ;
               SourceExpr=Datum }

    { 36  ;3   ;Column  ;Feld3_Belegzeile    ;
               SourceExpr="Feld 3" }

    { 37  ;3   ;Column  ;Index_Belegkopf     ;
               SourceExpr=Belegkopf.Index }

    { 38  ;3   ;Column  ;Datum_Belegkopf     ;
               SourceExpr=Belegkopf.Datum }

    { 39  ;3   ;Column  ;Feld6_Belegzeile    ;
               SourceExpr="Feld 6" }

    { 40  ;    ;DataItem;NewPage             ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(TEMP)) }

    { 41  ;    ;DataItem;Arch_Debitor        ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(ARCH_DEBITOR));
               OnPreDataItem=BEGIN
                               IF sort = sort :: Nr THEN
                                 Arch_Debitor.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               IF sort = sort :: Name THEN
                                 Arch_Debitor.SETCURRENTKEY("Feld 10",Datum,Index);
                               ReportForNav.GetDataItem('Arch_Debitor').NewPagePerRecord := NurEinProSeiteDrucken;
                             END;
                              }

    { 42  ;1   ;Column  ;USERID2             ;
               SourceExpr=USERID }

    { 43  ;1   ;Column  ;ReportForNavPageNo2 ;
               SourceExpr=ReportForNav.PageNo }

    { 44  ;1   ;Column  ;TODAY_0_42          ;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 45  ;1   ;Column  ;Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Team2;
               SourceExpr='Verk„ufercode: '+verk„ufer+' Betreuer Innendienst: ' + betreuer + ' Teams: ' + teams + ' Gebietscode: ' + gebietscode + '  Auftragsdatum: ' + FORMAT(Startdatum) + '..' + FORMAT(Enddatum) }

    { 46  ;1   ;Column  ;Feld10_Arch_Debitor ;
               SourceExpr="Feld 10" }

    { 47  ;1   ;Column  ;Index_Arch_Debitor  ;
               SourceExpr=Index }

    { 48  ;1   ;Column  ;Euro7               ;
               SourceExpr='Euro' }

    { 49  ;1   ;Column  ;ArchAuftragBetrag_EURO;
               SourceExpr=ArchAuftragBetrag_EURO;
               AutoFormatType=1 }

    { 50  ;1   ;Column  ;USD2                ;
               SourceExpr='USD' }

    { 51  ;1   ;Column  ;ArchAuftragBetrag_USD;
               SourceExpr=ArchAuftragBetrag_USD;
               AutoFormatType=1 }

    { 52  ;1   ;Column  ;JPY2                ;
               SourceExpr='JPY' }

    { 53  ;1   ;Column  ;ArchAuftragBetrag_JPY;
               SourceExpr=ArchAuftragBetrag_JPY;
               AutoFormatType=1 }

    { 54  ;1   ;Column  ;ArchAuftragBetrag_USD_WechselkursExchangeRateAmount;
               SourceExpr=ArchAuftragBetrag_USD/Wechselkurs."Exchange Rate Amount";
               AutoFormatType=1 }

    { 55  ;1   ;Column  ;ExchangeRateAmount_Wechselkurs3;
               DecimalPlaces=4:4;
               SourceExpr=Wechselkurs."Exchange Rate Amount" }

    { 56  ;1   ;Column  ;ArchAuftragBetrag_JPY_WechselkursExchangeRateAmount;
               SourceExpr=ArchAuftragBetrag_JPY/Wechselkurs."Exchange Rate Amount";
               AutoFormatType=1 }

    { 57  ;1   ;Column  ;summe1_summe22      ;
               SourceExpr=summe[1]+summe[2];
               AutoFormatType=1 }

    { 58  ;1   ;Column  ;ArchAuftragBetragMW ;
               SourceExpr=ArchAuftragBetragMW;
               AutoFormatType=1 }

    { 59  ;1   ;DataItem;Arch_Belegkopf      ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(ARCH_BELEGKOPF));
               DataItemLink=Feld 2=FIELD(Index) }

    { 60  ;2   ;Column  ;waehrung4           ;
               SourceExpr=waehrung }

    { 61  ;2   ;Column  ;ArchAuftragBetrag   ;
               SourceExpr=ArchAuftragBetrag;
               AutoFormatType=1 }

    { 62  ;2   ;DataItem;Arch_Belegzeile     ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(ARCH_BELEGZEILE));
               OnAfterGetRecord=BEGIN
                                  NeuerAuftrag := Arch_Belegzeile.Index <> ArchAuftragkopf."No.";
                                  IF NeuerAuftrag THEN
                                    BEGIN
                                      ArchAuftragkopf.RESET;
                                      ArchAuftragkopf.SETFILTER(ArchAuftragkopf."No.",'%1',Arch_Belegzeile.Index);
                                      ArchAuftragkopf.SETFILTER(ArchAuftragkopf."Document Type",'%1',ArchAuftragkopf."Document Type" :: Order);
                                      ArchAuftragkopf.FINDFIRST;
                                    END;
                                  ArchAuftragBetrag := "Feld 4" * "Feld 5";
                                  IF NOT Betr„geDruckInMW THEN
                                    BEGIN
                                      IF ArchAuftragkopf."Currency Code" = 'USD' THEN
                                        ArchAuftragBetrag_USD := ArchAuftragBetrag;
                                      IF ArchAuftragkopf."Currency Code" = 'JPY' THEN
                                      ArchAuftragBetrag_JPY := ArchAuftragBetrag;
                                      IF ArchAuftragkopf."Currency Code" = '' THEN
                                        ArchAuftragBetrag_EURO := ArchAuftragBetrag;
                                    END;
                                  ArchAuftragBetragMW := ArchAuftragBetrag;
                                  IF Betr„geDruckInMW THEN
                                    ArchAuftragBetrag_EURO := ArchAuftragBetragMW;
                                  IF ArchAuftragkopf."Currency Code" <> '' THEN BEGIN
                                    IF ArchAuftragkopf."Currency Factor" <> 0 THEN
                                      ArchAuftragBetragMW :=
                                        ROUND(
                                          W„hrungWechKurs.ExchangeAmtFCYToLCY(
                                            WORKDATE,ArchAuftragkopf."Currency Code",
                                            ArchAuftragBetragMW,ArchAuftragkopf."Currency Factor"));
                                    IF Betr„geDruckInMW THEN
                                      BEGIN
                                        ArchAuftragBetrag := ArchAuftragBetragMW;
                                        ArchAuftragBetrag_EURO := ArchAuftragBetragMW;
                                      END;
                                  END;
                                  waehrung := "Feld 7";
                                  IF Betr„geDruckInMW=TRUE THEN
                                    waehrung:='EUR'
                                END;

               DataItemLink=Index=FIELD(Index) }

    { 63  ;3   ;Column  ;Feld11_Arch_Belegzeile;
               SourceExpr="Feld 11" }

    { 64  ;3   ;Column  ;Feld16_Arch_Belegzeile;
               SourceExpr="Feld 16" }

    { 65  ;3   ;Column  ;waehrung5           ;
               SourceExpr=waehrung }

    { 66  ;3   ;Column  ;Feld7_Arch_Belegzeile;
               SourceExpr="Feld 7" }

    { 67  ;3   ;Column  ;Feld13_Arch_Belegzeile;
               SourceExpr="Feld 13" }

    { 68  ;3   ;Column  ;Feld12_Arch_Belegzeile;
               SourceExpr="Feld 12" }

    { 69  ;3   ;Column  ;ArchAuftragBetrag2  ;
               SourceExpr=ArchAuftragBetrag;
               AutoFormatType=1 }

    { 70  ;3   ;Column  ;Feld5_Arch_Belegzeile;
               SourceExpr="Feld 5";
               AutoFormatType=2 }

    { 71  ;3   ;Column  ;Feld4_Arch_Belegzeile;
               DecimalPlaces=0:0;
               SourceExpr="Feld 4" }

    { 72  ;3   ;Column  ;Datum_Arch_Belegzeile;
               SourceExpr=Datum }

    { 73  ;3   ;Column  ;Feld3_Arch_Belegzeile;
               SourceExpr="Feld 3" }

    { 74  ;3   ;Column  ;Index_Arch_Belegkopf;
               SourceExpr=Arch_Belegkopf.Index }

    { 75  ;3   ;Column  ;Datum_Arch_Belegkopf;
               SourceExpr=Arch_Belegkopf.Datum }

    { 76  ;3   ;Column  ;Feld6_Arch_Belegzeile;
               SourceExpr="Feld 6" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140002;2;Field     ;
                  CaptionML=DEU=Auftragsdatum von;
                  SourceExpr=Startdatum }

      { 1140000;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=Enddatum }

      { 1140029;2;Field     ;
                  CaptionML=DEU=Ohne Archiv;
                  SourceExpr=ohne_archiv }

      { 1140003;2;Field     ;
                  CaptionML=DEU=Betreuer Innendienst;
                  SourceExpr=betreuer }

      { 1140006;2;Field     ;
                  CaptionML=DEU=Verk„ufercode;
                  SourceExpr=verk„ufer }

      { 1140009;2;Field     ;
                  CaptionML=DEU=Teams;
                  SourceExpr=teams }

      { 1140011;2;Field     ;
                  CaptionML=DEU=Gebietscode;
                  SourceExpr=gebietscode }

      { 1140015;2;Field     ;
                  CaptionML=DEU=Herstellercode;
                  SourceExpr=hersteller;
                  TableRelation=Manufacturer }

      { 1140023;2;Field     ;
                  CaptionML=DEU=Zug. Lieferdatum;
                  SourceExpr=zugesagtes_startdatum }

      { 1140025;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=zugesagtes_enddatum }

      { 1140020;2;Field     ;
                  CaptionML=DEU=Betr„ge in MW anzeigen;
                  SourceExpr=Betr„geDruckInMW }

      { 1140013;2;Field     ;
                  CaptionML=DEU=Neue Seite pro Debitor;
                  SourceExpr=NurEinProSeiteDrucken }

      { 1140018;2;Field     ;
                  CaptionML=DEU=Berichtssortierung;
                  OptionCaptionML=DEU=Debitornr.,Debitorname;
                  SourceExpr=sort }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Berichtstabelle@1140000 : Record 50037;
      Berichtstabelle_temp@1140012 : Record 50037;
      W„hrungWechKurs@1140022 : Record 330;
      Wechselkurs@1140025 : Record 330;
      Auftragkopf@1140019 : Record 36;
      ArchAuftragkopf@1140037 : Record 5107;
      SalesHeader@1140002 : Record 36;
      SalesLine@1140003 : Record 37;
      ArchSalesHeader@1140029 : Record 5107;
      ArchSalesLine@1140030 : Record 5108;
      Quotedaten@1140013 : Record 50014;
      Startdatum@1140004 : Date;
      Enddatum@1140005 : Date;
      zugesagtes_startdatum@1140038 : Date;
      zugesagtes_enddatum@1140039 : Date;
      betreuer@1140006 : Code[40];
      verk„ufer@1140007 : Code[40];
      teams@1140008 : Code[40];
      gebietscode@1140009 : Code[40];
      hersteller@1140011 : Code[40];
      belegzeilen_vorhanden@1140010 : Boolean;
      arch_belegzeilen_vorhanden@1140036 : Boolean;
      Betr„geDruckInMW@1140014 : Boolean;
      NurEinProSeiteDrucken@1140021 : Boolean;
      NeuerAuftrag@1140017 : Boolean;
      ohne_archiv@1140040 : Boolean;
      RckstandMenge@1140015 : Text[30];
      summe@1140027 : ARRAY [3] OF Decimal;
      waehrung@1140028 : Code[10];
      AuftragBetrag@1140018 : Decimal;
      AuftragBetrag_EURO@1140026 : Decimal;
      AuftragBetrag_USD@1140023 : Decimal;
      AuftragBetrag_JPY@1140024 : Decimal;
      AuftragBetragMW@1140020 : Decimal;
      ArchAuftragBetrag@1140031 : Decimal;
      ArchAuftragBetrag_EURO@1140032 : Decimal;
      ArchAuftragBetrag_USD@1140033 : Decimal;
      ArchAuftragBetrag_JPY@1140034 : Decimal;
      ArchAuftragBetragMW@1140035 : Decimal;
      sort@1140016 : 'Nr,Name';
      counter@1140001 : Integer;
      Gesamt_AU_EK@1140041 : Decimal;
      artzeile_ek@1140042 : Decimal;
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionDebitor_Header2@5010(VAR Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Debitor DO BEGIN
        ReportForNav.ShowOutput(Betr„geDruckInMW);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionDebitor_Footer7@5011(VAR Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Debitor DO BEGIN
        ReportForNav.ShowOutput(AuftragBetrag_EURO <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionDebitor_Footer8@5012(VAR Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Debitor DO BEGIN
        ReportForNav.ShowOutput(AuftragBetrag_USD <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionDebitor_Footer9@5013(VAR Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Debitor DO BEGIN
        ReportForNav.ShowOutput(AuftragBetrag_JPY <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionDebitor_Footer10@5014(VAR Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Debitor DO BEGIN
        Wechselkurs.SETFILTER(Wechselkurs."Currency Code",'%1','USD');
        Wechselkurs.FINDLAST;
        summe[1] := AuftragBetrag_USD/Wechselkurs."Exchange Rate Amount";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionDebitor_Footer11@5015(VAR Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Debitor DO BEGIN
        Wechselkurs.SETFILTER(Wechselkurs."Currency Code",'%1','JPY');
        Wechselkurs.FINDLAST;
        summe[2] := AuftragBetrag_JPY/Wechselkurs."Exchange Rate Amount";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionBelegzeile_Body14@5016(VAR Belegzeile@1000000000 : Record 50037);
    BEGIN
      WITH Belegzeile DO BEGIN
        IF ReportForNav.ShowOutput(NeuerAuftrag) THEN
          BEGIN
            EVALUATE(artzeile_ek,"Feld 13");
            Gesamt_AU_EK := Gesamt_AU_EK + (artzeile_ek * "Feld 4");
          END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionBelegzeile_Body15@5017(VAR Belegzeile@1000000000 : Record 50037);
    BEGIN
      WITH Belegzeile DO BEGIN
        IF ReportForNav.ShowOutput(NOT NeuerAuftrag) THEN
          BEGIN
            EVALUATE(artzeile_ek,"Feld 13");
            Gesamt_AU_EK := Gesamt_AU_EK + (artzeile_ek * "Feld 4");
          END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionBelegzeile_Body16@5018(VAR Belegzeile@1000000000 : Record 50037);
    BEGIN
      WITH Belegzeile DO BEGIN
        ReportForNav.ShowOutput("Feld 6" <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionNewPage_Body17@5019(VAR NewPage@1000000000 : Record 50037);
    BEGIN
      WITH NewPage DO BEGIN
        ReportForNav.NewPageWithoutTransportTotals;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Debitor_Header19@5020(VAR Arch_Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Debitor DO BEGIN
        ReportForNav.ShowOutput(Betr„geDruckInMW);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Debitor_Footer24@5021(VAR Arch_Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Debitor DO BEGIN
        ReportForNav.ShowOutput(ArchAuftragBetrag_EURO <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Debitor_Footer25@5022(VAR Arch_Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Debitor DO BEGIN
        ReportForNav.ShowOutput(ArchAuftragBetrag_USD <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Debitor_Footer26@5023(VAR Arch_Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Debitor DO BEGIN
        ReportForNav.ShowOutput(ArchAuftragBetrag_JPY <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Debitor_Footer27@5024(VAR Arch_Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Debitor DO BEGIN
        Wechselkurs.SETFILTER(Wechselkurs."Currency Code",'%1','USD');
        Wechselkurs.FINDLAST;
        summe[1] := ArchAuftragBetrag_USD/Wechselkurs."Exchange Rate Amount";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Debitor_Footer28@5025(VAR Arch_Debitor@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Debitor DO BEGIN
        Wechselkurs.SETFILTER(Wechselkurs."Currency Code",'%1','JPY');
        Wechselkurs.FINDLAST;
        summe[2] := ArchAuftragBetrag_JPY/Wechselkurs."Exchange Rate Amount";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Belegzeile_Body31@5026(VAR Arch_Belegzeile@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Belegzeile DO BEGIN
        ReportForNav.ShowOutput(NeuerAuftrag);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Belegzeile_Body32@5027(VAR Arch_Belegzeile@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Belegzeile DO BEGIN
        ReportForNav.ShowOutput(NOT NeuerAuftrag);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionArch_Belegzeile_Body33@5028(VAR Arch_Belegzeile@1000000000 : Record 50037);
    BEGIN
      WITH Arch_Belegzeile DO BEGIN
        ReportForNav.ShowOutput("Feld 6" <> '');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Debitor': CASE SectionId OF
          'Header2': OnPreSectionDebitor_Header2(Debitor);
          'Footer7': OnPreSectionDebitor_Footer7(Debitor);
          'Footer8': OnPreSectionDebitor_Footer8(Debitor);
          'Footer9': OnPreSectionDebitor_Footer9(Debitor);
          'Footer10': OnPreSectionDebitor_Footer10(Debitor);
          'Footer11': OnPreSectionDebitor_Footer11(Debitor);
        END;
        'Belegzeile': CASE SectionId OF
          'Body14': OnPreSectionBelegzeile_Body14(Belegzeile);
          'Body15': OnPreSectionBelegzeile_Body15(Belegzeile);
          'Body16': OnPreSectionBelegzeile_Body16(Belegzeile);
        END;
        'NewPage': CASE SectionId OF
          'Body17': OnPreSectionNewPage_Body17(NewPage);
        END;
        'Arch_Debitor': CASE SectionId OF
          'Header19': OnPreSectionArch_Debitor_Header19(Arch_Debitor);
          'Footer24': OnPreSectionArch_Debitor_Footer24(Arch_Debitor);
          'Footer25': OnPreSectionArch_Debitor_Footer25(Arch_Debitor);
          'Footer26': OnPreSectionArch_Debitor_Footer26(Arch_Debitor);
          'Footer27': OnPreSectionArch_Debitor_Footer27(Arch_Debitor);
          'Footer28': OnPreSectionArch_Debitor_Footer28(Arch_Debitor);
        END;
        'Arch_Belegzeile': CASE SectionId OF
          'Body31': OnPreSectionArch_Belegzeile_Body31(Arch_Belegzeile);
          'Body32': OnPreSectionArch_Belegzeile_Body32(Arch_Belegzeile);
          'Body33': OnPreSectionArch_Belegzeile_Body33(Arch_Belegzeile);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // Do not change (Autogenerated by Reports ForNAV) - Instead change the Create Totals, Total Fields or Group Total Fields properties on the Data item in the ForNAV designer
      CASE DataItemId OF
        'Debitor': WITH Debitor DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,AuftragBetrag);
                ReportForNav.AddTotal(DataItemId,1,AuftragBetragMW);
                ReportForNav.AddTotal(DataItemId,2,AuftragBetrag_USD);
                ReportForNav.AddTotal(DataItemId,3,AuftragBetrag_JPY);
                ReportForNav.AddTotal(DataItemId,4,AuftragBetrag_EURO);
              END;
           'Restore': BEGIN
                 AuftragBetrag := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 AuftragBetragMW := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 AuftragBetrag_USD := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
                 AuftragBetrag_JPY := ReportForNav.RestoreTotal(DataItemId,3,GroupTotalFieldNo);
                 AuftragBetrag_EURO := ReportForNav.RestoreTotal(DataItemId,4,GroupTotalFieldNo);
              END;
        END;  'Belegkopf': WITH Belegkopf DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,AuftragBetrag);
                ReportForNav.AddTotal(DataItemId,1,AuftragBetragMW);
                ReportForNav.AddTotal(DataItemId,2,AuftragBetrag_USD);
                ReportForNav.AddTotal(DataItemId,3,AuftragBetrag_JPY);
                ReportForNav.AddTotal(DataItemId,4,AuftragBetrag_EURO);
              END;
           'Restore': BEGIN
                 AuftragBetrag := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 AuftragBetragMW := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 AuftragBetrag_USD := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
                 AuftragBetrag_JPY := ReportForNav.RestoreTotal(DataItemId,3,GroupTotalFieldNo);
                 AuftragBetrag_EURO := ReportForNav.RestoreTotal(DataItemId,4,GroupTotalFieldNo);
              END;
        END;  'Belegzeile': WITH Belegzeile DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,AuftragBetrag);
                ReportForNav.AddTotal(DataItemId,1,AuftragBetragMW);
                ReportForNav.AddTotal(DataItemId,2,AuftragBetrag_USD);
                ReportForNav.AddTotal(DataItemId,3,AuftragBetrag_JPY);
                ReportForNav.AddTotal(DataItemId,4,AuftragBetrag_EURO);
              END;
           'Restore': BEGIN
                 AuftragBetrag := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 AuftragBetragMW := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 AuftragBetrag_USD := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
                 AuftragBetrag_JPY := ReportForNav.RestoreTotal(DataItemId,3,GroupTotalFieldNo);
                 AuftragBetrag_EURO := ReportForNav.RestoreTotal(DataItemId,4,GroupTotalFieldNo);
              END;
        END;  'Arch_Debitor': WITH Arch_Debitor DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,ArchAuftragBetrag);
                ReportForNav.AddTotal(DataItemId,1,ArchAuftragBetragMW);
                ReportForNav.AddTotal(DataItemId,2,ArchAuftragBetrag_USD);
                ReportForNav.AddTotal(DataItemId,3,ArchAuftragBetrag_JPY);
                ReportForNav.AddTotal(DataItemId,4,ArchAuftragBetrag_EURO);
              END;
           'Restore': BEGIN
                 ArchAuftragBetrag := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 ArchAuftragBetragMW := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 ArchAuftragBetrag_USD := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
                 ArchAuftragBetrag_JPY := ReportForNav.RestoreTotal(DataItemId,3,GroupTotalFieldNo);
                 ArchAuftragBetrag_EURO := ReportForNav.RestoreTotal(DataItemId,4,GroupTotalFieldNo);
              END;
        END;  'Arch_Belegkopf': WITH Arch_Belegkopf DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,ArchAuftragBetrag);
                ReportForNav.AddTotal(DataItemId,1,ArchAuftragBetragMW);
                ReportForNav.AddTotal(DataItemId,2,ArchAuftragBetrag_USD);
                ReportForNav.AddTotal(DataItemId,3,ArchAuftragBetrag_JPY);
                ReportForNav.AddTotal(DataItemId,4,ArchAuftragBetrag_EURO);
              END;
           'Restore': BEGIN
                 ArchAuftragBetrag := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 ArchAuftragBetragMW := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 ArchAuftragBetrag_USD := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
                 ArchAuftragBetrag_JPY := ReportForNav.RestoreTotal(DataItemId,3,GroupTotalFieldNo);
                 ArchAuftragBetrag_EURO := ReportForNav.RestoreTotal(DataItemId,4,GroupTotalFieldNo);
              END;
        END;  'Arch_Belegzeile': WITH Arch_Belegzeile DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,ArchAuftragBetrag);
                ReportForNav.AddTotal(DataItemId,1,ArchAuftragBetragMW);
                ReportForNav.AddTotal(DataItemId,2,ArchAuftragBetrag_USD);
                ReportForNav.AddTotal(DataItemId,3,ArchAuftragBetrag_JPY);
                ReportForNav.AddTotal(DataItemId,4,ArchAuftragBetrag_EURO);
              END;
           'Restore': BEGIN
                 ArchAuftragBetrag := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 ArchAuftragBetragMW := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 ArchAuftragBetrag_USD := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
                 ArchAuftragBetrag_JPY := ReportForNav.RestoreTotal(DataItemId,3,GroupTotalFieldNo);
                 ArchAuftragBetrag_EURO := ReportForNav.RestoreTotal(DataItemId,4,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>0d812d19-6df9-4074-9393-ed204fc91a1a</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>14aa12f8-2efb-4e65-a107-93812b2332d1</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Teams">
          <DataField>Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Teams</DataField>
        </Field>
        <Field Name="Feld10_Debitor">
          <DataField>Feld10_Debitor</DataField>
        </Field>
        <Field Name="Index_Debitor">
          <DataField>Index_Debitor</DataField>
        </Field>
        <Field Name="Euro">
          <DataField>Euro</DataField>
        </Field>
        <Field Name="AuftragBetrag_EURO">
          <DataField>AuftragBetrag_EURO</DataField>
        </Field>
        <Field Name="AuftragBetrag_EUROFormat">
          <DataField>AuftragBetrag_EUROFormat</DataField>
        </Field>
        <Field Name="USD">
          <DataField>USD</DataField>
        </Field>
        <Field Name="AuftragBetrag_USD">
          <DataField>AuftragBetrag_USD</DataField>
        </Field>
        <Field Name="AuftragBetrag_USDFormat">
          <DataField>AuftragBetrag_USDFormat</DataField>
        </Field>
        <Field Name="JPY">
          <DataField>JPY</DataField>
        </Field>
        <Field Name="AuftragBetrag_JPY">
          <DataField>AuftragBetrag_JPY</DataField>
        </Field>
        <Field Name="AuftragBetrag_JPYFormat">
          <DataField>AuftragBetrag_JPYFormat</DataField>
        </Field>
        <Field Name="AuftragBetrag_USD_WechselkursExchangeRateAmount">
          <DataField>AuftragBetrag_USD_WechselkursExchangeRateAmount</DataField>
        </Field>
        <Field Name="AuftragBetrag_USD_WechselkursExchangeRateAmountFormat">
          <DataField>AuftragBetrag_USD_WechselkursExchangeRateAmountFormat</DataField>
        </Field>
        <Field Name="ExchangeRateAmount_Wechselkurs">
          <DataField>ExchangeRateAmount_Wechselkurs</DataField>
        </Field>
        <Field Name="ExchangeRateAmount_WechselkursFormat">
          <DataField>ExchangeRateAmount_WechselkursFormat</DataField>
        </Field>
        <Field Name="AuftragBetrag_JPY_WechselkursExchangeRateAmount">
          <DataField>AuftragBetrag_JPY_WechselkursExchangeRateAmount</DataField>
        </Field>
        <Field Name="AuftragBetrag_JPY_WechselkursExchangeRateAmountFormat">
          <DataField>AuftragBetrag_JPY_WechselkursExchangeRateAmountFormat</DataField>
        </Field>
        <Field Name="Gesamt_AU_EK">
          <DataField>Gesamt_AU_EK</DataField>
        </Field>
        <Field Name="Gesamt_AU_EKFormat">
          <DataField>Gesamt_AU_EKFormat</DataField>
        </Field>
        <Field Name="summe1_summe2">
          <DataField>summe1_summe2</DataField>
        </Field>
        <Field Name="summe1_summe2Format">
          <DataField>summe1_summe2Format</DataField>
        </Field>
        <Field Name="AuftragBetragMW">
          <DataField>AuftragBetragMW</DataField>
        </Field>
        <Field Name="AuftragBetragMWFormat">
          <DataField>AuftragBetragMWFormat</DataField>
        </Field>
        <Field Name="waehrung">
          <DataField>waehrung</DataField>
        </Field>
        <Field Name="AuftragBetrag">
          <DataField>AuftragBetrag</DataField>
        </Field>
        <Field Name="AuftragBetragFormat">
          <DataField>AuftragBetragFormat</DataField>
        </Field>
        <Field Name="Feld11_Belegzeile">
          <DataField>Feld11_Belegzeile</DataField>
        </Field>
        <Field Name="Feld16_Belegzeile">
          <DataField>Feld16_Belegzeile</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="Feld7_Belegzeile">
          <DataField>Feld7_Belegzeile</DataField>
        </Field>
        <Field Name="Feld13_Belegzeile">
          <DataField>Feld13_Belegzeile</DataField>
        </Field>
        <Field Name="Feld12_Belegzeile">
          <DataField>Feld12_Belegzeile</DataField>
        </Field>
        <Field Name="AuftragBetrag2">
          <DataField>AuftragBetrag2</DataField>
        </Field>
        <Field Name="AuftragBetrag2Format">
          <DataField>AuftragBetrag2Format</DataField>
        </Field>
        <Field Name="Feld5_Belegzeile">
          <DataField>Feld5_Belegzeile</DataField>
        </Field>
        <Field Name="Feld5_BelegzeileFormat">
          <DataField>Feld5_BelegzeileFormat</DataField>
        </Field>
        <Field Name="RuckstandMenge">
          <DataField>RuckstandMenge</DataField>
        </Field>
        <Field Name="Feld4_Belegzeile">
          <DataField>Feld4_Belegzeile</DataField>
        </Field>
        <Field Name="Feld4_BelegzeileFormat">
          <DataField>Feld4_BelegzeileFormat</DataField>
        </Field>
        <Field Name="Feld14_Belegzeile">
          <DataField>Feld14_Belegzeile</DataField>
        </Field>
        <Field Name="Datum_Belegzeile">
          <DataField>Datum_Belegzeile</DataField>
        </Field>
        <Field Name="Feld3_Belegzeile">
          <DataField>Feld3_Belegzeile</DataField>
        </Field>
        <Field Name="Index_Belegkopf">
          <DataField>Index_Belegkopf</DataField>
        </Field>
        <Field Name="Datum_Belegkopf">
          <DataField>Datum_Belegkopf</DataField>
        </Field>
        <Field Name="Feld6_Belegzeile">
          <DataField>Feld6_Belegzeile</DataField>
        </Field>
        <Field Name="USERID2">
          <DataField>USERID2</DataField>
        </Field>
        <Field Name="ReportForNavPageNo2">
          <DataField>ReportForNavPageNo2</DataField>
        </Field>
        <Field Name="TODAY_0_42">
          <DataField>TODAY_0_42</DataField>
        </Field>
        <Field Name="Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Team2">
          <DataField>Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Team2</DataField>
        </Field>
        <Field Name="Feld10_Arch_Debitor">
          <DataField>Feld10_Arch_Debitor</DataField>
        </Field>
        <Field Name="Index_Arch_Debitor">
          <DataField>Index_Arch_Debitor</DataField>
        </Field>
        <Field Name="Euro7">
          <DataField>Euro7</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag_EURO">
          <DataField>ArchAuftragBetrag_EURO</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag_EUROFormat">
          <DataField>ArchAuftragBetrag_EUROFormat</DataField>
        </Field>
        <Field Name="USD2">
          <DataField>USD2</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag_USD">
          <DataField>ArchAuftragBetrag_USD</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag_USDFormat">
          <DataField>ArchAuftragBetrag_USDFormat</DataField>
        </Field>
        <Field Name="JPY2">
          <DataField>JPY2</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag_JPY">
          <DataField>ArchAuftragBetrag_JPY</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag_JPYFormat">
          <DataField>ArchAuftragBetrag_JPYFormat</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag_USD_WechselkursExchangeRateAmount">
          <DataField>ArchAuftragBetrag_USD_WechselkursExchangeRateAmount</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag_USD_WechselkursExchangeRateAmountFormat">
          <DataField>ArchAuftragBetrag_USD_WechselkursExchangeRateAmountFormat</DataField>
        </Field>
        <Field Name="ExchangeRateAmount_Wechselkurs3">
          <DataField>ExchangeRateAmount_Wechselkurs3</DataField>
        </Field>
        <Field Name="ExchangeRateAmount_Wechselkurs3Format">
          <DataField>ExchangeRateAmount_Wechselkurs3Format</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag_JPY_WechselkursExchangeRateAmount">
          <DataField>ArchAuftragBetrag_JPY_WechselkursExchangeRateAmount</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag_JPY_WechselkursExchangeRateAmountFormat">
          <DataField>ArchAuftragBetrag_JPY_WechselkursExchangeRateAmountFormat</DataField>
        </Field>
        <Field Name="summe1_summe22">
          <DataField>summe1_summe22</DataField>
        </Field>
        <Field Name="summe1_summe22Format">
          <DataField>summe1_summe22Format</DataField>
        </Field>
        <Field Name="ArchAuftragBetragMW">
          <DataField>ArchAuftragBetragMW</DataField>
        </Field>
        <Field Name="ArchAuftragBetragMWFormat">
          <DataField>ArchAuftragBetragMWFormat</DataField>
        </Field>
        <Field Name="waehrung4">
          <DataField>waehrung4</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag">
          <DataField>ArchAuftragBetrag</DataField>
        </Field>
        <Field Name="ArchAuftragBetragFormat">
          <DataField>ArchAuftragBetragFormat</DataField>
        </Field>
        <Field Name="Feld11_Arch_Belegzeile">
          <DataField>Feld11_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld16_Arch_Belegzeile">
          <DataField>Feld16_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="waehrung5">
          <DataField>waehrung5</DataField>
        </Field>
        <Field Name="Feld7_Arch_Belegzeile">
          <DataField>Feld7_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld13_Arch_Belegzeile">
          <DataField>Feld13_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld12_Arch_Belegzeile">
          <DataField>Feld12_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag2">
          <DataField>ArchAuftragBetrag2</DataField>
        </Field>
        <Field Name="ArchAuftragBetrag2Format">
          <DataField>ArchAuftragBetrag2Format</DataField>
        </Field>
        <Field Name="Feld5_Arch_Belegzeile">
          <DataField>Feld5_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld5_Arch_BelegzeileFormat">
          <DataField>Feld5_Arch_BelegzeileFormat</DataField>
        </Field>
        <Field Name="Feld4_Arch_Belegzeile">
          <DataField>Feld4_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld4_Arch_BelegzeileFormat">
          <DataField>Feld4_Arch_BelegzeileFormat</DataField>
        </Field>
        <Field Name="Datum_Arch_Belegzeile">
          <DataField>Datum_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Feld3_Arch_Belegzeile">
          <DataField>Feld3_Arch_Belegzeile</DataField>
        </Field>
        <Field Name="Index_Arch_Belegkopf">
          <DataField>Index_Arch_Belegkopf</DataField>
        </Field>
        <Field Name="Datum_Arch_Belegkopf">
          <DataField>Datum_Arch_Belegkopf</DataField>
        </Field>
        <Field Name="Feld6_Arch_Belegzeile">
          <DataField>Feld6_Arch_Belegzeile</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}
