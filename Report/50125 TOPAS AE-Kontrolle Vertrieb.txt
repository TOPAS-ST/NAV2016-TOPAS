OBJECT Report 50125 TOPAS AE-Kontrolle Vertrieb
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=09:38:34;
    Modified=Yes;
    Version List=FORNAV6.1.0.2145/2145;
    
  }
  PROPERTIES
  {
    ShowPrintStatus=No;
    OnPreReport=BEGIN
                  //var_AU_Nr:='AU248188';    //  Testaufruf
                  AE_holen_Datum_1:=WORKDATE;
                  AE_Kontrolle;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;
    UseRequestPage=No;
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit(); 
                 END;
    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;
    
  }
  DATASET
  {
    { 1000000000;   ;DataItem; tab_vkk                  ;
               DataItemTable=Table36;
               DataItemTableView=WHERE(Document Type=FILTER(Order|Blanket Order));
               OnPreDataItem=BEGIN
                               //tab_zwischen.RESET;
                               //tab_zwischen.SETFILTER(tab_zwischen.Datum,'%1',160459D);
                               //tab_zwischen.SETFILTER(tab_zwischen.AU_Nr,'%1','AU110011');
                               //tab_zwischen.SETFILTER(tab_zwischen.Belegart,'%1','SYST');
                               //IF tab_zwischen.FINDFIRST THEN BEGIN
                               //  var_AU_Nr_Test:=tab_zwischen.Endkunde;
                               //END;
                             END;
               ReqFilterFields=No.;
                }

  }

  REQUESTPAGE
  {
    PROPERTIES
    {
      
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                 ContainerType=ContentArea;
                  }
      { 1900000002;1;Group;
                 CaptionML=[ENU=Options;CSY=Mo§nosti;DAN=Indstillinger;DEU=Optionen;FIN=Vaihtoehdot;ISL=Valkostir;ITS=Opzioni;NOR=Alternativer;NLB=Opties;NLD=Opties;PLK=Opcje;SVE=Alternativ];
                  }
      
      { 5000;2;Field;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Design;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }
    }
  }
  
  
  LABELS
  {
  }
  CODE
  {
    VAR
      var_summe@1140000 : Decimal;
      v_vkk@1140001 : Record 36;
      tab_vkk1@1000000050 : Record 36;
      v_name@1140002 : Text[50];
      tab_vkk_test@1000000000 : Record 36;
      var_AU_Nr@1000000001 : Code[20];
      v_uwe@1000000025 : Boolean;
      v_AE_nach_Excel_ausgeben@1000000024 : Boolean;
      v_t„gl_AE_Liste_kontrollieren@1000000023 : Boolean;
      v_Q_Daten@1000000022 : Record 50014;
      v_deckblatt@1000000021 : Boolean;
      v_bemerkung@1000000020 : Record 44;
      v_sum_AU_MW@1000000019 : Decimal;
      v_sum_AU_WŽ@1000000018 : Decimal;
      v_sum_13B2@1000000017 : Decimal;
      v_EU_Fehler@1000000016 : Decimal;
      v_sum_AE_Gesamt@1000000015 : Decimal;
      v_sum_AE_DL@1000000014 : Decimal;
      v_sum_AE_HAN@1000000013 : Decimal;
      v_sum_AE_SYS@1000000012 : Decimal;
      v_kursdif_vkk_vkz@1000000011 : Boolean;
      tab_vkz@1000000010 : Record 37;
      v_prdbuchgrp@1000000009 : Code[15];
      RADROK@1000000008 : Text[20];
      LADROK@1000000007 : Text[20];
      RAOK@1000000006 : Decimal;
      LAOK@1000000005 : Decimal;
      v_Ust_ID_1@1000000004 : Text[15];
      v_Ust_ID_2@1000000003 : Integer;
      v_USt_ID_fehlt@1000000002 : Boolean;
      Excel@1000000031 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Book@1000000030 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Range@1000000029 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Sheet@1000000028 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      wshFile@1000000027 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      j@1000000026 : Text[30];
      TempExcelBuffer@1000000042 : TEMPORARY Record 370;
      FileMgt@1000000041 : Codeunit 419;
      ServerFileName@1000000040 : Text;
      SheetName@1000000039 : Text[250];
      DoUpdateExistingWorksheet@1000000038 : Boolean;
      Testmode@1000000037 : Boolean;
      Window@1000000036 : Dialog;
      RecNo@1000000035 : Integer;
      TotalRecNo@1000000034 : Integer;
      RowNo@1000000033 : Integer;
      ColumnNo@1000000032 : Integer;
      tab_vkk_arch@1000000045 : Record 5107;
      tab_kurse@1000000044 : Record 330;
      TOPAS_API@1000000043 : Codeunit 50001;
      deb@1000000046 : Record 18;
      tab_ab@1000000048 : Record 37;
      tab_ab_arch@1000000047 : Record 5108;
      Artikel@1000000049 : Record 27;
      v_POS@1000000051 : Integer;
      Pfad@1000000056 : Text;
      Pfaddatum@1000000055 : Text;
      Pfad_tag@1000000054 : Text[10];
      Pfad_monat@1000000053 : Text[10];
      Pfad_jahr@1000000052 : Text[10];
      AE_holen_Datum_1@1000000057 : Date;
      AE_holen_Datum@1000000058 : Date;
      Text002@1000000059 : TextConst 'DEU=Arbeitsmappe aktualisieren;ENU=Update Workbook';
      ExcelFileExtensionTok@1000000060 : TextConst '@@@={Locked};DEU=.xlsx;ENU=.xlsx';
      Text000@1000000061 : TextConst 'DEU=Daten werden analysiert ...\\;ENU=Analyzing Data...\\';
      v_Marge10prozent@1000000062 : Boolean;
      var_AU_Nr_Test@1000000063 : Code[10];
      tab_zwischen@1000000064 : Record 50016;
      v_VAT_fehlt@1000000065 : Boolean;
      v_VAT_Deb@1000000066 : Text[20];
      v_Fehler_16_DL@1000000067 : Boolean;
      v_Fehler_19_DL@1000000068 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001: Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."6");
      CustomLayoutID := ReportLayoutSelection."6";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."6";
    
      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;
    
      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."6");
      LayoutId := ReportLayoutSelection."6";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."6";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;
    

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;
    

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;
    

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId : Text;SectionId : Text); 
    BEGIN
      
    END;
    
    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId : Text;SectionId : Text); 
    BEGIN
      
    END;
    

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;
    
    EVENT ReportForNav@5000::OnPrint@5005(InStream : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName); 
    END;
    
    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;
    

    EVENT ReportForNav@5000::OnView@5003(ClientFileName : Text; Parameters : Text; ServerFileName : Text);
    VAR
      ServerFile : File;
      ServerInStream : InStream;
      Filter : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;
    
    EVENT ReportForNav@5000::OnMessage@5016(Operation : Text;Parameter : Text;ParameterNo : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream"; Preview : Boolean);
    VAR
      ClientFileName : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    LOCAL PROCEDURE AE_Kontrolle@1000000000();
    BEGIN
      //tab_zwischen.RESET;
      //tab_zwischen.SETFILTER(tab_zwischen.Datum,'%1',160459D);
      //tab_zwischen.SETFILTER(tab_zwischen.AU_Nr,'%1','AU110011');
      //tab_zwischen.SETFILTER(tab_zwischen.Belegart,'%1','SYST');
      //IF tab_zwischen.FINDFIRST THEN BEGIN
      //  var_AU_Nr_Test:=tab_zwischen.Endkunde;
      //END;
      //MESSAGE('AE_Kontrolle gestartet'+ var_AU_Nr_Test);
      CreateExcel;
      //tab_vkk.RESET;
      //IF var_AU_Nr_Test='' THEN BEGIN
      //  ERROR('Keine AU-Nummer eingegeben, Liste wurde abgebrochen!');
      //END ELSE BEGIN
      //  tab_vkk.SETFILTER(tab_vkk."Document Type",'%1|%2',tab_vkk."Document Type"::Order,tab_vkk."Document Type"::"Blanket Order");/// Erweitern auf Rahmen
      //  tab_vkk.SETFILTER(tab_vkk."Location Code",'%1|%2','ZENT','KONSI');
      //  tab_vkk.SETFILTER(tab_vkk."No.",'%1',var_AU_Nr_Test);
      //IF tab_vkk.FINDFIRST THEN BEGIN
      //  REPEAT
      IF tab_vkk.FINDFIRST THEN BEGIN
        v_USt_ID_fehlt:=FALSE;
        v_sum_AU_MW:=0;
        v_sum_AU_WŽ:=0;
        v_sum_13B2:=0;
        v_Marge10prozent:=FALSE;
        v_VAT_fehlt:=FALSE;
        v_VAT_Deb:='';
        v_Fehler_16_DL:=FALSE;
        RowNo := 1;
        EnterCell(RowNo,1,FORMAT('AU-Kontrollblatt'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        // Abgleich  Rechnungs- und Lieferadressen mit der Auftragsadresse
        RADROK:='     ';
        LADROK:='     ';
        RAOK:= 0;
        LAOK:= 0;
        //šberprfung Rechnungsadresse
        //Name
        IF tab_vkk."Sell-to Customer Name" <> tab_vkk."Bill-to Name" THEN BEGIN
          RAOK:=RAOK+111
        END ELSE BEGIN
          RAOK:=RAOK+1
        END;
        //Name 2
        IF tab_vkk."Sell-to Customer Name 2" <> tab_vkk."Bill-to Name 2" THEN BEGIN
          RAOK:=RAOK+111
        END ELSE BEGIN
          RAOK:=RAOK+1
        END;
        //Adresse
        IF tab_vkk."Sell-to Address" <> tab_vkk."Bill-to Address" THEN BEGIN
          RAOK:=RAOK+111
        END ELSE BEGIN
          RAOK:=RAOK+1
        END;
        //Adresse 2
        IF tab_vkk."Sell-to Address 2" <> tab_vkk."Bill-to Address 2" THEN BEGIN
          RAOK:=RAOK+111
        END ELSE BEGIN
          RAOK:=RAOK+1
        END;
        //Ort
        IF tab_vkk."Sell-to City" <> tab_vkk."Bill-to City" THEN BEGIN
          RAOK:=RAOK+111
        END ELSE BEGIN
          RAOK:=RAOK+1
        END;
        //Plz
        IF tab_vkk."Sell-to Post Code" <> tab_vkk."Bill-to Post Code" THEN BEGIN
          RAOK:=RAOK+111
        END ELSE BEGIN
          RAOK:=RAOK+1
        END;
        IF RAOK>10 THEN
          RADROK:='Re.Adr. prfen'
        ELSE
          RADROK:='Re.Adr. wie AB';
          //šberprfung Lieferadresse
          //Name
          IF tab_vkk."Sell-to Customer Name" <> tab_vkk."Ship-to Name" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          //Name 2
          IF tab_vkk."Sell-to Customer Name 2" <> tab_vkk."Ship-to Name 2" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          //Adresse
          IF tab_vkk."Sell-to Address" <> tab_vkk."Ship-to Address" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          //Adresse 2
          IF tab_vkk."Sell-to Address 2" <> tab_vkk."Ship-to Address 2" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          //Ort
          IF tab_vkk."Sell-to City" <> tab_vkk."Ship-to City" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          //Plz
          IF tab_vkk."Sell-to Post Code" <> tab_vkk."Ship-to Post Code" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          IF LAOK>10 THEN
            LADROK:='Li.Adr. prfen'
          ELSE
            LADROK:='Li.Adr. wie AB';
      RowNo := 3;
          IF LADROK='Li.Adr. prfen' THEN EnterCell(RowNo,6,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF LADROK='Li.Adr. wie AB' THEN EnterCell(RowNo,6,FORMAT('wie AB'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
      RowNo := 4;
          IF RADROK='Re.Adr. prfen' THEN EnterCell(RowNo,6,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF RADROK='Re.Adr. wie AB' THEN EnterCell(RowNo,6,FORMAT('wie AB'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
      RowNo := 2;
          EnterCell(RowNo,1,'Deb.Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,tab_vkk."Sell-to Customer No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,tab_vkk."Sell-to Customer No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,2,FORMAT(tab_vkk."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Bestellangaben','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."External Document No."='' THEN BEGIN
            EnterCell(RowNo,5,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END ELSE BEGIN
            EnterCell(RowNo,5,FORMAT(tab_vkk."External Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          EnterCell(RowNo,6,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,7,'AU-Adresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(tab_vkk."Sell-to Customer Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vkk."Sell-to Customer Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,FORMAT(tab_vkk."Sell-to Address"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."Sell-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(tab_vkk."Sell-to Country/Region Code"+' '+tab_vkk."Sell-to Post Code"+' '+tab_vkk."Sell-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,9,FORMAT(tab_vkk."Sell-to Address"+' '+tab_vkk."Sell-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,10,FORMAT(tab_vkk."Sell-to Country/Region Code"+' '+tab_vkk."Sell-to Post Code"+' '+tab_vkk."Sell-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(tab_vkk."Sell-to Contact"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
          EnterCell(RowNo,1,'AU-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,2,FORMAT(tab_vkk."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Document Type"=tab_vkk."Document Type"::Order THEN
            EnterCell(RowNo,2,tab_vkk."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk.TABLENAME,1,42,tab_vkk."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Document Type"=tab_vkk."Document Type"::"Blanket Order" THEN
            EnterCell(RowNo,2,tab_vkk."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk.TABLENAME,1,507,tab_vkk."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Your Reference"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Lieferadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(tab_vkk."Ship-to Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vkk."Ship-to Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,FORMAT(tab_vkk."Ship-to Address"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."Ship-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(tab_vkk."Ship-to Country/Region Code"+' '+tab_vkk."Ship-to Post Code"+' '+tab_vkk."Ship-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,9,FORMAT(tab_vkk."Ship-to Address"+' '+tab_vkk."Ship-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,10,FORMAT(tab_vkk."Ship-to Country/Region Code"+' '+tab_vkk."Ship-to Post Code"+' '+tab_vkk."Ship-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(tab_vkk."Ship-to Contact"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 4;
          EnterCell(RowNo,1,'Au-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Order Date"<>tab_vkk."Posting Date" THEN  EnterCell(RowNo,2,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'[red]dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
          IF tab_vkk."Order Date"= tab_vkk."Posting Date" THEN  EnterCell(RowNo,2,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'[blue]dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,4,'Lieferanten-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          deb.RESET;
          deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            IF deb."Our Account No."='' THEN BEGIN
              EnterCell(RowNo,5,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              EnterCell(RowNo,5,FORMAT(deb."Our Account No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            //  Nachgelagerte Debitorinfos ausgeben
            v_VAT_Deb:=deb."VAT Registration No.";
      RowNo := 7;
            EnterCell(RowNo,8,FORMAT(deb."Payment Terms Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb."Payment Terms Code"=tab_vkk."Payment Terms Code" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Payment Terms Code"<>tab_vkk."Payment Terms Code" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      RowNo := 8;
            EnterCell(RowNo,8,FORMAT(deb."Shipment Method Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb."Shipment Method Code"=tab_vkk."Shipment Method Code" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Shipment Method Code"<>tab_vkk."Shipment Method Code" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      RowNo := 9;
            EnterCell(RowNo,8,FORMAT(deb."Shipping Agent Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb."Shipping Agent Code"=tab_vkk."Shipping Agent Code" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Shipping Agent Code"<>tab_vkk."Shipping Agent Code" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      RowNo := 10;
            EnterCell(RowNo,7,'Deb:Sped.Account','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,8,FORMAT(deb.Spediteuraccount),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb.Spediteuraccount=tab_vkk.Spediteuraccount THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb.Spediteuraccount<>tab_vkk.Spediteuraccount THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      RowNo := 14;
            EnterCell(RowNo,6,FORMAT(deb."AB via EMail"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(deb."AB EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb."AB via EMail" = TRUE THEN BEGIN
              IF tab_vkk."AB EMail-Adresse"='' THEN BEGIN
                EnterCell(RowNo,9,FORMAT('prfen ob Mail-Adresse fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                IF deb."AB EMail-Adresse"=tab_vkk."AB EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                IF deb."AB EMail-Adresse"<>tab_vkk."AB EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END ELSE BEGIN
              IF tab_vkk."AB EMail-Adresse"='' THEN BEGIN
                IF deb."AB EMail-Adresse"='' THEN BEGIN
                  EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END ELSE BEGIN
                IF deb."AB EMail-Adresse"<>'' THEN EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            //   IF ((tab_vkk."AB EMail-Adresse"='') AND (deb."AB via EMail"=TRUE)) THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            //    IF ((deb."AB EMail-Adresse"=tab_vkk."AB EMail-Adresse") AND (deb."AB via EMail"=FALSE)) THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            //    IF deb."AB EMail-Adresse"<>tab_vkk."AB EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      RowNo := 15;
            EnterCell(RowNo,6,FORMAT(deb."Rech via EMail"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(deb."Rech EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //    IF ((tab_vkk."Rech EMail-Adresse"='') AND (deb."Rech via EMail"=TRUE)) THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            //    IF (deb."Rech EMail-Adresse"=tab_vkk."Rech EMail-Adresse") AND (deb."Rech EMail-Adresse" <> '') THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            //    IF deb."Rech EMail-Adresse"<>tab_vkk."Rech EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Rech via EMail" = TRUE THEN BEGIN
              IF tab_vkk."Rech EMail-Adresse"='' THEN BEGIN
                EnterCell(RowNo,9,FORMAT('prfen ob Mail-Adresse fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                IF deb."Rech EMail-Adresse"=tab_vkk."Rech EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                IF deb."Rech EMail-Adresse"<>tab_vkk."Rech EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END ELSE BEGIN
              IF tab_vkk."Rech EMail-Adresse"='' THEN BEGIN
                IF deb."Rech EMail-Adresse"='' THEN BEGIN
                  EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END ELSE BEGIN
                IF deb."Rech EMail-Adresse"<>'' THEN EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
      RowNo := 16;
            EnterCell(RowNo,6,FORMAT(deb."Service via EMail"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(deb."Service EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //    IF ((tab_vkk."Service EMail-Adresse"='') AND (deb."Service via EMail"=TRUE)) THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            //    IF (deb."Service EMail-Adresse"=tab_vkk."Service EMail-Adresse") AND (deb."Service EMail-Adresse" <> '') THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            //    IF deb."Service EMail-Adresse"<>tab_vkk."Service EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Service via EMail" = TRUE THEN BEGIN
              IF tab_vkk."Service EMail-Adresse"='' THEN BEGIN
                EnterCell(RowNo,9,FORMAT('prfen ob Mail-Adresse fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                IF deb."Service EMail-Adresse"=tab_vkk."Service EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                IF deb."Service EMail-Adresse"<>tab_vkk."Service EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END ELSE BEGIN
              IF tab_vkk."Service EMail-Adresse"='' THEN BEGIN
                IF deb."Service EMail-Adresse"='' THEN BEGIN
                  EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END ELSE BEGIN
                IF deb."Service EMail-Adresse"<>'' THEN EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
      RowNo := 17;
            EnterCell(RowNo,6,FORMAT(deb."Lizenz via EMail"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(deb."Lizenz EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //    IF ((tab_vkk."Lizenz EMail-Adresse"='') AND (deb."Lizenz via EMail"=TRUE)) THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            //    IF (deb."Lizenz EMail-Adresse"=tab_vkk."Lizenz EMail-Adresse") AND (deb."Lizenz EMail-Adresse" <> '') THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            //    IF deb."Lizenz EMail-Adresse"<>tab_vkk."Lizenz EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Lizenz via EMail" = TRUE THEN BEGIN
              IF tab_vkk."Lizenz EMail-Adresse"='' THEN BEGIN
                EnterCell(RowNo,9,FORMAT('prfen ob Mail-Adresse fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                IF deb."Lizenz EMail-Adresse"=tab_vkk."Lizenz EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                 IF deb."Lizenz EMail-Adresse"<>tab_vkk."Lizenz EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END ELSE BEGIN
              IF tab_vkk."Lizenz EMail-Adresse"='' THEN BEGIN
                IF deb."Lizenz EMail-Adresse"='' THEN BEGIN
                  EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END ELSE BEGIN
                IF deb."Lizenz EMail-Adresse"<>'' THEN EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            // ENDE von Nachgelagerte Debitorinfos ausgeben
          END;
      RowNo := 4;
          EnterCell(RowNo,7,'Rechnungsadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(tab_vkk."Bill-to Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vkk."Bill-to Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,FORMAT(tab_vkk."Bill-to Address"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."Bill-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(tab_vkk."Bill-to Country/Region Code"+' '+tab_vkk."Bill-to Post Code"+' '+tab_vkk."Bill-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,9,FORMAT(tab_vkk."Bill-to Address"+' '+tab_vkk."Bill-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,10,FORMAT(tab_vkk."Bill-to Country/Region Code"+' '+tab_vkk."Bill-to Post Code"+' '+tab_vkk."Bill-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(tab_vkk."Bill-to Contact"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 5;
          EnterCell(RowNo,1,'Buchungsdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Posting Date"<>tab_vkk."Document Date" THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Posting Date"),'',FALSE,FALSE,FALSE,'[red]dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          IF tab_vkk."Posting Date"=tab_vkk."Document Date" THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Posting Date"),'',FALSE,FALSE,FALSE,'[blue]dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,7,'Endkundenadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    deb.RESET;
          //    deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          //    IF deb.FINDFIRST THEN BEGIN
          //      EnterCell(RowNo,5,FORMAT(deb."Our Account No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    END;
          EnterCell(RowNo,8,FORMAT(tab_vkk.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,FORMAT(tab_vkk."Endkunde Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(tab_vkk."Endkunde Land"+' '+tab_vkk."Endkunde PLZ-Code"+' '+tab_vkk."Endkunde Ort"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(tab_vkk."Endkunde Kontakt"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 6;
          EnterCell(RowNo,1,'Belegdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Order Date"<>tab_vkk."Document Date" THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Document Date"),'',FALSE,FALSE,FALSE,'[red]dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          IF tab_vkk."Order Date"=tab_vkk."Document Date" THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Document Date"),'',FALSE,FALSE,FALSE,'[blue]dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 7;
          EnterCell(RowNo,1,'W„hrung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Currency Code"='' THEN BEGIN
            EnterCell(RowNo,2,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            IF tab_vkk."Currency Code"='USD' THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            IF tab_vkk."Currency Code"='JPY' THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            IF tab_vkk."Currency Code"='GBP' THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          END;
          EnterCell(RowNo,4,'Zahlungsbedingung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Payment Terms Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: Zahlungsbed','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 8;
          EnterCell(RowNo,1,'Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.00###',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,4,'Lieferbedingung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Shipment Method Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: Lieferbed','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 9;
          EnterCell(RowNo,1,'Verk„ufer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Salesperson Code"=''THEN BEGIN
            EnterCell(RowNo,2,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END ELSE BEGIN
            EnterCell(RowNo,2,FORMAT(tab_vkk."Salesperson Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          EnterCell(RowNo,4,'SpediteurCode','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Shipping Agent Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: Sped.Code','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 10;
          EnterCell(RowNo,1,'Innen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Betreuer Innendienst"='' THEN BEGIN
            EnterCell(RowNo,2,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END ELSE BEGIN
            EnterCell(RowNo,2,FORMAT(tab_vkk."Betreuer Innendienst"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          EnterCell(RowNo,4,'Sped.Account','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk.Spediteuraccount),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 11;
          EnterCell(RowNo,1,'Gebiet','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk."Territory Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 12;
          EnterCell(RowNo,1,'USt-ID-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    v_Ust_ID_2:=STRPOS(tab_vkk."VAT Registration No.",3,12);
          //   v_Ust_ID_2:=FORMAT(tab_vkk."VAT Registration No.").SEEK(3);
          //    EnterCell(RowNo,4,FORMAT(v_Ust_ID_1),'',FALSE,FALSE,FALSE,'##.###.###.###',TempExcelBuffer."Cell Type"::Number);
          IF tab_vkk."VAT Registration No."='' THEN BEGIN
            EnterCell(RowNo,2,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            v_VAT_fehlt:=TRUE;
          END ELSE BEGIN
            EnterCell(RowNo,2,FORMAT(tab_vkk."VAT Registration No."),'',FALSE,FALSE,FALSE,'##.###.###.###',TempExcelBuffer."Cell Type"::Number);
          END;
      RowNo := 13;
          EnterCell(RowNo,1,'Handelsregister','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          deb.RESET;
          deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            IF deb."Handelsregister Nr"='' THEN BEGIN
              EnterCell(RowNo,2,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              EnterCell(RowNo,2,FORMAT(deb."Handelsregister Nr"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
          END;
      RowNo := 14;
          EnterCell(RowNo,1,'SVS Verzichtskunde','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(deb."SVS Verzichtskunde"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'AU Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."AB EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: AU Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 15;
          EnterCell(RowNo,1,'Deckblatt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          v_deckblatt:=FALSE;
          v_bemerkung.RESET;
          v_bemerkung.SETFILTER(v_bemerkung."No.",tab_vkk."No.");
          IF v_bemerkung.FINDFIRST THEN BEGIN
            v_deckblatt:=TRUE;
          END;
          IF v_deckblatt=FALSE THEN BEGIN
            IF deb."besondere Versandbedingungen"=TRUE THEN v_deckblatt:=TRUE;
          END;
          EnterCell(RowNo,2,FORMAT(v_deckblatt),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'RE Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Rech EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: RE Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 16;
          EnterCell(RowNo,1,'Projekt-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk."Campaign No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Service Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Service EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: Service Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 17;
          EnterCell(RowNo,1,'Keine AB','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk."Keine AB an Kunden"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Lizenz Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Lizenz EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: Lizenz Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 18;
          EnterCell(RowNo,1,'Lagerortcode','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk."Location Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo +4;
          EnterCell(RowNo,1,'Best„tigt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,'Wunschdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,'Pos.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,'Referenznr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,'EK W„hrung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,'EK Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,'EK DC','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,'VK (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,'VK (WŽ)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,'Betrag (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,'Betrag (WŽ)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,15,'Marge %','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,16,'Handling %','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,17,'Zoll %','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,18,'Quote Ex','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,19,'Quote Intern','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,20,'Quote Ablaufdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,21,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,22,'Produktbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,23,'MWSt Probuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,24,'AC Solutionpartner','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,25,'Rahmen-AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,26,'Rahmen-AU WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,27,'Rahmen-AU Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,28,'Rahmen-AU 13B2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,29,'Endkunde','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,30,'Lagerortcode','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,31,'SW als Leistung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          tab_ab.RESET;
          tab_ab.SETFILTER(tab_ab."Document No.",'%1',tab_vkk."No.");
          //    tab_ab.SETFILTER(tab_ab.Type,'%1|%2',tab_ab.Type::Item, tab_ab.Type::"G/L Account");
          IF tab_ab.FINDFIRST THEN BEGIN
            REPEAT
              v_Q_Daten.Gltigkeitsdatum:=0D;
              IF tab_ab."No."='LIEF_DRUCK' THEN BEGIN
              RowNo := RowNo +1;
                EnterCell(RowNo,4,FORMAT(tab_ab."No."),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,5,FORMAT(tab_ab.Description),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
      ///////////////////////////////////////////////////////////////////////////////////////
              IF ((tab_ab.Type=tab_ab.Type::Item) OR (tab_ab.Type=tab_ab.Type::"G/L Account")) THEN BEGIN
      RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(tab_ab."Promised Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(tab_ab."Requested Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(tab_ab."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF tab_ab.Type=tab_ab.Type::Item THEN BEGIN    // Wenn Artikel
                EnterCell(RowNo,4,FORMAT(tab_ab."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                IF tab_ab."Profit %"<10 THEN v_Marge10prozent:=TRUE;
              END ELSE BEGIN
      {
       // MWSt 16%
                IF ((tab_ab."No."='4416') OR (tab_ab."No."='4418') OR (tab_ab."No."='4122')) THEN BEGIN   // Wenn Sachkonto 4416 oder 4122 oder 4418
                  IF ((tab_ab."No."='4416') AND (tab_ab."Gen. Bus. Posting Group"='INLAND')) THEN BEGIN
                    IF tab_ab."VAT Prod. Posting Group"='16_13B2' THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                    IF tab_ab."VAT Prod. Posting Group"='16' THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  END;
                  IF ((tab_ab."No."='4416') AND (tab_ab."Gen. Bus. Posting Group"<>'INLAND')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4122') AND (tab_ab."Gen. Bus. Posting Group"='INLAND')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4122') AND (tab_ab."Gen. Bus. Posting Group"='AUSLAND')) THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4122') AND (tab_ab."Gen. Bus. Posting Group"='EU')) THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4418') AND (tab_ab."VAT Bus. Posting Group"='INLAND')) THEN BEGIN
                    IF ((tab_ab."No."='4418') AND (tab_ab."VAT Prod. Posting Group"='16_13B2')) THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                    IF ((tab_ab."No."='4418') AND (tab_ab."VAT Prod. Posting Group"<>'16_13B2')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF ((tab_ab."No."='4418') AND (tab_ab."VAT Prod. Posting Group"<>'16_13B2')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  END;
                END ELSE BEGIN
                  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);   // Wenn weiteres Sachkonto
                END;
              END;
       // MWSt 16%
      }
       // MWSt 19%
                IF ((tab_ab."No."='4416') OR (tab_ab."No."='4418') OR (tab_ab."No."='4122')) THEN BEGIN   // Wenn Sachkonto 4416 oder 4122 oder 4418
                  IF ((tab_ab."No."='4416') AND (tab_ab."Gen. Bus. Posting Group"='INLAND')) THEN BEGIN
                    IF tab_ab."VAT Prod. Posting Group"='13B2' THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                    IF tab_ab."VAT Prod. Posting Group"='19' THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  END;
                  IF ((tab_ab."No."='4416') AND (tab_ab."Gen. Bus. Posting Group"<>'INLAND')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4122') AND (tab_ab."Gen. Bus. Posting Group"='INLAND')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4122') AND (tab_ab."Gen. Bus. Posting Group"='AUSLAND')) THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4122') AND (tab_ab."Gen. Bus. Posting Group"='EU')) THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4418') AND (tab_ab."VAT Bus. Posting Group"='INLAND')) THEN BEGIN
                    IF ((tab_ab."No."='4418') AND (tab_ab."VAT Prod. Posting Group"='13B2')) THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                    IF ((tab_ab."No."='4418') AND (tab_ab."VAT Prod. Posting Group"<>'13B2')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF ((tab_ab."No."='4418') AND (tab_ab."VAT Prod. Posting Group"<>'13B2')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  END;
                END ELSE BEGIN
                  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);   // Wenn weiteres Sachkonto
                END;
              END;
       // MWSt 19%
              EnterCell(RowNo,5,FORMAT(tab_ab."Cross-Reference No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              IF tab_ab.Einkaufsw„hrungscode='' THEN BEGIN
                EnterCell(RowNo,8,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT(tab_ab.Einkaufsw„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;
              EnterCell(RowNo,9,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.00###',TempExcelBuffer."Cell Type"::Number);
      //        Alte Version von: šberprfung des W„hrungscode
      //        IF tab_vkk."Currency Code"=tab_ab.Einkaufsw„hrungscode THEN BEGIN
      //          IF tab_vkk."Currency Factor"<>tab_ab.Einkaufsw„hrungsfaktor THEN v_kursdif_vkk_vkz:=TRUE;
      //        END;
              IF tab_vkk."Currency Code"=tab_ab.Einkaufsw„hrungscode THEN BEGIN
                IF tab_vkk."Currency Factor"<>tab_ab.Einkaufsw„hrungsfaktor THEN BEGIN
                  IF tab_vkk."Currency Code"='' THEN BEGIN
                  END ELSE BEGIN
                    v_kursdif_vkk_vkz:=TRUE;
                  END;
                END;
              END;
              EnterCell(RowNo,10,FORMAT(tab_ab."DC-Preis (EKW)"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,11,FORMAT(tab_ab."VK-Preis (MW)"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(tab_ab."Unit Price"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              v_sum_AU_MW:=v_sum_AU_MW +ROUND(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity",0.01);
              IF tab_ab.Quantity * tab_ab."Outstanding Quantity" <> 0 THEN
                EnterCell(RowNo,14,FORMAT(tab_ab.Amount/tab_ab.Quantity*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF tab_ab.Quantity*tab_ab."Outstanding Quantity" <> 0 THEN
                v_sum_AU_WŽ:=v_sum_AU_WŽ+ROUND(tab_ab.Amount/tab_ab.Quantity*tab_ab."Outstanding Quantity",0.01);
              IF tab_ab."Profit %"<10 THEN BEGIN
                EnterCell(RowNo,15,FORMAT(tab_ab."Profit %"),'',FALSE,FALSE,FALSE,'[red]###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,15,FORMAT(tab_ab."Profit %"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END;
              EnterCell(RowNo,16,FORMAT(tab_ab."Handlingskosten %"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,31,FORMAT(tab_ab."SW als Leistung"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              Artikel.RESET;
              Artikel.SETFILTER(Artikel."No.",'%1',tab_ab."No.");
              IF Artikel.FINDFIRST THEN BEGIN
                EnterCell(RowNo,17,FORMAT(Artikel."Zollsatz %"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
                IF ((Artikel."Tariff No."='8542 3190 000') AND (Artikel.UStG_13b_frei=FALSE)) THEN v_sum_13B2:=v_sum_13B2+(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity");
      //          IF Artikel."Tariff No."='8542 3190 000' THEN v_sum_13B2:=v_sum_13B2+(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity");
              END;
              IF tab_ab."Quotenr." <>'' THEN BEGIN
                v_Q_Daten.RESET;
                v_Q_Daten.SETFILTER(v_Q_Daten."Quotenr.",'%1',tab_ab."Quotenr.");
                IF v_Q_Daten.FINDFIRST THEN BEGIN
                  EnterCell(RowNo,18,FORMAT(v_Q_Daten."Quotenr. Hersteller"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,19,FORMAT(tab_ab."Quotenr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,20,FORMAT(v_Q_Daten.Gltigkeitsdatum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END;
              IF tab_ab."Gen. Bus. Posting Group"='EU' THEN v_USt_ID_fehlt:=TRUE;
              IF ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND (tab_ab."Gen. Prod. Posting Group"='SYSTEM')) THEN BEGIN   // MWSt 16%  =16_SYSTEM
                IF tab_ab."VAT Prod. Posting Group"='19SYS' THEN BEGIN   // MWSt 16% = 16_SYS
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              IF (((tab_ab."Gen. Bus. Posting Group"='INLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab."Gen. Prod. Posting Group"='SERVICE'))) OR  // MWSt 16% und 19%
                  ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab."Gen. Prod. Posting Group"='SCHULUNG'))) OR    // MWSt 16%  und 19%
                  ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab."Gen. Prod. Posting Group"='STD_POOL')))) THEN BEGIN   // MWSt 16% und 19%
                IF ((tab_ab."VAT Prod. Posting Group"='16_DL') OR (tab_ab."VAT Prod. Posting Group"='19DL')) THEN BEGIN   // MWSt 16% und 19%
                  IF tab_ab."VAT Prod. Posting Group"='16_DL' THEN v_Fehler_16_DL:=TRUE;
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              IF ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND (tab_ab."Gen. Prod. Posting Group"='HANDEL')) THEN BEGIN   // MWSt 16% =16_HANDEL
                IF tab_ab."VAT Prod. Posting Group"='19' THEN BEGIN   // MWSt 16%=16
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab."Gen. Prod. Posting Group"='SYSTEM')) THEN BEGIN   // MWSt 16%=16_SYSTEM
                IF tab_ab."VAT Prod. Posting Group"='19SYS' THEN BEGIN   // MWSt 16%=16_SYS
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
      {
              IF (((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab."Gen. Prod. Posting Group"='16_SERVICE')) OR  // MWSt 16%
                  ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab."Gen. Prod. Posting Group"='16_SCHULUN')) OR   // MWSt 16%
                  ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab."Gen. Prod. Posting Group"='16_STD_POO'))) THEN BEGIN    // MWSt 16%
                IF tab_ab."VAT Prod. Posting Group"='16_DL' THEN BEGIN   // MWSt 16%
      }
              IF (((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab."Gen. Prod. Posting Group"='SERVICE'))) OR  // MWSt 16% und 19%
                  ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab."Gen. Prod. Posting Group"='SCHULUNG'))) OR    // MWSt 16%  und 19%
                  ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab."Gen. Prod. Posting Group"='STD_POOL')))) THEN BEGIN   // MWSt 16% und 19%
                IF ((tab_ab."VAT Prod. Posting Group"='16_DL') OR (tab_ab."VAT Prod. Posting Group"='19DL')) THEN BEGIN   // MWSt 16% und 19%
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab."Gen. Prod. Posting Group"='HANDEL')) THEN BEGIN   // MWSt 16%=16_HANDEL
                IF tab_ab."VAT Prod. Posting Group"='19' THEN BEGIN   // MWSt 16%=16
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_ab."Gen. Prod. Posting Group"='SYSTEM')) THEN BEGIN   // MWSt 16%=16_SYSTEM
                IF tab_ab."VAT Prod. Posting Group"='19SYS' THEN BEGIN   // MWSt 16%=16_SYS
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
      {
              IF (((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_ab."Gen. Prod. Posting Group"='16_SERVICE')) OR  // MWSt 16%
                  ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_ab."Gen. Prod. Posting Group"='16_SCHULUN')) OR   // MWSt 16%
                  ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_ab."Gen. Prod. Posting Group"='16_STD_POO'))) THEN BEGIN   // MWSt 16%
                IF tab_ab."VAT Prod. Posting Group"='16_DL' THEN BEGIN   // MWSt 16%
      }
              IF (((tab_ab."Gen. Bus. Posting Group"='EU') AND ((tab_ab."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab."Gen. Prod. Posting Group"='SERVICE'))) OR  // MWSt 16% und 19%
                  ((tab_ab."Gen. Bus. Posting Group"='EU') AND ((tab_ab."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab."Gen. Prod. Posting Group"='SCHULUNG'))) OR    // MWSt 16%  und 19%
                  ((tab_ab."Gen. Bus. Posting Group"='EU') AND ((tab_ab."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab."Gen. Prod. Posting Group"='STD_POOL')))) THEN BEGIN   // MWSt 16% und 19%
                IF ((tab_ab."VAT Prod. Posting Group"='16_DL') OR (tab_ab."VAT Prod. Posting Group"='19DL')) THEN BEGIN   // MWSt 16% und 19%
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_ab."Gen. Prod. Posting Group"='HANDEL')) THEN BEGIN   // MWSt 16%=16_HANDEL
                IF tab_ab."VAT Prod. Posting Group"='19' THEN BEGIN   // MWSt 16%=16
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              IF ((tab_ab."Gen. Bus. Posting Group"<>'INLAND') AND (tab_ab."Gen. Bus. Posting Group"<>'AUSLAND') AND (tab_ab."Gen. Bus. Posting Group"<>'EU')) THEN
                EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF ((tab_ab."Gen. Bus. Posting Group"<>'INLAND') AND (tab_ab."Gen. Bus. Posting Group"<>'AUSLAND') AND (tab_ab."Gen. Bus. Posting Group"<>'EU')) THEN
                EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF ((tab_ab."Gen. Bus. Posting Group"<>'INLAND') AND (tab_ab."Gen. Bus. Posting Group"<>'AUSLAND') AND (tab_ab."Gen. Bus. Posting Group"<>'EU')) THEN
                EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,24,FORMAT(tab_ab.AC_Solutionpartner),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,25,FORMAT(tab_ab."Blanket Order No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              tab_vkk1.RESET;
              tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',tab_ab."Blanket Order No.");
              IF tab_vkk1.FINDFIRST THEN BEGIN
                IF tab_vkk1."Currency Code"='' THEN BEGIN
                  EnterCell(RowNo,26,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,26,FORMAT(tab_vkk1."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                EnterCell(RowNo,27,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,28,FORMAT(tab_vkk1.USt13b2),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,29,FORMAT(tab_ab.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,30,FORMAT(tab_ab."Location Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
          UNTIL tab_ab.NEXT=0;
        END;
      {
              tab_vkz.RESET;
              tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk."No.");
              tab_vkz.SETFILTER(tab_vkz."No.",'%1','LIEF_DRUCK');
              IF tab_vkz.FINDFIRST THEN BEGIN
                REPEAT
                  RowNo := RowNo +1;
                  EnterCell(RowNo,4,FORMAT(tab_vkz."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,5,FORMAT(tab_vkz.Description),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                UNTIL tab_vkz.NEXT=0;
              END;
      }
      RowNo := RowNo +2;
        EnterCell(RowNo,1,'Gesamt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,13,FORMAT(v_sum_AU_MW),'',TRUE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        EnterCell(RowNo,14,FORMAT(v_sum_AU_WŽ),'',TRUE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF (tab_vkk."Docuware Gesendet" = FALSE) THEN BEGIN
        RowNo := RowNo +1;
        EnterCell(RowNo,1,'Das Deckblatt wurde nocht nicht gedruckt bzw. in DocuWare abgelegt! ','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      END;
      RowNo := RowNo +2;
        v_bemerkung.RESET;    //    Anzeige von Bemerkungszeilen
        v_bemerkung.SETFILTER(v_bemerkung."No.",'%1',tab_vkk."No.");
        IF v_bemerkung.FINDFIRST THEN BEGIN
          EnterCell(RowNo,1,'Bemerkungen: ','',TRUE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          REPEAT
      RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT(v_bemerkung.Date),'',TRUE,FALSE,FALSE,'dd.mm.yyyy[blue]',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,FORMAT(v_bemerkung.Comment),'',TRUE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          UNTIL v_bemerkung.NEXT=0;
      RowNo := RowNo +1;
        END;
        IF v_sum_13B2>=5000 THEN BEGIN  //  šberprfung ob USt 13B2 in Frage kommt
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Achtung!!! Auf 13B2-Auftrag prfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Es muss 13B2 in der Spalte Gesch„ftsbuchungsgruppe bei obigen Zeilen eingetragen sein','',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Es muss 13B2 in der Spalte MWSt-Produktbuchungsgruppe bei obigen Zeilen eingetragen sein','',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Summe Zollpos 8542 3190 000:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(v_sum_13B2),'',FALSE,FALSE,FALSE,'###,###,##0.00[red]',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Ist 13B2-H„kchen im AU-Kopf gesetzt?','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_vkk.USt13b2),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Wenn nicht, H„kchen setzen (letzte Gruppe im AU)','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Lieferung im Inland?','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_EU_Fehler:=0;   //   šberprfung ob bei der Gesch„ftsbuchungsgruppe EU auch in die EU geliefert wird
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='AT')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='BE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='BG')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='CY')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='CZ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='DK')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='EE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='ES')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='FI')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='FR')) THEN v_EU_Fehler:=1;
      //  IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='GB')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='GR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='HU')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='IE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='IT')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='LT')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='LU')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='LV')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='ME')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='MT')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='NL')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='PL')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='PT')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='RO')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='RS')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='SE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='SI')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='SK')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (v_EU_Fehler=0)) THEN BEGIN
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Bitte šberprfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END;
        //   šberprfung ob bei der Gesch„ftsbuchungsgruppe INLAND auch ins Inland geliefert wird
        IF ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND (tab_vkk."Ship-to Country/Region Code" <>'DE')) THEN BEGIN
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Bitte šberprfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END;
        // šberprfung ob bei einer EU-/Auslandslieferung auch der Andruck des entsprechenden Textes erfolgt
        IF ((tab_vkk."Gen. Bus. Posting Group"='INLAND') AND (tab_vkk."Ship-to Country/Region Code" <>'DE')) THEN BEGIN
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Bitte šberprfen. Kein Andruck von  *** Intra-Community supply of goods','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Gesch„ftsbuchgrp im Kopf','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END;
        v_EU_Fehler:=0;   //   šberprfung ob bei der Gesch„ftsbuchungsgruppe AUSLAND auch ins Ausland geliefert wird
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='AE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='AR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='AS')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='AU')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BA')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BM')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BN')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BY')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CA')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CH')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CL')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CN')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CO')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CS')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='DZ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='EG')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='FJ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='HK')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='HR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='ID')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='IL')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='IN')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='IS')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='JP')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='KE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='KP')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='KR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='LB')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='LI')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='LK')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MA')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MD')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MK')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MX')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MY')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MZ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='NG')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='NO')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='NZ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='PE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='PH')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='RU')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SA')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SB')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SC')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SG')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SZ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TH')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TN')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TW')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TZ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='UA')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='UG')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='US')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='VN')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='VU')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='WS')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='ZA')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (v_EU_Fehler=0)) THEN BEGIN
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Bitte šberprfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Gen. Bus. Posting Group"<>'EU')) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Gesch„ftsbuchungsgruppe in Kopf und Zeile abweichend. Berichtigen!!!','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND (tab_vkk."Gen. Bus. Posting Group"<>'INLAND')) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Gesch„ftsbuchungsgruppe in Kopf und Zeile abweichend. Berichtigen!!!','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Gen. Bus. Posting Group"<>'AUSLAND')) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Gesch„ftsbuchungsgruppe in Kopf und Zeile abweichend. Berichtigen!!!','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF v_Q_Daten.Gltigkeitsdatum<>0D THEN BEGIN
          IF v_Q_Daten.Gltigkeitsdatum<=WORKDATE THEN BEGIN   //  šberprfung auf abgelaufene Qoutes
      RowNo := RowNo +1;
            EnterCell(RowNo,1,'Ein Qoute ist abgelaufen.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
        END;
      {
          deb.RESET;    //   šberprfung  der Liefer- und Zahlungsbedingungen mit Debitorvorgaben
          deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            IF deb."Payment Terms Code"<>tab_vkk."Payment Terms Code" THEN BEGIN
      RowNo := RowNo +1;
              EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Zahlungsbedingung: '+deb."Payment Terms Code"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
            IF deb."Shipment Method Code"<>tab_vkk."Shipment Method Code" THEN BEGIN
      RowNo := RowNo +1;
              EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Lieferbedingung: '+deb."Shipment Method Code"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
            IF deb."AB EMail-Adresse"<>'' THEN BEGIN
              IF deb."AB EMail-Adresse"<>tab_vkk."AB EMail-Adresse" THEN BEGIN
      RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; AB Emailadresse: '+deb."AB EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            IF deb."Rech EMail-Adresse"<>'' THEN BEGIN
              IF deb."Rech EMail-Adresse"<>tab_vkk."Rech EMail-Adresse" THEN BEGIN
      RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Rech Emailadresse: '+deb."Rech EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            IF deb."Service EMail-Adresse"<>'' THEN BEGIN
              IF deb."Service EMail-Adresse"<>tab_vkk."Service EMail-Adresse" THEN BEGIN
      RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Service Emailadresse: '+deb."Service EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            IF deb."Lizenz EMail-Adresse"<>'' THEN BEGIN
              IF deb."Lizenz EMail-Adresse"<>tab_vkk."Lizenz EMail-Adresse" THEN BEGIN
      RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Lizenz Emailadresse: '+deb."Lizenz EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
          END;
      }
        tab_vkk1.RESET;    //  šberprfung der Rahmenw„hrung und -kurs mit der Auftragsw„hrung und -kurs
        tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',tab_ab."Blanket Order No.");
        IF tab_vkk1.FINDFIRST THEN BEGIN
          IF tab_vkk1."Currency Code"<>'' THEN BEGIN
            IF tab_vkk1."Currency Code"=tab_vkk."Currency Code" THEN BEGIN
              IF tab_vkk1."Currency Factor"=tab_vkk."Currency Factor" THEN BEGIN
              END ELSE BEGIN
                //          Keine Kurs-šbereinstimmung
                RowNo := RowNo +1;
                EnterCell(RowNo,1,'Rahmenauftrag: '+tab_vkk1."No."+'; Rahmenkurs: '+FORMAT(tab_vkk1."Currency Factor")+' weicht ab.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END ELSE BEGIN
              //        keine W„hrungs-šbereinstimmung
              RowNo := RowNo +1;
              EnterCell(RowNo,1,'Rahmenauftrag: '+tab_vkk1."No."+'; Rahmenw„hrung: '+tab_vkk1."Currency Code"+' weicht ab.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
          END;
        END;
        IF v_kursdif_vkk_vkz=TRUE THEN BEGIN
      RowNo := RowNo +1;
          EnterCell(RowNo,1,'Der Kurs im AU-Kopf weicht von den Auftragszeilen ab.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_kursdif_vkk_vkz:=FALSE;
        //    Hier weitere Abfragen einbauen
      // unterschiedliche Gesch„ftsbuchungsgruppen abprfen
        tab_vkz.RESET;
        tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk."No.");
        tab_vkz.SETFILTER(tab_vkz.Type,'%1|%2',tab_vkz.Type::Item, tab_vkz.Type::"G/L Account");
        IF tab_vkz.FINDFIRST THEN BEGIN
          v_prdbuchgrp:=tab_vkz."Gen. Bus. Posting Group";
          REPEAT
            IF tab_vkz."Gen. Bus. Posting Group"<>v_prdbuchgrp THEN BEGIN
      RowNo := RowNo +1;
              EnterCell(RowNo,1,'Im Auftrag gibt es unterschiedliche Gesch„ftsbuchungsgruppen.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
          UNTIL tab_vkz.NEXT=0;
        END;
      // Anzeigen, wenn es Textkonserven gibt
        tab_vkz.RESET;
        tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk."No.");
        tab_vkz.SETFILTER(tab_vkz.Type,'%1',tab_vkz.Type::" ");
        tab_vkz.SETFILTER(tab_vkz."No.",'<>%1','');
        IF tab_vkz.FIND('-') THEN BEGIN
          REPEAT
      RowNo := RowNo +1;
            EnterCell(RowNo,1,'Im Auftrag gibt es die Textkonserve '+ tab_vkz."No."+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          UNTIL tab_vkz.NEXT=0;
        END;
      {
          tab_vkz.RESET;
          tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk."No.");
          tab_vkz.SETFILTER(tab_vkz."No.",'%1','LIEF_DRUCK');
          IF tab_vkz.FINDFIRST THEN BEGIN
      RowNo := RowNo +1;
            EnterCell(RowNo,1,'Beschreibung:','',TRUE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            REPEAT
      RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(tab_vkz.Description),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            UNTIL tab_vkz.NEXT=0;
            RowNo := RowNo +1;
          END;
      }
        // Wenn Verk„ufercode/Betreuer Innen oder Gebietscode leer ist
        IF tab_vkk."Salesperson Code"='' THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Es fehlt der Verk„ufercode: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF tab_vkk."Salesperson Code"='MULTI' THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Verk„ufercode = MULTI, bitte berichtigen bei: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF tab_vkk."Territory Code"='' THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Es fehlt der Gebietscode: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF tab_vkk."Betreuer Innendienst"='' THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Es fehlt der Betreuer Innen: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF tab_vkk."Betreuer Innendienst"='MULTI' THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Betreuer Innen = MULTI, bitte berichtigen bei: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF ((tab_vkk."VAT Registration No."='') AND (v_USt_ID_fehlt=TRUE)) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Keine USt-ID-Nr hinterlegt, bitte nachtragen bei: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF tab_vkk."External Document No."='' THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Keine externe Belegnr. hinterlegt, bitte nachtragen bei: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF tab_vkk."AE reduzieren"=TRUE THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Dieser Auftrag soll den AE reduzieren: '+tab_vkk."No."+'. Doppel-Reduzierungen w/ Gutschriften vermeiden!'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        //  diverse Email-Adressen auf Besteller durchsuchen
        v_POS := STRPOS(tab_vkk."AB EMail-Adresse",'Besteller');
        IF v_POS <> 0 THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Das Wort -Besteller- ist in der Emailadresse vorhanden, bitte berichtigen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_POS:=0;
        v_POS := STRPOS(tab_vkk."Rech EMail-Adresse",'Besteller');
        IF v_POS <> 0 THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Das Wort -Besteller- ist in der Emailadresse vorhanden, bitte berichtigen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_POS:=0;
        v_POS := STRPOS(tab_vkk."Service EMail-Adresse",'Besteller');
        IF v_POS <> 0 THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Das Wort -Besteller- ist in der Emailadresse vorhanden, bitte berichtigen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_POS:=0;
        v_POS := STRPOS(tab_vkk."Lizenz EMail-Adresse",'Besteller');
        IF v_POS <> 0 THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Das Wort -Besteller- ist in der Emailadresse vorhanden, bitte berichtigen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_POS:=0;
        v_POS := STRPOS(tab_vkz.Description,'0%');
        IF v_POS <> 0 THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Im Feld Beschreibung ist " 0% " vorhanden, bitte streichen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_POS:=0;
        IF v_Marge10prozent=TRUE THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Eine Marge ist unter 10%. Bitte prfen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF ((v_VAT_Deb='') AND (v_VAT_fehlt=TRUE)) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('USt-ID-Nr fehlt im Auftrag und im Debitor.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF ((v_VAT_Deb<>'') AND (v_VAT_fehlt=TRUE)) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('USt-ID-Nr fehlt im Auftrag. Im Debitor ist '+v_VAT_Deb+' hinterlegt.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF v_Fehler_16_DL=TRUE THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Es wurde 16% MWSt fr eine Dienstleistung im Auftrag festgestellt. Fehler? Bitte prfen'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        tab_vkz.RESET;
        tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk."No.");
        tab_vkz.SETFILTER(tab_vkz."Manufacturer Code",'%1','59');
        tab_vkz.SETFILTER(tab_vkz."No.",'%1','SW*');
        IF tab_vkz.FIND('-') THEN BEGIN
          IF tab_vkk."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('SW als Leistung k”nnte m”glich sein. Bitte berprfen! '),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
        END;
      END;
      RowNo := RowNo +2;
      EnterCell(RowNo,1,FORMAT('kontrolliert:'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo +3;
      Pfad_tag :=FORMAT(DATE2DMY(WORKDATE,1));
      Pfad_monat := FORMAT(DATE2DMY(WORKDATE,2));
      Pfad_jahr := FORMAT(DATE2DMY(WORKDATE,3));
      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      CloseExcel('AE_'+tab_vkk."No."+Pfaddatum,'AE_'+tab_vkk."No."+Pfaddatum,'F:\Daten Neu\Gemeinsame Ordner\Auftragseingang\AE_Kontrolle\2020_2021');
      //    CloseExcel('AU-Kontrolle','AU-Kontrolle','');
      //  UNTIL tab_vkk.NEXT = 0;
      //END;
    END;
    LOCAL PROCEDURE CreateExcel@1000000010();
    BEGIN
      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;
      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');
      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);
    END;
    LOCAL PROCEDURE CloseExcel@1000000011(Sheetname@1000000000 : Text;FileName@1000000001 : Text;FilePath@1000000002 : Text);
    BEGIN
      Window.CLOSE;
      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet(Sheetname,COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          IF (FileName = '') OR (FilePath = '') THEN
            TempExcelBuffer.OpenExcel //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
        ELSE
            TempExcelBuffer.OpenExcelWithoutAutoFit(Sheetname,FileName + ExcelFileExtensionTok,FilePath,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;
    LOCAL PROCEDURE EnterCell@1000000012(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];Formular@1000000008 : Text[250];Bold@1000000003 : Boolean;Italic@1000000004 : Boolean;UnderLine@1000000005 : Boolean;NumberFormat@1000000006 : Text[30];CellType@1000000007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := Formular;
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;
    LOCAL PROCEDURE UpdateCell@1000000013(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250]);
    BEGIN
      IF TempExcelBuffer.GET(RowNo,ColumnNo)  THEN BEGIN
        TempExcelBuffer."Cell Value as Text" := CellValue;
        TempExcelBuffer.MODIFY;
      END;
    END;
    LOCAL PROCEDURE "Set-Parameter"@1000000001(VAR AU_Nr@1000000000 : Code[20]);
    BEGIN
      var_AU_Nr := AU_Nr;
      AE_Kontrolle;
    END;
    EVENT Sheet@1000000028::SelectionChange@1543(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range");
    BEGIN
    END;
    EVENT Sheet@1000000028::BeforeDoubleClick@1537(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Sheet@1000000028::BeforeRightClick@1534(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Sheet@1000000028::Activate@304();
    BEGIN
    END;
    EVENT Sheet@1000000028::Deactivate@1530();
    BEGIN
    END;
    EVENT Sheet@1000000028::Calculate@279();
    BEGIN
    END;
    EVENT Sheet@1000000028::Change@1545(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range");
    BEGIN
    END;
    EVENT Sheet@1000000028::FollowHyperlink@1470(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Hyperlink");
    BEGIN
    END;
    EVENT Sheet@1000000028::PivotTableUpdate@2156(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable");
    BEGIN
    END;
    EVENT Sheet@1000000028::PivotTableAfterValueChange@2886(TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range");
    BEGIN
    END;
    EVENT Sheet@1000000028::PivotTableBeforeAllocateChanges@2889(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Sheet@1000000028::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Sheet@1000000028::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;
    EVENT Sheet@1000000028::PivotTableChangeSync@2894(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable");
    BEGIN
    END;
    EVENT Sheet@1000000028::LensGalleryRenderComplete@3072();
    BEGIN
    END;
    EVENT Sheet@1000000028::TableUpdate@3073(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{000244CE-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.TableObject");
    BEGIN
    END;
    EVENT Sheet@1000000028::BeforeDelete@3074();
    BEGIN
    END;
    EVENT Book@1000000030::Open@1923();
    BEGIN
    END;
    EVENT Book@1000000030::Activate@304();
    BEGIN
    END;
    EVENT Book@1000000030::Deactivate@1530();
    BEGIN
    END;
    EVENT Book@1000000030::BeforeClose@1546(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Book@1000000030::BeforeSave@1547(SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Book@1000000030::BeforePrint@1549(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Book@1000000030::NewSheet@1550(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;
    EVENT Book@1000000030::AddinInstall@1552();
    BEGIN
    END;
    EVENT Book@1000000030::AddinUninstall@1553();
    BEGIN
    END;
    EVENT Book@1000000030::WindowResize@1554(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Window");
    BEGIN
    END;
    EVENT Book@1000000030::WindowActivate@1556(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Window");
    BEGIN
    END;
    EVENT Book@1000000030::WindowDeactivate@1557(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Window");
    BEGIN
    END;
    EVENT Book@1000000030::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range");
    BEGIN
    END;
    EVENT Book@1000000030::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Book@1000000030::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Book@1000000030::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;
    EVENT Book@1000000030::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;
    EVENT Book@1000000030::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;
    EVENT Book@1000000030::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range");
    BEGIN
    END;
    EVENT Book@1000000030::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Hyperlink");
    BEGIN
    END;
    EVENT Book@1000000030::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable");
    BEGIN
    END;
    EVENT Book@1000000030::PivotTableCloseConnection@2158(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable");
    BEGIN
    END;
    EVENT Book@1000000030::PivotTableOpenConnection@2159(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable");
    BEGIN
    END;
    EVENT Book@1000000030::Sync@2266(SyncEventType@1000000000 : Integer);
    BEGIN
    END;
    EVENT Book@1000000030::BeforeXmlImport@2283(Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Book@1000000030::AfterXmlImport@2285(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;
    EVENT Book@1000000030::BeforeXmlExport@2287(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Book@1000000030::AfterXmlExport@2288(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;
    EVENT Book@1000000030::RowsetComplete@2610(Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Book@1000000030::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range");
    BEGIN
    END;
    EVENT Book@1000000030::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Book@1000000030::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Book@1000000030::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;
    EVENT Book@1000000030::SheetPivotTableChangeSync@2899(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable");
    BEGIN
    END;
    EVENT Book@1000000030::AfterSave@2900(Success@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Book@1000000030::NewChart@2901(Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Chart");
    BEGIN
    END;
    EVENT Book@1000000030::SheetLensGalleryRenderComplete@3075(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;
    EVENT Book@1000000030::SheetTableUpdate@3076(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{000244CE-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.TableObject");
    BEGIN
    END;
    EVENT Book@1000000030::ModelChange@3077(Changes@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{000244E4-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.ModelChanges");
    BEGIN
    END;
    EVENT Book@1000000030::SheetBeforeDelete@3079(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;
    EVENT Book@1000000030::BeforeRemoteChange@3331();
    BEGIN
    END;
    EVENT Book@1000000030::AfterRemoteChange@3332();
    BEGIN
    END;
    EVENT Excel@1000000031::NewWorkbook@1565(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook");
    BEGIN
    END;
    EVENT Excel@1000000031::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range");
    BEGIN
    END;
    EVENT Excel@1000000031::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;
    EVENT Excel@1000000031::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;
    EVENT Excel@1000000031::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;
    EVENT Excel@1000000031::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookOpen@1567(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookActivate@1568(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookDeactivate@1569(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookBeforeClose@1570(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookBeforeSave@1571(Wb@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookBeforePrint@1572(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookNewSheet@1573(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookAddinInstall@1574(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookAddinUninstall@1575(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook");
    BEGIN
    END;
    EVENT Excel@1000000031::WindowResize@1554(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Window");
    BEGIN
    END;
    EVENT Excel@1000000031::WindowActivate@1556(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Window");
    BEGIN
    END;
    EVENT Excel@1000000031::WindowDeactivate@1557(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Window");
    BEGIN
    END;
    EVENT Excel@1000000031::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Hyperlink");
    BEGIN
    END;
    EVENT Excel@1000000031::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookPivotTableCloseConnection@2160(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookPivotTableOpenConnection@2161(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookSync@2289(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";SyncEventType@1000000000 : Integer);
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookBeforeXmlImport@2290(Wb@1000000004 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookAfterXmlImport@2291(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookBeforeXmlExport@2292(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookAfterXmlExport@2293(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookRowsetComplete@2611(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::AfterCalculate@2612();
    BEGIN
    END;
    EVENT Excel@1000000031::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Range");
    BEGIN
    END;
    EVENT Excel@1000000031::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;
    EVENT Excel@1000000031::ProtectedViewWindowOpen@2903(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;
    EVENT Excel@1000000031::ProtectedViewWindowBeforeEdit@2905(Pvw@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.ProtectedViewWindow";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::ProtectedViewWindowBeforeClose@2906(Pvw@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.ProtectedViewWindow";Reason@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::ProtectedViewWindowResize@2908(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;
    EVENT Excel@1000000031::ProtectedViewWindowActivate@2909(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;
    EVENT Excel@1000000031::ProtectedViewWindowDeactivate@2910(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookAfterSave@2911(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Success@1000000000 : Boolean);
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookNewChart@2912(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Chart");
    BEGIN
    END;
    EVENT Excel@1000000031::SheetLensGalleryRenderComplete@3075(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;
    EVENT Excel@1000000031::SheetTableUpdate@3076(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{000244CE-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.TableObject");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookModelChange@3080(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook";Changes@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{000244E4-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.ModelChanges");
    BEGIN
    END;
    EVENT Excel@1000000031::SheetBeforeDelete@3079(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookBeforeRemoteChange@3339(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook");
    BEGIN
    END;
    EVENT Excel@1000000031::WorkbookAfterRemoteChange@3340(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.9:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 16.0 Object Library'.Workbook");
    BEGIN
    END;
    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>XgMAAI1TXW/aMBR9n7T/YPmlIIET0vCxirSiEDTUChBQurfJSS6rh2NnjhOaaT9+TiCsQ9pHXuJ7
cu7HOdcZ3r3GHOWgUiaFhzvExghEKCMmvng407v2AN/dvn83/KQVXUEilU4faSEzvQbFKGffQaFf
x+25kEsc0i2r/QZhNKcxeHizWI7WaOS3H6TQSnIOJU8rBgFG4yO2KRLDnEDuvyYK0pS8GYE8zd6E
Tgv9gZaXTVv1DMhD9VwtNM64zhQYTEBmUngLLbOAs/ABio3cQ8mO+iEdwMCx+zsXXNuombA04bT4
DxWnEaZSzWl+NuGaGItJx+2ZWovgK4R6Lj3ctTtO9wz8u/aUAY+eITDG5yyEJ8U9/KJ1cmNZ89F2
7a+2bcfu9MjB2RMtE5qSCG76tjuwJoWgMQtTQ/tgW4sJ1dQayzihomhcVT2vmhitX+RhqZjQa011
lnp4R3kK2NwDhIb3VERpdTTBTEPcOS1V0+Bzvt9fLPBoQNmo5JbJxsVTtKXqIrX+sqEBL10oX9e9
C3zL4ODh54/+ym9MZJjFIDSquk1njxt/1VioCNSPe07FHjSqomazXMm3KeMaVOWfkTWXBKNZZO6m
XT/4pKwWiqxaqlVpPXpg1SYMrb/8GLc/AQ==</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page>
      </Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}
