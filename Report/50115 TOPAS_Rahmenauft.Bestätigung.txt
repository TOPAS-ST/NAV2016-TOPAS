OBJECT Report 50115 TOPAS_Rahmenauft.Best„tigung
{
  OBJECT-PROPERTIES
  {
    Date=22.08.17;
    Time=09:56:22;
    Modified=Yes;
    Version List=Beleg !!ausfhrbar !!,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    UseSystemPrinter=Yes;
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   CurrReport.USEREQUESTPAGE(TRUE);
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  //AnzKopien:=1;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

    UseRequestPage=Yes;
  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Blanket Order),
                                       Location Code=FILTER(ZENT|KONSI));
               PrintOnlyIfDetail=Yes;
               ReqFilterHeadingML=DEU=Rahmenauftrag;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  //25.04.2012-ST
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    CLEAR(VerkEinkPerson);
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText :='Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesHeaderBillTo(DebAdr,"Sales Header");
                                  FormatAdr.SalesHeaderSellTo(VerkAdr,"Sales Header");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF (LieferAnAdr[i] <> VerkAdr[i]) OR (DebAdr[i] <> VerkAdr[i]) THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung:='[ '+'°'+' ]';
                                    waehrung2:='EUR';
                                  END ELSE BEGIN
                                    waehrung:='[ '+"Currency Code"+' ]';
                                    waehrung2:="Currency Code";
                                  END;
                                  v_FER_SPL:=FALSE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed,Order Date }

    { 2   ;1   ;DataItem;Debitor             ;
               DataItemTable=Table18;
               DataItemLinkReference=Sales Header;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;2   ;DataItem;                    ;
               DataItemTable=Table291;
               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 4   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 5   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               //AnzSchleifen := ABS(AnzKopien) + 0;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               sum_restauftragsbestand:=0;
                             END;

               OnAfterGetRecord=BEGIN
                                  sum_restauftragsbestand:=0;
                                  CLEAR(VerkZeile2);
                                  CLEAR(VerkBuchen);
                                  VerkBuchen.GetSalesLines("Sales Header",VerkZeile2,0);
                                  IF CurrReport.LANGUAGE = 1031 THEN
                                    Titel := 'Kontraktbest„tigung'
                                  ELSE
                                    Titel := 'Contract Confirmation';
                                  IF Number > 1 THEN
                                    ReportForNav.PrinterSettings.PaperSource(1)
                                  ELSE
                                    ReportForNav.PrinterSettings.PaperSource(3);
                                  v_keine_AB := '';
                                  "ab vor wandlung" := '';
                                  "via EMail_adresse":= '';
                                  "via Email_unterschrift" := '';
                                  "via Email" := '';
                                  kunde.GET("Sales Header"."Sell-to Customer No.");
                                  IF Number > 1 THEN BEGIN
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      KopieText := 'skopie'
                                    ELSE
                                      KopieText := ' Copy';
                                    IF kunde."AB vor Wandlung" THEN "ab vor wandlung" := 'Achtung erst AB dann Wandeln !!!';
                                    IF "Sales Header"."keine Rahmen-AB an Kunden" THEN v_keine_AB := 'Keine Best„tigung an Kunden !';
                                    IF kunde."AB via EMail" THEN BEGIN
                                      "via Email_unterschrift" :='Erledigt von ..............'  ;
                                      "via Email" := 'Achtung via E-Mail versenden !!!';
                                      "via EMail_adresse":="Sales Header"."AB EMail-Adresse";
                                    END;
                                  END;
                                  ReportForNav.PageNo := 1;
                                  IF "Sales Header"."Document Date" > "Sales Header"."Order Date" THEN BEGIN
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      „nderung := 'Žnderungs-'
                                    ELSE
                                      „nderung := 'Change'
                                  END ELSE BEGIN
                                    „nderung :='';
                                  END;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                  IF ("Sales Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Header"."Shipment Method Code" = 'ACC-ENG') THEN
                                    Account := "Sales Header".Spediteuraccount
                                  ELSE
                                    Account := "Shipping Agent".Name
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkDruckZ„hler.RUN("Sales Header");
                              END;
                               }

    { 6   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 7   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 8   ;3   ;Column  ;v_keine_AB          ;
               SourceExpr=v_keine_AB }

    { 9   ;3   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 10  ;3   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 11  ;3   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 12  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               SourceExpr="Salesperson/Purchaser"."First name" + ' ' +"Salesperson/Purchaser".Name }

    { 13  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 14  ;3   ;Column  ;WORKDATE            ;
               SourceExpr=WORKDATE }

    { 15  ;3   ;Column  ;viaEmail_unterschrift;
               SourceExpr="via Email_unterschrift" }

    { 16  ;3   ;Column  ;viaEMail_adresse    ;
               SourceExpr="via EMail_adresse" }

    { 17  ;3   ;Column  ;viaEmail            ;
               SourceExpr="via Email" }

    { 18  ;3   ;Column  ;abvorwandlung       ;
               SourceExpr="ab vor wandlung" }

    { 19  ;3   ;Column  ;anderung            ;
               SourceExpr=„nderung }

    { 20  ;3   ;Column  ;SalesHeaderExternalDocumentNo__SalesHeaderYourReference;
               SourceExpr="Sales Header"."External Document No."+' '+"Sales Header"."Your Reference" }

    { 21  ;3   ;Column  ;OurAccountNo_Debitor;
               SourceExpr=Debitor."Our Account No." }

    { 22  ;3   ;Column  ;MWStNrText          ;
               SourceExpr=MWStNrText }

    { 23  ;3   ;Column  ;VATRegistrationNo_SalesHeader;
               SourceExpr="Sales Header"."VAT Registration No." }

    { 24  ;3   ;Column  ;Titel_KopieText     ;
               SourceExpr=Titel + KopieText }

    { 25  ;3   ;Column  ;No_SalesHeader      ;
               SourceExpr="Sales Header"."No." }

    { 26  ;3   ;Column  ;Bill_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Bill-to Customer No." }

    { 27  ;3   ;Column  ;SalesHeaderDocumentDate_0_1;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 28  ;3   ;Column  ;seite               ;
               SourceExpr=seite }

    { 29  ;3   ;Column  ;VerkAdr8            ;
               SourceExpr=VerkAdr[8] }

    { 30  ;3   ;Column  ;VerkAdr7            ;
               SourceExpr=VerkAdr[7] }

    { 31  ;3   ;Column  ;VerkAdr6            ;
               SourceExpr=VerkAdr[6] }

    { 32  ;3   ;Column  ;VerkAdr5            ;
               SourceExpr=VerkAdr[5] }

    { 33  ;3   ;Column  ;VerkAdr4            ;
               SourceExpr=VerkAdr[4] }

    { 34  ;3   ;Column  ;VerkAdr3            ;
               SourceExpr=VerkAdr[3] }

    { 35  ;3   ;Column  ;VerkAdr2            ;
               SourceExpr=VerkAdr[2] }

    { 36  ;3   ;Column  ;VerkAdr1            ;
               SourceExpr=VerkAdr[1] }

    { 37  ;3   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 38  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := VerkZeile2.FIND('+');
                               WHILE MehrZeilen AND (VerkZeile2.Description = '') AND
                                     (VerkZeile2."No." = '') AND (VerkZeile2.Quantity = 0) AND
                                     (VerkZeile2.Amount = 0) DO
                                 MehrZeilen := VerkZeile2.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               VerkZeile2.SETRANGE("Line No.",0,VerkZeile2."Line No.");
                               SETRANGE(Number,1,VerkZeile2.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    VerkZeile2.FIND('-')
                                  ELSE
                                    VerkZeile2.NEXT;
                                  "Sales Line" := VerkZeile2;
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "Sales Line"."VAT %";
                                  MWSTBetragZeile."VAT Base" := "Sales Line".Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Sales Line"."Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  IF v_FER_SPL=FALSE THEN BEGIN
                                    IF (("Sales Line"."Manufacturer Code" ='82') OR ("Sales Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL:=TRUE;
                                    END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                VerkZeile2.DELETEALL;
                              END;

               DataItemLinkReference=SeiteSchleife }

    { 39  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 40  ;4   ;Column  ;sum_restauftragsbestand;
               SourceExpr=sum_restauftragsbestand;
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 41  ;4   ;Column  ;Description_SalesLine;
               SourceExpr="Sales Line".Description }

    { 42  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvD;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100)+"Sales Line"."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 43  ;4   ;Column  ;UnitPrice_SalesLine ;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 44  ;4   ;Column  ;Quantity_SalesLine  ;
               SourceExpr="Sales Line".Quantity }

    { 45  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 46  ;4   ;Column  ;UnitofMeasure_SalesLine;
               SourceExpr="Sales Line"."Unit of Measure" }

    { 47  ;4   ;Column  ;No_SalesLine        ;
               SourceExpr="Sales Line"."No." }

    { 48  ;4   ;Column  ;ROUND_VerkZeile2InvDiscountAmount_001;
               SourceExpr=ROUND(-VerkZeile2."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 49  ;4   ;Column  ;ROUND_sum_restauftragsbestand_100_mwst_100_001;
               SourceExpr=ROUND((sum_restauftragsbestand)*(100+mwst)/(100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 50  ;4   ;Column  ;ROUND_sum_restauftragsbestand_100_mwst_001;
               SourceExpr=ROUND(((sum_restauftragsbestand)/(100)*mwst),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 51  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 52  ;4   ;Column  ;MWSTBetragZeileVATAmountText;
               SourceExpr=MWSTBetragZeile.VATAmountText }

    { 53  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 54  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnAfterGetRecord=BEGIN
                                  IF "Sales Line".Type = "Sales Line".Type::Item THEN BEGIN
                                    IF "Sales Line"."VAT %" > 0 THEN         //sonst werden die Textzeilen mit bercksichtigt
                                      mwst:="Sales Line"."VAT %"
                                    ELSE
                                      mwst:=0;
                                  END;
                                  sum_restauftragsbestand := sum_restauftragsbestand + ROUND((("Sales Line"."Outstanding Amount")/(100 + mwst) * 100),0.01);
                                END;

               DataItemLinkReference=Sales Line;
               DataItemLink=No.=FIELD(No.) }

    { 55  ;5   ;Column  ;SalesLineOutstandingQuantity_SalesLineoffeneMengeausRahmenim;
               DecimalPlaces=0:0;
               SourceExpr="Sales Line"."Outstanding Quantity"-"Sales Line"."offene Menge aus Rahmen im AU" }

    { 56  ;5   ;Column  ;ROUND_SalesLineOutstandingAmount_100_mwst_100_001;
               DecimalPlaces=2:0;
               SourceExpr=ROUND((("Sales Line"."Outstanding Amount")/(100+mwst)*100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 57  ;5   ;Column  ;LineNo_SalesLine    ;
               SourceExpr="Sales Line"."Line No." }

    { 58  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 59  ;5   ;Column  ;Artikelnr2_SalesLine;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 60  ;5   ;Column  ;Description_SalesLine5;
               SourceExpr="Sales Line".Description }

    { 61  ;5   ;Column  ;Quantity_SalesLine3 ;
               SourceExpr="Sales Line".Quantity }

    { 62  ;5   ;Column  ;OutstandingQuantity_SalesLine;
               SourceExpr="Sales Line"."Outstanding Quantity" }

    { 63  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               SourceExpr="Country/Region of Origin Code" }

    { 64  ;5   ;Column  ;UnitPrice_SalesLine3;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 65  ;5   ;Column  ;Description2_SalesLine;
               SourceExpr="Sales Line"."Description 2" }

    { 66  ;5   ;Column  ;Cross_ReferenceNo_SalesLine;
               SourceExpr="Sales Line"."Cross-Reference No." }

    { 67  ;5   ;Column  ;TariffNo_Item       ;
               SourceExpr="Tariff No." }

    { 68  ;4   ;DataItem;Verkaufsz.          ;
               DataItemTable=Table37;
               DataItemTableView=WHERE(Type=FILTER(Item));
               OnAfterGetRecord=BEGIN
                                  liefert := FORMAT("Verkaufsz."."Promised Delivery Date") ;
                                  IF "Verkaufsz."."Shipment Date" = (31122053D) THEN
                                    liefert:='Abruf';
                                  IF "Verkaufsz."."Shipment Date" = (31122055D) THEN
                                    liefert:='folgt';
                                END;

               OnPostDataItem=BEGIN
                                liefert:='';
                              END;

               DataItemLinkReference=Sales Line;
               DataItemLink=Blanket Order No.=FIELD(Document No.),
                            Blanket Order Line No.=FIELD(Line No.) }

    { 69  ;5   ;Column  ;liefert             ;
               SourceExpr=liefert }

    { 70  ;5   ;Column  ;LineNo_Verkaufsz    ;
               SourceExpr="Line No." }

    { 71  ;5   ;Column  ;DocumentNo_Verkaufsz;
               SourceExpr="Document No." }

    { 72  ;5   ;Column  ;OutstandingQuantity_Verkaufsz;
               SourceExpr="Outstanding Quantity" }

    { 73  ;5   ;Column  ;No_Verkaufsz        ;
               SourceExpr="No." }

    { 74  ;4   ;DataItem;                    ;
               DataItemTable=Table113;
               DataItemTableView=WHERE(Type=FILTER(Item));
               DataItemLinkReference=Sales Line;
               DataItemLink=Blanket Order No.=FIELD(Document No.),
                            Blanket Order Line No.=FIELD(Line No.) }

    { 75  ;5   ;Column  ;OrderNo_SalesInvoiceLine;
               SourceExpr="Order No." }

    { 76  ;5   ;Column  ;PostingDate_SalesInvoiceLine;
               SourceExpr="Posting Date" }

    { 77  ;5   ;Column  ;Quantity_SalesInvoiceLine;
               SourceExpr=Quantity }

    { 78  ;5   ;Column  ;No_SalesInvoiceLine ;
               SourceExpr="No." }

    { 79  ;5   ;Column  ;LineNo_SalesInvoiceLine;
               SourceExpr="Line No." }

    { 80  ;5   ;Column  ;DocumentNo_SalesInvoiceLine;
               SourceExpr="Document No." }

    { 81  ;4   ;DataItem;                    ;
               DataItemTable=Table115;
               DataItemTableView=SORTING(Blanket Order No.,Blanket Order Line No.)
                                 WHERE(Quantity=FILTER(>0));
               DataItemLinkReference=Sales Line;
               DataItemLink=Blanket Order No.=FIELD(Document No.),
                            Blanket Order Line No.=FIELD(Line No.) }

    { 82  ;5   ;Column  ;Buchung             ;
               SourceExpr=Buchung }

    { 83  ;5   ;Column  ;Quantity_SalesCrMemoLine;
               SourceExpr=Quantity }

    { 84  ;5   ;Column  ;No_SalesCrMemoLine  ;
               SourceExpr="No." }

    { 85  ;5   ;Column  ;LineNo_SalesCrMemoLine;
               SourceExpr="Line No." }

    { 86  ;5   ;Column  ;DocumentNo_SalesCrMemoLine;
               SourceExpr="Document No." }

    { 87  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 88  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;

               DataItemLinkReference=SeiteSchleife }

    { 89  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 90  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 91  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 92  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               DataItemLinkReference=SeiteSchleife }

    { 93  ;4   ;Column  ;Account             ;
               SourceExpr=Account }

    { 94  ;4   ;Column  ;Description_LieferBed;
               SourceExpr=LieferBed.Description }

    { 95  ;4   ;Column  ;Description_ZlgBed  ;
               SourceExpr=ZlgBed.Description }

    { 96  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;

               DataItemLinkReference=SeiteSchleife }

    { 97  ;4   ;Column  ;Sell_toCustomerNo_SalesHeader_Lbl;
               SourceExpr="Sales Header".FIELDCAPTION("Sell-to Customer No.") }

    { 98  ;4   ;Column  ;Sell_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 99  ;4   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 100 ;4   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 101 ;4   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 102 ;4   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 103 ;4   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 104 ;4   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 105 ;4   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 106 ;4   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 107 ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 108 ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 109 ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 110 ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 111 ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 112 ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 113 ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 114 ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      waehrung@1140000 : Code[40];
      waehrung2@1140001 : Code[10];
      FIBUEinrichtung@1140002 : Record 98;
      LieferBed@1140003 : Record 10;
      ZlgBed@1140004 : Record 3;
      Deb@1140005 : Record 18;
      Geb@1140006 : Record 286;
      suchbe@1140007 : Record 27;
      VerkEinkPerson@1140008 : Record 13;
      Firmendaten@1140009 : Record 79;
      MWSTBetragZeile@1140010 : TEMPORARY Record 290;
      "UnsereKontonr."@1140011 : Record 18;
      VerkZeile2@1140012 : TEMPORARY Record 37;
      language@1140051 : Record 8;
      VerkDruckZ„hler@1140013 : Codeunit 313;
      FormatAdr@1140014 : Codeunit 365;
      VerkBuchen@1140015 : Codeunit 80;
      DebAdr@1140016 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140017 : ARRAY [8] OF Text[50];
      FirmaAdr@1140018 : ARRAY [8] OF Text[50];
      Verk„uferText@1140019 : Text[30];
      MWStNrText@1140020 : Text[30];
      ReferenzText@1140021 : Text[30];
      TotalText@1140022 : Text[50];
      TotalInklMWStText@1140023 : Text[50];
      MehrZeilen@1140024 : Boolean;
      AnzKopien@1140025 : Integer;
      AnzSchleifen@1140026 : Integer;
      Titel@1140054 : Text[30];
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      liefert@1140031 : Text[30];
      liefert2@1140032 : Date;
      mwst@1140033 : Decimal;
      „nderung@1140034 : Text[30];
      sum_restauftragsbestand@1140035 : Decimal;
      AnzPorto@1140036 : Decimal;
      SumPorto@1140037 : Decimal;
      VerkAdr@1140038 : ARRAY [8] OF Text[50];
      "via Email"@1140039 : Text[40];
      "via Email_unterschrift"@1140040 : Text[40];
      "via EMail_adresse"@1140041 : Text[40];
      "ab vor wandlung"@1140042 : Text[40];
      kunde@1140043 : Record 18;
      Restmenge1@1140044 : Decimal;
      Buchung@1140045 : Date;
      vkzgutschrift@1140046 : Record 114;
      ansp_anrede@1140047 : Text[30];
      ansp_telefon@1140048 : Text[30];
      ansp_fax@1140049 : Text[30];
      Account@1140050 : Text[90];
      v_keine_AB@1140030 : Text[30];
      v_FER_SPL@1140052 : Boolean;
      seite@1140053 : Text[30];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header3@5043(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body7@5044(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2.Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body8@5045(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type =VerkZeile2.Type::Item) AND (VerkZeile2."No."=''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body9@5046(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type =VerkZeile2.Type::"G/L Account") AND (VerkZeile2."Outstanding Quantity">0));
        IF VerkZeile2.Type = VerkZeile2.Type::"G/L Account" THEN
          BEGIN
            sum_restauftragsbestand:=sum_restauftragsbestand+VerkZeile2.Amount;
            SumPorto:=VerkZeile2.Amount;
          END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body10@5047(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2.Type = VerkZeile2.Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer13@5048(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2."Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer15@5049(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         ReportForNav.ShowOutput(v_FER_SPL=FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body18@5050(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND
        (VerkZeile2."Shipment Date" = (31122055D)));
        "Sales Line".CALCFIELDS("offene Menge aus Rahmen im AU");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5051(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND
        (VerkZeile2."Shipment Date" = (31122053D)));
        "Sales Line".CALCFIELDS("offene Menge aus Rahmen im AU");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body20@5052(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND
        (VerkZeile2."Shipment Date" < (31122053D)));
        "Sales Line".CALCFIELDS("offene Menge aus Rahmen im AU");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body21@5053(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2."Description 2" <> '') );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body22@5054(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND
        ("Sales Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body23@5055(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (Item."Tariff No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body24@5056(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (Item.NCNR = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body25@5057(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2."VAT Prod. Posting Group"='13B2') AND (VerkZeile2."Outstanding Quantity"> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsz_Body27@5058(VAR "Verkaufsz."@1000000000 : Record 37);
    BEGIN
      WITH "Verkaufsz." DO BEGIN
        ReportForNav.ShowOutput("Verkaufsz."."Outstanding Quantity" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body29@5059(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput("Sales Invoice Line".Quantity <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body31@5060(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        //Holt das Buchungsdatum aus dem Sales Cr.Memo Header
        Buchung:=vkzgutschrift."Posting Date";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Header32@5061(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
         // Diese Einschr„nkung des Reports wieder entfernen, wenn keine Zeilen mit 16%MWSt vorhanden sind.
         // Dies gilt auch fr die n„chsten Zeilen des Reports.
         ReportForNav.ShowOutput("Sales Header"."No.">'AUR100212');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_TransHeader33@5062(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
         ReportForNav.ShowOutput("Sales Header"."No.">'AUR100212');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Body34@5063(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
         ReportForNav.ShowOutput("Sales Header"."No.">'AUR100212');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_TransFooter35@5064(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
          ReportForNav.ShowOutput("Sales Header"."No.">'AUR100212');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Footer36@5065(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
           ReportForNav.ShowOutput("Sales Header"."No.">'AUR100212');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body39@5066(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput :=
          "Sales Header"."Sell-to Customer No." <> "Sales Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header3': OnPreSectionSeiteSchleife_Header3(SeiteSchleife);
        END;
        'RundungsRahmen': CASE SectionId OF
          'Body7': OnPreSectionRundungsRahmen_Body7(RundungsRahmen);
          'Body8': OnPreSectionRundungsRahmen_Body8(RundungsRahmen);
          'Body9': OnPreSectionRundungsRahmen_Body9(RundungsRahmen);
          'Body10': OnPreSectionRundungsRahmen_Body10(RundungsRahmen);
          'Footer13': OnPreSectionRundungsRahmen_Footer13(RundungsRahmen);
          'Footer15': OnPreSectionRundungsRahmen_Footer15(RundungsRahmen);
        END;
        'Item': CASE SectionId OF
          'Body18': OnPreSectionItem_Body18(Item);
          'Body19': OnPreSectionItem_Body19(Item);
          'Body20': OnPreSectionItem_Body20(Item);
          'Body21': OnPreSectionItem_Body21(Item);
          'Body22': OnPreSectionItem_Body22(Item);
          'Body23': OnPreSectionItem_Body23(Item);
          'Body24': OnPreSectionItem_Body24(Item);
          'Body25': OnPreSectionItem_Body25(Item);
        END;
        'Verkaufsz': CASE SectionId OF
          'Body27': OnPreSectionVerkaufsz_Body27("Verkaufsz.");
        END;
        'SalesInvoiceLine': CASE SectionId OF
          'Body29': OnPreSectionSalesInvoiceLine_Body29("Sales Invoice Line");
        END;
        'SalesCrMemoLine': CASE SectionId OF
          'Body31': OnPreSectionSalesCrMemoLine_Body31("Sales Cr.Memo Line");
        END;
        'MWStZahler': CASE SectionId OF
          'Header32': OnPreSectionMWStZahler_Header32(MWStZ„hler);
          'TransHeader33': OnPreSectionMWStZahler_TransHeader33(MWStZ„hler);
          'Body34': OnPreSectionMWStZahler_Body34(MWStZ„hler);
          'TransFooter35': OnPreSectionMWStZahler_TransFooter35(MWStZ„hler);
          'Footer36': OnPreSectionMWStZahler_Footer36(MWStZ„hler);
        END;
        'Total2': CASE SectionId OF
          'Body39': OnPreSectionTotal2_Body39(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // Do not change (Autogenerated by Reports ForNAV) - Instead change the Create Totals, Total Fields or Group Total Fields properties on the Data item in the ForNAV designer
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,VerkZeile2."Outstanding Amount");
                ReportForNav.AddTotal(DataItemId,1,VerkZeile2."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,VerkZeile2."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 VerkZeile2."Outstanding Amount" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 VerkZeile2."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 VerkZeile2."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>0ad3154f-31d4-4b9d-9855-a46827f86ba2</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>5568a325-9e6c-444d-9e2a-137295d392e3</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="v_keine_AB">
          <DataField>v_keine_AB</DataField>
        </Field>
        <Field Name="ansp_fax">
          <DataField>ansp_fax</DataField>
        </Field>
        <Field Name="ansp_telefon">
          <DataField>ansp_telefon</DataField>
        </Field>
        <Field Name="ansp_anrede">
          <DataField>ansp_anrede</DataField>
        </Field>
        <Field Name="Salesperson_Purchaserfirstname__Salesperson_PurchaserName">
          <DataField>Salesperson_Purchaserfirstname__Salesperson_PurchaserName</DataField>
        </Field>
        <Field Name="E_Mail_Salesperson_Purchaser">
          <DataField>E_Mail_Salesperson_Purchaser</DataField>
        </Field>
        <Field Name="WORKDATE">
          <DataField>WORKDATE</DataField>
        </Field>
        <Field Name="viaEmail_unterschrift">
          <DataField>viaEmail_unterschrift</DataField>
        </Field>
        <Field Name="viaEMail_adresse">
          <DataField>viaEMail_adresse</DataField>
        </Field>
        <Field Name="viaEmail">
          <DataField>viaEmail</DataField>
        </Field>
        <Field Name="abvorwandlung">
          <DataField>abvorwandlung</DataField>
        </Field>
        <Field Name="anderung">
          <DataField>anderung</DataField>
        </Field>
        <Field Name="SalesHeaderExternalDocumentNo__SalesHeaderYourReference">
          <DataField>SalesHeaderExternalDocumentNo__SalesHeaderYourReference</DataField>
        </Field>
        <Field Name="OurAccountNo_Debitor">
          <DataField>OurAccountNo_Debitor</DataField>
        </Field>
        <Field Name="MWStNrText">
          <DataField>MWStNrText</DataField>
        </Field>
        <Field Name="VATRegistrationNo_SalesHeader">
          <DataField>VATRegistrationNo_SalesHeader</DataField>
        </Field>
        <Field Name="Titel_KopieText">
          <DataField>Titel_KopieText</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesHeader">
          <DataField>Bill_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="SalesHeaderDocumentDate_0_1">
          <DataField>SalesHeaderDocumentDate_0_1</DataField>
        </Field>
        <Field Name="seite">
          <DataField>seite</DataField>
        </Field>
        <Field Name="VerkAdr8">
          <DataField>VerkAdr8</DataField>
        </Field>
        <Field Name="VerkAdr7">
          <DataField>VerkAdr7</DataField>
        </Field>
        <Field Name="VerkAdr6">
          <DataField>VerkAdr6</DataField>
        </Field>
        <Field Name="VerkAdr5">
          <DataField>VerkAdr5</DataField>
        </Field>
        <Field Name="VerkAdr4">
          <DataField>VerkAdr4</DataField>
        </Field>
        <Field Name="VerkAdr3">
          <DataField>VerkAdr3</DataField>
        </Field>
        <Field Name="VerkAdr2">
          <DataField>VerkAdr2</DataField>
        </Field>
        <Field Name="VerkAdr1">
          <DataField>VerkAdr1</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="sum_restauftragsbestand">
          <DataField>sum_restauftragsbestand</DataField>
        </Field>
        <Field Name="sum_restauftragsbestandFormat">
          <DataField>sum_restauftragsbestandFormat</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvD">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvD</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvDFormat">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvDFormat</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine">
          <DataField>UnitPrice_SalesLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLineFormat">
          <DataField>UnitPrice_SalesLineFormat</DataField>
        </Field>
        <Field Name="Quantity_SalesLine">
          <DataField>Quantity_SalesLine</DataField>
        </Field>
        <Field Name="Quantity_SalesLineFormat">
          <DataField>Quantity_SalesLineFormat</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001Format">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001Format</DataField>
        </Field>
        <Field Name="UnitofMeasure_SalesLine">
          <DataField>UnitofMeasure_SalesLine</DataField>
        </Field>
        <Field Name="No_SalesLine">
          <DataField>No_SalesLine</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2InvDiscountAmount_001">
          <DataField>ROUND_VerkZeile2InvDiscountAmount_001</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2InvDiscountAmount_001Format">
          <DataField>ROUND_VerkZeile2InvDiscountAmount_001Format</DataField>
        </Field>
        <Field Name="ROUND_sum_restauftragsbestand_100_mwst_100_001">
          <DataField>ROUND_sum_restauftragsbestand_100_mwst_100_001</DataField>
        </Field>
        <Field Name="ROUND_sum_restauftragsbestand_100_mwst_100_001Format">
          <DataField>ROUND_sum_restauftragsbestand_100_mwst_100_001Format</DataField>
        </Field>
        <Field Name="ROUND_sum_restauftragsbestand_100_mwst_001">
          <DataField>ROUND_sum_restauftragsbestand_100_mwst_001</DataField>
        </Field>
        <Field Name="ROUND_sum_restauftragsbestand_100_mwst_001Format">
          <DataField>ROUND_sum_restauftragsbestand_100_mwst_001Format</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="MWSTBetragZeileVATAmountText">
          <DataField>MWSTBetragZeileVATAmountText</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="SalesLineOutstandingQuantity_SalesLineoffeneMengeausRahmenim">
          <DataField>SalesLineOutstandingQuantity_SalesLineoffeneMengeausRahmenim</DataField>
        </Field>
        <Field Name="SalesLineOutstandingQuantity_SalesLineoffeneMengeausRahmenimFormat">
          <DataField>SalesLineOutstandingQuantity_SalesLineoffeneMengeausRahmenimFormat</DataField>
        </Field>
        <Field Name="ROUND_SalesLineOutstandingAmount_100_mwst_100_001">
          <DataField>ROUND_SalesLineOutstandingAmount_100_mwst_100_001</DataField>
        </Field>
        <Field Name="ROUND_SalesLineOutstandingAmount_100_mwst_100_001Format">
          <DataField>ROUND_SalesLineOutstandingAmount_100_mwst_100_001Format</DataField>
        </Field>
        <Field Name="LineNo_SalesLine">
          <DataField>LineNo_SalesLine</DataField>
        </Field>
        <Field Name="Herstellerkurzname_Item">
          <DataField>Herstellerkurzname_Item</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesLine">
          <DataField>Artikelnr2_SalesLine</DataField>
        </Field>
        <Field Name="Description_SalesLine5">
          <DataField>Description_SalesLine5</DataField>
        </Field>
        <Field Name="Quantity_SalesLine3">
          <DataField>Quantity_SalesLine3</DataField>
        </Field>
        <Field Name="Quantity_SalesLine3Format">
          <DataField>Quantity_SalesLine3Format</DataField>
        </Field>
        <Field Name="OutstandingQuantity_SalesLine">
          <DataField>OutstandingQuantity_SalesLine</DataField>
        </Field>
        <Field Name="OutstandingQuantity_SalesLineFormat">
          <DataField>OutstandingQuantity_SalesLineFormat</DataField>
        </Field>
        <Field Name="Country_RegionofOriginCode_Item">
          <DataField>Country_RegionofOriginCode_Item</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine3">
          <DataField>UnitPrice_SalesLine3</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine3Format">
          <DataField>UnitPrice_SalesLine3Format</DataField>
        </Field>
        <Field Name="Description2_SalesLine">
          <DataField>Description2_SalesLine</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesLine">
          <DataField>Cross_ReferenceNo_SalesLine</DataField>
        </Field>
        <Field Name="TariffNo_Item">
          <DataField>TariffNo_Item</DataField>
        </Field>
        <Field Name="liefert">
          <DataField>liefert</DataField>
        </Field>
        <Field Name="LineNo_Verkaufsz">
          <DataField>LineNo_Verkaufsz</DataField>
        </Field>
        <Field Name="DocumentNo_Verkaufsz">
          <DataField>DocumentNo_Verkaufsz</DataField>
        </Field>
        <Field Name="OutstandingQuantity_Verkaufsz">
          <DataField>OutstandingQuantity_Verkaufsz</DataField>
        </Field>
        <Field Name="OutstandingQuantity_VerkaufszFormat">
          <DataField>OutstandingQuantity_VerkaufszFormat</DataField>
        </Field>
        <Field Name="No_Verkaufsz">
          <DataField>No_Verkaufsz</DataField>
        </Field>
        <Field Name="OrderNo_SalesInvoiceLine">
          <DataField>OrderNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="PostingDate_SalesInvoiceLine">
          <DataField>PostingDate_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine">
          <DataField>Quantity_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLineFormat">
          <DataField>Quantity_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="No_SalesInvoiceLine">
          <DataField>No_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="LineNo_SalesInvoiceLine">
          <DataField>LineNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="DocumentNo_SalesInvoiceLine">
          <DataField>DocumentNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Buchung">
          <DataField>Buchung</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine">
          <DataField>Quantity_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLineFormat">
          <DataField>Quantity_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="No_SalesCrMemoLine">
          <DataField>No_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="LineNo_SalesCrMemoLine">
          <DataField>LineNo_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="DocumentNo_SalesCrMemoLine">
          <DataField>DocumentNo_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="Account">
          <DataField>Account</DataField>
        </Field>
        <Field Name="Description_LieferBed">
          <DataField>Description_LieferBed</DataField>
        </Field>
        <Field Name="Description_ZlgBed">
          <DataField>Description_ZlgBed</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesHeader_Lbl">
          <DataField>Sell_toCustomerNo_SalesHeader_Lbl</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesHeader">
          <DataField>Sell_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

