OBJECT Report 50115 TOPAS_Rahmenauft.Best„tigung
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=12:40:02;
    Modified=Yes;
    Version List=Beleg !!ausfhrbar !!,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    UseSystemPrinter=Yes;
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   //CurrReport.USEREQUESTPAGE(TRUE);
                   AnzKopien := 1;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  AnzKopien_sich := AnzKopien;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

    UseRequestPage=Yes;
  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Blanket Order),
                                       Location Code=FILTER(ZENT|KONSI));
               PrintOnlyIfDetail=Yes;
               ReqFilterHeadingML=DEU=Rahmenauftrag;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF NOT kunde.GET("Sales Header"."Sell-to Customer No.") THEN CurrReport.BREAK;

                                  EVALUATE(report_objectid,COPYSTR(CurrReport.OBJECTID(FALSE),STRPOS(CurrReport.OBJECTID(FALSE),' ')+1));
                                  PrinterSelection.RESET;
                                  PrinterSelection.SETRANGE("User ID",USERID);
                                  PrinterSelection.SETRANGE("Report ID",report_objectid);
                                  IF PrinterSelection.FINDFIRST() THEN BEGIN
                                    IF (PrinterSelection."Printer Name" <> 'PDFCreator') AND (PrinterSelection."Printer Name" <> 'Bullzip PDF Printer')
                                    AND ("Sales Header"."AB via EMail" = TRUE) THEN
                                      pdf := TRUE
                                    ELSE
                                      pdf := FALSE;
                                  END ELSE BEGIN
                                    pdf := FALSE;
                                  END;

                                  IF ("Sales Header"."AB via EMail") OR (kunde."Best„tigung via Internet") THEN
                                    AnzKopien := 0 ELSE AnzKopien := AnzKopien_sich;
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    CLEAR(VerkEinkPerson);
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText :='Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesHeaderBillTo(DebAdr,"Sales Header");
                                  FormatAdr.SalesHeaderSellTo(VerkAdr,"Sales Header");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF (LieferAnAdr[i] <> VerkAdr[i]) OR (DebAdr[i] <> VerkAdr[i]) THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + '°' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  v_FER_SPL:=  FALSE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed,Order Date;
               CalcFields=AB via EMail }

    { 2   ;1   ;DataItem;Debitor             ;
               DataItemTable=Table18;
               DataItemLinkReference=Sales Header;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;2   ;DataItem;                    ;
               DataItemTable=Table291;
               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 4   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 5   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               sum_restauftragsbestand := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  sum_restauftragsbestand := 0;
                                  CLEAR(VerkZeile2);
                                  CLEAR(VerkBuchen);
                                  VerkBuchen.GetSalesLines("Sales Header",VerkZeile2,0);
                                  IF CurrReport.LANGUAGE = 1031 THEN
                                    Titel := 'Kontraktbest„tigung'
                                  ELSE
                                    Titel := 'Contract Confirmation';
                                  IF Number > 1 THEN
                                    ReportForNav.PrinterSettings.PaperSource(1)
                                  ELSE
                                    ReportForNav.PrinterSettings.PaperSource(3);

                                  v_keine_AB := '';
                                  "ab vor wandlung" := '';
                                  "via EMail_adresse" := '';
                                  "via Email_unterschrift" := '';
                                  "via Email" := '';
                                  IF ((Number > 1) AND (pdf = FALSE)) OR (pdf = TRUE) OR (kunde."Best„tigung via Internet" = TRUE) THEN BEGIN
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      KopieText := 'skopie'
                                    ELSE
                                      KopieText := ' Copy';
                                    IF kunde."AB vor Wandlung" THEN "ab vor wandlung" := 'Achtung erst AB dann Wandeln !!!';
                                    IF "Sales Header"."keine Rahmen-AB an Kunden" THEN v_keine_AB := 'Keine Best„tigung an Kunden !';
                                    IF kunde."AB via EMail" THEN BEGIN
                                      "via Email_unterschrift" := 'Erledigt von ..............'  ;
                                      "via Email" := 'Achtung via E-Mail versenden !!!';
                                      "via EMail_adresse" := "Sales Header"."AB EMail-Adresse";
                                    END;
                                  END;
                                  ReportForNav.PageNo := 1;
                                  IF "Sales Header"."Document Date" > "Sales Header"."Order Date" THEN BEGIN
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      „nderung := 'Žnderungs-'
                                    ELSE
                                      „nderung := 'Change'
                                  END ELSE BEGIN
                                    „nderung := '';
                                  END;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                  IF ("Sales Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Header"."Shipment Method Code" = 'ACC-ENG') THEN
                                    Account := "Sales Header".Spediteuraccount
                                  ELSE
                                    Account := "Shipping Agent".Name
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkDruckZ„hler.RUN("Sales Header");
                              END;
                               }

    { 6   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000003;3;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 7   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 8   ;3   ;Column  ;v_keine_AB          ;
               SourceExpr=v_keine_AB }

    { 9   ;3   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 10  ;3   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 11  ;3   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 12  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               SourceExpr="Salesperson/Purchaser"."First name" + ' ' +"Salesperson/Purchaser".Name }

    { 13  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 14  ;3   ;Column  ;WORKDATE            ;
               SourceExpr=WORKDATE }

    { 15  ;3   ;Column  ;viaEmail_unterschrift;
               SourceExpr="via Email_unterschrift" }

    { 16  ;3   ;Column  ;viaEMail_adresse    ;
               SourceExpr="via EMail_adresse" }

    { 17  ;3   ;Column  ;viaEmail            ;
               SourceExpr="via Email" }

    { 18  ;3   ;Column  ;abvorwandlung       ;
               SourceExpr="ab vor wandlung" }

    { 19  ;3   ;Column  ;anderung            ;
               SourceExpr=„nderung }

    { 20  ;3   ;Column  ;SalesHeaderExternalDocumentNo__SalesHeaderYourReference;
               SourceExpr="Sales Header"."External Document No."+' '+"Sales Header"."Your Reference" }

    { 21  ;3   ;Column  ;OurAccountNo_Debitor;
               SourceExpr=Debitor."Our Account No." }

    { 22  ;3   ;Column  ;MWStNrText          ;
               SourceExpr=MWStNrText }

    { 23  ;3   ;Column  ;VATRegistrationNo_SalesHeader;
               SourceExpr="Sales Header"."VAT Registration No." }

    { 24  ;3   ;Column  ;Titel_KopieText     ;
               SourceExpr=Titel + KopieText }

    { 25  ;3   ;Column  ;No_SalesHeader      ;
               SourceExpr="Sales Header"."No." }

    { 26  ;3   ;Column  ;Bill_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Bill-to Customer No." }

    { 27  ;3   ;Column  ;SalesHeaderDocumentDate_0_1;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 28  ;3   ;Column  ;seite               ;
               SourceExpr=seite }

    { 29  ;3   ;Column  ;VerkAdr8            ;
               SourceExpr=VerkAdr[8] }

    { 30  ;3   ;Column  ;VerkAdr7            ;
               SourceExpr=VerkAdr[7] }

    { 31  ;3   ;Column  ;VerkAdr6            ;
               SourceExpr=VerkAdr[6] }

    { 32  ;3   ;Column  ;VerkAdr5            ;
               SourceExpr=VerkAdr[5] }

    { 33  ;3   ;Column  ;VerkAdr4            ;
               SourceExpr=VerkAdr[4] }

    { 34  ;3   ;Column  ;VerkAdr3            ;
               SourceExpr=VerkAdr[3] }

    { 35  ;3   ;Column  ;VerkAdr2            ;
               SourceExpr=VerkAdr[2] }

    { 36  ;3   ;Column  ;VerkAdr1            ;
               SourceExpr=VerkAdr[1] }

    { 37  ;3   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 38  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := VerkZeile2.FIND('+');
                               WHILE MehrZeilen AND (VerkZeile2.Description = '') AND
                                     (VerkZeile2."No." = '') AND (VerkZeile2.Quantity = 0) AND
                                     (VerkZeile2.Amount = 0) DO
                                 MehrZeilen := VerkZeile2.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               VerkZeile2.SETRANGE("Line No.",0,VerkZeile2."Line No.");
                               SETRANGE(Number,1,VerkZeile2.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    VerkZeile2.FIND('-')
                                  ELSE
                                    VerkZeile2.NEXT;

                                  "Sales Line" := VerkZeile2;
                                  IF "Sales Line"."Outstanding Quantity" <> 0 THEN BEGIN
                                    MWSTBetragZeile.INIT;
                                    MWSTBetragZeile."VAT %" := "Sales Line"."VAT %";
                                    MWSTBetragZeile."VAT Base" := "Sales Line".Amount;
                                    MWSTBetragZeile."Amount Including VAT" := "Sales Line"."Amount Including VAT";
                                    MWSTBetragZeile.InsertLine;
                                  END;

                                  IF v_FER_SPL=FALSE THEN BEGIN
                                    IF (("Sales Line"."Manufacturer Code" = '82') OR ("Sales Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                    END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                VerkZeile2.DELETEALL;
                              END;

               DataItemLinkReference=SeiteSchleife }

    { 39  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 40  ;4   ;Column  ;sum_restauftragsbestand;
               SourceExpr=sum_restauftragsbestand;
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 41  ;4   ;Column  ;Description_SalesLine;
               SourceExpr="Sales Line".Description }

    { 42  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvD;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100)+"Sales Line"."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 43  ;4   ;Column  ;UnitPrice_SalesLine ;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 44  ;4   ;Column  ;Quantity_SalesLine  ;
               SourceExpr="Sales Line".Quantity }

    { 45  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 46  ;4   ;Column  ;UnitofMeasure_SalesLine;
               SourceExpr="Sales Line"."Unit of Measure" }

    { 47  ;4   ;Column  ;No_SalesLine        ;
               SourceExpr="Sales Line"."No." }

    { 48  ;4   ;Column  ;ROUND_VerkZeile2InvDiscountAmount_001;
               SourceExpr=ROUND(-VerkZeile2."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 49  ;4   ;Column  ;ROUND_sum_restauftragsbestand_100_mwst_100_001;
               SourceExpr=ROUND((sum_restauftragsbestand)*(100+mwst)/(100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 50  ;4   ;Column  ;ROUND_sum_restauftragsbestand_100_mwst_001;
               SourceExpr=ROUND(((sum_restauftragsbestand)/(100)*mwst),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 51  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 52  ;4   ;Column  ;MWSTBetragZeileVATAmountText;
               SourceExpr=MWSTBetragZeile.VATAmountText }

    { 53  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 54  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnAfterGetRecord=BEGIN
                                  IF "Sales Line".Type = "Sales Line".Type::Item THEN BEGIN
                                    IF "Sales Line"."VAT %" > 0 THEN         //sonst werden die Textzeilen mit bercksichtigt
                                      mwst := "Sales Line"."VAT %"
                                    ELSE
                                      mwst := 0;
                                  END;
                                  sum_restauftragsbestand := sum_restauftragsbestand + ROUND((("Sales Line"."Outstanding Amount") / (100 + mwst) * 100),0.01);
                                END;

               DataItemLinkReference=Sales Line;
               DataItemLink=No.=FIELD(No.) }

    { 55  ;5   ;Column  ;SalesLineOutstandingQuantity_SalesLineoffeneMengeausRahmenim;
               DecimalPlaces=0:0;
               SourceExpr="Sales Line"."Outstanding Quantity"-"Sales Line"."offene Menge aus Rahmen im AU" }

    { 56  ;5   ;Column  ;ROUND_SalesLineOutstandingAmount_100_mwst_100_001;
               DecimalPlaces=2:0;
               SourceExpr=ROUND((("Sales Line"."Outstanding Amount")/(100+mwst)*100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 57  ;5   ;Column  ;LineNo_SalesLine    ;
               SourceExpr="Sales Line"."Line No." }

    { 58  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 59  ;5   ;Column  ;Artikelnr2_SalesLine;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 60  ;5   ;Column  ;Description_SalesLine5;
               SourceExpr="Sales Line".Description }

    { 61  ;5   ;Column  ;Quantity_SalesLine3 ;
               SourceExpr="Sales Line".Quantity }

    { 62  ;5   ;Column  ;OutstandingQuantity_SalesLine;
               SourceExpr="Sales Line"."Outstanding Quantity" }

    { 63  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               SourceExpr="Country/Region of Origin Code" }

    { 64  ;5   ;Column  ;UnitPrice_SalesLine3;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 65  ;5   ;Column  ;Description2_SalesLine;
               SourceExpr="Sales Line"."Description 2" }

    { 66  ;5   ;Column  ;Cross_ReferenceNo_SalesLine;
               SourceExpr="Sales Line"."Cross-Reference No." }

    { 67  ;5   ;Column  ;TariffNo_Item       ;
               SourceExpr="Tariff No." }

    { 68  ;4   ;DataItem;Verkaufsz.          ;
               DataItemTable=Table37;
               DataItemTableView=WHERE(Type=FILTER(Item));
               OnAfterGetRecord=BEGIN
                                  liefert := FORMAT("Verkaufsz."."Promised Delivery Date") ;
                                  IF "Verkaufsz."."Shipment Date" = 31122053D THEN
                                    liefert := 'Abruf';
                                  IF "Verkaufsz."."Shipment Date" = 31122055D THEN
                                    liefert := 'folgt';
                                END;

               OnPostDataItem=BEGIN
                                liefert := '';
                              END;

               DataItemLinkReference=Sales Line;
               DataItemLink=Blanket Order No.=FIELD(Document No.),
                            Blanket Order Line No.=FIELD(Line No.) }

    { 69  ;5   ;Column  ;liefert             ;
               SourceExpr=liefert }

    { 70  ;5   ;Column  ;LineNo_Verkaufsz    ;
               SourceExpr="Line No." }

    { 71  ;5   ;Column  ;DocumentNo_Verkaufsz;
               SourceExpr="Document No." }

    { 72  ;5   ;Column  ;OutstandingQuantity_Verkaufsz;
               SourceExpr="Outstanding Quantity" }

    { 73  ;5   ;Column  ;No_Verkaufsz        ;
               SourceExpr="No." }

    { 74  ;4   ;DataItem;                    ;
               DataItemTable=Table113;
               DataItemTableView=WHERE(Type=FILTER(Item));
               DataItemLinkReference=Sales Line;
               DataItemLink=Blanket Order No.=FIELD(Document No.),
                            Blanket Order Line No.=FIELD(Line No.) }

    { 75  ;5   ;Column  ;OrderNo_SalesInvoiceLine;
               SourceExpr="Order No." }

    { 76  ;5   ;Column  ;PostingDate_SalesInvoiceLine;
               SourceExpr="Posting Date" }

    { 77  ;5   ;Column  ;Quantity_SalesInvoiceLine;
               SourceExpr=Quantity }

    { 78  ;5   ;Column  ;No_SalesInvoiceLine ;
               SourceExpr="No." }

    { 79  ;5   ;Column  ;LineNo_SalesInvoiceLine;
               SourceExpr="Line No." }

    { 80  ;5   ;Column  ;DocumentNo_SalesInvoiceLine;
               SourceExpr="Document No." }

    { 81  ;4   ;DataItem;                    ;
               DataItemTable=Table115;
               DataItemTableView=SORTING(Blanket Order No.,Blanket Order Line No.)
                                 WHERE(Quantity=FILTER(>0));
               DataItemLinkReference=Sales Line;
               DataItemLink=Blanket Order No.=FIELD(Document No.),
                            Blanket Order Line No.=FIELD(Line No.) }

    { 82  ;5   ;Column  ;Buchung             ;
               SourceExpr=Buchung }

    { 83  ;5   ;Column  ;Quantity_SalesCrMemoLine;
               SourceExpr=Quantity }

    { 84  ;5   ;Column  ;No_SalesCrMemoLine  ;
               SourceExpr="No." }

    { 85  ;5   ;Column  ;LineNo_SalesCrMemoLine;
               SourceExpr="Line No." }

    { 86  ;5   ;Column  ;DocumentNo_SalesCrMemoLine;
               SourceExpr="Document No." }

    { 87  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 88  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;

               DataItemLinkReference=SeiteSchleife }

    { 89  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 90  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 91  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 92  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               DataItemLinkReference=SeiteSchleife }

    { 93  ;4   ;Column  ;Account             ;
               SourceExpr=Account }

    { 94  ;4   ;Column  ;Description_LieferBed;
               SourceExpr=LieferBed.Description }

    { 95  ;4   ;Column  ;Description_ZlgBed  ;
               SourceExpr=ZlgBed.Description }

    { 96  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;

               DataItemLinkReference=SeiteSchleife }

    { 97  ;4   ;Column  ;Sell_toCustomerNo_SalesHeader_Lbl;
               SourceExpr="Sales Header".FIELDCAPTION("Sell-to Customer No.") }

    { 98  ;4   ;Column  ;Sell_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 99  ;4   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 100 ;4   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 101 ;4   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 102 ;4   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 103 ;4   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 104 ;4   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 105 ;4   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 106 ;4   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 107 ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 108 ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 109 ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 110 ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 111 ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 112 ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 113 ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 114 ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140002 : Record 98;
      LieferBed@1140003 : Record 10;
      ZlgBed@1140004 : Record 3;
      Deb@1140005 : Record 18;
      Geb@1140006 : Record 286;
      suchbe@1140007 : Record 27;
      VerkEinkPerson@1140008 : Record 13;
      Firmendaten@1140009 : Record 79;
      MWSTBetragZeile@1140010 : TEMPORARY Record 290;
      "UnsereKontonr."@1140011 : Record 18;
      VerkZeile2@1140012 : TEMPORARY Record 37;
      language@1140051 : Record 8;
      kunde@1000000005 : Record 18;
      vkzgutschrift@1000000004 : Record 114;
      PrinterSelection@1000000006 : Record 78;
      VerkDruckZ„hler@1140013 : Codeunit 313;
      FormatAdr@1140014 : Codeunit 365;
      VerkBuchen@1140015 : Codeunit 80;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140016 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140017 : ARRAY [8] OF Text[50];
      FirmaAdr@1140018 : ARRAY [8] OF Text[50];
      Verk„uferText@1140019 : Text[30];
      MWStNrText@1140020 : Text[30];
      ReferenzText@1140021 : Text[30];
      TotalText@1140022 : Text[50];
      TotalInklMWStText@1140023 : Text[50];
      waehrung@1000000003 : Code[40];
      waehrung2@1000000002 : Code[10];
      MehrZeilen@1140024 : Boolean;
      AnzKopien@1140025 : Integer;
      AnzKopien_sich@1000000008 : Integer;
      AnzSchleifen@1140026 : Integer;
      Titel@1140054 : Text[30];
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      liefert@1140031 : Text[30];
      liefert2@1140032 : Date;
      mwst@1140033 : Decimal;
      „nderung@1140034 : Text[30];
      sum_restauftragsbestand@1140035 : Decimal;
      AnzPorto@1140036 : Decimal;
      SumPorto@1140037 : Decimal;
      VerkAdr@1140038 : ARRAY [8] OF Text[50];
      "via Email"@1140039 : Text;
      "via Email_unterschrift"@1140040 : Text;
      "via EMail_adresse"@1140041 : Text;
      "ab vor wandlung"@1140042 : Text;
      Restmenge1@1140044 : Decimal;
      Buchung@1140045 : Date;
      ansp_anrede@1140047 : Text;
      ansp_telefon@1140048 : Text;
      ansp_fax@1140049 : Text;
      Account@1140050 : Text;
      v_keine_AB@1140030 : Text[30];
      v_FER_SPL@1140052 : Boolean;
      seite@1140053 : Text[30];
      pdf@1000000007 : Boolean;
      report_objectid@1000000009 : Integer;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header3@5043(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //TOPAS 29.06.15 ST - rendert das Firmenlogo fr Batch L„ufe, da das Logo beim normalen Druck vom Briefpapier bezogen wird
        IF PrinterSelection.GET(USERID,50115) THEN BEGIN
          IF (PrinterSelection."Printer Name" = 'PDFCreator')
          OR (PrinterSelection."Printer Name" = 'Bullzip PDF Printer') THEN
            Firmendaten.CALCFIELDS(Picture);
        END;
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS Ende
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body7@5044(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2.Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body8@5045(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."No." = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body9@5046(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::"G/L Account") AND (VerkZeile2."Outstanding Quantity" > 0));
        IF VerkZeile2.Type = VerkZeile2.Type::"G/L Account" THEN
          BEGIN
            sum_restauftragsbestand := sum_restauftragsbestand+VerkZeile2.Amount;
            SumPorto := VerkZeile2.Amount;
          END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body10@5047(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2.Type = VerkZeile2.Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer13@5048(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2."Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer15@5049(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body18@5050(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Shipment Date" = (31122055D)));
        "Sales Line".CALCFIELDS("offene Menge aus Rahmen im AU");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5051(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Shipment Date" = (31122053D)));
        "Sales Line".CALCFIELDS("offene Menge aus Rahmen im AU");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body20@5052(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Shipment Date" < (31122053D)));
        "Sales Line".CALCFIELDS("offene Menge aus Rahmen im AU");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body21@5053(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2."Description 2" <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body22@5054(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND ("Sales Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body23@5055(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (Item."Tariff No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body24@5056(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (Item.NCNR = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body25@5057(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2."VAT Prod. Posting Group" = '13B2') AND (VerkZeile2."Outstanding Quantity" > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsz_Body27@5058(VAR "Verkaufsz."@1000000000 : Record 37);
    BEGIN
      WITH "Verkaufsz." DO BEGIN
        ReportForNav.ShowOutput("Verkaufsz."."Outstanding Quantity" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body29@5059(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput("Sales Invoice Line".Quantity <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body31@5060(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        //Holt das Buchungsdatum aus dem Sales Cr.Memo Header
        Buchung := vkzgutschrift."Posting Date";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Header32@5061(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
         // Diese Einschr„nkung des Reports wieder entfernen, wenn keine Zeilen mit 16%MWSt vorhanden sind.
         // Dies gilt auch fr die n„chsten Zeilen des Reports.
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_TransHeader33@5062(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Body34@5063(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_TransFooter35@5064(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Footer36@5065(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body39@5066(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput :=
          "Sales Header"."Sell-to Customer No." <> "Sales Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header3': OnPreSectionSeiteSchleife_Header3(SeiteSchleife);
        END;
        'RundungsRahmen': CASE SectionId OF
          'Body7': OnPreSectionRundungsRahmen_Body7(RundungsRahmen);
          'Body8': OnPreSectionRundungsRahmen_Body8(RundungsRahmen);
          'Body9': OnPreSectionRundungsRahmen_Body9(RundungsRahmen);
          'Body10': OnPreSectionRundungsRahmen_Body10(RundungsRahmen);
          'Footer13': OnPreSectionRundungsRahmen_Footer13(RundungsRahmen);
          'Footer15': OnPreSectionRundungsRahmen_Footer15(RundungsRahmen);
        END;
        'Item': CASE SectionId OF
          'Body18': OnPreSectionItem_Body18(Item);
          'Body19': OnPreSectionItem_Body19(Item);
          'Body20': OnPreSectionItem_Body20(Item);
          'Body21': OnPreSectionItem_Body21(Item);
          'Body22': OnPreSectionItem_Body22(Item);
          'Body23': OnPreSectionItem_Body23(Item);
          'Body24': OnPreSectionItem_Body24(Item);
          'Body25': OnPreSectionItem_Body25(Item);
        END;
        'Verkaufsz': CASE SectionId OF
          'Body27': OnPreSectionVerkaufsz_Body27("Verkaufsz.");
        END;
        'SalesInvoiceLine': CASE SectionId OF
          'Body29': OnPreSectionSalesInvoiceLine_Body29("Sales Invoice Line");
        END;
        'SalesCrMemoLine': CASE SectionId OF
          'Body31': OnPreSectionSalesCrMemoLine_Body31("Sales Cr.Memo Line");
        END;
        'MWStZahler': CASE SectionId OF
          'Header32': OnPreSectionMWStZahler_Header32(MWStZ„hler);
          'TransHeader33': OnPreSectionMWStZahler_TransHeader33(MWStZ„hler);
          'Body34': OnPreSectionMWStZahler_Body34(MWStZ„hler);
          'TransFooter35': OnPreSectionMWStZahler_TransFooter35(MWStZ„hler);
          'Footer36': OnPreSectionMWStZahler_Footer36(MWStZ„hler);
        END;
        'Total2': CASE SectionId OF
          'Body39': OnPreSectionTotal2_Body39(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,VerkZeile2."Outstanding Amount");
                ReportForNav.AddTotal(DataItemId,1,VerkZeile2."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,VerkZeile2."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 VerkZeile2."Outstanding Amount" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 VerkZeile2."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 VerkZeile2."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>NskBAO19e2/cuJbn/wvsd9B4cOcmt51qiXrndmZgx07H04mdtZ2kby8uDLmKtjUpSx5JlRcG81X2
nwb2G+w/e4EFNh9ov8KSEqmSVIcUyarKo28HaLRLL5I/Hp4Xzzn8f//7//zwL+9v59ZbXJRpnj3a
cSb2joWzaT5Ls+tHO4vq6kG08y///F//yw8/V0Vyiu/yoiqfJR/yRXWGizSZpx9xYS3/fNV+yJug
iU+/doqvyM8d63GeVUU+P/9whx/tHOC3h+/vClyWk86HJy+POj93LcFTb+nHdy3eFm9q13q8mFeL
Aj/K8II8Pt+1Xiwu5+n0J/zhPH+Ds0fxpe8k6DK48tDl1aU/3bGOk1vSm/ftx0k/e0PYsV4k1/gp
Tq9vqkc7KA7t5srrdFbdkAuOTS48T4rrNCvJGxHphEP+88l/Xj12+tGXWUpePsdZdVOeXO09T+fz
9BZXuKDfusPFT2k2e7Sz5+1YB3cp+ahP/npC0CLXKK67VnhXkXtJlZzli2JKOvyPBNQHNu3+28f5
7V1SpZfpPK0+HKTl3Tz58GiH3EC24/MelE/yglxqh7ZjnVz+G55Wx/mjHd926IPs1QaQ85MXe2cX
p8nNLc6SxVU12cdl9enXKr1eZNc7hBws64f9JJuV9Z/kx1GFb51mqtFgqpumae/pQ/QtDvtZMsfl
U5zMKBLLoT9O5tMnKZ7PCKJ7+9bbNLEOnyfpnKBVpFl1ks0/HF0d4IpcerRTFQtMvoff0Vl5gYtT
PM2LGb9+NKtJ7yTbuyJw/4ir5vbZtEjvKgoD79Z5cjmn46b/cwMK278/SefkHd6R43yye4bn8wdV
TsisrPJbQvf0Ivmv6Ree7Z4UZCj0m7jzBTpAspiePyNUf/jy0RLUIrnesZ7ht5gMwx505VWK3xGA
Tk7Pj45/vHeQTxfkpcqiiNIW71uvnx6eHvZvPHp8cnx2fm9/nmRvcGXVnbm/azX/nuVTQiV5RuZm
hh89OXp2fnh675fD4/P/+Im8dXT//g6bysHMDmfXVZ7dA3yZVnlvZul0oOVIXyXF8FFgOpxoef1Z
mr2p54KM4PDZwT1oRu5DoNIXSf9xQXgbpzyrJb1V5Hc6wwcQGaLiqdP8TXp3R8hh75pM2xAbF0YA
xc4QAjaLNQbsi1b9yXp+QQi6o7O+74/v+5Up/74e3ZAIUDNcX2+JExZX5tnFC8K7bpISr5CEJ5h4
VzLqfVwVeEFm/CjLcDZLcVZWy2E7CsOuB+Q2AwqUB/RTfpfis+nNHKdXuDsQGQvyAZoffgiad7v5
h4J2YEjKJ44Xt5dkzWsSb6g+mzitwMHTQQbAIIcvqA1SzgzZIBkHbH4x1ufcH4xdOP4hBhGIQcMg
ugg0V9zu2M+IHCWMdXCfiapDoll9oHTByeFpUp5kLwrM3mov1xrGE0K5LtEogM6S7rIOQkMZDicG
h/MinVL1aD9/z4czvO44HpkJsnrOiDJHeuMjf9dBhEC4+Hgyz5OK9tKpNZ1oEqPYdXqaS62n4KoW
nE0r7PsXT9KCCKsZEY/ZjnWO31eCW9/LRshYkGP3x/AsucTzuvsevJjrB9qBEarbde3VcZH3J96u
FSCiUcZxLNPIdq2y+kDIeD+fz6jScke/w6X8WUWZ04PjYvKQdPzPh8cvH53v/UzF00M+9Pa3YLRk
vGe0AUJJeUF0OzZuMjkvS9x05iqZl1iCV83EkQxNxv8cJEQT5g4QmhOyih1EqUeEqo8mAXnIDY1x
fXlWTR4cHUwaZGtcX+2dk0FcT7rY9q7p4evq4uvK8PXYVz0hvjDn0aPWiOBqDOnrw8PDBxSsDqad
ax1UB1f1cPV1cfVkuPrsqwHHlfaQMDB47bObSzzJ8qZ0GARSsvXjaOLGsW9IuquMsLbVsg+EOgmK
xznHdeXy07z4uDdPr4l4eIavqua5+gJV9h/tPE9nszmub+lNQrg6CeT34OtKs+PLZidgzUWD2YF5
yQZmR28BCCeGEjg0M53rW5uaeGNTE8imJmRGuj2YmqGDRmFq5FOiLUGFswLNyJZnAwFS1nA2Qtls
RKw5NJgNWH8bzkZsx5MQxdBUoGbd2E6wa3luPHHIVPiOXE1j0NIf1nfWH3etP5L/sYsv8rK6SqY3
g2kYeXZr0+MaT0ckm46YfV4orRFs6PeldehPHNtDzi7BncAeR96qAk20Z2SHE88n35SKlJ64pqL5
SfJ+Yv2ZCm76F5+P+qomiNoSOZZaHjb7bCAED3YbQOA5gVfDFxL04gCtwleTd+B4URR5hMSdgGDp
xXEglQIrWL64yTPcgHmO5y2YzWVNNAHRKkfTsaVwcm/qUIbCDrgha3CQ41LiiyJGhVHsAjAS5FBN
hbUH2JA37M1m1EVvqfCG5bNb4w2xMW9wHOmMMMvTHYpO2OG9Ijpdj5CzH7nhrrfKrxnZM0omXMFz
lSakJtUB8OzatgB2HXOApbaow4xRdygNYaZrCDDMdoUAE8Y6gLe+sjVwzSWbIzVEHWaJut4AXJgp
r6oaPuUioUymuXZUs2VtjPdOX3U4xG1VXuMind5UA+DFj21tNnzz2ZCarw6zX92h/Qp7AwSzEanN
BmUpyIujMFKajVd5UVa1y7NvnbaXt4Z2aI621Bx1mD3qwuiqukXtFn/q/UT2KpOJXWcSE/KPR5j3
0dnJs/w6hxyi4C2pQ9RhJp0bC31MsM7QV7w8JPUx+QExIjw/UtavqFJ1tL93/NA6OHRtC/l2ZFEQ
LTsMbfK5ILYogmzUow9qURLl/5rKmNRMc5id5jlCiGElQA9it4ZYajKvOppfHz05f7B/9HhC8Ds9
PDs4fPKEQMiBFd3WgxNpwyk1sxxmZ1G6FMAJuyP04LQbOF1fC9B/+vdFXv358OXpg13r5dnBA2uR
zax/ffGXBz+RN/OHzW0Or/AxTYA9bYClthhitpjnCwG21wfYC8dZgtTz3GBJ5MstLj5eJtkba+/H
XetpkmX5W1z0kRY9pQl0oL17IrXSEN//D0VAu7ArRw9oes+A7QaIctOQsE/CSElXKDclmscq2xU/
qIdupI2u1OJCzOLyhJJNINH10LX10O2x1MOX5weH6OnPP/8MctzObS0kfW0BhqSmFWKmlS8UYK7K
Pt8Ikm6ohyTlnjXfpAyU8c0OYx3e0kNQW2Yhqf2EmP3kC2WWq7LvPIagJ0VQgZse4EVVTm+wtS/n
p+LnNHHWFl1IahkhZhn5A9HFtykoUraaezwK7d1gFWsfOTR61I9le0aOP0R7P6fxdI/zeV482tmf
J9M3kGb/9uINTjN8sbfPge5c0QNWX1RJjSDEjCBfKKpsFWYaSeiXGvy7VuQi+mdvs2FAqk+S99bD
PzNvtvWw48SmP+ThH8za8SPhMFQ4mcIw7GYYXiAZCPUas5HUXreHPRfy6FiYWeHHElpXc34RxgEP
KKpd5W49L/WfduCssyeXZOXdxdXSKdb+1iLuQF++SS0KxCyKwJEgqeanVUHSrv9EnjRiWwnJCs/x
VZ710OTX9BDVl3dSE8JlJkTgShCFjYghojKZV+9SEri8jdFmkhV4hnuAskt6eGrLNVdqKbjMUghk
ck1tb0cFz7Ch0HXQBEN3r9KirDJy/+ICvE9fbTVh4w/ozZS2oHSlVofLrI4glMyUWriEwkxFwfoz
dXhB0yNgPFuFWvaMHt7aVp4rD0HkMdiwFESO4g5FBG37OKFbB6rGI5bJKqivT05/Otg7P2yD39rf
Hf/3KY3apd8rbpPqrCrqpKnZbPL8+eTDB4FjvHlHC/JQW1y6UmPGZcZMCJqDsYovM7ZBuIMAgHsl
Nrazu8B+SPUkl9kEIYJXZKS2ayK0B+xaOdKwBQC9P00Ob+kCW2QVWV3TmyLlOyOim3oUoB+WKrUG
XGYNhJ4AUrVQPRmkocQboAppzbOSOmQAd9HsXdcDUjvqxZXG07nMHgkDAZBqEalSIJ3N0OaQHDWB
0w5wcaV7Ki4zfsJIAJwa25cBF/g6wKkZ+Mnl27x4R3jWnGZCci2zd1EPViDucwRWqSXkMksoskFY
AzWV3bft3XAVVY+AbcUyVANYmBJocNEFrP3dEaaPcVZxhWVFarKbWthG2rkSrtQm8phNFEHZEip+
fhSAUpOKTCeUicyjmwJbe03OaJlk1+SrWe11aBMfScfa+LXBRals9XgCFGznCRzsEL348MAQEpNL
DFNLJy/48D2Z9SyZ80TX45zZDc3tv+SLok3r7NkdBq/r0Za2fehJrQ6PWR0RuGWnsoFPk0QA4qo5
4Qh5PUspCAlZYRlNAqkpa286zRcsn5Qj278mpyum1UcCuagYNBeCdNWMyYCyThYFGwOhhDbruBkc
eE+PJrRFpCdPHmJqeiQSkWoYwnQROQBdqBhGz1+fVccFbYUj17mih5e27POkewcesxNiWPa5arLP
hXlZg5cBzTVpPWlJeHedJ5pf9OoetAlrkoe0UI21pZ4nNRU8ZirEAutLzRVC4YsEGoVjS1AVqRTn
aYXnF3UWdZcWh5f1oNO2sjypceAx4yCGEgpUUgmQA5vZTjDO1Lm6kC1o5ETN0wmLs1bE5eCinKsz
pT2GvZiCLdAVjuSAK4yNymCJwWtqeHVbcYuxtgPSk6rwHlPhY2inTmWTWeqbkRMNwXZxW9NKU8WE
bRbXf0spw2e6cQzty6kkftDaOVCvPXe81z8tiD2RdQida8BDjXhsEDx9XuCKVHOKODFM3s1IDMh7
P53PL6qcDwKm9pGHtpa3aGv7Jn2pIuy3Cf7wXh5S03ocF56EwJTHdNDk1gRdFhf2hQMYHiuPaIKq
vZvnS33sPs/ztwdm3tlNcodhsq5vLfOyiFbkgKKoWZ99p0DjS6H1m+ZSNxNtgveMltKgv5vuneJp
RQzd+fjApSq0zxPwbVhiIcV0qiDa9dDEFTq8JT4RgRpd0tIonHLYj9WdhU3tIDi2tpDy5Qn4PAPf
FmyTCQpHDJENCPmAyFLHZyRRC22Bto2LN3uzImoVa/5bEy7tTS5fqkT7PCXeFsR6CKqWgHCBjpZQ
Ejo2AlY4ACvULUmiLwKkarMf8g8LwjkE0fZatCWJ+hyBKxjAFejCpc/cpZ50P+IfFsRquGommgyu
IDCGyx/A5evCpe1p86XqtR/zD4tCMTSWoggumUErh8sbwOXpwqXP6KVO78DmHxYwekHYoA5cvjmj
dwdwubpwaTP6QBrnEzj8wwJGrxg0JYXLnNWjAVxIEy6kzeoDqbYfcG0fwaw+3gBxmXN6Z4CWrhqP
tDl9AKvxP3wvKf62WquxB3GLMKzqPsnzql/jrrnSi21cllUU1bV7MU+m+Cjbzytifq5WtauTJ7uF
8ngj8HA1St05y2odensLThTGrEQCi8FyqP9qlYCkpuKuNb1JCkI9j2xJTu1TYpLfEbQGObXLy9vc
BnWgSh+mibbSKFzeXgAYmQKp2rcynQgOzGbllAUGJgOVYvgspaUPzqoCV9MbToZ71I5stgXq5pr2
28fV7FPq/OnYp01Dm6i8Bwayq3nMYJdZzfOENFu70wFyG4bof/pbYc1SuutcXn362w3drae/S1zy
jWjy1zWeVzizFlmJC2wl8/k1vqXZDpn1Iy6nN59+varKS0zLH5PX2Zb1+Q228Hs8XdTliPMrq5lK
KyFfKBd1WWqryq18UVh1wnlSzCzSw1vyRDazpnk2S/mbZTLHE/lK4dsCm25UcwXqR3lIPcS8ViFY
BFNlY0FCOxJdTJF2WAptSusRL27Lt3lxiW+SefXQOsoIOZQ5jf7A1jucloRS3qWE0JIiWVxZN2m2
S/4uy5ryXtPJIQT16ddP/4ORWDFOY9ZlWlofyTz+ktzQcBwrzay3+XxO3n366X8RMqi/ZPHeWZdz
nF5Wk6bPDYHS4udWSXo8twpaZjyzqrSaY0og13k+K8knqnRupZV1k5TkkSlO3+KZdZd8qGtxk+ev
FvO5ImFuqjE9gnT1NwlNFROIC/Y4oKtZMb5hvUsSFVaFr0tqh3DZ4e71prh0v5Z6U2W6d+3+rtX+
XpYgr6uxb6LkOFzsvdviLh05K3EOTVafN6hXaj9dZDOyUsqmNH1vn6XASYXP84pQSKMF/4LTOUZs
uZwsqppb1tXHb2noRHN9d+XJ5i5Z/9P5on781d656Nmj7O2EHkfQxJp0v8umtFMQvq00vTIGtVLT
jni+JKWrFaput3Miqj7dThjXY12Yb4tqUPeqGgA1qH1JDepOsWkJ3xhRwlcHAIUuIUF8wEAchYJ9
br8ulKeeHDEunI7z6Y2V0bpBNbM/zivrAxZ52vu8mj8rAUTEbjWcMvVHpMp2izxXuF1opxg5KjUe
pMhLnH4GyNMTRvIsxUWDfP2zxDMl6NuHDbDX8PAssRfp7i32rfSCihMo1SD3BchrkvwA5ac/tfbQ
TwZo6ZTOWaIl0lZbtNo62LCbx1ML9nZEkQ2eJrGuGurvElzbOK2DrHNhU8a5GHQNP9ESdNH+XAs6
36Ib1tnhoKulFjsCOvXibxx0jX2FJeiiXb4WdL7RB9fe8VUYgyASZj2+8CIvm8Be2sm2AAz92wA6
I3Em2vNroePbfnA1HV/FJ0IjgwHsaAzsOuDtFVX6Bs+bRP+kqGgB/DbVn/82wNFINIk2A1sc+X4g
XDfHV/IPeCCOoe6aH9cKnmNitdfA/rdFQkzdSpQ32VcI2of1UdcprrNEXbSn2KLOtxXhGju+Sgi/
DPXNasG0pE6RvGk0sbpfyVRNCW4fNgDeSMyJdidb4HnlaQeuzeOrpLMK1OA4/I0gbyTrhBWql9Bz
229YrodBv4btV0O/WVZzisvqtmU3p/g2SbOUJ6WNgL982gB9M+tv1PzjFakdsKZPpAS+QLlz3Y0T
/suivKO6XfmAkf6C9O2DlV8pEn/7uMEEGMlZYbXq5QRwI3BYwaeZACX7WzYBmyX/eZLNmjSAIr1O
MyXY2aP6kOtU+OlAPmpI8jrWzrDUTw1rqJKFKTVoNkvzh2n2Ec/vCpyWNfL0JFjqluPZFyPodx43
mAEjaSusW72cgfbsJUjchipFxKR2/GZngPL8d9zlRH6ks0Uyt14l84XaFAxeMZgGM9E7amfyotbO
sKJQE9INK/nD3XbCZOrQjJGgB7Vw7gaCzpY5rcyjF9LdAUBsLUr3nDpfUAlVCARRykWSlaue987l
XlW45WZC61qPhwEvvXc353QPBLmhdcVyxSRbTxA8RRSXiNYzd+KJK1yTgnSJcnF7UZC1xw46ptu+
3bIvotsG60tja32cOFYIJIS22JWMOeSGE08ArDvizImBaqlP6DneuPpIVKjWdkizRf1depD4jNcf
siZW12Ron9HHNtTYJV5iK1abFFeuUtxMqL5r3Hi8+qfV8sL8K3uEK/vC/a1e5Z1etks9drR0b3yy
vcIWAL7yQ5gI9/PZh+7g6W8nEm4W8tuj59IiyVZh3TcFzrU6Brj8EFIN4RNtXiH58ookKV503jr7
2tzPdNHezK+ucIZrt1WyYPvNaetRXe8b9dntv+Aib/HfSEZQiz24yDUqIrUfGmWi7VS3jFRQCCJQ
nGqRyjhiqAqm+vTk5fHBBTRZTbzBhWPbF7fvyuaPut4f0wf1X/wik6pRiqI/qTKjt53UlgkLtI9Q
MVNWWDZGf0bpbPCk14b3NhO2en0TqbBy8DVVkiX4MvO3BZ9bwIIST/VKUwAfLq3ijOyUCNB/SsyD
CtMouzeL4mNd37O7zyS8vcldPuF86NSB6s+HzBhu54Pbw8OyUE3YcwhvW0GWmKYhtq2w5yWWHVuO
1odSDn/ugygzZVsQ2yODBQUJBQbtSiEqBFP1iGtHQNVs2y8r0Cpfge9tnbdExtJatv3aTgPfghWV
bRJo3Su8xWkK3Armoq717Dq7VtCcXyaufiuYmANcTou0No+W6LeJhoK7hoAbS1LZPm0LON+rFdV4
CtVyNwWacGimHa0qrO5w37V360toODrFo/rzItvJbeeF7+YKaknVfgHzeYnNDBSpTbGs5yN96EvM
lU5Jqv5cyTZ/27lqN4BFJaoCxZohcKU0xx2JQhXMFtuyuqCFvfIsv2r2UmjtvJ5uNPrYZ9GRdEpf
9adIuku8nCNu8g9rYbVzpKa1CjdvRnbqBXNEd1jqDRaA1cH3vsj6MTfR5Tb6qEOOPfZ8Ma/Sx/l8
cZvxLgUbdbPGsMEIOrNiuTMr7vnjv4hba1gEq3VrKVab+d2ttYE1Y6wf6Li16lNgIXbmq51R9btb
S2dSkW2sSOi4tZANWvKCo5i+MUse2eaWvI57CtmwoI8VF8Zv0jWIbGNJruOKQjZsviue6vB34xlE
trFxr+PUQjasD0RqzpTfuk8L2caiWsenVefDQUciKC4Khx/69u07teqkzO07teptXAhxRVPv782n
VdsH2/dpIQeWzIFiEt7vLi2KobEg13JpIQeW5Kq75n+/Hi3kGMt2PY8WcmDp7ik6Hf8OHVrIMTfO
t+TQqitCby4tHCF43wZyaPUnecWhVcfnNg4t9IUcWgjBghwJag397tDawppB5h56HYcWgpWDOt/i
d4fWxifVWI3QcmgNK/JxEaWuRfwGfTHIWEHQ8oMNC/wxdF01P9jfjy9Gp0Zefzq0XGPDmnm1K9RV
OQLh63ft0qpunyFIC7mwOuCuZUD+hu1611h0azm4XFh0CwqL/W7Xg1NlLJC1PGMuLJAFpRB/N+s7
E2QstbV8ZK5gC//3KBXxzBgLcD2XmAf78ZGa9PnN76Z4xr59Tb+XJ3AKqEVGsv0UNwh+A/spnrlt
vi1/Fi1vtrnCfUhQoQ/0Zzlyf5bT+rPccX+Wvw13lidwqquFZzHK9cfoVpuZdEgSYCeCu4YEa+4c
3xa9RpuseYg82LwG6RXJ6RW19OqN06usom7dSRN69QVBZjTJ31YTeygGD1aoFZIeoQLqYZGX5UWb
4Ax5b6SPjNJV1/0IV0+LVOq6IPjsiFqy94Y4SKw/uimwxYV1fYbowzrBnp4Ob90lRWVldYXnh3y0
wA35GM1XBS1etrmilEhQuABcFa58VbjtqvAVVoUzkRS9qLtptC4Evmq6LlRPmBesCyeeDFk4cAZ1
UqRXV4Tau2bS4KIe9YNl1OrhqFTzQq5gBaBJIF8D9KyFrKI9766Ap0lxO7GohdfSfu/S1qheKbhc
tZ4o8tWDy+nuh4zql8VegnGqr2t/bIHqoRNjkOCQv2Hpq0hU62WFS65qLCumy0qB7/p4mP1kUWF6
ZEVZNYXWrbLKC1r4+4G1yGbsWoErwkbp1cuk+Ad2MkxaNnyV/D/LswfThAiTOS2dUR/DQi+R18hb
9NI/yEyn9tgXvS+aKVP+lkLNzRdQoLSZrVpIFgn2/sAFJD6XgN9mCygcX0CRtxWxESAhl1Up2ReF
4cSFVxGKHMppkTMZsVbHltJZhRe4KKc3i/ns09+IjnGdZNftYTj/939ajntp7V2WE2QdFxPHttLJ
qwlhzPSSb708q360vu01FWxpt3uNNaVkUIudjD98Ly/v80PTmmr9H0TD9epKRv7mYyTOCGue4sP3
d8WjnebolWVRo+Y3cAIM/3xz54H0vaZhq27ZIk1bTdtWemvtvWwPe6lPi8FsabRkcICn6W0yr08c
LB/t2A/HmF1Xw6KxpzVqwYbCDbpQ1a/fu3dPGbLu4Tb3v79HPvod/fr9P5G/7u/aE9u5rwoDojDs
LaqcsKzbpGrYl9O9pDCdjxcFNeA+1Aoen4ZRbHmUAY2krrEN1Xb+lamMn3s0QhijHeXOLJoPXHc0
0tol7/Z39SHzbnGfBS1lV3crVnc1K2PYvj6x0Lo4cnOSJsHTDge2jv9VocudV817ydV/WkKh7qWj
vH+s0MVltXrT/nHtitbUqPuHDDZSN8CpzUfAN8toKbp6BK7R9uLqGNgr3zev0FMXm5d6fMm01+1G
UshqAQagcQ9vrCnjvazdO9LfIc9Gn4Vnt7s4IVMjAlCNELmklWHofGB9vsMLnqOQSfEAlOJSb6Ry
z+uvPGi/sgn5w+uFo5BJygCUlAMP0mqPmwfW6hHVg2XqpvoppEhQ8hmqxEnP+ksWV+XHYTnOADrT
r316AtfqXD3Dsd72xhXhFjNcdA5p7J6ieH/X6j/GtQv2bHvI4vJUR8kpgfJan6+fHp4e3mMHSj47
Pzy9Rx+4LzgrsEZWpwYoEtQ7F50ZiAKhcb58oLW+g21sZQyL1jXOK0FqtdpRdR6tGu70fFer0Q4D
+/pZSueQnvCbNqcSH+B5Ss9JpLMoqgzeCZygnLH3gpabN4I2OerEbGMQkAEIykfv9Aa+fFZpzJzl
DavjsTErHc4Cx5THzsqQR45tsgbHNjW/lYbBmV0EFb2v6xKMD8OB4x6jsWHQo7uom6ceB2dP3cBp
jXFwW2NYZ4+NQ8X/heDoMxeNTgcr9t1sMTRHUSwKq2Wny7DA3kWlcXGTJAJ3UARFB4a7J/4khka2
OkFah4ftk4GkFT3TWnL+peoRl/WAIYdZpHnITP0hhRhTJYeZXrUfJKhDAPqTQ7k/OdSp9uNtRaIJ
KvcFioUuZFJNO4Rk3sg1TlPtzy8RD2heoU8rYUlUoS9WTFhyxVzZNLulo+b2sls617ceBmhec08r
s0hUcs9XiwJE8HmNtSzRj59iWj40A/C97c+C8TaGVo6RqKieIApKlQch32QaII/VynyMPPQl+JV5
lT2tBKQYDj5UPKzFhY+IrHVh7ZmCFsrnXiBbqsBjvs8XKwUiyg452ew+X8x2BQJwV6CV8F0vUXvR
1FHFZKtrMwd/CDr4V6XaqqtqU1s3Lu8Rc+aHoDMf5vKrver6gza0qeTazI0fKrvxpV3chr/e511l
/voQ9NePgbd9t6OIn/YHAfuMILdj7aU7yt7m6RQzX13P+xh6sIPRcdzP5GFEX6mH0RWEFws9jOKT
hpYPbNXD6A5r39VGvqt0Yhfs2PCDMccGDWBgzo3atL8q8ttm6rlU7V7RcRW6NngWuqBcrtopi56r
7yrcX0xv6Nmts6Ra3Db+tLysKG9S9Zf2n9dxHbrD8nkMAzgV7xt3l7bSBDy7PYZX49fnLuVMelhz
jw1Dyd0Pm4af110a8HGAaQmxEleRmLjScZzi6U1GF13HX8qEmHVcJx7wQQ2vKg0t5EMDoyFjlXNc
BUPbkL/0GjM9trtB0/GXtheMLA/XvNiePNN7Cw5TV1BnCXSYysujI63y6NtwmLqODxrAgVqZApmQ
1ndVUInM4wN6CiLzUgjvb9swdh1jf76O99R1QtgbYa/pvTbyHDEdgaoIwimRP/MF/Eauo3m6/HKm
dDytrhMLZkqxzqBME1qz6gowTZIHvsQc0aT07fthXeQI5kitxrAL70UYO/dEk/NlOBrSPJB+OQc6
/lUXuYI5UCzdsYX9INE8CG9vfy68z1H43EWwqEeqSctb2h0SzYf0ke3PyZfcwYdc4S7dXf+KXOEu
YnH7IRirKlbWAO8qd9+t61LlehRiXvoQjEiVKy2r3es6SzblOXe5Lx+MOZXI62731o9656LS5Y58
MAdDcRo3MIFcbLjcfQ9uswg59fZ2PDgPdZmzPoKTLGQsa0sbH2pOfJGg6A9O04n/uHiOb3PIhx85
Ih++/5l8+K6pD//s5PT86PjHeyv92oW7cN9qvP58MXLP/z9dV3+2N+f6F5RzFLn+XXEZ6+UD23X9
D6vqNUGNSMnb+K07y7kgcqENg7p49De1/9FKLbDYgSBY4jfi+3ch37+oovzX6/sf1uljw1AJMf6q
fP8eGK3vKIUUf+W+/2EJPza0L+f7/3FRldObIr2qcJOX8bjAs7SyqNQvl9WmOtfMbC3zgn2f3/nv
qTv/XXnpPdf54s5/D/YINKXMFD00MlE9UrGJiWZOSe1PLRErKB9YVzD/wp7Yrn4MOWK797+EH9a8
7qCWr9wTVO9Far7yrfhhV6cGurN1L5NnHJWv5QkXlCysD134kl7Y1VkQ3d36TPjGEfpa/nBfUKZX
sV7yVn2wq7Mhe2L7M2KsFWwpGNn1lYoOfT4PrM+qBURgkGsrTruOp/biui5WnyX9R2DUqljObdZ/
yUWMz1L4I1DPgMh3K+7Llt8y13gEusZFPG573suW+zC/eAT6xWWr/Ys6L0U7Kj3rKYBNWUgxl2cx
LpMYFapKyipiq6jkvfUcwBvWvuJJLvRUL+NykooVg6QF20csFIjJB5rb0GPWmgJzBxg7LZUjalVu
aHZrB7mCoCmIBMWR2eyuel3GzZKgYI/YUbQGv0ka1Nzq3RINSrZ35dUMu9Wf3AA2qiAalMcmLkMT
o3EalG0g6NPgwONaH6Llw+P6yg8F6x4I5ob8C0s1YD1CG6hkISw+1j4r0t21nHAS6q7dpnwjTV76
BadzjEbqN7Yr+Ch7e9A/ONL0G0Ofij5rCI3Ek+q5tG4IR0f5iq4r2blGJjMGFFmTHGy0EXw1I5/0
zklxQ1iaCUqQK7oG66PxTOAVH72mct6aAbhGck31UA83hIOVfTVNgZ78JFYUTOD9LLpCqBlePOaQ
MNMVaFiMXFcQHeLVq7noRuo2U38baUVbqIVuoy7ECuoCmjgbVBiGFbxqIStQhL4lhYH6dbapMAzL
Z7E1Gir6In0kWMG+740s4XgjKsPKCdN6b67PYSMj8aWsHgzLZ/H5UTsZCzkiDuuEgdn8fH4FQbeQ
lqaCEMEyLFQ9+dMXIGz7Y0JMgnB+9Rwn5aIQoAzdNgDWSJApKwcRnB8TKtoiXggDG0XIDNfPrXvF
mikuekdHuTFs6oVqdZ6C0J14fuQJFbD21DwCdRDHceT7X6U2FhuZZ6pHFbkxLB9Va8nZAv5rqN9C
R731r21qSw7G2kjWiQN0zDRfmnMv13yF56b2Km27goIF50WSlU/yvOoH1XYuO72oHh7A042mdex6
1ns6cv8Dm1N9Y1iA1RE8ghjFFT3BE+kJfhjuWs0tPW5bLm4vCkwUMFZj9BLXyhinWtFtA6I0kmLK
CnIMxX5GStG7rjeJBLC65B4RY54nOZeoBnYQjkfaqUpcfVxkTWDveW7t47orabagqfgvkhkxRYjK
+2jHmljtEUGDx7RR9mwjYSbbBx8h85HTeHvl5z1Bud/VRcyWH4LWr9NZv/Zg7S7fE3KeukMu7xCs
PQo75EIdQoon2oFdlRx0p8thPBuqsRyplD7xhC4eZyU4cJT46xjcyYPT5DKpKkLQbXh7ykJuC3zZ
xvM/2hlcNaB5I3Gnylk8GzbtIjXnGfJEhocfRqPIjtvd1H2ellNqNzPrWWJqCx7eXPwiPD9GhuH6
PEl6CIPj8d7BHmYhC/AgFuB2dYpo4sNr3dvkWo8AR5ogY0fZkYb6qu4XcaV5tILGRl1pqvQirZ7n
MHPZExx1KKQXH6IXTyFWwJ8EMBn5GyQjsD6TWsYMJSOa6gaRUSBkayuJDB3m85gwG5qKMZAnLIiJ
HpJq1eftWu8WhDAz6/jo8dNzK80smuR3+NK6wcU1rk8Xo22k2CLfK+8KIo7ah+lrL4pPv9Yphh8L
fI3nWfN9duojbeSuyGeLaVVa78hTVpZX1m2SLa6SabUo8Iw2WN1g63BR5Hc4yayXGensRMA0+ZiY
grfG9/UZr7PhiJ2BYHRcgAUJ0nuUWZBnT5wvz4PoAjXgQevLLGnyrxPw7sE6nZAHBRAP8nsyK57E
MLeRHCSrz23gBBAnUNvlFZu/XhhO6EYGivvUM9So+qxHpF0JjN6RHQ3ltwwWsmb2h+5CFp3EoLi7
NDYt/sisrDET+rNgOAOa2R9620cegrM+vE2tC4MJ+FyOIQ9ppnPo7Rt5CE7j8NR25hzhzlzobIbl
vEvwTbHIrhFHtnMB0I1kSoYB9pqJG3pbSx61RyDsFbeWxrA34StfFm7NkxL0tpo8BItXT22raZzU
vzm4jcSm6p6Th2CxGSrWrPOFLrcNcZbzvErmR9mb+fPXZxVtfulmHt4wwNZIIMqSwLvx+Z4LC0Rf
jXOMYhs4E0+XlAlY540zs3amvdo7b3xoXWSlz+iD7BqJRlHweQtyzD8Pi8ZQzbM5TsAG/KImzRVa
NYXPSLqJ4vHUjThpEpTD2YeghJPQiAshI6577miMRI7HcIM2nAsdFOgqe4x80OpvfKYaewxH2VV9
zjO5hDPr48LqHkxKriyymfUKF1ef/nZ9mRRvcFpRZ1CGb4hgIf3B1mVaVbh2B+E0+4jn9KW9y2Jx
RRXZT79W6TURUjhrCqK8mOOkxFaJsZUuG7aSy3xRkW+wA01nSYVLi0yclbxN0nlymc4pLeJkemNN
8+wqZe+VywIxm/6uwRr53Bk17AOwJJCl3Y6k3PaJlCWZumBRuo4O0k2W7FzWzI7sWdMuyyj1wLpz
QrOq2xPhQ4pHoTvbPAq9Z7i6LE3Vg48VgiOLFI4S77xpNhvc/PNY9UYPTLxeL2mlO476S/fu3Vt+
a7J6HlHzzeb6/e/vkU9+R799/0/kr/vfSaeItDix+OZd70O79sR27n9FtMGtP49VqvTAvHMwClX5
kHn6tlW/PpLQPBw+2vrwuTXmscKYHpjoDsUyKozeOA+/Z7l4rDSmBya9mwRob3YpfHUkzc0SjxXN
9MCsfGFEsB5Z51cW+4Zhsn5PyfdY5QkPLF/bj0pU7qd5IYFeVovnsdIUHljMVjF8YZX2HqyQ3jfE
Pnnco+cxJcYDlRjdrQpghQpevv+n5XKsV+bXtx7biDKPKVs+qGzpbCJAHEwEUIPKn2qEvj5suG7m
Md3MB3UzwDvUhQC4bbTSuR7mMz3MB/UwuW+l26/Bk5PBo0Z95AqLzxQWH1RYOq6JFaAMGpfVUxG7
2XsKlg9HL4qLQOe31K8KVoEO4SrQXHmh15si0G0xGXZ2Yq8ANL12f7dT7lnvtMam3rG01nOvqV1a
67mt7gwj3dPJfHjXB0KM0v0vyc287s+y3GiBiTVez3m5SozN+iQkae0Tu57JF/FDXTHEpiFaDv5V
UnR68ulX1hVgkpDd/KP+//Ga2jit8NmUfC29kpfVbiqjCspiS0ti92xxH/ZzCcth94J+oXLY5AGi
+WfVSXZI/SMvkmvcRk+NBFUhx5lsMnzKh5xhgmXZd4YJq6+MhdtKy8A+f3dWTVjIrXV2hz+mV+mb
pLGimYda/IS+88jfsPNo4EnxoZLcSkc50oTXyKNhaMOa3La3azV3VCEmumTFtqn286rKb6GA2Tr9
hXIiTnLDiSFrmKG+ssvVfLVXALv7uMG0GKVaKAcr+FCqhdLRlMJpQTSD7ctNyy0uS1o0+rpYZLM5
4Scac7T6rv6EBUZZG8ohEMNiZc2EKeXGODY8YfaXm64/KE/OH0ymwihmUhwRoeoPV/EsB4KYFZqw
tipOO5ddMG9lXFw2U7yaHdd+dXOSNIBDRRxbMYNeVOGgZvjaWRatVXEx0N44fYkfMCA5o6gQZSka
CIIuBblPysjWPNsEWaobS3AFbxugahT8oSwEA/BsbUGC2ypTNVL9ZGmGopTC7iMGIBpFeYgFkyI3
FM1CbwYEGfRgeX9PaFPw20sLVSmXb3OMT1AKzlE8+vJbZnxmJduUGZ+gZJujeFzCt8r4zAq1KTM+
QaE2R/VoSnPmB2L6YiojVeiuAaIbrmxjVE/BC0erjkoTHrkxEAqOchitpuBCmWyuuRLZfnWDvBQu
ZeM4iuUVpLzUpLrCZ2WnkZEVqcxOh6XbWnDVwovl7NQQ3M/DUaOtlhb1hrXdmCqpdE6WhJuOQ/q5
tUmzGmxra5PSvF6+lyIokyCKxnShlDqFrF6AGbYf3BwfjAQmnyBvcLN8cCws/fPyxO1mzkWCzDkH
9oZulicqAP2Z+ON2k+Ni6DxEx1H1X5ryR+lGS70D2ItRN8At3nDmmyI/hPOJNhV6G7OwtwiMWpEs
ftkuv3DPdCNBF407c82wC84SYhZbF4MRKcI1qTb65bbyVzX2dqWyaIIYjDgRWWtqQ/+DUcDZeJQF
lKzRC5YUbDhCMQOMK/RDK+JO1EO7p8+fVNvNHwRhrLObz47Abn49enxyfHZ+zxGdfa2+yS+o0Qc6
4+Rn+tDby7oEmzytwhNV4HMVT0yxRRlPXn0ysuT4VoEFszet4xG5HOE/DSTJVovreWBxPcdRiXMQ
VhZTQWwgdF/hoiTElBRVnZVzdpPe3aXLQ0nb39r4+Zsum9fni74tMJ0FZzprEl5oYDt3MzOa1Kl9
3Ob2wzcNUDWym1W3tX2w3J2jdL60jCpDPaJsALrENKqdl3s84Klb57i4LZew9q4a4GlkP6tm6/uC
QneO4FhrTSp1tbljlwx/mV8LCJTdMUDTyKurmozv21DwkuPAuzrq1DkG44A6aQQjjU7p0+eL5EMT
Q9klz/5FAzyNZJA4297IS+7bo+dtwFJvQ+aP77A45xiMIW4FflfnbS+ukXXoOyx2OQazjQTsvtuL
9vL6uXdc7DnMFIzBNCNoeXc71Fxbozfjuj+UhNrN9/EFTgah7o9WlP9ApPwjZe3f/9q1f1/g7gK1
f/lxivR2pzr3BrV/34FidSNYtinG6kb0WG1/5IwDqR+prpVLGXQyK3BZ4oc1f95P5/M6SW5WX33I
WfTKdX0u7Ww1ZNd3QKmnVFBSFhG9FsYNZ+sBzE2FFYRXbxhAvOHwWzNB6BgKwsGECkwUcGnLT6l0
Y53Qw00eleojkf2lFgLnOoIaziYxC2d4Pr+o8seLsspvccETMBs/3MWzy9arrPDgNk+R8NFWo3N8
JIjOQWsemeS6waZnRWlGtj0bG47qMWMqaPRMD5XQPR+pews9+WF2nt0L3ePcw3WjyQarbftI4DmM
1Pb55AqEgWF8uTcrnKU13Pw0IKqtug19JAjHERzLoYeaZwgb6sOGDGBzt+stdAXSKlKTVnLYIkPY
3D5skghYMWzbdQe6AoESqQV/yWGrXbUmuHl93CRMSYzbdt1+w4JeLW6KJ5TJcQsMcfP7uEmiBMW4
bdfB5wpkQqh25pgcN2Qb4hb0cZNEFYlx27Ajr7+f6rsCqSAKTNXDzVQshH3cJBXzhLh5RmJBtSSm
7wnEguIZoyO4mcqFqI9bZIKbkVxQrXLpeyJDY03dzURza1wRe1lXfetdM0DPSDqIi1xyzdfm3xeI
B6QWSyiDzyTot4MWAhA0Uec8M5eY6PDCJYTcevAEkkJgBoEQ+rRgrX4S7giELgChiWrnmRkSo5YE
r/PjewKhgdSypGRUSKZhEq+BoQdgaKLm+Wbh+6NmBa8H5PsiL9iagrdW8+KxExKlGPoAhiYqn2/m
sxq1MXgZI98XCZM1lT4qguvaJOYYBgCGJuqfbyRQhKdnLTHkBsewaAovU78BCH13Eq0BYQhAaKIJ
GtZFGTU9+AFA/rAyCi+PvqbJRiGMA/2q3R24IgBCE6XQrIaJsPS2qcPTH91FgXnHpsIJAh5OAFZv
VNgiEJV07MX91rW6Hu+9OD86Ob7HniKfflDlFv+21ZZ8FNe6UwpUCHigAljyccTFrjSasQGsF9QQ
8KAGML69dc12e9pc/O/OX9cqZewHLLLcscHQ8ta9CTSNDJvmLDvweNOCOs/MRQg07Ro2zVld4POm
wcqBrZcNaNozbJp7KoKANw0G87SOKqBp37BpbuwHIW9aEM/DfD1A04Fh09xeDiLetCBsh7lLgKZD
w6ZbYzOIedtggd3W5QC0HZm2zVltaPO2QV7bN91XI6fqO8ZrvDV0Qof3AuSPffNX1AvT5d6aCiHi
vQC5XN+CFPXCdOW3ynbIGZ4DMry+DSbqhSkTaNXVkPM+B+R9fStG1AtTftBqfCFngw7IBvt2gKgX
pqyBn1nih5wjOiBH7KvSol4YcwnOHEPOHB2QOfa1UVEvtPnFeDjhqktSpAZKVMCe+he2vJj9A2F/
kdYnx148SYtbnNHjQrL+uDs3JuxhrcH3FLiQ8WiQSx6dnTzLr3O1rrDS3GcnFn3HQDnrKWaRPcAK
ZBqP89u7JPtAf/Q7xm7Qg2V0uXhPS4ucQTdArsFaY1Fm4p6gv35n/XHX+qP1ndW97P2VXCBXh9c1
2UxPx4vQoOOg+GetvbjJhwXju/3QZDQ9hS9yB/0AVQHW2pPkvbgXmoymp/tF3qAXILmz1l7tnZ/i
6+Nc3BVNbtPTBSN/0BVQM2CtjfQjNugHVwyjYNAPUDfgkOQFcLBNb5HZBn1pNcUo7HcGVhH4Mjt9
JemHyWpvtcZowKFhJYH347Yqr3GRTm8qSX80tbe+/hjFg/6A6gJr7/Xh4eEIwTiaWlxfj4wHPBlW
GzhPycvqKpneSDqjqcz11cl4yJll0DzNb/FdXQlW2BkTZttqlW2aPNSHtxdvcJrhi739fvPd69ot
c/7aJqhDLSdZeXdxNWSqy6varXJ+Grf8VNhshef4Ks+Apts72s1zHhq36rOw+SQr8AwDrfMb2o1z
xhlzxgkSXO3BusNFmWcXL0jTN0mJi6uUsM+M3L+4AO+v6i8dd1jz8Pftwz2/2BP6ZYt+uvlNNIha
jxh/v2lTW23kHDvmHBvkAYcXz5N0Dg/WbKCHD+gXTbVKxBl8zBk8aGu8Pjn96WDv/LDfxeVV7WY5
H485Hwe1sLdpcnhL8VrQo3HL6U2RXlUQTORBa/VJY1AYXw9sztdB3Yz2rp5NlnMh7Fj3IeM+ebxP
nL2DmhpHTAqScR983geuQ4NsPbl8mxfviFI0r0tsrXYkubTIExZ/xLg7Ae8OV6UFvH6Gi5WefPq1
vazdbsjbZcwegcy+49E/fE+IMkvm/FSP4/yi6/D/C+lXm+6m5f3nH7ba80Ja9/93hN19N/I6bdhq
Wzaeh4jjwaQPAqXPyaJgKaBk+Af4Mq3yActjF9tj1AqLvWC4qdH0Lua9Y+IJiY7mqY4L8CCe9rq2
yW7zpplMQKBMaMyqtKyKepNyjc0gWkCm+6l1cHMd3nkmGRAoGc5TorVc/JTfpRg4NIjeJJK3c1u7
G4h3g0kKBEqKNUBbByMuKHg6NAIFBc1n3MxuH/3SBnb7ms5zicJzqhG8+brsKmcy5CF8YV8M9gee
nJw+3zu/NzKCllHRj/Cj6XYlJ4uJ+8+lEc+/RqA0Kmny8ODc2eaSdoNc3jhM3iC49hcu3qz6ZNlV
Iw+JywWOwwSOCxfdapoI4YZNvEQu5+wO4+wuXPGqaSKAGzZxkrmcaTuMabsg02ZN+HDDJoarx1m2
w49Whll204QHN2xivnuc3TqM3bogu2VNuHDDJk4MjzNYhzFYF2SwrAkEN2ziy/E480SMebog82RN
OHDDWk4t0dYGlO+1uqUxjIPpP9H/RncnIVim5Vb53fOkuE4z+uYwX+e8e7MbmtRNFm5H1d0TCKhK
07RwWZ8RI25kf3AfbMdr2+mO8YcDXKbXGS5OapxL3jalxZv8HZmXvKheJ0WWZtflYBZ+OLn8Nzyt
zoh2l1zj7hAcq7nVdO8Av6XzSwylyc9EhznF9Jvl5AzTuKz0Y63UTHrfoj6qXUvw3lvHo/GadUdZ
zFidovqf9KF/PH757NlOc77fztmHknRmQslvwmhwicGw8z9832nkWfIhX1S8h7j45/8P</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="v_keine_AB">
          <DataField>v_keine_AB</DataField>
        </Field>
        <Field Name="ansp_fax">
          <DataField>ansp_fax</DataField>
        </Field>
        <Field Name="ansp_telefon">
          <DataField>ansp_telefon</DataField>
        </Field>
        <Field Name="ansp_anrede">
          <DataField>ansp_anrede</DataField>
        </Field>
        <Field Name="Salesperson_Purchaserfirstname__Salesperson_PurchaserName">
          <DataField>Salesperson_Purchaserfirstname__Salesperson_PurchaserName</DataField>
        </Field>
        <Field Name="E_Mail_Salesperson_Purchaser">
          <DataField>E_Mail_Salesperson_Purchaser</DataField>
        </Field>
        <Field Name="WORKDATE">
          <DataField>WORKDATE</DataField>
        </Field>
        <Field Name="viaEmail_unterschrift">
          <DataField>viaEmail_unterschrift</DataField>
        </Field>
        <Field Name="viaEMail_adresse">
          <DataField>viaEMail_adresse</DataField>
        </Field>
        <Field Name="viaEmail">
          <DataField>viaEmail</DataField>
        </Field>
        <Field Name="abvorwandlung">
          <DataField>abvorwandlung</DataField>
        </Field>
        <Field Name="anderung">
          <DataField>anderung</DataField>
        </Field>
        <Field Name="SalesHeaderExternalDocumentNo__SalesHeaderYourReference">
          <DataField>SalesHeaderExternalDocumentNo__SalesHeaderYourReference</DataField>
        </Field>
        <Field Name="OurAccountNo_Debitor">
          <DataField>OurAccountNo_Debitor</DataField>
        </Field>
        <Field Name="MWStNrText">
          <DataField>MWStNrText</DataField>
        </Field>
        <Field Name="VATRegistrationNo_SalesHeader">
          <DataField>VATRegistrationNo_SalesHeader</DataField>
        </Field>
        <Field Name="Titel_KopieText">
          <DataField>Titel_KopieText</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesHeader">
          <DataField>Bill_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="SalesHeaderDocumentDate_0_1">
          <DataField>SalesHeaderDocumentDate_0_1</DataField>
        </Field>
        <Field Name="seite">
          <DataField>seite</DataField>
        </Field>
        <Field Name="VerkAdr8">
          <DataField>VerkAdr8</DataField>
        </Field>
        <Field Name="VerkAdr7">
          <DataField>VerkAdr7</DataField>
        </Field>
        <Field Name="VerkAdr6">
          <DataField>VerkAdr6</DataField>
        </Field>
        <Field Name="VerkAdr5">
          <DataField>VerkAdr5</DataField>
        </Field>
        <Field Name="VerkAdr4">
          <DataField>VerkAdr4</DataField>
        </Field>
        <Field Name="VerkAdr3">
          <DataField>VerkAdr3</DataField>
        </Field>
        <Field Name="VerkAdr2">
          <DataField>VerkAdr2</DataField>
        </Field>
        <Field Name="VerkAdr1">
          <DataField>VerkAdr1</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="sum_restauftragsbestand">
          <DataField>sum_restauftragsbestand</DataField>
        </Field>
        <Field Name="sum_restauftragsbestandFormat">
          <DataField>sum_restauftragsbestandFormat</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvD">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvD</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvDFormat">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvDFormat</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine">
          <DataField>UnitPrice_SalesLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLineFormat">
          <DataField>UnitPrice_SalesLineFormat</DataField>
        </Field>
        <Field Name="Quantity_SalesLine">
          <DataField>Quantity_SalesLine</DataField>
        </Field>
        <Field Name="Quantity_SalesLineFormat">
          <DataField>Quantity_SalesLineFormat</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001Format">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001Format</DataField>
        </Field>
        <Field Name="UnitofMeasure_SalesLine">
          <DataField>UnitofMeasure_SalesLine</DataField>
        </Field>
        <Field Name="No_SalesLine">
          <DataField>No_SalesLine</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2InvDiscountAmount_001">
          <DataField>ROUND_VerkZeile2InvDiscountAmount_001</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2InvDiscountAmount_001Format">
          <DataField>ROUND_VerkZeile2InvDiscountAmount_001Format</DataField>
        </Field>
        <Field Name="ROUND_sum_restauftragsbestand_100_mwst_100_001">
          <DataField>ROUND_sum_restauftragsbestand_100_mwst_100_001</DataField>
        </Field>
        <Field Name="ROUND_sum_restauftragsbestand_100_mwst_100_001Format">
          <DataField>ROUND_sum_restauftragsbestand_100_mwst_100_001Format</DataField>
        </Field>
        <Field Name="ROUND_sum_restauftragsbestand_100_mwst_001">
          <DataField>ROUND_sum_restauftragsbestand_100_mwst_001</DataField>
        </Field>
        <Field Name="ROUND_sum_restauftragsbestand_100_mwst_001Format">
          <DataField>ROUND_sum_restauftragsbestand_100_mwst_001Format</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="MWSTBetragZeileVATAmountText">
          <DataField>MWSTBetragZeileVATAmountText</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="SalesLineOutstandingQuantity_SalesLineoffeneMengeausRahmenim">
          <DataField>SalesLineOutstandingQuantity_SalesLineoffeneMengeausRahmenim</DataField>
        </Field>
        <Field Name="SalesLineOutstandingQuantity_SalesLineoffeneMengeausRahmenimFormat">
          <DataField>SalesLineOutstandingQuantity_SalesLineoffeneMengeausRahmenimFormat</DataField>
        </Field>
        <Field Name="ROUND_SalesLineOutstandingAmount_100_mwst_100_001">
          <DataField>ROUND_SalesLineOutstandingAmount_100_mwst_100_001</DataField>
        </Field>
        <Field Name="ROUND_SalesLineOutstandingAmount_100_mwst_100_001Format">
          <DataField>ROUND_SalesLineOutstandingAmount_100_mwst_100_001Format</DataField>
        </Field>
        <Field Name="LineNo_SalesLine">
          <DataField>LineNo_SalesLine</DataField>
        </Field>
        <Field Name="Herstellerkurzname_Item">
          <DataField>Herstellerkurzname_Item</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesLine">
          <DataField>Artikelnr2_SalesLine</DataField>
        </Field>
        <Field Name="Description_SalesLine5">
          <DataField>Description_SalesLine5</DataField>
        </Field>
        <Field Name="Quantity_SalesLine3">
          <DataField>Quantity_SalesLine3</DataField>
        </Field>
        <Field Name="Quantity_SalesLine3Format">
          <DataField>Quantity_SalesLine3Format</DataField>
        </Field>
        <Field Name="OutstandingQuantity_SalesLine">
          <DataField>OutstandingQuantity_SalesLine</DataField>
        </Field>
        <Field Name="OutstandingQuantity_SalesLineFormat">
          <DataField>OutstandingQuantity_SalesLineFormat</DataField>
        </Field>
        <Field Name="Country_RegionofOriginCode_Item">
          <DataField>Country_RegionofOriginCode_Item</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine3">
          <DataField>UnitPrice_SalesLine3</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine3Format">
          <DataField>UnitPrice_SalesLine3Format</DataField>
        </Field>
        <Field Name="Description2_SalesLine">
          <DataField>Description2_SalesLine</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesLine">
          <DataField>Cross_ReferenceNo_SalesLine</DataField>
        </Field>
        <Field Name="TariffNo_Item">
          <DataField>TariffNo_Item</DataField>
        </Field>
        <Field Name="liefert">
          <DataField>liefert</DataField>
        </Field>
        <Field Name="LineNo_Verkaufsz">
          <DataField>LineNo_Verkaufsz</DataField>
        </Field>
        <Field Name="DocumentNo_Verkaufsz">
          <DataField>DocumentNo_Verkaufsz</DataField>
        </Field>
        <Field Name="OutstandingQuantity_Verkaufsz">
          <DataField>OutstandingQuantity_Verkaufsz</DataField>
        </Field>
        <Field Name="OutstandingQuantity_VerkaufszFormat">
          <DataField>OutstandingQuantity_VerkaufszFormat</DataField>
        </Field>
        <Field Name="No_Verkaufsz">
          <DataField>No_Verkaufsz</DataField>
        </Field>
        <Field Name="OrderNo_SalesInvoiceLine">
          <DataField>OrderNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="PostingDate_SalesInvoiceLine">
          <DataField>PostingDate_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine">
          <DataField>Quantity_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLineFormat">
          <DataField>Quantity_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="No_SalesInvoiceLine">
          <DataField>No_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="LineNo_SalesInvoiceLine">
          <DataField>LineNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="DocumentNo_SalesInvoiceLine">
          <DataField>DocumentNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Buchung">
          <DataField>Buchung</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine">
          <DataField>Quantity_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLineFormat">
          <DataField>Quantity_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="No_SalesCrMemoLine">
          <DataField>No_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="LineNo_SalesCrMemoLine">
          <DataField>LineNo_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="DocumentNo_SalesCrMemoLine">
          <DataField>DocumentNo_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="Account">
          <DataField>Account</DataField>
        </Field>
        <Field Name="Description_LieferBed">
          <DataField>Description_LieferBed</DataField>
        </Field>
        <Field Name="Description_ZlgBed">
          <DataField>Description_ZlgBed</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesHeader_Lbl">
          <DataField>Sell_toCustomerNo_SalesHeader_Lbl</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesHeader">
          <DataField>Sell_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

