OBJECT Report 50019 TOPAS-Bestellungen Englisch
{
  OBJECT-PROPERTIES
  {
    Date=18.06.18;
    Time=16:24:48;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV3.1.0.1460/1460;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table38;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order));
               ReqFilterHeadingML=DEU=Einkaufsbestellung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                               Firmendaten.CALCFIELDS("ISO Logo",Picture);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);

                                  IF "Purchaser Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Eink„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Purchaser Code");
                                    Eink„uferText := 'Eink„ufer'
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    w„hrung := 'EURO';
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    w„hrung := "Purchase Header"."Currency Code";
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.PurchHeaderBuyFrom(EinkVonAdr,"Purchase Header");
                                  IF ("Purchase Header"."Buy-from Vendor No." <> "Purchase Header"."Pay-to Vendor No.") THEN
                                    FormatAdr.PurchHeaderPayTo(KredAdr,"Purchase Header");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.PurchHeaderShipTo(LieferAnAdr,"Purchase Header");
                                    TotalDruck :=0;
                                END;

               ReqFilterFields=No.,Buy-from Vendor No.,No. Printed }

    { 2   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=BEGIN
                                  CLEAR(EinkZeile);
                                  CLEAR(EinkBuchen);
                                  EinkBuchen.GetPurchLines("Purchase Header",EinkZeile,0);
                                  IF Number > 1 THEN
                                    KopieText := 'KOPIE';
                                  ReportForNav.PageNo := 1;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  EinkDruckZ„hler.RUN("Purchase Header");
                              END;
                               }

    { 3   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 4   ;3   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;Picture_Firmendaten;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 1000000003;3;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000015;3;Column;CompanyStreet      ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2] }

    { 1000000004;3;Column;CompanyPostCode    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[4] }

    { 1000000014;3;Column;CompanyCity        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 5   ;3   ;Column  ;EinkVonAdr8         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[8] }

    { 6   ;3   ;Column  ;EinkVonAdr7         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[7] }

    { 7   ;3   ;Column  ;EinkVonAdr6         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[6] }

    { 8   ;3   ;Column  ;EinkVonAdr5         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[5] }

    { 9   ;3   ;Column  ;EinkVonAdr4         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[4] }

    { 10  ;3   ;Column  ;EinkVonAdr3         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[3] }

    { 11  ;3   ;Column  ;EinkVonAdr2         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[2] }

    { 12  ;3   ;Column  ;EinkVonAdr1         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[1] }

    { 13  ;3   ;Column  ;Buy_fromVendorNo_PurchaseHeader;
               IncludeCaption=No;
               SourceExpr="Purchase Header"."Buy-from Vendor No." }

    { 14  ;3   ;Column  ;No_PurchaseHeader   ;
               IncludeCaption=No;
               SourceExpr="Purchase Header"."No." }

    { 15  ;3   ;Column  ;DocumentDate_PurchaseHeader;
               IncludeCaption=No;
               SourceExpr="Purchase Header"."Document Date" }

    { 16  ;3   ;Column  ;STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo)) }

    { 17  ;3   ;DataItem;                    ;
               DataItemTable=Table39;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               DataItemLinkReference=Purchase Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 18  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := EinkZeile.FIND('+');
                               WHILE MehrZeilen AND (EinkZeile.Description = '') AND
                                     (EinkZeile."No." = '') AND (EinkZeile."Outstanding Quantity" = 0) AND
                                     (EinkZeile."Outstanding Amount" = 0) DO
                                 MehrZeilen := EinkZeile.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               EinkZeile.SETRANGE("Line No.",0,EinkZeile."Line No.");
                               //2014-11-28 ST Bestellbetrag stimmt jetzt auch wenn Positionen bereits geliefert wurden,
                               //wieder deaktiviert sonst keine Bemerkungen zu sehen
                               //EinkZeile.SETFILTER("Line No.",'%1..%2',0,EinkZeile."Line No.");
                               //EinkZeile.SETFILTER("Outstanding Quantity",'>%1',0);
                               SETRANGE(Number,1,EinkZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    EinkZeile.FIND('-')
                                  ELSE
                                    EinkZeile.NEXT;
                                  "Purchase Line" := EinkZeile;
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "Purchase Line"."VAT %";
                                  MWSTBetragZeile."VAT Base" := "Purchase Line"."Outstanding Amount";
                                  MWSTBetragZeile."Amount Including VAT" := "Purchase Line"."Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  //Quote Hersteller
                                  quote := '';
                                  // Zoll Warentarifnummer
                                  warennummer := '';
                                  IF ((EinkZeile.Type = EinkZeile.Type::Item) AND (EinkZeile."No." <> '')) THEN BEGIN
                                    artikel.GET("Purchase Line"."No.");
                                    IF ("Purchase Line"."No." = artikel."No.") AND (artikel."Tariff No." <> '') THEN BEGIN
                                      warennummer := artikel."Tariff No.";
                                    END;
                                    IF EinkZeile."Quotenr. Hersteller" <> '' THEN
                                      quote := 'Quote: ' + EinkZeile."Quotenr. Hersteller";
                                  END;
                                  IF "Purchase Line"."Outstanding Quantity" = 0 THEN
                                    TotalDruck := 101;
                                  //03.02.15 ST - Andruck von Quotefeldern fr Info an AudioCodes
                                  beschreibung2_neu := '';
                                  CASE "Purchase Line"."Manufacturer Code" OF
                                    '59', '85':
                                      BEGIN
                                        IF Quotedaten.GET("Purchase Line"."Quotenr.") THEN BEGIN
                                          beschreibung2_neu := 'Qte ' + Quotedaten."Quotenr. Hersteller" + ' ' + Quotedaten.Validationcode;
                                        END ELSE BEGIN
                                          artikel.GET("Purchase Line"."No.");
                                          IF STRPOS(LOWERCASE(artikel.Preisinfo),'schaeffler') <> 0 THEN
                                            beschreibung2_neu := 'Qte 1022661'
                                          ELSE
                                            beschreibung2_neu := '';
                                        END;
                                      END;
                                  END;

                                  //04.04.18 ST - Restbestellbetrag in EKW
                                  OutstandingAmount := "Purchase Line"."Outstanding Quantity" * "Purchase Line"."Direct Unit Cost";
                                END;

               OnPostDataItem=BEGIN
                                EinkZeile.DELETEALL;
                              END;
                               }

    { 19  ;4   ;Column  ;wahrung             ;
               IncludeCaption=No;
               SourceExpr=w„hrung }

    { 20  ;4   ;Column  ;EinkZeileAmount_EinkZeileInvDiscountAmount;
               IncludeCaption=No;
               SourceExpr=OutstandingAmount+EinkZeile."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Line"."Currency Code" }

    { 21  ;4   ;Column  ;PurchaseLineAmount_PurchaseLineInvDiscountAmount;
               IncludeCaption=No;
               SourceExpr=OutstandingAmount+"Purchase Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Line"."Currency Code" }

    { 22  ;4   ;Column  ;RequestedReceiptDate_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Requested Receipt Date" }

    { 23  ;4   ;Column  ;DirectUnitCost_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Direct Unit Cost";
               AutoFormatType=2;
               AutoFormatExpr="Purchase Line"."Currency Code" }

    { 24  ;4   ;Column  ;Quantity_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Outstanding Quantity" }

    { 25  ;4   ;Column  ;No_PurchaseLine     ;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."No." }

    { 26  ;4   ;Column  ;Description_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line".Description }

    { 27  ;4   ;Column  ;Artikelnr2_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Artikelnr. 2" }

    { 28  ;4   ;Column  ;LineNo_PurchaseLine ;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Line No." }

    { 29  ;4   ;Column  ;VendorItemNo_artikel;
               IncludeCaption=No;
               SourceExpr=artikel."Vendor Item No." }

    { 30  ;4   ;Column  ;PurchaseLineDescription2__beschreibung2_neu;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Description 2" + ' ' + beschreibung2_neu }

    { 31  ;4   ;Column  ;warennummer         ;
               IncludeCaption=No;
               SourceExpr=warennummer }

    { 32  ;4   ;Column  ;quote               ;
               IncludeCaption=No;
               SourceExpr=quote }

    { 33  ;4   ;Column  ;ProdOrderNo_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Prod. Order No." }

    { 34  ;4   ;Column  ;Amount_EinkZeile    ;
               IncludeCaption=No;
               SourceExpr=OutstandingAmount;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Line"."Currency Code" }

    { 35  ;4   ;Column  ;TotalText           ;
               IncludeCaption=No;
               SourceExpr=TotalText }

    { 36  ;4   ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemLinkReference=Purchase Line;
               DataItemLink=No.=FIELD(Sales Order No.) }

    { 37  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 38  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 39  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 40  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 41  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 42  ;4   ;Column  ;ship_to1            ;
               IncludeCaption=No;
               SourceExpr=ship_to[1] }

    { 43  ;4   ;Column  ;ship_to2            ;
               IncludeCaption=No;
               SourceExpr=ship_to[2] }

    { 44  ;4   ;Column  ;ship_to3            ;
               IncludeCaption=No;
               SourceExpr=ship_to[3] }

    { 45  ;4   ;Column  ;ship_to4            ;
               IncludeCaption=No;
               SourceExpr=ship_to[4] }

    { 46  ;4   ;Column  ;ship_to5            ;
               IncludeCaption=No;
               SourceExpr=ship_to[5] }

    { 47  ;4   ;Column  ;ship_to6            ;
               IncludeCaption=No;
               SourceExpr=ship_to[6] }

    { 48  ;4   ;Column  ;ship_to7            ;
               IncludeCaption=No;
               SourceExpr=ship_to[7] }

    { 49  ;4   ;Column  ;ship_to8            ;
               IncludeCaption=No;
               SourceExpr=ship_to[8] }

    { 50  ;4   ;Column  ;Description_ZlgBed  ;
               IncludeCaption=No;
               SourceExpr=ZlgBed.Description }

    { 51  ;4   ;Column  ;Description_LieferBed;
               IncludeCaption=No;
               SourceExpr=LieferBed.Description }

    { 52  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF "Purchase Header"."Buy-from Vendor No." = "Purchase Header"."Pay-to Vendor No." THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 53  ;3   ;DataItem;Total3              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF ("Purchase Header"."Sell-to Customer No." = '') AND (LieferAnAdr[1] = '') THEN
                                 CurrReport.BREAK;
                             END;
                              }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140001 : Record 98;
      Firmendaten@1140002 : Record 79;
      LieferBed@1140003 : Record 10;
      ZlgBed@1140004 : Record 3;
      VerkEinkPerson@1140005 : Record 13;
      MWSTBetragZeile@1140006 : TEMPORARY Record 290;
      EinkZeile@1140007 : TEMPORARY Record 39;
      artikel@1000000003 : Record 27;
      Quotedaten@1140031 : Record 50014;
      language@1000000004 : Record 8;
      EinkDruckZ„hler@1140008 : Codeunit 317;
      FormatAdr@1140009 : Codeunit 365;
      EinkBuchen@1140010 : Codeunit 90;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      KredAdr@1140011 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140012 : ARRAY [8] OF Text[50];
      FirmaAdr@1140013 : ARRAY [8] OF Text[50];
      EinkVonAdr@1140014 : ARRAY [8] OF Text[50];
      Eink„uferText@1140015 : Text[30];
      MWStNrText@1140016 : Text[30];
      ReferenzText@1140017 : Text[30];
      TotalText@1140018 : Text[50];
      TotalInklMWStText@1140019 : Text[50];
      quote@1000000002 : Text[50];
      MehrZeilen@1140020 : Boolean;
      AnzKopien@1140021 : Integer;
      AnzSchleifen@1140022 : Integer;
      KopieText@1140023 : Text[30];
      warennummer@1140024 : Text[30];
      TotalDruck@1140026 : Integer;
      w„hrung@1140027 : Code[10];
      ship_to@1140028 : ARRAY [8] OF Text[50];
      beschreibung2_neu@1140029 : Text[80];
      OutstandingAmount@1000000005 : Decimal;
      ReportForNav@5000 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body5@5010(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(EinkZeile.Type = EinkZeile.Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body6@5011(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(((EinkZeile.Type = EinkZeile.Type::Item) AND (EinkZeile."Outstanding Quantity" <> 0))
                     OR ((EinkZeile.Type = EinkZeile.Type::"Fixed Asset") AND (EinkZeile."Outstanding Quantity" <> 0)) );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body7@5012(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        IF artikel."Vendor Item No." = '' THEN ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body8@5013(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(((EinkZeile."Description 2" <> '') OR (beschreibung2_neu <> '')) AND (EinkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body9@5014(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((EinkZeile.Type = EinkZeile.Type::" ")AND (EinkZeile."Outstanding Quantity" = 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body10@5015(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((warennummer <> '') AND (EinkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body11@5016(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((quote <> '') AND (EinkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPostSectionRundungsRahmen_Body11@5017(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //quote := '';
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body12@5018(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Prod. Order No." <> '') AND (EinkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body13@5019(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0)AND(artikel."C of C"=TRUE)AND(artikel.Abzugstest = TRUE)
                               AND("Purchase Line".Type="Purchase Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body14@5020(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0)AND(artikel."C of C" = TRUE)AND(artikel.Abzugstest = FALSE)
                               AND("Purchase Line".Type = "Purchase Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body15@5021(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(FALSE);
      //  ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0) AND (artikel.Chargenrein = TRUE)
      //                           AND ("Purchase Line".Type="Purchase Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body16@5022(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(FALSE);
      //  ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0) AND (artikel."Spezielle Folie" = TRUE)
      //                         AND ("Purchase Line".Type="Purchase Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body17@5023(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0) AND ("Purchase Line".Type = "Purchase Line".Type::Item)
        AND (("Purchase Line"."No." = 'TG110-ESV03N6') OR ("Purchase Line"."No." = 'TD22-SV55H12')));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer20@5024(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(EinkZeile."Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer21@5025(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         //  ReportForNav.ShowOutput(TotalDruck = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body28@5027(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        //2014-12-03 ST wenn Lief. Adressen nicht gepflegt dann TOPAS Adresse andrucken
        IF (LieferAnAdr[1] <> '') AND (LieferAnAdr[3] = '') THEN BEGIN
          ship_to[1] := CompanyInfo[1];
          ship_to[2] := CompanyInfo[2];
          ship_to[3] := CompanyInfo[4] + ' ' + CompanyInfo[5];
          ship_to[4] := 'Germany';
          ship_to[5] := '';
          ship_to[6] := '';
          ship_to[7] := '';
          ship_to[8] := '';
        END ELSE BEGIN
          ship_to[1] := LieferAnAdr[1];
          ship_to[2] := LieferAnAdr[2];
          ship_to[3] := LieferAnAdr[3];
          ship_to[4] := LieferAnAdr[4];
          ship_to[5] := LieferAnAdr[5];
          ship_to[6] := LieferAnAdr[6];
          ship_to[7] := LieferAnAdr[7];
          ship_to[8] := LieferAnAdr[8];
        END
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body29@5028(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput("Purchase Header"."Shipment Method Code" <> 'LEER');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RundungsRahmen': CASE SectionId OF
          'Body5': OnPreSectionRundungsRahmen_Body5(RundungsRahmen);
          'Body6': OnPreSectionRundungsRahmen_Body6(RundungsRahmen);
          'Body7': OnPreSectionRundungsRahmen_Body7(RundungsRahmen);
          'Body8': OnPreSectionRundungsRahmen_Body8(RundungsRahmen);
          'Body9': OnPreSectionRundungsRahmen_Body9(RundungsRahmen);
          'Body10': OnPreSectionRundungsRahmen_Body10(RundungsRahmen);
          'Body11': OnPreSectionRundungsRahmen_Body11(RundungsRahmen);
          'Body12': OnPreSectionRundungsRahmen_Body12(RundungsRahmen);
          'Body13': OnPreSectionRundungsRahmen_Body13(RundungsRahmen);
          'Body14': OnPreSectionRundungsRahmen_Body14(RundungsRahmen);
          'Body15': OnPreSectionRundungsRahmen_Body15(RundungsRahmen);
          'Body16': OnPreSectionRundungsRahmen_Body16(RundungsRahmen);
          'Body17': OnPreSectionRundungsRahmen_Body17(RundungsRahmen);
          'Footer20': OnPreSectionRundungsRahmen_Footer20(RundungsRahmen);
          'Footer21': OnPreSectionRundungsRahmen_Footer21(RundungsRahmen);
        END;
        'Total': CASE SectionId OF
          'Body28': OnPreSectionTotal_Body28(Total);
          'Body29': OnPreSectionTotal_Body29(Total);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RundungsRahmen': CASE SectionId OF
          'Body11': OnPostSectionRundungsRahmen_Body11(RundungsRahmen);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnClientOperation@5014(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5015();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,OutstandingAmount);
                ReportForNav.AddTotal(DataItemId,1,EinkZeile.Amount);
                ReportForNav.AddTotal(DataItemId,2,EinkZeile."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,3,EinkZeile."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 OutstandingAmount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 EinkZeile.Amount := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 EinkZeile."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
                 EinkZeile."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,3,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      Žnderung am Standard 2.01 Lederer Systemhaus: Ulrich Gepp
      Erstellt am : 23.06.99
      -----------------------------------------------------------------------------------------
      Adressfeld auf Fensterkurvert-Norm gesetzt.
      Zeilennummernformatierung:
      FORMAT("Purchase Line"."Line No."/10000,0,0)
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

