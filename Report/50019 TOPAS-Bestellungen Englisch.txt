OBJECT Report 50019 TOPAS-Bestellungen Englisch
{
  OBJECT-PROPERTIES
  {
    Date=28.03.18;
    Time=11:01:20;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table38;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order));
               ReqFilterHeadingML=DEU=Einkaufsbestellung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                               Firmendaten.CALCFIELDS("ISO Logo",Picture);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);

                                  IF "Purchaser Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Eink„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Purchaser Code");
                                    Eink„uferText := 'Eink„ufer'
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    w„hrung := 'EURO';
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    w„hrung := "Purchase Header"."Currency Code";
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.PurchHeaderBuyFrom(EinkVonAdr,"Purchase Header");
                                  IF ("Purchase Header"."Buy-from Vendor No." <> "Purchase Header"."Pay-to Vendor No.") THEN
                                    FormatAdr.PurchHeaderPayTo(KredAdr,"Purchase Header");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.PurchHeaderShipTo(LieferAnAdr,"Purchase Header");
                                    TotalDruck :=0;
                                END;

               ReqFilterFields=No.,Buy-from Vendor No.,No. Printed }

    { 2   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=BEGIN
                                  CLEAR(EinkZeile);
                                  CLEAR(EinkBuchen);
                                  EinkBuchen.GetPurchLines("Purchase Header",EinkZeile,0);
                                  IF Number > 1 THEN
                                    KopieText := 'KOPIE';
                                  ReportForNav.PageNo := 1;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  EinkDruckZ„hler.RUN("Purchase Header");
                              END;
                               }

    { 3   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 4   ;3   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;Picture_Firmendaten;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 1000000003;3;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000015;3;Column;CompanyStreet      ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2] }

    { 1000000004;3;Column;CompanyPostCode    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[4] }

    { 1000000014;3;Column;CompanyCity        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 5   ;3   ;Column  ;EinkVonAdr8         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[8] }

    { 6   ;3   ;Column  ;EinkVonAdr7         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[7] }

    { 7   ;3   ;Column  ;EinkVonAdr6         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[6] }

    { 8   ;3   ;Column  ;EinkVonAdr5         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[5] }

    { 9   ;3   ;Column  ;EinkVonAdr4         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[4] }

    { 10  ;3   ;Column  ;EinkVonAdr3         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[3] }

    { 11  ;3   ;Column  ;EinkVonAdr2         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[2] }

    { 12  ;3   ;Column  ;EinkVonAdr1         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[1] }

    { 13  ;3   ;Column  ;Buy_fromVendorNo_PurchaseHeader;
               IncludeCaption=No;
               SourceExpr="Purchase Header"."Buy-from Vendor No." }

    { 14  ;3   ;Column  ;No_PurchaseHeader   ;
               IncludeCaption=No;
               SourceExpr="Purchase Header"."No." }

    { 15  ;3   ;Column  ;DocumentDate_PurchaseHeader;
               IncludeCaption=No;
               SourceExpr="Purchase Header"."Document Date" }

    { 16  ;3   ;Column  ;STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo)) }

    { 17  ;3   ;DataItem;                    ;
               DataItemTable=Table39;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               DataItemLinkReference=Purchase Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 18  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := EinkZeile.FIND('+');
                               WHILE MehrZeilen AND (EinkZeile.Description = '') AND
                                     (EinkZeile."No." = '') AND (EinkZeile."Outstanding Quantity" = 0) AND
                                     (EinkZeile."Outstanding Amount" = 0) DO
                                 MehrZeilen := EinkZeile.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               EinkZeile.SETRANGE("Line No.",0,EinkZeile."Line No.");
                               //2014-11-28 ST Bestellbetrag stimmt jetzt auch wenn Positionen bereits geliefert wurden,
                               //wieder deaktiviert sonst keine Bemerkungen zu sehen
                               //EinkZeile.SETFILTER("Line No.",'%1..%2',0,EinkZeile."Line No.");
                               //EinkZeile.SETFILTER("Outstanding Quantity",'>%1',0);
                               SETRANGE(Number,1,EinkZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    EinkZeile.FIND('-')
                                  ELSE
                                    EinkZeile.NEXT;
                                  "Purchase Line" := EinkZeile;
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "Purchase Line"."VAT %";
                                  MWSTBetragZeile."VAT Base" := "Purchase Line"."Outstanding Amount";
                                  MWSTBetragZeile."Amount Including VAT" := "Purchase Line"."Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  //Quote Hersteller
                                  quote := '';
                                  // TOPAS Zoll Warentarifnummer
                                  warennummer:='';
                                  IF ((EinkZeile.Type = EinkZeile.Type::Item) AND (EinkZeile."No." <> '')) THEN BEGIN
                                    artikel.GET("Purchase Line"."No.");
                                    IF ("Purchase Line"."No." = artikel."No.") AND (artikel."Tariff No." <> '') THEN BEGIN
                                      warennummer := artikel."Tariff No.";
                                    END;
                                    IF EinkZeile."Quotenr. Hersteller" <> '' THEN
                                      quote := 'Quote: ' + EinkZeile."Quotenr. Hersteller";
                                  END;
                                  // TOPAS
                                  IF "Purchase Line"."Outstanding Quantity" = 0 THEN
                                    TotalDruck := 101;
                                  //2015-02-03 ST Andruck von Quotefeldern fr Info an AudioCodes
                                  beschreibung2_neu := '';
                                  CASE "Purchase Line"."Manufacturer Code" OF
                                    '59', '85':
                                      BEGIN
                                        IF Quotedaten.GET("Purchase Line"."Quotenr.") THEN BEGIN
                                          beschreibung2_neu := 'Qte ' + Quotedaten."Quotenr. Hersteller" + ' ' + Quotedaten.Validationcode;
                                        END ELSE BEGIN
                                          artikel.GET("Purchase Line"."No.");
                                          IF STRPOS(LOWERCASE(artikel.Preisinfo),'schaeffler') <> 0 THEN
                                            beschreibung2_neu := 'Qte 1022661'
                                          ELSE
                                            beschreibung2_neu := '';
                                        END;
                                      END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                EinkZeile.DELETEALL;
                              END;
                               }

    { 19  ;4   ;Column  ;wahrung             ;
               IncludeCaption=No;
               SourceExpr=w„hrung }

    { 20  ;4   ;Column  ;EinkZeileAmount_EinkZeileInvDiscountAmount;
               SourceExpr=EinkZeile."Outstanding Amt. Ex. VAT (LCY)"+EinkZeile."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Line"."Currency Code" }

    { 21  ;4   ;Column  ;PurchaseLineAmount_PurchaseLineInvDiscountAmount;
               SourceExpr=EinkZeile."Outstanding Amt. Ex. VAT (LCY)"+"Purchase Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Line"."Currency Code" }

    { 22  ;4   ;Column  ;RequestedReceiptDate_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Requested Receipt Date" }

    { 23  ;4   ;Column  ;DirectUnitCost_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Direct Unit Cost";
               AutoFormatType=2;
               AutoFormatExpr="Purchase Line"."Currency Code" }

    { 24  ;4   ;Column  ;Quantity_PurchaseLine;
               SourceExpr="Purchase Line"."Outstanding Quantity" }

    { 25  ;4   ;Column  ;No_PurchaseLine     ;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."No." }

    { 26  ;4   ;Column  ;Description_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line".Description }

    { 27  ;4   ;Column  ;Artikelnr2_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Artikelnr. 2" }

    { 28  ;4   ;Column  ;LineNo_PurchaseLine ;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Line No." }

    { 29  ;4   ;Column  ;VendorItemNo_artikel;
               IncludeCaption=No;
               SourceExpr=artikel."Vendor Item No." }

    { 30  ;4   ;Column  ;PurchaseLineDescription2__beschreibung2_neu;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Description 2" + ' ' + beschreibung2_neu }

    { 31  ;4   ;Column  ;warennummer         ;
               IncludeCaption=No;
               SourceExpr=warennummer }

    { 32  ;4   ;Column  ;quote               ;
               IncludeCaption=No;
               SourceExpr=quote }

    { 33  ;4   ;Column  ;ProdOrderNo_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Prod. Order No." }

    { 34  ;4   ;Column  ;Amount_EinkZeile    ;
               SourceExpr=EinkZeile."Outstanding Amt. Ex. VAT (LCY)";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Line"."Currency Code" }

    { 35  ;4   ;Column  ;TotalText           ;
               IncludeCaption=No;
               SourceExpr=TotalText }

    { 36  ;4   ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemLinkReference=Purchase Line;
               DataItemLink=No.=FIELD(Sales Order No.) }

    { 37  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 38  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 39  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 40  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 41  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 42  ;4   ;Column  ;ship_to1            ;
               IncludeCaption=No;
               SourceExpr=ship_to[1] }

    { 43  ;4   ;Column  ;ship_to2            ;
               IncludeCaption=No;
               SourceExpr=ship_to[2] }

    { 44  ;4   ;Column  ;ship_to3            ;
               IncludeCaption=No;
               SourceExpr=ship_to[3] }

    { 45  ;4   ;Column  ;ship_to4            ;
               IncludeCaption=No;
               SourceExpr=ship_to[4] }

    { 46  ;4   ;Column  ;ship_to5            ;
               IncludeCaption=No;
               SourceExpr=ship_to[5] }

    { 47  ;4   ;Column  ;ship_to6            ;
               IncludeCaption=No;
               SourceExpr=ship_to[6] }

    { 48  ;4   ;Column  ;ship_to7            ;
               IncludeCaption=No;
               SourceExpr=ship_to[7] }

    { 49  ;4   ;Column  ;ship_to8            ;
               IncludeCaption=No;
               SourceExpr=ship_to[8] }

    { 50  ;4   ;Column  ;Description_ZlgBed  ;
               IncludeCaption=No;
               SourceExpr=ZlgBed.Description }

    { 51  ;4   ;Column  ;Description_LieferBed;
               IncludeCaption=No;
               SourceExpr=LieferBed.Description }

    { 52  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF "Purchase Header"."Buy-from Vendor No." = "Purchase Header"."Pay-to Vendor No." THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 53  ;3   ;DataItem;Total3              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF ("Purchase Header"."Sell-to Customer No." = '') AND (LieferAnAdr[1] = '') THEN
                                 CurrReport.BREAK;
                             END;
                              }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140001 : Record 98;
      Firmendaten@1140002 : Record 79;
      LieferBed@1140003 : Record 10;
      ZlgBed@1140004 : Record 3;
      VerkEinkPerson@1140005 : Record 13;
      MWSTBetragZeile@1140006 : TEMPORARY Record 290;
      EinkZeile@1140007 : TEMPORARY Record 39;
      artikel@1000000003 : Record 27;
      Quotedaten@1140031 : Record 50014;
      language@1000000004 : Record 8;
      EinkDruckZ„hler@1140008 : Codeunit 317;
      FormatAdr@1140009 : Codeunit 365;
      EinkBuchen@1140010 : Codeunit 90;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      KredAdr@1140011 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140012 : ARRAY [8] OF Text[50];
      FirmaAdr@1140013 : ARRAY [8] OF Text[50];
      EinkVonAdr@1140014 : ARRAY [8] OF Text[50];
      Eink„uferText@1140015 : Text[30];
      MWStNrText@1140016 : Text[30];
      ReferenzText@1140017 : Text[30];
      TotalText@1140018 : Text[50];
      TotalInklMWStText@1140019 : Text[50];
      quote@1000000002 : Text[50];
      MehrZeilen@1140020 : Boolean;
      AnzKopien@1140021 : Integer;
      AnzSchleifen@1140022 : Integer;
      KopieText@1140023 : Text[30];
      warennummer@1140024 : Text[30];
      TotalDruck@1140026 : Integer;
      w„hrung@1140027 : Code[10];
      ship_to@1140028 : ARRAY [8] OF Text[50];
      beschreibung2_neu@1140029 : Text[80];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body5@5010(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(EinkZeile.Type = EinkZeile.Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body6@5011(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(((EinkZeile.Type = EinkZeile.Type::Item) AND (EinkZeile."Outstanding Quantity" <> 0))
                     OR ((EinkZeile.Type = EinkZeile.Type::"Fixed Asset") AND (EinkZeile."Outstanding Quantity" <> 0)));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body7@5012(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        IF artikel."Vendor Item No." = '' THEN ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body8@5013(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(((EinkZeile."Description 2" <> '') OR (beschreibung2_neu <> '')) AND (EinkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body9@5014(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((EinkZeile.Type = EinkZeile.Type::" ")AND (EinkZeile."Outstanding Quantity" = 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body10@5015(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((warennummer <> '') AND (EinkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body11@5016(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((quote <> '') AND (EinkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPostSectionRundungsRahmen_Body11@5017(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //quote := '';
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body12@5018(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Prod. Order No." <> '') AND (EinkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body13@5019(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0) AND (artikel."C of C"=TRUE)AND(artikel.Abzugstest = TRUE)
                               AND ("Purchase Line".Type="Purchase Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body14@5020(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0) AND (artikel."C of C" = TRUE)AND(artikel.Abzugstest = FALSE)
                               AND ("Purchase Line".Type = "Purchase Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body15@5021(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(FALSE);
      //  ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0) AND (artikel.Chargenrein = TRUE)
      //                           AND ("Purchase Line".Type="Purchase Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body16@5022(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(FALSE);
      //  ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0) AND (artikel."Spezielle Folie" = TRUE)
      //                         AND ("Purchase Line".Type="Purchase Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body17@5023(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0) AND ("Purchase Line".Type = "Purchase Line".Type::Item)
        AND (("Purchase Line"."No." = 'TG110-ESV03N6') OR ("Purchase Line"."No." = 'TD22-SV55H12')));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer20@5024(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(EinkZeile."Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer21@5025(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         //  ReportForNav.ShowOutput(TotalDruck = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body28@5027(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        //2014-12-03 ST wenn Lief. Adressen nicht gepflegt dann TOPAS Adresse andrucken
        IF (LieferAnAdr[1] <> '') AND (LieferAnAdr[3] = '') THEN BEGIN
          ship_to[1] := CompanyInfo[1];
          ship_to[2] := CompanyInfo[2];
          ship_to[3] := CompanyInfo[4] + ' ' + CompanyInfo[5];
          ship_to[4] := 'Germany';
          ship_to[5] := '';
          ship_to[6] := '';
          ship_to[7] := '';
          ship_to[8] := '';
        END ELSE BEGIN
          ship_to[1] := LieferAnAdr[1];
          ship_to[2] := LieferAnAdr[2];
          ship_to[3] := LieferAnAdr[3];
          ship_to[4] := LieferAnAdr[4];
          ship_to[5] := LieferAnAdr[5];
          ship_to[6] := LieferAnAdr[6];
          ship_to[7] := LieferAnAdr[7];
          ship_to[8] := LieferAnAdr[8];
        END
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body29@5028(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput("Purchase Header"."Shipment Method Code" <> 'LEER');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RundungsRahmen': CASE SectionId OF
          'Body5': OnPreSectionRundungsRahmen_Body5(RundungsRahmen);
          'Body6': OnPreSectionRundungsRahmen_Body6(RundungsRahmen);
          'Body7': OnPreSectionRundungsRahmen_Body7(RundungsRahmen);
          'Body8': OnPreSectionRundungsRahmen_Body8(RundungsRahmen);
          'Body9': OnPreSectionRundungsRahmen_Body9(RundungsRahmen);
          'Body10': OnPreSectionRundungsRahmen_Body10(RundungsRahmen);
          'Body11': OnPreSectionRundungsRahmen_Body11(RundungsRahmen);
          'Body12': OnPreSectionRundungsRahmen_Body12(RundungsRahmen);
          'Body13': OnPreSectionRundungsRahmen_Body13(RundungsRahmen);
          'Body14': OnPreSectionRundungsRahmen_Body14(RundungsRahmen);
          'Body15': OnPreSectionRundungsRahmen_Body15(RundungsRahmen);
          'Body16': OnPreSectionRundungsRahmen_Body16(RundungsRahmen);
          'Body17': OnPreSectionRundungsRahmen_Body17(RundungsRahmen);
          'Footer20': OnPreSectionRundungsRahmen_Footer20(RundungsRahmen);
          'Footer21': OnPreSectionRundungsRahmen_Footer21(RundungsRahmen);
        END;
        'Total': CASE SectionId OF
          'Body28': OnPreSectionTotal_Body28(Total);
          'Body29': OnPreSectionTotal_Body29(Total);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RundungsRahmen': CASE SectionId OF
          'Body11': OnPostSectionRundungsRahmen_Body11(RundungsRahmen);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // Do not change (Autogenerated by Reports ForNAV) - Instead change the Create Totals, Total Fields or Group Total Fields properties on the Data item in the ForNAV designer
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,EinkZeile."Outstanding Amt. Ex. VAT (LCY)");
                ReportForNav.AddTotal(DataItemId,1,EinkZeile.Amount);
                ReportForNav.AddTotal(DataItemId,2,EinkZeile."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,3,EinkZeile."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 EinkZeile."Outstanding Amt. Ex. VAT (LCY)" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 EinkZeile.Amount := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 EinkZeile."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
                 EinkZeile."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,3,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      Žnderung am Standard 2.01 Lederer Systemhaus: Ulrich Gepp
      Erstellt am : 23.06.99
      -----------------------------------------------------------------------------------------
      Adressfeld auf Fensterkurvert-Norm gesetzt.
      Zeilennummernformatierung:
      FORMAT("Purchase Line"."Line No."/10000,0,0)
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>595449c1-4bee-4fa7-afec-345d2e995e7c</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>db432a22-b401-4556-9874-c99c7aa37288</rd:ReportID>
</Report>
    END_OF_RDLDATA
  }
}

