OBJECT Report 50019 TOPAS-Bestellungen Englisch
{
  OBJECT-PROPERTIES
  {
    Date=08.11.21;
    Time=16:52:30;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table38;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order));
               ReqFilterHeadingML=DEU=Einkaufsbestellung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                               Firmendaten.CALCFIELDS("ISO Logo",Picture);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);

                                  IF "Purchaser Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Eink„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Purchaser Code");
                                    Eink„uferText := 'Eink„ufer'
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    w„hrung := 'EURO';
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    w„hrung := "Purchase Header"."Currency Code";
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.PurchHeaderBuyFrom(EinkVonAdr,"Purchase Header");
                                  IF ("Purchase Header"."Buy-from Vendor No." <> "Purchase Header"."Pay-to Vendor No.") THEN
                                    FormatAdr.PurchHeaderPayTo(KredAdr,"Purchase Header");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.PurchHeaderShipTo(LieferAnAdr,"Purchase Header");
                                    TotalDruck := 0;
                                END;

               ReqFilterFields=No.,Buy-from Vendor No.,No. Printed }

    { 2   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=BEGIN
                                  CLEAR(EinkZeile);
                                  CLEAR(EinkBuchen);
                                  EinkBuchen.GetPurchLines("Purchase Header",EinkZeile,0);
                                  IF Number > 1 THEN
                                    KopieText := 'KOPIE';
                                  ReportForNav.PageNo := 1;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  EinkDruckZ„hler.RUN("Purchase Header");
                              END;
                               }

    { 3   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 4   ;3   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;Picture_Firmendaten;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 1000000003;3;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000015;3;Column;CompanyStreet      ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2] }

    { 1000000004;3;Column;CompanyPostCode    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[4] }

    { 1000000014;3;Column;CompanyCity        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 5   ;3   ;Column  ;EinkVonAdr8         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[8] }

    { 6   ;3   ;Column  ;EinkVonAdr7         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[7] }

    { 7   ;3   ;Column  ;EinkVonAdr6         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[6] }

    { 8   ;3   ;Column  ;EinkVonAdr5         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[5] }

    { 9   ;3   ;Column  ;EinkVonAdr4         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[4] }

    { 10  ;3   ;Column  ;EinkVonAdr3         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[3] }

    { 11  ;3   ;Column  ;EinkVonAdr2         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[2] }

    { 12  ;3   ;Column  ;EinkVonAdr1         ;
               IncludeCaption=No;
               SourceExpr=EinkVonAdr[1] }

    { 13  ;3   ;Column  ;Buy_fromVendorNo_PurchaseHeader;
               IncludeCaption=No;
               SourceExpr="Purchase Header"."Buy-from Vendor No." }

    { 14  ;3   ;Column  ;No_PurchaseHeader   ;
               IncludeCaption=No;
               SourceExpr="Purchase Header"."No." }

    { 15  ;3   ;Column  ;DocumentDate_PurchaseHeader;
               SourceExpr=FORMAT("Purchase Header"."Document Date",0,'<Day,2>-<Month Text,3>-<Year,2>') }

    { 16  ;3   ;Column  ;STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo)) }

    { 17  ;3   ;DataItem;                    ;
               DataItemTable=Table39;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               DataItemLinkReference=Purchase Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 18  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := EinkZeile.FIND('+');
                               WHILE MehrZeilen AND (EinkZeile.Description = '') AND
                                     (EinkZeile."No." = '') AND (EinkZeile."Outstanding Quantity" = 0) AND
                                     (EinkZeile."Outstanding Amount" = 0) DO
                                 MehrZeilen := EinkZeile.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               EinkZeile.SETRANGE("Line No.",0,EinkZeile."Line No.");
                               //2014-11-28 ST Bestellbetrag stimmt jetzt auch wenn Positionen bereits geliefert wurden,
                               //wieder deaktiviert sonst keine Bemerkungen zu sehen
                               //EinkZeile.SETFILTER("Line No.",'%1..%2',0,EinkZeile."Line No.");
                               //EinkZeile.SETFILTER("Outstanding Quantity",'>%1',0);
                               SETRANGE(Number,1,EinkZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    EinkZeile.FIND('-')
                                  ELSE
                                    EinkZeile.NEXT;
                                  "Purchase Line" := EinkZeile;
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "Purchase Line"."VAT %";
                                  MWSTBetragZeile."VAT Base" := "Purchase Line"."Outstanding Amount";
                                  MWSTBetragZeile."Amount Including VAT" := "Purchase Line"."Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  //Quote Hersteller
                                  quote := '';
                                  // Zoll Warentarifnummer
                                  warennummer := '';
                                  IF ((EinkZeile.Type = EinkZeile.Type::Item) AND (EinkZeile."No." <> '')) THEN BEGIN
                                    artikel.GET("Purchase Line"."No.");
                                    IF ("Purchase Line"."No." = artikel."No.") AND (artikel."Tariff No." <> '') THEN BEGIN
                                      warennummer := artikel."Tariff No.";
                                    END;
                                    IF EinkZeile."Quotenr. Hersteller" <> '' THEN
                                      quote := 'Quote: ' + EinkZeile."Quotenr. Hersteller";
                                  END;
                                  IF "Purchase Line"."Outstanding Quantity" = 0 THEN
                                    TotalDruck := 101;
                                  //03.02.15 ST - Andruck von Quotefeldern fr Info an AudioCodes
                                  beschreibung2_neu := '';
                                  CASE "Purchase Line"."Manufacturer Code" OF
                                    '59', '85':
                                      BEGIN
                                        IF Quotedaten.GET("Purchase Line"."Quotenr.") THEN BEGIN
                                          beschreibung2_neu := 'Qte ' + Quotedaten."Quotenr. Hersteller" + ' ' + Quotedaten.Validationcode;
                                        END ELSE BEGIN
                                          artikel.GET("Purchase Line"."No.");
                                          IF STRPOS(LOWERCASE(artikel.Preisinfo),'schaeffler') <> 0 THEN
                                            beschreibung2_neu := 'Qte 1022661'
                                          ELSE
                                            beschreibung2_neu := '';
                                        END;
                                      END;
                                  END;

                                  //04.04.18 ST - Restbestellbetrag in EKW
                                  OutstandingAmount := "Purchase Line"."Outstanding Quantity" * "Purchase Line"."Direct Unit Cost";
                                END;

               OnPostDataItem=BEGIN
                                EinkZeile.DELETEALL;
                              END;
                               }

    { 19  ;4   ;Column  ;wahrung             ;
               IncludeCaption=No;
               SourceExpr=w„hrung }

    { 20  ;4   ;Column  ;EinkZeileAmount_EinkZeileInvDiscountAmount;
               IncludeCaption=No;
               SourceExpr=OutstandingAmount+EinkZeile."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Line"."Currency Code" }

    { 21  ;4   ;Column  ;PurchaseLineAmount_PurchaseLineInvDiscountAmount;
               IncludeCaption=No;
               SourceExpr=OutstandingAmount+"Purchase Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Line"."Currency Code" }

    { 22  ;4   ;Column  ;RequestedReceiptDate_PurchaseLine;
               SourceExpr=FORMAT("Purchase Line"."Requested Receipt Date",0,'<Day,2>-<Month Text,3>-<Year,2>') }

    { 23  ;4   ;Column  ;DirectUnitCost_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Direct Unit Cost";
               AutoFormatType=2;
               AutoFormatExpr="Purchase Line"."Currency Code" }

    { 24  ;4   ;Column  ;Quantity_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Outstanding Quantity" }

    { 26  ;4   ;Column  ;Description_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line".Description }

    { 27  ;4   ;Column  ;Artikelnr2_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Artikelnr. 2" }

    { 28  ;4   ;Column  ;LineNo_PurchaseLine ;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Line No." }

    { 29  ;4   ;Column  ;VendorItemNo_artikel;
               IncludeCaption=No;
               SourceExpr=artikel."Vendor Item No." }

    { 30  ;4   ;Column  ;PurchaseLineDescription2__beschreibung2_neu;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Description 2" + ' ' + beschreibung2_neu }

    { 31  ;4   ;Column  ;warennummer         ;
               IncludeCaption=No;
               SourceExpr=warennummer }

    { 32  ;4   ;Column  ;quote               ;
               IncludeCaption=No;
               SourceExpr=quote }

    { 33  ;4   ;Column  ;ProdOrderNo_PurchaseLine;
               IncludeCaption=No;
               SourceExpr="Purchase Line"."Prod. Order No." }

    { 34  ;4   ;Column  ;Amount_EinkZeile    ;
               IncludeCaption=No;
               SourceExpr=OutstandingAmount;
               AutoFormatType=1;
               AutoFormatExpr="Purchase Line"."Currency Code" }

    { 35  ;4   ;Column  ;TotalText           ;
               IncludeCaption=No;
               SourceExpr=TotalText }

    { 36  ;4   ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemLinkReference=Purchase Line;
               DataItemLink=No.=FIELD(Sales Order No.) }

    { 37  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 38  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 39  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Purchase Header"."Currency Code" }

    { 40  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 41  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 42  ;4   ;Column  ;ship_to1            ;
               IncludeCaption=No;
               SourceExpr=ship_to[1] }

    { 43  ;4   ;Column  ;ship_to2            ;
               IncludeCaption=No;
               SourceExpr=ship_to[2] }

    { 44  ;4   ;Column  ;ship_to3            ;
               IncludeCaption=No;
               SourceExpr=ship_to[3] }

    { 45  ;4   ;Column  ;ship_to4            ;
               IncludeCaption=No;
               SourceExpr=ship_to[4] }

    { 46  ;4   ;Column  ;ship_to5            ;
               IncludeCaption=No;
               SourceExpr=ship_to[5] }

    { 47  ;4   ;Column  ;ship_to6            ;
               IncludeCaption=No;
               SourceExpr=ship_to[6] }

    { 48  ;4   ;Column  ;ship_to7            ;
               IncludeCaption=No;
               SourceExpr=ship_to[7] }

    { 49  ;4   ;Column  ;ship_to8            ;
               IncludeCaption=No;
               SourceExpr=ship_to[8] }

    { 50  ;4   ;Column  ;Description_ZlgBed  ;
               IncludeCaption=No;
               SourceExpr=ZlgBed.Description }

    { 51  ;4   ;Column  ;Description_LieferBed;
               IncludeCaption=No;
               SourceExpr=LieferBed.Description }

    { 52  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF "Purchase Header"."Buy-from Vendor No." = "Purchase Header"."Pay-to Vendor No." THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 53  ;3   ;DataItem;Total3              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF ("Purchase Header"."Sell-to Customer No." = '') AND (LieferAnAdr[1] = '') THEN
                                 CurrReport.BREAK;
                             END;
                              }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140001 : Record 98;
      Firmendaten@1140002 : Record 79;
      LieferBed@1140003 : Record 10;
      ZlgBed@1140004 : Record 3;
      VerkEinkPerson@1140005 : Record 13;
      MWSTBetragZeile@1140006 : TEMPORARY Record 290;
      EinkZeile@1140007 : TEMPORARY Record 39;
      artikel@1000000003 : Record 27;
      Quotedaten@1140031 : Record 50014;
      language@1000000004 : Record 8;
      EinkDruckZ„hler@1140008 : Codeunit 317;
      FormatAdr@1140009 : Codeunit 365;
      EinkBuchen@1140010 : Codeunit 90;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      KredAdr@1140011 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140012 : ARRAY [8] OF Text[50];
      FirmaAdr@1140013 : ARRAY [8] OF Text[50];
      EinkVonAdr@1140014 : ARRAY [8] OF Text[50];
      Eink„uferText@1140015 : Text[30];
      MWStNrText@1140016 : Text[30];
      ReferenzText@1140017 : Text[30];
      TotalText@1140018 : Text[50];
      TotalInklMWStText@1140019 : Text[50];
      quote@1000000002 : Text[50];
      MehrZeilen@1140020 : Boolean;
      AnzKopien@1140021 : Integer;
      AnzSchleifen@1140022 : Integer;
      KopieText@1140023 : Text[30];
      warennummer@1140024 : Text[30];
      TotalDruck@1140026 : Integer;
      w„hrung@1140027 : Code[10];
      ship_to@1140028 : ARRAY [8] OF Text[50];
      beschreibung2_neu@1140029 : Text[80];
      OutstandingAmount@1000000005 : Decimal;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body5@5010(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(EinkZeile.Type = EinkZeile.Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body6@5011(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(((EinkZeile.Type = EinkZeile.Type::Item) AND (EinkZeile."Outstanding Quantity" <> 0))
                             OR ((EinkZeile.Type = EinkZeile.Type::"Fixed Asset") AND (EinkZeile."Outstanding Quantity" <> 0)));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body7@5012(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        IF artikel."Vendor Item No." = '' THEN ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body8@5013(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(((EinkZeile."Description 2" <> '') OR (beschreibung2_neu <> '')) AND (EinkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body9@5014(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((EinkZeile.Type = EinkZeile.Type::" ")AND (EinkZeile."Outstanding Quantity" = 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body10@5015(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((warennummer <> '') AND (EinkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body11@5016(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((quote <> '') AND (EinkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPostSectionRundungsRahmen_Body11@5017(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //quote := '';
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body12@5018(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Prod. Order No." <> '') AND (EinkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body13@5019(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0)AND(artikel."C of C" = TRUE) AND (artikel.Abzugstest = TRUE)
                            AND ("Purchase Line".Type = "Purchase Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body14@5020(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0)AND(artikel."C of C" = TRUE) AND (artikel.Abzugstest = FALSE)
                            AND ("Purchase Line".Type = "Purchase Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body15@5021(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(FALSE);
      //  ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0) AND (artikel.Chargenrein = TRUE)
      //                      AND ("Purchase Line".Type = "Purchase Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body16@5022(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(FALSE);
      //  ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0) AND (artikel."Spezielle Folie" = TRUE)
      //                      AND ("Purchase Line".Type = "Purchase Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body17@5023(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0) AND ("Purchase Line".Type = "Purchase Line".Type::Item)
                           AND (("Purchase Line"."No." = 'TG110-ESV03N6') OR ("Purchase Line"."No." = 'TD22-SV55H12')));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body18@1000000002(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Purchase Line"."Outstanding Quantity" <> 0) AND ("Purchase Line".Type = "Purchase Line".Type::Item)
                           AND (("Purchase Line"."No." = 'TGM-S50NTLF-TR')  OR ("Purchase Line"."No." = 'TGM-S40NTLF-TR')
                             OR ("Purchase Line"."No." = 'TGRSP-315V6LFTR') OR ("Purchase Line"."No." = 'TGM-HS50NALF-TR')
                             OR ("Purchase Line"."No." = 'TGM-HS40NALF-TR')));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer20@5024(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(EinkZeile."Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer21@5025(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         //  ReportForNav.ShowOutput(TotalDruck = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body28@5027(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        //2014-12-03 ST wenn Lief. Adressen nicht gepflegt dann TOPAS Adresse andrucken
        IF (LieferAnAdr[1] <> '') AND (LieferAnAdr[3] = '') THEN BEGIN
          ship_to[1] := CompanyInfo[1];
          ship_to[2] := CompanyInfo[2];
          ship_to[3] := CompanyInfo[4] + ' ' + CompanyInfo[5];
          ship_to[4] := 'Germany';
          ship_to[5] := '';
          ship_to[6] := '';
          ship_to[7] := '';
          ship_to[8] := '';
        END ELSE BEGIN
          ship_to[1] := LieferAnAdr[1];
          ship_to[2] := LieferAnAdr[2];
          ship_to[3] := LieferAnAdr[3];
          ship_to[4] := LieferAnAdr[4];
          ship_to[5] := LieferAnAdr[5];
          ship_to[6] := LieferAnAdr[6];
          ship_to[7] := LieferAnAdr[7];
          ship_to[8] := LieferAnAdr[8];
        END
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body29@5028(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput("Purchase Header"."Shipment Method Code" <> 'LEER');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RundungsRahmen': CASE SectionId OF
          'Body5': OnPreSectionRundungsRahmen_Body5(RundungsRahmen);
          'Body6': OnPreSectionRundungsRahmen_Body6(RundungsRahmen);
          'Body7': OnPreSectionRundungsRahmen_Body7(RundungsRahmen);
          'Body8': OnPreSectionRundungsRahmen_Body8(RundungsRahmen);
          'Body9': OnPreSectionRundungsRahmen_Body9(RundungsRahmen);
          'Body10': OnPreSectionRundungsRahmen_Body10(RundungsRahmen);
          'Body11': OnPreSectionRundungsRahmen_Body11(RundungsRahmen);
          'Body12': OnPreSectionRundungsRahmen_Body12(RundungsRahmen);
          'Body13': OnPreSectionRundungsRahmen_Body13(RundungsRahmen);
          'Body14': OnPreSectionRundungsRahmen_Body14(RundungsRahmen);
          'Body15': OnPreSectionRundungsRahmen_Body15(RundungsRahmen);
          'Body16': OnPreSectionRundungsRahmen_Body16(RundungsRahmen);
          'Body17': OnPreSectionRundungsRahmen_Body17(RundungsRahmen);
          'Body18': OnPreSectionRundungsRahmen_Body18(RundungsRahmen);
          'Footer20': OnPreSectionRundungsRahmen_Footer20(RundungsRahmen);
          'Footer21': OnPreSectionRundungsRahmen_Footer21(RundungsRahmen);
        END;
        'Total': CASE SectionId OF
          'Body28': OnPreSectionTotal_Body28(Total);
          'Body29': OnPreSectionTotal_Body29(Total);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RundungsRahmen': CASE SectionId OF
          'Body11': OnPostSectionRundungsRahmen_Body11(RundungsRahmen);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,OutstandingAmount);
                ReportForNav.AddTotal(DataItemId,1,EinkZeile.Amount);
                ReportForNav.AddTotal(DataItemId,2,EinkZeile."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,3,EinkZeile."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 OutstandingAmount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 EinkZeile.Amount := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 EinkZeile."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
                 EinkZeile."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,3,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      Žnderung am Standard 2.01 Lederer Systemhaus: Ulrich Gepp
      Erstellt am : 23.06.99
      -----------------------------------------------------------------------------------------
      Adressfeld auf Fensterkurvert-Norm gesetzt.
      Zeilennummernformatierung:
      FORMAT("Purchase Line"."Line No."/10000,0,0)
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyStreet">
          <DataField>CompanyStreet</DataField>
        </Field>
        <Field Name="CompanyPostCode">
          <DataField>CompanyPostCode</DataField>
        </Field>
        <Field Name="CompanyCity">
          <DataField>CompanyCity</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="EinkVonAdr8">
          <DataField>EinkVonAdr8</DataField>
        </Field>
        <Field Name="EinkVonAdr7">
          <DataField>EinkVonAdr7</DataField>
        </Field>
        <Field Name="EinkVonAdr6">
          <DataField>EinkVonAdr6</DataField>
        </Field>
        <Field Name="EinkVonAdr5">
          <DataField>EinkVonAdr5</DataField>
        </Field>
        <Field Name="EinkVonAdr4">
          <DataField>EinkVonAdr4</DataField>
        </Field>
        <Field Name="EinkVonAdr3">
          <DataField>EinkVonAdr3</DataField>
        </Field>
        <Field Name="EinkVonAdr2">
          <DataField>EinkVonAdr2</DataField>
        </Field>
        <Field Name="EinkVonAdr1">
          <DataField>EinkVonAdr1</DataField>
        </Field>
        <Field Name="Buy_fromVendorNo_PurchaseHeader">
          <DataField>Buy_fromVendorNo_PurchaseHeader</DataField>
        </Field>
        <Field Name="No_PurchaseHeader">
          <DataField>No_PurchaseHeader</DataField>
        </Field>
        <Field Name="DocumentDate_PurchaseHeader">
          <DataField>DocumentDate_PurchaseHeader</DataField>
        </Field>
        <Field Name="STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_">
          <DataField>STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_</DataField>
        </Field>
        <Field Name="wahrung">
          <DataField>wahrung</DataField>
        </Field>
        <Field Name="EinkZeileAmount_EinkZeileInvDiscountAmount">
          <DataField>EinkZeileAmount_EinkZeileInvDiscountAmount</DataField>
        </Field>
        <Field Name="EinkZeileAmount_EinkZeileInvDiscountAmountFormat">
          <DataField>EinkZeileAmount_EinkZeileInvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="PurchaseLineAmount_PurchaseLineInvDiscountAmount">
          <DataField>PurchaseLineAmount_PurchaseLineInvDiscountAmount</DataField>
        </Field>
        <Field Name="PurchaseLineAmount_PurchaseLineInvDiscountAmountFormat">
          <DataField>PurchaseLineAmount_PurchaseLineInvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="RequestedReceiptDate_PurchaseLine">
          <DataField>RequestedReceiptDate_PurchaseLine</DataField>
        </Field>
        <Field Name="DirectUnitCost_PurchaseLine">
          <DataField>DirectUnitCost_PurchaseLine</DataField>
        </Field>
        <Field Name="DirectUnitCost_PurchaseLineFormat">
          <DataField>DirectUnitCost_PurchaseLineFormat</DataField>
        </Field>
        <Field Name="Quantity_PurchaseLine">
          <DataField>Quantity_PurchaseLine</DataField>
        </Field>
        <Field Name="Quantity_PurchaseLineFormat">
          <DataField>Quantity_PurchaseLineFormat</DataField>
        </Field>
        <Field Name="Description_PurchaseLine">
          <DataField>Description_PurchaseLine</DataField>
        </Field>
        <Field Name="Artikelnr2_PurchaseLine">
          <DataField>Artikelnr2_PurchaseLine</DataField>
        </Field>
        <Field Name="LineNo_PurchaseLine">
          <DataField>LineNo_PurchaseLine</DataField>
        </Field>
        <Field Name="VendorItemNo_artikel">
          <DataField>VendorItemNo_artikel</DataField>
        </Field>
        <Field Name="PurchaseLineDescription2__beschreibung2_neu">
          <DataField>PurchaseLineDescription2__beschreibung2_neu</DataField>
        </Field>
        <Field Name="warennummer">
          <DataField>warennummer</DataField>
        </Field>
        <Field Name="quote">
          <DataField>quote</DataField>
        </Field>
        <Field Name="ProdOrderNo_PurchaseLine">
          <DataField>ProdOrderNo_PurchaseLine</DataField>
        </Field>
        <Field Name="Amount_EinkZeile">
          <DataField>Amount_EinkZeile</DataField>
        </Field>
        <Field Name="Amount_EinkZeileFormat">
          <DataField>Amount_EinkZeileFormat</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="ship_to1">
          <DataField>ship_to1</DataField>
        </Field>
        <Field Name="ship_to2">
          <DataField>ship_to2</DataField>
        </Field>
        <Field Name="ship_to3">
          <DataField>ship_to3</DataField>
        </Field>
        <Field Name="ship_to4">
          <DataField>ship_to4</DataField>
        </Field>
        <Field Name="ship_to5">
          <DataField>ship_to5</DataField>
        </Field>
        <Field Name="ship_to6">
          <DataField>ship_to6</DataField>
        </Field>
        <Field Name="ship_to7">
          <DataField>ship_to7</DataField>
        </Field>
        <Field Name="ship_to8">
          <DataField>ship_to8</DataField>
        </Field>
        <Field Name="Description_ZlgBed">
          <DataField>Description_ZlgBed</DataField>
        </Field>
        <Field Name="Description_LieferBed">
          <DataField>Description_LieferBed</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

