OBJECT Report 50053 TOPAS-RE und GU - Zeilen
{
  OBJECT-PROPERTIES
  {
    Date=03.01.18;
    Time=11:48:39;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  CREATE (Excel,FALSE,TRUE);                                              //erzeugt excel
                  Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
                  Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
                  XlEdgeBottom := 9;
                  XlContinuous := 1;
                  XlDouble := 12;
                  Sheet.Range('A1').Value := 'Debitor Nr.';
                  Sheet.Range('B1').Value := 'Name';
                  Sheet.Range('B:B').ColumnWidth := 30;
                  Sheet.Range('C1').Value := 'Ort';
                  Sheet.Range('C:C').ColumnWidth := 20;
                  Sheet.Range('D1').Value := 'Belegnr.';
                  Sheet.Range('E1').Value := 'Buchungsdatum';
                  Sheet.Range('F1').Value := 'Artikelnr.';
                  Sheet.Range('F:F').ColumnWidth := 30;
                  Sheet.Range('G1').Value := 'W„hrungskurs';
                  Sheet.Range('G:G').NumberFormat := '0,00';
                  Sheet.Range('H1').Value := 'Menge';
                  Sheet.Range('I1').Value := 'EK-Preis';
                  Sheet.Range('I:I').NumberFormat := '0,00';
                  Sheet.Range('J1').Value := 'EK Betrag';
                  Sheet.Range('J:J').NumberFormat := '0,00';
                  Sheet.Range('K1').Value := 'VK-Preis (MW)';
                  Sheet.Range('K:K').NumberFormat := '0,00';
                  Sheet.Range('L1').Value := 'VK-Preis';
                  Sheet.Range('L:L').NumberFormat := '0,00';
                  Sheet.Range('M1').Value := 'W„hrung';
                  Sheet.Range('N1').Value := 'VK Betrag';
                  Sheet.Range('N:N').NumberFormat := '0,00';
                  Sheet.Range('O1').Value := 'W„hrung';
                  Sheet.Range('P1').Value := 'VK Betrag (MW)';
                  Sheet.Range('P:P').NumberFormat := '0,00';
                  Sheet.Range('Q1').Value := 'Marge';
                  Sheet.Range('Q:Q').NumberFormat := '0,00';
                  Sheet.Range('R1').Value := 'Artikelgruppe';
                  //Einfacher, unterer Rahmen
                  Sheet.Range('A1:R1').Borders.Item(XlEdgeBottom).LineStyle := XlContinuous;
                  Sheet.Range('A1:R1').Font.Bold := TRUE;
                  //fixiert die oberste Zeile
                  Excel.ActiveWindow.SplitColumn(0);
                  Excel.ActiveWindow.SplitRow(1);
                  Excel.ActiveWindow.FreezePanes := TRUE;
                  j := '2';
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   Sheet.Range('E' + j).Value := 'Marge in °:';
                   Sheet.Range('F' + j).Value := FORMAT(gesamt_marge);
                   Sheet.Range('F' + j).Borders.Item(XlEdgeBottom).LineStyle := XlDouble;
                   Sheet.Range('F' + j).Font.Bold := TRUE;
                   Sheet.Range('H' + j).Value := 'Gesamt EK in °:';
                   Sheet.Range('J' + j).Value := FORMAT(gesamt_ek);
                   Sheet.Range('J' + j).Borders.Item(XlEdgeBottom).LineStyle := XlDouble;
                   Sheet.Range('J' + j).Font.Bold := TRUE;
                   Sheet.Range('P' + j).Value := FORMAT(gesamtmw);
                   Sheet.Range('P' + j).Borders.Item(XlEdgeBottom).LineStyle := XlDouble;
                   Sheet.Range('P' + j).Font.Bold := TRUE;
                   Sheet.Range('Q' + j).Value := FORMAT("gesamt_marge_%");
                   Sheet.Range('Q' + j).Borders.Item(XlEdgeBottom).LineStyle := XlDouble;
                   Sheet.Range('Q' + j).Font.Bold := TRUE;
                   Excel.Visible(TRUE);
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table18;
               DataItemTableView=SORTING(Search Name)
                                 ORDER(Ascending);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               gesamtmw := 0;
                               gesamt_ek := 0;
                               gesamt_marge := 0;
                               "gesamt_marge_%" := 0;
                             END;
                              }

    { 2   ;1   ;Column  ;TODAY_0_4           ;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 3   ;1   ;Column  ;ReportForNavPageNo  ;
               SourceExpr=ReportForNav.PageNo }

    { 4   ;1   ;Column  ;USERID              ;
               SourceExpr=USERID }

    { 5   ;1   ;Column  ;gesamt_marge        ;
               SourceExpr=gesamt_marge }

    { 6   ;1   ;Column  ;gesamt_marge_Pct    ;
               SourceExpr="gesamt_marge_%" }

    { 7   ;1   ;Column  ;gesamt_ek           ;
               SourceExpr=gesamt_ek }

    { 8   ;1   ;Column  ;gesamtmw            ;
               SourceExpr=gesamtmw }

    { 9   ;1   ;DataItem;                    ;
               DataItemTable=Table112;
               PrintOnlyIfDetail=Yes;
               OnAfterGetRecord=BEGIN
                                  IF "Currency Code" = '' THEN
                                    waehrung := 'EUR'
                                  ELSE
                                    waehrung := "Currency Code";
                                END;

               ReqFilterFields=Betreuer Innendienst,Salesperson Code,Posting Date;
               DataItemLink=Sell-to Customer No.=FIELD(No.) }

    { 10  ;2   ;DataItem;                    ;
               DataItemTable=Table113;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnAfterGetRecord=BEGIN
                                  marge := 0;
                                  betrag_mw := 0;
                                  IF ("Unit Cost" <> 0.0) AND ("Unit Price" <> 0.0) THEN
                                    marge := (("Unit Price" - "Unit Cost") / "Unit Price" * 100)
                                  ELSE
                                    marge := 999;
                                  IF ((Type = Type::Item) AND ("Unit Price" > 0))THEN BEGIN
                                    IF "Sales Invoice Header"."Currency Factor" <> 0 THEN BEGIN
                                      betrag_mw := Amount / "Sales Invoice Header"."Currency Factor";
                                      gesamtmw := gesamtmw + betrag_mw;
                                      gesamt_ek := gesamt_ek + ("Unit Cost (LCY)" * Quantity);
                                    END ELSE BEGIN
                                      betrag_mw := Amount;
                                      gesamtmw := gesamtmw + betrag_mw;
                                      gesamt_ek := gesamt_ek + ("Unit Cost (LCY)" * Quantity);
                                    END;
                                  END;
                                  IF gesamtmw <> 0.0 THEN
                                    "gesamt_marge_%" := ((gesamtmw - gesamt_ek) / gesamtmw * 100);
                                  gesamt_marge:=gesamtmw-gesamt_ek;
                                  //Ausgabe in Excel
                                  IF (Type = Type::Item) AND (Quantity > 0) AND ("Unit Price" > 0) THEN BEGIN
                                    Sheet.Range('A'+j).Value := Customer."No.";
                                    Sheet.Range('B'+j).Value := Customer.Name;
                                    Sheet.Range('C'+j).Value := Customer.City;
                                    Sheet.Range('D'+j).Value := "Document No.";
                                    Sheet.Range('E'+j).Value := "Sales Invoice Header"."Posting Date";
                                    Sheet.Range('F'+j).Value := "No.";
                                    Sheet.Range('G'+j).Value := FORMAT("Sales Invoice Header"."Currency Factor");
                                    Sheet.Range('H'+j).Value := FORMAT(Quantity);
                                    Sheet.Range('I'+j).Value := FORMAT("Unit Cost");
                                    Sheet.Range('J'+j).Value := FORMAT("Unit Cost" * Quantity);
                                    Sheet.Range('K'+j).Value := FORMAT("VK-Preis (MW)");
                                    Sheet.Range('L'+j).Value := FORMAT("Unit Price");
                                    Sheet.Range('M'+j).Value := "Sales Invoice Header"."Currency Code";
                                    Sheet.Range('N'+j).Value := FORMAT(Amount);
                                    Sheet.Range('O'+j).Value := "Sales Invoice Header"."Currency Code";
                                    Sheet.Range('P'+j).Value := FORMAT(betrag_mw);
                                    Sheet.Range('Q'+j).Value := FORMAT(marge);
                                    IF Item.GET("No.") THEN
                                      Sheet.Range('R'+j).Value := Item.Artikelgruppe;
                                    j := INCSTR (j);
                                  END;
                                END;

               ReqFilterFields=Manufacturer Code;
               DataItemLink=Document No.=FIELD(No.) }

    { 11  ;3   ;Column  ;VK_Preis_MW_SalesInvoiceLine;
               SourceExpr="VK-Preis (MW)" }

    { 12  ;3   ;Column  ;marge               ;
               SourceExpr=marge }

    { 13  ;3   ;Column  ;waehrung            ;
               SourceExpr=waehrung }

    { 14  ;3   ;Column  ;Amount_SalesInvoiceLine;
               SourceExpr=Amount }

    { 15  ;3   ;Column  ;UnitPrice_SalesInvoiceLine;
               SourceExpr="Unit Price" }

    { 16  ;3   ;Column  ;UnitCost_SalesInvoiceLine;
               SourceExpr="Unit Cost" }

    { 17  ;3   ;Column  ;PostingDate_SalesInvoiceLine;
               SourceExpr="Posting Date" }

    { 18  ;3   ;Column  ;Quantity_SalesInvoiceLine;
               SourceExpr=Quantity }

    { 19  ;3   ;Column  ;CurrencyFactor_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Currency Factor" }

    { 20  ;3   ;Column  ;Name_Customer       ;
               SourceExpr=Customer.Name }

    { 21  ;3   ;Column  ;City_Customer       ;
               SourceExpr=Customer.City }

    { 22  ;3   ;Column  ;No_Customer         ;
               SourceExpr=Customer."No." }

    { 23  ;3   ;Column  ;No_SalesInvoiceLine ;
               SourceExpr="No." }

    { 24  ;3   ;Column  ;DocumentNo_SalesInvoiceLine;
               SourceExpr="Document No." }

    { 25  ;1   ;DataItem;                    ;
               DataItemTable=Table114;
               OnAfterGetRecord=BEGIN
                                  IF "Currency Code" = '' THEN
                                    waehrung := 'EUR'
                                  ELSE
                                    waehrung := "Currency Code";
                                END;

               ReqFilterFields=Betreuer Innendienst,Salesperson Code,Posting Date;
               DataItemLink=Sell-to Customer No.=FIELD(No.) }

    { 26  ;2   ;DataItem;                    ;
               DataItemTable=Table115;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnAfterGetRecord=BEGIN
                                  marge := 0;
                                  betrag_mw := 0;
                                  IF ("Unit Cost" <> 0.0) AND ("Unit Price" <> 0.0) THEN
                                    marge := (("Unit Price" - "Unit Cost") / "Unit Price" * 100)
                                  ELSE
                                    marge := 999;
                                  IF (Type = Type::Item) AND ("Unit Price" > 0) THEN BEGIN
                                    IF "Sales Cr.Memo Header"."Currency Factor" <> 0 THEN BEGIN
                                      betrag_mw := Amount / "Sales Cr.Memo Header"."Currency Factor" * (-1);
                                      gesamtmw := gesamtmw + betrag_mw;
                                      gesamt_ek := gesamt_ek + (("Unit Cost (LCY)" * Quantity) * (-1));
                                    END ELSE BEGIN
                                      betrag_mw := Amount * (-1);
                                      gesamtmw := gesamtmw + betrag_mw;
                                      gesamt_ek := gesamt_ek + (("Unit Cost (LCY)" * Quantity) * (-1));
                                    END;
                                  END;
                                  IF (gesamtmw <> 0.0) THEN
                                   "gesamt_marge_%" := ((gesamtmw - gesamt_ek) / gesamtmw * 100);
                                  gesamt_marge := gesamtmw - gesamt_ek;
                                      //Ausgabe in Excel
                                  IF (Type = Type::Item) AND (Quantity > 0) AND ("Unit Price" > 0) THEN BEGIN
                                    Sheet.Range('A'+j).Value := Customer."No.";
                                    Sheet.Range('B'+j).Value := Customer.Name;
                                    Sheet.Range('C'+j).Value := Customer.City;
                                    Sheet.Range('D'+j).Value := "Document No.";
                                    Sheet.Range('E'+j).Value := "Sales Cr.Memo Header"."Posting Date";
                                    Sheet.Range('F'+j).Value := "No.";
                                    Sheet.Range('G'+j).Value := FORMAT("Sales Cr.Memo Header"."Currency Factor");
                                    Sheet.Range('H'+j).Value := FORMAT(Quantity);
                                    Sheet.Range('I'+j).Value := FORMAT("Unit Cost");
                                    Sheet.Range('J'+j).Value := FORMAT("Unit Cost" * Quantity * (-1));
                                    Sheet.Range('K'+j).Value := FORMAT("VK-Preis (MW)");
                                    Sheet.Range('L'+j).Value := FORMAT("Unit Price");
                                    Sheet.Range('M'+j).Value := "Sales Cr.Memo Header"."Currency Code";
                                    Sheet.Range('N'+j).Value := FORMAT(Amount * (-1));
                                    Sheet.Range('O'+j).Value := "Sales Cr.Memo Header"."Currency Code";
                                    Sheet.Range('P'+j).Value := FORMAT(betrag_mw);
                                    Sheet.Range('Q'+j).Value := FORMAT(marge);
                                    IF Item.GET("No.") THEN
                                      Sheet.Range('R'+j).Value := Item.Artikelgruppe;
                                    j := INCSTR(j);
                                  END;
                                END;

               ReqFilterFields=Manufacturer Code;
               DataItemLink=Document No.=FIELD(No.) }

    { 27  ;3   ;Column  ;VK_Preis_MW_SalesCrMemoLine;
               SourceExpr="VK-Preis (MW)" }

    { 28  ;3   ;Column  ;marge2              ;
               SourceExpr=marge }

    { 29  ;3   ;Column  ;waehrung3           ;
               SourceExpr=waehrung }

    { 30  ;3   ;Column  ;SalesCrMemoLineAmount_1;
               SourceExpr=("Sales Cr.Memo Line".Amount)*(-1) }

    { 31  ;3   ;Column  ;UnitPrice_SalesCrMemoLine;
               SourceExpr="Unit Price" }

    { 32  ;3   ;Column  ;UnitCost_SalesCrMemoLine;
               SourceExpr="Unit Cost" }

    { 33  ;3   ;Column  ;PostingDate_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Posting Date" }

    { 34  ;3   ;Column  ;Quantity_SalesCrMemoLine;
               SourceExpr=Quantity }

    { 35  ;3   ;Column  ;CurrencyFactor_SalesCrMemoHeader;
               SourceExpr="Sales Cr.Memo Header"."Currency Factor" }

    { 36  ;3   ;Column  ;No_Customer2        ;
               SourceExpr=Customer."No." }

    { 37  ;3   ;Column  ;City_Customer2      ;
               SourceExpr=Customer.City }

    { 38  ;3   ;Column  ;Name_Customer2      ;
               SourceExpr=Customer.Name }

    { 39  ;3   ;Column  ;DocumentNo_SalesCrMemoLine;
               SourceExpr="Document No." }

    { 40  ;3   ;Column  ;No_SalesCrMemoLine  ;
               SourceExpr="No." }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Excel@1140009 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Book@1140008 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Range@1140007 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Sheet@1140006 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      Item@1000000000 : Record 27;
      waehrung@1140000 : Code[10];
      marge@1140001 : Decimal;
      gesamtmw@1140002 : Decimal;
      betrag_mw@1140014 : Decimal;
      gesamt_ek@1140003 : Decimal;
      gesamt_marge@1140004 : Decimal;
      "gesamt_marge_%"@1140005 : Decimal;
      XlEdgeBottom@1140011 : Integer;
      XlContinuous@1140012 : Integer;
      XlDouble@1140013 : Integer;
      j@1140010 : Text[10];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body3@5015(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput((Type = Type::Item) AND (Quantity > 0) AND ("Unit Price" > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesCrMemoLine_Body4@5016(VAR "Sales Cr.Memo Line"@1000000000 : Record 115);
    BEGIN
      WITH "Sales Cr.Memo Line" DO BEGIN
        ReportForNav.ShowOutput((Type = Type::Item) AND (Quantity > 0));
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesInvoiceLine': CASE SectionId OF
          'Body3': OnPreSectionSalesInvoiceLine_Body3("Sales Invoice Line");
        END;
        'SalesCrMemoLine': CASE SectionId OF
          'Body4': OnPreSectionSalesCrMemoLine_Body4("Sales Cr.Memo Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT Sheet@1140006::SelectionChange@1543(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Sheet@1140006::BeforeDoubleClick@1537(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140006::BeforeRightClick@1534(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140006::Activate@304();
    BEGIN
    END;

    EVENT Sheet@1140006::Deactivate@1530();
    BEGIN
    END;

    EVENT Sheet@1140006::Calculate@279();
    BEGIN
    END;

    EVENT Sheet@1140006::Change@1545(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Sheet@1140006::FollowHyperlink@1470(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Sheet@1140006::PivotTableUpdate@2156(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Sheet@1140006::PivotTableAfterValueChange@2886(TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Sheet@1140006::PivotTableBeforeAllocateChange@2889(TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140006::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140006::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1140001 : Integer;ValueChangeEnd@1140000 : Integer);
    BEGIN
    END;

    EVENT Sheet@1140006::PivotTableChangeSync@2894(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1140008::Open@1923();
    BEGIN
    END;

    EVENT Book@1140008::Activate@304();
    BEGIN
    END;

    EVENT Book@1140008::Deactivate@1530();
    BEGIN
    END;

    EVENT Book@1140008::BeforeClose@1546(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::BeforeSave@1547(SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::BeforePrint@1549(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::NewSheet@1550(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140008::AddinInstall@1552();
    BEGIN
    END;

    EVENT Book@1140008::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Book@1140008::WindowResize@1554(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Book@1140008::WindowActivate@1556(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Book@1140008::WindowDeactivate@1557(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Book@1140008::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Book@1140008::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140008::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140008::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140008::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Book@1140008::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Book@1140008::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1140008::PivotTableCloseConnection@2158(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1140008::PivotTableOpenConnection@2159(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1140008::Sync@2266(SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140008::BeforeXmlImport@2283(Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::AfterXmlImport@2285(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140008::BeforeXmlExport@2287(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140001 : Text[1024];VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::AfterXmlExport@2288(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140001 : Text[1024];Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140008::RowsetComplete@2610(Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::SheetPivotTableAfterValueChang@2895(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Book@1140008::SheetPivotTableBeforeAllocateC@2896(Sh@1140004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::SheetPivotTableChangeSync@2899(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1140008::AfterSave@2900(Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::NewChart@2901(Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    EVENT Excel@1140009::NewWorkbook@1565(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1140009::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140009::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140009::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140009::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookOpen@1567(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookActivate@1568(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookDeactivate@1569(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookBeforeClose@1570(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookBeforeSave@1571(Wb@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookBeforePrint@1572(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookNewSheet@1573(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookAddinInstall@1574(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookAddinUninstall@1575(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1140009::WindowResize@1554(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Excel@1140009::WindowActivate@1556(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Excel@1140009::WindowDeactivate@1557(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Excel@1140009::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Excel@1140009::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookPivotTableCloseConnect@2160(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookPivotTableOpenConnecti@2161(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookSync@2289(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookBeforeXmlImport@2290(Wb@1140004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookAfterXmlImport@2291(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookBeforeXmlExport@2292(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140001 : Text[1024];VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookAfterXmlExport@2293(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1140001 : Text[1024];Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookRowsetComplete@2611(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::AfterCalculate@2612();
    BEGIN
    END;

    EVENT Excel@1140009::SheetPivotTableAfterValueChang@2895(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Excel@1140009::SheetPivotTableBeforeDiscardCh@2898(Sh@1140003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1140001 : Integer;ValueChangeEnd@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140009::ProtectedViewWindowOpen@2903(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140009::ProtectedViewWindowBeforeEdit@2905(Pvw@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookAfterSave@2911(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookNewChart@2912(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>a2bc7eeb-89e5-4dee-9ae5-0e5bba0ad9f5</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>2f2c5f02-6496-4168-8085-507480e29986</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="gesamt_marge">
          <DataField>gesamt_marge</DataField>
        </Field>
        <Field Name="gesamt_margeFormat">
          <DataField>gesamt_margeFormat</DataField>
        </Field>
        <Field Name="gesamt_marge_Pct">
          <DataField>gesamt_marge_Pct</DataField>
        </Field>
        <Field Name="gesamt_marge_PctFormat">
          <DataField>gesamt_marge_PctFormat</DataField>
        </Field>
        <Field Name="gesamt_ek">
          <DataField>gesamt_ek</DataField>
        </Field>
        <Field Name="gesamt_ekFormat">
          <DataField>gesamt_ekFormat</DataField>
        </Field>
        <Field Name="gesamtmw">
          <DataField>gesamtmw</DataField>
        </Field>
        <Field Name="gesamtmwFormat">
          <DataField>gesamtmwFormat</DataField>
        </Field>
        <Field Name="VK_Preis_MW_SalesInvoiceLine">
          <DataField>VK_Preis_MW_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="VK_Preis_MW_SalesInvoiceLineFormat">
          <DataField>VK_Preis_MW_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="marge">
          <DataField>marge</DataField>
        </Field>
        <Field Name="margeFormat">
          <DataField>margeFormat</DataField>
        </Field>
        <Field Name="waehrung">
          <DataField>waehrung</DataField>
        </Field>
        <Field Name="Amount_SalesInvoiceLine">
          <DataField>Amount_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Amount_SalesInvoiceLineFormat">
          <DataField>Amount_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLine">
          <DataField>UnitPrice_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLineFormat">
          <DataField>UnitPrice_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="UnitCost_SalesInvoiceLine">
          <DataField>UnitCost_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="UnitCost_SalesInvoiceLineFormat">
          <DataField>UnitCost_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="PostingDate_SalesInvoiceLine">
          <DataField>PostingDate_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine">
          <DataField>Quantity_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLineFormat">
          <DataField>Quantity_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="CurrencyFactor_SalesInvoiceHeader">
          <DataField>CurrencyFactor_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="CurrencyFactor_SalesInvoiceHeaderFormat">
          <DataField>CurrencyFactor_SalesInvoiceHeaderFormat</DataField>
        </Field>
        <Field Name="Name_Customer">
          <DataField>Name_Customer</DataField>
        </Field>
        <Field Name="City_Customer">
          <DataField>City_Customer</DataField>
        </Field>
        <Field Name="No_Customer">
          <DataField>No_Customer</DataField>
        </Field>
        <Field Name="No_SalesInvoiceLine">
          <DataField>No_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="DocumentNo_SalesInvoiceLine">
          <DataField>DocumentNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="VK_Preis_MW_SalesCrMemoLine">
          <DataField>VK_Preis_MW_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="VK_Preis_MW_SalesCrMemoLineFormat">
          <DataField>VK_Preis_MW_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="marge2">
          <DataField>marge2</DataField>
        </Field>
        <Field Name="marge2Format">
          <DataField>marge2Format</DataField>
        </Field>
        <Field Name="waehrung3">
          <DataField>waehrung3</DataField>
        </Field>
        <Field Name="SalesCrMemoLineAmount_1">
          <DataField>SalesCrMemoLineAmount_1</DataField>
        </Field>
        <Field Name="SalesCrMemoLineAmount_1Format">
          <DataField>SalesCrMemoLineAmount_1Format</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLine">
          <DataField>UnitPrice_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesCrMemoLineFormat">
          <DataField>UnitPrice_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="UnitCost_SalesCrMemoLine">
          <DataField>UnitCost_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="UnitCost_SalesCrMemoLineFormat">
          <DataField>UnitCost_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="PostingDate_SalesCrMemoHeader">
          <DataField>PostingDate_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine">
          <DataField>Quantity_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLineFormat">
          <DataField>Quantity_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="CurrencyFactor_SalesCrMemoHeader">
          <DataField>CurrencyFactor_SalesCrMemoHeader</DataField>
        </Field>
        <Field Name="CurrencyFactor_SalesCrMemoHeaderFormat">
          <DataField>CurrencyFactor_SalesCrMemoHeaderFormat</DataField>
        </Field>
        <Field Name="No_Customer2">
          <DataField>No_Customer2</DataField>
        </Field>
        <Field Name="City_Customer2">
          <DataField>City_Customer2</DataField>
        </Field>
        <Field Name="Name_Customer2">
          <DataField>Name_Customer2</DataField>
        </Field>
        <Field Name="DocumentNo_SalesCrMemoLine">
          <DataField>DocumentNo_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="No_SalesCrMemoLine">
          <DataField>No_SalesCrMemoLine</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

