OBJECT Report 50003 TOPAS Provisonsberech n. Excel
{
  OBJECT-PROPERTIES
  {
    Date=18.01.18;
    Time=12:15:23;
    Modified=Yes;
    Version List=fertig,FORNAV2.0.0.1189/1189 Ersetzt durch Page 5018;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  CREATE (Excel,FALSE,TRUE);                                              //erzeugt excel
                  Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
                  Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
                  Sheet.Range('A1').Value := 'Re_Nummer';                          // definiert die Beschriftung der berschriftszeile
                  Sheet.Range('B1').Value := 'Re_Datum';
                  Sheet.Range('C1').Value := 'Artikelnr';
                  Sheet.Range('D1').Value := 'Menge';
                  Sheet.Range('E1').Value := 'VK_W„hrung';
                  Sheet.Range('F1').Value := 'W„hrung';
                  Sheet.Range('G1').Value := 'VK_EUR';
                  Sheet.Range('H1').Value := 'Einstandspreis_EUR';
                  Sheet.Range('I1').Value := 'Kunde';
                  Sheet.Range('J1').Value := 'Kunden_Nr';
                  Sheet.Range('K1').Value := 'PLZ';
                  Sheet.Range('L1').Value := 'Verk„ufercode';
                  Sheet.Range('M1').Value := 'Betreuer Innen';
                  Sheet.Range('N1').Value := 'Team';
                  Sheet.Range('O1').Value := 'Gebiet';
                  Sheet.Range('P1').Value := 'Betrag';
                  Sheet.Range('Q1').Value := 'Marge';
                  Sheet.Range('R1').Value := 'Marge %';
                  Sheet.Range('S1').Value := 'Linie';
                  Sheet.Range('T1').Value := 'Herstellercode';
                  Sheet.Range('U1').Value := 'AU-Nr.';
                  Sheet.Range('V1').Value := 'Rahmen';
                  Sheet.Range('W1').Value := 'Datum';
                  Sheet.Range('X1').Value := 'W„hrung';
                  Sheet.Range('Y1').Value := 'Kurs';
                  Sheet.Range('Z1').Value := 'EK';
                  Sheet.Range('AA1').Value := 'VK';
                  Sheet.Range('AB1').Value := 'Marge';
                  Sheet.Range('AC1').Value := 'Marge %';
                  Sheet.Range('AD1').Value := 'Abweich 1%';
                  j := '2';                                                    // <- Import in excel ab Zeile 2
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   Excel.Visible(TRUE);
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table113;
               DataItemTableView=WHERE(Type=FILTER(Item),
                                       Location Code=FILTER(ZENT|KONSI|ERSATZ|IDT),
                                       Quantity=FILTER(>0));
               OnAfterGetRecord=BEGIN
                                  dc := 0;
                                  EKPreis.SETFILTER(EKPreis."Item No.","No.");
                                  EKPreis.SETFILTER(EKPreis."Minimum Quantity",'0');
                                  IF EKPreis.FINDFIRST THEN BEGIN
                                    dc := EKPreis."Direct Unit Cost";
                                  END;
                                END;

               ReqFilterFields=Manufacturer Code }

    { 2   ;1   ;Column  ;USERID              ;
               SourceExpr=USERID }

    { 3   ;1   ;Column  ;TODAY_0_4           ;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 4   ;1   ;Column  ;ReportForNavPageNo  ;
               SourceExpr=ReportForNav.PageNo }

    { 5   ;1   ;DataItem;                    ;
               DataItemTable=Table112;
               OnAfterGetRecord=BEGIN
                                  v_wert_eu := 0;
                                  v_w„_fact := 0;
                                  v_ek := 1;
                                  v_vk := 1;
                                  v_re_marge := 0;
                                  v_marge1 := 0;
                                  v_zoll := 0;
                                  Sheet.Range('A'+j).Value := "Sales Invoice Header"."No.";
                                  Sheet.Range('B'+j).Value := "Sales Invoice Header"."Posting Date";
                                  Sheet.Range('C'+j).Value := "Sales Invoice Line"."No.";
                                  artikel.SETFILTER(artikel."No. 2",'%1',"Sales Invoice Line"."Artikelnr. 2");
                                  IF artikel.FINDFIRST THEN
                                    v_zoll := artikel."Zollsatz %";
                                  Sheet.Range('D'+j).Value := "Sales Invoice Line".Quantity;
                                  Sheet.Range('D'+j).NumberFormat:='########';
                                  Sheet.Range('E'+j).Value := "Sales Invoice Line"."Unit Price";
                                  Sheet.Range('E'+j).NumberFormat:='########,##';
                                  Sheet.Range('F'+j).Value := "Sales Invoice Header"."Currency Code";
                                  Sheet.Range('G'+j).Value := "Sales Invoice Line"."VK-Preis (MW)";
                                  Sheet.Range('G'+j).NumberFormat:='########,##';
                                  Sheet.Range('H'+j).Value := "Sales Invoice Line"."Unit Cost (LCY)";
                                  Sheet.Range('H'+j).NumberFormat:='#####.###,####';
                                  Sheet.Range('I'+j).Value := "Sales Invoice Header"."Bill-to Name";
                                  Sheet.Range('J'+j).Value := "Sales Invoice Header"."Bill-to Customer No.";
                                  Sheet.Range('K'+j).Value := "Sales Invoice Header"."Bill-to Post Code";
                                  Sheet.Range('L'+j).Value := "Sales Invoice Header"."Salesperson Code";
                                  Sheet.Range('M'+j).Value := "Sales Invoice Header"."Betreuer Innendienst";
                                  Sheet.Range('N'+j).Value := "Sales Invoice Header".Teams;
                                  Sheet.Range('O'+j).Value := "Sales Invoice Header"."Territory Code";
                                  IF  "Sales Invoice Header"."Currency Factor" >1 THEN BEGIN
                                      Sheet.Range('P'+j).Value := "Sales Invoice Line"."Unit Price"/"Sales Invoice Header"."Currency Factor"*
                                                                  "Sales Invoice Line".Quantity;
                                      Sheet.Range('P'+j).NumberFormat:='#####.###,####';
                                      Sheet.Range('Q'+j).Value:=((("Sales Invoice Line"."Unit Price"/"Sales Invoice Header"."Currency Factor")-
                                      "Sales Invoice Line"."Unit Cost (LCY)")*"Sales Invoice Line".Quantity);
                                      Sheet.Range('Q'+j).NumberFormat:='#####.###,####';
                                      v_wert_eu :=(("Sales Invoice Line"."Unit Price")*("Sales Invoice Line".Quantity)/("Sales Invoice Header"."Currency Factor"));
                                      //12.04.2011-ST Zusatzabfrage, da Nulldivision m”glich ist und der Report abbricht
                                      IF v_wert_eu <> 0 THEN
                                        BEGIN
                                          v_re_marge := ((v_wert_eu -("Sales Invoice Line"."Unit Cost (LCY)")*("Sales Invoice Line".Quantity))/v_wert_eu*100);
                                          Sheet.Range('R'+j).Value:=((v_wert_eu -("Sales Invoice Line"."Unit Cost (LCY)")*("Sales Invoice Line".Quantity))
                                                                    /v_wert_eu*100);
                                        END
                                      ELSE
                                        BEGIN
                                          v_re_marge := 0;
                                          Sheet.Range('R'+j).Value:= 0;
                                        END;
                                      //Zusatz Ende
                                      Sheet.Range('R'+j).NumberFormat:='#####.###,####';
                                    END
                                  ELSE
                                    BEGIN
                                      Sheet.Range('P'+j).Value := "Sales Invoice Line".Amount;
                                      Sheet.Range('P'+j).NumberFormat:='#####.###,####';
                                      Sheet.Range('Q'+j).Value:=("Sales Invoice Line".Amount-("Sales Invoice Line"."Unit Cost (LCY)"*
                                                                "Sales Invoice Line".Quantity));
                                      Sheet.Range('Q'+j).NumberFormat:='#####.###,####';
                                      //15.03.2011-ST Zusatzabfrage, da Nulldivision m”glich ist und der Report abbricht
                                      IF "Sales Invoice Line".Amount <> 0 THEN
                                        BEGIN
                                          v_re_marge:= (("Sales Invoice Line".Amount-("Sales Invoice Line"."Unit Cost (LCY)"*"Sales Invoice Line".Quantity))
                                                       /"Sales Invoice Line".Amount*100);
                                         Sheet.Range('R'+j).Value:=(("Sales Invoice Line".Amount - ("Sales Invoice Line"."Unit Cost (LCY)"*
                                                                   "Sales Invoice Line".Quantity)) / "Sales Invoice Line".Amount*100);
                                        END
                                      ELSE
                                        BEGIN
                                          v_re_marge := 0;
                                          Sheet.Range('R'+j).Value := 0;
                                        END;
                                      //Zusatz Ende
                                      Sheet.Range('R'+j).NumberFormat:='#####.###,####';
                                    END;
                                  Sheet.Range('S'+j).Value := "Sales Invoice Line"."Shortcut Dimension 1 Code";
                                  Sheet.Range('T'+j).Value := "Sales Invoice Line"."Manufacturer Code";
                                  Sheet.Range('U'+j).Value := "Sales Invoice Line"."Order No.";
                                  Sheet.Range('V'+j).Value := "Sales Invoice Line"."Blanket Order No.";
                                  IF "Sales Invoice Line"."Blanket Order No." ='' THEN
                                    BEGIN
                                      // Auftrag benutzen
                                      v_vkk.SETFILTER(v_vkk."No.",'%1',"Sales Invoice Header"."Order No.");
                                      IF v_vkk.FINDFIRST THEN
                                        BEGIN
                                          Sheet.Range('W'+j).Value := v_vkk."Order Date";
                                          Sheet.Range('X'+j).Value := v_vkk."Currency Code";
                                          IF v_vkk."Currency Factor" = 0 THEN
                                            BEGIN
                                              v_vkz.SETFILTER(v_vkz."Document No.",'%1',v_vkk."No.");
                                              v_vkz.SETFILTER(v_vkz."Line No.",'%1',"Sales Invoice Line"."Order Line No.");
                                              IF v_vkz.FINDFIRST THEN
                                                BEGIN
                                                  Sheet.Range('Z'+j).Value := v_vkz."Unit Cost (LCY)";
                                                  v_ek:=v_vkz."Unit Cost (LCY)";
                                                  Sheet.Range('AA'+j).Value := v_vkz."Unit Price";
                                                  v_vk:=v_vkz."Unit Price";
                                                END;
                                              Sheet.Range('AB'+j).Value := (v_vk - v_ek);
                                              Sheet.Range('AB'+j).NumberFormat:='########,##';
                                              //15.03.2011-ST Zusatzabfrage, da Nulldivision m”glich ist und der Report abbricht
                                              IF v_vk <> 0 THEN
                                                BEGIN
                                                  Sheet.Range('AC'+j).Value := ((v_vk - v_ek)/v_vk*100);
                                                  v_marge1:= ((v_vk - v_ek)/v_vk*100);
                                                END
                                              ELSE
                                                BEGIN
                                                  Sheet.Range('AC'+j).Value := 0;
                                                  v_marge1 := 0;
                                                END;
                                              //Zusatz Ende
                                              Sheet.Range('AC'+j).NumberFormat:='########,##';
                                              IF (v_marge1 - v_re_marge > 1) THEN
                                                BEGIN
                                                  Sheet.Range('AD'+j).Value :='X';
                                                END;
                                              IF (v_marge1 - v_re_marge < (-1)) THEN
                                                BEGIN
                                                  Sheet.Range('AD'+j).Value :='X';
                                                END;
                                              Sheet.Range('AE'+j).Value :='AU1';
                                            END
                                          ELSE
                                            BEGIN
                                              v_w„_kurs.SETFILTER(v_w„_kurs."Starting Date",'%1',v_vkk."Order Date");
                                              v_w„_kurs.SETFILTER(v_w„_kurs."Currency Code",'%1',v_vkk."Currency Code");
                                              IF v_w„_kurs.FINDFIRST THEN
                                                BEGIN
                                                  Sheet.Range('Y'+j).Value := v_w„_kurs."Exchange Rate Amount"*100;
                                                  v_w„_fact:=v_w„_kurs."Exchange Rate Amount";
                                                  v_vkz.SETFILTER(v_vkz."Document No.",'%1',v_vkk."No.");
                                                  v_vkz.SETFILTER(v_vkz."Line No.",'%1',"Sales Invoice Line"."Order Line No.");
                                                  IF v_vkz.FINDFIRST THEN
                                                    BEGIN
                                                      v_vk:=v_vkz."Unit Price"/v_w„_fact;
                                  //////
                                                      v_w„_kurs.RESET;
                                                      v_w„_kurs.SETFILTER(v_w„_kurs."Starting Date",'%1',v_vkk."Order Date");
                                                      v_w„_kurs.SETFILTER(v_w„_kurs."Currency Code",'%1',v_vkz.Einkaufsw„hrungscode);
                                                      IF v_w„_kurs.FINDFIRST THEN
                                                        BEGIN
                                                          v_w„_ek_kurs:=v_w„_kurs."Exchange Rate Amount";
                                                          v_ek:=(v_vkz."DC-Preis (EKW)"*((100+v_vkz."Handlingskosten %")/100)*((100+v_zoll)/100));
                                                          Sheet.Range('AF'+j).Value :=v_ek;
                                                          v_ek:=((v_ek) / (v_w„_ek_kurs));
                                                          Sheet.Range('AG'+j).Value :=v_ek;
                                                        END;
                                  //////
                                                      Sheet.Range('Z'+j).Value := v_ek;
                                                      Sheet.Range('AA'+j).Value := v_vk;
                                                      Sheet.Range('AB'+j).Value := (v_vk - v_ek);
                                                      Sheet.Range('AB'+j).NumberFormat:='########,##';
                                                      //15.03.2011-ST Zusatzabfrage, da Nulldivision m”glich ist und der Report abbricht
                                                      IF v_vk <> 0 THEN
                                                        BEGIN
                                                          Sheet.Range('AC'+j).Value := ((v_vk - v_ek)/v_vk*100);
                                                          v_marge1:= ((v_vk - v_ek)/v_vk*100);
                                                        END
                                                      ELSE
                                                        BEGIN
                                                          Sheet.Range('AC'+j).Value := 0;
                                                          v_marge1 := 0;
                                                        END;
                                                      //Zusatz Ende
                                                      Sheet.Range('AC'+j).NumberFormat:='########,##';
                                                      IF (v_marge1 - v_re_marge > 1) THEN
                                                        BEGIN
                                                          Sheet.Range('AD'+j).Value :='X';
                                                        END;
                                                      IF (v_marge1 - v_re_marge < (-1)) THEN
                                                        BEGIN
                                                          Sheet.Range('AD'+j).Value :='X';
                                                        END;
                                                      Sheet.Range('AE'+j).Value :='AU2';
                                                    END;
                                                END;
                                            END;
                                        END
                                      ELSE
                                        BEGIN
                                      // archivierten Auftrag benutzen
                                          v_avkk.SETFILTER(v_avkk."No.",'%1',"Sales Invoice Header"."Order No.");
                                          IF v_avkk.FINDFIRST THEN
                                            BEGIN
                                              Sheet.Range('W'+j).Value := v_avkk."Order Date";
                                              Sheet.Range('X'+j).Value := v_avkk."Currency Code";
                                              IF v_avkk."Currency Factor" = 0 THEN
                                                BEGIN
                                                  v_avkz.SETFILTER(v_avkz."Document No.",'%1',v_avkk."No.");
                                                  v_avkz.SETFILTER(v_avkz."Line No.",'%1',"Sales Invoice Line"."Order Line No.");
                                                  IF v_avkz.FINDFIRST THEN
                                                    BEGIN
                                                      Sheet.Range('Z'+j).Value := v_avkz."Unit Cost (LCY)";
                                                      v_ek:=v_avkz."Unit Cost (LCY)";
                                                      Sheet.Range('AA'+j).Value := v_avkz."Unit Price";
                                                      v_vk:=v_avkz."Unit Price";
                                                    END;
                                                  Sheet.Range('AB'+j).Value := (v_vk - v_ek);
                                                  Sheet.Range('AB'+j).NumberFormat:='########,##';
                                                  //15.03.2011-ST Zusatzabfrage, da Nulldivision m”glich ist und der Report abbricht
                                                  IF v_vk <> 0 THEN
                                                    BEGIN
                                                      Sheet.Range('AC'+j).Value := ((v_vk - v_ek)/v_vk*100);
                                                      v_marge1 := ((v_vk - v_ek)/v_vk*100);
                                                    END
                                                  ELSE
                                                    BEGIN
                                                      Sheet.Range('AC'+j).Value := 0;
                                                      v_marge1 := 0;
                                                    END;
                                                  //Zusatz Ende
                                                  Sheet.Range('AC'+j).NumberFormat:='########,##';
                                                  IF (v_marge1 - v_re_marge > 1) THEN BEGIN
                                                    Sheet.Range('AD'+j).Value :='X';
                                                  END;
                                                  IF (v_marge1 - v_re_marge < (-1)) THEN BEGIN
                                                    Sheet.Range('AD'+j).Value :='X';
                                                  END;
                                                    Sheet.Range('AE'+j).Value :='Archiv1';
                                                END
                                              ELSE
                                                BEGIN
                                                  v_w„_kurs.SETFILTER(v_w„_kurs."Starting Date",'%1',v_avkk."Order Date");
                                                  v_w„_kurs.SETFILTER(v_w„_kurs."Currency Code",'%1',v_avkk."Currency Code");
                                                  IF v_w„_kurs.FINDFIRST THEN
                                                    BEGIN
                                                      Sheet.Range('Y'+j).Value := v_w„_kurs."Exchange Rate Amount"*100;
                                                      v_w„_fact:=v_w„_kurs."Exchange Rate Amount";
                                                      v_avkz.SETFILTER(v_avkz."Document No.",'%1',v_avkk."No.");
                                                      v_avkz.SETFILTER(v_avkz."Line No.",'%1',"Sales Invoice Line"."Order Line No.");
                                                      IF v_avkz.FINDFIRST THEN
                                                        BEGIN
                                                          v_vk:=v_avkz."Unit Price"/v_w„_fact;
                                                          Sheet.Range('AE'+j).Value :=v_w„_fact;
                                  //////
                                                          v_w„_kurs.RESET;
                                                          v_w„_kurs.SETFILTER(v_w„_kurs."Starting Date",'%1',v_avkk."Order Date");
                                                          v_w„_kurs.SETFILTER(v_w„_kurs."Currency Code",'%1',v_avkz.Einkaufsw„hrungscode);
                                                          IF v_w„_kurs.FINDFIRST THEN
                                                            BEGIN
                                                              v_w„_ek_kurs:=v_w„_kurs."Exchange Rate Amount";
                                                              v_ek:=(v_avkz."DC-Preis (EKW)"*((100+v_avkz."Handlingskosten %")/100)*((100+v_zoll)/100));
                                                              Sheet.Range('AF'+j).Value :=v_ek;
                                                              v_ek:=((v_ek) / (v_w„_ek_kurs));
                                                              Sheet.Range('AG'+j).Value :=v_ek;
                                                            END;
                                  //////
                                                          Sheet.Range('Z'+j).Value := v_ek;
                                                          Sheet.Range('AA'+j).Value := v_vk;
                                                        END;
                                                    END;
                                                  Sheet.Range('AB'+j).Value := (v_vk - v_ek);
                                                  Sheet.Range('AB'+j).NumberFormat:='########,##';
                                                  //15.03.2011-ST Zusatzabfrage, da Nulldivision m”glich ist und der Report abbricht
                                                  IF v_vk <> 0 THEN
                                                    BEGIN
                                                      Sheet.Range('AC'+j).Value := ((v_vk - v_ek)/v_vk*100);
                                                      v_marge1 := ((v_vk - v_ek)/v_vk*100);
                                                    END
                                                  ELSE
                                                    BEGIN
                                                      Sheet.Range('AC'+j).Value := 0;
                                                      v_marge1 := 0;
                                                    END;
                                                  //Zusatz Ende
                                                  Sheet.Range('AC'+j).NumberFormat:='########,##';
                                                  IF (v_marge1 - v_re_marge > 1) THEN BEGIN
                                                     Sheet.Range('AD'+j).Value :='X';
                                                  END;
                                                  IF (v_marge1 - v_re_marge < (-1)) THEN BEGIN
                                                     Sheet.Range('AD'+j).Value :='X';
                                                  END;
                                                      Sheet.Range('AE'+j).Value :='Archiv2';
                                                END;
                                            END;
                                        END;
                                    END
                                  ELSE
                                    BEGIN
                                      // Rahmenauftrag benutzen
                                      v_vkk.SETFILTER(v_vkk."No.",'%1',"Sales Invoice Line"."Blanket Order No.");
                                      IF v_vkk.FINDFIRST THEN
                                        BEGIN
                                          Sheet.Range('W'+j).Value := v_vkk."Order Date";
                                          Sheet.Range('X'+j).Value := v_vkk."Currency Code";
                                          IF v_vkk."Currency Factor" = 0 THEN
                                            BEGIN
                                              v_vkz.SETFILTER(v_vkz."Document No.",'%1',v_vkk."No.");
                                              v_vkz.SETFILTER(v_vkz."Line No.",'%1',"Sales Invoice Line"."Blanket Order Line No.");
                                              IF v_vkz.FINDFIRST THEN
                                                BEGIN
                                                  Sheet.Range('Z'+j).Value := v_vkz."Unit Cost (LCY)";
                                                  v_ek:=v_vkz."Unit Cost (LCY)";
                                                  Sheet.Range('AA'+j).Value := v_vkz."Unit Price";
                                                  v_vk:=v_vkz."Unit Price";
                                                END;
                                              Sheet.Range('AB'+j).Value := (v_vk - v_ek);
                                              Sheet.Range('AB'+j).NumberFormat:='########,##';
                                              //12.04.2011-ST Zusatzabfrage, da Nulldivision m”glich ist und der Report abbricht
                                              IF v_vk <> 0 THEN
                                                BEGIN
                                                  Sheet.Range('AC'+j).Value := ((v_vk - v_ek)/v_vk*100);
                                                  v_marge1:= ((v_vk - v_ek)/v_vk*100);
                                                END
                                              ELSE
                                                BEGIN
                                                  Sheet.Range('AC'+j).Value := 0;
                                                  v_marge1 := 0;
                                                END;
                                              //Zusatz Ende
                                              Sheet.Range('AC'+j).NumberFormat:='########,##';
                                              IF (v_marge1 - v_re_marge > 1) THEN BEGIN
                                                   Sheet.Range('AD'+j).Value :='X';
                                              END;
                                              IF (v_marge1 - v_re_marge < (-1)) THEN BEGIN
                                                   Sheet.Range('AD'+j).Value :='X';
                                              END;
                                              Sheet.Range('AE'+j).Value :='Rahmen1';
                                            END
                                          ELSE
                                            BEGIN
                                              v_w„_kurs.SETFILTER(v_w„_kurs."Starting Date",'%1',v_vkk."Order Date");
                                              v_w„_kurs.SETFILTER(v_w„_kurs."Currency Code",'%1',v_vkk."Currency Code");
                                              IF v_w„_kurs.FINDFIRST THEN
                                                BEGIN
                                                  Sheet.Range('Y'+j).Value := v_w„_kurs."Exchange Rate Amount"*100;
                                                  v_w„_fact:=v_w„_kurs."Exchange Rate Amount";
                                                  v_vkz.SETFILTER(v_vkz."Document No.",'%1',v_vkk."No.");
                                                  v_vkz.SETFILTER(v_vkz."Line No.",'%1',"Sales Invoice Line"."Blanket Order Line No.");
                                                  IF v_vkz.FINDFIRST THEN
                                                    BEGIN
                                                      v_vk:=v_vkz."Unit Price"/v_w„_fact;
                                  //////
                                                      v_w„_kurs.RESET;
                                                      v_w„_kurs.SETFILTER(v_w„_kurs."Starting Date",'%1',v_vkk."Order Date");
                                                      v_w„_kurs.SETFILTER(v_w„_kurs."Currency Code",'%1',v_vkz.Einkaufsw„hrungscode);
                                                      IF v_w„_kurs.FINDFIRST THEN
                                                        BEGIN
                                                          v_w„_ek_kurs:=v_w„_kurs."Exchange Rate Amount";
                                                          v_ek:=(v_vkz."DC-Preis (EKW)"*((100+v_vkz."Handlingskosten %")/100)*((100+v_zoll)/100));
                                                          Sheet.Range('AG'+j).Value :=v_ek;
                                                          v_ek:=((v_ek) / (v_w„_ek_kurs));
                                                          Sheet.Range('AH'+j).Value :=v_ek;
                                                        END;
                                  //////
                                                      Sheet.Range('Z'+j).Value := v_ek;
                                                      Sheet.Range('AA'+j).Value := v_vk;
                                                      Sheet.Range('AB'+j).Value := (v_vk - v_ek);
                                                      Sheet.Range('AB'+j).NumberFormat:='########,##';
                                                      //12.04.2011-ST Zusatzabfrage, da Nulldivision m”glich ist und der Report abbricht
                                                      IF v_vk <> 0 THEN
                                                        BEGIN
                                                          Sheet.Range('AC'+j).Value := ((v_vk - v_ek)/v_vk*100);
                                                          v_marge1:= ((v_vk - v_ek)/v_vk*100);
                                                        END
                                                      ELSE
                                                        BEGIN
                                                          Sheet.Range('AC'+j).Value := 0;
                                                          v_marge1:= 0;
                                                        END;
                                                      //Zusatz Ende
                                                      Sheet.Range('AC'+j).NumberFormat:='########,##';
                                                      IF (v_marge1 - v_re_marge > 1) THEN BEGIN
                                                        Sheet.Range('AD'+j).Value :='X';
                                                      END;
                                                      IF (v_marge1 - v_re_marge < (-1)) THEN BEGIN
                                                        Sheet.Range('AD'+j).Value :='X';
                                                      END;
                                                        Sheet.Range('AE'+j).Value :='Rahmen2';
                                                    END;
                                                END;
                                            END;
                                        END;
                                  //  Archivierten Rahmen
                                    v_avkk.SETFILTER(v_avkk."No.",'%1',"Sales Invoice Line"."Blanket Order No.");
                                    IF v_avkk.FINDFIRST THEN
                                      BEGIN
                                        Sheet.Range('W'+j).Value := v_avkk."Order Date";
                                        Sheet.Range('X'+j).Value := v_avkk."Currency Code";
                                        IF v_avkk."Currency Factor" = 0 THEN
                                          BEGIN
                                            v_avkz.SETFILTER(v_avkz."Document No.",'%1',v_avkk."No.");
                                            v_avkz.SETFILTER(v_avkz."Line No.",'%1',"Sales Invoice Line"."Blanket Order Line No.");
                                            IF v_avkz.FINDFIRST THEN
                                              BEGIN
                                                Sheet.Range('Z'+j).Value := v_avkz."Unit Cost (LCY)";
                                                v_ek:=v_avkz."Unit Cost (LCY)";
                                                Sheet.Range('AA'+j).Value := v_avkz."Unit Price";
                                                v_vk:=v_avkz."Unit Price";
                                              END;
                                            Sheet.Range('AB'+j).Value := (v_vk - v_ek);
                                            Sheet.Range('AB'+j).NumberFormat:='########,##';
                                            //12.04.2011-ST Zusatzabfrage, da Nulldivision m”glich ist und der Report abbricht
                                            IF v_vk <> 0 THEN
                                              BEGIN
                                                Sheet.Range('AC'+j).Value := ((v_vk - v_ek)/v_vk*100);
                                                v_marge1:= ((v_vk - v_ek)/v_vk*100);
                                              END
                                            ELSE
                                              BEGIN
                                                Sheet.Range('AC'+j).Value := 0;
                                                v_marge1:= 0;
                                              END;
                                            //Zusatz Ende
                                            Sheet.Range('AC'+j).NumberFormat:='########,##';
                                            IF (v_marge1 - v_re_marge > 1) THEN BEGIN
                                               Sheet.Range('AD'+j).Value :='X';
                                            END;
                                            IF (v_marge1 - v_re_marge < (-1)) THEN BEGIN
                                               Sheet.Range('AD'+j).Value :='X';
                                            END;
                                               Sheet.Range('AE'+j).Value :='Rahmen1';
                                          END
                                        ELSE
                                          BEGIN
                                            v_w„_kurs.SETFILTER(v_w„_kurs."Starting Date",'%1',v_avkk."Order Date");
                                            v_w„_kurs.SETFILTER(v_w„_kurs."Currency Code",'%1',v_avkk."Currency Code");
                                            IF v_w„_kurs.FINDFIRST THEN
                                              BEGIN
                                                Sheet.Range('Y'+j).Value := v_w„_kurs."Exchange Rate Amount"*100;
                                                v_w„_fact:=v_w„_kurs."Exchange Rate Amount";
                                                v_avkz.SETFILTER(v_avkz."Document No.",'%1',v_avkk."No.");
                                                v_avkz.SETFILTER(v_avkz."Line No.",'%1',"Sales Invoice Line"."Blanket Order Line No.");
                                                IF v_avkz.FINDFIRST THEN
                                                  BEGIN
                                                    v_vk:=v_avkz."Unit Price"/v_w„_fact;
                                  //////
                                                    v_ek:=v_avkz."DC-Preis (EKW)"*((100+v_vkz."Handlingskosten %")/100)*((100+v_zoll)/100);
                                                    v_ek:=v_ek/v_w„_fact;
                                                    IF v_vkz.Einkaufsw„hrungscode='JPY' THEN BEGIN
                                                        v_ek:=v_ek/100;
                                                    END;
                                  //////
                                                    Sheet.Range('Z'+j).Value := v_ek;
                                                    Sheet.Range('AA'+j).Value := v_vk;
                                                    Sheet.Range('AB'+j).Value := (v_vk - v_ek);
                                                    Sheet.Range('AB'+j).NumberFormat:='########,##';
                                                    //12.04.2011-ST Zusatzabfrage, da Nulldivision m”glich ist und der Report abbricht
                                                    IF v_vk <> 0 THEN
                                                      BEGIN
                                                        Sheet.Range('AC'+j).Value := ((v_vk - v_ek)/v_vk*100);
                                                        v_marge1:= ((v_vk - v_ek)/v_vk*100);
                                                      END
                                                    ELSE
                                                      BEGIN
                                                        Sheet.Range('AC'+j).Value := 0;
                                                        v_marge1:= 0;
                                                      END;
                                                    //Zusatz Ende
                                                    Sheet.Range('AC'+j).NumberFormat:='########,##';
                                                    IF (v_marge1 - v_re_marge > 1) THEN BEGIN
                                                       Sheet.Range('AD'+j).Value :='X';
                                                    END;
                                                    IF (v_marge1 - v_re_marge < (-1)) THEN BEGIN
                                                       Sheet.Range('AD'+j).Value :='X';
                                                    END;
                                                        Sheet.Range('AE'+j).Value :='Rahmen2';
                                                  END;
                                              END;
                                          END;
                                      END;
                                  //  ENDE Archivierten Rahmen
                                    END;
                                  Sheet.Range('AI'+j).Value := v_zoll;
                                  j := INCSTR (j);
                                END;

               ReqFilterFields=Document Date,Salesperson Code;
               DataItemLink=No.=FIELD(Document No.) }

    { 6   ;2   ;Column  ;Sell_toCustomerName_SalesInvoiceHeader;
               SourceExpr="Sell-to Customer Name" }

    { 7   ;2   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader;
               SourceExpr="Sell-to Customer No." }

    { 8   ;2   ;Column  ;Sell_toPostCode_SalesInvoiceHeader;
               SourceExpr="Sell-to Post Code" }

    { 9   ;2   ;Column  ;SalespersonCode_SalesInvoiceHeader;
               SourceExpr="Salesperson Code" }

    { 10  ;2   ;Column  ;PostingDate_SalesInvoiceHeader;
               SourceExpr="Posting Date" }

    { 11  ;2   ;Column  ;DocumentDate_SalesInvoiceHeader;
               SourceExpr="Document Date" }

    { 12  ;2   ;Column  ;DocumentNo_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Document No." }

    { 13  ;2   ;Column  ;Quantity_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line".Quantity }

    { 14  ;2   ;Column  ;No_SalesInvoiceLine ;
               SourceExpr="Sales Invoice Line"."No." }

    { 15  ;    ;DataItem;Sales Invoice Line1 ;
               DataItemTable=Table113;
               DataItemTableView=WHERE(No.=FILTER(4407|4408|4317|4412|4690|4118|4338),
                                       Quantity=FILTER(>0),
                                       Type=FILTER(G/L Account)) }

    { 16  ;1   ;DataItem;Sales Invoice Header1;
               DataItemTable=Table112;
               OnAfterGetRecord=BEGIN
                                  Sheet.Range('A'+j).Value := "Sales Invoice Header1"."No.";
                                  Sheet.Range('B'+j).Value := "Sales Invoice Header1"."Posting Date";
                                  Sheet.Range('C'+j).Value := "Sales Invoice Line1"."No.";
                                  Sheet.Range('D'+j).Value := "Sales Invoice Line1".Quantity;
                                  Sheet.Range('D'+j).NumberFormat:='########';
                                  Sheet.Range('E'+j).Value := "Sales Invoice Line1"."Unit Price";
                                  Sheet.Range('E'+j).NumberFormat:='########,##';
                                  Sheet.Range('F'+j).Value := "Sales Invoice Header1"."Currency Code";
                                  Sheet.Range('G'+j).Value := "Sales Invoice Line1"."VK-Preis (MW)";
                                  Sheet.Range('G'+j).NumberFormat:='########,##';
                                  Sheet.Range('H'+j).Value := "Sales Invoice Line1"."Unit Cost (LCY)";
                                  Sheet.Range('H'+j).NumberFormat:='#####.###,####';
                                  Sheet.Range('I'+j).Value := "Sales Invoice Header1"."Bill-to Name";
                                  Sheet.Range('J'+j).Value := "Sales Invoice Header1"."Bill-to Customer No.";
                                  Sheet.Range('K'+j).Value := "Sales Invoice Header1"."Bill-to Post Code";
                                  Sheet.Range('L'+j).Value := "Sales Invoice Header1"."Salesperson Code";
                                  Sheet.Range('M'+j).Value := "Sales Invoice Header1"."Betreuer Innendienst";
                                  Sheet.Range('N'+j).Value := "Sales Invoice Header1".Teams;
                                  Sheet.Range('O'+j).Value := "Sales Invoice Header1"."Territory Code";
                                  IF  "Sales Invoice Header1"."Currency Factor">1 THEN
                                  BEGIN
                                  Sheet.Range('P'+j).Value := "Sales Invoice Line1"."Unit Price"/"Sales Invoice Header1"."Currency Factor"*
                                       "Sales Invoice Line1".Quantity;
                                       Sheet.Range('O'+j).NumberFormat:='#####.###,####';
                                  Sheet.Range('Q'+j).Value:=((("Sales Invoice Line1"."Unit Price"/"Sales Invoice Header1"."Currency Factor")-
                                       "Sales Invoice Line1"."Unit Cost (LCY)")*"Sales Invoice Line1".Quantity);
                                  Sheet.Range('Q'+j).NumberFormat:='#####.###,####';
                                  END
                                  ELSE
                                  BEGIN
                                   Sheet.Range('P'+j).Value := "Sales Invoice Line1".Amount;
                                   Sheet.Range('P'+j).NumberFormat:='#####.###,####';
                                   Sheet.Range('Q'+j).Value:=("Sales Invoice Line1".Amount-("Sales Invoice Line1"."Unit Cost (LCY)"*
                                       "Sales Invoice Line1".Quantity));
                                   Sheet.Range('Q'+j).NumberFormat:='#####.###,####';
                                  END;
                                   Sheet.Range('R'+j).Value:=(("Sales Invoice Line1".Amount-("Sales Invoice Line1"."Unit Cost (LCY)"*"Sales Invoice Line1".Quantity))
                                   /"Sales Invoice Line1".Amount*100);
                                   Sheet.Range('R'+j).NumberFormat:='#####.###,####';
                                  v_vkz1.RESET;
                                  v_vkz1.SETFILTER(v_vkz1."Document No.",'%1',"Sales Invoice Header1"."No.");
                                  v_vkz1.SETFILTER(v_vkz1.Quantity,'>%1',0);
                                  v_vkz1.SETFILTER(v_vkz1.Type,'%1',v_vkz1.Type::Item);
                                  IF v_vkz1.FINDFIRST THEN BEGIN
                                  Sheet.Range('T'+j).Value :=v_vkz1."Manufacturer Code";
                                  END;
                                  j := INCSTR (j);
                                END;

               ReqFilterFields=Document Date,Salesperson Code;
               DataItemLink=No.=FIELD(Document No.) }

    { 17  ;    ;DataItem;                    ;
               DataItemTable=Table115;
               DataItemTableView=WHERE(Location Code=FILTER(ZENT|KONSI|ERSATZ|IDT),
                                       Quantity=FILTER(>0),
                                       Type=FILTER(Item));
               ReqFilterFields=Manufacturer Code }

    { 18  ;1   ;Column  ;No_SalesCrMemoLine  ;
               SourceExpr="No." }

    { 19  ;1   ;Column  ;Quantity_SalesCrMemoLine;
               SourceExpr=Quantity }

    { 20  ;1   ;Column  ;DocumentNo_SalesCrMemoLine;
               SourceExpr="Document No." }

    { 21  ;1   ;DataItem;                    ;
               DataItemTable=Table114;
               OnAfterGetRecord=BEGIN
                                  v_wert_eu:=0;
                                  Sheet.Range('A'+j).Value := "Sales Cr.Memo Header"."No.";
                                  Sheet.Range('B'+j).Value := "Sales Cr.Memo Header"."Posting Date";
                                  Sheet.Range('C'+j).Value := "Sales Cr.Memo Line"."No.";
                                  Sheet.Range('D'+j).Value := "Sales Cr.Memo Line".Quantity;
                                  Sheet.Range('D'+j).NumberFormat:='########';
                                  Sheet.Range('E'+j).Value := "Sales Cr.Memo Line"."Unit Price";
                                  Sheet.Range('E'+j).NumberFormat:='########,##';
                                  Sheet.Range('F'+j).Value := "Sales Cr.Memo Header"."Currency Code";
                                  Sheet.Range('G'+j).Value := "Sales Cr.Memo Line"."VK-Preis (MW)";
                                  Sheet.Range('G'+j).NumberFormat:='########,##';
                                  Sheet.Range('H'+j).Value := "Sales Cr.Memo Line"."Unit Cost (LCY)";
                                  Sheet.Range('H'+j).NumberFormat:='#####.###,####';
                                  Sheet.Range('I'+j).Value := "Sales Cr.Memo Header"."Bill-to Name";
                                  Sheet.Range('J'+j).Value := "Sales Cr.Memo Header"."Bill-to Customer No.";
                                  Sheet.Range('K'+j).Value := "Sales Cr.Memo Header"."Bill-to Post Code";
                                  Sheet.Range('L'+j).Value := "Sales Cr.Memo Header"."Salesperson Code";
                                  Sheet.Range('M'+j).Value := "Sales Cr.Memo Header"."Betreuer Innendienst";
                                  Sheet.Range('N'+j).Value := "Sales Cr.Memo Header".Teams;
                                  Sheet.Range('O'+j).Value := "Sales Cr.Memo Header"."Territory Code";
                                  IF  "Sales Cr.Memo Header"."Currency Factor">1 THEN
                                  BEGIN
                                   IF "Sales Cr.Memo Line"."Unit Price"<>0 THEN BEGIN
                                    Sheet.Range('P'+j).Value := (("Sales Cr.Memo Line"."Unit Price"/"Sales Cr.Memo Header"."Currency Factor"*
                                       "Sales Cr.Memo Line".Quantity)*(-1));
                                       Sheet.Range('P'+j).NumberFormat:='#####.###,####';
                                    Sheet.Range('Q'+j).Value:=(((("Sales Cr.Memo Line"."Unit Price"/"Sales Cr.Memo Header"."Currency Factor")-
                                       "Sales Cr.Memo Line"."Unit Cost (LCY)")*"Sales Cr.Memo Line".Quantity)*(-1));
                                    Sheet.Range('Q'+j).NumberFormat:='#####.###,####';
                                    v_wert_eu:=(("Sales Cr.Memo Line"."Unit Price"/"Sales Cr.Memo Header"."Currency Factor"*"Sales Cr.Memo Line".Quantity)*(-1));
                                    Sheet.Range('R'+j).Value:=((v_wert_eu-("Sales Cr.Memo Line"."Unit Cost (LCY)"*"Sales Cr.Memo Line".Quantity)) /v_wert_eu*100);
                                     Sheet.Range('R'+j).NumberFormat:='#####.###,####';
                                    END ELSE BEGIN
                                    END;
                                  END
                                  ELSE
                                  BEGIN
                                  IF "Sales Cr.Memo Line"."Unit Price"<>0 THEN BEGIN
                                   Sheet.Range('P'+j).Value := ("Sales Cr.Memo Line".Amount*(-1));
                                   Sheet.Range('P'+j).NumberFormat:='#####.###,####';
                                   Sheet.Range('Q'+j).Value:= (("Sales Cr.Memo Line".Amount-("Sales Cr.Memo Line"."Unit Cost (LCY)"*
                                   "Sales Cr.Memo Line".Quantity))*(-1));
                                   Sheet.Range('Q'+j).NumberFormat:='#####.###,####';
                                   Sheet.Range('R'+j).Value:=(("Sales Cr.Memo Line".Amount-("Sales Cr.Memo Line"."Unit Cost (LCY)"*"Sales Cr.Memo Line".Quantity))
                                   /"Sales Cr.Memo Line".Amount*100);
                                    Sheet.Range('R'+j).NumberFormat:='#####.###,####';
                                    END ELSE BEGIN
                                    END;
                                  END;
                                   Sheet.Range('S'+j).Value := "Sales Cr.Memo Line"."Shortcut Dimension 1 Code";
                                   Sheet.Range('T'+j).Value := "Sales Cr.Memo Line"."Manufacturer Code";
                                  j := INCSTR (j);
                                END;

               ReqFilterFields=Document Date,Salesperson Code;
               DataItemLink=No.=FIELD(Document No.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Excel@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Book@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Range@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Sheet@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      k@1140004 : Text[30];
      j@1140005 : Text[30];
      art2@1140007 : Text[15];
      kreditor@1140008 : Record 23;
      debitor@1140010 : Record 18;
      Verkaufslieferkopf@1140011 : Record 110;
      einkaufskopf@1140012 : Record 38;
      artikel@1140013 : Record 27;
      dc@1140014 : Decimal;
      ToDo@1140009 : Record 5080;
      Bemerkung@1140015 : Record 5061;
      EKPreis@1140016 : Record 7012;
      Projekt@1140017 : Record 5071;
      v_wert_eu@1140018 : Decimal;
      v_vkk@1140019 : Record 36;
      v_vkz@1140020 : Record 37;
      v_vkz1@1140032 : Record 113;
      v_avkk@1140021 : Record 5107;
      v_avkz@1140022 : Record 5108;
      v_w„_kurs@1140023 : Record 330;
      v_w„_fact@1140024 : Decimal;
      v_ek@1140025 : Decimal;
      v_vk@1140026 : Decimal;
      v_marge@1140027 : Decimal;
      v_marge1@1140028 : Decimal;
      v_re_marge@1140029 : Decimal;
      v_w„_ek_kurs@1140030 : Decimal;
      v_zoll@1140031 : Decimal;
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body3@5017(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
          ReportForNav.ShowOutput("Sales Invoice Line".Type="Sales Invoice Line".Type::Item);
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesInvoiceLine': CASE SectionId OF
          'Body3': OnPreSectionSalesInvoiceLine_Body3("Sales Invoice Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>49fcea41-ea68-47dd-80d5-e185095bf3d1</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>9eb1481d-6715-4fc3-adbc-cff4100a5574</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="Sell_toCustomerName_SalesInvoiceHeader">
          <DataField>Sell_toCustomerName_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesInvoiceHeader">
          <DataField>Sell_toCustomerNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="Sell_toPostCode_SalesInvoiceHeader">
          <DataField>Sell_toPostCode_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="SalespersonCode_SalesInvoiceHeader">
          <DataField>SalespersonCode_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="PostingDate_SalesInvoiceHeader">
          <DataField>PostingDate_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="DocumentDate_SalesInvoiceHeader">
          <DataField>DocumentDate_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="DocumentNo_SalesInvoiceLine">
          <DataField>DocumentNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine">
          <DataField>Quantity_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLineFormat">
          <DataField>Quantity_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="No_SalesInvoiceLine">
          <DataField>No_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="No_SalesCrMemoLine">
          <DataField>No_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLine">
          <DataField>Quantity_SalesCrMemoLine</DataField>
        </Field>
        <Field Name="Quantity_SalesCrMemoLineFormat">
          <DataField>Quantity_SalesCrMemoLineFormat</DataField>
        </Field>
        <Field Name="DocumentNo_SalesCrMemoLine">
          <DataField>DocumentNo_SalesCrMemoLine</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

