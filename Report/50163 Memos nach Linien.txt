OBJECT Report 50163 Memos nach Linien
{
  OBJECT-PROPERTIES
  {
    Date=08.12.17;
    Time=10:41:38;
    Modified=Yes;
    Version List=TOPAS,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  Anlagename := '';
                  Memodatumfilter := '';
                  Anlagedatumfilter := '';
                  QBRFilter := '';
                  IF VerkTab.GET(verfasser_filter) THEN
                    Anlagename := VerkTab."First name" + ' ' + VerkTab.Name;

                  //Die Vermischung der Verfasser aus den alten Krzel aus NAV 5.0 und den neuen Windows Benutzernamen mit W2K\...
                  //werden jetzt so umgesetzt, dass sich der Benutzer die neuen Benutzer nicht merken muss, sondern einfach die alten Krzel
                  //weiter verwenden darf, ohne dass Eintr„ge verloren gehen sollten
                  IF verfasser_filter <> '' THEN BEGIN
                    l := STRLEN(DELCHR(verfasser_filter,'=',DELCHR(verfasser_filter,'=','|'))) + 1;
                    IF l > 0 THEN BEGIN
                      FOR i := 1 TO l DO BEGIN
                        IF STRPOS(verfasser_filter,'|') > 0 THEN BEGIN
                          verfasser := COPYSTR(verfasser_filter,1,STRPOS(verfasser_filter,'|') - 1);
                          verfasser_filter := COPYSTR(verfasser_filter,STRPOS(verfasser_filter,'|') + 1);
                        END ELSE
                          verfasser := verfasser_filter;
                        UserTab.RESET;
                        UserTab.SETRANGE("Salesperson Code",verfasser);
                        IF UserTab.FINDFIRST THEN
                          verfasser_filter_neu += UserTab."User Name" + '|' + verfasser + '|'
                        ELSE
                          verfasser_filter_neu += verfasser + '|';
                      END;
                    END;
                  END;
                  verfasser_filter_neu := DELCHR(verfasser_filter_neu,'>','|');

                  IF (MemoStartdatum <> 0D) OR (MemoEnddatum <> 0D) THEN
                    Memodatumfilter := FORMAT(MemoStartdatum) + '..' + FORMAT(MemoEnddatum);
                  IF (AnlageStartdatum <> 0D) OR (AnlageEnddatum <> 0D) THEN
                    Anlagedatumfilter := FORMAT(AnlageStartdatum) + '..' + FORMAT(AnlageEnddatum);
                  IF QBR = TRUE THEN
                    QBRFilter := 'QBR=ja';
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50002;
               DataItemTableView=SORTING(Linienkrzel,Projektnr.-Verb.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               IF Linienfilter <>'' THEN
                                 Linienauswahl.SETFILTER(Linienkrzel,Linienfilter);
                             END;
                              }

    { 2   ;1   ;Column  ;QBRFilter           ;
               SourceExpr=QBRFilter }

    { 3   ;1   ;Column  ;Anlagedatumfilter   ;
               SourceExpr=Anlagedatumfilter }

    { 4   ;1   ;Column  ;Memodatumfilter     ;
               SourceExpr=Memodatumfilter }

    { 5   ;1   ;Column  ;TODAY_0_4           ;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 6   ;1   ;Column  ;Anlagename          ;
               SourceExpr=Anlagename }

    { 7   ;1   ;Column  ;ReportForNavPageNo  ;
               SourceExpr=ReportForNav.PageNo }

    { 8   ;1   ;Column  ;USERID              ;
               SourceExpr=USERID }

    { 9   ;1   ;DataItem;                    ;
               DataItemTable=Table50003;
               DataItemTableView=SORTING(Kampagnennr.,Memonr.,Anlagedatum)
                                 ORDER(Ascending);
               PrintOnlyIfDetail=No;
               OnPreDataItem=BEGIN
                               IF (MemoStartdatum <> 0D) AND (MemoEnddatum = 0D) THEN
                                 Memokopf.SETFILTER(Memodatum,'>=%1',MemoStartdatum);
                               IF (MemoStartdatum <> 0D) AND (MemoEnddatum <> 0D) THEN
                                 Memokopf.SETFILTER(Memodatum,'>=%1&<=%2',MemoStartdatum,MemoEnddatum);
                               IF (MemoStartdatum = 0D) AND (MemoEnddatum <> 0D) THEN
                                 Memokopf.SETFILTER(Memodatum,'<=%1',MemoEnddatum);
                               IF (AnlageStartdatum <> 0D) AND (AnlageEnddatum = 0D) THEN
                                 Memokopf.SETFILTER(Anlagedatum,'>=%1',AnlageStartdatum);
                               IF (AnlageStartdatum <> 0D) AND (AnlageEnddatum <> 0D) THEN
                                 Memokopf.SETFILTER(Anlagedatum,'>=%1&<=%2',AnlageStartdatum,AnlageEnddatum);
                               IF (AnlageStartdatum = 0D) AND (AnlageEnddatum <> 0D) THEN
                                 Memokopf.SETFILTER(Anlagedatum,'<=%1',AnlageEnddatum);
                               IF verfasser_filter_neu <> '' THEN
                               Memokopf.SETFILTER("Angelegt von",verfasser_filter_neu);
                               IF QBR = TRUE THEN
                               Memokopf.SETFILTER(QBR,'%1',QBR);
                             END;

               DataItemLink=Memonr.=FIELD(Memonr.) }

    { 10  ;2   ;Column  ;Projektklasse       ;
               SourceExpr=Projektklasse }

    { 11  ;2   ;Column  ;Projektstatus       ;
               SourceExpr=Projektstatus }

    { 12  ;2   ;Column  ;Kontakt_Verkaufer   ;
               SourceExpr=Kontakt_Verk„ufer }

    { 13  ;2   ;Column  ;Memodatum_Memokopf  ;
               SourceExpr=Memodatum }

    { 14  ;2   ;Column  ;Kontakt_Betreuer    ;
               SourceExpr=Kontakt_Betreuer }

    { 15  ;2   ;Column  ;Kontakt_Ort         ;
               SourceExpr=Kontakt_Ort }

    { 16  ;2   ;Column  ;Projektnr           ;
               SourceExpr="Projektnr." }

    { 17  ;2   ;Column  ;Kontakt_PLZ         ;
               SourceExpr=Kontakt_PLZ }

    { 18  ;2   ;Column  ;Projektname         ;
               SourceExpr=Projektname }

    { 19  ;2   ;Column  ;Kontaktname         ;
               SourceExpr=Kontaktname }

    { 20  ;2   ;Column  ;Statustext          ;
               SourceExpr=Statustext }

    { 21  ;2   ;Column  ;Linientext          ;
               SourceExpr=Linientext }

    { 22  ;2   ;Column  ;Kontaktart_Memokopf ;
               SourceExpr=Kontaktart }

    { 23  ;2   ;Column  ;Memokurztext_Memokopf;
               SourceExpr=Memokurztext }

    { 24  ;2   ;DataItem;                    ;
               DataItemTable=Table50005;
               DataItemTableView=SORTING(Kontakt Mandantennr.,Kontaktnr.,Kampagnennr.,Memonr.)
                                 WHERE(Kampagnennr.=FILTER(=''));
               PrintOnlyIfDetail=No;
               DataItemLink=Memonr.=FIELD(Memonr.) }

    { 25  ;3   ;Column  ;Mandantenname_AnsprechpartnerAuswahl;
               SourceExpr=Mandantenname;
               AutoCalcField=Yes }

    { 26  ;3   ;Column  ;Kontaktname_AnsprechpartnerAuswahl;
               SourceExpr=Kontaktname;
               AutoCalcField=Yes }

    { 27  ;3   ;Column  ;Kontaktnr_AnsprechpartnerAuswahl;
               SourceExpr="Kontaktnr." }

    { 28  ;2   ;DataItem;                    ;
               DataItemTable=Table50004;
               DataItemTableView=SORTING(Memonr.,Zeilennr.);
               PrintOnlyIfDetail=No;
               DataItemLink=Memonr.=FIELD(Memonr.) }

    { 29  ;3   ;Column  ;Bemerkung_Memozeile ;
               SourceExpr=Bemerkung }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140005;2;Field     ;
                  CaptionML=DEU=Herstellercode;
                  SourceExpr=Linienfilter;
                  OnLookup=BEGIN
                             Manufacturer2.RESET;
                             IF PAGE.RUNMODAL(5728,Manufacturer2) = ACTION::LookupOK THEN
                             BEGIN
                                Linienfilter := Manufacturer2.Code;
                             END;
                           END;
                            }

      { 1140006;2;Field     ;
                  CaptionML=DEU=Memodatum von;
                  SourceExpr=MemoStartdatum }

      { 1140012;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=MemoEnddatum }

      { 1140007;2;Field     ;
                  CaptionML=DEU=Anlagedatum von;
                  SourceExpr=AnlageStartdatum }

      { 1140013;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=AnlageEnddatum }

      { 1140008;2;Field     ;
                  CaptionML=DEU=Verfasser;
                  SourceExpr=verfasser_filter }

      { 1140010;2;Field     ;
                  CaptionML=DEU=QBR;
                  SourceExpr=QBR }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      UserTab@1000000005 : Record 2000000120;
      VerkTab@1140003 : Record 13;
      Proj@1140004 : Record 5071;
      Contact@1140005 : Record 5050;
      Manufacturer@1140007 : Record 5720;
      Manufacturer2@1140013 : Record 5720;
      Linien@1140008 : Record 50002;
      Beteiligte@1140009 : Record 50005;
      Kontaktname@1140010 : Text[50];
      Kontakt_PLZ@1140011 : Text[30];
      Kontakt_Ort@1140012 : Text[30];
      Kontakt_Betreuer@1140014 : Code[20];
      Kontakt_Verk„ufer@1140015 : Code[20];
      Projektname@1140016 : Text[50];
      "Projektnr."@1140017 : Code[20];
      Projektstatus@1140018 : Text[30];
      Projektklasse@1140019 : Text[30];
      Statustext@1140020 : Text[150];
      Anlagename@1000000004 : Text;
      Linienfilter@1140021 : Code[10];
      Linientext@1000000007 : Text[80];
      MemoStartdatum@1140022 : Date;
      MemoEnddatum@1140000 : Date;
      AnlageStartdatum@1140023 : Date;
      AnlageEnddatum@1140002 : Date;
      QBR@1000000009 : Boolean;
      QBRFilter@1000000008 : Text[250];
      verfasser@1140024 : Code[20];
      verfasser_filter@1000000000 : Text;
      verfasser_filter_neu@1000000006 : Text;
      l@1000000001 : Integer;
      i@1000000002 : Integer;
      Memodatumfilter@1140027 : Text[250];
      Anlagedatumfilter@1140028 : Text[250];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionMemokopf_Body2@5049(VAR Memokopf@1000000000 : Record 50003);
    BEGIN
      WITH Memokopf DO BEGIN
        //Anzeige des entsprechenden Projektes auf dem Berichtsausdruck
        Statustext := '';
        Proj.RESET;
        IF "Kampagnennr." <> '' THEN BEGIN
          IF Proj.GET("Kampagnennr.") THEN BEGIN
            Projektname   := Proj.Description;
            "Projektnr."  := Proj."No.";
            Projektstatus := Proj.Projektstatus;
            Projektklasse := Proj.Projektklasse;
          END ELSE BEGIN
            Projektname   := '';
            "Projektnr."  := '';
            Projektstatus := '';
            Projektklasse := '';
            Statustext    := 'Projekt existiert nicht mehr';
          END;
        END;
        IF "Kampagnennr."<>'' THEN BEGIN
          Beteiligte.RESET;
          Beteiligte.SETRANGE("Kampagnennr.",Proj."No.");
          Beteiligte.SETRANGE(Fhrungsrolle,TRUE);
          IF Beteiligte.FINDFIRST THEN BEGIN
            IF Contact.GET(Beteiligte."Kontakt Mandantennr.") THEN BEGIN
              Kontaktname       := Contact.Name;
              Kontakt_PLZ       := Contact."Post Code";
              Kontakt_Ort       := Contact.City;
              Kontakt_Betreuer  := Contact."Betreuer Innendienst";
              Kontakt_Verk„ufer := Contact."Salesperson Code";
            END;
          END ELSE BEGIN
            Kontaktname       := '';
            Kontakt_PLZ       := '';
            Kontakt_Ort       := '';
            Kontakt_Betreuer  := '';
            Kontakt_Verk„ufer := '';
            IF Statustext <> '' THEN
              Statustext := Statustext + ', ' + 'Kein Hauptbeteiligter im Projekt'
            ELSE
              Statustext := 'Kein Hauptbeteiligter im Projekt';
          END;
        END ELSE BEGIN
          IF Memokopf."Mandantennr."<>'' THEN BEGIN
            IF Contact.GET(Memokopf."Mandantennr.") THEN BEGIN
              Kontaktname       := Contact.Name;
              Kontakt_PLZ       := Contact."Post Code";
              Kontakt_Ort       := Contact.City;
              Kontakt_Betreuer  := Contact."Betreuer Innendienst";
              Kontakt_Verk„ufer := Contact."Salesperson Code";
            END ELSE BEGIN
              Kontaktname       := '';
              Kontakt_PLZ       := '';
              Kontakt_Ort       := '';
              Kontakt_Betreuer  := '';
              Kontakt_Verk„ufer := '';
            END;
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMemokopf_Body3@5050(VAR Memokopf@1000000000 : Record 50003);
    BEGIN
      WITH Memokopf DO BEGIN
        Linientext := '';
        Linien.SETRANGE("Memonr.",Memokopf."Memonr.");
        IF Linien.FINDFIRST THEN
          REPEAT
            IF Manufacturer.GET(Linien.Linienkrzel) THEN
              Linientext := Linientext + '  ' + Manufacturer.Herstellerkurzname;
          UNTIL Linien.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionAnsprechpartnerAuswahl_Body4@5051(VAR "Ansprechpartner Auswahl"@1000000000 : Record 50005);
    BEGIN
      WITH "Ansprechpartner Auswahl" DO BEGIN
        "Ansprechpartner Auswahl".CALCFIELDS(Mandantenname,Kontaktname);
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Memokopf': CASE SectionId OF
          'Body2': OnPreSectionMemokopf_Body2(Memokopf);
          'Body3': OnPreSectionMemokopf_Body3(Memokopf);
        END;
        'AnsprechpartnerAuswahl': CASE SectionId OF
          'Body4': OnPreSectionAnsprechpartnerAuswahl_Body4("Ansprechpartner Auswahl");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>723dd0ef-6d16-43e2-9a8c-9848d052398a</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>4cf0f123-04a6-4534-be61-7852e52bcd5d</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="QBRFilter">
          <DataField>QBRFilter</DataField>
        </Field>
        <Field Name="Anlagedatumfilter">
          <DataField>Anlagedatumfilter</DataField>
        </Field>
        <Field Name="Memodatumfilter">
          <DataField>Memodatumfilter</DataField>
        </Field>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="Anlagename">
          <DataField>Anlagename</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="Projektklasse">
          <DataField>Projektklasse</DataField>
        </Field>
        <Field Name="Projektstatus">
          <DataField>Projektstatus</DataField>
        </Field>
        <Field Name="Kontakt_Verkaufer">
          <DataField>Kontakt_Verkaufer</DataField>
        </Field>
        <Field Name="Memodatum_Memokopf">
          <DataField>Memodatum_Memokopf</DataField>
        </Field>
        <Field Name="Kontakt_Betreuer">
          <DataField>Kontakt_Betreuer</DataField>
        </Field>
        <Field Name="Kontakt_Ort">
          <DataField>Kontakt_Ort</DataField>
        </Field>
        <Field Name="Projektnr">
          <DataField>Projektnr</DataField>
        </Field>
        <Field Name="Kontakt_PLZ">
          <DataField>Kontakt_PLZ</DataField>
        </Field>
        <Field Name="Projektname">
          <DataField>Projektname</DataField>
        </Field>
        <Field Name="Kontaktname">
          <DataField>Kontaktname</DataField>
        </Field>
        <Field Name="Statustext">
          <DataField>Statustext</DataField>
        </Field>
        <Field Name="Linientext">
          <DataField>Linientext</DataField>
        </Field>
        <Field Name="Kontaktart_Memokopf">
          <DataField>Kontaktart_Memokopf</DataField>
        </Field>
        <Field Name="Memokurztext_Memokopf">
          <DataField>Memokurztext_Memokopf</DataField>
        </Field>
        <Field Name="Mandantenname_AnsprechpartnerAuswahl">
          <DataField>Mandantenname_AnsprechpartnerAuswahl</DataField>
        </Field>
        <Field Name="Kontaktname_AnsprechpartnerAuswahl">
          <DataField>Kontaktname_AnsprechpartnerAuswahl</DataField>
        </Field>
        <Field Name="Kontaktnr_AnsprechpartnerAuswahl">
          <DataField>Kontaktnr_AnsprechpartnerAuswahl</DataField>
        </Field>
        <Field Name="Bemerkung_Memozeile">
          <DataField>Bemerkung_Memozeile</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

