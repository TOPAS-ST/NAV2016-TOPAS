OBJECT Report 50100 TOPAS-ProFormaInv
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=09:36:00;
    Modified=Yes;
    Version List=Beleg,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order),
                                       Location Code=FILTER(ZENT|KONSI));
               PrintOnlyIfDetail=Yes;
               ReqFilterHeadingML=DEU=Verkaufsauftrag;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    CLEAR(VerkEinkPerson);
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  //IF verkaufskopf.W„hrungscode = '' THEN BEGIN
                                  //  FIBUEinrichtung.TESTFIELD(Mandantenw„hrungscode);
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung.Mandantenw„hrungscode);
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung.Mandantenw„hrungscode);
                                  //END ELSE BEGIN
                                  //  TotalText := STRSUBSTNO('Total %1',W„hrungscode);
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',W„hrungscode);
                                  //END;
                                  FormatAdr.SalesHeaderBillTo(DebAdr,"Sales Header");
                                  FormatAdr.SalesHeaderSellTo(VerkAdr,"Sales Header");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF (LieferAnAdr[i] <> VerkAdr[i]) OR (DebAdr[i] <> VerkAdr[i]) THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + '°' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,Order Date }

    { 2   ;1   ;DataItem;Debito              ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  rahmenauftragsnummer := '';
                                  rahmen := FALSE;
                                  IF Steuernummer = '' THEN
                                    var_steuernr1 := ''
                                  ELSE
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      var_steuernr1 := 'Ihre Steuernummer:'
                                    ELSE
                                      var_steuernr1 := '';
                                  IF "Sales Header"."VAT Registration No." = '' THEN
                                    var_steuernr2 := ''
                                  ELSE
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                       var_steuernr2 := 'USt-IdNr.'
                                     ELSE
                                       var_steuernr2 := 'Tax Number';
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF "Sales Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                    END;
                                  END ELSE BEGIN
                                    IF "Sales Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',"Sales Header"."Currency Code");
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Header;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 4   ;2   ;DataItem;                    ;
               DataItemTable=Table291;
               DataItemLinkReference=Sales Header;
               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 5   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               sum_restauftragsbestand := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  sum_restauftragsbestand := 0;
                                  CLEAR(VerkZeile2);
                                  CLEAR(VerkBuchen);
                                  VerkBuchen.GetSalesLines("Sales Header",VerkZeile2,0);
                                  "ab vor wandlung" := '';
                                  "via EMail_adresse" := '';
                                  "via Email_unterschrift" := '';
                                  "via Email" := '';
                                  Zusatz_Text1 := '';
                                  kunde.GET("Sales Header"."Sell-to Customer No.");
                                  IF Number > 1 THEN BEGIN
                                    KopieText := 'skopie';
                                    IF kunde."AB vor Wandlung" THEN "ab vor wandlung" := 'Achtung erst AB dann Wandeln !!!';
                                    IF kunde."AB via EMail" THEN BEGIN
                                      "via Email_unterschrift" := 'Erledigt von ..............'  ;
                                      "via Email" := 'Achtung via E-Mail versenden !!!';
                                      "via EMail_adresse" := "Sales Header"."AB EMail-Adresse";
                                    END;
                                    IF kunde."AB via Fax" THEN BEGIN
                                      "via Email_unterschrift" := 'Erledigt von ..............'  ;
                                      "via Email" := 'Achtung via Fax versenden !!!';
                                    END;
                                    IF kunde."AB nur best„tigt" THEN Zusatz_Text1 := 'Keine AB ohne Termin !!';
                                  END;
                                    IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                      IF Number > 1 THEN KopieText := 'skopie';
                                      ReportForNav.PageNo := 1;
                                      IF "Sales Header"."Document Date" > "Sales Header"."Order Date" THEN
                                        „nderung := 'Žnderungs-'
                                      ELSE
                                        „nderung := '';
                                    END ELSE BEGIN
                                      IF Number > 1 THEN KopieText := ' Copy';
                                      ReportForNav.PageNo := 1;
                                      IF "Sales Header"."Document Date" > "Sales Header"."Order Date" THEN
                                        „nderung := 'Change'
                                      ELSE
                                        „nderung := '';
                                    END;
                                  IF (("Sales Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Header"."Shipment Method Code" = 'ACC-ENG')) THEN
                                    Account := "Sales Header".Spediteuraccount
                                  ELSE
                                    Account := "Shipping Agent".Name;
                                END;
                                 }

    { 6   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000003;3;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 23  ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 7   ;3   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 8   ;3   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 9   ;3   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 10  ;3   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 11  ;3   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 12  ;3   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 13  ;3   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 14  ;3   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 15  ;3   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 16  ;3   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 17  ;3   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 18  ;3   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 19  ;3   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 20  ;3   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 21  ;3   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 22  ;3   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 24  ;3   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 25  ;3   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 26  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               SourceExpr="Salesperson/Purchaser"."First name" + ' ' +"Salesperson/Purchaser".Name }

    { 27  ;3   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 28  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 29  ;3   ;Column  ;seite               ;
               SourceExpr=seite }

    { 30  ;3   ;Column  ;var_steuernr1       ;
               SourceExpr=var_steuernr1 }

    { 31  ;3   ;Column  ;Steuernummer_Debito ;
               SourceExpr=Debito.Steuernummer }

    { 32  ;3   ;Column  ;SalesHeaderDocumentDate_0_1;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 33  ;3   ;Column  ;Bill_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Bill-to Customer No." }

    { 34  ;3   ;Column  ;No_SalesHeader      ;
               SourceExpr="Sales Header"."No." }

    { 35  ;3   ;Column  ;var_steuernr2       ;
               SourceExpr=var_steuernr2 }

    { 36  ;3   ;Column  ;VATRegistrationNo_SalesHeader;
               SourceExpr="Sales Header"."VAT Registration No." }

    { 37  ;3   ;Column  ;OurAccountNo_Debito ;
               SourceExpr=Debito."Our Account No." }

    { 38  ;3   ;Column  ;SalesHeaderExternalDocumentNo__SalesHeaderYourReference;
               SourceExpr="Sales Header"."External Document No."+' '+"Sales Header"."Your Reference" }

    { 39  ;3   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 40  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := VerkZeile2.FIND('+');
                               WHILE MehrZeilen AND (VerkZeile2.Description = '') AND
                                     (VerkZeile2."No." = '') AND (VerkZeile2.Quantity = 0) AND
                                     (VerkZeile2.Amount = 0)
                               DO
                                 MehrZeilen := VerkZeile2.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               VerkZeile2.SETRANGE("Line No.",0,VerkZeile2."Line No.");
                               SETRANGE(Number,1,VerkZeile2.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    VerkZeile2.FIND('-')
                                  ELSE
                                    VerkZeile2.NEXT;
                                  "Sales Line" := VerkZeile2;
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "Sales Line"."VAT %";
                                  MWSTBetragZeile."VAT Base" := "Sales Line".Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Sales Line"."Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  steuer_text := MWSTBetragZeile.VATAmountText ;

                                  //20.08.09 ST - Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Line".Type = "Sales Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND ("Sales Line"."Quantity Shipped" <> "Sales Line"."Quantity (Base)") THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                VerkZeile2.DELETEALL;
                              END;

               DataItemLinkReference=SeiteSchleife }

    { 41  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 42  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100__VerkZeile2In;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100) +VerkZeile2. "Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 43  ;4   ;Column  ;Description_SalesLine;
               SourceExpr="Sales Line".Description }

    { 44  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvD;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100)+"Sales Line"."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 45  ;4   ;Column  ;UnitPrice_SalesLine ;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 46  ;4   ;Column  ;OutstandingQuantity_SalesLine;
               SourceExpr="Sales Line"."Outstanding Quantity" }

    { 47  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 48  ;4   ;Column  ;UnitofMeasure_SalesLine;
               SourceExpr="Sales Line"."Unit of Measure" }

    { 49  ;4   ;Column  ;Quantity_SalesLine  ;
               SourceExpr="Sales Line".Quantity }

    { 50  ;4   ;Column  ;No_SalesLine        ;
               SourceExpr="Sales Line"."No." }

    { 51  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_VerkZeile2Inv;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100)+VerkZeile2."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 52  ;4   ;Column  ;ROUND_VerkZeile2InvDiscountAmount_001;
               SourceExpr=ROUND(-VerkZeile2."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 53  ;4   ;Column  ;lead_free_text0     ;
               SourceExpr=lead_free_text0 }

    { 54  ;4   ;Column  ;lead_free_text1     ;
               SourceExpr=lead_free_text1 }

    { 55  ;4   ;Column  ;lead_free_text2     ;
               SourceExpr=lead_free_text2 }

    { 56  ;4   ;Column  ;lead_text           ;
               SourceExpr=lead_text }

    { 57  ;4   ;Column  ;ROUND_sum_restauftragsbestand_100_mwst_100_001;
               SourceExpr=ROUND((sum_restauftragsbestand)*(100+mwst)/(100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 58  ;4   ;Column  ;ROUND_sum_restauftragsbestand_100_mwst_001;
               SourceExpr=ROUND(((sum_restauftragsbestand)/(100)*mwst),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 59  ;4   ;Column  ;sum_restauftragsbestand;
               SourceExpr=sum_restauftragsbestand;
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 60  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 61  ;4   ;Column  ;steuer_text         ;
               SourceExpr=steuer_text }

    { 62  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 63  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnPreDataItem=BEGIN
                               IF "Sales Line"."Promised Delivery Date" = (31122053D) THEN BEGIN
                                 IF CurrReport.LANGUAGE = 1031 THEN
                                   liefert := 'Abruf'
                                 ELSE
                                   liefert := 'on call';
                               END;
                               IF "Sales Line"."Promised Delivery Date"= (31122055D) THEN BEGIN
                                 IF CurrReport.LANGUAGE = 1031 THEN
                                   liefert := 'folgt'
                                 ELSE
                                   liefert := 'To Follow';
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF "Sales Line".Type = "Sales Line".Type::Item THEN BEGIN
                                    IF "Sales Line"."VAT %" > 0 THEN         //sonst werden die Textzeilen mit bercksichtigt
                                      mwst := "Sales Line"."VAT %"
                                    ELSE
                                      mwst := 0;
                                  END;
                                  sum_restauftragsbestand := sum_restauftragsbestand + ROUND((("Sales Line"."Outstanding Amount")/(100+mwst)*100),0.01);
                                  IF "Sales Line"."Blanket Order No." <> '' THEN BEGIN
                                    rahmenauftragsnummer := "Sales Line"."Blanket Order No.";
                                    rahmen := TRUE;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                liefert:='';
                              END;

               DataItemLinkReference=Sales Line;
               DataItemLink=No.=FIELD(No.) }

    { 64  ;5   ;Column  ;lead_symbol         ;
               SourceExpr=lead_symbol }

    { 65  ;5   ;Column  ;ROUND_SalesLineOutstandingAmount_100_mwst_100_001;
               DecimalPlaces=2:0;
               SourceExpr=ROUND((("Sales Line"."Outstanding Amount")/(100+mwst)*100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 66  ;5   ;Column  ;LineNo_SalesLine    ;
               SourceExpr="Sales Line"."Line No." }

    { 67  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 68  ;5   ;Column  ;Artikelnr2_SalesLine;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 69  ;5   ;Column  ;Description_SalesLine4;
               SourceExpr="Sales Line".Description }

    { 70  ;5   ;Column  ;Quantity_SalesLine2 ;
               SourceExpr="Sales Line".Quantity }

    { 71  ;5   ;Column  ;OutstandingQuantity_SalesLine2;
               SourceExpr="Sales Line"."Outstanding Quantity" }

    { 72  ;5   ;Column  ;liefert             ;
               SourceExpr=liefert }

    { 73  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               SourceExpr="Country/Region of Origin Code" }

    { 74  ;5   ;Column  ;UnitPrice_SalesLine3;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 75  ;5   ;Column  ;PromisedDeliveryDate_SalesLine;
               SourceExpr="Sales Line"."Promised Delivery Date" }

    { 76  ;5   ;Column  ;Description2_SalesLine;
               SourceExpr="Sales Line"."Description 2" }

    { 77  ;5   ;Column  ;WEEE_Reg_Nr__ItemWEEE_Reg_Nr;
               SourceExpr='WEEE-Reg.-Nr.: '+ Item."WEEE-Reg.-Nr." }

    { 78  ;5   ;Column  ;Cross_ReferenceNo_SalesLine;
               SourceExpr="Sales Line"."Cross-Reference No." }

    { 79  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 80  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;

               DataItemLinkReference=SeiteSchleife }

    { 81  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 82  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 83  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 84  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               DataItemLinkReference=SeiteSchleife }

    { 85  ;4   ;Column  ;Account             ;
               SourceExpr=Account }

    { 86  ;4   ;Column  ;Description_LieferBed;
               SourceExpr=LieferBed.Description }

    { 87  ;4   ;Column  ;Description_ZlgBed  ;
               SourceExpr=ZlgBed.Description }

    { 88  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;

               DataItemLinkReference=SeiteSchleife }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      waehrung@1140000 : Code[10];
      waehrung2@1140001 : Code[10];
      FIBUEinrichtung@1140002 : Record 98;
      LieferBed@1140003 : Record 10;
      ZlgBed@1140004 : Record 3;
      Deb@1140005 : Record 18;
      Geb@1140006 : Record 286;
      suchbe@1140007 : Record 27;
      VerkEinkPerson@1140008 : Record 13;
      Firmendaten@1140009 : Record 79;
      MWSTBetragZeile@1140010 : TEMPORARY Record 290;
      "UnsereKontonr."@1140011 : Record 18;
      VerkZeile2@1140012 : TEMPORARY Record 37;
      Language@1140030 : Record 8;
      PrinterSelection@1000000002 : Record 78;
      VerkDruckZ„hler@1140013 : Codeunit 313;
      FormatAdr@1140014 : Codeunit 365;
      VerkBuchen@1140015 : Codeunit 80;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140016 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140017 : ARRAY [8] OF Text[50];
      FirmaAdr@1140018 : ARRAY [8] OF Text[50];
      Verk„uferText@1140019 : Text;
      MWStNrText@1140020 : Text;
      ReferenzText@1140021 : Text;
      TotalText@1140022 : Text;
      TotalInklMWStText@1140023 : Text;
      MehrZeilen@1140024 : Boolean;
      AnzKopien@1140025 : Integer;
      AnzSchleifen@1140026 : Integer;
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      liefert@1140031 : Code[10];
      liefert2@1140032 : Date;
      mwst@1140033 : Decimal;
      „nderung@1140034 : Text[30];
      sum_restauftragsbestand@1140035 : Decimal;
      AnzPorto@1140036 : Decimal;
      SumPorto@1140037 : Decimal;
      VerkAdr@1140038 : ARRAY [8] OF Text[50];
      "via Email"@1140039 : Text;
      "via Email_unterschrift"@1140040 : Text;
      "via EMail_adresse"@1140041 : Text;
      "ab vor wandlung"@1140042 : Text;
      Zusatz_Text1@1140043 : Text[60];
      kunde@1140044 : Record 18;
      rahmenauftragsnummer@1140045 : Code[20];
      rahmenauftr„ge@1140046 : Record 36;
      rahmen@1140047 : Boolean;
      lead_free_text0@1140048 : Text[80];
      lead_free_text1@1140049 : Text[80];
      leadfree_symbol@1140050 : Text[3];
      leadfree_artikel@1140051 : Record 27;
      lead_artikel@1140063 : Record 27;
      lead_text@1140064 : Text[120];
      lead_symbol@1140065 : Text[3];
      lead_free_text2@1140052 : Text[80];
      var_steuernr1@1140053 : Text[20];
      var_steuernr2@1140054 : Text[20];
      ansp_anrede@1140055 : Text;
      ansp_telefon@1140056 : Text;
      ansp_fax@1140057 : Text;
      steuer_text@1140058 : Text;
      seite@1140059 : Text;
      vk_zeile@1140060 : Record 37;
      Artikel@1140061 : Record 27;
      Account@1140062 : Text[50];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Header26@1000000072(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_TransHeader27@1000000073(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Body28@1000000074(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_TransFooter29@1000000075(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Footer30@1000000076(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header1@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS Ende
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body6@5011(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //ReportForNav.ShowOutput(VerkZeile2.Art = 0);
        // Unterdckt Artikeltexte wenn eine Artikelzeile nicht berechnet wird und die Textzeilen aus Textkonserve 'Woche'
        vk_zeile.SETFILTER("Document No.",'%1',VerkZeile2."Document No." );
        vk_zeile.SETFILTER("Line No.",'%1',VerkZeile2."Attached to Line No." );
        IF vk_zeile.FINDFIRST THEN BEGIN
          ReportForNav.ShowOutput(((vk_zeile.Type = vk_zeile.Type::Item) AND (vk_zeile."Outstanding Quantity" > 0))
                                    OR (vk_zeile.Type = 0) AND (vk_zeile."No." <> 'WOCHE'));
        END ELSE BEGIN
          IF ((VerkZeile2."Attached to Line No." = 0) AND (VerkZeile2.Type = 0) AND (VerkZeile2."No." <> 'WOCHE')) THEN
            ReportForNav.ShowOutput(TRUE)
          ELSE
            ReportForNav.ShowOutput(FALSE);
        END;
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body7@5012(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::"G/L Account") AND (VerkZeile2."Outstanding Quantity" > 0));
        IF VerkZeile2.Type = VerkZeile2.Type::"G/L Account" THEN BEGIN
          sum_restauftragsbestand := sum_restauftragsbestand + ROUND(((VerkZeile2."Outstanding Amount") / (100 + mwst) * 100),0.01);
          SumPorto := VerkZeile2.Amount;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body9@5013(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2.Type = VerkZeile2.Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer12@5014(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2."Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer13@5015(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer14@5016(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer15@5017(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '') OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer16@5018(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer17@5019(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Debito."VAT Bus. Posting Group" <> 'HAN_AUSL');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer18@5020(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Debito."VAT Bus. Posting Group" = 'HAN_AUSL');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5021(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0)
        AND ("Sales Line"."Promised Delivery Date" = 31122055D));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body20@5022(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0)
        AND (VerkZeile2."Promised Delivery Date" = 31122053D));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body21@5023(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity">0)
        AND (VerkZeile2."Promised Delivery Date" < 31122053D));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body22@5024(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2."Description 2" <> '') AND (VerkZeile2."Outstanding Quantity" > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body23@5025(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Item."WEEE-Reg.-Nr." <>'')AND (VerkZeile2."Outstanding Quantity" > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body24@5026(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0)
        AND ("Sales Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body25@5027(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Item.NCNR = TRUE) AND (VerkZeile2."Outstanding Quantity" > 0));
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header1': OnPreSectionSeiteSchleife_Header1(SeiteSchleife);
        END;
        'RundungsRahmen': CASE SectionId OF
          'Body6': OnPreSectionRundungsRahmen_Body6(RundungsRahmen);
          'Body7': OnPreSectionRundungsRahmen_Body7(RundungsRahmen);
          'Body9': OnPreSectionRundungsRahmen_Body9(RundungsRahmen);
          'Footer12': OnPreSectionRundungsRahmen_Footer12(RundungsRahmen);
          'Footer13': OnPreSectionRundungsRahmen_Footer13(RundungsRahmen);
          'Footer14': OnPreSectionRundungsRahmen_Footer14(RundungsRahmen);
          'Footer15': OnPreSectionRundungsRahmen_Footer15(RundungsRahmen);
          'Footer16': OnPreSectionRundungsRahmen_Footer16(RundungsRahmen);
          'Footer17': OnPreSectionRundungsRahmen_Footer17(RundungsRahmen);
          'Footer18': OnPreSectionRundungsRahmen_Footer18(RundungsRahmen);
        END;
        'Item': CASE SectionId OF
          'Body19': OnPreSectionItem_Body19(Item);
          'Body20': OnPreSectionItem_Body20(Item);
          'Body21': OnPreSectionItem_Body21(Item);
          'Body22': OnPreSectionItem_Body22(Item);
          'Body23': OnPreSectionItem_Body23(Item);
          'Body24': OnPreSectionItem_Body24(Item);
          'Body25': OnPreSectionItem_Body25(Item);
        END;
        'MWStZahler': CASE SectionId OF
          'Header26': OnPreSectionMWStZahler_Header26(MWStZ„hler);
          'TransHeader27': OnPreSectionMWStZahler_TransHeader27(MWStZ„hler);
          'Body28': OnPreSectionMWStZahler_Body28(MWStZ„hler);
          'TransFooter29': OnPreSectionMWStZahler_TransFooter29(MWStZ„hler);
          'Footer30': OnPreSectionMWStZahler_Footer30(MWStZ„hler);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,VerkZeile2."Outstanding Amount");
                ReportForNav.AddTotal(DataItemId,1,VerkZeile2."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,VerkZeile2."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 VerkZeile2."Outstanding Amount" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 VerkZeile2."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 VerkZeile2."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
5RlhAejkM8n/9f8D</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

