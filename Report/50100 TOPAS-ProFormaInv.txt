OBJECT Report 50100 TOPAS-ProFormaInv
{
  OBJECT-PROPERTIES
  {
    Date=07.12.22;
    Time=10:35:42;
    Modified=Yes;
    Version List=Beleg,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   ProFormaInv := TRUE;
                   CommercialInv := FALSE;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order),
                                       Location Code=FILTER(ZENT|KONSI));
               PrintOnlyIfDetail=Yes;
               ReqFilterHeadingML=DEU=Verkaufsauftrag;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                               IF "Sales Header"."Language Code" = 'DEU' THEN BEGIN
                                 IF ProFormaInv THEN
                                   Titel := 'ProForma Rechnung';
                                 IF CommercialInv THEN
                                   Titel := 'COMMERCIAL INVOICE';
                               END ELSE BEGIN
                                  IF ProFormaInv THEN
                                   Titel := 'PROFORMA INVOICE';
                                 IF CommercialInv THEN
                                   Titel := 'COMMERCIAL INVOICE';
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    CLEAR(VerkEinkPerson);
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  //IF verkaufskopf.W„hrungscode = '' THEN BEGIN
                                  //  FIBUEinrichtung.TESTFIELD(Mandantenw„hrungscode);
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung.Mandantenw„hrungscode);
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung.Mandantenw„hrungscode);
                                  //END ELSE BEGIN
                                  //  TotalText := STRSUBSTNO('Total %1',W„hrungscode);
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',W„hrungscode);
                                  //END;
                                  FormatAdr.SalesHeaderBillTo(DebAdr,"Sales Header");
                                  FormatAdr.SalesHeaderSellTo(VerkAdr,"Sales Header");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF (LieferAnAdr[i] <> VerkAdr[i]) OR (DebAdr[i] <> VerkAdr[i]) THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + '°' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,Order Date }

    { 2   ;1   ;DataItem;Debito              ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  rahmenauftragsnummer := '';
                                  rahmen := FALSE;
                                  IF Steuernummer = '' THEN
                                    var_steuernr1 := ''
                                  ELSE
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      var_steuernr1 := 'Ihre Steuernummer:'
                                    ELSE
                                      var_steuernr1 := '';
                                  IF "Sales Header"."VAT Registration No." = '' THEN
                                    var_steuernr2 := ''
                                  ELSE
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                       var_steuernr2 := 'USt-IdNr.'
                                     ELSE
                                       var_steuernr2 := 'Tax Number';
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF "Sales Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                    END;
                                  END ELSE BEGIN
                                    IF "Sales Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',"Sales Header"."Currency Code");
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Header;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 4   ;2   ;DataItem;                    ;
               DataItemTable=Table291;
               DataItemLinkReference=Sales Header;
               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 5   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               sum_restauftragsbestand := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  sum_restauftragsbestand := 0;
                                  CLEAR(VerkZeile2);
                                  CLEAR(VerkBuchen);
                                  VerkBuchen.GetSalesLines("Sales Header",VerkZeile2,0);
                                  "ab vor wandlung" := '';
                                  "via EMail_adresse" := '';
                                  "via Email_unterschrift" := '';
                                  "via Email" := '';
                                  Zusatz_Text1 := '';
                                  kunde.GET("Sales Header"."Sell-to Customer No.");
                                  IF Number > 1 THEN BEGIN
                                    KopieText := 'skopie';
                                    IF kunde."AB vor Wandlung" THEN "ab vor wandlung" := 'Achtung erst AB dann Wandeln !!!';
                                    IF kunde."AB via EMail" THEN BEGIN
                                      "via Email_unterschrift" := 'Erledigt von ..............'  ;
                                      "via Email" := 'Achtung via E-Mail versenden !!!';
                                      "via EMail_adresse" := "Sales Header"."AB EMail-Adresse";
                                    END;
                                    IF kunde."AB via Fax" THEN BEGIN
                                      "via Email_unterschrift" := 'Erledigt von ..............'  ;
                                      "via Email" := 'Achtung via Fax versenden !!!';
                                    END;
                                    IF kunde."AB nur best„tigt" THEN Zusatz_Text1 := 'Keine AB ohne Termin !!';
                                  END;
                                    IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                      IF Number > 1 THEN KopieText := 'skopie';
                                      ReportForNav.PageNo := 1;
                                      IF "Sales Header"."Document Date" > "Sales Header"."Order Date" THEN
                                        „nderung := 'Žnderungs-'
                                      ELSE
                                        „nderung := '';
                                    END ELSE BEGIN
                                      IF Number > 1 THEN KopieText := ' Copy';
                                      ReportForNav.PageNo := 1;
                                      IF "Sales Header"."Document Date" > "Sales Header"."Order Date" THEN
                                        „nderung := 'Change'
                                      ELSE
                                        „nderung := '';
                                    END;
                                  IF (("Sales Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Header"."Shipment Method Code" = 'ACC-ENG')) THEN
                                    Account := "Sales Header".Spediteuraccount
                                  ELSE
                                    Account := "Shipping Agent".Name;
                                END;
                                 }

    { 6   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000003;3;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 23  ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 7   ;3   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 8   ;3   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 9   ;3   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 10  ;3   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 11  ;3   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 12  ;3   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 13  ;3   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 14  ;3   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 15  ;3   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 16  ;3   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 17  ;3   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 18  ;3   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 19  ;3   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 20  ;3   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 21  ;3   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 22  ;3   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 24  ;3   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 25  ;3   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 26  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               SourceExpr="Salesperson/Purchaser"."First name" + ' ' +"Salesperson/Purchaser".Name }

    { 27  ;3   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 28  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 29  ;3   ;Column  ;seite               ;
               SourceExpr=seite }

    { 30  ;3   ;Column  ;var_steuernr1       ;
               SourceExpr=var_steuernr1 }

    { 31  ;3   ;Column  ;Steuernummer_Debito ;
               SourceExpr=Debito.Steuernummer }

    { 32  ;3   ;Column  ;SalesHeaderDocumentDate_0_1;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 33  ;3   ;Column  ;Bill_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Bill-to Customer No." }

    { 34  ;3   ;Column  ;No_SalesHeader      ;
               SourceExpr="Sales Header"."No." }

    { 35  ;3   ;Column  ;var_steuernr2       ;
               SourceExpr=var_steuernr2 }

    { 36  ;3   ;Column  ;VATRegistrationNo_SalesHeader;
               SourceExpr="Sales Header"."VAT Registration No." }

    { 37  ;3   ;Column  ;OurAccountNo_Debito ;
               SourceExpr=Debito."Our Account No." }

    { 38  ;3   ;Column  ;SalesHeaderExternalDocumentNo__SalesHeaderYourReference;
               SourceExpr="Sales Header"."External Document No."+' '+"Sales Header"."Your Reference" }

    { 1000000004;3;Column;Titel              ;
               SourceExpr=Titel }

    { 39  ;3   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 40  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := VerkZeile2.FIND('+');
                               WHILE MehrZeilen AND (VerkZeile2.Description = '') AND
                                     (VerkZeile2."No." = '') AND (VerkZeile2.Quantity = 0) AND
                                     (VerkZeile2.Amount = 0)
                               DO
                                 MehrZeilen := VerkZeile2.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               VerkZeile2.SETRANGE("Line No.",0,VerkZeile2."Line No.");
                               SETRANGE(Number,1,VerkZeile2.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    VerkZeile2.FIND('-')
                                  ELSE
                                    VerkZeile2.NEXT;
                                  "Sales Line" := VerkZeile2;
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "Sales Line"."VAT %";
                                  MWSTBetragZeile."VAT Base" := "Sales Line".Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Sales Line"."Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  steuer_text := MWSTBetragZeile.VATAmountText ;

                                  //20.08.09 ST - Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Line".Type = "Sales Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND ("Sales Line"."Quantity Shipped" <> "Sales Line"."Quantity (Base)") THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                VerkZeile2.DELETEALL;
                              END;

               DataItemLinkReference=SeiteSchleife }

    { 41  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 42  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100__VerkZeile2In;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100) +VerkZeile2. "Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 43  ;4   ;Column  ;Description_SalesLine;
               SourceExpr="Sales Line".Description }

    { 44  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvD;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100)+"Sales Line"."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 45  ;4   ;Column  ;UnitPrice_SalesLine ;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 46  ;4   ;Column  ;OutstandingQuantity_SalesLine;
               SourceExpr="Sales Line"."Outstanding Quantity" }

    { 47  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 48  ;4   ;Column  ;UnitofMeasure_SalesLine;
               SourceExpr="Sales Line"."Unit of Measure" }

    { 49  ;4   ;Column  ;Quantity_SalesLine  ;
               SourceExpr="Sales Line".Quantity }

    { 50  ;4   ;Column  ;No_SalesLine        ;
               SourceExpr="Sales Line"."No." }

    { 51  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_VerkZeile2Inv;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100)+VerkZeile2."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 52  ;4   ;Column  ;ROUND_VerkZeile2InvDiscountAmount_001;
               SourceExpr=ROUND(-VerkZeile2."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 53  ;4   ;Column  ;lead_free_text0     ;
               SourceExpr=lead_free_text0 }

    { 54  ;4   ;Column  ;lead_free_text1     ;
               SourceExpr=lead_free_text1 }

    { 55  ;4   ;Column  ;lead_free_text2     ;
               SourceExpr=lead_free_text2 }

    { 56  ;4   ;Column  ;lead_text           ;
               SourceExpr=lead_text }

    { 57  ;4   ;Column  ;ROUND_sum_restauftragsbestand_100_mwst_100_001;
               SourceExpr=ROUND((sum_restauftragsbestand)*(100+mwst)/(100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 58  ;4   ;Column  ;ROUND_sum_restauftragsbestand_100_mwst_001;
               SourceExpr=ROUND(((sum_restauftragsbestand)/(100)*mwst),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 59  ;4   ;Column  ;sum_restauftragsbestand;
               SourceExpr=sum_restauftragsbestand;
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 60  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 61  ;4   ;Column  ;steuer_text         ;
               SourceExpr=steuer_text }

    { 62  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 63  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnPreDataItem=BEGIN
                               IF "Sales Line"."Promised Delivery Date" = (31122053D) THEN BEGIN
                                 IF CurrReport.LANGUAGE = 1031 THEN
                                   liefert := 'Abruf'
                                 ELSE
                                   liefert := 'on call';
                               END;
                               IF "Sales Line"."Promised Delivery Date"= (31122055D) THEN BEGIN
                                 IF CurrReport.LANGUAGE = 1031 THEN
                                   liefert := 'folgt'
                                 ELSE
                                   liefert := 'To Follow';
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  IF "Sales Line".Type = "Sales Line".Type::Item THEN BEGIN
                                    IF "Sales Line"."VAT %" > 0 THEN         //sonst werden die Textzeilen mit bercksichtigt
                                      mwst := "Sales Line"."VAT %"
                                    ELSE
                                      mwst := 0;
                                  END;
                                  sum_restauftragsbestand := sum_restauftragsbestand + ROUND((("Sales Line"."Outstanding Amount")/(100+mwst)*100),0.01);
                                  IF "Sales Line"."Blanket Order No." <> '' THEN BEGIN
                                    rahmenauftragsnummer := "Sales Line"."Blanket Order No.";
                                    rahmen := TRUE;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                liefert:='';
                              END;

               DataItemLinkReference=Sales Line;
               DataItemLink=No.=FIELD(No.) }

    { 64  ;5   ;Column  ;lead_symbol         ;
               SourceExpr=lead_symbol }

    { 65  ;5   ;Column  ;ROUND_SalesLineOutstandingAmount_100_mwst_100_001;
               DecimalPlaces=2:0;
               SourceExpr=ROUND((("Sales Line"."Outstanding Amount")/(100+mwst)*100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 66  ;5   ;Column  ;LineNo_SalesLine    ;
               SourceExpr="Sales Line"."Line No." }

    { 67  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 68  ;5   ;Column  ;Artikelnr2_SalesLine;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 69  ;5   ;Column  ;Description_SalesLine4;
               SourceExpr="Sales Line".Description }

    { 70  ;5   ;Column  ;Quantity_SalesLine2 ;
               SourceExpr="Sales Line".Quantity }

    { 71  ;5   ;Column  ;OutstandingQuantity_SalesLine2;
               SourceExpr="Sales Line"."Outstanding Quantity" }

    { 72  ;5   ;Column  ;liefert             ;
               SourceExpr=liefert }

    { 73  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               SourceExpr="Country/Region of Origin Code" }

    { 74  ;5   ;Column  ;UnitPrice_SalesLine3;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 75  ;5   ;Column  ;PromisedDeliveryDate_SalesLine;
               SourceExpr="Sales Line"."Promised Delivery Date" }

    { 76  ;5   ;Column  ;Description2_SalesLine;
               SourceExpr="Sales Line"."Description 2" }

    { 77  ;5   ;Column  ;WEEE_Reg_Nr__ItemWEEE_Reg_Nr;
               SourceExpr='WEEE-Reg.-Nr.: '+ Item."WEEE-Reg.-Nr." }

    { 78  ;5   ;Column  ;Cross_ReferenceNo_SalesLine;
               SourceExpr="Sales Line"."Cross-Reference No." }

    { 79  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 80  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;

               DataItemLinkReference=SeiteSchleife }

    { 81  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 82  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 83  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 84  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               DataItemLinkReference=SeiteSchleife }

    { 85  ;4   ;Column  ;Account             ;
               SourceExpr=Account }

    { 86  ;4   ;Column  ;Description_LieferBed;
               SourceExpr=LieferBed.Description }

    { 87  ;4   ;Column  ;Description_ZlgBed  ;
               SourceExpr=ZlgBed.Description }

    { 88  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;

               DataItemLinkReference=SeiteSchleife }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 1000000000;2;Field  ;
                  Name=ProFormaInv;
                  CaptionML=DEU=ProForma Invoice;
                  SourceExpr=ProFormaInv;
                  OnValidate=BEGIN
                               IF ProFormaInv THEN
                                 CommercialInv := FALSE;
                             END;
                              }

      { 1000000001;2;Field  ;
                  Name=CommercialInv;
                  CaptionML=DEU=Commercial Invoice;
                  SourceExpr=CommercialInv;
                  OnValidate=BEGIN
                               IF CommercialInv THEN
                                 ProFormaInv := FALSE;
                             END;
                              }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      waehrung@1140000 : Code[10];
      waehrung2@1140001 : Code[10];
      FIBUEinrichtung@1140002 : Record 98;
      LieferBed@1140003 : Record 10;
      ZlgBed@1140004 : Record 3;
      Deb@1140005 : Record 18;
      Geb@1140006 : Record 286;
      suchbe@1140007 : Record 27;
      VerkEinkPerson@1140008 : Record 13;
      Firmendaten@1140009 : Record 79;
      MWSTBetragZeile@1140010 : TEMPORARY Record 290;
      "UnsereKontonr."@1140011 : Record 18;
      VerkZeile2@1140012 : TEMPORARY Record 37;
      Language@1140030 : Record 8;
      PrinterSelection@1000000002 : Record 78;
      VerkDruckZ„hler@1140013 : Codeunit 313;
      FormatAdr@1140014 : Codeunit 365;
      VerkBuchen@1140015 : Codeunit 80;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140016 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140017 : ARRAY [8] OF Text[50];
      FirmaAdr@1140018 : ARRAY [8] OF Text[50];
      Verk„uferText@1140019 : Text;
      MWStNrText@1140020 : Text;
      ReferenzText@1140021 : Text;
      TotalText@1140022 : Text;
      TotalInklMWStText@1140023 : Text;
      MehrZeilen@1140024 : Boolean;
      AnzKopien@1140025 : Integer;
      AnzSchleifen@1140026 : Integer;
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      liefert@1140031 : Code[10];
      liefert2@1140032 : Date;
      mwst@1140033 : Decimal;
      „nderung@1140034 : Text[30];
      sum_restauftragsbestand@1140035 : Decimal;
      AnzPorto@1140036 : Decimal;
      SumPorto@1140037 : Decimal;
      VerkAdr@1140038 : ARRAY [8] OF Text[50];
      "via Email"@1140039 : Text;
      "via Email_unterschrift"@1140040 : Text;
      "via EMail_adresse"@1140041 : Text;
      "ab vor wandlung"@1140042 : Text;
      Zusatz_Text1@1140043 : Text[60];
      kunde@1140044 : Record 18;
      rahmenauftragsnummer@1140045 : Code[20];
      rahmenauftr„ge@1140046 : Record 36;
      rahmen@1140047 : Boolean;
      lead_free_text0@1140048 : Text[80];
      lead_free_text1@1140049 : Text[80];
      leadfree_symbol@1140050 : Text[3];
      leadfree_artikel@1140051 : Record 27;
      lead_artikel@1140063 : Record 27;
      lead_text@1140064 : Text[120];
      lead_symbol@1140065 : Text[3];
      lead_free_text2@1140052 : Text[80];
      var_steuernr1@1140053 : Text[20];
      var_steuernr2@1140054 : Text[20];
      ansp_anrede@1140055 : Text;
      ansp_telefon@1140056 : Text;
      ansp_fax@1140057 : Text;
      steuer_text@1140058 : Text;
      seite@1140059 : Text;
      vk_zeile@1140060 : Record 37;
      Artikel@1140061 : Record 27;
      Account@1140062 : Text[50];
      Titel@1000000005 : Text;
      ProFormaInv@1000000004 : Boolean;
      CommercialInv@1000000003 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Header26@1000000072(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_TransHeader27@1000000073(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Body28@1000000074(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_TransFooter29@1000000075(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Footer30@1000000076(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header1@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS Ende
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body6@5011(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //ReportForNav.ShowOutput(VerkZeile2.Art = 0);
        // Unterdckt Artikeltexte wenn eine Artikelzeile nicht berechnet wird und die Textzeilen aus Textkonserve 'Woche'
        vk_zeile.SETFILTER("Document No.",'%1',VerkZeile2."Document No." );
        vk_zeile.SETFILTER("Line No.",'%1',VerkZeile2."Attached to Line No." );
        IF vk_zeile.FINDFIRST THEN BEGIN
          ReportForNav.ShowOutput(((vk_zeile.Type = vk_zeile.Type::Item) AND (vk_zeile."Outstanding Quantity" > 0))
                                    OR (vk_zeile.Type = 0) AND (vk_zeile."No." <> 'WOCHE'));
        END ELSE BEGIN
          IF ((VerkZeile2."Attached to Line No." = 0) AND (VerkZeile2.Type = 0) AND (VerkZeile2."No." <> 'WOCHE')) THEN
            ReportForNav.ShowOutput(TRUE)
          ELSE
            ReportForNav.ShowOutput(FALSE);
        END;
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body7@5012(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::"G/L Account") AND (VerkZeile2."Outstanding Quantity" > 0));
        IF VerkZeile2.Type = VerkZeile2.Type::"G/L Account" THEN BEGIN
          sum_restauftragsbestand := sum_restauftragsbestand + ROUND(((VerkZeile2."Outstanding Amount") / (100 + mwst) * 100),0.01);
          SumPorto := VerkZeile2.Amount;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body9@5013(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2.Type = VerkZeile2.Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer12@5014(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2."Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer13@5015(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer14@5016(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer15@5017(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '') OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer16@5018(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer17@5019(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Debito."VAT Bus. Posting Group" <> 'HAN_AUSL');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer18@5020(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Debito."VAT Bus. Posting Group" = 'HAN_AUSL');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5021(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0)
        AND ("Sales Line"."Promised Delivery Date" = 31122055D));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body20@5022(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0)
        AND (VerkZeile2."Promised Delivery Date" = 31122053D));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body21@5023(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity">0)
        AND (VerkZeile2."Promised Delivery Date" < 31122053D));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body22@5024(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2."Description 2" <> '') AND (VerkZeile2."Outstanding Quantity" > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body23@5025(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Item."WEEE-Reg.-Nr." <>'')AND (VerkZeile2."Outstanding Quantity" > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body24@5026(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0)
        AND ("Sales Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body25@5027(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Item.NCNR = TRUE) AND (VerkZeile2."Outstanding Quantity" > 0));
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header1': OnPreSectionSeiteSchleife_Header1(SeiteSchleife);
        END;
        'RundungsRahmen': CASE SectionId OF
          'Body6': OnPreSectionRundungsRahmen_Body6(RundungsRahmen);
          'Body7': OnPreSectionRundungsRahmen_Body7(RundungsRahmen);
          'Body9': OnPreSectionRundungsRahmen_Body9(RundungsRahmen);
          'Footer12': OnPreSectionRundungsRahmen_Footer12(RundungsRahmen);
          'Footer13': OnPreSectionRundungsRahmen_Footer13(RundungsRahmen);
          'Footer14': OnPreSectionRundungsRahmen_Footer14(RundungsRahmen);
          'Footer15': OnPreSectionRundungsRahmen_Footer15(RundungsRahmen);
          'Footer16': OnPreSectionRundungsRahmen_Footer16(RundungsRahmen);
          'Footer17': OnPreSectionRundungsRahmen_Footer17(RundungsRahmen);
          'Footer18': OnPreSectionRundungsRahmen_Footer18(RundungsRahmen);
        END;
        'Item': CASE SectionId OF
          'Body19': OnPreSectionItem_Body19(Item);
          'Body20': OnPreSectionItem_Body20(Item);
          'Body21': OnPreSectionItem_Body21(Item);
          'Body22': OnPreSectionItem_Body22(Item);
          'Body23': OnPreSectionItem_Body23(Item);
          'Body24': OnPreSectionItem_Body24(Item);
          'Body25': OnPreSectionItem_Body25(Item);
        END;
        'MWStZahler': CASE SectionId OF
          'Header26': OnPreSectionMWStZahler_Header26(MWStZ„hler);
          'TransHeader27': OnPreSectionMWStZahler_TransHeader27(MWStZ„hler);
          'Body28': OnPreSectionMWStZahler_Body28(MWStZ„hler);
          'TransFooter29': OnPreSectionMWStZahler_TransFooter29(MWStZ„hler);
          'Footer30': OnPreSectionMWStZahler_Footer30(MWStZ„hler);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,VerkZeile2."Outstanding Amount");
                ReportForNav.AddTotal(DataItemId,1,VerkZeile2."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,VerkZeile2."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 VerkZeile2."Outstanding Amount" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 VerkZeile2."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 VerkZeile2."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="ansp_fax">
          <DataField>ansp_fax</DataField>
        </Field>
        <Field Name="ansp_telefon">
          <DataField>ansp_telefon</DataField>
        </Field>
        <Field Name="Salesperson_Purchaserfirstname__Salesperson_PurchaserName">
          <DataField>Salesperson_Purchaserfirstname__Salesperson_PurchaserName</DataField>
        </Field>
        <Field Name="ansp_anrede">
          <DataField>ansp_anrede</DataField>
        </Field>
        <Field Name="E_Mail_Salesperson_Purchaser">
          <DataField>E_Mail_Salesperson_Purchaser</DataField>
        </Field>
        <Field Name="seite">
          <DataField>seite</DataField>
        </Field>
        <Field Name="var_steuernr1">
          <DataField>var_steuernr1</DataField>
        </Field>
        <Field Name="Steuernummer_Debito">
          <DataField>Steuernummer_Debito</DataField>
        </Field>
        <Field Name="SalesHeaderDocumentDate_0_1">
          <DataField>SalesHeaderDocumentDate_0_1</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesHeader">
          <DataField>Bill_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="var_steuernr2">
          <DataField>var_steuernr2</DataField>
        </Field>
        <Field Name="VATRegistrationNo_SalesHeader">
          <DataField>VATRegistrationNo_SalesHeader</DataField>
        </Field>
        <Field Name="OurAccountNo_Debito">
          <DataField>OurAccountNo_Debito</DataField>
        </Field>
        <Field Name="SalesHeaderExternalDocumentNo__SalesHeaderYourReference">
          <DataField>SalesHeaderExternalDocumentNo__SalesHeaderYourReference</DataField>
        </Field>
        <Field Name="Titel">
          <DataField>Titel</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100__VerkZeile2In">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100__VerkZeile2In</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100__VerkZeile2InFormat">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100__VerkZeile2InFormat</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvD">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvD</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvDFormat">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_SalesLineInvDFormat</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine">
          <DataField>UnitPrice_SalesLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLineFormat">
          <DataField>UnitPrice_SalesLineFormat</DataField>
        </Field>
        <Field Name="OutstandingQuantity_SalesLine">
          <DataField>OutstandingQuantity_SalesLine</DataField>
        </Field>
        <Field Name="OutstandingQuantity_SalesLineFormat">
          <DataField>OutstandingQuantity_SalesLineFormat</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001Format">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001Format</DataField>
        </Field>
        <Field Name="UnitofMeasure_SalesLine">
          <DataField>UnitofMeasure_SalesLine</DataField>
        </Field>
        <Field Name="Quantity_SalesLine">
          <DataField>Quantity_SalesLine</DataField>
        </Field>
        <Field Name="Quantity_SalesLineFormat">
          <DataField>Quantity_SalesLineFormat</DataField>
        </Field>
        <Field Name="No_SalesLine">
          <DataField>No_SalesLine</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_VerkZeile2Inv">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_VerkZeile2Inv</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2OutstandingAmount_100_mwst_100_VerkZeile2InvFormat">
          <DataField>ROUND_VerkZeile2OutstandingAmount_100_mwst_100_VerkZeile2InvFormat</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2InvDiscountAmount_001">
          <DataField>ROUND_VerkZeile2InvDiscountAmount_001</DataField>
        </Field>
        <Field Name="ROUND_VerkZeile2InvDiscountAmount_001Format">
          <DataField>ROUND_VerkZeile2InvDiscountAmount_001Format</DataField>
        </Field>
        <Field Name="lead_free_text0">
          <DataField>lead_free_text0</DataField>
        </Field>
        <Field Name="lead_free_text1">
          <DataField>lead_free_text1</DataField>
        </Field>
        <Field Name="lead_free_text2">
          <DataField>lead_free_text2</DataField>
        </Field>
        <Field Name="lead_text">
          <DataField>lead_text</DataField>
        </Field>
        <Field Name="ROUND_sum_restauftragsbestand_100_mwst_100_001">
          <DataField>ROUND_sum_restauftragsbestand_100_mwst_100_001</DataField>
        </Field>
        <Field Name="ROUND_sum_restauftragsbestand_100_mwst_100_001Format">
          <DataField>ROUND_sum_restauftragsbestand_100_mwst_100_001Format</DataField>
        </Field>
        <Field Name="ROUND_sum_restauftragsbestand_100_mwst_001">
          <DataField>ROUND_sum_restauftragsbestand_100_mwst_001</DataField>
        </Field>
        <Field Name="ROUND_sum_restauftragsbestand_100_mwst_001Format">
          <DataField>ROUND_sum_restauftragsbestand_100_mwst_001Format</DataField>
        </Field>
        <Field Name="sum_restauftragsbestand">
          <DataField>sum_restauftragsbestand</DataField>
        </Field>
        <Field Name="sum_restauftragsbestandFormat">
          <DataField>sum_restauftragsbestandFormat</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="steuer_text">
          <DataField>steuer_text</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="lead_symbol">
          <DataField>lead_symbol</DataField>
        </Field>
        <Field Name="ROUND_SalesLineOutstandingAmount_100_mwst_100_001">
          <DataField>ROUND_SalesLineOutstandingAmount_100_mwst_100_001</DataField>
        </Field>
        <Field Name="ROUND_SalesLineOutstandingAmount_100_mwst_100_001Format">
          <DataField>ROUND_SalesLineOutstandingAmount_100_mwst_100_001Format</DataField>
        </Field>
        <Field Name="LineNo_SalesLine">
          <DataField>LineNo_SalesLine</DataField>
        </Field>
        <Field Name="Herstellerkurzname_Item">
          <DataField>Herstellerkurzname_Item</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesLine">
          <DataField>Artikelnr2_SalesLine</DataField>
        </Field>
        <Field Name="Description_SalesLine4">
          <DataField>Description_SalesLine4</DataField>
        </Field>
        <Field Name="Quantity_SalesLine2">
          <DataField>Quantity_SalesLine2</DataField>
        </Field>
        <Field Name="Quantity_SalesLine2Format">
          <DataField>Quantity_SalesLine2Format</DataField>
        </Field>
        <Field Name="OutstandingQuantity_SalesLine2">
          <DataField>OutstandingQuantity_SalesLine2</DataField>
        </Field>
        <Field Name="OutstandingQuantity_SalesLine2Format">
          <DataField>OutstandingQuantity_SalesLine2Format</DataField>
        </Field>
        <Field Name="liefert">
          <DataField>liefert</DataField>
        </Field>
        <Field Name="Country_RegionofOriginCode_Item">
          <DataField>Country_RegionofOriginCode_Item</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine3">
          <DataField>UnitPrice_SalesLine3</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine3Format">
          <DataField>UnitPrice_SalesLine3Format</DataField>
        </Field>
        <Field Name="PromisedDeliveryDate_SalesLine">
          <DataField>PromisedDeliveryDate_SalesLine</DataField>
        </Field>
        <Field Name="Description2_SalesLine">
          <DataField>Description2_SalesLine</DataField>
        </Field>
        <Field Name="WEEE_Reg_Nr__ItemWEEE_Reg_Nr">
          <DataField>WEEE_Reg_Nr__ItemWEEE_Reg_Nr</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesLine">
          <DataField>Cross_ReferenceNo_SalesLine</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="Account">
          <DataField>Account</DataField>
        </Field>
        <Field Name="Description_LieferBed">
          <DataField>Description_LieferBed</DataField>
        </Field>
        <Field Name="Description_ZlgBed">
          <DataField>Description_ZlgBed</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

