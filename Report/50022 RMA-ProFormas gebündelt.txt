OBJECT Report 50022 RMA-ProFormas gebndelt
{
  OBJECT-PROPERTIES
  {
    Date=04.08.17;
    Time=08:48:26;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS("ISO Logo",Picture);
                 END;

    OnPreReport=BEGIN
                  anschrift_holen := TRUE;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;RMA-Header          ;
               DataItemTable=Table50021;
               DataItemTableView=WHERE(Belegart=FILTER(an Hersteller),
                                       Ausblenden=FILTER(No));
               OnAfterGetRecord=BEGIN
                                  TariffNo := '';
                                  Artikel.RESET;
                                  IF Artikel.GET("Artikelnr.") THEN BEGIN
                                    TariffNo := Artikel."Tariff No.";
                                    Artikelnr := Artikel."No. 2";
                                  END ELSE
                                    Artikelnr := "Artikelnr.";
                                  /////W„hrungscode 0 durch Euro ersetzen\\\\\
                                  IF "EK-W„hrung" = '' THEN
                                    W„hrung := 'EUR'
                                  ELSE
                                    W„hrung := "EK-W„hrung";
                                END;

               ReqFilterFields=RMA-Nr. }

    { 1000000000;1;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 2   ;1   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 3   ;1   ;Column  ;seite               ;
               SourceExpr=seite }

    { 4   ;1   ;Column  ;WORKDATE            ;
               SourceExpr=WORKDATE }

    { 5   ;1   ;Column  ;RMA_Nr              ;
               SourceExpr=RMA_Nr }

    { 1000000006;1;Column;Andruck1           ;
               SourceExpr=Andruck[1] }

    { 1000000005;1;Column;Andruck2           ;
               SourceExpr=Andruck[2] }

    { 1000000004;1;Column;Andruck3           ;
               SourceExpr=Andruck[3] }

    { 1000000003;1;Column;Andruck4           ;
               SourceExpr=Andruck[4] }

    { 1000000002;1;Column;Andruck5           ;
               SourceExpr=Andruck[5] }

    { 1000000001;1;Column;Andruck6           ;
               SourceExpr=Andruck[6] }

    { 1000000008;1;Column;Andruck7           ;
               SourceExpr=Andruck[7] }

    { 1000000007;1;Column;Andruck8           ;
               SourceExpr=Andruck[8] }

    { 13  ;1   ;Column  ;Manufac             ;
               SourceExpr=Manufac }

    { 14  ;1   ;Column  ;RMA_Nr_RMA_Header   ;
               SourceExpr="RMA-Nr." }

    { 15  ;1   ;Column  ;Description_Artikel ;
               SourceExpr=Artikel.Description }

    { 16  ;1   ;Column  ;SN_Nr_DC_RMA_Header ;
               SourceExpr="SN-Nr. / DC" }

    { 17  ;1   ;Column  ;RMA_NrHersteller_RMA_Header;
               SourceExpr="RMA-Nr. Hersteller" }

    { 18  ;1   ;Column  ;TariffNo            ;
               SourceExpr=TariffNo }

    { 19  ;1   ;Column  ;Wahrung_RMA_Header  ;
               SourceExpr=W„hrung }

    { 20  ;1   ;Column  ;EK_Wahrung_RMA_Header;
               SourceExpr="EK-W„hrung" }

    { 21  ;1   ;Column  ;Ursprungsland_RMA_Header;
               SourceExpr=Ursprungsland }

    { 22  ;1   ;Column  ;Amount              ;
               SourceExpr=Amount }

    { 23  ;1   ;Column  ;ursprDC_PreisEK_Lieferung_RMA_Header;
               SourceExpr="urspr. DC-Preis EK-Lieferung" }

    { 24  ;1   ;Column  ;MengeSN_Nr_DC_RMA_Header;
               DecimalPlaces=0:0;
               SourceExpr="Menge SN-Nr. / DC" }

    { 25  ;1   ;Column  ;Artikelnr           ;
               SourceExpr=Artikelnr }

    { 26  ;1   ;Column  ;Anzahl_Zeile        ;
               SourceExpr=Anzahl_Zeile }

    { 27  ;1   ;Column  ;Totalamount         ;
               SourceExpr=Totalamount }

    { 28  ;1   ;DataItem;                    ;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(an Hersteller),
                                       Andruck=FILTER(Text oben));
               DataItemLink=Nr.=FIELD(RMA-Nr.) }

    { 29  ;1   ;DataItem;Textunten           ;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(an Hersteller),
                                       Andruck=FILTER(Text unten));
               DataItemLink=Nr.=FIELD(RMA-Nr.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Country@1140020 : Record 9;
      Firmendaten@1000000001 : Record 79;
      Artikel@1000000003 : Record 27;
      Manufacturer@1000000002 : Record 5720;
      RMA_Zeile@1000000007 : Record 50021;
      Anschrift@1000000006 : Record 50022;
      Kontakt@1000000005 : Record 5050;
      Language@1000000004 : Record 8;
      FormatAddr@1000000008 : Codeunit 365;
      Amount@1140019 : Decimal;
      Totalamount@1140018 : Decimal;
      Anzahl_Zeile@1140015 : Integer;
      Andruck@1000000000 : ARRAY [8] OF Text;
      w„hrung@1140004 : Text[30];
      TariffNo@1140003 : Code[10];
      Artikelnr@1140002 : Code[40];
      Manufac@1140001 : Text[50];
      seite@1140000 : Text[30];
      anschrift_holen@1140021 : Boolean;
      RMA_Nr@1140022 : Code[20];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionRMA_Header_Header1@5107(VAR "RMA-Header"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Header" DO BEGIN
        IF anschrift_holen = TRUE THEN BEGIN
          Anschrift.RESET;
          Anschrift.SETRANGE("RMA-Nr.","RMA-Nr.");
          Anschrift.SETRANGE(Art,Anschrift.Art :: Hersteller);
          Anschrift.SETRANGE(Fhrungsrolle,TRUE);
          IF Anschrift.FINDFIRST THEN BEGIN
            Kontakt.GET(Anschrift."Kontakt Mandantennr.");
            CurrReport.LANGUAGE := Language.GetLanguageID(Kontakt."Language Code");
            anschrift_holen := FALSE;
            FormatAddr.FormatAddr(Andruck,Anschrift.Name,Anschrift."Name 2",'',Anschrift.Adresse,Anschrift."Adresse 2",
            Anschrift.Ort,Anschrift."PLZ-Code",'',Anschrift."L„nder-/Regionscode");
          END ELSE
            ReportForNav.ShowOutput(FALSE);
        END;
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Header_Body2@5108(VAR "RMA-Header"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Header" DO BEGIN
        ReportForNav.ShowOutput(Belegart = Belegart::"an Hersteller");
        IF  Belegart = Belegart::"an Hersteller" THEN BEGIN
          Amount := ROUND(("Menge SN-Nr. / DC") * ("urspr. DC-Preis EK-Lieferung"),0.01);
          Totalamount += Amount;
          Anzahl_Zeile += 1;
        END;
        IF Manufacturer.GET(Herstellercode) THEN
          Manufac := Manufacturer.Name
        ELSE
          Manufac := '';
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RMA_Header': CASE SectionId OF
          'Header1': OnPreSectionRMA_Header_Header1("RMA-Header");
          'Body2': OnPreSectionRMA_Header_Body2("RMA-Header");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>982e7532-c278-4f55-8821-0d658e758ebc</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>528daeda-3af6-4d2b-9d0d-1b2fa9596cd4</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="seite">
          <DataField>seite</DataField>
        </Field>
        <Field Name="WORKDATE">
          <DataField>WORKDATE</DataField>
        </Field>
        <Field Name="RMA_Nr">
          <DataField>RMA_Nr</DataField>
        </Field>
        <Field Name="Andruck1">
          <DataField>Andruck1</DataField>
        </Field>
        <Field Name="Andruck2">
          <DataField>Andruck2</DataField>
        </Field>
        <Field Name="Andruck3">
          <DataField>Andruck3</DataField>
        </Field>
        <Field Name="Andruck4">
          <DataField>Andruck4</DataField>
        </Field>
        <Field Name="Andruck5">
          <DataField>Andruck5</DataField>
        </Field>
        <Field Name="Andruck6">
          <DataField>Andruck6</DataField>
        </Field>
        <Field Name="Andruck7">
          <DataField>Andruck7</DataField>
        </Field>
        <Field Name="Andruck8">
          <DataField>Andruck8</DataField>
        </Field>
        <Field Name="Manufac">
          <DataField>Manufac</DataField>
        </Field>
        <Field Name="RMA_Nr_RMA_Header">
          <DataField>RMA_Nr_RMA_Header</DataField>
        </Field>
        <Field Name="Description_Artikel">
          <DataField>Description_Artikel</DataField>
        </Field>
        <Field Name="SN_Nr_DC_RMA_Header">
          <DataField>SN_Nr_DC_RMA_Header</DataField>
        </Field>
        <Field Name="RMA_NrHersteller_RMA_Header">
          <DataField>RMA_NrHersteller_RMA_Header</DataField>
        </Field>
        <Field Name="TariffNo">
          <DataField>TariffNo</DataField>
        </Field>
        <Field Name="Wahrung_RMA_Header">
          <DataField>Wahrung_RMA_Header</DataField>
        </Field>
        <Field Name="EK_Wahrung_RMA_Header">
          <DataField>EK_Wahrung_RMA_Header</DataField>
        </Field>
        <Field Name="Ursprungsland_RMA_Header">
          <DataField>Ursprungsland_RMA_Header</DataField>
        </Field>
        <Field Name="Amount">
          <DataField>Amount</DataField>
        </Field>
        <Field Name="AmountFormat">
          <DataField>AmountFormat</DataField>
        </Field>
        <Field Name="ursprDC_PreisEK_Lieferung_RMA_Header">
          <DataField>ursprDC_PreisEK_Lieferung_RMA_Header</DataField>
        </Field>
        <Field Name="ursprDC_PreisEK_Lieferung_RMA_HeaderFormat">
          <DataField>ursprDC_PreisEK_Lieferung_RMA_HeaderFormat</DataField>
        </Field>
        <Field Name="MengeSN_Nr_DC_RMA_Header">
          <DataField>MengeSN_Nr_DC_RMA_Header</DataField>
        </Field>
        <Field Name="MengeSN_Nr_DC_RMA_HeaderFormat">
          <DataField>MengeSN_Nr_DC_RMA_HeaderFormat</DataField>
        </Field>
        <Field Name="Artikelnr">
          <DataField>Artikelnr</DataField>
        </Field>
        <Field Name="Anzahl_Zeile">
          <DataField>Anzahl_Zeile</DataField>
        </Field>
        <Field Name="Totalamount">
          <DataField>Totalamount</DataField>
        </Field>
        <Field Name="TotalamountFormat">
          <DataField>TotalamountFormat</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

