OBJECT Report 50022 RMA-ProFormas gebndelt
{
  OBJECT-PROPERTIES
  {
    Date=02.02.18;
    Time=11:41:46;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS("ISO Logo",Picture);
                 END;

    OnPreReport=BEGIN
                  anschrift_holen := TRUE;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;RMA-Header          ;
               DataItemTable=Table50021;
               DataItemTableView=WHERE(Belegart=FILTER(an Hersteller),
                                       Ausblenden=FILTER(No));
               OnAfterGetRecord=BEGIN
                                  IF anschrift_holen = TRUE THEN BEGIN
                                    Anschrift.RESET;
                                    Anschrift.SETRANGE("RMA-Nr.","RMA-Nr.");
                                    Anschrift.SETRANGE(Art,Anschrift.Art::Hersteller);
                                    Anschrift.SETRANGE(Fhrungsrolle,TRUE);
                                    IF Anschrift.FINDFIRST THEN BEGIN
                                      Kontakt.GET(Anschrift."Kontakt Mandantennr.");
                                      CurrReport.LANGUAGE := Language.GetLanguageID(Kontakt."Language Code");
                                      anschrift_holen := FALSE;
                                      FormatAddr.FormatAddr(Andruck,Anschrift.Name,Anschrift."Name 2",'',Anschrift.Adresse,Anschrift."Adresse 2",
                                      Anschrift.Ort,Anschrift."PLZ-Code",'',Anschrift."L„nder-/Regionscode");
                                    END ELSE
                                      ReportForNav.ShowOutput(FALSE);
                                  END;
                                  IF CurrReport.LANGUAGE = 1031 THEN
                                    seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
                                  ELSE
                                    seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));

                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);

                                  TariffNo := '';
                                  Artikel.RESET;
                                  IF Artikel.GET("Artikelnr.") THEN BEGIN
                                    TariffNo := Artikel."Tariff No.";
                                    Artikelnr := Artikel."No. 2";
                                  END ELSE
                                    Artikelnr := "Artikelnr.";
                                  /////W„hrungscode 0 durch Euro ersetzen\\\\\
                                  IF "EK-W„hrung" = '' THEN
                                    W„hrung := 'EUR'
                                  ELSE
                                    W„hrung := "EK-W„hrung";
                                END;

               ReqFilterFields=RMA-Nr. }

    { 1000000000;1;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 2   ;1   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000020;1;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000019;1;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ', ' + CompanyInfo[5] }

    { 1000000018;1;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000017;1;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000016;1;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000015;1;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000014;1;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;1;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;1;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;1;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;1;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000009;1;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 3   ;1   ;Column  ;seite               ;
               SourceExpr=seite }

    { 4   ;1   ;Column  ;WORKDATE            ;
               SourceExpr=WORKDATE }

    { 5   ;1   ;Column  ;RMA_Nr              ;
               SourceExpr=RMA_Nr }

    { 1000000006;1;Column;Andruck1           ;
               SourceExpr=Andruck[1] }

    { 1000000005;1;Column;Andruck2           ;
               SourceExpr=Andruck[2] }

    { 1000000004;1;Column;Andruck3           ;
               SourceExpr=Andruck[3] }

    { 1000000003;1;Column;Andruck4           ;
               SourceExpr=Andruck[4] }

    { 1000000002;1;Column;Andruck5           ;
               SourceExpr=Andruck[5] }

    { 1000000001;1;Column;Andruck6           ;
               SourceExpr=Andruck[6] }

    { 1000000008;1;Column;Andruck7           ;
               SourceExpr=Andruck[7] }

    { 1000000007;1;Column;Andruck8           ;
               SourceExpr=Andruck[8] }

    { 13  ;1   ;Column  ;Manufac             ;
               SourceExpr=Manufac }

    { 14  ;1   ;Column  ;RMA_Nr_RMA_Header   ;
               SourceExpr="RMA-Nr." }

    { 15  ;1   ;Column  ;Description_Artikel ;
               SourceExpr=Artikel.Description }

    { 16  ;1   ;Column  ;SN_Nr_DC_RMA_Header ;
               SourceExpr="SN-Nr. / DC" }

    { 17  ;1   ;Column  ;RMA_NrHersteller_RMA_Header;
               SourceExpr="RMA-Nr. Hersteller" }

    { 18  ;1   ;Column  ;TariffNo            ;
               SourceExpr=TariffNo }

    { 19  ;1   ;Column  ;Wahrung_RMA_Header  ;
               SourceExpr=W„hrung }

    { 20  ;1   ;Column  ;EK_Wahrung_RMA_Header;
               SourceExpr="EK-W„hrung" }

    { 21  ;1   ;Column  ;Ursprungsland_RMA_Header;
               SourceExpr=Ursprungsland }

    { 22  ;1   ;Column  ;Amount              ;
               SourceExpr=Amount }

    { 23  ;1   ;Column  ;ursprDC_PreisEK_Lieferung_RMA_Header;
               SourceExpr="urspr. DC-Preis EK-Lieferung" }

    { 24  ;1   ;Column  ;MengeSN_Nr_DC_RMA_Header;
               DecimalPlaces=0:0;
               SourceExpr="Menge SN-Nr. / DC" }

    { 25  ;1   ;Column  ;Artikelnr           ;
               SourceExpr=Artikelnr }

    { 26  ;1   ;Column  ;Anzahl_Zeile        ;
               SourceExpr=Anzahl_Zeile }

    { 27  ;1   ;Column  ;Totalamount         ;
               SourceExpr=Totalamount }

    { 28  ;1   ;DataItem;                    ;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(an Hersteller),
                                       Andruck=FILTER(Text oben));
               DataItemLink=Nr.=FIELD(RMA-Nr.) }

    { 29  ;1   ;DataItem;Textunten           ;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(an Hersteller),
                                       Andruck=FILTER(Text unten));
               DataItemLink=Nr.=FIELD(RMA-Nr.) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Country@1140020 : Record 9;
      Firmendaten@1000000001 : Record 79;
      Artikel@1000000003 : Record 27;
      Manufacturer@1000000002 : Record 5720;
      RMA_Zeile@1000000007 : Record 50021;
      Anschrift@1000000006 : Record 50022;
      Kontakt@1000000005 : Record 5050;
      Language@1000000004 : Record 8;
      FormatAddr@1000000008 : Codeunit 365;
      TOPAS_Funktionen@1000000010 : Codeunit 50006;
      CompanyInfo@1000000009 : ARRAY [15] OF Text;
      Amount@1140019 : Decimal;
      Totalamount@1140018 : Decimal;
      Anzahl_Zeile@1140015 : Integer;
      Andruck@1000000000 : ARRAY [8] OF Text;
      w„hrung@1140004 : Text[30];
      TariffNo@1140003 : Code[10];
      Artikelnr@1140002 : Code[40];
      Manufac@1140001 : Text[50];
      seite@1140000 : Text[30];
      anschrift_holen@1140021 : Boolean;
      RMA_Nr@1140022 : Code[20];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionRMA_Header_Header1@5107(VAR "RMA-Header"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Header" DO BEGIN
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Header_Body2@5108(VAR "RMA-Header"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Header" DO BEGIN
        ReportForNav.ShowOutput(Belegart = Belegart::"an Hersteller");
        IF  Belegart = Belegart::"an Hersteller" THEN BEGIN
          Amount := ROUND(("Menge SN-Nr. / DC") * ("urspr. DC-Preis EK-Lieferung"),0.01);
          Totalamount += Amount;
          Anzahl_Zeile += 1;
        END;
        IF Manufacturer.GET(Herstellercode) THEN
          Manufac := Manufacturer.Name
        ELSE
          Manufac := '';
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RMA_Header': CASE SectionId OF
          'Header1': OnPreSectionRMA_Header_Header1("RMA-Header");
          'Body2': OnPreSectionRMA_Header_Body2("RMA-Header");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>982e7532-c278-4f55-8821-0d658e758ebc</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>528daeda-3af6-4d2b-9d0d-1b2fa9596cd4</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="seite">
          <DataField>seite</DataField>
        </Field>
        <Field Name="WORKDATE">
          <DataField>WORKDATE</DataField>
        </Field>
        <Field Name="RMA_Nr">
          <DataField>RMA_Nr</DataField>
        </Field>
        <Field Name="Andruck1">
          <DataField>Andruck1</DataField>
        </Field>
        <Field Name="Andruck2">
          <DataField>Andruck2</DataField>
        </Field>
        <Field Name="Andruck3">
          <DataField>Andruck3</DataField>
        </Field>
        <Field Name="Andruck4">
          <DataField>Andruck4</DataField>
        </Field>
        <Field Name="Andruck5">
          <DataField>Andruck5</DataField>
        </Field>
        <Field Name="Andruck6">
          <DataField>Andruck6</DataField>
        </Field>
        <Field Name="Andruck7">
          <DataField>Andruck7</DataField>
        </Field>
        <Field Name="Andruck8">
          <DataField>Andruck8</DataField>
        </Field>
        <Field Name="Manufac">
          <DataField>Manufac</DataField>
        </Field>
        <Field Name="RMA_Nr_RMA_Header">
          <DataField>RMA_Nr_RMA_Header</DataField>
        </Field>
        <Field Name="Description_Artikel">
          <DataField>Description_Artikel</DataField>
        </Field>
        <Field Name="SN_Nr_DC_RMA_Header">
          <DataField>SN_Nr_DC_RMA_Header</DataField>
        </Field>
        <Field Name="RMA_NrHersteller_RMA_Header">
          <DataField>RMA_NrHersteller_RMA_Header</DataField>
        </Field>
        <Field Name="TariffNo">
          <DataField>TariffNo</DataField>
        </Field>
        <Field Name="Wahrung_RMA_Header">
          <DataField>Wahrung_RMA_Header</DataField>
        </Field>
        <Field Name="EK_Wahrung_RMA_Header">
          <DataField>EK_Wahrung_RMA_Header</DataField>
        </Field>
        <Field Name="Ursprungsland_RMA_Header">
          <DataField>Ursprungsland_RMA_Header</DataField>
        </Field>
        <Field Name="Amount">
          <DataField>Amount</DataField>
        </Field>
        <Field Name="AmountFormat">
          <DataField>AmountFormat</DataField>
        </Field>
        <Field Name="ursprDC_PreisEK_Lieferung_RMA_Header">
          <DataField>ursprDC_PreisEK_Lieferung_RMA_Header</DataField>
        </Field>
        <Field Name="ursprDC_PreisEK_Lieferung_RMA_HeaderFormat">
          <DataField>ursprDC_PreisEK_Lieferung_RMA_HeaderFormat</DataField>
        </Field>
        <Field Name="MengeSN_Nr_DC_RMA_Header">
          <DataField>MengeSN_Nr_DC_RMA_Header</DataField>
        </Field>
        <Field Name="MengeSN_Nr_DC_RMA_HeaderFormat">
          <DataField>MengeSN_Nr_DC_RMA_HeaderFormat</DataField>
        </Field>
        <Field Name="Artikelnr">
          <DataField>Artikelnr</DataField>
        </Field>
        <Field Name="Anzahl_Zeile">
          <DataField>Anzahl_Zeile</DataField>
        </Field>
        <Field Name="Totalamount">
          <DataField>Totalamount</DataField>
        </Field>
        <Field Name="TotalamountFormat">
          <DataField>TotalamountFormat</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

