OBJECT Report 50181 Musterausgangsliste n. Excel
{
  OBJECT-PROPERTIES
  {
    Date=28.11.18;
    Time=10:25:28;
    Modified=Yes;
    Version List=TOPAS, NEU;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  IF DoUpdateExistingWorksheet THEN BEGIN
                    IF ServerFileName = '' THEN
                      ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
                    IF ServerFileName = '' THEN
                      EXIT;
                    SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
                    IF SheetName = '' THEN
                      EXIT;
                  END;

                  Window.OPEN(
                    Text000 +
                    '@1@@@@@@@@@@@@@@@@@@@@@\');

                  TempExcelBuffer.DELETEALL;
                  CLEAR(TempExcelBuffer);

                  //Header
                  RecNo := 0;
                  RowNo := 1;
                  ColumnNo := 1;
                  EnterCell(RowNo,ColumnNo,Text020,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text021,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text022,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text023,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text024,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text025,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text026,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text027,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text028,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text029,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text030,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text031,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text032,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text033,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text034,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text035,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text036,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text037,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text038,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text039,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text040,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text041,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text042,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text043,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text044,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text045,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text046,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text047,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text048,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text049,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text050,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  RowNo := 2;
                END;

    OnPostReport=BEGIN
                   FinishExcel;
                 END;

  }
  DATASET
  {
    { 1000000000;;DataItem;                  ;
               DataItemTable=Table50029;
               OnPreDataItem=BEGIN
                               TotalRecNo := Musterberwachung.COUNT;
                             END;

               OnAfterGetRecord=BEGIN
                                  RecNo := RecNo + 1;
                                  Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
                                END;
                                 }

    { 1000000001;1;Column;Nummer             ;
               SourceExpr=Musterberwachung.Nr }

    { 1000000002;1;DataItem;                 ;
               DataItemTable=Table112;
               DataItemLink=Order No.=FIELD(Nr) }

    { 1000000003;2;Column;Nummer2            ;
               SourceExpr="Sales Invoice Header"."No." }

    { 1000000004;2;DataItem;                 ;
               DataItemTable=Table113;
               DataItemTableView=WHERE(Type=FILTER(Item),
                                       Quantity=FILTER(>0),
                                       Location Code=FILTER(MUST));
               OnAfterGetRecord=BEGIN
                                  ColumnNo := 1;
                                  EnterCell(RowNo,ColumnNo,"Sales Invoice Header"."Salesperson Code"+ '/' + "Sales Invoice Header"."Betreuer Innendienst",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT("Sales Invoice Header"."Posting Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,"Sales Invoice Line"."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT("Sales Invoice Line".Quantity),'',FALSE,FALSE,FALSE,'########',TempExcelBuffer."Cell Type"::Number);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,"Sales Invoice Header"."Sell-to Customer Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;

                                  IF Musterberwachung.Applikation = '' THEN BEGIN
                                    IF Musterberwachung.Projektname = '' THEN BEGIN
                                      ToDo.RESET;
                                      ToDo.SETFILTER("No.",Musterberwachung.Aufgabennr);
                                      IF ToDo.FINDFIRST THEN BEGIN
                                        ToDo.CALCFIELDS("Campaign Description");
                                        EnterCell(RowNo,ColumnNo,ToDo."Campaign Description",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      END ELSE BEGIN
                                        EnterCell(RowNo,ColumnNo,'','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      END;
                                    END ELSE BEGIN
                                      EnterCell(RowNo,ColumnNo,Musterberwachung.Projektname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                    END;
                                  END ELSE BEGIN
                                    EnterCell(RowNo,ColumnNo,Musterberwachung.Applikation,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  END;
                                  ColumnNo := ColumnNo + 1;

                                  IF (COPYSTR(Musterberwachung.Potenzial,1,3) < '500')  AND (COPYSTR(Musterberwachung.Potenzial,4,1) = '') AND (STRPOS(UPPERCASE(Musterberwachung.Potenzial),'K') = 0)
                                  AND (Musterberwachung.Potenzial <> '') THEN
                                    EnterCell(RowNo,ColumnNo,'1-499','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text)
                                  ELSE BEGIN
                                    IF (COPYSTR(Musterberwachung.Potenzial,1,3) = '500') AND (STRLEN(Musterberwachung.Potenzial) = 3) AND (STRPOS(UPPERCASE(Musterberwachung.Potenzial),'K') = 0) THEN BEGIN
                                      EnterCell(RowNo,ColumnNo,'500-<5K','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                    END ELSE BEGIN
                                      IF (((COPYSTR(Musterberwachung.Potenzial,1,3) > '500') AND (COPYSTR(Musterberwachung.Potenzial,1,3) <= '999') AND (STRLEN(Musterberwachung.Potenzial) = 3))
                                      OR ((COPYSTR(Musterberwachung.Potenzial,1,4) >= '1000') AND (COPYSTR(Musterberwachung.Potenzial,1,4) <= '5000') AND (STRLEN(Musterberwachung.Potenzial) = 4)))
                                      AND (STRPOS(UPPERCASE(Musterberwachung.Potenzial),'K') = 0) THEN BEGIN
                                        EnterCell(RowNo,ColumnNo,'500-<5K','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      END;
                                    END;
                                  END;

                                  IF NOT TempExcelBuffer.GET(RowNo,ColumnNo) THEN BEGIN
                                    CASE UPPERCASE(Musterberwachung.Potenzial) OF
                                      '1K','2K','3K','4K' :
                                        EnterCell(RowNo,ColumnNo,'500-<5K','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      '5K','5K+','6K','7K','8K','9K','10K','11K','12K','13K','14K','15K','20K','50K','100K','150K','200K','250K' :
                                        EnterCell(RowNo,ColumnNo,'5K+','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                    END;
                                  END;
                                  IF NOT TempExcelBuffer.GET(RowNo,ColumnNo) THEN
                                    CASE UPPERCASE(COPYSTR(Musterberwachung.Potenzial,1,2)) OF
                                      '1K','2K','3K','4K' :
                                        EnterCell(RowNo,ColumnNo,'500-<5K','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                    END;

                                  ColumnNo := ColumnNo + 1;

                                  IF Musterberwachung.Status = 0 THEN
                                    EnterCell(RowNo,ColumnNo,'follow up','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 1 THEN
                                    EnterCell(RowNo,ColumnNo,'evaluating','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 2 THEN
                                    EnterCell(RowNo,ColumnNo,'approved','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 3 THEN
                                    EnterCell(RowNo,ColumnNo,'approved','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 4 THEN
                                    EnterCell(RowNo,ColumnNo,'not approved','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 5 THEN
                                    EnterCell(RowNo,ColumnNo,'not approved','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 6 THEN
                                    EnterCell(RowNo,ColumnNo,'not approved','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 7 THEN
                                    EnterCell(RowNo,ColumnNo,' ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 8 THEN
                                    EnterCell(RowNo,ColumnNo,'pending','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung.Nachverfolgung,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung."Stock Topas",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,"Sales Invoice Header"."Sell-to Customer No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,"Sales Invoice Header"."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung.Projektname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;

                                  IF Musterberwachung."letzte Žnderung" <> 0D THEN
                                    EnterCell(RowNo,ColumnNo,FORMAT(Musterberwachung."letzte Žnderung"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                  ColumnNo := ColumnNo + 1;
                                  ToDo.SETFILTER(ToDo."No.",Musterberwachung.Aufgabennr);
                                  IF ToDo.FINDFIRST THEN BEGIN
                                    IF ToDo.Date <> 0D THEN
                                      EnterCell(RowNo,ColumnNo,FORMAT(ToDo.Date),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                  END;
                                  ColumnNo := ColumnNo + 1;
                                  ToDo.RESET;
                                  ToDo.SETFILTER("No.",'%1',Musterberwachung.Aufgabennr);
                                  IF ToDo.FINDFIRST THEN BEGIN
                                    Bemerkung.SETFILTER("No.",'%1',ToDo."No.");
                                    Bemerkung.SETFILTER("Line No.",'10000');
                                    IF Bemerkung.FINDFIRST THEN BEGIN
                                      IF Bemerkung.Date <> 0D THEN
                                        EnterCell(RowNo,ColumnNo,FORMAT(Bemerkung.Date),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                      ColumnNo := ColumnNo + 1;
                                      EnterCell(RowNo,ColumnNo,Bemerkung.Comment,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      ColumnNo := ColumnNo + 1;
                                    END ELSE
                                      ColumnNo := ColumnNo + 2;
                                  END ELSE
                                    ColumnNo := ColumnNo + 2;
                                  ToDo.RESET;
                                  ToDo.SETFILTER("No.",'%1',Musterberwachung.Aufgabennr);
                                  IF ToDo.FINDFIRST THEN BEGIN
                                    Bemerkung.SETFILTER("No.",'%1',ToDo."No.");
                                    Bemerkung.SETFILTER("Line No.",'20000');
                                    IF Bemerkung.FINDFIRST THEN BEGIN
                                      IF Bemerkung.Date <> 0D THEN
                                        EnterCell(RowNo,ColumnNo,FORMAT(Bemerkung.Date),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                      ColumnNo := ColumnNo + 1;
                                      EnterCell(RowNo,ColumnNo,Bemerkung.Comment,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      ColumnNo := ColumnNo + 1;
                                    END ELSE
                                      ColumnNo := ColumnNo + 2;
                                  END ELSE
                                    ColumnNo := ColumnNo + 2;
                                  ToDo.RESET;
                                  ToDo.SETFILTER("No.",'%1',Musterberwachung.Aufgabennr);
                                  IF ToDo.FINDFIRST THEN BEGIN
                                    Bemerkung.SETFILTER("No.",'%1',ToDo."No.");
                                    Bemerkung.SETFILTER("Line No.",'30000');
                                    IF Bemerkung.FINDFIRST THEN BEGIN
                                      IF Bemerkung.Date <> 0D THEN
                                        EnterCell(RowNo,ColumnNo,FORMAT(Bemerkung.Date),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                      ColumnNo := ColumnNo + 1;
                                      EnterCell(RowNo,ColumnNo,Bemerkung.Comment,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      ColumnNo := ColumnNo + 1;
                                    END ELSE
                                      ColumnNo := ColumnNo + 2;
                                  END ELSE
                                    ColumnNo := ColumnNo + 2;

                                  IF Musterberwachung.Nachverf_Datum <> 0D THEN
                                    EnterCell(RowNo,ColumnNo,FORMAT(Musterberwachung.Nachverf_Datum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung.Nachverfolgung,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(Musterberwachung."Intern Erledigt"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(Musterberwachung.Erledigt),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(dc),'',FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(("Sales Invoice Line".Quantity) * dc),'',FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                                  ColumnNo := ColumnNo + 1;

                                  IF Musterberwachung.Status = 0 THEN
                                    EnterCell(RowNo,ColumnNo,'noch nicht getestet','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 1 THEN
                                    EnterCell(RowNo,ColumnNo,'im Test','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 2 THEN
                                    EnterCell(RowNo,ColumnNo,'freigegeben','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 3 THEN
                                    EnterCell(RowNo,ColumnNo,'Auftrag erhalten','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 4 THEN
                                    EnterCell(RowNo,ColumnNo,'Keine Info','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 5 THEN
                                    EnterCell(RowNo,ColumnNo,'technisch ungeeignet','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 6 THEN
                                    EnterCell(RowNo,ColumnNo,'Projekt gestorben','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 7 THEN
                                    EnterCell(RowNo,ColumnNo,'FU im Projekt ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 8 THEN
                                    EnterCell(RowNo,ColumnNo,'kein FU','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung.Potenzial,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung.Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,"Sales Invoice Line"."Order No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung."Belegnr.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  RowNo := RowNo + 1;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

    { 1000000005;3;Column;Belegnr            ;
               SourceExpr="Sales Invoice Line"."Document No." }

    { 1000000006;1;DataItem;                 ;
               DataItemTable=Table50008;
               DataItemTableView=WHERE(Menge=FILTER(>0),
                                       Belegart=FILTER(Invoice));
               OnAfterGetRecord=BEGIN
                                  ColumnNo := 1;
                                  EnterCell(RowNo,ColumnNo,Beleghistorie.Verk„ufercode + '/' + Beleghistorie."Betreuer Innendienst",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(Beleghistorie.Belegdatum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Beleghistorie."Artikelnr.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(Beleghistorie.Menge),'',FALSE,FALSE,FALSE,'########',TempExcelBuffer."Cell Type"::Number);
                                  ColumnNo := ColumnNo + 1;
                                  IF deb.GET("Debitornr.") THEN
                                    EnterCell(RowNo,ColumnNo,deb.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  IF Musterberwachung.Applikation = '' THEN BEGIN
                                    IF Musterberwachung.Projektname = '' THEN BEGIN
                                      ToDo.RESET;
                                      ToDo.SETFILTER("No.",Musterberwachung.Aufgabennr);
                                      IF ToDo.FINDFIRST THEN BEGIN
                                        ToDo.CALCFIELDS("Campaign Description");
                                        EnterCell(RowNo,ColumnNo,ToDo."Campaign Description",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      END ELSE BEGIN
                                        EnterCell(RowNo,ColumnNo,'','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      END;
                                    END ELSE BEGIN
                                      EnterCell(RowNo,ColumnNo,Musterberwachung.Projektname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                    END;
                                  END ELSE BEGIN
                                    EnterCell(RowNo,ColumnNo,Musterberwachung.Applikation,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  END;
                                  ColumnNo := ColumnNo + 1;

                                  IF (COPYSTR(Musterberwachung.Potenzial,1,3) < '500')  AND (COPYSTR(Musterberwachung.Potenzial,4,1) = '') AND (STRPOS(UPPERCASE(Musterberwachung.Potenzial),'K') = 0)
                                  AND (Musterberwachung.Potenzial <> '') THEN
                                    EnterCell(RowNo,ColumnNo,'1-499','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text)
                                  ELSE BEGIN
                                    IF (COPYSTR(Musterberwachung.Potenzial,1,3) = '500') AND (STRLEN(Musterberwachung.Potenzial) = 3) AND (STRPOS(UPPERCASE(Musterberwachung.Potenzial),'K') = 0) THEN BEGIN
                                      EnterCell(RowNo,ColumnNo,'500-<5K','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                    END ELSE BEGIN
                                      IF (((COPYSTR(Musterberwachung.Potenzial,1,3) > '500') AND (COPYSTR(Musterberwachung.Potenzial,1,3) <= '999') AND (STRLEN(Musterberwachung.Potenzial) = 3))
                                      OR ((COPYSTR(Musterberwachung.Potenzial,1,4) >= '1000') AND (COPYSTR(Musterberwachung.Potenzial,1,4) <= '5000') AND (STRLEN(Musterberwachung.Potenzial) = 4)))
                                      AND (STRPOS(UPPERCASE(Musterberwachung.Potenzial),'K') = 0) THEN BEGIN
                                        EnterCell(RowNo,ColumnNo,'500-<5K','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      END;
                                    END;
                                  END;

                                  IF NOT TempExcelBuffer.GET(RowNo,ColumnNo) THEN BEGIN
                                    CASE UPPERCASE(Musterberwachung.Potenzial) OF
                                      '1K','2K','3K','4K' :
                                        EnterCell(RowNo,ColumnNo,'500-<5K','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      '5K','5K+','6K','7K','8K','9K','10K','11K','12K','13K','14K','15K','20K','50K','100K','150K','200K','250K' :
                                        EnterCell(RowNo,ColumnNo,'5K+','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                    END;
                                  END;
                                  IF NOT TempExcelBuffer.GET(RowNo,ColumnNo) THEN
                                    CASE UPPERCASE(COPYSTR(Musterberwachung.Potenzial,1,2)) OF
                                      '1K','2K','3K','4K' :
                                        EnterCell(RowNo,ColumnNo,'500-<5K','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                    END;

                                  ColumnNo := ColumnNo + 1;

                                  IF Musterberwachung.Status = 0 THEN
                                    EnterCell(RowNo,ColumnNo,'follow up','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 1 THEN
                                    EnterCell(RowNo,ColumnNo,'evaluating','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 2 THEN
                                    EnterCell(RowNo,ColumnNo,'approved','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 3 THEN
                                    EnterCell(RowNo,ColumnNo,'approved','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 4 THEN
                                    EnterCell(RowNo,ColumnNo,'not approved','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 5 THEN
                                    EnterCell(RowNo,ColumnNo,'not approved','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 6 THEN
                                    EnterCell(RowNo,ColumnNo,'not approved','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 7 THEN
                                    EnterCell(RowNo,ColumnNo,'',' ',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 8 THEN
                                    EnterCell(RowNo,ColumnNo,'pending','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung.Nachverfolgung,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung."Stock Topas",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Beleghistorie."Debitornr.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Beleghistorie."Belegnr.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung.Projektname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;

                                  IF Musterberwachung."letzte Žnderung" <> 0D THEN
                                    EnterCell(RowNo,ColumnNo,FORMAT(Musterberwachung."letzte Žnderung"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                  ColumnNo := ColumnNo + 1;
                                  ToDo.RESET;
                                  ToDo.SETFILTER("No.",Musterberwachung.Aufgabennr);
                                  IF ToDo.FINDFIRST THEN BEGIN
                                    IF ToDo.Date <> 0D THEN
                                      EnterCell(RowNo,ColumnNo,FORMAT(ToDo.Date),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                  END;
                                  ColumnNo := ColumnNo + 1;
                                  ToDo.RESET;
                                  ToDo.SETFILTER("No.",'%1',Musterberwachung.Aufgabennr);
                                  IF ToDo.FINDFIRST THEN BEGIN
                                    Bemerkung.SETFILTER(Bemerkung."No.",'%1',ToDo."No.");
                                    Bemerkung.SETFILTER(Bemerkung."Line No.",'10000');
                                    IF Bemerkung.FINDFIRST THEN BEGIN
                                      IF Bemerkung.Date <> 0D THEN
                                        EnterCell(RowNo,ColumnNo,FORMAT(Bemerkung.Date),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                      ColumnNo := ColumnNo + 1;
                                      EnterCell(RowNo,ColumnNo,Bemerkung.Comment,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      ColumnNo := ColumnNo + 1;
                                    END ELSE
                                      ColumnNo := ColumnNo + 2;
                                  END ELSE
                                    ColumnNo := ColumnNo + 2;
                                  ToDo.RESET;
                                  ToDo.SETFILTER("No.",'%1',Musterberwachung.Aufgabennr);
                                  IF ToDo.FINDFIRST THEN BEGIN
                                    Bemerkung.SETFILTER("No.",'%1',ToDo."No.");
                                    Bemerkung.SETFILTER("Line No.",'20000');
                                    IF Bemerkung.FINDFIRST THEN BEGIN
                                      IF Bemerkung.Date <> 0D THEN
                                        EnterCell(RowNo,ColumnNo,FORMAT(Bemerkung.Date),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                      ColumnNo := ColumnNo + 1;
                                      EnterCell(RowNo,ColumnNo,Bemerkung.Comment,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      ColumnNo := ColumnNo + 1;
                                    END ELSE
                                      ColumnNo := ColumnNo + 2;
                                  END ELSE
                                    ColumnNo := ColumnNo + 2;
                                  ToDo.RESET;
                                  ToDo.SETFILTER("No.",'%1',Musterberwachung.Aufgabennr);
                                  IF ToDo.FINDFIRST THEN BEGIN
                                    Bemerkung.SETFILTER("No.",'%1',ToDo."No.");
                                    Bemerkung.SETFILTER("Line No.",'30000');
                                    IF Bemerkung.FINDFIRST THEN BEGIN
                                      IF Bemerkung.Date = 0D THEN
                                        EnterCell(RowNo,ColumnNo,FORMAT(Bemerkung.Date),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                      ColumnNo := ColumnNo + 1;
                                      EnterCell(RowNo,ColumnNo,Bemerkung.Comment,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                      ColumnNo := ColumnNo + 1;
                                    END ELSE
                                      ColumnNo := ColumnNo + 2;
                                  END ELSE
                                    ColumnNo := ColumnNo + 2;
                                  IF Musterberwachung.Nachverf_Datum = 0D THEN

                                    EnterCell(RowNo,ColumnNo,FORMAT(Musterberwachung.Nachverf_Datum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung.Nachverfolgung,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(Musterberwachung."Intern Erledigt"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(Musterberwachung.Erledigt),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(dc),'',FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(Beleghistorie.Menge * dc),'',FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                                  ColumnNo := ColumnNo + 1;



                                  IF Musterberwachung.Status = 0 THEN
                                    EnterCell(RowNo,ColumnNo,'noch nicht getestet','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 1 THEN
                                    EnterCell(RowNo,ColumnNo,'im Test','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 2 THEN
                                    EnterCell(RowNo,ColumnNo,'freigegeben','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 3 THEN
                                    EnterCell(RowNo,ColumnNo,'Auftrag erhalten','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 4 THEN
                                    EnterCell(RowNo,ColumnNo,'Keine Info','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 5 THEN
                                    EnterCell(RowNo,ColumnNo,'technisch ungeeignet','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 6 THEN
                                    EnterCell(RowNo,ColumnNo,'Projekt gestorben','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 7 THEN
                                    EnterCell(RowNo,ColumnNo,'FU im Projekt','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  IF Musterberwachung.Status = 8 THEN
                                    EnterCell(RowNo,ColumnNo,'kein FU','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung.Potenzial,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung.Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Beleghistorie."Auftragsnr.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Musterberwachung."Belegnr.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  RowNo := RowNo + 1;
                                END;

               DataItemLink=Auftragsnr.=FIELD(Nr) }

    { 1000000007;2;Column;AUNr               ;
               SourceExpr=Beleghistorie."Auftragsnr." }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1000000000;;Container;
                  Name=Ausfhren;
                  ContainerType=ContentArea }

      { 1000000001;1;Group  ;
                  CaptionML=DEU=Optionen;
                  GroupType=Group }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      ToDo@1000000009 : Record 5080;
      deb@1000000008 : Record 18;
      Bemerkung@1000000000 : Record 5061;
      dc@1000000002 : Decimal;
      Text000@1000000038 : TextConst 'DEU=Daten werden analysiert ...\\;ENU=Analyzing Data...\\';
      Text001@1000000037 : TextConst 'DEU=Musterausgangsliste';
      Text002@1000000036 : TextConst 'DEU=Arbeitsmappe aktualisieren;ENU=Update Workbook';
      Text020@1000000034 : TextConst 'DEU=TOPAS internal Sales';
      Text021@1000000033 : TextConst 'DEU=deliv. Date';
      Text022@1000000032 : TextConst 'DEU=Part Number';
      Text023@1000000031 : TextConst 'DEU=QTY.';
      Text024@1000000030 : TextConst 'DEU=Customer';
      Text025@1000000029 : TextConst 'DEU=Application';
      Text026@1000000028 : TextConst 'DEU=Potential';
      Text027@1000000027 : TextConst 'DEU=Approval Status';
      Text028@1000000026 : TextConst 'DEU=Remarks';
      Text029@1000000025 : TextConst 'DEU=Samples provided by';
      Text030@1000000024 : TextConst 'DEU=Kunden-Nr.';
      Text031@1000000023 : TextConst 'DEU=Beleg-Nr.';
      Text032@1000000022 : TextConst 'DEU=Projektname';
      Text033@1000000021 : TextConst 'DEU=letzte Žnderung';
      Text034@1000000020 : TextConst 'DEU=WV Datum';
      Text035@1000000019 : TextConst 'DEU=Datum Bemerk1';
      Text036@1000000018 : TextConst 'DEU=Bemerkung 1';
      Text037@1000000017 : TextConst 'DEU=Datum Bemerk2';
      Text038@1000000016 : TextConst 'DEU=Bemerkung 2';
      Text039@1000000015 : TextConst 'DEU=Datum Bemerk3';
      Text040@1000000014 : TextConst 'DEU=Bemerkung 3';
      Text041@1000000011 : TextConst 'DEU=Datum Nachverfolgung';
      Text042@1000000012 : TextConst 'DEU=Nachverfolgung';
      Text043@1000000013 : TextConst 'DEU=Nach Erledigt';
      Text044@1000000039 : TextConst 'DEU=Must Erledigt';
      Text045@1000000040 : TextConst 'DEU=DC-Preis';
      Text046@1000000041 : TextConst 'DEU=Summe';
      Text047@1000000042 : TextConst 'DEU=Status Mš';
      Text048@1000000043 : TextConst 'DEU=Potenzial';
      Text049@1000000044 : TextConst 'DEU=Nr. der Mš';
      Text050@1000000045 : TextConst 'DEU=AuftragsNr.';
      ExcelFileExtensionTok@1000000010 : TextConst '@@@={Locked};DEU=.xlsx;ENU=.xlsx';
      TempExcelBuffer@1000000057 : TEMPORARY Record 370;
      TOPAS_API@1000000056 : Codeunit 50001;
      FileMgt@1000000055 : Codeunit 419;
      ServerFileName@1000000054 : Text;
      SheetName@1000000053 : Text[250];
      DoUpdateExistingWorksheet@1000000052 : Boolean;
      Testmode@1000000051 : Boolean;
      Window@1000000050 : Dialog;
      RecNo@1000000049 : Integer;
      TotalRecNo@1000000048 : Integer;
      RowNo@1000000047 : Integer;
      ColumnNo@1000000046 : Integer;

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Formular@1000000000 : Text[250];Bold@1003 : Boolean;Italic@1004 : Boolean;UnderLine@1005 : Boolean;NumberFormat@1006 : Text[30];CellType@1007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := Formular;
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    LOCAL PROCEDURE FinishExcel@1000000002();
    BEGIN
      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Text001);
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2',Text001,''),30),COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          //TempExcelBuffer.OpenExcelWithoutAutoFit(Text001,Text001 + ExcelFileExtensionTok,'',TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
  }
}

