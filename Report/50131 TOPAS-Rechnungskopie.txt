OBJECT Report 50131 TOPAS-Rechnungskopie
{
  OBJECT-PROPERTIES
  {
    Date=22.02.22;
    Time=10:01:29;
    Modified=Yes;
    Version List=Beleg Rechnung --> 50076 !!!,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table112;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufsrechnung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  VkRK := "Sales Invoice Header";
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Location Code" = 'MUST' THEN CurrReport.SKIP;
                                  IF "Order No." = '' THEN
                                    AuftragNrText := ''
                                  ELSE
                                    AuftragNrText := FIELDNAME("Order No.");
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesInvBillTo(DebAdr,"Sales Invoice Header");
                                  Deb.GET("Bill-to Customer No.");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesInvShipTo(LieferAnAdr,"Sales Invoice Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung  := '[ ' + 'EUR' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung  := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  v_bonusdatum := 0D;
                                  v_FER_SPL := FALSE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table291;
               OnAfterGetRecord=BEGIN
                                  spedition := "Shipping Agent";
                                END;

               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  verk_debitor := Customer;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF Steuernummer = '' THEN
                                      Var_Steuernr := ''
                                    ELSE
                                      Var_Steuernr := 'Ihre Steuernummer:';
                                    IF "VAT Registration No." = '' THEN
                                      Var_UST_ID := ''
                                    ELSE
                                      Var_UST_ID := FIELDNAME("VAT Registration No.");
                                  END ELSE BEGIN
                                    Var_Steuernr := '';
                                    IF "VAT Registration No." = '' THEN
                                      Var_UST_ID := ''
                                    ELSE
                                      Var_UST_ID := 'Tax Number';
                                  END;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF "Sales Invoice Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Sales Invoice Header"."Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Sales Invoice Header"."Currency Code");
                                    END;
                                  END ELSE BEGIN
                                    IF "Sales Invoice Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Sales Invoice Header"."Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',"Sales Invoice Header"."Currency Code");
                                    END;
                                  END;
                                  //Bonusdatum fllen
                                  IF  Customer.Bonusregelung <> '' THEN
                                  v_bonusdatum := Customer.Bonusdatum;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 4   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Deb."Invoice Copies" := 3;
                               //AnzSchleifen := ABS(AnzKopien) + Deb."Anzahl Rechnungskopien" +1;
                               AnzSchleifen := 1;
                               IF AnzSchleifen <= 0 THEN
                                 AnzSchleifen := 1;
                                 KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  IF Number > 0 THEN
                                    ReportForNav.PrinterSettings.PaperSource(2);
                                  //TOPAS 15.12.05 neu
                                  "via Email" := '';
                                  kunde.GET("Sales Invoice Header"."Sell-to Customer No.");
                                  IF Number > 0 THEN BEGIN
                                    IF kunde."Rech via EMail" THEN BEGIN
                                      "via Email_unterschrift" := 'Erledigt von ..............'  ;
                                      SalesHeader.RESET;
                                      SalesHeader.SETFILTER("No.",'%1',"Sales Invoice Header"."Order No.");
                                      IF SalesHeader.FINDLAST THEN
                                        "via Email_adresse" := SalesHeader."Rech EMail-Adresse";
                                      IF "via Email_adresse" = '' THEN BEGIN
                                        SalesHeaderArchive.RESET;
                                        SalesHeaderArchive.SETFILTER("No.",'%1',"Sales Invoice Header"."Order No.");
                                        IF SalesHeaderArchive.FINDLAST THEN
                                          "via Email_adresse" := SalesHeaderArchive."Rech EMail-Adresse";
                                        IF "via Email_adresse" = '' THEN
                                          "via Email_adresse" := kunde."Rech EMail-Adresse";
                                      END;
                                      "via Email" := 'Achtung via E-Mail versenden !!!';
                                    END;
                                    //TOPAS 10.06.11 ST - Wird evtl. noch durch ein Debitor Haken Feld abgel”st
                                    IF "Sales Invoice Header"."Sell-to Customer No." = '738480' THEN
                                      Andruck[1] := 'LS auch an Glck & Kanja schicken!'
                                    ELSE
                                      Andruck[1] := '';
                                    //TOPAS 05.07.12 ST
                                    IF ("Sales Invoice Header"."Sell-to Customer No." = '738620') THEN
                                      Andruck[1] := 'LS bitte via Email!'
                                    ELSE
                                      Andruck[1] := '';
                                  END;
                                  // Ende 15.12.05
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF Number > 1 THEN KopieText := 'skopie';
                                    ReportForNav.PageNo := 1;
                                  END ELSE BEGIN
                                    IF Number > 1 THEN KopieText := ' Copy';
                                    ReportForNav.PageNo := 1;
                                  END;
                                  IF (("Sales Invoice Header"."Shipment Method Code"='ACCOUNT') OR ("Sales Invoice Header"."Shipment Method Code"='ACC-ENG')) THEN
                                    Account := "Shipping Agent".Name + ' / ' + "Sales Invoice Header".Spediteuraccount
                                  ELSE
                                    Account := "Shipping Agent".Name;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkRechDruckZ„hler.RUN("Sales Invoice Header");
                              END;
                               }

    { 5   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 6   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 9   ;3   ;Column  ;Andruck1            ;
               SourceExpr=Andruck[1] }

    { 10  ;3   ;Column  ;PostingDate_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Posting Date" }

    { 13  ;3   ;Column  ;Var_UST_ID          ;
               SourceExpr=Var_UST_ID }

    { 14  ;3   ;Column  ;Steuernummer_verk_debitor;
               SourceExpr=verk_debitor.Steuernummer }

    { 15  ;3   ;Column  ;Var_Steuernr        ;
               SourceExpr=Var_Steuernr }

    { 16  ;3   ;Column  ;No_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."No." }

    { 17  ;3   ;Column  ;Bill_toCustomerNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Bill-to Customer No." }

    { 18  ;3   ;Column  ;OrderNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Order No." }

    { 19  ;3   ;Column  ;VATRegistrationNo_VkRK;
               SourceExpr=VkRK."VAT Registration No." }

    { 20  ;3   ;Column  ;OurAccountNo_verk_debitor;
               SourceExpr=verk_debitor."Our Account No." }

    { 21  ;3   ;Column  ;SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour;
               SourceExpr="Sales Invoice Header"."External Document No."+' '+"Sales Invoice Header"."Your Reference" }

    { 22  ;3   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 23  ;3   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 24  ;3   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 25  ;3   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 26  ;3   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 27  ;3   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 28  ;3   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 29  ;3   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 8   ;3   ;Column  ;viaEmail_adresse    ;
               SourceExpr="via Email_adresse" }

    { 11  ;3   ;Column  ;viaEmail_unterschrift;
               SourceExpr="via Email_unterschrift" }

    { 12  ;3   ;Column  ;viaEmail            ;
               SourceExpr="via Email" }

    { 30  ;3   ;Column  ;seite               ;
               SourceExpr=seite }

    { 31  ;3   ;DataItem;Verkaufsrechnungszeile;
               DataItemTable=Table113;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                               {lshanf c02}
                               grechrabbetr := 0;
                               {lshend}
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    steuer_text := MWSTBetragZeile.VATAmountText;
                                    einheiten_text := Verkaufsrechnungszeile."Unit of Measure";
                                  END ELSE BEGIN
                                    steuer_text := MWSTBetragZeile.VATAmountText;
                                    IF Verkaufsrechnungszeile."Unit of Measure" <> 'STšCK' THEN
                                      einheiten_text := 'pcs.'
                                    ELSE
                                      einheiten_text := Verkaufsrechnungszeile."Unit of Measure";
                                  END;
                                  {lshanf c02}
                                  IF "Inv. Discount Amount" <> 0 THEN BEGIN
                                    "grechrab%" := ("Inv. Discount Amount" * 100) / (Amount + "Inv. Discount Amount");
                                    grechrabbetr := grechrabbetr + Amount + "Inv. Discount Amount";
                                  END;
                                  {lshend}
                                  {
                                  leadfree_symbol := '';
                                  leadfree_artikel.SETFILTER(leadfree_artikel."No.",'%1',Verkaufsrechnungszeile."No.");
                                  IF leadfree_artikel.FIND('-') THEN BEGIN
                                    IF (leadfree_artikel."Lead Free" = TRUE) AND
                                      (Verkaufsrechnungszeile.Quantity > 0) AND
                                      (NOT(leadfree_artikel.Herstellerkurzname = 'HAL') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'SYN') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'IDT') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'PLX') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'TDK') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'TSC') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'JEL') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'SIM') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'NEX') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'LSI') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'WML') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'SIW') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'ACL') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'ICP') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'RIC') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'ICSA') AND
                                        NOT(leadfree_artikel.Herstellerkurzname = 'ICS')) THEN BEGIN
                                          leadfree_symbol:='ø';
                                          IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                            lead_free_text1 := ' ø Diese Bauteile sind nach Angabe des Herstellers bleifrei.';
                                            lead_free_text2 := 'Bitte beachten Sie gegebenenefalls die neue Bestellbezeichnung.';
                                          END ELSE BEGIN
                                            lead_free_text1 := ' ø According to manufacturer these parts are leadfree.';
                                            lead_free_text2 := 'Please note the new part number where applicable.';
                                          END;
                                      END;
                                    IF (leadfree_artikel."Lead Free" = TRUE) AND
                                      (Verkaufsrechnungszeile.Quantity > 0) AND
                                      ((leadfree_artikel.Herstellerkurzname = 'HAL') OR
                                        (leadfree_artikel.Herstellerkurzname = 'SYN') OR
                                        (leadfree_artikel.Herstellerkurzname = 'IDT') OR
                                        (leadfree_artikel.Herstellerkurzname = 'PLX') OR
                                        (leadfree_artikel.Herstellerkurzname = 'TDK') OR
                                        (leadfree_artikel.Herstellerkurzname = 'TSC') OR
                                        (leadfree_artikel.Herstellerkurzname = 'JEL') OR
                                        (leadfree_artikel.Herstellerkurzname = 'SIM') OR
                                        (leadfree_artikel.Herstellerkurzname = 'NEX') OR
                                        (leadfree_artikel.Herstellerkurzname = 'LSI') OR
                                        (leadfree_artikel.Herstellerkurzname = 'WML') OR
                                        (leadfree_artikel.Herstellerkurzname = 'SIW') OR
                                        (leadfree_artikel.Herstellerkurzname = 'ACL') OR
                                        (leadfree_artikel.Herstellerkurzname = 'ICP') OR
                                        (leadfree_artikel.Herstellerkurzname = 'RIC') OR
                                        (leadfree_artikel.Herstellerkurzname = 'ICSA') OR
                                        (leadfree_artikel.Herstellerkurzname = 'ICS')) THEN BEGIN
                                          leadfree_symbol:='øø';
                                          IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                            lead_free_text0 := 'øø Diese Bauteile sind nach Angabe des Herstellers RoHS konform.';
                                            lead_free_text2 := 'Bitte beachten Sie gegebenenfalls die neue Bestellbezeichnung.';
                                          END ELSE BEGIN
                                            lead_free_text0 := 'øø  According to manufacturer these parts are RoHS compliant.';
                                            lead_free_text2 := 'Please note the new part number where applicable.';
                                        END;
                                      END;
                                  END;
                                  }
                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF Verkaufsrechnungszeile.Type=Verkaufsrechnungszeile.Type::Item THEN BEGIN
                                    lead_symbol:='';
                                    IF lead_artikel.GET(Verkaufsrechnungszeile."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND (Verkaufsrechnungszeile.Quantity > 0) THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                   IF v_FER_SPL=FALSE THEN BEGIN
                                     IF ((Verkaufsrechnungszeile."Manufacturer Code" = '82') OR (Verkaufsrechnungszeile."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                     END;
                                   END;
                                END;

               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 32  ;4   ;Column  ;waehrungs_text      ;
               SourceExpr=waehrungs_text }

    { 33  ;4   ;Column  ;Amount_InvDiscountAmount;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 34  ;4   ;Column  ;Description_Verkaufsrechnungszeile;
               SourceExpr=Description }

    { 35  ;4   ;Column  ;UnitPrice_Verkaufsrechnungszeile;
               SourceExpr="Unit Price";
               AutoFormatType=2;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 36  ;4   ;Column  ;einheiten_text      ;
               SourceExpr=einheiten_text }

    { 37  ;4   ;Column  ;Quantity_Verkaufsrechnungszeile;
               SourceExpr=Quantity }

    { 38  ;4   ;Column  ;InvDiscountAmount_Verkaufsrechnungszeile;
               SourceExpr=-"Inv. Discount Amount" }

    { 39  ;4   ;Column  ;grechrabbetr        ;
               SourceExpr=grechrabbetr }

    { 40  ;4   ;Column  ;grechrabPct         ;
               SourceExpr="grechrab%" }

    { 41  ;4   ;Column  ;lead_free_text0     ;
               SourceExpr=lead_free_text0 }

    { 42  ;4   ;Column  ;lead_free_text1     ;
               SourceExpr=lead_free_text1 }

    { 43  ;4   ;Column  ;lead_free_text2     ;
               SourceExpr=lead_free_text2 }

    { 44  ;4   ;Column  ;lead_text           ;
               SourceExpr=lead_text }

    { 45  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 46  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 47  ;4   ;Column  ;Amount_Verkaufsrechnungszeile;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 48  ;4   ;Column  ;steuer_text         ;
               SourceExpr=steuer_text }

    { 49  ;4   ;Column  ;AmountIncludingVAT_Amount;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 50  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 51  ;4   ;Column  ;AmountIncludingVAT_Verkaufsrechnungszeile;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 52  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnAfterGetRecord=BEGIN
                                  v_reverse := ' ';
                                  //IF Item."Global Dimension 2 Code" = 'WARTUNG' THEN BEGIN
                                  //  v_reverse := 'ø*';
                                  //  v_reverse1 := '1';
                                  //END;
                                  {
                                   IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (Verkaufsrechnungszeile."Gen. Prod. Posting Group" = 'SYSTEM')
                                    AND (Verkaufsrechnungszeile.Quantity > 0)) THEN BEGIN
                                      v_reverse  := '**';
                                      v_reverse1 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (Verkaufsrechnungszeile."Gen. Prod. Posting Group" <> 'SYSTEM')
                                    AND (Verkaufsrechnungszeile.Quantity > 0)) THEN BEGIN
                                      v_reverse  := '***';
                                      v_reverse2 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (Verkaufsrechnungszeile."Gen. Prod. Posting Group" = 'SYSTEM')
                                    AND (Verkaufsrechnungszeile.Quantity > 0)) THEN BEGIN
                                      v_reverse  := '**';
                                      v_reverse1 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (Verkaufsrechnungszeile."Gen. Prod. Posting Group" <> 'SYSTEM')
                                    AND (Verkaufsrechnungszeile.Quantity > 0)) THEN BEGIN
                                      v_reverse  := '***';
                                      v_reverse2 := '1';
                                    END;
                                  END;
                                  }

                                  //// Ab hier 19%
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF Verkaufsrechnungszeile.Quantity > 0 THEN BEGIN
                                      IF ((Verkaufsrechnungszeile."Gen. Prod. Posting Group" = 'SYSTEM') OR (Verkaufsrechnungszeile."Gen. Prod. Posting Group" = 'HANDEL')) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                        IF ((Verkaufsrechnungszeile."Gen. Prod. Posting Group" = 'SCHULUNG') OR (Verkaufsrechnungszeile."Gen. Prod. Posting Group" = 'SERVICE') OR (Item."Gen. Prod. Posting Group" = 'STD_POOL')) THEN BEGIN
                                          IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  //// Ab hier 16%

                                  {
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF Verkaufsrechnungszeile.Quantity > 0 THEN BEGIN
                                      IF ((Verkaufsrechnungszeile."Gen. Prod. Posting Group" = '16_SYSTEM') OR (Verkaufsrechnungszeile."Gen. Prod. Posting Group" = '16_HANDEL')) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                        IF ((Verkaufsrechnungszeile."Gen. Prod. Posting Group" = '16_SCHULUN') OR (Verkaufsrechnungszeile."Gen. Prod. Posting Group" = '16_SERVICE') OR (Item."Gen. Prod. Posting Group" = '16_STD_POO')) THEN BEGIN
                                          IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  }
                                END;

               DataItemLinkReference=Verkaufsrechnungszeile;
               DataItemLink=No.=FIELD(No.) }

    { 53  ;5   ;Column  ;v_reverse           ;
               SourceExpr=v_reverse }

    { 54  ;5   ;Column  ;lead_symbol         ;
               SourceExpr=lead_symbol }

    { 55  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               SourceExpr="Country/Region of Origin Code" }

    { 56  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 57  ;5   ;Column  ;LineNo_Verkaufsrechnungszeile;
               SourceExpr=Verkaufsrechnungszeile."Line No." }

    { 58  ;5   ;Column  ;Artikelnr2_Verkaufsrechnungszeile;
               SourceExpr=Verkaufsrechnungszeile."Artikelnr. 2" }

    { 59  ;5   ;Column  ;Description_Verkaufsrechnungszeile3;
               SourceExpr=Verkaufsrechnungszeile.Description }

    { 60  ;5   ;Column  ;einheiten_text2     ;
               SourceExpr=einheiten_text }

    { 61  ;5   ;Column  ;Quantity_Verkaufsrechnungszeile2;
               SourceExpr=Verkaufsrechnungszeile.Quantity }

    { 62  ;5   ;Column  ;UnitPrice_Verkaufsrechnungszeile2;
               SourceExpr=Verkaufsrechnungszeile."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 63  ;5   ;Column  ;VerkaufsrechnungszeileAmount_VerkaufsrechnungszeileInvDiscou;
               SourceExpr=Verkaufsrechnungszeile.Amount+Verkaufsrechnungszeile."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 64  ;5   ;Column  ;Description2_Verkaufsrechnungszeile;
               SourceExpr=Verkaufsrechnungszeile."Description 2" }

    { 65  ;5   ;Column  ;TariffNo_Item       ;
               SourceExpr="Tariff No." }

    { 66  ;5   ;Column  ;Cross_ReferenceNo_Verkaufsrechnungszeile;
               SourceExpr=Verkaufsrechnungszeile."Cross-Reference No." }

    { 67  ;5   ;Column  ;ECCN_Nr__ItemECCN_Nr;
               SourceExpr='ECCN-Nr.: '+ Item."ECCN-Nr." }

    { 68  ;5   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 69  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=No.=FIELD(No.) }

    { 70  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 71  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 72  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr=Verkaufsrechnungszeile.GetCurrencyCode }

    { 73  ;4   ;Column  ;VATBase_MWSTBetragZeile2;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 74  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 75  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 76  ;4   ;Column  ;v_bonusdatum        ;
               SourceExpr=v_bonusdatum }

    { 77  ;4   ;Column  ;Account             ;
               SourceExpr=Account }

    { 78  ;4   ;Column  ;gzbedtx             ;
               SourceExpr=gzbedtx }

    { 79  ;4   ;Column  ;Description_LieferBed;
               SourceExpr=LieferBed.Description }

    { 80  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 81  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader_Lbl;
               SourceExpr="Sales Invoice Header".FIELDCAPTION("Sell-to Customer No.") }

    { 82  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Sell-to Customer No." }

    { 83  ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 84  ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 85  ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 86  ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 87  ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 88  ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 89  ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 90  ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      spedition@1140003 : Record 291;
      art1@1140004 : Record 27;
      verk_debitor@1140005 : Record 18;
      FIBUEinrichtung@1140006 : Record 98;
      LieferBed@1140007 : Record 10;
      ZlgBed@1140008 : Record 3;
      VerkEinkPerson@1140009 : Record 13;
      Firmendaten@1140010 : Record 79;
      Deb@1140011 : Record 18;
      MWSTBetragZeile@1140012 : TEMPORARY Record 290;
      language@1140054 : Record 8;
      kunde@1000000008 : Record 18;
      vk_rech_zeile@1000000007 : Record 113;
      VkRK@1000000006 : Record 112;
      SalesHeader@1000000005 : Record 36;
      SalesHeaderArchive@1000000004 : Record 5107;
      VerkRechDruckZ„hler@1140013 : Codeunit 315;
      FormatAdr@1140014 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140015 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140016 : ARRAY [8] OF Text[50];
      FirmaAdr@1140017 : ARRAY [8] OF Text[50];
      AuftragNrText@1140018 : Text[30];
      Verk„uferText@1140019 : Text[30];
      MWStNrText@1140020 : Text[30];
      ReferenzText@1140021 : Text[30];
      TotalText@1140022 : Text[50];
      TotalInklMWStText@1140023 : Text[50];
      waehrung2@1000000003 : Code[10];
      waehrung@1000000002 : Code[10];
      MehrZeilen@1140024 : Boolean;
      AnzKopien@1140025 : Integer;
      AnzSchleifen@1140026 : Integer;
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      "--------LSH--------"@1140030 : Integer;
      "grechrab%"@1140031 : Decimal;
      grechrabbetr@1140032 : Decimal;
      gzbedtx@1140033 : Text[100];
      lead_free_text0@1140034 : Text[80];
      lead_free_text1@1140035 : Text[80];
      leadfree_symbol@1140036 : Text[3];
      leadfree_artikel@1140037 : Record 27;
      lead_artikel@1140050 : Record 27;
      lead_text@1140051 : Text[120];
      lead_symbol@1140052 : Text[3];
      lead_free_text2@1140038 : Text[80];
      Var_UST_ID@1140039 : Text[20];
      Var_Steuernr@1140040 : Text[20];
      waehrungs_text@1140041 : Text[30];
      einheiten_text@1140042 : Text[30];
      steuer_text@1140043 : Text[30];
      seite@1140044 : Text[30];
      "via Email"@1140045 : Text[40];
      "via Email_adresse"@1140055 : Text[80];
      "via Email_unterschrift"@1140047 : Text[40];
      Account@1140049 : Text[90];
      v_bonusdatum@1140002 : Date;
      Andruck@1140053 : ARRAY [4] OF Text[80];
      v_FER_SPL@1140057 : Boolean;
      v_reverse@1140058 : Text[3];
      v_reverse1@1140059 : Text[3];
      v_reverse2@1140060 : Text[3];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header1@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite:=STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite:=STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Header3@5011(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        IF "Sales Invoice Header"."Currency Code" = '' THEN
          waehrungs_text := 'EUR'
        ELSE
          waehrungs_text := "Sales Invoice Header"."Currency Code";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Body5@5012(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        //ReportForNav.ShowOutput(Art = 0);
        // Unterdckt Artikeltexte wenn eine Artikelzeile nicht berechnet wird oder die Textzeilen aus Testkonserve 'Woche' oder leer ist
        vk_rech_zeile.SETFILTER("Document No.",'%1',Verkaufsrechnungszeile."Document No." );
        vk_rech_zeile.SETFILTER("Line No.",'%1',Verkaufsrechnungszeile."Attached to Line No." );
        IF vk_rech_zeile.FINDFIRST THEN BEGIN
          ReportForNav.ShowOutput(((vk_rech_zeile.Type = vk_rech_zeile.Type::Item) AND (vk_rech_zeile.Quantity > 0))
                                  OR (vk_rech_zeile.Type = 0) AND (vk_rech_zeile."No." <> 'WOCHE'));
        END ELSE BEGIN
          IF ((Verkaufsrechnungszeile."Attached to Line No." = 0) AND (Verkaufsrechnungszeile.Type = 0)
          AND (Verkaufsrechnungszeile."No." <> 'WOCHE') AND (Verkaufsrechnungszeile.Description <> '')) THEN
            ReportForNav.ShowOutput(TRUE)
          ELSE
            ReportForNav.ShowOutput(FALSE);
        END;
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Body6@5013(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput((Type = Type::"G/L Account")  AND (Verkaufsrechnungszeile.Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Body7@5014(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Body8@5015(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        {lshanf c03}
        ReportForNav.ShowOutput(("Description 2" <> '')
         AND (Verkaufsrechnungszeile.Type = Verkaufsrechnungszeile.Type::Item));
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Footer10@5016(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Footer11@5017(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Footer12@5018(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Footer13@5019(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Footer14@5020(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Footer16@5021(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Footer17@5022(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput(Customer."VAT Bus. Posting Group" <> 'HAN_AUSL' );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionVerkaufsrechnungszeile_Footer18@5023(VAR Verkaufsrechnungszeile@1000000000 : Record 113);
    BEGIN
      WITH Verkaufsrechnungszeile DO BEGIN
        ReportForNav.ShowOutput(Customer."VAT Bus. Posting Group" = 'HAN_AUSL' );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5024(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Verkaufsrechnungszeile.Type =Verkaufsrechnungszeile.Type::Item)
         AND (Verkaufsrechnungszeile.Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body20@5025(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Verkaufsrechnungszeile."Description 2" <> '')
         AND (Verkaufsrechnungszeile.Type =Verkaufsrechnungszeile.Type::Item) AND (Verkaufsrechnungszeile.Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body21@5026(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Verkaufsrechnungszeile.Type =Verkaufsrechnungszeile.Type::Item)
        AND (Verkaufsrechnungszeile.Quantity > 0) AND (Item."Tariff No." <> '') AND (Verkaufsrechnungszeile."Cross-Reference No." = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body22@5027(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Verkaufsrechnungszeile.Type =Verkaufsrechnungszeile.Type::Item)
        AND (Verkaufsrechnungszeile.Quantity > 0) AND (Item."Tariff No." <> '') AND (Verkaufsrechnungszeile."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body23@5028(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Verkaufsrechnungszeile.Type =Verkaufsrechnungszeile.Type::Item)
         AND (Verkaufsrechnungszeile.Quantity > 0) AND (Item."Tariff No." = '') AND (Verkaufsrechnungszeile."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body24@5029(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((Verkaufsrechnungszeile.Type =Verkaufsrechnungszeile.Type::Item)
         AND (Verkaufsrechnungszeile.Quantity > 0) AND (Item."ECCN-Nr." <>''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body25@5030(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        //ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item) AND
        // ("Sales Invoice Line".Quantity > 0) AND ("Sales Invoice Line"."VAT Prod. Posting Group"='13B2'));
        ReportForNav.ShowOutput((Verkaufsrechnungszeile."VAT Prod. Posting Group" = '13B2')
         AND (Verkaufsrechnungszeile.Type = Verkaufsrechnungszeile.Type::Item) AND (Verkaufsrechnungszeile.Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body31@5031(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput( Customer.Bonusregelung <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body32@5032(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse1 = '1'));
        //ReportForNav.ShowOutput(v_reverse1='1');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body33@5033(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(( "Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body34@5034(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body35@5035(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(( "Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse2 = '1'));
        //ReportForNav.ShowOutput(v_reverse2='1');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body36@5036(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        {lshanf c01}
        //IF ZlgBed."Discount %" <> 0 THEN BEGIN
        //  "Sales Invoice Header".CALCFIELDS(Skontobetrag);
        IF COPYSTR(ZlgBed.Description,1,1) <> '*' THEN
          gzbedtx := ZlgBed.Description;
        //     ELSE BEGIN
        //    gzbedtx := ZlgBed.Description;
        //END;
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body38@5037(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput :=
          "Sales Invoice Header"."Sell-to Customer No." <> "Sales Invoice Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header1': OnPreSectionSeiteSchleife_Header1(SeiteSchleife);
        END;
        'Verkaufsrechnungszeile': CASE SectionId OF
          'Header3': OnPreSectionVerkaufsrechnungszeile_Header3(Verkaufsrechnungszeile);
          'Body5': OnPreSectionVerkaufsrechnungszeile_Body5(Verkaufsrechnungszeile);
          'Body6': OnPreSectionVerkaufsrechnungszeile_Body6(Verkaufsrechnungszeile);
          'Body7': OnPreSectionVerkaufsrechnungszeile_Body7(Verkaufsrechnungszeile);
          'Body8': OnPreSectionVerkaufsrechnungszeile_Body8(Verkaufsrechnungszeile);
          'Footer10': OnPreSectionVerkaufsrechnungszeile_Footer10(Verkaufsrechnungszeile);
          'Footer11': OnPreSectionVerkaufsrechnungszeile_Footer11(Verkaufsrechnungszeile);
          'Footer12': OnPreSectionVerkaufsrechnungszeile_Footer12(Verkaufsrechnungszeile);
          'Footer13': OnPreSectionVerkaufsrechnungszeile_Footer13(Verkaufsrechnungszeile);
          'Footer14': OnPreSectionVerkaufsrechnungszeile_Footer14(Verkaufsrechnungszeile);
          'Footer16': OnPreSectionVerkaufsrechnungszeile_Footer16(Verkaufsrechnungszeile);
          'Footer17': OnPreSectionVerkaufsrechnungszeile_Footer17(Verkaufsrechnungszeile);
          'Footer18': OnPreSectionVerkaufsrechnungszeile_Footer18(Verkaufsrechnungszeile);
        END;
        'Item': CASE SectionId OF
          'Body19': OnPreSectionItem_Body19(Item);
          'Body20': OnPreSectionItem_Body20(Item);
          'Body21': OnPreSectionItem_Body21(Item);
          'Body22': OnPreSectionItem_Body22(Item);
          'Body23': OnPreSectionItem_Body23(Item);
          'Body24': OnPreSectionItem_Body24(Item);
          'Body25': OnPreSectionItem_Body25(Item);
        END;
        'Total': CASE SectionId OF
          'Body31': OnPreSectionTotal_Body31(Total);
          'Body32': OnPreSectionTotal_Body32(Total);
          'Body33': OnPreSectionTotal_Body33(Total);
          'Body34': OnPreSectionTotal_Body34(Total);
          'Body35': OnPreSectionTotal_Body35(Total);
          'Body36': OnPreSectionTotal_Body36(Total);
        END;
        'Total2': CASE SectionId OF
          'Body38': OnPreSectionTotal2_Body38(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'Verkaufsrechnungszeile': WITH Verkaufsrechnungszeile DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      030299 pl
      c01  Total, Body(1) und Globals
           Zahlungsbedingung vom Skonto abh„nging ausdrucken.
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      c02  Verkaufsrechnungszeile, C/AL und Globals
           Rechnungsrabatt %-Satz und Rabattgrundlage in Rechnungsrabattzeile mit ausdrucken.
      131099 al
      c03  Verkaufsrechnungszeile, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
+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
/uX/Ag==</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="Andruck1">
          <DataField>Andruck1</DataField>
        </Field>
        <Field Name="PostingDate_SalesInvoiceHeader">
          <DataField>PostingDate_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="Var_UST_ID">
          <DataField>Var_UST_ID</DataField>
        </Field>
        <Field Name="Steuernummer_verk_debitor">
          <DataField>Steuernummer_verk_debitor</DataField>
        </Field>
        <Field Name="Var_Steuernr">
          <DataField>Var_Steuernr</DataField>
        </Field>
        <Field Name="No_SalesInvoiceHeader">
          <DataField>No_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesInvoiceHeader">
          <DataField>Bill_toCustomerNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="OrderNo_SalesInvoiceHeader">
          <DataField>OrderNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="VATRegistrationNo_VkRK">
          <DataField>VATRegistrationNo_VkRK</DataField>
        </Field>
        <Field Name="OurAccountNo_verk_debitor">
          <DataField>OurAccountNo_verk_debitor</DataField>
        </Field>
        <Field Name="SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour">
          <DataField>SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="viaEmail_adresse">
          <DataField>viaEmail_adresse</DataField>
        </Field>
        <Field Name="viaEmail_unterschrift">
          <DataField>viaEmail_unterschrift</DataField>
        </Field>
        <Field Name="viaEmail">
          <DataField>viaEmail</DataField>
        </Field>
        <Field Name="seite">
          <DataField>seite</DataField>
        </Field>
        <Field Name="waehrungs_text">
          <DataField>waehrungs_text</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmount">
          <DataField>Amount_InvDiscountAmount</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmountFormat">
          <DataField>Amount_InvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description_Verkaufsrechnungszeile">
          <DataField>Description_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="UnitPrice_Verkaufsrechnungszeile">
          <DataField>UnitPrice_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="UnitPrice_VerkaufsrechnungszeileFormat">
          <DataField>UnitPrice_VerkaufsrechnungszeileFormat</DataField>
        </Field>
        <Field Name="einheiten_text">
          <DataField>einheiten_text</DataField>
        </Field>
        <Field Name="Quantity_Verkaufsrechnungszeile">
          <DataField>Quantity_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="Quantity_VerkaufsrechnungszeileFormat">
          <DataField>Quantity_VerkaufsrechnungszeileFormat</DataField>
        </Field>
        <Field Name="InvDiscountAmount_Verkaufsrechnungszeile">
          <DataField>InvDiscountAmount_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="InvDiscountAmount_VerkaufsrechnungszeileFormat">
          <DataField>InvDiscountAmount_VerkaufsrechnungszeileFormat</DataField>
        </Field>
        <Field Name="grechrabbetr">
          <DataField>grechrabbetr</DataField>
        </Field>
        <Field Name="grechrabbetrFormat">
          <DataField>grechrabbetrFormat</DataField>
        </Field>
        <Field Name="grechrabPct">
          <DataField>grechrabPct</DataField>
        </Field>
        <Field Name="grechrabPctFormat">
          <DataField>grechrabPctFormat</DataField>
        </Field>
        <Field Name="lead_free_text0">
          <DataField>lead_free_text0</DataField>
        </Field>
        <Field Name="lead_free_text1">
          <DataField>lead_free_text1</DataField>
        </Field>
        <Field Name="lead_free_text2">
          <DataField>lead_free_text2</DataField>
        </Field>
        <Field Name="lead_text">
          <DataField>lead_text</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="Amount_Verkaufsrechnungszeile">
          <DataField>Amount_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="Amount_VerkaufsrechnungszeileFormat">
          <DataField>Amount_VerkaufsrechnungszeileFormat</DataField>
        </Field>
        <Field Name="steuer_text">
          <DataField>steuer_text</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_Amount">
          <DataField>AmountIncludingVAT_Amount</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_AmountFormat">
          <DataField>AmountIncludingVAT_AmountFormat</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_Verkaufsrechnungszeile">
          <DataField>AmountIncludingVAT_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_VerkaufsrechnungszeileFormat">
          <DataField>AmountIncludingVAT_VerkaufsrechnungszeileFormat</DataField>
        </Field>
        <Field Name="v_reverse">
          <DataField>v_reverse</DataField>
        </Field>
        <Field Name="lead_symbol">
          <DataField>lead_symbol</DataField>
        </Field>
        <Field Name="Country_RegionofOriginCode_Item">
          <DataField>Country_RegionofOriginCode_Item</DataField>
        </Field>
        <Field Name="Herstellerkurzname_Item">
          <DataField>Herstellerkurzname_Item</DataField>
        </Field>
        <Field Name="LineNo_Verkaufsrechnungszeile">
          <DataField>LineNo_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="Artikelnr2_Verkaufsrechnungszeile">
          <DataField>Artikelnr2_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="Description_Verkaufsrechnungszeile3">
          <DataField>Description_Verkaufsrechnungszeile3</DataField>
        </Field>
        <Field Name="einheiten_text2">
          <DataField>einheiten_text2</DataField>
        </Field>
        <Field Name="Quantity_Verkaufsrechnungszeile2">
          <DataField>Quantity_Verkaufsrechnungszeile2</DataField>
        </Field>
        <Field Name="Quantity_Verkaufsrechnungszeile2Format">
          <DataField>Quantity_Verkaufsrechnungszeile2Format</DataField>
        </Field>
        <Field Name="UnitPrice_Verkaufsrechnungszeile2">
          <DataField>UnitPrice_Verkaufsrechnungszeile2</DataField>
        </Field>
        <Field Name="UnitPrice_Verkaufsrechnungszeile2Format">
          <DataField>UnitPrice_Verkaufsrechnungszeile2Format</DataField>
        </Field>
        <Field Name="VerkaufsrechnungszeileAmount_VerkaufsrechnungszeileInvDiscou">
          <DataField>VerkaufsrechnungszeileAmount_VerkaufsrechnungszeileInvDiscou</DataField>
        </Field>
        <Field Name="VerkaufsrechnungszeileAmount_VerkaufsrechnungszeileInvDiscouFormat">
          <DataField>VerkaufsrechnungszeileAmount_VerkaufsrechnungszeileInvDiscouFormat</DataField>
        </Field>
        <Field Name="Description2_Verkaufsrechnungszeile">
          <DataField>Description2_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="TariffNo_Item">
          <DataField>TariffNo_Item</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_Verkaufsrechnungszeile">
          <DataField>Cross_ReferenceNo_Verkaufsrechnungszeile</DataField>
        </Field>
        <Field Name="ECCN_Nr__ItemECCN_Nr">
          <DataField>ECCN_Nr__ItemECCN_Nr</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile2">
          <DataField>VATBase_MWSTBetragZeile2</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile2Format">
          <DataField>VATBase_MWSTBetragZeile2Format</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="v_bonusdatum">
          <DataField>v_bonusdatum</DataField>
        </Field>
        <Field Name="Account">
          <DataField>Account</DataField>
        </Field>
        <Field Name="gzbedtx">
          <DataField>gzbedtx</DataField>
        </Field>
        <Field Name="Description_LieferBed">
          <DataField>Description_LieferBed</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesInvoiceHeader_Lbl">
          <DataField>Sell_toCustomerNo_SalesInvoiceHeader_Lbl</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesInvoiceHeader">
          <DataField>Sell_toCustomerNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

