OBJECT Report 50074 TOPAS-Gutschrift-Einkauf
{
  OBJECT-PROPERTIES
  {
    Date=13.06.17;
    Time=08:38:34;
    Modified=Yes;
    Version List=Beleg,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;Purch. Cr. Memo Hdr.;
               DataItemTable=Table124;
               DataItemTableView=SORTING(No.);
               PrintOnlyIfDetail=Yes;
               ReqFilterHeadingML=DEU=Geb. Einkaufsgutschrift;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                               Firmendaten.CALCFIELDS(Picture,"ISO Logo");
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");
                                  IF "Purchaser Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Eink„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Purchaser Code");
                                    Eink„uferText := 'Eink„ufer'
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.PurchCrMemoPayTo(KredAdr,"Purch. Cr. Memo Hdr.");
                                  IF "Applies-to Doc. No." = '' THEN
                                    AusgleichText := ''
                                  ELSE
                                    AusgleichText := STRSUBSTNO('(Ausgleich fr %1 %2)',"Applies-to Doc. Type","Applies-to Doc. No.");
                                  FormatAdr.PurchCrMemoShipTo(LieferAnAdr,"Purch. Cr. Memo Hdr.");
                                END;

               ReqFilterFields=No.,Buy-from Vendor No.,No. Printed }

    { 2   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number > 1 THEN
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      KopieText := 'nkopie'
                                    ELSE
                                      KopieText := ' Copy';
                                  ReportForNav.PageNo := 1;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  EinkGutDruckZ„hler.RUN("Purch. Cr. Memo Hdr.");
                              END;
                               }

    { 3   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               PrintOnlyIfDetail=Yes }

    { 1000000000;3;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 4   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 5   ;3   ;Column  ;KopieText           ;
               SourceExpr=KopieText }

    { 6   ;3   ;Column  ;Buy_fromVendorNo_PurchCrMemoHdr;
               SourceExpr="Purch. Cr. Memo Hdr."."Buy-from Vendor No." }

    { 7   ;3   ;Column  ;DocumentDate_PurchCrMemoHdr;
               SourceExpr="Purch. Cr. Memo Hdr."."Document Date" }

    { 8   ;3   ;Column  ;SeitenText          ;
               SourceExpr=SeitenText }

    { 9   ;3   ;Column  ;KredAdr8            ;
               SourceExpr=KredAdr[8] }

    { 10  ;3   ;Column  ;KredAdr7            ;
               SourceExpr=KredAdr[7] }

    { 11  ;3   ;Column  ;VendorCrMemoNo_PurchCrMemoHdr;
               SourceExpr="Purch. Cr. Memo Hdr."."Vendor Cr. Memo No." }

    { 12  ;3   ;Column  ;No_PurchCrMemoHdr   ;
               SourceExpr="Purch. Cr. Memo Hdr."."No." }

    { 13  ;3   ;Column  ;VATRegistrationNo_PurchCrMemoHdr;
               SourceExpr="Purch. Cr. Memo Hdr."."VAT Registration No." }

    { 14  ;3   ;Column  ;MWStNrText          ;
               SourceExpr=MWStNrText }

    { 15  ;3   ;Column  ;KredAdr6            ;
               SourceExpr=KredAdr[6] }

    { 16  ;3   ;Column  ;KredAdr5            ;
               SourceExpr=KredAdr[5] }

    { 17  ;3   ;Column  ;KredAdr4            ;
               SourceExpr=KredAdr[4] }

    { 18  ;3   ;Column  ;KredAdr3            ;
               SourceExpr=KredAdr[3] }

    { 19  ;3   ;Column  ;KredAdr2            ;
               SourceExpr=KredAdr[2] }

    { 20  ;3   ;Column  ;KredAdr1            ;
               SourceExpr=KredAdr[1] }

    { 21  ;3   ;DataItem;                    ;
               DataItemTable=Table125;
               DataItemTableView=SORTING(Document No.,Line No.);
               PrintOnlyIfDetail=No;
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                END;

               DataItemLinkReference=Purch. Cr. Memo Hdr.;
               DataItemLink=Document No.=FIELD(No.) }

    { 22  ;4   ;Column  ;Amount_InvDiscountAmount;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 23  ;4   ;Column  ;Description_PurchCrMemoLine;
               SourceExpr=Description }

    { 24  ;4   ;Column  ;DirectUnitCost_PurchCrMemoLine;
               SourceExpr="Direct Unit Cost";
               AutoFormatType=2;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 25  ;4   ;Column  ;Quantity_PurchCrMemoLine;
               SourceExpr=Quantity }

    { 26  ;4   ;Column  ;InvDiscountAmount_PurchCrMemoLine;
               SourceExpr=-"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 27  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 28  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 29  ;4   ;Column  ;MWSTBetragZeileVATAmountText;
               SourceExpr=MWSTBetragZeile.VATAmountText }

    { 30  ;4   ;Column  ;AmountIncludingVAT_PurchCrMemoLine;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 31  ;4   ;Column  ;AmountIncludingVAT_Amount;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 32  ;4   ;Column  ;Amount_PurchCrMemoLine;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 33  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemLink=No.=FIELD(No.) }

    { 34  ;5   ;Column  ;LineNo_PurchCrMemoLine;
               SourceExpr="Purch. Cr. Memo Line"."Line No." }

    { 35  ;5   ;Column  ;Description_PurchCrMemoLine3;
               SourceExpr="Purch. Cr. Memo Line".Description }

    { 36  ;5   ;Column  ;Quantity_PurchCrMemoLine2;
               SourceExpr="Purch. Cr. Memo Line".Quantity }

    { 37  ;5   ;Column  ;DirectUnitCost_PurchCrMemoLine2;
               SourceExpr="Purch. Cr. Memo Line"."Direct Unit Cost";
               AutoFormatType=2;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 38  ;5   ;Column  ;PurchCrMemoLineAmount_PurchCrMemoLineInvDiscountAmount;
               SourceExpr="Purch. Cr. Memo Line".Amount+"Purch. Cr. Memo Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 39  ;5   ;Column  ;No_PurchCrMemoLine  ;
               SourceExpr="Purch. Cr. Memo Line"."No." }

    { 40  ;5   ;Column  ;Description2_Item   ;
               SourceExpr="Description 2" }

    { 41  ;4   ;DataItem;                    ;
               DataItemTable=Table32;
               DataItemLink=Document No.=FIELD(Document No.),
                            Document Line No.=FIELD(Line No.) }

    { 42  ;5   ;Column  ;Ursprungsland_ItemLedgerEntry;
               SourceExpr=Ursprungsland }

    { 43  ;5   ;Column  ;SerialNo__LotNo     ;
               SourceExpr="Serial No."+' '+"Lot No." }

    { 44  ;5   ;Column  ;Quantity_1          ;
               DecimalPlaces=0:0;
               SourceExpr=Quantity*(-1) }

    { 45  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 46  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Hdr."."Currency Code" }

    { 47  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Hdr."."Currency Code" }

    { 48  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 49  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               IF "Purch. Cr. Memo Hdr."."Buy-from Vendor No." = "Purch. Cr. Memo Hdr."."Pay-to Vendor No." THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 50  ;4   ;Column  ;Buy_fromVendorNo_PurchCrMemoHdr2_Lbl;
               SourceExpr="Purch. Cr. Memo Hdr.".FIELDCAPTION("Buy-from Vendor No.") }

    { 51  ;4   ;Column  ;Buy_fromVendorNo_PurchCrMemoHdr2;
               SourceExpr="Purch. Cr. Memo Hdr."."Buy-from Vendor No." }

    { 52  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               IF LieferAnAdr[1] = '' THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 53  ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 54  ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 55  ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 56  ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 57  ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 58  ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 59  ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 60  ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      Firmendaten@1140001 : Record 79;
      Language@1140019 : Record 8;
      VerkEinkPerson@1140002 : Record 13;
      MWSTBetragZeile@1140003 : TEMPORARY Record 290;
      EinkGutDruckZ„hler@1140004 : Codeunit 320;
      FormatAdr@1140005 : Codeunit 365;
      KredAdr@1140006 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140007 : ARRAY [8] OF Text[50];
      FirmaAdr@1140008 : ARRAY [8] OF Text[50];
      Eink„uferText@1140009 : Text[30];
      MWStNrText@1140010 : Text[30];
      ReferenzText@1140011 : Text[30];
      AusgleichText@1140012 : Text[40];
      TotalText@1140013 : Text[50];
      TotalInklMWStText@1140014 : Text[50];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      SeitenText@1140020 : Text[30];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header2@5033(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          SeitenText := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE SeitenText := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionPurchCrMemoLine_Body5@5034(VAR "Purch. Cr. Memo Line"@1000000000 : Record 125);
    BEGIN
      WITH "Purch. Cr. Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionPurchCrMemoLine_Body6@5035(VAR "Purch. Cr. Memo Line"@1000000000 : Record 125);
    BEGIN
      WITH "Purch. Cr. Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionPurchCrMemoLine_Body7@5036(VAR "Purch. Cr. Memo Line"@1000000000 : Record 125);
    BEGIN
      WITH "Purch. Cr. Memo Line" DO BEGIN
        ReportForNav.ShowOutput((Type = Type::Item) OR (Type = Type::"Fixed Asset"));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionPurchCrMemoLine_Body8@5037(VAR "Purch. Cr. Memo Line"@1000000000 : Record 125);
    BEGIN
      WITH "Purch. Cr. Memo Line" DO BEGIN
        ReportForNav.ShowOutput("Description 2" <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionPurchCrMemoLine_Footer11@5038(VAR "Purch. Cr. Memo Line"@1000000000 : Record 125);
    BEGIN
      WITH "Purch. Cr. Memo Line" DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body13@5039(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Purch. Cr. Memo Line".Type = "Purch. Cr. Memo Line".Type::Item)
         OR ("Purch. Cr. Memo Line".Type = "Purch. Cr. Memo Line".Type::"Fixed Asset"));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body14@5040(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Description 2" <> '');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header2': OnPreSectionSeiteSchleife_Header2(SeiteSchleife);
        END;
        'PurchCrMemoLine': CASE SectionId OF
          'Body5': OnPreSectionPurchCrMemoLine_Body5("Purch. Cr. Memo Line");
          'Body6': OnPreSectionPurchCrMemoLine_Body6("Purch. Cr. Memo Line");
          'Body7': OnPreSectionPurchCrMemoLine_Body7("Purch. Cr. Memo Line");
          'Body8': OnPreSectionPurchCrMemoLine_Body8("Purch. Cr. Memo Line");
          'Footer11': OnPreSectionPurchCrMemoLine_Footer11("Purch. Cr. Memo Line");
        END;
        'Item': CASE SectionId OF
          'Body13': OnPreSectionItem_Body13(Item);
          'Body14': OnPreSectionItem_Body14(Item);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // Do not change (Autogenerated by Reports ForNAV) - Instead change the Create Totals, Total Fields or Group Total Fields properties on the Data item in the ForNAV designer
      CASE DataItemId OF
        'PurchCrMemoLine': WITH "Purch. Cr. Memo Line" DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      Žnderung am Standard 2.01 Lederer Systemhaus: Ulrich Gepp
      Erstellt am : 23.06.99
      -----------------------------------------------------------------------------------------
      Adressfeld auf Fensterkurvert-Norm gesetzt.
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>38977963-9eed-4f48-a413-c74ccf67b4c8</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>d240704c-4683-4c17-be65-a0ebc0634bee</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="KopieText">
          <DataField>KopieText</DataField>
        </Field>
        <Field Name="Buy_fromVendorNo_PurchCrMemoHdr">
          <DataField>Buy_fromVendorNo_PurchCrMemoHdr</DataField>
        </Field>
        <Field Name="DocumentDate_PurchCrMemoHdr">
          <DataField>DocumentDate_PurchCrMemoHdr</DataField>
        </Field>
        <Field Name="SeitenText">
          <DataField>SeitenText</DataField>
        </Field>
        <Field Name="KredAdr8">
          <DataField>KredAdr8</DataField>
        </Field>
        <Field Name="KredAdr7">
          <DataField>KredAdr7</DataField>
        </Field>
        <Field Name="VendorCrMemoNo_PurchCrMemoHdr">
          <DataField>VendorCrMemoNo_PurchCrMemoHdr</DataField>
        </Field>
        <Field Name="No_PurchCrMemoHdr">
          <DataField>No_PurchCrMemoHdr</DataField>
        </Field>
        <Field Name="VATRegistrationNo_PurchCrMemoHdr">
          <DataField>VATRegistrationNo_PurchCrMemoHdr</DataField>
        </Field>
        <Field Name="MWStNrText">
          <DataField>MWStNrText</DataField>
        </Field>
        <Field Name="KredAdr6">
          <DataField>KredAdr6</DataField>
        </Field>
        <Field Name="KredAdr5">
          <DataField>KredAdr5</DataField>
        </Field>
        <Field Name="KredAdr4">
          <DataField>KredAdr4</DataField>
        </Field>
        <Field Name="KredAdr3">
          <DataField>KredAdr3</DataField>
        </Field>
        <Field Name="KredAdr2">
          <DataField>KredAdr2</DataField>
        </Field>
        <Field Name="KredAdr1">
          <DataField>KredAdr1</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmount">
          <DataField>Amount_InvDiscountAmount</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmountFormat">
          <DataField>Amount_InvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description_PurchCrMemoLine">
          <DataField>Description_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="DirectUnitCost_PurchCrMemoLine">
          <DataField>DirectUnitCost_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="DirectUnitCost_PurchCrMemoLineFormat">
          <DataField>DirectUnitCost_PurchCrMemoLineFormat</DataField>
        </Field>
        <Field Name="Quantity_PurchCrMemoLine">
          <DataField>Quantity_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="Quantity_PurchCrMemoLineFormat">
          <DataField>Quantity_PurchCrMemoLineFormat</DataField>
        </Field>
        <Field Name="InvDiscountAmount_PurchCrMemoLine">
          <DataField>InvDiscountAmount_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="InvDiscountAmount_PurchCrMemoLineFormat">
          <DataField>InvDiscountAmount_PurchCrMemoLineFormat</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="MWSTBetragZeileVATAmountText">
          <DataField>MWSTBetragZeileVATAmountText</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_PurchCrMemoLine">
          <DataField>AmountIncludingVAT_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_PurchCrMemoLineFormat">
          <DataField>AmountIncludingVAT_PurchCrMemoLineFormat</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_Amount">
          <DataField>AmountIncludingVAT_Amount</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_AmountFormat">
          <DataField>AmountIncludingVAT_AmountFormat</DataField>
        </Field>
        <Field Name="Amount_PurchCrMemoLine">
          <DataField>Amount_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="Amount_PurchCrMemoLineFormat">
          <DataField>Amount_PurchCrMemoLineFormat</DataField>
        </Field>
        <Field Name="LineNo_PurchCrMemoLine">
          <DataField>LineNo_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="Description_PurchCrMemoLine3">
          <DataField>Description_PurchCrMemoLine3</DataField>
        </Field>
        <Field Name="Quantity_PurchCrMemoLine2">
          <DataField>Quantity_PurchCrMemoLine2</DataField>
        </Field>
        <Field Name="Quantity_PurchCrMemoLine2Format">
          <DataField>Quantity_PurchCrMemoLine2Format</DataField>
        </Field>
        <Field Name="DirectUnitCost_PurchCrMemoLine2">
          <DataField>DirectUnitCost_PurchCrMemoLine2</DataField>
        </Field>
        <Field Name="DirectUnitCost_PurchCrMemoLine2Format">
          <DataField>DirectUnitCost_PurchCrMemoLine2Format</DataField>
        </Field>
        <Field Name="PurchCrMemoLineAmount_PurchCrMemoLineInvDiscountAmount">
          <DataField>PurchCrMemoLineAmount_PurchCrMemoLineInvDiscountAmount</DataField>
        </Field>
        <Field Name="PurchCrMemoLineAmount_PurchCrMemoLineInvDiscountAmountFormat">
          <DataField>PurchCrMemoLineAmount_PurchCrMemoLineInvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="No_PurchCrMemoLine">
          <DataField>No_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="Description2_Item">
          <DataField>Description2_Item</DataField>
        </Field>
        <Field Name="Ursprungsland_ItemLedgerEntry">
          <DataField>Ursprungsland_ItemLedgerEntry</DataField>
        </Field>
        <Field Name="SerialNo__LotNo">
          <DataField>SerialNo__LotNo</DataField>
        </Field>
        <Field Name="Quantity_1">
          <DataField>Quantity_1</DataField>
        </Field>
        <Field Name="Quantity_1Format">
          <DataField>Quantity_1Format</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="Buy_fromVendorNo_PurchCrMemoHdr2_Lbl">
          <DataField>Buy_fromVendorNo_PurchCrMemoHdr2_Lbl</DataField>
        </Field>
        <Field Name="Buy_fromVendorNo_PurchCrMemoHdr2">
          <DataField>Buy_fromVendorNo_PurchCrMemoHdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

