OBJECT Report 50076 TOPAS-Rechnung
{
  OBJECT-PROPERTIES
  {
    Date=16.07.24;
    Time=09:12:16;
    Modified=Yes;
    Version List=Beleg Rechnungskopie --> 50131 !!!,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table112;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufsrechnung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS(Picture,"ISO Logo","Event Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  VkRK := "Sales Invoice Header";
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Location Code" = 'MUST' THEN CurrReport.SKIP;
                                  v_reverse1 := '';
                                  IF "Order No." = '' THEN
                                    AuftragNrText := ''
                                  ELSE
                                    AuftragNrText := FIELDNAME("Order No.");
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesInvBillTo(DebAdr,"Sales Invoice Header");
                                  Deb.GET("Bill-to Customer No.");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesInvShipTo(LieferAnAdr,"Sales Invoice Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + 'EUR' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  v_bonusdatum := 0D;
                                  v_FER_SPL := FALSE;
                                  //2015-09-07 ST Unterdrckt den Ausdruck der Original Rechnung, wenn Kunde keine ben”tigt,
                                  //fr den Batch Job wird die Rechnung aber wieder komplett sichtbar
                                  IF Deb."Original RE nicht drucken" THEN BEGIN
                                    IF PrinterSelection.GET(USERID,50076) THEN BEGIN
                                      IF (PrinterSelection."Printer Name" <> 'PDFCreator')
                                      AND (PrinterSelection."Printer Name" <> 'Bullzip PDF Printer') THEN
                                        CurrReport.BREAK;
                                    END ELSE
                                      CurrReport.BREAK;
                                  END;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table291;
               OnAfterGetRecord=BEGIN
                                  spedition := "Shipping Agent";
                                END;

               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  verk_debitor := Customer;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF Steuernummer = '' THEN
                                      Var_Steuernr := ''
                                    ELSE
                                     Var_Steuernr := 'Ihre Steuernummer:';
                                    IF "VAT Registration No." = '' THEN
                                      Var_UST_ID := ''
                                    ELSE
                                      Var_UST_ID := FIELDNAME("VAT Registration No.");
                                  END ELSE BEGIN
                                    Var_Steuernr := '';
                                    IF "VAT Registration No." = '' THEN
                                      Var_UST_ID := ''
                                    ELSE
                                      Var_UST_ID := 'Tax Number';
                                  END;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF "Sales Invoice Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Sales Invoice Header"."Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Sales Invoice Header"."Currency Code");
                                    END;
                                  END ELSE BEGIN
                                    IF "Sales Invoice Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Sales Invoice Header"."Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',"Sales Invoice Header"."Currency Code");
                                    END;
                                  END;
                                  //Bonusdatum fllen
                                  IF  Customer.Bonusregelung <> '' THEN
                                    v_bonusdatum := Customer.Bonusdatum;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 4   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Deb."Invoice Copies" := 2;
                               //AnzSchleifen := ABS(AnzKopien) + Deb."Anzahl Rechnungskopien" + 1;
                               AnzSchleifen := 1;
                               IF AnzSchleifen <= 0 THEN
                                 AnzSchleifen := 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               IF (("Sales Invoice Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Invoice Header"."Shipment Method Code" = 'ACC-ENG')) THEN BEGIN
                                 //Account := "Sales Invoice Header".Spediteuraccount;
                                 Account := "Shipping Agent".Name + ' / ' + "Sales Invoice Header".Spediteuraccount;
                               END ELSE BEGIN
                                 Account := "Shipping Agent".Name
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  //IF Nummer > 2 THEN
                                  //  ReportForNav.PrinterSettings.PaperSource(3);

                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    //IF Number > 1 THEN KopieText := 'skopie';
                                    IF (Number > 1) OR ("Sales Invoice Header"."No. Printed" > 0) THEN KopieText := 'skopie';
                                    ReportForNav.PageNo := 1;
                                  END ELSE BEGIN
                                    //IF Number > 1 THEN KopieText := ' Copy';
                                    IF (Number > 1) OR ("Sales Invoice Header"."No. Printed" > 0) THEN KopieText := ' Copy';
                                    ReportForNav.PageNo := 1;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkRechDruckZ„hler.RUN("Sales Invoice Header");
                              END;
                               }

    { 5   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 6   ;3   ;Column  ;Picture_Firmendaten ;
               SourceExpr=Firmendaten.Picture }

    { 7   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000014;3;Column;EventLogo_Firmendaten;
               SourceExpr=Firmendaten."Event Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 1000000004;3;Column;CompanyEORINr      ;
               SourceExpr=CompanyInfo[16] }

    { 8   ;3   ;Column  ;Lieferscheinnr      ;
               SourceExpr=Lieferscheinnr }

    { 9   ;3   ;Column  ;Belegdatum          ;
               SourceExpr=Belegdatum }

    { 10  ;3   ;Column  ;Var_UST_ID          ;
               SourceExpr=Var_UST_ID }

    { 11  ;3   ;Column  ;Steuernummer_verk_debitor;
               SourceExpr=verk_debitor.Steuernummer }

    { 12  ;3   ;Column  ;Var_Steuernr        ;
               SourceExpr=Var_Steuernr }

    { 13  ;3   ;Column  ;KopieText           ;
               SourceExpr=KopieText }

    { 14  ;3   ;Column  ;No_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."No." }

    { 15  ;3   ;Column  ;Bill_toCustomerNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Bill-to Customer No." }

    { 16  ;3   ;Column  ;OrderNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Order No." }

    { 17  ;3   ;Column  ;VATRegistrationNo_VkRK;
               SourceExpr=VkRK."VAT Registration No." }

    { 18  ;3   ;Column  ;OurAccountNo_verk_debitor;
               SourceExpr=verk_debitor."Our Account No." }

    { 19  ;3   ;Column  ;SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour;
               SourceExpr="Sales Invoice Header"."External Document No."+' '+"Sales Invoice Header"."Your Reference" }

    { 20  ;3   ;Column  ;PostingDate_SalesInvoiceHeader;
               SourceExpr=FORMAT("Sales Invoice Header"."Posting Date",0,1) }

    { 21  ;3   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 22  ;3   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 23  ;3   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 24  ;3   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 25  ;3   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 26  ;3   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 27  ;3   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 28  ;3   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 29  ;3   ;Column  ;seite               ;
               SourceExpr=seite }

    { 30  ;3   ;DataItem;Sales Invoice Line  ;
               DataItemTable=Table113;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                               {lshanf c02}
                               grechrabbetr := 0;
                               {lshend}
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  {lshanf c02}
                                  IF "Inv. Discount Amount" <> 0 THEN BEGIN
                                    "grechrab%" := ("Inv. Discount Amount" * 100) / (Amount + "Inv. Discount Amount");
                                    grechrabbetr := grechrabbetr + Amount + "Inv. Discount Amount";
                                  END;
                                  {lshend}
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    steuer_text := MWSTBetragZeile.VATAmountText ;
                                    einheiten_text := "Sales Invoice Line"."Unit of Measure";
                                  END ELSE BEGIN
                                    steuer_text := MWSTBetragZeile.VATAmountText;
                                    IF "Sales Invoice Line"."Unit of Measure" <> 'STšCK' THEN
                                      einheiten_text := 'pcs.'
                                    ELSE
                                      einheiten_text := "Sales Invoice Line"."Unit of Measure";
                                  END;

                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Invoice Line".Type = "Sales Invoice Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Invoice Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND ("Sales Invoice Line".Quantity > 0) THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                  IF v_FER_SPL = FALSE THEN BEGIN
                                    IF (("Sales Invoice Line"."Manufacturer Code" ='82') OR ("Sales Invoice Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 31  ;4   ;Column  ;waehrungs_text      ;
               SourceExpr=waehrungs_text }

    { 32  ;4   ;Column  ;Amount_InvDiscountAmount;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 33  ;4   ;Column  ;Description_SalesInvoiceLine;
               SourceExpr=Description }

    { 34  ;4   ;Column  ;UnitPrice_SalesInvoiceLine;
               SourceExpr="Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 35  ;4   ;Column  ;einheiten_text      ;
               SourceExpr=einheiten_text }

    { 36  ;4   ;Column  ;Quantity_SalesInvoiceLine;
               SourceExpr=Quantity }

    { 37  ;4   ;Column  ;InvDiscountAmount_SalesInvoiceLine;
               SourceExpr=-"Inv. Discount Amount" }

    { 38  ;4   ;Column  ;grechrabbetr        ;
               SourceExpr=grechrabbetr }

    { 39  ;4   ;Column  ;grechrabPct         ;
               SourceExpr="grechrab%" }

    { 40  ;4   ;Column  ;lead_free_text0     ;
               SourceExpr=lead_free_text0 }

    { 41  ;4   ;Column  ;lead_free_text1     ;
               SourceExpr=lead_free_text1 }

    { 42  ;4   ;Column  ;lead_free_text2     ;
               SourceExpr=lead_free_text2 }

    { 43  ;4   ;Column  ;lead_text           ;
               SourceExpr=lead_text }

    { 44  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 45  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 46  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 47  ;4   ;Column  ;steuer_text         ;
               SourceExpr=steuer_text }

    { 48  ;4   ;Column  ;AmountIncludingVAT_SalesInvoiceLine;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 49  ;4   ;Column  ;AmountIncludingVAT_Amount;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 50  ;4   ;Column  ;Amount_SalesInvoiceLine;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 51  ;4   ;Column  ;SalesInvoiceLineGetCurrencyCode;
               SourceExpr="Sales Invoice Line".GetCurrencyCode;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 1000000003;4;Column;SalesInvoiceLineSWalsLeistung;
               SourceExpr="Sales Invoice Line"."SW als Leistung" }

    { 52  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnPreDataItem=BEGIN
                               IF debart <> '' THEN
                                 debart := 'Ihre Artikelnummer: ' + debart;
                             END;

               OnAfterGetRecord=BEGIN
                                  v_reverse := ' ';
                                  //IF Item."Global Dimension 2 Code" = 'WARTUNG' THEN BEGIN
                                  //  v_reverse := 'ø*';
                                  //  v_reverse1 := '1';
                                  //END;
                                  {
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" = 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '**';
                                      v_reverse1 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" <> 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '***';
                                      v_reverse2 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group"='AUSLAND') AND (Item."Gen. Prod. Posting Group" = 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '**';
                                      v_reverse1 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group"='AUSLAND') AND (Item."Gen. Prod. Posting Group" <> 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '***';
                                      v_reverse2 := '1';
                                    END;
                                  END;
                                  }
                                  //// Ab hier fr 16%
                                  {
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = '16_SYSTEM') OR (Item."Gen. Prod. Posting Group" = '16_HANDEL')) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                        IF ((Item."Gen. Prod. Posting Group" = '16_SCHULUN') OR (Item."Gen. Prod. Posting Group" = '16_SERVICE') OR (Item."Gen. Prod. Posting Group" = '16_STD_POO')) THEN BEGIN
                                          IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = '16_SYSTEM') AND ("Sales Invoice Line"."SW als Leistung" = TRUE)) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '***';
                                          v_reverse1 := '';
                                          v_reverse2 := '1';
                                        END;
                                      END;
                                    END;
                                  END;
                                  }

                                  ////  Ab hier fr 19%
                                  IF "Sales Invoice Header"."Bill-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                    IF ((Item."Gen. Prod. Posting Group" = 'SYSTEM') OR (Item."Gen. Prod. Posting Group" = 'HANDEL')) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = 'SCHULUNG') OR (Item."Gen. Prod. Posting Group" = 'SERVICE') OR (Item."Gen. Prod. Posting Group" = 'STD_POOL')) THEN BEGIN
                                          IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;

                                  IF "Sales Invoice Header"."Bill-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = 'SYSTEM') AND ("Sales Invoice Line"."SW als Leistung" = TRUE)) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '***';
                                          v_reverse1 := '';
                                          v_reverse2 := '1';
                                        END;
                                      END;
                                    END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                debart := '';
                              END;

               DataItemLinkReference=Sales Invoice Line;
               DataItemLink=No.=FIELD(No.) }

    { 53  ;5   ;Column  ;v_reverse           ;
               SourceExpr=v_reverse }

    { 54  ;5   ;Column  ;lead_symbol         ;
               SourceExpr=lead_symbol }

    { 55  ;5   ;Column  ;vUrsprungsland      ;
               SourceExpr=vUrsprungsland }

    { 56  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 57  ;5   ;Column  ;LineNo_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Line No." }

    { 58  ;5   ;Column  ;Artikelnr2_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Artikelnr. 2" }

    { 59  ;5   ;Column  ;Description_SalesInvoiceLine3;
               SourceExpr="Sales Invoice Line".Description }

    { 60  ;5   ;Column  ;einheiten_text2     ;
               SourceExpr=einheiten_text }

    { 61  ;5   ;Column  ;Quantity_SalesInvoiceLine2;
               SourceExpr="Sales Invoice Line".Quantity }

    { 62  ;5   ;Column  ;UnitPrice_SalesInvoiceLine2;
               SourceExpr="Sales Invoice Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 63  ;5   ;Column  ;SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmount;
               SourceExpr="Sales Invoice Line".Amount+"Sales Invoice Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 64  ;5   ;Column  ;Description2_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Description 2" }

    { 65  ;5   ;Column  ;TariffNo_Item       ;
               SourceExpr="Tariff No." }

    { 66  ;5   ;Column  ;Cross_ReferenceNo_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Cross-Reference No." }

    { 67  ;5   ;Column  ;ECCN_Nr__ItemECCN_Nr;
               SourceExpr='ECCN-Nr.: '+ Item."ECCN-Nr." }

    { 68  ;5   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 69  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=No.=FIELD(No.) }

    { 70  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 71  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 72  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 73  ;4   ;Column  ;VATBase_MWSTBetragZeile2;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 74  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 75  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 76  ;4   ;Column  ;v_bonusdatum        ;
               SourceExpr=v_bonusdatum }

    { 77  ;4   ;Column  ;Account             ;
               SourceExpr=Account }

    { 78  ;4   ;Column  ;Description_LieferBed;
               SourceExpr=LieferBed.Description }

    { 79  ;4   ;Column  ;gzbedtx             ;
               SourceExpr=gzbedtx }

    { 80  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 81  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader_Lbl;
               SourceExpr="Sales Invoice Header".FIELDCAPTION("Sell-to Customer No.") }

    { 82  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Sell-to Customer No." }

    { 83  ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 84  ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 85  ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 86  ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 87  ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 88  ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 89  ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 90  ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;;Container;
                  Name=UB;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      waehrung2@1140000 : Code[10];
      waehrung@1140001 : Code[10];
      debart@1140002 : Text[80];
      spedition@1140003 : Record 291;
      art1@1140004 : Record 27;
      verk_debitor@1140005 : Record 18;
      FIBUEinrichtung@1140006 : Record 98;
      LieferBed@1140007 : Record 10;
      ZlgBed@1140008 : Record 3;
      VerkEinkPerson@1140009 : Record 13;
      Firmendaten@1140010 : Record 79;
      Deb@1140011 : Record 18;
      MWSTBetragZeile@1140012 : TEMPORARY Record 290;
      language@1140061 : Record 8;
      PrinterSelection@1140065 : Record 78;
      VerkRechDruckZ„hler@1140013 : Codeunit 315;
      FormatAdr@1140014 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [20] OF Text;
      DebAdr@1140015 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140016 : ARRAY [8] OF Text[50];
      FirmaAdr@1140017 : ARRAY [8] OF Text[50];
      AuftragNrText@1140018 : Text[30];
      Verk„uferText@1140019 : Text[30];
      MWStNrText@1140020 : Text[30];
      ReferenzText@1140021 : Text[30];
      TotalText@1140022 : Text[50];
      TotalInklMWStText@1140023 : Text[50];
      MehrZeilen@1140024 : Boolean;
      AnzKopien@1140025 : Integer;
      AnzSchleifen@1140026 : Integer;
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      "--------LSH--------"@1140030 : Integer;
      "grechrab%"@1140031 : Decimal;
      grechrabbetr@1140032 : Decimal;
      gzbedtx@1140033 : Text[100];
      lead_free_text0@1140034 : Text[80];
      lead_free_text1@1140035 : Text[80];
      leadfree_symbol@1140036 : Text[3];
      leadfree_artikel@1140037 : Record 27;
      lead_artikel@1140055 : Record 27;
      lead_symbol@1140057 : Text[3];
      lead_text@1140056 : Text[120];
      lead_free_text2@1140038 : Text[80];
      Var_UST_ID@1140039 : Text[20];
      Var_Steuernr@1140040 : Text[20];
      steuer_text@1140041 : Text[30];
      seite@1140042 : Text[30];
      waehrungs_text@1140043 : Text[15];
      einheiten_text@1140044 : Text[30];
      vk_rech_zeile@1140045 : Record 113;
      Account@1140046 : Text[90];
      vUrsprungsland@1140047 : Text[50];
      Lieferscheinnr@1140052 : Code[20];
      Belegdatum@1140054 : Date;
      InvoiceRowID@1140048 : Text[100];
      ValueEntryRelation@1140049 : Record 6508;
      ValueEntry@1140050 : Record 5802;
      ItemLedgerEntry@1140051 : Record 32;
      VkZeile@1140053 : Record 113;
      v_bonusdatum@1140058 : Date;
      v_reverse@1140059 : Text[3];
      v_reverse1@1140060 : Text[3];
      v_reverse2@1140063 : Text[3];
      v_FER_SPL@1140062 : Boolean;
      VkRK@1140064 : Record 112;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header1@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //TOPAS 13.05.09 ST - Lieferscheinnr. auf Rechnung anzeigen
        Lieferscheinnr := '';
        Belegdatum := 0D;
        VkZeile.RESET;
        VkZeile.SETFILTER("Document No.","Sales Invoice Header"."No.");
        IF CurrReport.LANGUAGE = 1031 THEN
          VkZeile.SETFILTER(Type,'Artikel')
        ELSE
          VkZeile.SETFILTER(Type,'Item');
        VkZeile.SETFILTER(Quantity,'>%1',0);
        IF VkZeile.FINDFIRST THEN BEGIN
          InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,VkZeile."Document No.",'',0,VkZeile."Line No.");
          ValueEntryRelation.SETCURRENTKEY("Source RowId");
          ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
          IF ValueEntryRelation.FINDFIRST THEN BEGIN
            ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
            IF ValueEntry.FINDFIRST THEN BEGIN
              ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
              IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                Lieferscheinnr := ItemLedgerEntry."Document No.";
                Belegdatum := ItemLedgerEntry."Document Date";
              END;
            END;
          END;
        END;
        //TOPAS 29.06.15 ST - rendert das Firmenlogo fr Batch L„ufe, da das Logo beim normalen Druck vom Briefpapier bezogen wird
        IF PrinterSelection.GET(USERID,50076) THEN BEGIN
          IF (PrinterSelection."Printer Name" = 'PDFCreator')
          OR (PrinterSelection."Printer Name" = 'Bullzip PDF Printer') THEN
            Firmendaten.CALCFIELDS(Picture);
        END;
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS Ende
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Header3@5011(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        IF "Sales Invoice Header"."Currency Code" = '' THEN
          waehrungs_text := 'EUR'
        ELSE
          waehrungs_text := "Sales Invoice Header"."Currency Code";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body5@5012(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        // ReportForNav.ShowOutput(Art = 0);
        // Unterdckt Artikeltexte wenn eine Artikelzeile nicht berechnet wird oder die Textzeilen aus Testkonserve 'Woche' oder leer ist
        vk_rech_zeile.SETFILTER("Document No.",'%1',"Sales Invoice Line"."Document No." );
        vk_rech_zeile.SETFILTER("Line No.",'%1',"Sales Invoice Line"."Attached to Line No." );
        IF vk_rech_zeile.FINDFIRST THEN BEGIN
          ReportForNav.ShowOutput(((vk_rech_zeile.Type = vk_rech_zeile.Type::Item) AND (vk_rech_zeile.Quantity > 0))
                                    OR (vk_rech_zeile.Type = 0) AND (vk_rech_zeile."No." <> 'WOCHE'));
        END ELSE BEGIN
          IF (("Sales Invoice Line"."Attached to Line No." = 0) AND ("Sales Invoice Line".Type = 0)
          AND ("Sales Invoice Line"."No." <> 'WOCHE') AND ("Sales Invoice Line".Description <> '')) THEN
            ReportForNav.ShowOutput(TRUE)
          ELSE
            ReportForNav.ShowOutput(FALSE);
        END;
        IF "Sales Invoice Line"."No." = 'LIEF_DRUCK' THEN
          ReportForNav.ShowOutput(FALSE);
        IF "Sales Invoice Line"."No." = 'LIEF_DRU_A' THEN
          ReportForNav.ShowOutput(TRUE);
        IF "Sales Invoice Line"."No." = 'BEIERSDORF' THEN
          ReportForNav.ShowOutput(TRUE);
        IF "Sales Invoice Line"."No." = 'AB_DRUCK' THEN
          ReportForNav.ShowOutput(FALSE);
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body6@5013(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput((Type = Type::"G/L Account")  AND ("Sales Invoice Line".Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body7@5014(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body8@5015(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        {lshanf c03}
        ReportForNav.ShowOutput(("Description 2" <> '') AND ("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item));
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer10@5016(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer11@5017(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer12@5018(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer13@5019(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer14@5020(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer16@5021(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
          ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer17@5022(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Customer."VAT Bus. Posting Group" <> 'HAN_AUSL' );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer18@5023(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Customer."VAT Bus. Posting Group" = 'HAN_AUSL' );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5024(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND ("Sales Invoice Line".Quantity > 0));
        //TOPAS 22.07.08 ST -Artikelposten / Wertposten holen , um Ursprungsland zu fllen
        vUrsprungsland := '';
        InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,"Sales Invoice Line"."Document No.",'',0,"Sales Invoice Line"."Line No.");
        ValueEntryRelation.SETCURRENTKEY("Source RowId");
        ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
        IF ValueEntryRelation.FINDFIRST THEN BEGIN
          REPEAT
            ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
            IF ValueEntry.FINDFIRST THEN BEGIN
              ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
              IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                IF vUrsprungsland <> '' THEN BEGIN
                  IF STRPOS(vUrsprungsland,ItemLedgerEntry.Ursprungsland) = 0 THEN
                  vUrsprungsland := vUrsprungsland + ',' + ItemLedgerEntry.Ursprungsland;
                END ELSE
                  vUrsprungsland := ItemLedgerEntry.Ursprungsland;
              END;
            END;
          UNTIL ValueEntryRelation.NEXT = 0;
        END;
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body20@5025(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line"."Description 2" <> '')
         AND ("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND ("Sales Invoice Line".Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body21@5026(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(((Item.NCNR = TRUE) AND ("Sales Invoice Line".Quantity > 0)) OR ((Item."Manufacturer Code" = '00')
         AND ("Sales Invoice Line".Quantity > 0)));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body22@5027(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        //debitor_artikel.SETFILTER(debitor_artikel."Artikelnr.",'%1',"Sales Invoice Line"."No.");
        //debitor_artikel.SETFILTER(debitor_artikel."Debitornr.",'%1',"Sales Invoice Line"."Sell-to Customer No.");
        //ReportForNav.ShowOutput((NOT debitor_artikel.FIND('-')) AND ("Sales Invoice Line".Quantity > 0) AND
        // ("Sales Invoice Line"."Cross-Reference No."='') AND (Item."Tariff No." <> ''));
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item)
         AND ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." <> '') AND ("Sales Invoice Line"."Cross-Reference No." = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body23@5028(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item)
         AND ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." <> '') AND ("Sales Invoice Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body24@5029(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." = '') AND ("Sales Invoice Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body25@5030(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND (Item."ECCN-Nr." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body26@5031(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND ("Sales Invoice Line"."VAT Prod. Posting Group" = '13B2'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body32@5032(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(Customer.Bonusregelung <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body33@5033(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse1 = '1'));
        //ReportForNav.ShowOutput(v_reverse1='1');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body34@5034(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body35@5035(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body36@5036(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group"  = 'EU') AND (v_reverse2 = '1'));
        //ReportForNav.ShowOutput("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU');
        //ReportForNav.ShowOutput(v_reverse2 = '1');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body37@5037(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        {lshanf c01}
        IF ZlgBed."Discount %" <> 0 THEN BEGIN
        //  "Sales Invoice Header".CALCFIELDS(Skontobetrag);
          IF COPYSTR(ZlgBed.Description,1,1) <> '*' THEN
            gzbedtx := ZlgBed.Description;
        END ELSE BEGIN
            gzbedtx := ZlgBed.Description;
        END;
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body39@5038(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Invoice Header"."Sell-to Customer No." <> "Sales Invoice Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header1': OnPreSectionSeiteSchleife_Header1(SeiteSchleife);
        END;
        'SalesInvoiceLine': CASE SectionId OF
          'Header3': OnPreSectionSalesInvoiceLine_Header3("Sales Invoice Line");
          'Body5': OnPreSectionSalesInvoiceLine_Body5("Sales Invoice Line");
          'Body6': OnPreSectionSalesInvoiceLine_Body6("Sales Invoice Line");
          'Body7': OnPreSectionSalesInvoiceLine_Body7("Sales Invoice Line");
          'Body8': OnPreSectionSalesInvoiceLine_Body8("Sales Invoice Line");
          'Footer10': OnPreSectionSalesInvoiceLine_Footer10("Sales Invoice Line");
          'Footer11': OnPreSectionSalesInvoiceLine_Footer11("Sales Invoice Line");
          'Footer12': OnPreSectionSalesInvoiceLine_Footer12("Sales Invoice Line");
          'Footer13': OnPreSectionSalesInvoiceLine_Footer13("Sales Invoice Line");
          'Footer14': OnPreSectionSalesInvoiceLine_Footer14("Sales Invoice Line");
          'Footer16': OnPreSectionSalesInvoiceLine_Footer16("Sales Invoice Line");
          'Footer17': OnPreSectionSalesInvoiceLine_Footer17("Sales Invoice Line");
          'Footer18': OnPreSectionSalesInvoiceLine_Footer18("Sales Invoice Line");
        END;
        'Item': CASE SectionId OF
          'Body19': OnPreSectionItem_Body19(Item);
          'Body20': OnPreSectionItem_Body20(Item);
          'Body21': OnPreSectionItem_Body21(Item);
          'Body22': OnPreSectionItem_Body22(Item);
          'Body23': OnPreSectionItem_Body23(Item);
          'Body24': OnPreSectionItem_Body24(Item);
          'Body25': OnPreSectionItem_Body25(Item);
          'Body26': OnPreSectionItem_Body26(Item);
        END;
        'Total': CASE SectionId OF
          'Body32': OnPreSectionTotal_Body32(Total);
          'Body33': OnPreSectionTotal_Body33(Total);
          'Body34': OnPreSectionTotal_Body34(Total);
          'Body35': OnPreSectionTotal_Body35(Total);
          'Body36': OnPreSectionTotal_Body36(Total);
          'Body37': OnPreSectionTotal_Body37(Total);
        END;
        'Total2': CASE SectionId OF
          'Body39': OnPreSectionTotal2_Body39(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'SalesInvoiceLine': WITH "Sales Invoice Line" DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      030299 pl
      c01  Total, Body(1) und Globals
           Zahlungsbedingung vom Skonto abh„nging ausdrucken.
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      c02  Verkaufsrechnungszeile, C/AL und Globals
           Rechnungsrabatt %-Satz und Rabattgrundlage in Rechnungsrabattzeile mit ausdrucken.
      131099 al
      c03  Verkaufsrechnungszeile, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
      Papersource 3 --> Fach IV HP 4050NT
      Papersource 2 --> Fach II HP 4050NT

      250122 st: šbertrag- und Fortsetzungsbetrag Sektionen ausgeblendet, da mit 6.1.0 mitunter fehlerhaft
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="EventLogo_Firmendaten">
          <DataField>EventLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="CompanyEORINr">
          <DataField>CompanyEORINr</DataField>
        </Field>
        <Field Name="Lieferscheinnr">
          <DataField>Lieferscheinnr</DataField>
        </Field>
        <Field Name="Belegdatum">
          <DataField>Belegdatum</DataField>
        </Field>
        <Field Name="Var_UST_ID">
          <DataField>Var_UST_ID</DataField>
        </Field>
        <Field Name="Steuernummer_verk_debitor">
          <DataField>Steuernummer_verk_debitor</DataField>
        </Field>
        <Field Name="Var_Steuernr">
          <DataField>Var_Steuernr</DataField>
        </Field>
        <Field Name="KopieText">
          <DataField>KopieText</DataField>
        </Field>
        <Field Name="No_SalesInvoiceHeader">
          <DataField>No_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesInvoiceHeader">
          <DataField>Bill_toCustomerNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="OrderNo_SalesInvoiceHeader">
          <DataField>OrderNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="VATRegistrationNo_VkRK">
          <DataField>VATRegistrationNo_VkRK</DataField>
        </Field>
        <Field Name="OurAccountNo_verk_debitor">
          <DataField>OurAccountNo_verk_debitor</DataField>
        </Field>
        <Field Name="SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour">
          <DataField>SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour</DataField>
        </Field>
        <Field Name="PostingDate_SalesInvoiceHeader">
          <DataField>PostingDate_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="seite">
          <DataField>seite</DataField>
        </Field>
        <Field Name="waehrungs_text">
          <DataField>waehrungs_text</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmount">
          <DataField>Amount_InvDiscountAmount</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmountFormat">
          <DataField>Amount_InvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description_SalesInvoiceLine">
          <DataField>Description_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLine">
          <DataField>UnitPrice_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLineFormat">
          <DataField>UnitPrice_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="einheiten_text">
          <DataField>einheiten_text</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine">
          <DataField>Quantity_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLineFormat">
          <DataField>Quantity_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="InvDiscountAmount_SalesInvoiceLine">
          <DataField>InvDiscountAmount_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="InvDiscountAmount_SalesInvoiceLineFormat">
          <DataField>InvDiscountAmount_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="grechrabbetr">
          <DataField>grechrabbetr</DataField>
        </Field>
        <Field Name="grechrabbetrFormat">
          <DataField>grechrabbetrFormat</DataField>
        </Field>
        <Field Name="grechrabPct">
          <DataField>grechrabPct</DataField>
        </Field>
        <Field Name="grechrabPctFormat">
          <DataField>grechrabPctFormat</DataField>
        </Field>
        <Field Name="lead_free_text0">
          <DataField>lead_free_text0</DataField>
        </Field>
        <Field Name="lead_free_text1">
          <DataField>lead_free_text1</DataField>
        </Field>
        <Field Name="lead_free_text2">
          <DataField>lead_free_text2</DataField>
        </Field>
        <Field Name="lead_text">
          <DataField>lead_text</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="steuer_text">
          <DataField>steuer_text</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_SalesInvoiceLine">
          <DataField>AmountIncludingVAT_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_SalesInvoiceLineFormat">
          <DataField>AmountIncludingVAT_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_Amount">
          <DataField>AmountIncludingVAT_Amount</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_AmountFormat">
          <DataField>AmountIncludingVAT_AmountFormat</DataField>
        </Field>
        <Field Name="Amount_SalesInvoiceLine">
          <DataField>Amount_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Amount_SalesInvoiceLineFormat">
          <DataField>Amount_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="SalesInvoiceLineGetCurrencyCode">
          <DataField>SalesInvoiceLineGetCurrencyCode</DataField>
        </Field>
        <Field Name="SalesInvoiceLineSWalsLeistung">
          <DataField>SalesInvoiceLineSWalsLeistung</DataField>
        </Field>
        <Field Name="v_reverse">
          <DataField>v_reverse</DataField>
        </Field>
        <Field Name="lead_symbol">
          <DataField>lead_symbol</DataField>
        </Field>
        <Field Name="vUrsprungsland">
          <DataField>vUrsprungsland</DataField>
        </Field>
        <Field Name="Herstellerkurzname_Item">
          <DataField>Herstellerkurzname_Item</DataField>
        </Field>
        <Field Name="LineNo_SalesInvoiceLine">
          <DataField>LineNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesInvoiceLine">
          <DataField>Artikelnr2_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Description_SalesInvoiceLine3">
          <DataField>Description_SalesInvoiceLine3</DataField>
        </Field>
        <Field Name="einheiten_text2">
          <DataField>einheiten_text2</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine2">
          <DataField>Quantity_SalesInvoiceLine2</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine2Format">
          <DataField>Quantity_SalesInvoiceLine2Format</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLine2">
          <DataField>UnitPrice_SalesInvoiceLine2</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLine2Format">
          <DataField>UnitPrice_SalesInvoiceLine2Format</DataField>
        </Field>
        <Field Name="SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmount">
          <DataField>SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmount</DataField>
        </Field>
        <Field Name="SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmountFormat">
          <DataField>SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description2_SalesInvoiceLine">
          <DataField>Description2_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="TariffNo_Item">
          <DataField>TariffNo_Item</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesInvoiceLine">
          <DataField>Cross_ReferenceNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="ECCN_Nr__ItemECCN_Nr">
          <DataField>ECCN_Nr__ItemECCN_Nr</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile2">
          <DataField>VATBase_MWSTBetragZeile2</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile2Format">
          <DataField>VATBase_MWSTBetragZeile2Format</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="v_bonusdatum">
          <DataField>v_bonusdatum</DataField>
        </Field>
        <Field Name="Account">
          <DataField>Account</DataField>
        </Field>
        <Field Name="Description_LieferBed">
          <DataField>Description_LieferBed</DataField>
        </Field>
        <Field Name="gzbedtx">
          <DataField>gzbedtx</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesInvoiceHeader_Lbl">
          <DataField>Sell_toCustomerNo_SalesInvoiceHeader_Lbl</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesInvoiceHeader">
          <DataField>Sell_toCustomerNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

