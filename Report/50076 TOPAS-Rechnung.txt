OBJECT Report 50076 TOPAS-Rechnung
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=09:35:59;
    Modified=Yes;
    Version List=Beleg Rechnungskopie --> 50131 !!!,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table112;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufsrechnung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  VkRK := "Sales Invoice Header";
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Location Code" = 'MUST' THEN CurrReport.SKIP;
                                  v_reverse1 := '';
                                  IF "Order No." = '' THEN
                                    AuftragNrText := ''
                                  ELSE
                                    AuftragNrText := FIELDNAME("Order No.");
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesInvBillTo(DebAdr,"Sales Invoice Header");
                                  Deb.GET("Bill-to Customer No.");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesInvShipTo(LieferAnAdr,"Sales Invoice Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + 'EUR' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  v_bonusdatum := 0D;
                                  v_FER_SPL := FALSE;
                                  //2015-09-07 ST Unterdrckt den Ausdruck der Original Rechnung, wenn Kunde keine ben”tigt,
                                  //fr den Batch Job wird die Rechnung aber wieder komplett sichtbar
                                  IF Deb."Original RE nicht drucken" THEN BEGIN
                                    IF PrinterSelection.GET(USERID,50076) THEN BEGIN
                                      IF (PrinterSelection."Printer Name" <> 'PDFCreator')
                                      AND (PrinterSelection."Printer Name" <> 'Bullzip PDF Printer') THEN
                                        CurrReport.BREAK;
                                    END ELSE
                                      CurrReport.BREAK;
                                  END;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table291;
               OnAfterGetRecord=BEGIN
                                  spedition := "Shipping Agent";
                                END;

               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  verk_debitor := Customer;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF Steuernummer = '' THEN
                                        Var_Steuernr := ''
                                    ELSE
                                        Var_Steuernr := 'Ihre Steuernummer:';
                                    IF "VAT Registration No." = '' THEN
                                        Var_UST_ID := ''
                                    ELSE
                                        Var_UST_ID := FIELDNAME("VAT Registration No.");
                                  END ELSE BEGIN
                                    Var_Steuernr := '';
                                    IF "VAT Registration No." = '' THEN
                                        Var_UST_ID := ''
                                    ELSE
                                        Var_UST_ID := 'Tax Number';
                                      END;
                                  IF CurrReport.LANGUAGE = 1031 THEN
                                  BEGIN
                                    IF "Sales Invoice Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Sales Invoice Header"."Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Sales Invoice Header"."Currency Code");
                                    END;
                                  END ELSE BEGIN
                                    IF "Sales Invoice Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Sales Invoice Header"."Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',"Sales Invoice Header"."Currency Code");
                                    END;
                                  END;
                                  //Bonusdatum fllen
                                  IF  Customer.Bonusregelung <> '' THEN
                                    v_bonusdatum := Customer.Bonusdatum;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 4   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Deb."Invoice Copies" := 2;
                               //AnzSchleifen := ABS(AnzKopien) + Deb."Anzahl Rechnungskopien" + 1;
                               AnzSchleifen := 1;
                               IF AnzSchleifen <= 0 THEN
                                 AnzSchleifen := 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               IF (("Sales Invoice Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Invoice Header"."Shipment Method Code" = 'ACC-ENG')) THEN BEGIN
                                 //Account := "Sales Invoice Header".Spediteuraccount;
                                 Account := "Shipping Agent".Name + ' / ' + "Sales Invoice Header".Spediteuraccount;
                               END ELSE BEGIN
                                 Account := "Shipping Agent".Name
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  //IF Nummer > 2 THEN
                                  //  ReportForNav.PrinterSettings.PaperSource(3);

                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    //IF Number > 1 THEN KopieText := 'skopie';
                                    IF (Number > 1) OR ("Sales Invoice Header"."No. Printed" > 0) THEN KopieText := 'skopie';
                                    ReportForNav.PageNo := 1;
                                  END ELSE BEGIN
                                    //IF Number > 1 THEN KopieText := ' Copy';
                                    IF (Number > 1) OR ("Sales Invoice Header"."No. Printed" > 0) THEN KopieText := ' Copy';
                                    ReportForNav.PageNo := 1;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkRechDruckZ„hler.RUN("Sales Invoice Header");
                              END;
                               }

    { 5   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 6   ;3   ;Column  ;Picture_Firmendaten ;
               SourceExpr=Firmendaten.Picture }

    { 7   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 8   ;3   ;Column  ;Lieferscheinnr      ;
               SourceExpr=Lieferscheinnr }

    { 9   ;3   ;Column  ;Belegdatum          ;
               SourceExpr=Belegdatum }

    { 10  ;3   ;Column  ;Var_UST_ID          ;
               SourceExpr=Var_UST_ID }

    { 11  ;3   ;Column  ;Steuernummer_verk_debitor;
               SourceExpr=verk_debitor.Steuernummer }

    { 12  ;3   ;Column  ;Var_Steuernr        ;
               SourceExpr=Var_Steuernr }

    { 13  ;3   ;Column  ;KopieText           ;
               SourceExpr=KopieText }

    { 14  ;3   ;Column  ;No_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."No." }

    { 15  ;3   ;Column  ;Bill_toCustomerNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Bill-to Customer No." }

    { 16  ;3   ;Column  ;OrderNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Order No." }

    { 17  ;3   ;Column  ;VATRegistrationNo_VkRK;
               SourceExpr=VkRK."VAT Registration No." }

    { 18  ;3   ;Column  ;OurAccountNo_verk_debitor;
               SourceExpr=verk_debitor."Our Account No." }

    { 19  ;3   ;Column  ;SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour;
               SourceExpr="Sales Invoice Header"."External Document No."+' '+"Sales Invoice Header"."Your Reference" }

    { 20  ;3   ;Column  ;PostingDate_SalesInvoiceHeader;
               SourceExpr=FORMAT("Sales Invoice Header"."Posting Date",0,1) }

    { 21  ;3   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 22  ;3   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 23  ;3   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 24  ;3   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 25  ;3   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 26  ;3   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 27  ;3   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 28  ;3   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 29  ;3   ;Column  ;seite               ;
               SourceExpr=seite }

    { 30  ;3   ;DataItem;Sales Invoice Line  ;
               DataItemTable=Table113;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                               {lshanf c02}
                               grechrabbetr := 0;
                               {lshend}
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  {lshanf c02}
                                  IF "Inv. Discount Amount" <> 0 THEN BEGIN
                                    "grechrab%" := ("Inv. Discount Amount" * 100) / (Amount + "Inv. Discount Amount");
                                    grechrabbetr := grechrabbetr + Amount + "Inv. Discount Amount";
                                  END;
                                  {lshend}
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    steuer_text := MWSTBetragZeile.VATAmountText ;
                                    einheiten_text := "Sales Invoice Line"."Unit of Measure";
                                  END ELSE BEGIN
                                    steuer_text := MWSTBetragZeile.VATAmountText;
                                    IF "Sales Invoice Line"."Unit of Measure" <> 'STšCK' THEN
                                      einheiten_text := 'pcs.'
                                    ELSE
                                      einheiten_text := "Sales Invoice Line"."Unit of Measure";
                                  END;

                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Invoice Line".Type = "Sales Invoice Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Invoice Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND ("Sales Invoice Line".Quantity > 0) THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                  IF v_FER_SPL = FALSE THEN BEGIN
                                    IF (("Sales Invoice Line"."Manufacturer Code" ='82') OR ("Sales Invoice Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 31  ;4   ;Column  ;waehrungs_text      ;
               SourceExpr=waehrungs_text }

    { 32  ;4   ;Column  ;Amount_InvDiscountAmount;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 33  ;4   ;Column  ;Description_SalesInvoiceLine;
               SourceExpr=Description }

    { 34  ;4   ;Column  ;UnitPrice_SalesInvoiceLine;
               SourceExpr="Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 35  ;4   ;Column  ;einheiten_text      ;
               SourceExpr=einheiten_text }

    { 36  ;4   ;Column  ;Quantity_SalesInvoiceLine;
               SourceExpr=Quantity }

    { 37  ;4   ;Column  ;InvDiscountAmount_SalesInvoiceLine;
               SourceExpr=-"Inv. Discount Amount" }

    { 38  ;4   ;Column  ;grechrabbetr        ;
               SourceExpr=grechrabbetr }

    { 39  ;4   ;Column  ;grechrabPct         ;
               SourceExpr="grechrab%" }

    { 40  ;4   ;Column  ;lead_free_text0     ;
               SourceExpr=lead_free_text0 }

    { 41  ;4   ;Column  ;lead_free_text1     ;
               SourceExpr=lead_free_text1 }

    { 42  ;4   ;Column  ;lead_free_text2     ;
               SourceExpr=lead_free_text2 }

    { 43  ;4   ;Column  ;lead_text           ;
               SourceExpr=lead_text }

    { 44  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 45  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 46  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 47  ;4   ;Column  ;steuer_text         ;
               SourceExpr=steuer_text }

    { 48  ;4   ;Column  ;AmountIncludingVAT_SalesInvoiceLine;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 49  ;4   ;Column  ;AmountIncludingVAT_Amount;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 50  ;4   ;Column  ;Amount_SalesInvoiceLine;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 51  ;4   ;Column  ;SalesInvoiceLineGetCurrencyCode;
               SourceExpr="Sales Invoice Line".GetCurrencyCode;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 1000000003;4;Column;SalesInvoiceLineSWalsLeistung;
               SourceExpr="Sales Invoice Line"."SW als Leistung" }

    { 52  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnPreDataItem=BEGIN
                               IF debart <> '' THEN
                               debart := 'Ihre Artikelnummer: '+debart;
                             END;

               OnAfterGetRecord=BEGIN
                                   v_reverse := ' ';
                                  //IF Item."Global Dimension 2 Code" = 'WARTUNG' THEN BEGIN
                                  //  v_reverse := 'ø*';
                                  //  v_reverse1 := '1';
                                  //END;
                                  {
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" = 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '**';
                                      v_reverse1 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" <> 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '***';
                                      v_reverse2 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group"='AUSLAND') AND (Item."Gen. Prod. Posting Group" = 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '**';
                                      v_reverse1 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group"='AUSLAND') AND (Item."Gen. Prod. Posting Group" <> 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '***';
                                      v_reverse2 := '1';
                                    END;
                                  END;
                                  }
                                  //// Ab hier fr 16%
                                  {
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = '16_SYSTEM') OR (Item."Gen. Prod. Posting Group" = '16_HANDEL')) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                        IF ((Item."Gen. Prod. Posting Group" = '16_SCHULUN') OR (Item."Gen. Prod. Posting Group" = '16_SERVICE') OR (Item."Gen. Prod. Posting Group" = '16_STD_POO')) THEN BEGIN
                                          IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = '16_SYSTEM') AND ("Sales Invoice Line"."SW als Leistung" = TRUE)) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '***';
                                          v_reverse1 := '';
                                          v_reverse2 := '1';
                                        END;
                                      END;
                                    END;
                                  END;
                                  }

                                  ////  Ab hier fr 19%
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                    IF ((Item."Gen. Prod. Posting Group" = 'SYSTEM') OR (Item."Gen. Prod. Posting Group" = 'HANDEL')) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = 'SCHULUNG') OR (Item."Gen. Prod. Posting Group" = 'SERVICE') OR (Item."Gen. Prod. Posting Group" = 'STD_POOL')) THEN BEGIN
                                          IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;

                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = 'SYSTEM') AND ("Sales Invoice Line"."SW als Leistung" = TRUE)) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '***';
                                          v_reverse1 := '';
                                          v_reverse2 := '1';
                                        END;
                                      END;
                                    END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                debart := '';
                              END;

               DataItemLinkReference=Sales Invoice Line;
               DataItemLink=No.=FIELD(No.) }

    { 53  ;5   ;Column  ;v_reverse           ;
               SourceExpr=v_reverse }

    { 54  ;5   ;Column  ;lead_symbol         ;
               SourceExpr=lead_symbol }

    { 55  ;5   ;Column  ;vUrsprungsland      ;
               SourceExpr=vUrsprungsland }

    { 56  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 57  ;5   ;Column  ;LineNo_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Line No." }

    { 58  ;5   ;Column  ;Artikelnr2_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Artikelnr. 2" }

    { 59  ;5   ;Column  ;Description_SalesInvoiceLine3;
               SourceExpr="Sales Invoice Line".Description }

    { 60  ;5   ;Column  ;einheiten_text2     ;
               SourceExpr=einheiten_text }

    { 61  ;5   ;Column  ;Quantity_SalesInvoiceLine2;
               SourceExpr="Sales Invoice Line".Quantity }

    { 62  ;5   ;Column  ;UnitPrice_SalesInvoiceLine2;
               SourceExpr="Sales Invoice Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 63  ;5   ;Column  ;SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmount;
               SourceExpr="Sales Invoice Line".Amount+"Sales Invoice Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 64  ;5   ;Column  ;Description2_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Description 2" }

    { 65  ;5   ;Column  ;TariffNo_Item       ;
               SourceExpr="Tariff No." }

    { 66  ;5   ;Column  ;Cross_ReferenceNo_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Cross-Reference No." }

    { 67  ;5   ;Column  ;ECCN_Nr__ItemECCN_Nr;
               SourceExpr='ECCN-Nr.: '+ Item."ECCN-Nr." }

    { 68  ;5   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 69  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=No.=FIELD(No.) }

    { 70  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 71  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 72  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 73  ;4   ;Column  ;VATBase_MWSTBetragZeile2;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 74  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 75  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 76  ;4   ;Column  ;v_bonusdatum        ;
               SourceExpr=v_bonusdatum }

    { 77  ;4   ;Column  ;Account             ;
               SourceExpr=Account }

    { 78  ;4   ;Column  ;Description_LieferBed;
               SourceExpr=LieferBed.Description }

    { 79  ;4   ;Column  ;gzbedtx             ;
               SourceExpr=gzbedtx }

    { 80  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 81  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader_Lbl;
               SourceExpr="Sales Invoice Header".FIELDCAPTION("Sell-to Customer No.") }

    { 82  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Sell-to Customer No." }

    { 83  ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 84  ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 85  ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 86  ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 87  ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 88  ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 89  ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 90  ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;;Container;
                  Name=UB;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      waehrung2@1140000 : Code[10];
      waehrung@1140001 : Code[10];
      debart@1140002 : Text[80];
      spedition@1140003 : Record 291;
      art1@1140004 : Record 27;
      verk_debitor@1140005 : Record 18;
      FIBUEinrichtung@1140006 : Record 98;
      LieferBed@1140007 : Record 10;
      ZlgBed@1140008 : Record 3;
      VerkEinkPerson@1140009 : Record 13;
      Firmendaten@1140010 : Record 79;
      Deb@1140011 : Record 18;
      MWSTBetragZeile@1140012 : TEMPORARY Record 290;
      language@1140061 : Record 8;
      PrinterSelection@1140065 : Record 78;
      VerkRechDruckZ„hler@1140013 : Codeunit 315;
      FormatAdr@1140014 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140015 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140016 : ARRAY [8] OF Text[50];
      FirmaAdr@1140017 : ARRAY [8] OF Text[50];
      AuftragNrText@1140018 : Text[30];
      Verk„uferText@1140019 : Text[30];
      MWStNrText@1140020 : Text[30];
      ReferenzText@1140021 : Text[30];
      TotalText@1140022 : Text[50];
      TotalInklMWStText@1140023 : Text[50];
      MehrZeilen@1140024 : Boolean;
      AnzKopien@1140025 : Integer;
      AnzSchleifen@1140026 : Integer;
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      "--------LSH--------"@1140030 : Integer;
      "grechrab%"@1140031 : Decimal;
      grechrabbetr@1140032 : Decimal;
      gzbedtx@1140033 : Text[100];
      lead_free_text0@1140034 : Text[80];
      lead_free_text1@1140035 : Text[80];
      leadfree_symbol@1140036 : Text[3];
      leadfree_artikel@1140037 : Record 27;
      lead_artikel@1140055 : Record 27;
      lead_symbol@1140057 : Text[3];
      lead_text@1140056 : Text[120];
      lead_free_text2@1140038 : Text[80];
      Var_UST_ID@1140039 : Text[20];
      Var_Steuernr@1140040 : Text[20];
      steuer_text@1140041 : Text[30];
      seite@1140042 : Text[30];
      waehrungs_text@1140043 : Text[15];
      einheiten_text@1140044 : Text[30];
      vk_rech_zeile@1140045 : Record 113;
      Account@1140046 : Text[90];
      vUrsprungsland@1140047 : Text[50];
      Lieferscheinnr@1140052 : Code[20];
      Belegdatum@1140054 : Date;
      InvoiceRowID@1140048 : Text[100];
      ValueEntryRelation@1140049 : Record 6508;
      ValueEntry@1140050 : Record 5802;
      ItemLedgerEntry@1140051 : Record 32;
      VkZeile@1140053 : Record 113;
      v_bonusdatum@1140058 : Date;
      v_reverse@1140059 : Text[3];
      v_reverse1@1140060 : Text[3];
      v_reverse2@1140063 : Text[3];
      v_FER_SPL@1140062 : Boolean;
      VkRK@1140064 : Record 112;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header1@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //TOPAS 13.05.09 ST - Lieferscheinnr. auf Rechnung anzeigen
        Lieferscheinnr := '';
        Belegdatum := 0D;
        VkZeile.RESET;
        VkZeile.SETFILTER("Document No.","Sales Invoice Header"."No.");
        IF CurrReport.LANGUAGE = 1031 THEN
          VkZeile.SETFILTER(Type,'Artikel')
        ELSE
          VkZeile.SETFILTER(Type,'Item');
        VkZeile.SETFILTER(Quantity,'>%1',0);
        IF VkZeile.FINDFIRST THEN BEGIN
          InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,VkZeile."Document No.",'',0,VkZeile."Line No.");
          ValueEntryRelation.SETCURRENTKEY("Source RowId");
          ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
          IF ValueEntryRelation.FINDFIRST THEN BEGIN
            ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
            IF ValueEntry.FINDFIRST THEN BEGIN
              ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
              IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                Lieferscheinnr := ItemLedgerEntry."Document No.";
                Belegdatum := ItemLedgerEntry."Document Date";
              END;
            END;
          END;
        END;
        //TOPAS 29.06.15 ST - rendert das Firmenlogo fr Batch L„ufe, da das Logo beim normalen Druck vom Briefpapier bezogen wird
        IF PrinterSelection.GET(USERID,50076) THEN BEGIN
          IF (PrinterSelection."Printer Name" = 'PDFCreator')
          OR (PrinterSelection."Printer Name" = 'Bullzip PDF Printer') THEN
            Firmendaten.CALCFIELDS(Picture);
        END;
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS Ende
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Header3@5011(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        IF "Sales Invoice Header"."Currency Code" = '' THEN
          waehrungs_text := 'EUR'
        ELSE
          waehrungs_text := "Sales Invoice Header"."Currency Code";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body5@5012(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        // ReportForNav.ShowOutput(Art = 0);
        // Unterdckt Artikeltexte wenn eine Artikelzeile nicht berechnet wird oder die Textzeilen aus Testkonserve 'Woche' oder leer ist
        vk_rech_zeile.SETFILTER("Document No.",'%1',"Sales Invoice Line"."Document No." );
        vk_rech_zeile.SETFILTER("Line No.",'%1',"Sales Invoice Line"."Attached to Line No." );
        IF vk_rech_zeile.FINDFIRST THEN BEGIN
          ReportForNav.ShowOutput(((vk_rech_zeile.Type = vk_rech_zeile.Type::Item) AND (vk_rech_zeile.Quantity > 0))
                                    OR (vk_rech_zeile.Type = 0) AND (vk_rech_zeile."No." <> 'WOCHE'));
        END ELSE BEGIN
          IF (("Sales Invoice Line"."Attached to Line No." = 0) AND ("Sales Invoice Line".Type = 0)
          AND ("Sales Invoice Line"."No." <> 'WOCHE') AND ("Sales Invoice Line".Description <> '')) THEN
            ReportForNav.ShowOutput(TRUE)
          ELSE
            ReportForNav.ShowOutput(FALSE);
        END;
        IF "Sales Invoice Line"."No." = 'LIEF_DRUCK' THEN
          ReportForNav.ShowOutput(FALSE);
        IF "Sales Invoice Line"."No." = 'LIEF_DRU_A' THEN
          ReportForNav.ShowOutput(TRUE);
        IF "Sales Invoice Line"."No." = 'BEIERSDORF' THEN
          ReportForNav.ShowOutput(TRUE);
        IF "Sales Invoice Line"."No." = 'AB_DRUCK' THEN
          ReportForNav.ShowOutput(FALSE);
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body6@5013(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput((Type = Type::"G/L Account")  AND ("Sales Invoice Line".Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body7@5014(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body8@5015(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        {lshanf c03}
        ReportForNav.ShowOutput(("Description 2" <> '') AND ("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item));
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer10@5016(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer11@5017(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer12@5018(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer13@5019(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer14@5020(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer16@5021(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
          ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer17@5022(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Customer."VAT Bus. Posting Group" <> 'HAN_AUSL' );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer18@5023(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Customer."VAT Bus. Posting Group" = 'HAN_AUSL' );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5024(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND ("Sales Invoice Line".Quantity > 0));
        //TOPAS 22.07.08 ST -Artikelposten / Wertposten holen , um Ursprungsland zu fllen
        vUrsprungsland := '';
        InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,"Sales Invoice Line"."Document No.",'',0,"Sales Invoice Line"."Line No.");
        ValueEntryRelation.SETCURRENTKEY("Source RowId");
        ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
        IF ValueEntryRelation.FINDFIRST THEN BEGIN
          REPEAT
            ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
            IF ValueEntry.FINDFIRST THEN BEGIN
              ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
              IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                IF vUrsprungsland <> '' THEN BEGIN
                  IF STRPOS(vUrsprungsland,ItemLedgerEntry.Ursprungsland) = 0 THEN
                  vUrsprungsland := vUrsprungsland + ',' + ItemLedgerEntry.Ursprungsland;
                END ELSE
                  vUrsprungsland := ItemLedgerEntry.Ursprungsland;
              END;
            END;
          UNTIL ValueEntryRelation.NEXT = 0;
        END;
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body20@5025(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line"."Description 2" <> '')
         AND ("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND ("Sales Invoice Line".Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body21@5026(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(((Item.NCNR = TRUE) AND ("Sales Invoice Line".Quantity > 0)) OR ((Item."Manufacturer Code" = '00')
         AND ("Sales Invoice Line".Quantity > 0)));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body22@5027(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        //debitor_artikel.SETFILTER(debitor_artikel."Artikelnr.",'%1',"Sales Invoice Line"."No.");
        //debitor_artikel.SETFILTER(debitor_artikel."Debitornr.",'%1',"Sales Invoice Line"."Sell-to Customer No.");
        //ReportForNav.ShowOutput((NOT debitor_artikel.FIND('-')) AND ("Sales Invoice Line".Quantity > 0) AND
        // ("Sales Invoice Line"."Cross-Reference No."='') AND (Item."Tariff No." <> ''));
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item)
         AND ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." <> '') AND ("Sales Invoice Line"."Cross-Reference No." = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body23@5028(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item)
         AND ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." <> '') AND ("Sales Invoice Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body24@5029(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." = '') AND ("Sales Invoice Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body25@5030(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND (Item."ECCN-Nr." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body26@5031(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND ("Sales Invoice Line"."VAT Prod. Posting Group" = '13B2'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body32@5032(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(Customer.Bonusregelung <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body33@5033(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse1 = '1'));
        //ReportForNav.ShowOutput(v_reverse1='1');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body34@5034(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body35@5035(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body36@5036(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group"  = 'EU') AND (v_reverse2 = '1'));
        //ReportForNav.ShowOutput("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU');
        //ReportForNav.ShowOutput(v_reverse2 = '1');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body37@5037(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        {lshanf c01}
        IF ZlgBed."Discount %" <> 0 THEN BEGIN
        //  "Sales Invoice Header".CALCFIELDS(Skontobetrag);
          IF COPYSTR(ZlgBed.Description,1,1) <> '*' THEN
            gzbedtx := ZlgBed.Description;
        END ELSE BEGIN
            gzbedtx := ZlgBed.Description;
        END;
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body39@5038(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Invoice Header"."Sell-to Customer No." <> "Sales Invoice Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header1': OnPreSectionSeiteSchleife_Header1(SeiteSchleife);
        END;
        'SalesInvoiceLine': CASE SectionId OF
          'Header3': OnPreSectionSalesInvoiceLine_Header3("Sales Invoice Line");
          'Body5': OnPreSectionSalesInvoiceLine_Body5("Sales Invoice Line");
          'Body6': OnPreSectionSalesInvoiceLine_Body6("Sales Invoice Line");
          'Body7': OnPreSectionSalesInvoiceLine_Body7("Sales Invoice Line");
          'Body8': OnPreSectionSalesInvoiceLine_Body8("Sales Invoice Line");
          'Footer10': OnPreSectionSalesInvoiceLine_Footer10("Sales Invoice Line");
          'Footer11': OnPreSectionSalesInvoiceLine_Footer11("Sales Invoice Line");
          'Footer12': OnPreSectionSalesInvoiceLine_Footer12("Sales Invoice Line");
          'Footer13': OnPreSectionSalesInvoiceLine_Footer13("Sales Invoice Line");
          'Footer14': OnPreSectionSalesInvoiceLine_Footer14("Sales Invoice Line");
          'Footer16': OnPreSectionSalesInvoiceLine_Footer16("Sales Invoice Line");
          'Footer17': OnPreSectionSalesInvoiceLine_Footer17("Sales Invoice Line");
          'Footer18': OnPreSectionSalesInvoiceLine_Footer18("Sales Invoice Line");
        END;
        'Item': CASE SectionId OF
          'Body19': OnPreSectionItem_Body19(Item);
          'Body20': OnPreSectionItem_Body20(Item);
          'Body21': OnPreSectionItem_Body21(Item);
          'Body22': OnPreSectionItem_Body22(Item);
          'Body23': OnPreSectionItem_Body23(Item);
          'Body24': OnPreSectionItem_Body24(Item);
          'Body25': OnPreSectionItem_Body25(Item);
          'Body26': OnPreSectionItem_Body26(Item);
        END;
        'Total': CASE SectionId OF
          'Body32': OnPreSectionTotal_Body32(Total);
          'Body33': OnPreSectionTotal_Body33(Total);
          'Body34': OnPreSectionTotal_Body34(Total);
          'Body35': OnPreSectionTotal_Body35(Total);
          'Body36': OnPreSectionTotal_Body36(Total);
          'Body37': OnPreSectionTotal_Body37(Total);
        END;
        'Total2': CASE SectionId OF
          'Body39': OnPreSectionTotal2_Body39(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'SalesInvoiceLine': WITH "Sales Invoice Line" DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      030299 pl
      c01  Total, Body(1) und Globals
           Zahlungsbedingung vom Skonto abh„nging ausdrucken.
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      c02  Verkaufsrechnungszeile, C/AL und Globals
           Rechnungsrabatt %-Satz und Rabattgrundlage in Rechnungsrabattzeile mit ausdrucken.
      131099 al
      c03  Verkaufsrechnungszeile, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
      Papersource 3 --> Fach IV HP 4050NT
      Papersource 2 --> Fach II HP 4050NT
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
Pzz9hbLvt4SdyCtexQ/ZujwnzDmdfCH5P/9/</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

