OBJECT Report 50076 TOPAS-Rechnung
{
  OBJECT-PROPERTIES
  {
    Date=28.05.18;
    Time=15:18:26;
    Modified=Yes;
    Version List=Beleg Rechnungskopie --> 50131 !!!,FORNAV3.1.0.1460/1460;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table112;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufsrechnung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  VkRK := "Sales Invoice Header";
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Location Code" = 'MUST' THEN CurrReport.SKIP;
                                  v_reverse1 := '';
                                  IF "Order No." = '' THEN
                                    AuftragNrText := ''
                                  ELSE
                                    AuftragNrText := FIELDNAME("Order No.");
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesInvBillTo(DebAdr,"Sales Invoice Header");
                                  Deb.GET("Bill-to Customer No.");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesInvShipTo(LieferAnAdr,"Sales Invoice Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + 'EUR' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  v_bonusdatum := 0D;
                                  v_FER_SPL := FALSE;
                                  //2015-09-07 ST Unterdrckt den Ausdruck der Original Rechnung, wenn Kunde keine ben”tigt,
                                  //fr den Batch Job wird die Rechnung aber wieder komplett sichtbar
                                  IF Deb."Original RE nicht drucken" THEN BEGIN
                                    IF PrinterSelection.GET(USERID,50076) THEN BEGIN
                                      IF (PrinterSelection."Printer Name" <> 'PDFCreator')
                                      AND (PrinterSelection."Printer Name" <> 'Bullzip PDF Printer') THEN
                                        CurrReport.BREAK;
                                    END ELSE
                                      CurrReport.BREAK;
                                  END;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table291;
               OnAfterGetRecord=BEGIN
                                  spedition := "Shipping Agent";
                                END;

               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  verk_debitor := Customer;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF Steuernummer = '' THEN
                                        Var_Steuernr := ''
                                    ELSE
                                        Var_Steuernr := 'Ihre Steuernummer:';
                                    IF "VAT Registration No." = '' THEN
                                        Var_UST_ID := ''
                                    ELSE
                                        Var_UST_ID := FIELDNAME("VAT Registration No.");
                                  END ELSE BEGIN
                                    Var_Steuernr := '';
                                    IF "VAT Registration No." = '' THEN
                                        Var_UST_ID := ''
                                    ELSE
                                        Var_UST_ID := 'Tax Number';
                                      END;
                                  IF CurrReport.LANGUAGE = 1031 THEN
                                  BEGIN
                                    IF "Sales Invoice Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Sales Invoice Header"."Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Sales Invoice Header"."Currency Code");
                                    END;
                                  END ELSE BEGIN
                                    IF "Sales Invoice Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Sales Invoice Header"."Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',"Sales Invoice Header"."Currency Code");
                                    END;
                                  END;
                                  //Bonusdatum fllen
                                  IF  Customer.Bonusregelung <> '' THEN
                                    v_bonusdatum := Customer.Bonusdatum;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 4   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Deb."Invoice Copies" := 2;
                               //AnzSchleifen := ABS(AnzKopien) + Deb."Anzahl Rechnungskopien" + 1;
                               AnzSchleifen := 1;
                               IF AnzSchleifen <= 0 THEN
                                 AnzSchleifen := 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               IF (("Sales Invoice Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Invoice Header"."Shipment Method Code" = 'ACC-ENG')) THEN BEGIN
                                 //Account := "Sales Invoice Header".Spediteuraccount;
                                 Account := "Shipping Agent".Name + ' / ' + "Sales Invoice Header".Spediteuraccount;
                               END ELSE BEGIN
                                 Account := "Shipping Agent".Name
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  //IF Nummer > 2 THEN
                                  //  ReportForNav.PrinterSettings.PaperSource(3);

                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF Number > 1 THEN KopieText := 'skopie';
                                    ReportForNav.PageNo := 1;
                                  END ELSE BEGIN
                                    IF Number > 1 THEN KopieText := ' Copy';
                                    ReportForNav.PageNo := 1;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkRechDruckZ„hler.RUN("Sales Invoice Header");
                              END;
                               }

    { 5   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 6   ;3   ;Column  ;Picture_Firmendaten ;
               SourceExpr=Firmendaten.Picture }

    { 7   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 8   ;3   ;Column  ;Lieferscheinnr      ;
               SourceExpr=Lieferscheinnr }

    { 9   ;3   ;Column  ;Belegdatum          ;
               SourceExpr=Belegdatum }

    { 10  ;3   ;Column  ;Var_UST_ID          ;
               SourceExpr=Var_UST_ID }

    { 11  ;3   ;Column  ;Steuernummer_verk_debitor;
               SourceExpr=verk_debitor.Steuernummer }

    { 12  ;3   ;Column  ;Var_Steuernr        ;
               SourceExpr=Var_Steuernr }

    { 13  ;3   ;Column  ;KopieText           ;
               SourceExpr=KopieText }

    { 14  ;3   ;Column  ;No_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."No." }

    { 15  ;3   ;Column  ;Bill_toCustomerNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Bill-to Customer No." }

    { 16  ;3   ;Column  ;OrderNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Order No." }

    { 17  ;3   ;Column  ;VATRegistrationNo_VkRK;
               SourceExpr=VkRK."VAT Registration No." }

    { 18  ;3   ;Column  ;OurAccountNo_verk_debitor;
               SourceExpr=verk_debitor."Our Account No." }

    { 19  ;3   ;Column  ;SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour;
               SourceExpr="Sales Invoice Header"."External Document No."+' '+"Sales Invoice Header"."Your Reference" }

    { 20  ;3   ;Column  ;PostingDate_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Posting Date" }

    { 21  ;3   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 22  ;3   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 23  ;3   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 24  ;3   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 25  ;3   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 26  ;3   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 27  ;3   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 28  ;3   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 29  ;3   ;Column  ;seite               ;
               SourceExpr=seite }

    { 30  ;3   ;DataItem;Sales Invoice Line  ;
               DataItemTable=Table113;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                               {lshanf c02}
                               grechrabbetr := 0;
                               {lshend}
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  {lshanf c02}
                                  IF "Inv. Discount Amount" <> 0 THEN BEGIN
                                    "grechrab%" := ("Inv. Discount Amount" * 100) / (Amount + "Inv. Discount Amount");
                                    grechrabbetr := grechrabbetr + Amount + "Inv. Discount Amount";
                                  END;
                                  {lshend}
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    steuer_text := MWSTBetragZeile.VATAmountText ;
                                    einheiten_text := "Sales Invoice Line"."Unit of Measure";
                                  END ELSE BEGIN
                                    steuer_text := MWSTBetragZeile.VATAmountText;
                                    IF "Sales Invoice Line"."Unit of Measure" <> 'STšCK' THEN
                                      einheiten_text := 'pcs.'
                                    ELSE
                                      einheiten_text := "Sales Invoice Line"."Unit of Measure";
                                  END;

                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Invoice Line".Type = "Sales Invoice Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Invoice Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND ("Sales Invoice Line".Quantity > 0) THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                  IF v_FER_SPL = FALSE THEN BEGIN
                                    IF (("Sales Invoice Line"."Manufacturer Code" ='82') OR ("Sales Invoice Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 31  ;4   ;Column  ;waehrungs_text      ;
               SourceExpr=waehrungs_text }

    { 32  ;4   ;Column  ;Amount_InvDiscountAmount;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 33  ;4   ;Column  ;Description_SalesInvoiceLine;
               SourceExpr=Description }

    { 34  ;4   ;Column  ;UnitPrice_SalesInvoiceLine;
               SourceExpr="Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 35  ;4   ;Column  ;einheiten_text      ;
               SourceExpr=einheiten_text }

    { 36  ;4   ;Column  ;Quantity_SalesInvoiceLine;
               SourceExpr=Quantity }

    { 37  ;4   ;Column  ;InvDiscountAmount_SalesInvoiceLine;
               SourceExpr=-"Inv. Discount Amount" }

    { 38  ;4   ;Column  ;grechrabbetr        ;
               SourceExpr=grechrabbetr }

    { 39  ;4   ;Column  ;grechrabPct         ;
               SourceExpr="grechrab%" }

    { 40  ;4   ;Column  ;lead_free_text0     ;
               SourceExpr=lead_free_text0 }

    { 41  ;4   ;Column  ;lead_free_text1     ;
               SourceExpr=lead_free_text1 }

    { 42  ;4   ;Column  ;lead_free_text2     ;
               SourceExpr=lead_free_text2 }

    { 43  ;4   ;Column  ;lead_text           ;
               SourceExpr=lead_text }

    { 44  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 45  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 46  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 47  ;4   ;Column  ;steuer_text         ;
               SourceExpr=steuer_text }

    { 48  ;4   ;Column  ;AmountIncludingVAT_SalesInvoiceLine;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 49  ;4   ;Column  ;AmountIncludingVAT_Amount;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 50  ;4   ;Column  ;Amount_SalesInvoiceLine;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 51  ;4   ;Column  ;SalesInvoiceLineGetCurrencyCode;
               SourceExpr="Sales Invoice Line".GetCurrencyCode;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 52  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnPreDataItem=BEGIN
                               IF debart <> '' THEN
                               debart := 'Ihre Artikelnummer: '+debart;
                             END;

               OnAfterGetRecord=BEGIN
                                   v_reverse := ' ';
                                  //IF Item."Global Dimension 2 Code" = 'WARTUNG' THEN BEGIN
                                  //  v_reverse := 'ø*';
                                  //  v_reverse1 := '1';
                                  //END;
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" = 'HANDEL')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '**';
                                      v_reverse1 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" <> 'HANDEL')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '***';
                                      v_reverse2 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group"='AUSLAND') AND (Item."Gen. Prod. Posting Group" = 'HANDEL')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '**';
                                      v_reverse1 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group"='AUSLAND') AND (Item."Gen. Prod. Posting Group" <> 'HANDEL')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '***';
                                      v_reverse2 := '1';
                                    END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                debart := '';
                              END;

               DataItemLinkReference=Sales Invoice Line;
               DataItemLink=No.=FIELD(No.) }

    { 53  ;5   ;Column  ;v_reverse           ;
               SourceExpr=v_reverse }

    { 54  ;5   ;Column  ;lead_symbol         ;
               SourceExpr=lead_symbol }

    { 55  ;5   ;Column  ;vUrsprungsland      ;
               SourceExpr=vUrsprungsland }

    { 56  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 57  ;5   ;Column  ;LineNo_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Line No." }

    { 58  ;5   ;Column  ;Artikelnr2_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Artikelnr. 2" }

    { 59  ;5   ;Column  ;Description_SalesInvoiceLine3;
               SourceExpr="Sales Invoice Line".Description }

    { 60  ;5   ;Column  ;einheiten_text2     ;
               SourceExpr=einheiten_text }

    { 61  ;5   ;Column  ;Quantity_SalesInvoiceLine2;
               SourceExpr="Sales Invoice Line".Quantity }

    { 62  ;5   ;Column  ;UnitPrice_SalesInvoiceLine2;
               SourceExpr="Sales Invoice Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 63  ;5   ;Column  ;SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmount;
               SourceExpr="Sales Invoice Line".Amount+"Sales Invoice Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 64  ;5   ;Column  ;Description2_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Description 2" }

    { 65  ;5   ;Column  ;TariffNo_Item       ;
               SourceExpr="Tariff No." }

    { 66  ;5   ;Column  ;Cross_ReferenceNo_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Cross-Reference No." }

    { 67  ;5   ;Column  ;ECCN_Nr__ItemECCN_Nr;
               SourceExpr='ECCN-Nr.: '+ Item."ECCN-Nr." }

    { 68  ;5   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 69  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=No.=FIELD(No.) }

    { 70  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 71  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 72  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 73  ;4   ;Column  ;VATBase_MWSTBetragZeile2;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 74  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 75  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 76  ;4   ;Column  ;v_bonusdatum        ;
               SourceExpr=v_bonusdatum }

    { 77  ;4   ;Column  ;Account             ;
               SourceExpr=Account }

    { 78  ;4   ;Column  ;Description_LieferBed;
               SourceExpr=LieferBed.Description }

    { 79  ;4   ;Column  ;gzbedtx             ;
               SourceExpr=gzbedtx }

    { 80  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 81  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader_Lbl;
               SourceExpr="Sales Invoice Header".FIELDCAPTION("Sell-to Customer No.") }

    { 82  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Sell-to Customer No." }

    { 83  ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 84  ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 85  ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 86  ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 87  ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 88  ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 89  ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 90  ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      waehrung2@1140000 : Code[10];
      waehrung@1140001 : Code[10];
      debart@1140002 : Text[80];
      spedition@1140003 : Record 291;
      art1@1140004 : Record 27;
      verk_debitor@1140005 : Record 18;
      FIBUEinrichtung@1140006 : Record 98;
      LieferBed@1140007 : Record 10;
      ZlgBed@1140008 : Record 3;
      VerkEinkPerson@1140009 : Record 13;
      Firmendaten@1140010 : Record 79;
      Deb@1140011 : Record 18;
      MWSTBetragZeile@1140012 : TEMPORARY Record 290;
      language@1140061 : Record 8;
      PrinterSelection@1140065 : Record 78;
      VerkRechDruckZ„hler@1140013 : Codeunit 315;
      FormatAdr@1140014 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140015 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140016 : ARRAY [8] OF Text[50];
      FirmaAdr@1140017 : ARRAY [8] OF Text[50];
      AuftragNrText@1140018 : Text[30];
      Verk„uferText@1140019 : Text[30];
      MWStNrText@1140020 : Text[30];
      ReferenzText@1140021 : Text[30];
      TotalText@1140022 : Text[50];
      TotalInklMWStText@1140023 : Text[50];
      MehrZeilen@1140024 : Boolean;
      AnzKopien@1140025 : Integer;
      AnzSchleifen@1140026 : Integer;
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      "--------LSH--------"@1140030 : Integer;
      "grechrab%"@1140031 : Decimal;
      grechrabbetr@1140032 : Decimal;
      gzbedtx@1140033 : Text[100];
      lead_free_text0@1140034 : Text[80];
      lead_free_text1@1140035 : Text[80];
      leadfree_symbol@1140036 : Text[3];
      leadfree_artikel@1140037 : Record 27;
      lead_artikel@1140055 : Record 27;
      lead_symbol@1140057 : Text[3];
      lead_text@1140056 : Text[120];
      lead_free_text2@1140038 : Text[80];
      Var_UST_ID@1140039 : Text[20];
      Var_Steuernr@1140040 : Text[20];
      steuer_text@1140041 : Text[30];
      seite@1140042 : Text[30];
      waehrungs_text@1140043 : Text[15];
      einheiten_text@1140044 : Text[30];
      vk_rech_zeile@1140045 : Record 113;
      Account@1140046 : Text[90];
      vUrsprungsland@1140047 : Text[50];
      Lieferscheinnr@1140052 : Code[20];
      Belegdatum@1140054 : Date;
      InvoiceRowID@1140048 : Text[100];
      ValueEntryRelation@1140049 : Record 6508;
      ValueEntry@1140050 : Record 5802;
      ItemLedgerEntry@1140051 : Record 32;
      VkZeile@1140053 : Record 113;
      v_bonusdatum@1140058 : Date;
      v_reverse@1140059 : Text[3];
      v_reverse1@1140060 : Text[3];
      v_reverse2@1140063 : Text[3];
      v_FER_SPL@1140062 : Boolean;
      VkRK@1140064 : Record 112;
      ReportForNav@5000 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header1@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //TOPAS 13.05.09 ST - Lieferscheinnr. auf Rechnung anzeigen
        Lieferscheinnr := '';
        Belegdatum := 0D;
        VkZeile.RESET;
        VkZeile.SETFILTER("Document No.","Sales Invoice Header"."No.");
        IF CurrReport.LANGUAGE = 1031 THEN
          VkZeile.SETFILTER(Type,'Artikel')
        ELSE
          VkZeile.SETFILTER(Type,'Item');
        VkZeile.SETFILTER(Quantity,'>%1',0);
        IF VkZeile.FINDFIRST THEN BEGIN
          InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,VkZeile."Document No.",'',0,VkZeile."Line No.");
          ValueEntryRelation.SETCURRENTKEY("Source RowId");
          ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
          IF ValueEntryRelation.FINDFIRST THEN BEGIN
            ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
            IF ValueEntry.FINDFIRST THEN BEGIN
              ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
              IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                Lieferscheinnr := ItemLedgerEntry."Document No.";
                Belegdatum := ItemLedgerEntry."Document Date";
              END;
            END;
          END;
        END;
        //TOPAS 29.06.15 ST - rendert das Firmenlogo fr Batch L„ufe, da das Logo beim normalen Druck vom Briefpapier bezogen wird
        IF PrinterSelection.GET(USERID,50076) THEN BEGIN
          IF (PrinterSelection."Printer Name" = 'PDFCreator')
          OR (PrinterSelection."Printer Name" = 'Bullzip PDF Printer') THEN
            Firmendaten.CALCFIELDS(Picture);
        END;
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS Ende
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Header3@5011(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        IF "Sales Invoice Header"."Currency Code" = '' THEN
          waehrungs_text := 'EUR'
        ELSE
          waehrungs_text := "Sales Invoice Header"."Currency Code";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body5@5012(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        // ReportForNav.ShowOutput(Art = 0);
        // Unterdckt Artikeltexte wenn eine Artikelzeile nicht berechnet wird oder die Textzeilen aus Testkonserve 'Woche' oder leer ist
        vk_rech_zeile.SETFILTER("Document No.",'%1',"Sales Invoice Line"."Document No." );
        vk_rech_zeile.SETFILTER("Line No.",'%1',"Sales Invoice Line"."Attached to Line No." );
        IF vk_rech_zeile.FINDFIRST THEN BEGIN
          ReportForNav.ShowOutput(((vk_rech_zeile.Type = vk_rech_zeile.Type::Item) AND (vk_rech_zeile.Quantity > 0))
                                    OR (vk_rech_zeile.Type = 0) AND (vk_rech_zeile."No." <> 'WOCHE'));
        END ELSE BEGIN
          IF (("Sales Invoice Line"."Attached to Line No." = 0) AND ("Sales Invoice Line".Type = 0)
          AND ("Sales Invoice Line"."No." <> 'WOCHE') AND ("Sales Invoice Line".Description <> '')) THEN
            ReportForNav.ShowOutput(TRUE)
          ELSE
            ReportForNav.ShowOutput(FALSE);
        END;
        IF "Sales Invoice Line"."No." = 'LIEF_DRUCK' THEN
          ReportForNav.ShowOutput(FALSE);
        IF "Sales Invoice Line"."No." = 'LIEF_DRU_A' THEN
          ReportForNav.ShowOutput(TRUE);
        IF "Sales Invoice Line"."No." = 'BEIERSDORF' THEN
          ReportForNav.ShowOutput(TRUE);
        IF "Sales Invoice Line"."No." = 'AB_DRUCK' THEN
          ReportForNav.ShowOutput(FALSE);
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body6@5013(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput((Type = Type::"G/L Account")  AND ("Sales Invoice Line".Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body7@5014(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body8@5015(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        {lshanf c03}
        ReportForNav.ShowOutput(("Description 2" <> '') AND ("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item));
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer10@5016(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer11@5017(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer12@5018(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer13@5019(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer14@5020(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer16@5021(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
          ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer17@5022(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Customer."VAT Bus. Posting Group" <> 'HAN_AUSL' );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer18@5023(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Customer."VAT Bus. Posting Group" = 'HAN_AUSL' );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5024(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND ("Sales Invoice Line".Quantity > 0));
        //TOPAS 22.07.08 ST -Artikelposten / Wertposten holen , um Ursprungsland zu fllen
        vUrsprungsland := '';
        InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,"Sales Invoice Line"."Document No.",'',0,"Sales Invoice Line"."Line No.");
        ValueEntryRelation.SETCURRENTKEY("Source RowId");
        ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
        IF ValueEntryRelation.FINDFIRST THEN BEGIN
          REPEAT
            ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
            IF ValueEntry.FINDFIRST THEN BEGIN
              ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
              IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                IF vUrsprungsland <> '' THEN BEGIN
                  IF STRPOS(vUrsprungsland,ItemLedgerEntry.Ursprungsland) = 0 THEN
                  vUrsprungsland := vUrsprungsland + ',' + ItemLedgerEntry.Ursprungsland;
                END ELSE
                  vUrsprungsland := ItemLedgerEntry.Ursprungsland;
              END;
            END;
          UNTIL ValueEntryRelation.NEXT = 0;
        END;
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body20@5025(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line"."Description 2" <> '')
         AND ("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND ("Sales Invoice Line".Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body21@5026(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(((Item.NCNR = TRUE) AND ("Sales Invoice Line".Quantity > 0)) OR ((Item."Manufacturer Code" = '00')
         AND ("Sales Invoice Line".Quantity > 0)));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body22@5027(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        //debitor_artikel.SETFILTER(debitor_artikel."Artikelnr.",'%1',"Sales Invoice Line"."No.");
        //debitor_artikel.SETFILTER(debitor_artikel."Debitornr.",'%1',"Sales Invoice Line"."Sell-to Customer No.");
        //ReportForNav.ShowOutput((NOT debitor_artikel.FIND('-')) AND ("Sales Invoice Line".Quantity > 0) AND
        // ("Sales Invoice Line"."Cross-Reference No."='') AND (Item."Tariff No." <> ''));
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item)
         AND ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." <> '') AND ("Sales Invoice Line"."Cross-Reference No." = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body23@5028(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item)
         AND ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." <> '') AND ("Sales Invoice Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body24@5029(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." = '') AND ("Sales Invoice Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body25@5030(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND (Item."ECCN-Nr." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body26@5031(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND ("Sales Invoice Line"."VAT Prod. Posting Group" = '13B2'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body32@5032(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(Customer.Bonusregelung <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body33@5033(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse1 = '1'));
        //ReportForNav.ShowOutput(v_reverse1='1');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body34@5034(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body35@5035(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body36@5036(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group"  = 'EU') AND (v_reverse2 = '1'));
        //ReportForNav.ShowOutput("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU');
        //ReportForNav.ShowOutput(v_reverse2 = '1');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body37@5037(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        {lshanf c01}
        IF ZlgBed."Discount %" <> 0 THEN BEGIN
        //  "Sales Invoice Header".CALCFIELDS(Skontobetrag);
          IF COPYSTR(ZlgBed.Description,1,1) <> '*' THEN
            gzbedtx := ZlgBed.Description;
        END ELSE BEGIN
            gzbedtx := ZlgBed.Description;
        END;
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body39@5038(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Invoice Header"."Sell-to Customer No." <> "Sales Invoice Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header1': OnPreSectionSeiteSchleife_Header1(SeiteSchleife);
        END;
        'SalesInvoiceLine': CASE SectionId OF
          'Header3': OnPreSectionSalesInvoiceLine_Header3("Sales Invoice Line");
          'Body5': OnPreSectionSalesInvoiceLine_Body5("Sales Invoice Line");
          'Body6': OnPreSectionSalesInvoiceLine_Body6("Sales Invoice Line");
          'Body7': OnPreSectionSalesInvoiceLine_Body7("Sales Invoice Line");
          'Body8': OnPreSectionSalesInvoiceLine_Body8("Sales Invoice Line");
          'Footer10': OnPreSectionSalesInvoiceLine_Footer10("Sales Invoice Line");
          'Footer11': OnPreSectionSalesInvoiceLine_Footer11("Sales Invoice Line");
          'Footer12': OnPreSectionSalesInvoiceLine_Footer12("Sales Invoice Line");
          'Footer13': OnPreSectionSalesInvoiceLine_Footer13("Sales Invoice Line");
          'Footer14': OnPreSectionSalesInvoiceLine_Footer14("Sales Invoice Line");
          'Footer16': OnPreSectionSalesInvoiceLine_Footer16("Sales Invoice Line");
          'Footer17': OnPreSectionSalesInvoiceLine_Footer17("Sales Invoice Line");
          'Footer18': OnPreSectionSalesInvoiceLine_Footer18("Sales Invoice Line");
        END;
        'Item': CASE SectionId OF
          'Body19': OnPreSectionItem_Body19(Item);
          'Body20': OnPreSectionItem_Body20(Item);
          'Body21': OnPreSectionItem_Body21(Item);
          'Body22': OnPreSectionItem_Body22(Item);
          'Body23': OnPreSectionItem_Body23(Item);
          'Body24': OnPreSectionItem_Body24(Item);
          'Body25': OnPreSectionItem_Body25(Item);
          'Body26': OnPreSectionItem_Body26(Item);
        END;
        'Total': CASE SectionId OF
          'Body32': OnPreSectionTotal_Body32(Total);
          'Body33': OnPreSectionTotal_Body33(Total);
          'Body34': OnPreSectionTotal_Body34(Total);
          'Body35': OnPreSectionTotal_Body35(Total);
          'Body36': OnPreSectionTotal_Body36(Total);
          'Body37': OnPreSectionTotal_Body37(Total);
        END;
        'Total2': CASE SectionId OF
          'Body39': OnPreSectionTotal2_Body39(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5014(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5015();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      CASE DataItemId OF
        'SalesInvoiceLine': WITH "Sales Invoice Line" DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      030299 pl
      c01  Total, Body(1) und Globals
           Zahlungsbedingung vom Skonto abh„nging ausdrucken.
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      c02  Verkaufsrechnungszeile, C/AL und Globals
           Rechnungsrabatt %-Satz und Rabattgrundlage in Rechnungsrabattzeile mit ausdrucken.
      131099 al
      c03  Verkaufsrechnungszeile, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
      Papersource 3 --> Fach IV HP 4050NT
      Papersource 2 --> Fach II HP 4050NT
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

