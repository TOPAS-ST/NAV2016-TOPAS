OBJECT Report 50076 TOPAS-Rechnung
{
  OBJECT-PROPERTIES
  {
    Date=25.01.22;
    Time=16:00:01;
    Modified=Yes;
    Version List=Beleg Rechnungskopie --> 50131 !!!,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table112;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufsrechnung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  VkRK := "Sales Invoice Header";
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Location Code" = 'MUST' THEN CurrReport.SKIP;
                                  v_reverse1 := '';
                                  IF "Order No." = '' THEN
                                    AuftragNrText := ''
                                  ELSE
                                    AuftragNrText := FIELDNAME("Order No.");
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesInvBillTo(DebAdr,"Sales Invoice Header");
                                  Deb.GET("Bill-to Customer No.");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesInvShipTo(LieferAnAdr,"Sales Invoice Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + 'EUR' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  v_bonusdatum := 0D;
                                  v_FER_SPL := FALSE;
                                  //2015-09-07 ST Unterdrckt den Ausdruck der Original Rechnung, wenn Kunde keine ben”tigt,
                                  //fr den Batch Job wird die Rechnung aber wieder komplett sichtbar
                                  IF Deb."Original RE nicht drucken" THEN BEGIN
                                    IF PrinterSelection.GET(USERID,50076) THEN BEGIN
                                      IF (PrinterSelection."Printer Name" <> 'PDFCreator')
                                      AND (PrinterSelection."Printer Name" <> 'Bullzip PDF Printer') THEN
                                        CurrReport.BREAK;
                                    END ELSE
                                      CurrReport.BREAK;
                                  END;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table291;
               OnAfterGetRecord=BEGIN
                                  spedition := "Shipping Agent";
                                END;

               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  verk_debitor := Customer;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF Steuernummer = '' THEN
                                      Var_Steuernr := ''
                                    ELSE
                                     Var_Steuernr := 'Ihre Steuernummer:';
                                    IF "VAT Registration No." = '' THEN
                                      Var_UST_ID := ''
                                    ELSE
                                      Var_UST_ID := FIELDNAME("VAT Registration No.");
                                  END ELSE BEGIN
                                    Var_Steuernr := '';
                                    IF "VAT Registration No." = '' THEN
                                      Var_UST_ID := ''
                                    ELSE
                                      Var_UST_ID := 'Tax Number';
                                  END;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF "Sales Invoice Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Sales Invoice Header"."Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Sales Invoice Header"."Currency Code");
                                    END;
                                  END ELSE BEGIN
                                    IF "Sales Invoice Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Sales Invoice Header"."Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',"Sales Invoice Header"."Currency Code");
                                    END;
                                  END;
                                  //Bonusdatum fllen
                                  IF  Customer.Bonusregelung <> '' THEN
                                    v_bonusdatum := Customer.Bonusdatum;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 4   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Deb."Invoice Copies" := 2;
                               //AnzSchleifen := ABS(AnzKopien) + Deb."Anzahl Rechnungskopien" + 1;
                               AnzSchleifen := 1;
                               IF AnzSchleifen <= 0 THEN
                                 AnzSchleifen := 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               IF (("Sales Invoice Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Invoice Header"."Shipment Method Code" = 'ACC-ENG')) THEN BEGIN
                                 //Account := "Sales Invoice Header".Spediteuraccount;
                                 Account := "Shipping Agent".Name + ' / ' + "Sales Invoice Header".Spediteuraccount;
                               END ELSE BEGIN
                                 Account := "Shipping Agent".Name
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  //IF Nummer > 2 THEN
                                  //  ReportForNav.PrinterSettings.PaperSource(3);

                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    //IF Number > 1 THEN KopieText := 'skopie';
                                    IF (Number > 1) OR ("Sales Invoice Header"."No. Printed" > 0) THEN KopieText := 'skopie';
                                    ReportForNav.PageNo := 1;
                                  END ELSE BEGIN
                                    //IF Number > 1 THEN KopieText := ' Copy';
                                    IF (Number > 1) OR ("Sales Invoice Header"."No. Printed" > 0) THEN KopieText := ' Copy';
                                    ReportForNav.PageNo := 1;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkRechDruckZ„hler.RUN("Sales Invoice Header");
                              END;
                               }

    { 5   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 6   ;3   ;Column  ;Picture_Firmendaten ;
               SourceExpr=Firmendaten.Picture }

    { 7   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 8   ;3   ;Column  ;Lieferscheinnr      ;
               SourceExpr=Lieferscheinnr }

    { 9   ;3   ;Column  ;Belegdatum          ;
               SourceExpr=Belegdatum }

    { 10  ;3   ;Column  ;Var_UST_ID          ;
               SourceExpr=Var_UST_ID }

    { 11  ;3   ;Column  ;Steuernummer_verk_debitor;
               SourceExpr=verk_debitor.Steuernummer }

    { 12  ;3   ;Column  ;Var_Steuernr        ;
               SourceExpr=Var_Steuernr }

    { 13  ;3   ;Column  ;KopieText           ;
               SourceExpr=KopieText }

    { 14  ;3   ;Column  ;No_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."No." }

    { 15  ;3   ;Column  ;Bill_toCustomerNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Bill-to Customer No." }

    { 16  ;3   ;Column  ;OrderNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Order No." }

    { 17  ;3   ;Column  ;VATRegistrationNo_VkRK;
               SourceExpr=VkRK."VAT Registration No." }

    { 18  ;3   ;Column  ;OurAccountNo_verk_debitor;
               SourceExpr=verk_debitor."Our Account No." }

    { 19  ;3   ;Column  ;SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour;
               SourceExpr="Sales Invoice Header"."External Document No."+' '+"Sales Invoice Header"."Your Reference" }

    { 20  ;3   ;Column  ;PostingDate_SalesInvoiceHeader;
               SourceExpr=FORMAT("Sales Invoice Header"."Posting Date",0,1) }

    { 21  ;3   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 22  ;3   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 23  ;3   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 24  ;3   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 25  ;3   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 26  ;3   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 27  ;3   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 28  ;3   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 29  ;3   ;Column  ;seite               ;
               SourceExpr=seite }

    { 30  ;3   ;DataItem;Sales Invoice Line  ;
               DataItemTable=Table113;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                               {lshanf c02}
                               grechrabbetr := 0;
                               {lshend}
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  {lshanf c02}
                                  IF "Inv. Discount Amount" <> 0 THEN BEGIN
                                    "grechrab%" := ("Inv. Discount Amount" * 100) / (Amount + "Inv. Discount Amount");
                                    grechrabbetr := grechrabbetr + Amount + "Inv. Discount Amount";
                                  END;
                                  {lshend}
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    steuer_text := MWSTBetragZeile.VATAmountText ;
                                    einheiten_text := "Sales Invoice Line"."Unit of Measure";
                                  END ELSE BEGIN
                                    steuer_text := MWSTBetragZeile.VATAmountText;
                                    IF "Sales Invoice Line"."Unit of Measure" <> 'STšCK' THEN
                                      einheiten_text := 'pcs.'
                                    ELSE
                                      einheiten_text := "Sales Invoice Line"."Unit of Measure";
                                  END;

                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Invoice Line".Type = "Sales Invoice Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Invoice Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND ("Sales Invoice Line".Quantity > 0) THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                  IF v_FER_SPL = FALSE THEN BEGIN
                                    IF (("Sales Invoice Line"."Manufacturer Code" ='82') OR ("Sales Invoice Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 31  ;4   ;Column  ;waehrungs_text      ;
               SourceExpr=waehrungs_text }

    { 32  ;4   ;Column  ;Amount_InvDiscountAmount;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 33  ;4   ;Column  ;Description_SalesInvoiceLine;
               SourceExpr=Description }

    { 34  ;4   ;Column  ;UnitPrice_SalesInvoiceLine;
               SourceExpr="Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 35  ;4   ;Column  ;einheiten_text      ;
               SourceExpr=einheiten_text }

    { 36  ;4   ;Column  ;Quantity_SalesInvoiceLine;
               SourceExpr=Quantity }

    { 37  ;4   ;Column  ;InvDiscountAmount_SalesInvoiceLine;
               SourceExpr=-"Inv. Discount Amount" }

    { 38  ;4   ;Column  ;grechrabbetr        ;
               SourceExpr=grechrabbetr }

    { 39  ;4   ;Column  ;grechrabPct         ;
               SourceExpr="grechrab%" }

    { 40  ;4   ;Column  ;lead_free_text0     ;
               SourceExpr=lead_free_text0 }

    { 41  ;4   ;Column  ;lead_free_text1     ;
               SourceExpr=lead_free_text1 }

    { 42  ;4   ;Column  ;lead_free_text2     ;
               SourceExpr=lead_free_text2 }

    { 43  ;4   ;Column  ;lead_text           ;
               SourceExpr=lead_text }

    { 44  ;4   ;Column  ;waehrung2           ;
               SourceExpr=waehrung2 }

    { 45  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 46  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 47  ;4   ;Column  ;steuer_text         ;
               SourceExpr=steuer_text }

    { 48  ;4   ;Column  ;AmountIncludingVAT_SalesInvoiceLine;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 49  ;4   ;Column  ;AmountIncludingVAT_Amount;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 50  ;4   ;Column  ;Amount_SalesInvoiceLine;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 51  ;4   ;Column  ;SalesInvoiceLineGetCurrencyCode;
               SourceExpr="Sales Invoice Line".GetCurrencyCode;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 1000000003;4;Column;SalesInvoiceLineSWalsLeistung;
               SourceExpr="Sales Invoice Line"."SW als Leistung" }

    { 52  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnPreDataItem=BEGIN
                               IF debart <> '' THEN
                                 debart := 'Ihre Artikelnummer: ' + debart;
                             END;

               OnAfterGetRecord=BEGIN
                                  v_reverse := ' ';
                                  //IF Item."Global Dimension 2 Code" = 'WARTUNG' THEN BEGIN
                                  //  v_reverse := 'ø*';
                                  //  v_reverse1 := '1';
                                  //END;
                                  {
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" = 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '**';
                                      v_reverse1 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" <> 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '***';
                                      v_reverse2 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group"='AUSLAND') AND (Item."Gen. Prod. Posting Group" = 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '**';
                                      v_reverse1 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group"='AUSLAND') AND (Item."Gen. Prod. Posting Group" <> 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '***';
                                      v_reverse2 := '1';
                                    END;
                                  END;
                                  }
                                  //// Ab hier fr 16%
                                  {
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = '16_SYSTEM') OR (Item."Gen. Prod. Posting Group" = '16_HANDEL')) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                        IF ((Item."Gen. Prod. Posting Group" = '16_SCHULUN') OR (Item."Gen. Prod. Posting Group" = '16_SERVICE') OR (Item."Gen. Prod. Posting Group" = '16_STD_POO')) THEN BEGIN
                                          IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = '16_SYSTEM') AND ("Sales Invoice Line"."SW als Leistung" = TRUE)) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '***';
                                          v_reverse1 := '';
                                          v_reverse2 := '1';
                                        END;
                                      END;
                                    END;
                                  END;
                                  }

                                  ////  Ab hier fr 19%
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                    IF ((Item."Gen. Prod. Posting Group" = 'SYSTEM') OR (Item."Gen. Prod. Posting Group" = 'HANDEL')) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = 'SCHULUNG') OR (Item."Gen. Prod. Posting Group" = 'SERVICE') OR (Item."Gen. Prod. Posting Group" = 'STD_POOL')) THEN BEGIN
                                          IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;

                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = 'SYSTEM') AND ("Sales Invoice Line"."SW als Leistung" = TRUE)) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '***';
                                          v_reverse1 := '';
                                          v_reverse2 := '1';
                                        END;
                                      END;
                                    END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                debart := '';
                              END;

               DataItemLinkReference=Sales Invoice Line;
               DataItemLink=No.=FIELD(No.) }

    { 53  ;5   ;Column  ;v_reverse           ;
               SourceExpr=v_reverse }

    { 54  ;5   ;Column  ;lead_symbol         ;
               SourceExpr=lead_symbol }

    { 55  ;5   ;Column  ;vUrsprungsland      ;
               SourceExpr=vUrsprungsland }

    { 56  ;5   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Herstellerkurzname }

    { 57  ;5   ;Column  ;LineNo_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Line No." }

    { 58  ;5   ;Column  ;Artikelnr2_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Artikelnr. 2" }

    { 59  ;5   ;Column  ;Description_SalesInvoiceLine3;
               SourceExpr="Sales Invoice Line".Description }

    { 60  ;5   ;Column  ;einheiten_text2     ;
               SourceExpr=einheiten_text }

    { 61  ;5   ;Column  ;Quantity_SalesInvoiceLine2;
               SourceExpr="Sales Invoice Line".Quantity }

    { 62  ;5   ;Column  ;UnitPrice_SalesInvoiceLine2;
               SourceExpr="Sales Invoice Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 63  ;5   ;Column  ;SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmount;
               SourceExpr="Sales Invoice Line".Amount+"Sales Invoice Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 64  ;5   ;Column  ;Description2_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Description 2" }

    { 65  ;5   ;Column  ;TariffNo_Item       ;
               SourceExpr="Tariff No." }

    { 66  ;5   ;Column  ;Cross_ReferenceNo_SalesInvoiceLine;
               SourceExpr="Sales Invoice Line"."Cross-Reference No." }

    { 67  ;5   ;Column  ;ECCN_Nr__ItemECCN_Nr;
               SourceExpr='ECCN-Nr.: '+ Item."ECCN-Nr." }

    { 68  ;5   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 69  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=No.=FIELD(No.) }

    { 70  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 71  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 72  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 73  ;4   ;Column  ;VATBase_MWSTBetragZeile2;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 74  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 75  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 76  ;4   ;Column  ;v_bonusdatum        ;
               SourceExpr=v_bonusdatum }

    { 77  ;4   ;Column  ;Account             ;
               SourceExpr=Account }

    { 78  ;4   ;Column  ;Description_LieferBed;
               SourceExpr=LieferBed.Description }

    { 79  ;4   ;Column  ;gzbedtx             ;
               SourceExpr=gzbedtx }

    { 80  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 81  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader_Lbl;
               SourceExpr="Sales Invoice Header".FIELDCAPTION("Sell-to Customer No.") }

    { 82  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader;
               SourceExpr="Sales Invoice Header"."Sell-to Customer No." }

    { 83  ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 84  ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 85  ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 86  ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 87  ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 88  ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 89  ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 90  ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;;Container;
                  Name=UB;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      waehrung2@1140000 : Code[10];
      waehrung@1140001 : Code[10];
      debart@1140002 : Text[80];
      spedition@1140003 : Record 291;
      art1@1140004 : Record 27;
      verk_debitor@1140005 : Record 18;
      FIBUEinrichtung@1140006 : Record 98;
      LieferBed@1140007 : Record 10;
      ZlgBed@1140008 : Record 3;
      VerkEinkPerson@1140009 : Record 13;
      Firmendaten@1140010 : Record 79;
      Deb@1140011 : Record 18;
      MWSTBetragZeile@1140012 : TEMPORARY Record 290;
      language@1140061 : Record 8;
      PrinterSelection@1140065 : Record 78;
      VerkRechDruckZ„hler@1140013 : Codeunit 315;
      FormatAdr@1140014 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140015 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140016 : ARRAY [8] OF Text[50];
      FirmaAdr@1140017 : ARRAY [8] OF Text[50];
      AuftragNrText@1140018 : Text[30];
      Verk„uferText@1140019 : Text[30];
      MWStNrText@1140020 : Text[30];
      ReferenzText@1140021 : Text[30];
      TotalText@1140022 : Text[50];
      TotalInklMWStText@1140023 : Text[50];
      MehrZeilen@1140024 : Boolean;
      AnzKopien@1140025 : Integer;
      AnzSchleifen@1140026 : Integer;
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      "--------LSH--------"@1140030 : Integer;
      "grechrab%"@1140031 : Decimal;
      grechrabbetr@1140032 : Decimal;
      gzbedtx@1140033 : Text[100];
      lead_free_text0@1140034 : Text[80];
      lead_free_text1@1140035 : Text[80];
      leadfree_symbol@1140036 : Text[3];
      leadfree_artikel@1140037 : Record 27;
      lead_artikel@1140055 : Record 27;
      lead_symbol@1140057 : Text[3];
      lead_text@1140056 : Text[120];
      lead_free_text2@1140038 : Text[80];
      Var_UST_ID@1140039 : Text[20];
      Var_Steuernr@1140040 : Text[20];
      steuer_text@1140041 : Text[30];
      seite@1140042 : Text[30];
      waehrungs_text@1140043 : Text[15];
      einheiten_text@1140044 : Text[30];
      vk_rech_zeile@1140045 : Record 113;
      Account@1140046 : Text[90];
      vUrsprungsland@1140047 : Text[50];
      Lieferscheinnr@1140052 : Code[20];
      Belegdatum@1140054 : Date;
      InvoiceRowID@1140048 : Text[100];
      ValueEntryRelation@1140049 : Record 6508;
      ValueEntry@1140050 : Record 5802;
      ItemLedgerEntry@1140051 : Record 32;
      VkZeile@1140053 : Record 113;
      v_bonusdatum@1140058 : Date;
      v_reverse@1140059 : Text[3];
      v_reverse1@1140060 : Text[3];
      v_reverse2@1140063 : Text[3];
      v_FER_SPL@1140062 : Boolean;
      VkRK@1140064 : Record 112;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header1@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //TOPAS 13.05.09 ST - Lieferscheinnr. auf Rechnung anzeigen
        Lieferscheinnr := '';
        Belegdatum := 0D;
        VkZeile.RESET;
        VkZeile.SETFILTER("Document No.","Sales Invoice Header"."No.");
        IF CurrReport.LANGUAGE = 1031 THEN
          VkZeile.SETFILTER(Type,'Artikel')
        ELSE
          VkZeile.SETFILTER(Type,'Item');
        VkZeile.SETFILTER(Quantity,'>%1',0);
        IF VkZeile.FINDFIRST THEN BEGIN
          InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,VkZeile."Document No.",'',0,VkZeile."Line No.");
          ValueEntryRelation.SETCURRENTKEY("Source RowId");
          ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
          IF ValueEntryRelation.FINDFIRST THEN BEGIN
            ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
            IF ValueEntry.FINDFIRST THEN BEGIN
              ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
              IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                Lieferscheinnr := ItemLedgerEntry."Document No.";
                Belegdatum := ItemLedgerEntry."Document Date";
              END;
            END;
          END;
        END;
        //TOPAS 29.06.15 ST - rendert das Firmenlogo fr Batch L„ufe, da das Logo beim normalen Druck vom Briefpapier bezogen wird
        IF PrinterSelection.GET(USERID,50076) THEN BEGIN
          IF (PrinterSelection."Printer Name" = 'PDFCreator')
          OR (PrinterSelection."Printer Name" = 'Bullzip PDF Printer') THEN
            Firmendaten.CALCFIELDS(Picture);
        END;
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS Ende
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Header3@5011(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        IF "Sales Invoice Header"."Currency Code" = '' THEN
          waehrungs_text := 'EUR'
        ELSE
          waehrungs_text := "Sales Invoice Header"."Currency Code";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body5@5012(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        // ReportForNav.ShowOutput(Art = 0);
        // Unterdckt Artikeltexte wenn eine Artikelzeile nicht berechnet wird oder die Textzeilen aus Testkonserve 'Woche' oder leer ist
        vk_rech_zeile.SETFILTER("Document No.",'%1',"Sales Invoice Line"."Document No." );
        vk_rech_zeile.SETFILTER("Line No.",'%1',"Sales Invoice Line"."Attached to Line No." );
        IF vk_rech_zeile.FINDFIRST THEN BEGIN
          ReportForNav.ShowOutput(((vk_rech_zeile.Type = vk_rech_zeile.Type::Item) AND (vk_rech_zeile.Quantity > 0))
                                    OR (vk_rech_zeile.Type = 0) AND (vk_rech_zeile."No." <> 'WOCHE'));
        END ELSE BEGIN
          IF (("Sales Invoice Line"."Attached to Line No." = 0) AND ("Sales Invoice Line".Type = 0)
          AND ("Sales Invoice Line"."No." <> 'WOCHE') AND ("Sales Invoice Line".Description <> '')) THEN
            ReportForNav.ShowOutput(TRUE)
          ELSE
            ReportForNav.ShowOutput(FALSE);
        END;
        IF "Sales Invoice Line"."No." = 'LIEF_DRUCK' THEN
          ReportForNav.ShowOutput(FALSE);
        IF "Sales Invoice Line"."No." = 'LIEF_DRU_A' THEN
          ReportForNav.ShowOutput(TRUE);
        IF "Sales Invoice Line"."No." = 'BEIERSDORF' THEN
          ReportForNav.ShowOutput(TRUE);
        IF "Sales Invoice Line"."No." = 'AB_DRUCK' THEN
          ReportForNav.ShowOutput(FALSE);
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body6@5013(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput((Type = Type::"G/L Account")  AND ("Sales Invoice Line".Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body7@5014(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body8@5015(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        {lshanf c03}
        ReportForNav.ShowOutput(("Description 2" <> '') AND ("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item));
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer10@5016(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer11@5017(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer12@5018(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer13@5019(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer14@5020(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer16@5021(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
          ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer17@5022(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Customer."VAT Bus. Posting Group" <> 'HAN_AUSL' );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer18@5023(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Customer."VAT Bus. Posting Group" = 'HAN_AUSL' );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5024(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND ("Sales Invoice Line".Quantity > 0));
        //TOPAS 22.07.08 ST -Artikelposten / Wertposten holen , um Ursprungsland zu fllen
        vUrsprungsland := '';
        InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,"Sales Invoice Line"."Document No.",'',0,"Sales Invoice Line"."Line No.");
        ValueEntryRelation.SETCURRENTKEY("Source RowId");
        ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
        IF ValueEntryRelation.FINDFIRST THEN BEGIN
          REPEAT
            ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
            IF ValueEntry.FINDFIRST THEN BEGIN
              ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
              IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                IF vUrsprungsland <> '' THEN BEGIN
                  IF STRPOS(vUrsprungsland,ItemLedgerEntry.Ursprungsland) = 0 THEN
                  vUrsprungsland := vUrsprungsland + ',' + ItemLedgerEntry.Ursprungsland;
                END ELSE
                  vUrsprungsland := ItemLedgerEntry.Ursprungsland;
              END;
            END;
          UNTIL ValueEntryRelation.NEXT = 0;
        END;
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body20@5025(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line"."Description 2" <> '')
         AND ("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND ("Sales Invoice Line".Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body21@5026(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(((Item.NCNR = TRUE) AND ("Sales Invoice Line".Quantity > 0)) OR ((Item."Manufacturer Code" = '00')
         AND ("Sales Invoice Line".Quantity > 0)));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body22@5027(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        //debitor_artikel.SETFILTER(debitor_artikel."Artikelnr.",'%1',"Sales Invoice Line"."No.");
        //debitor_artikel.SETFILTER(debitor_artikel."Debitornr.",'%1',"Sales Invoice Line"."Sell-to Customer No.");
        //ReportForNav.ShowOutput((NOT debitor_artikel.FIND('-')) AND ("Sales Invoice Line".Quantity > 0) AND
        // ("Sales Invoice Line"."Cross-Reference No."='') AND (Item."Tariff No." <> ''));
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item)
         AND ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." <> '') AND ("Sales Invoice Line"."Cross-Reference No." = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body23@5028(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item)
         AND ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." <> '') AND ("Sales Invoice Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body24@5029(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." = '') AND ("Sales Invoice Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body25@5030(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND (Item."ECCN-Nr." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body26@5031(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND ("Sales Invoice Line"."VAT Prod. Posting Group" = '13B2'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body32@5032(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(Customer.Bonusregelung <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body33@5033(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse1 = '1'));
        //ReportForNav.ShowOutput(v_reverse1='1');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body34@5034(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body35@5035(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body36@5036(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group"  = 'EU') AND (v_reverse2 = '1'));
        //ReportForNav.ShowOutput("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU');
        //ReportForNav.ShowOutput(v_reverse2 = '1');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body37@5037(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        {lshanf c01}
        IF ZlgBed."Discount %" <> 0 THEN BEGIN
        //  "Sales Invoice Header".CALCFIELDS(Skontobetrag);
          IF COPYSTR(ZlgBed.Description,1,1) <> '*' THEN
            gzbedtx := ZlgBed.Description;
        END ELSE BEGIN
            gzbedtx := ZlgBed.Description;
        END;
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body39@5038(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Invoice Header"."Sell-to Customer No." <> "Sales Invoice Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header1': OnPreSectionSeiteSchleife_Header1(SeiteSchleife);
        END;
        'SalesInvoiceLine': CASE SectionId OF
          'Header3': OnPreSectionSalesInvoiceLine_Header3("Sales Invoice Line");
          'Body5': OnPreSectionSalesInvoiceLine_Body5("Sales Invoice Line");
          'Body6': OnPreSectionSalesInvoiceLine_Body6("Sales Invoice Line");
          'Body7': OnPreSectionSalesInvoiceLine_Body7("Sales Invoice Line");
          'Body8': OnPreSectionSalesInvoiceLine_Body8("Sales Invoice Line");
          'Footer10': OnPreSectionSalesInvoiceLine_Footer10("Sales Invoice Line");
          'Footer11': OnPreSectionSalesInvoiceLine_Footer11("Sales Invoice Line");
          'Footer12': OnPreSectionSalesInvoiceLine_Footer12("Sales Invoice Line");
          'Footer13': OnPreSectionSalesInvoiceLine_Footer13("Sales Invoice Line");
          'Footer14': OnPreSectionSalesInvoiceLine_Footer14("Sales Invoice Line");
          'Footer16': OnPreSectionSalesInvoiceLine_Footer16("Sales Invoice Line");
          'Footer17': OnPreSectionSalesInvoiceLine_Footer17("Sales Invoice Line");
          'Footer18': OnPreSectionSalesInvoiceLine_Footer18("Sales Invoice Line");
        END;
        'Item': CASE SectionId OF
          'Body19': OnPreSectionItem_Body19(Item);
          'Body20': OnPreSectionItem_Body20(Item);
          'Body21': OnPreSectionItem_Body21(Item);
          'Body22': OnPreSectionItem_Body22(Item);
          'Body23': OnPreSectionItem_Body23(Item);
          'Body24': OnPreSectionItem_Body24(Item);
          'Body25': OnPreSectionItem_Body25(Item);
          'Body26': OnPreSectionItem_Body26(Item);
        END;
        'Total': CASE SectionId OF
          'Body32': OnPreSectionTotal_Body32(Total);
          'Body33': OnPreSectionTotal_Body33(Total);
          'Body34': OnPreSectionTotal_Body34(Total);
          'Body35': OnPreSectionTotal_Body35(Total);
          'Body36': OnPreSectionTotal_Body36(Total);
          'Body37': OnPreSectionTotal_Body37(Total);
        END;
        'Total2': CASE SectionId OF
          'Body39': OnPreSectionTotal2_Body39(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'SalesInvoiceLine': WITH "Sales Invoice Line" DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      030299 pl
      c01  Total, Body(1) und Globals
           Zahlungsbedingung vom Skonto abh„nging ausdrucken.
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      c02  Verkaufsrechnungszeile, C/AL und Globals
           Rechnungsrabatt %-Satz und Rabattgrundlage in Rechnungsrabattzeile mit ausdrucken.
      131099 al
      c03  Verkaufsrechnungszeile, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
      Papersource 3 --> Fach IV HP 4050NT
      Papersource 2 --> Fach II HP 4050NT

      250122 st: šbertrag- und Fortsetzungsbetrag Sektionen ausgeblendet, da mit 6.1.0 mitunter fehlerhaft
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>/nABAN197W7cOLrm/wX2HnR8MNvd0061ROqzp3PO+isdT6ftbOwkPbMYGHIV7dKkLHkklRPnx17J
AudPA3sH588OsMDmgvYWlpRElT5eskhWVTpzBmhMTKkk8uGr94svH/6///1/fvjXD3cL64HkRZKl
T/ecib1nkXSazZL09unesrx5Eu7967/85//0wy9lHr8i91leFi/ix2xZXpA8iRfJR5Jbq3++aR/k
TtDEY097RW7on3vWUZaWeba4fLwnT/eOycPJh/ucFMWk8+DJ69POn/uW4K4H9vB9i7+Lv2rfOlou
ymVOnqZkSW9f7Fsvl9eLZPoTebzM3pH0aXTtOTG69m9cdH1z7U33rLP4jvbmQ/tw2s/eEPasl/Et
eU6S23n5dA9FgV23vE1m5Zw2ODZt+DnOb5O0oL8IaScc+p9b/cfGzh76Ok3ojy9JWs6L85uDn5PF
IrkjJcn3rOP7hD7Fc/esZxSep3sHDMh9K7gv6bW4jC+yZT6lPfxniuITm/X34Si7u4/L5DpZJOXj
cVLcL+LHp3v0ArIdj7+yeJbltKkdy551fv1XMi3Psqd7nm0HPn18/dMagcvzlwcXT16R6Txdprd7
dMIt64fDOJ0V1T/pH6cluXPqyUSDyazfxbrLbmK/4sBexAtSnKYPWTKlIMaz/pDPyHuG5UuS0xdn
+ezpXpkvyZ51OqsEhj/wMr5esC6y/3McxIb4t2fJguL3LCGLGcX9LJvsX5DF4kmZURkoyuyOCiVr
pP9ZL/MkLcms8zPWEyreP7+gcnjy+umP5HrCZv1dvLwpcg6B9YI8kMXTPXvQkTcJeU8Hdv7q8vTs
x6/pC77ZayAaIDZEDaujNk/u72kHD26pyHQBY8AgGBgUdRB7kaTvnu4dZTPy9NnpyYvjr/kTreqR
FrvyzZoR7lnfDQeC6oG4ygPhczEcAxZMbjgcAoWXjwCY3tUQhtIiHAKuh+ApD+Gn7D4hF9P5giQ3
RFV43VV33sQ5/CBoDu36f8hvBzac7YH0Le+uSd4RQFAIh4LoqwsiSUpw8GyQHjDI4Q/UBrnmE6sH
ab19fvLqpPnr6dH52cXl1843g7ELxz/EIAAxqFVUF4G6xemO/YKqUapTB9crLXOenlBL+sjkgovD
87g4T1/mpPlV21xZlGdUclFkj8dQdbfpIDSU4XBC3t8X8TVZDI1tPbjqEu0+NdP0vXQa9jEF/kU2
jVnHni2ymNofB9v2hM6OQ+1r6NgyA7VvFeUjndbDbEHhOorv2WO4Tr0oyZLkT87yyfe0q384OXv9
9PLgF/bRfr9nXZIPzB7yvwXjoyO8YC+gyGY5NXX1SKM963VB6r7cxIuC9D/y3s+/qxCSwddoNMfu
4QfbNwi/GirkyHF0q3/avmMM5+uLcvLk9HhSA1rB+ebgknb+dtKFtNemBavj6OKKZLg2apYZ6w6u
sAXUl8vAXC7fnpycPGEQdZDstHWwHLTqoYl10cQyNN3mqS5Hk/XwMPsAK/Lm4gpRhBhy2PelAutG
wSSKIh+bCWzlrJKy8sga48/81PSRyiRF8SzjuI6an2f5x4NFckt14wtyU9b3VQ13hL3x52Q2W5Dq
kt4keONJoH8Pnq40O65sdrzmdf5gdmATs4XZ0RF/4bQw8YbmpdO+s4kJtjYxnmxi/OZ14WBiYPMo
nRj5hOjYSeGEQJOx64kAjKnhRPiyiQiasNEeTESkNBGRHU0CFEGz4AUTJ2KzENFwG9Pb6IQFuDsZ
QrjZH9a31lf71lf0/5rGl1lR3sTT+WAa1ty7q+lBjvF0BLLpCJvHt8a5Y4cdx6WuORzh9Q114E0c
20XOPsWdzUHoBqP5sfct5IQTG2McSG1Jz04zm/ws/jCx/sAsNvsXn4+qVRNEbVMcyrCLmqe6Quzg
0BLCzvHdCr2Aghf5aIxeZQ58xw3D0PX3LSeoodRD8uU8S0kN5SVZtFDWzZpYAhZVjmUkjV3s5rFD
ywn7iUO94CAHM8kLw0YEwwgDIFLccIWbG4TmmuFgNmNpSEtFM6zu3ZlmCIw1g2NLp4Rn+IY2Ew6J
RjYTu1SavRAH++5YWzdSvxLk0FeakEpUB8A3bTsDODIHWBpwOk3EiYe2EFa5hgDDSlcIMFWrA3ir
ll2Bi83tmiONOp0m7MRoAC6sk8eOhsfUSCCzaNgOK62sjfHBqzcdDXFXFrckT6bzcgC8+LadzQY2
nw1p1Oo0YSsehq2hzmyEarPhBMEkxLiKnRRm402WF2WV5usHpW3zztD2zNGWRqFOE4ZiOCnwMpmy
lbEK4K7jsmqvvRenxd9D3r6Dxpg7yMUT5o2wazKom0dfPUtyOspZXJK0dT6gS8LRV8NrgjkMR9WK
w2MBD9ekob3v+GMdGmFnQqMJFFC/TD6+04vzF9ltBo0PvCQfXxMj4VDkWLrwZ9N3LF0kzJ5R7zBA
E0/Zd2QO4+nhwdn31vEJci3k2Y5Fw2HbsnEQWZjGWZbttANee6PeV6Kf5ZVGPE4T8ri2EF1YrnTQ
dXXRvXh7+uzyyeHp0eR76+Xh2U/HJ8+e/fLLLxxT0WUtJF3tvK4jjX+cJgByhcGjCysgHSQdXSRP
Xr968hO9KWuzt50WPby0w0VHGuOgJsZxhQGjqxIwSvHywzV4STPiLI9xHafvrOdxmmYPbLG2UdKj
C3pIageLSBqaoCY0cX0hkippCzmSrpl+9EOq9qgFpjaRqj36P8uxfdtiz+jrR/GNetgCGdQ12MqX
wfjKvtj6qKzdyLF1NLXj++SmbNTf2fmLA2pcnMOD5612FFzWw1HbziBpAIJ4eYHYzqisLUpx9MLf
Sjd6+muE0gABNQGCJ7YlKivZcrQ8c814UcazsriP83dxURDrMM6LJL2dx8ti5elJ79FDV9vyIGlA
gJqAwBNbHntjdJ3A0KOk7iF1FEOqA6mFtAOqDT3fjyxWTdfXmOIb9dDVt0bStSXUxCOe0BpheHVD
A103DCaRsUd5/OrkgrmMFL1qlVtwDfI2u5f1UNa3S9KFI9RERZ7QLuGNoyLXCyahFsr/5W/LrPwD
06L71uuL4yfWMp1Zf3z5p0ap1pe7yha8TRNZfUsljYhQExH5QksliLR1kEVrtINU+9YwHmV3dyT/
WPmhBz/ut75oH2TRXXoY+/r2TRoroSZW8oX2TZCs0cAYR9K1Z7HHiphaDagerRxRzNQq9UvH+ld8
ox62+tZNGlfhJq7yhdYNbxxXYV8P254KPXl9SV3S54J4vntZD0dtO4alURXmNaFiO7ZxVIWxHo5M
ZVbKkmnNses6vKSHn7aFwtLICTeRky+2UBtHTtg2r3er9eQxWZbFdM78U6keFd+nibK2tcLycsIm
rgoG1ooX9DCcbbVqEscLJ/6+iyZ4jLbn2ROPZbbdoJ/8FezN6KWDXyTkhuQMvSRN2yTKsHVX6wqB
tu3C0tgMN7FZILRdtortYhtiYKxxYNerCEOsRwgNJLqP6OT7yrk9yybZjXVMFgmrv/5eBmszMaNf
SNPzuAmmWHERJICB2vo4xU0AB2K7hswE75AsyO0sLpd3fGzdlp0JnKstcNKACjcBVeBBAudvnDaJ
ok2c0arwyPYcx4osP7R894nnoD+0hUrfupE1uNgrWYKu66Hta6MtDaxwE1gFASzPntoaLcICefar
jXCOt8bwj4X5TZxfvb64vDo9bmvaVy16kIXakEkjJtxETEEkgEyx3lcOmVwDhDBo9WaLdMmCoCuq
zt5dzch1Umb5KkslukEL0tDWhlQaIOEmQAodAaRqdRtCSF3PWKkyqWtQy7uS2LbpAYe0gZNGP24T
/YQYUpauSuYJBQLQIhcEbZ1Z/jNJyvtl+q60ZiS3aiO9TG9r88zNrMWWwlWs8/AHUuPs8k1QYCy4
eR7DsTdKZJC7OFl8b/317r+W2X1cTGZtLRtwRU+stINBVxrMuE0wE4LB4ObJisjfBEdWvdq3wY0J
rktZhzZ2ZYKF1/XA1o4cXWlM4zYxTQhGjptH3RHeBOznJM+tP2bxdJ7cWT/H8ad/q6D+OZ90W4uC
Yzy+oAeudsDoyndMNeFLBKY3lUIXObj2JuAeLqfzebwoW/14MJ1my7RM6N8c0G6T3gZJ7UjQla4j
uU3oEyHQSCO13TSYohmN0QwDzJgcIsmWJkfg9FT7qdlrOGKdhpGxekPysmk4zMoyuxvZoLpZPw6K
tBObrjQOcps4KHJhuBVdIg8JAk0m1tQzl6SNBXifZVcQmwOPpsGLuwo+I33DJw2H3CYciiDDp7Qb
Zi3g60KhgYrgTBxF7bRXWqIB16q3wLeJ+n6rHo76Nk0aI7lNjBRBNg2pJEIjR+SWVjDafbntyNcR
FSgGylDVJmVJrGuSWH+O5wsKqJUwPK0Bvlac3pJrktb+xILEBbHeJ+XcKufEuo8fmbha8eJ9/FhY
STpLaNdIdS1p0E87czIScN63xh3Z4PFyP7gJp6IIQl8lg+LYnkCK/chEio9ZDqqOAOiIWuee/Vtv
o6KtHXm60gDKs/mD4dATwaURIzUrklamYM3U7GGyWFyVGac5kWpdtXt3tnvU1o5qPelalOfwB4Nh
rVJUu25CNAX4p2U6I2lHB68YbZqVZ/63JnTa2VNPGrl5LZEFmD5VKZJA2JElBHSRO1jelHncs1/n
S6Z3b0hO0mmrDPqNmihqZ0U9aUjmcdoKW5AWVU3xyZHUVwrn+WyNKpDdsTsFoJ1i9aRRm8eJLuyB
BbuYx/fEgaO26lrPf3AcYFtH7YW5PegPM4ZaQdFfLGRDZ2/gNCn0AdXfdfeoG1FS12GxfuByCgnO
IeEIMqFqO2LXpeP1Ba9m6UgK+ilXnEfZ1Zt3r37q0M1AV/WEyNG3ItIAyuO0D45grU6R/kFkSVwP
G37Ey7wJ6ilQUJZefIMmovrGRRodeQF/MGRcVMwyM76SDL2ubamzyzF1qlNG49NNoVTUdoMcSt2m
iaG+aZFGRl7IHwybFjXL4lIDEo6Vm+HHPbYVJx9onJLGi+NsumS2gcohYFH+lC1XK0sbPePn5aJM
XiQp4bRonTzNZXY/slS07Y/U4UpuHnWnU99SSVeuvIg/GIq1VCrPkG9DW7hNPofTeU4s7m9RaxTz
QLblSqR9nQw91rpRD0akHYZ50jDM52EYciC3VQFGjH0or+iFinlFIDEoyMR0UzCC7CGXzX5mRhdj
bXvoS6Mqn0dVSGAPPUW6DWHtir821o1gBcR2mCXpLcsHSFzbdXftzL1F2nbUlwZpPg/SkAfOhGCH
73AiQlFNlRcwmQ9tZ+KKpd6Gp+KYXB/M8nC1/lr/qQmYttH0pfGY39IIwkZTTXDX4BV40UTMqCPH
K+jjFejipW2VfGn85PP4CYlqVLYCmONLNkzIAfP7gPm6tIra9seXxl0+j7uwIO5SK+tbA5gfuJLF
QjlgXh8wTxcwfWMip9TjwRUWGBO1vOk6wDBizOtGgLl9wDQ31lbr7pqASWMnn8dOGNb5W1H5XhhJ
NorJ8cJ9vLAuXvoqXxon+TxOwrDKV6M8XYeXG0x8Q7xQHy/NIhIH66t8aSDi80AEwyofXrvUxcv2
JtgQL6ePlyYRSJWw08RLGnEEPOJwBQs/W/GFbXdNBDdGq2DM6Ryr5o+OZ/uK0YULXNv6miau2oYh
gKOMH76T0JSLGbh77NsCcoFnWVb22djrlp5pWB0AIGJgf7mIp+Q0rUO0Mf86m6oepTt/CTxcDVJ2
Z0X6oedPOKFvT2gIi4N9gKGICpg00tq3pvM4p9L11JYwYD3P7sg9RWnAgLVqBtbWZYvbmuK3PW5m
JX73IWlIlcIXMNX0FxScUJS7dKqtWcL1hAZXBiPLcNEHljkpp3MugQds2aCuUKveWHehvV1tOYIR
gXSWI+oXbYG3HSQCUeIAcUJPlNiSbKf070uVao5nn/6eW7OEZbuKm09/n7MKY/Z3QQqeAKP/uiWL
kqTWMi1ITqx4sbgld4Qik1o/kmI6//TrTVlcE3YCDP15kyq7nBOLfCDTJXudld1Y9VRaMX1CsayO
zrHKzMqWuVUxxMX5zKI9vKN3pDNrmqWzhP2yYD8t4sU4QwRVgmz9pZofof4uPWn5SfNYkPxEqZ5V
IjuS5JKi7DS79hN2AM7yrnjI8mvCijC/t05TKg4FRZOJy3uSFFRS3idU0OI8Xt5Y8yTdp/8uikry
3rLJoQL16ddP/9aIWL5exqzrpLA+0nlsq5BS6yFbLOhvn3/6dyoG1ZMs3jvrekGS63JS97kWUHZA
k1XQHi8sqkdi+oAyKReECchtls0Ki1WLLqyktOZxQW+ZkuSBzNrqInr/zXLB+X/XCea2XqYnkPoE
M3B0r+CTQFqwpwE9s0Ouag28ktSjnMQlucxKOhoqsXdsPWq/ntb6Dyp908WSCYr15uCyvtLcQB85
Yad01YtY9e18v251ilLn3JzVCTysMxYvCmy6Ax6k1TmEqT5sia/YWKtTl3qHLNn9H7RVG8OXtgd9
ic/06b5qn3XS6h+k1ZsW0Xk+7Zxxf0uQyRad6tMLaYBTffAGp/pI+RHW+JDjccG1wIKdLSNv0gaV
KrXxjMGnp1fH3uL7mFRWtrgqO6XWw1atQEX4Sbfj5l6bB+dMHLWgVjTuwPlSx93qHrAMWWUfU2Dv
B+CeBRaUmm8GaSs+nkuqO6phgGpdo8q4eojU12jRav0NyFdV2qzk+CBcdZmWBlyA8zFa2QZLGKiQ
3JLKvP+3ZUwtKoWsOqmPzJTM9OhHBnOj4QOu5kaUVG/npj0TB/IFkWrJCDA3ga4oG8zN67y4r77y
BTUZ9UI6M735I/Ozz/PkNkmVpmf8K/350eEkWs2PKIffzg9P44PUREpcuFWRI6BqvNB8gho9uW5+
DgkL9GqvmDlWcq3beLTVjQb4a2zvWeEvWhJo8eerAiB9kRIjrOOHsFV3do7/SZJ+JIv7nEZK1SSw
422ZpwTURQAz0bnbYDo0Nv6spkO04tBOB190AFmQlGhlIw80vCjSnA0F7OckKVvcu6ia4GlkmkUr
Ei2efFECZEVSo0DFCAIU6Ur3OjwP8jJ5Rxb1vp84L9lhf23hCf/bAFcjsypauWhx5SfmOEMipBpY
lYIpgYe4ZVhfZkVdlsl63dZDsX/rY6lDbbTCUnjOzQpMHl4NOY6qhCpSSw5jcFvrMEWvVmheI9DJ
7jK2Ib1i8874RXnxNemRzhNUEuuBIBbL47QYx92dZhdexLmYZ+/Pl+X9cjXXbVAdDldqeo/bXrgN
UhApEY0KSTUctv9Zvmwz+oY+/c9rkreeDnt3ki6rh64czE6bwYelsXa/XizGogGv4HuKp5aKNtFQ
D9NdC+U4oK/TZ1en6QPPqNUtba246LoBrhpr/CtcResyyt+r0sJOAMdeUFqzVt2DM79Fp88Hw2Ti
hjlEIHHZnOkuhkmWJ2yB4B95CFcqHWazxy4I7G8nEiYK+eV1+cDInfjNibpyeVLQVeOhCIrXqhNv
1GokfWci+txQNAn2LQ/1K0DGH9jDVU6nOC/aFeVOg0z62+FwvRHCRBM16aBaBaOwPGMcnI4HsqAG
5ap4vLvO2kXcXpPSYPj3NmRo4qlbxUIAWzCQcI3DJtjx8dBLbbQT1W9dMzyB0gs1CufaB61N9LV4
8mRfKEgJ22q7urxg4oostBGiz6mAl4Qt5L1b5h9T2nbVdXmFl7dRtC6fD03jvpoPWXKvnQ+e4AsF
O2VttUJQR7Rj0WgymNEY7IGt7Ug9GcLLu58MTY9gNRmyTF47Ge1B13ANYKTGjOuJCl0QMpqNJrRO
cyScEektO5+VSKO2sD8rsvxeOys8xxfB5jlStMxNaSZzHtzxwfDIqU9HZCdgUxuN6D9dcem0YKaO
STHNkyr4GM1Dpz5YdpPhDGhUIfZnQJbSa2eAp/Ui2AiHqseCCj0jo++C1Ck8klaLiG098ah59/Jv
bLJlCcAWfZ4EjGCTHajFgY4nJwTSRZ+vmY1kGA1X1aA7DqmH9O7PJM9aD38rJbryaTK25LJ8YjtN
bU4xElTcq1kPMfMKXrMiJJgoltGulgnEMyW9ZThVhuAbW25pAnKFPg/ihqRNHH3Vg7fF2RIj9IeA
NumRYbMwnWL++63MG9IhjBrMmyzBpZCMaW6rMuRH2WJ5l/IuOdtMryEblgwogYFsaQKDXV5lYNel
MrgzEkTbT2WgIfMTt9RqXwH1lerjoDt9lDlM2l9FxwcSO7XymwzF2dhU70yavc2Smv08CRJQsoLS
7Mil2WmlGalJ8y7kOACWEASHRAzW9T3RXizkBJP1QruOp/u4rpY/jJclYRW8RWml7IB5qyizPE1I
Xp+vU7flpMyWVet1nP9TUyifFNZ9nJf0p1aapU+mcTolC5agrarSWRP9Gf0Va/onBa5v3ScafkHm
hnxXX1C0zTI4JNh6C35BSP4FofYLwgpfEDukcPtf0JAJq2YECVSWuJFrTzDE3YyQM/h+Bh8HK+5P
yzhPbmraupqd+Xmc300qEqGWnbnXpJPdRo4guy1aSB2YOByBrNSuFwxGNjZel2xcN2dZL0E5aNSI
OdcM2/y7YEsW2ytBRIJqYfC7EFeE88vNd+EqfBfeRMKfUXXT6LsQJMCr1RE1GWKkW7AMjewLsH0w
z4riql23k6RbVe7cnrwNPzMfhslTi2YFn5njeFgBo8/7pQ08qSHBWF0apHLUL8I+NOgI8Ds+n95s
zRtUSuaplOYxVkTYGLADyGTDqom1mhx1Z2CMvKz2WGpe5nZ4wIWdaUkl70G1EBgJCI9BLenKteSq
nsf7zbyHIZ9YT0uqBZOuL9CSVK//R9GSCDzdz1dTFsKvyvvH/aqQku+hWt6NBEcHgF+VJ/+qvPar
8td/VR7aie8h4C2rC03U0vl+RD1zHxAbGvHKYlsBa8bJ0dHZ1Vl+VRnV5o/2rFjomlnwqENs1heV
XQWPrOBqe4XvCMHVjaCg+nJB9VtBDdYLauhOJBxgVTeNBBVi5azFVMVjCIOASiPMpIwdxojjiAnQ
lLIw9TFyxXS+XMw+/Z3qtNs4vW23lf/f/2U5+No6uC4myDrLJ45tJZM3E+o5sSbPen1R/mippFa2
8hqzT0aHqq0vtLv6ZLBS/l11bwMSlHBBlZTNRrArRpbNqnf7NZVskwRUUxkNSyqZ29zUVDZP/K5+
4mqHWeVag9WW3RJKCQw/fCevovyhhlS1zBIxnriqcBSvqRm8oEZ+Sk4+3Oe95np3PGk+H7Vy2q6H
g3nh6vpSv24PehdM+8AjMkb9VvXBU6nJ6wExuGbaEx5EMctb9cTXqmXrdml8k3m3eIqGbWSvuhVo
VXV1u1XzIoxriOv2hkiDEw20JAqG/eZBE9sTUPU71K5/0u57+7SJhTbtP3dPGWdc1f/IoCpIYwSd
J5l3mrsqLJVRqU2Q3WpURdPtZv+ieVe4CWD1WFVXHN1KEw3w+GPMu8srPBCrDKv6i7QLLrTldbXN
c420HizLjJrOu7iszSjqNim98EdSHi1zFj4/1uz/6xHh5sltzJMPmifzIgYNuOqffKsEqpQRRg1e
53PAy62vy10c0PquWU3XFrnO8zbXkQ633m5jvX3Qeg+yuuM+1zdsw+o43Iq7jRX3QSuuklDShrZ6
6JP2oVsZDrf+bmP9fdD6wxF+dwBfsVZ2Dsj31lffWuy2pm+83binLNaQebvqpGhIwO0OBdjyRJCn
tTYrrW7Q3RiJXLhGzVPkIZJUNmB59segblmlbFl/bx/yNMPadSGtQjgLhLKeJJSVL4/2/G4Bxxkk
lPKkj6+zMBpukRoLeXDBmK96YJa0bBJpS6TxLlO9skdYNDVrxDTrDQVkXP6Gx2nV5cH6SIu91fXV
wVtB22jztHI9nCcoxlbcViU8xxWZoT2MnKAtC9vbsQADbrSrWrl8yhPYNrV6AfkuBX28hbHj2k0K
O92jAE6Mb2QSlet3fHgp11M7OcEP0cTrlgSDe6iCiduUBKOqgpiVb37xroivuXlqXUWAmSviS1ZM
5W/spdJ89ZXSQOqKBDrVBzJPBBiqpORZvjDcy7r56qXOoXSooc6SsOZQJcuL8qXFXq7OF3ykjLdl
zO7fae4xLqyWE6XsMGwpEeCH4Q/cns/pQ6uLWIXUEPvCvYTMTkhOjYAIYugbyoKUH/nhdJeZdUis
hhSGtNv7h836mibYctAz8CwDWMOHmxPFKGD6WzLFoMBIhW/MFCM9UYYntwO9Qzn6W8yaTzZUTFFA
B3A42wwTWXU1VLmCN44Tg2ExmIqIjWRH6DMo3GkgdkYsiurfs6D2VpH0BHkIBjuITLC+zcl0nsfX
16RsS4P6bZsHg4ERjaJyMBhAta/VmbbrtxOJIkE/QLqEZL+z4mXBIaz/MIDKiBlROYwLbVGJ2maB
s+cOa4V1ZO/ltByKXtW0ueSFRuSIysHXkIupkTylAtFAUEJVpSD0JI+fwVtQ4OKyxXLYbACfEb3v
BjGUfGN+f7k2hGVWaIEdwAIrcJONaBXbx23P/opomxTztI7tCLj8jTy8qrrnJiekylvZPZavbvOI
5XSnCS5dxqaNlxbW8BT0V8pDeJFHKIzgIW22uTTKDlrUlsYQlkbBeshnlUYHlkbns0ujkZ3eXBql
rLNtYUEEWyChNGJIGhXIDnyBNG5zVVXAD1WdhrSBNCJ7vZldJ4wIFkb0uYVRlydqW8IopVRtK0QE
TF5CYXQhYVTgKojCUYarfeIWxVEQKldbpxRX+rHvTvxtq8juylOn4TNL4pZDZ1VJlBaZtJVBEZwy
E0qiB0ki7p1jBQuc7BxybYEbLHVWjOeCzDFAv+5o0q/v6lzOalwd9nbEqKOUz+bsTPXGsiKt/WjL
rgSskEJZ8SFZEZd7/ETI/duknJ9VaA+T9a4/CWHJkmwH0pUsbEOnJDgC0RoeRcn2N3p6h++qHD4E
nkpZkbJUR0um1vslFdbUOjs9en7JDlKcsXMhX1tzkt+SqvKevSMhFn1ecc+SCe3N7Gcv80+/VkV6
H3NySxZp9wTJOXvJfZ7NltOysN6z0y7TrLTu4nR5E0/LZU5m7IXlnFgnyzy7J3FqvU5pZxUPjdzg
+dqKGNtmp0Io5jCxDZ0JUR2XsolWwpXY/8aKCdvYSDFtvOzgSFeCHZ93TzPtEUCKSWHx1wndSQAr
oWCbSkhQN6VIfyk6xJCdUYfRxNV1pfgRhq1r32nYpeeE7Z2eNoGHjFscZjWOVynMjrsG577S/5Iw
3/JJFP11CWzDNVN4C5gH/0ii7Ritj6uuaeAhFRZfH1fLD7hIVHPgONsQ7upkvdP03eLntxflZSdG
G18wQNYo8Fdd3sCOgG5SrcpyDbIm2rnCbASiKXhGBcGqlDFYwEQlOGFGEzyT77+odrv38gTdJgMA
jUyWKjsIHjI1NRBFakuVwmVyxw228V3X5Qbt6eRvDi7FNP4Ktxqgb2S8VCkvsCM4LGHDIoUafRPx
BVCECo+gG/TBRUYmS5UcAQv4lwRpexBc6GzTwFCtrimy2VplDUZG9krM064aWUkLTx2ucJBmojqE
IiuFWtOwmiIosJKwEmkHVkiQqFaMrNZZ72AiLgJXdYu2ZcnRTgu2MBIUbCkGT/LPdUMchx/laDdy
w3Sz5jYDzHda04WRYA1aUAivlxfYEPPfLJBCWy4OU1WfsNMg48JZw4PTU1S4YazAIE0Ex7ZoHNfu
1ubhNc0dzL2PHDdkFRgkfxAXPXf70+Mq+LLJCHofG26ILzBI8yDfu9Md/yZEJr2QntMiYZAYQbZz
cbx1/0tk2uhF2ZyDCYMMCsNNhFskbOmFq5yFCYOsCZL9dN0OGZOx9AI/TsOEQcYDleLwbp+eGH+O
0s7yOImTM2GQ5KhfSd3tVv+KSQ94MMFpljBIU9QrqB1/Hfzy7zbBgpdkYs6Y5ILkQ6MCwhGlWPei
UUe4TeEsSC5oU0a1Y+KOOIYd4WaFcyC5oFkZ1Q2JO4IMO8J1PCc3ckEd3ykYGXXBXLfwwgvMeYRc
UJ933CfIupuOnOtXzrLjwgw14/xstxPAZaPOcDXL6XJcUM12oqJRJzZ4OVesnBnHBRVrLz/YfX3v
glEHuLLkXDYuzAinklIbq7D6Z1b7O4v+8AtztByuq91GV7ugrpakuHSGbT2x+M++kPEjbiBcTqkH
Gggle/6lDY2bHK8xOR5octbG6RqcU6PffilQcKPnNUbPsZv/KdHHXbyl3X5BkqKkSt+AhOvirUUf
YPEnGDk0MkorcTTdi10EVfIQ8W01oKPsjqUGakEfUN92OG671LfcjLL2mvv2LJs01Lf0XyuCW6d/
X0tQ1ry6xfI5tfOsUglgw704f3V5evbj18fZdMn6abFB7dO37HO60G9gMHsxjgenViFQmKH9czxf
VP1ZkeTnJC5JZQiL6p7LQ+o4x7d/JsmCNAJAFaB1GBeNVOyLbxp4/xTpoEMF/CbOOz359GvTFWAe
UCPeHVJvJAXxrCLo/wZO/fwgoxbuZUwE53rUs9jFsm5BYkqI1Q00Qk7L8/TkgeSPL+NbAtQDbXHH
MR7SJdUnwKmUHvqSM9GlldP9tN6g0PDn9xflxKrFxbq4Jx+Tm+RdXGcy6iSf5A79TJ4ZPZJyxnpI
j1QhGMHVeYNtiR7ar6kihjs8bXffqq+oQvyG5GWTCz3MyjLrH+vTcO2M6tOHE0M/wgb1UTK1fmqH
tKf+ZvntBtOy24KgIYlSPS3weozitLCt97/htNyRomAJ2FsaqM0WVG1ozNH4t/oTZkaupFxaNCRX
qicMXvYZTJhjwxNm/3bT9TvlyfmdyVRsuRZJdXFCJbkv2kfLCHDGVrPTjMA1XtkOuP6Pt2cwfcFy
rq2xCAnu3Gd6XXvHEfWimmBt4GVxMRLfYCBZu13e9QXLu4rHBQqRrVSzCbLMh5XgCl42QHW3C7g+
SMphwx/iWHcaeXgyCijq4cazi5J6ubdP96yJxQHt3mIA4m+zIivdeMlnINA4sy4SRgj8cufM6N3Q
J2MBz5Vjq1VM/iNrODOiK2UNF8B1vI6tRhL5eTQcWqPiJAwHYlyNSnyVdVwgoO1Q3Ae8gZ4DUX05
lQkrdNUAUaPAdQOFZwH8izhYy7+owjqPBfmG9fyLGGJz624MDkC3sP3xFpUmXKbrOIrMbWKlKSfm
/RK0ZrhT3kUcig5J3bAEutKaRtB+LrUZbpl3caA2Qwy5ho7S2fUSlbkO0s/tG4ZGxmdj31DlaAMc
wlGjqNQZQ9xZbpd7AyZCwFskycKhIE5zFK3tBqpuXUXo51V7RoGbutoTVN4qnmC7idpTgPmzqUCj
wE5ZBUYg9YKjmlk0U4HSBZBqaa1XjL/u6B8FXQRvlttW4XDULDMH4Iq75JvsLi0rrxJudY29ThD2
z5BqFtqrM0r5W5VKl6OmtCsAa8yECSU1FFYLql9MnUH7ETVVZQFYXiBWFr/1wLcy+TyGiZpagQAs
rRNFhWoQmBWFrq+hgNRCrxhZsMQClQs0qqpfOBF4wHI+v1NtIR+rLORbb5+fvDpp/np6dH52cfm1
883G6/uCJUEoc4eRNHOHFXjTHBtPtumnDQmrugxpirGT4+GJK9h+Zrv2xGdcMboB1MPVdZYui1lc
Lu+4oeu16XsJkdF6sbIrFonPaVehGHZ8ZxKKDlSwfYqwhaUboUZOAiNZuiac8OjpXvu3NnSubRS8
qzpYrg2t3NYkfWq84JEnws7Whu2ksN59+vc0JalVJNO5dZKWt2RR3iUptQM0uKTt8fKmWgev+KwO
mUw+kJwk6XXMbrAeslZkt/MwgwkzSgpsOfPn2mvP01FZEHYFa3ughsVyDYt768Kf8XA/d0id1JFx
lWW2yBYHEo5eLuX3v7esi6pK/IbKGbESKp5UNdxRmSum8/imXFBJZR4fK0Dk57GwH53SPsZPWAnk
MmWiVizv7xePVnZj3WbZrGXTV7nVQKI/N6M0LNFrc9kqq32uQK2BEu3KJdrtrfatk2hWzLJFmRab
PBW9LZNp5EwcTammYndGJbe0kjsqfwuKo1VvhqCalLSVxpNGnH9vXcYfLLZjxyIf7rO8tAqSP1CP
f7KSY8k9+gJsRqy0bQF21p62qrIY4wpcQ1CA5WcAY61DgLcswEPOpI4Aq9RfSpUynuCN1PLBsrhZ
zvMFV8OTVg8PhHLSVbyjawaCapQK37qgrj2gTiV37goSoaCgys8FxnoHA29ZUKEa4VpQVVZiHOx4
ohiNyao3ibSV7SuKRV4Q62geU+/BetIIL3UhlotZWv2D+hLUq13t8ijI3f3Np1+p25sXbN/TsswW
yd+WyazqT6uYt/7krkbf/sMNvrAtR6KGX1i0jdMuXaReuYTFexv4ZfXzLh201YomV0DzVLvoikcV
YxEPDzss0Qr1j++bTnukWc2f+hJnxuWkmvtwkdCO2irqiWonoW5aB9pAM72h3yiVujgvK3VyMU/u
75P0tqXW4X8bQLjT8iQXCcqTkGISTi569RU94etSidTB4OHqIE74ogGqWy5RGvipCLSbaFOhXA/n
QCxriK4J2/vLQ+pjskjYBi6KaH5XrIDttRogamRcVGlGXSSoYRKYAUBOBUepVXKqfyrdRwpq+aE9
ka75Ux82bBSeqRKMuhhOcSodtCsRRD3lyHZqMn+mL4cv48d6r2hXDPuNBnAaGRwx3aiZi4PXJiDh
N25p0dvlbEEBSCDRX+PorvL1r2zAlOVypqAAZJFo/Yvenn3eaPJebs44LVAAkkcITEu3F23zZFtE
VS5n/wlg7h2uSXrEP7xxy4uqkNh1aZVcDCfQhIuqaLiqGkKbpNtb1ZZV3d9uWdUVnEEOhhXyo+XZ
5W6t7/ZCBhcsDBIwk6pvjEZalIegpxHPclIUpOcDWwezqnXoC7ft+lre3fLBJWZanrElbWGZyYXn
DZQ4+RYcHOksM213Z47rCvYeIrUdcht4GwBrCFksrsrsaFmU2R3Jz7IeXUxdWnP14rotZVO/f5fU
na670z2MriuojUWKu0NFNYVmHrQK5jrzs+u52fJOSEOVE25lHdBVN3L9gwZHKqfizx3v+sPb3L/i
eoIDyZFatXEQbFVwa0t3kB7M8vag2V6bvnB5Oz2Iy/UQiJ/iUb1y+JB+drEDVggAKNkQLwbQ6Axy
5SSZB9s2xdNl1wCof5RnB6wAAFBy8pYYQCPTo5wP8wSmB28FQXsTBH0AQckSmhhBIwOhnP/yBDsu
sFr+S46g42+CoAcgKDncVIyg0XYK5VSYL7IialvH1yCov1evg5YLICg5j1iIoG9kR1QP23F92I44
SG2LuBzBjewIBgCUBDdiAI3siOp5Oa6InwWp7U6TA7iRHUEAgAZbolwzGhbxmThmbjJjazGpNtpW
/tVvMn4hTPOpHG2uo7fsbRKpqB2PDl5enp6ffd3cTd/0pMws/irGxFhf+Waz9K7fUNSG4G4itXBN
a3DrxrNZ1thvGGdDcJNQ3+EfJ4urK//d+ctmWeKgoYYNwT06fZ9Z1IfQsA/cyQiazXIhyILddztF
fQgM+8DNdNBsVAvBtYu+4ybqg2/YB27ogmbTWAiuXvRdH1EfPMM+cFsR8IQ6uJLRdx5EfXAN+xDx
PjSrOCG4ctG3v6I+YMM+8PMC3KBZ0olAOui+DRN1Aul2Yv1Sytjoi6yHxHL0rEbQWA1Q8F8m1enf
V8+S/I6ks7gkaX+4nQuT5matMff0e9Dod/hwjYvzF9ltptaV5mCNi3OL/cZAWfcUdRANSKNBmTjK
7u7j9JH90e9Yc+E0vcl09XVPV4f2oBugnW/e1i5/iHqC/vKt9dW+9ZX1rdVtdv9CG2jrsF1TsfQU
fDgk3QYVffO2l/NsyKve7Yemku0p+RAN+gHKfPO2Z/EHcS80zU1PzYd40AtQ3Ju3vTm4fEVuzzJx
VzStb0/bh+6gK6DWb962ph+RQT+4xg+9QT9Azc8hyfKirPLFwo/MNuhLq/lDv98ZR/a1H7x6I+mH
ydfOD4pxw2DQD+nnflcWtyRnO0Ik/dE0SL3zYtwwHPQH9MKb9709OTlZIzCOpo3uHRrjhgOd7IBO
NNcpWVHexNO5pDOaTkvvEBk3GmpmGTTPaQxxX/ERCztjomz5oTIu556QeHDFdE6SNM0h12V1TbsH
XM9y1gfwKz4kC3ILVAF127XfzHVr1OpWkHIgzq9eX1xenR73X91t134116Wc7QD+TOu6+3R5R+PH
qweSv7uakeukzAZT0L0y6f7GoGNcuUZcucIcHHTszYvyMSqrK9o+HVenEVen4Af6U3afkPGxQp1m
7Rdz/Rlx/QmGtttLD5hlA3rHkrgR162gZ3SY7CizwR68hcxGPRaumSOumUHv6jyfbXME1eM26naj
wz2b63DQHav9sKQo8yoDSgfw5t2rnwYfDG3pUJR079+ohx7vIXejQc1+vsybWkbaOUUN02C4zK3m
pxv10+f95G42qP/HE3/yoaQ6Jl7wc1xo/wHx+BMdhJGI8Mdb7Tkx7SC/pXHOt4qPYe9nA6yPqTEG
KeAgNZYKgZaKOSxJeksvkG19Kc0j2cvMex/y3jfGDoHG7phcjzOGdaNRuIIi/trGlCHQlNVvCMDX
mgRs2OavbUwYEhxCez3OCzavNYlWscNf2xgwBBqw+g0e+FoT/xEj/trGFiHQFtVvcMHXmvjQGPPX
NmYDgWajfgMGX2sSR2Cu9p1G7SNQ7ddvQOBrTYIpzHW50+hyJKgYvx6n/ZvXmsSUmKtmp1HNCFTN
BTuxd3DAYt2k/EJRBhOqHRpnLoerZP07+s/oZg691db2Mrv/Oc5vk5T9cljncdm92F23XJWn2qtR
dXOAntMuol5XJ5OIX3I4uL7mPd0x/nBMiuQ2Jfl5hXPB382+8nn2/qTa5f42zlOqyIvBLPxwfv1X
Mi0vqF2nwWV3CI5VX6q7d0we2NSSopj8Qr2TV4Q9s5hcELZom3ys3JVJ71ksJt23BL97cNwJFaqq
o01RSFX2+D/YTf989vrFiz2rfvHFY0E7M2FiN2lkb4XBsPM/fNd5yYv4MVuWvIck/5f/Dw==</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="Lieferscheinnr">
          <DataField>Lieferscheinnr</DataField>
        </Field>
        <Field Name="Belegdatum">
          <DataField>Belegdatum</DataField>
        </Field>
        <Field Name="Var_UST_ID">
          <DataField>Var_UST_ID</DataField>
        </Field>
        <Field Name="Steuernummer_verk_debitor">
          <DataField>Steuernummer_verk_debitor</DataField>
        </Field>
        <Field Name="Var_Steuernr">
          <DataField>Var_Steuernr</DataField>
        </Field>
        <Field Name="KopieText">
          <DataField>KopieText</DataField>
        </Field>
        <Field Name="No_SalesInvoiceHeader">
          <DataField>No_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesInvoiceHeader">
          <DataField>Bill_toCustomerNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="OrderNo_SalesInvoiceHeader">
          <DataField>OrderNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="VATRegistrationNo_VkRK">
          <DataField>VATRegistrationNo_VkRK</DataField>
        </Field>
        <Field Name="OurAccountNo_verk_debitor">
          <DataField>OurAccountNo_verk_debitor</DataField>
        </Field>
        <Field Name="SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour">
          <DataField>SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour</DataField>
        </Field>
        <Field Name="PostingDate_SalesInvoiceHeader">
          <DataField>PostingDate_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="seite">
          <DataField>seite</DataField>
        </Field>
        <Field Name="waehrungs_text">
          <DataField>waehrungs_text</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmount">
          <DataField>Amount_InvDiscountAmount</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmountFormat">
          <DataField>Amount_InvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description_SalesInvoiceLine">
          <DataField>Description_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLine">
          <DataField>UnitPrice_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLineFormat">
          <DataField>UnitPrice_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="einheiten_text">
          <DataField>einheiten_text</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine">
          <DataField>Quantity_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLineFormat">
          <DataField>Quantity_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="InvDiscountAmount_SalesInvoiceLine">
          <DataField>InvDiscountAmount_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="InvDiscountAmount_SalesInvoiceLineFormat">
          <DataField>InvDiscountAmount_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="grechrabbetr">
          <DataField>grechrabbetr</DataField>
        </Field>
        <Field Name="grechrabbetrFormat">
          <DataField>grechrabbetrFormat</DataField>
        </Field>
        <Field Name="grechrabPct">
          <DataField>grechrabPct</DataField>
        </Field>
        <Field Name="grechrabPctFormat">
          <DataField>grechrabPctFormat</DataField>
        </Field>
        <Field Name="lead_free_text0">
          <DataField>lead_free_text0</DataField>
        </Field>
        <Field Name="lead_free_text1">
          <DataField>lead_free_text1</DataField>
        </Field>
        <Field Name="lead_free_text2">
          <DataField>lead_free_text2</DataField>
        </Field>
        <Field Name="lead_text">
          <DataField>lead_text</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="steuer_text">
          <DataField>steuer_text</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_SalesInvoiceLine">
          <DataField>AmountIncludingVAT_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_SalesInvoiceLineFormat">
          <DataField>AmountIncludingVAT_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_Amount">
          <DataField>AmountIncludingVAT_Amount</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_AmountFormat">
          <DataField>AmountIncludingVAT_AmountFormat</DataField>
        </Field>
        <Field Name="Amount_SalesInvoiceLine">
          <DataField>Amount_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Amount_SalesInvoiceLineFormat">
          <DataField>Amount_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="SalesInvoiceLineGetCurrencyCode">
          <DataField>SalesInvoiceLineGetCurrencyCode</DataField>
        </Field>
        <Field Name="SalesInvoiceLineSWalsLeistung">
          <DataField>SalesInvoiceLineSWalsLeistung</DataField>
        </Field>
        <Field Name="v_reverse">
          <DataField>v_reverse</DataField>
        </Field>
        <Field Name="lead_symbol">
          <DataField>lead_symbol</DataField>
        </Field>
        <Field Name="vUrsprungsland">
          <DataField>vUrsprungsland</DataField>
        </Field>
        <Field Name="Herstellerkurzname_Item">
          <DataField>Herstellerkurzname_Item</DataField>
        </Field>
        <Field Name="LineNo_SalesInvoiceLine">
          <DataField>LineNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesInvoiceLine">
          <DataField>Artikelnr2_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Description_SalesInvoiceLine3">
          <DataField>Description_SalesInvoiceLine3</DataField>
        </Field>
        <Field Name="einheiten_text2">
          <DataField>einheiten_text2</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine2">
          <DataField>Quantity_SalesInvoiceLine2</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine2Format">
          <DataField>Quantity_SalesInvoiceLine2Format</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLine2">
          <DataField>UnitPrice_SalesInvoiceLine2</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLine2Format">
          <DataField>UnitPrice_SalesInvoiceLine2Format</DataField>
        </Field>
        <Field Name="SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmount">
          <DataField>SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmount</DataField>
        </Field>
        <Field Name="SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmountFormat">
          <DataField>SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description2_SalesInvoiceLine">
          <DataField>Description2_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="TariffNo_Item">
          <DataField>TariffNo_Item</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesInvoiceLine">
          <DataField>Cross_ReferenceNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="ECCN_Nr__ItemECCN_Nr">
          <DataField>ECCN_Nr__ItemECCN_Nr</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile2">
          <DataField>VATBase_MWSTBetragZeile2</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile2Format">
          <DataField>VATBase_MWSTBetragZeile2Format</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="v_bonusdatum">
          <DataField>v_bonusdatum</DataField>
        </Field>
        <Field Name="Account">
          <DataField>Account</DataField>
        </Field>
        <Field Name="Description_LieferBed">
          <DataField>Description_LieferBed</DataField>
        </Field>
        <Field Name="gzbedtx">
          <DataField>gzbedtx</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesInvoiceHeader_Lbl">
          <DataField>Sell_toCustomerNo_SalesInvoiceHeader_Lbl</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesInvoiceHeader">
          <DataField>Sell_toCustomerNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

