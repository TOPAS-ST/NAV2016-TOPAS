OBJECT Report 50163 Memos nach Linien
{
  OBJECT-PROPERTIES
  {
    Date=15.05.17;
    Time=13:23:33;
    Modified=Yes;
    Version List=TOPAS,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  Anlagename:='';
                  Memodatumfilter:='';
                  Anlagedatumfilter:='';
                  QBRFilter:='';
                  IF vVerfasser <> '' THEN BEGIN
                    VerkTab.SETFILTER(VerkTab.Code,vVerfasser);
                    IF VerkTab.FINDFIRST THEN BEGIN
                      Anlagename:=VerkTab."First name"+' ' +VerkTab.Name;
                    END;
                  END;
                  IF (vMemoStartdatum <> 0D) OR (vMemoEnddatum <> 0D) THEN
                    Memodatumfilter := FORMAT(vMemoStartdatum) + '..' + FORMAT(vMemoEnddatum);
                  IF (vAnlageStartdatum <> 0D) OR (vAnlageEnddatum <> 0D) THEN
                    Anlagedatumfilter := FORMAT(vAnlageStartdatum) + '..' + FORMAT(vAnlageEnddatum);
                  IF vQBR= TRUE THEN
                    QBRFilter :='QBR=ja';
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50002;
               DataItemTableView=SORTING(Linienkrzel,Projektnr.-Verb.)
                                 ORDER(Ascending);
               OnPreDataItem=BEGIN
                               IF vLinienkrzel <>'' THEN
                               Linienauswahl.SETFILTER(Linienauswahl.Linienkrzel,vLinienkrzel);
                             END;
                              }

    { 2   ;1   ;Column  ;QBRFilter           ;
               SourceExpr=QBRFilter }

    { 3   ;1   ;Column  ;Anlagedatumfilter   ;
               SourceExpr=Anlagedatumfilter }

    { 4   ;1   ;Column  ;Memodatumfilter     ;
               SourceExpr=Memodatumfilter }

    { 5   ;1   ;Column  ;TODAY_0_4           ;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 6   ;1   ;Column  ;Anlagename          ;
               SourceExpr=Anlagename }

    { 7   ;1   ;Column  ;ReportForNavPageNo  ;
               SourceExpr=ReportForNav.PageNo }

    { 8   ;1   ;Column  ;USERID              ;
               SourceExpr=USERID }

    { 9   ;1   ;DataItem;                    ;
               DataItemTable=Table50003;
               DataItemTableView=SORTING(Kampagnennr.,Memonr.,Anlagedatum)
                                 ORDER(Ascending);
               PrintOnlyIfDetail=No;
               OnPreDataItem=BEGIN
                               IF (vMemoStartdatum<>0D) AND (vMemoEnddatum=0D) THEN
                                 Memokopf.SETFILTER(Memokopf.Memodatum,'>=%1',vMemoStartdatum);
                               IF (vMemoStartdatum<>0D) AND (vMemoEnddatum<>0D) THEN
                                 Memokopf.SETFILTER(Memokopf.Memodatum,'>=%1&<=%2',vMemoStartdatum,vMemoEnddatum);
                               IF (vMemoStartdatum=0D) AND (vMemoEnddatum<>0D) THEN
                                 Memokopf.SETFILTER(Memokopf.Memodatum,'<=%1',vMemoEnddatum);
                               IF (vAnlageStartdatum<>0D) AND (vAnlageEnddatum=0D) THEN
                                 Memokopf.SETFILTER(Memokopf.Anlagedatum,'>=%1',vAnlageStartdatum);
                               IF (vAnlageStartdatum<>0D) AND (vAnlageEnddatum<>0D) THEN
                                 Memokopf.SETFILTER(Memokopf.Anlagedatum,'>=%1&<=%2',vAnlageStartdatum,vAnlageEnddatum);
                               IF (vAnlageStartdatum=0D) AND (vAnlageEnddatum<>0D) THEN
                                 Memokopf.SETFILTER(Memokopf.Anlagedatum,'<=%1',vAnlageEnddatum);
                               IF vVerfasser <> '' THEN
                               Memokopf.SETFILTER(Memokopf."Angelegt von",vVerfasser);
                               IF vQBR = TRUE THEN
                               Memokopf.SETFILTER(Memokopf.QBR,'%1',vQBR);
                             END;

               DataItemLink=Memonr.=FIELD(Memonr.) }

    { 10  ;2   ;Column  ;Projektklasse       ;
               SourceExpr=Projektklasse }

    { 11  ;2   ;Column  ;Projektstatus       ;
               SourceExpr=Projektstatus }

    { 12  ;2   ;Column  ;Kontakt_Verkaufer   ;
               SourceExpr=Kontakt_Verk„ufer }

    { 13  ;2   ;Column  ;Memodatum_Memokopf  ;
               SourceExpr=Memodatum }

    { 14  ;2   ;Column  ;Kontakt_Betreuer    ;
               SourceExpr=Kontakt_Betreuer }

    { 15  ;2   ;Column  ;Kontakt_Ort         ;
               SourceExpr=Kontakt_Ort }

    { 16  ;2   ;Column  ;Projektnr           ;
               SourceExpr="Projektnr." }

    { 17  ;2   ;Column  ;Kontakt_PLZ         ;
               SourceExpr=Kontakt_PLZ }

    { 18  ;2   ;Column  ;Projektname         ;
               SourceExpr=Projektname }

    { 19  ;2   ;Column  ;Kontaktname         ;
               SourceExpr=Kontaktname }

    { 20  ;2   ;Column  ;Statustext          ;
               SourceExpr=Statustext }

    { 21  ;2   ;Column  ;vLinientext         ;
               SourceExpr=vLinientext }

    { 22  ;2   ;Column  ;Kontaktart_Memokopf ;
               SourceExpr=Kontaktart }

    { 23  ;2   ;Column  ;Memokurztext_Memokopf;
               SourceExpr=Memokurztext }

    { 24  ;2   ;DataItem;                    ;
               DataItemTable=Table50005;
               DataItemTableView=SORTING(Kontakt Mandantennr.,Kontaktnr.,Kampagnennr.,Memonr.)
                                 WHERE(Kampagnennr.=FILTER(=''));
               PrintOnlyIfDetail=No;
               DataItemLink=Memonr.=FIELD(Memonr.) }

    { 25  ;3   ;Column  ;Mandantenname_AnsprechpartnerAuswahl;
               SourceExpr=Mandantenname;
               AutoCalcField=Yes }

    { 26  ;3   ;Column  ;Kontaktname_AnsprechpartnerAuswahl;
               SourceExpr=Kontaktname;
               AutoCalcField=Yes }

    { 27  ;3   ;Column  ;Kontaktnr_AnsprechpartnerAuswahl;
               SourceExpr="Kontaktnr." }

    { 28  ;2   ;DataItem;                    ;
               DataItemTable=Table50004;
               DataItemTableView=SORTING(Memonr.,Zeilennr.);
               PrintOnlyIfDetail=No;
               DataItemLink=Memonr.=FIELD(Memonr.) }

    { 29  ;3   ;Column  ;Bemerkung_Memozeile ;
               SourceExpr=Bemerkung }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140005;2;Field     ;
                  CaptionML=DEU=Herstellercode;
                  SourceExpr=vLinienkrzel;
                  OnLookup=BEGIN
                             Hersteller2.RESET;
                             IF PAGE.RUNMODAL(5728,Hersteller2) = ACTION::LookupOK THEN
                             BEGIN
                                vLinienkrzel:=Hersteller2.Code;
                             END;
                           END;
                            }

      { 1140006;2;Field     ;
                  CaptionML=DEU=Memodatum von;
                  SourceExpr=vMemoStartdatum }

      { 1140012;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=vMemoEnddatum }

      { 1140007;2;Field     ;
                  CaptionML=DEU=Anlagedatum von;
                  SourceExpr=vAnlageStartdatum }

      { 1140013;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=vAnlageEnddatum }

      { 1140008;2;Field     ;
                  CaptionML=DEU=Verfasser;
                  SourceExpr=vVerfasser }

      { 1140010;2;Field     ;
                  CaptionML=DEU=QBR;
                  SourceExpr=vQBR }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Anlagename@1140001 : Text[50];
      VerkTab@1140003 : Record 13;
      Proj@1140004 : Record 5071;
      Cont@1140005 : Record 5050;
      vLinientext@1140006 : Text[80];
      Hersteller@1140007 : Record 5720;
      Hersteller2@1140013 : Record 5720;
      Linien@1140008 : Record 50002;
      RecBeteiligt@1140009 : Record 50005;
      Kontaktname@1140010 : Text[50];
      Kontakt_PLZ@1140011 : Text[30];
      Kontakt_Ort@1140012 : Text[30];
      Kontakt_Betreuer@1140014 : Code[20];
      Kontakt_Verk„ufer@1140015 : Code[20];
      Projektname@1140016 : Text[50];
      "Projektnr."@1140017 : Code[20];
      Projektstatus@1140018 : Text[30];
      Projektklasse@1140019 : Text[30];
      Statustext@1140020 : Text[150];
      vLinienkrzel@1140021 : Code[10];
      vMemoStartdatum@1140022 : Date;
      vMemoEnddatum@1140000 : Date;
      vAnlageStartdatum@1140023 : Date;
      vAnlageEnddatum@1140002 : Date;
      vVerfasser@1140024 : Code[20];
      vQBR@1140025 : Boolean;
      QBRFilter@1140026 : Text[250];
      Memodatumfilter@1140027 : Text[250];
      Anlagedatumfilter@1140028 : Text[250];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionMemokopf_Body2@5049(VAR Memokopf@1000000000 : Record 50003);
    BEGIN
      WITH Memokopf DO BEGIN
        //Anzeige des entsprechenden Projektes auf dem Berichtsausdruck
        Statustext:='';
        Proj.RESET;
        IF Memokopf."Kampagnennr."<>'' THEN BEGIN
          Proj.SETFILTER(Proj."No.",Memokopf."Kampagnennr.");
          IF Proj.FINDFIRST THEN BEGIN
            Projektname:=Proj.Description;
            "Projektnr.":=Proj."No.";
            Projektstatus:=Proj.Projektstatus;
            Projektklasse:=Proj.Projektklasse;
          END
          ELSE
          BEGIN
            Projektname:='';
            "Projektnr.":='';
            Projektstatus:='';
            Projektklasse:='';
            Statustext:='Projekt existiert nicht mehr';
          END;
        END;
        RecBeteiligt.RESET;
        Cont.RESET;
        IF Memokopf."Kampagnennr."<>'' THEN BEGIN
        RecBeteiligt.SETFILTER(RecBeteiligt."Kampagnennr.",Proj."No.");
        RecBeteiligt.SETFILTER(RecBeteiligt.Fhrungsrolle,'%1',TRUE);
        IF RecBeteiligt.FINDFIRST THEN BEGIN
          Cont.SETFILTER(Cont."No.",RecBeteiligt."Kontakt Mandantennr.");
          IF Cont.FINDFIRST THEN BEGIN
            Kontaktname       := Cont.Name;
            Kontakt_PLZ       := Cont."Post Code";
            Kontakt_Ort       := Cont.City;
            Kontakt_Betreuer  := Cont."Betreuer Innendienst";
            Kontakt_Verk„ufer := Cont."Salesperson Code";
          END
          ELSE
            BEGIN
            END;
        END
        ELSE
        BEGIN
            Kontaktname       := '';
            Kontakt_PLZ       := '';
            Kontakt_Ort       := '';
            Kontakt_Betreuer  := '';
            Kontakt_Verk„ufer := '';
            IF Statustext<>'' THEN
              Statustext:=Statustext+ ', '+'Kein Hauptbeteiligter im Projekt'
            ELSE
              Statustext:='Kein Hauptbeteiligter im Projekt';
        END;
        END
        ELSE
        BEGIN
        IF Memokopf."Mandantennr."<>'' THEN BEGIN
          Cont.SETFILTER(Cont."No.",Memokopf."Mandantennr.");
          IF Cont.FINDFIRST THEN BEGIN
            Kontaktname       := Cont.Name;
            Kontakt_PLZ       := Cont."Post Code";
            Kontakt_Ort       := Cont.City;
            Kontakt_Betreuer  := Cont."Betreuer Innendienst";
            Kontakt_Verk„ufer := Cont."Salesperson Code";
          END
          ELSE
            BEGIN
            END;
          END
          ELSE
            BEGIN
              Kontaktname       := '';
              Kontakt_PLZ       := '';
              Kontakt_Ort       := '';
              Kontakt_Betreuer  := '';
              Kontakt_Verk„ufer := '';
            END;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionMemokopf_Body3@5050(VAR Memokopf@1000000000 : Record 50003);
    BEGIN
      WITH Memokopf DO BEGIN
        vLinientext:='';
        Linien.SETFILTER(Linien."Memonr.",Memokopf."Memonr.");
        IF Linien.FIND('-') THEN
        BEGIN
          REPEAT
            Hersteller.SETFILTER(Hersteller.Code,Linien.Linienkrzel);
            IF Hersteller.FIND('-') THEN
            BEGIN
              vLinientext:=vLinientext+' '+Hersteller.Herstellerkurzname;
            END;
          UNTIL Linien.NEXT=0;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionAnsprechpartnerAuswahl_Body4@5051(VAR "Ansprechpartner Auswahl"@1000000000 : Record 50005);
    BEGIN
      WITH "Ansprechpartner Auswahl" DO BEGIN
        "Ansprechpartner Auswahl".CALCFIELDS(Mandantenname,Kontaktname);
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Memokopf': CASE SectionId OF
          'Body2': OnPreSectionMemokopf_Body2(Memokopf);
          'Body3': OnPreSectionMemokopf_Body3(Memokopf);
        END;
        'AnsprechpartnerAuswahl': CASE SectionId OF
          'Body4': OnPreSectionAnsprechpartnerAuswahl_Body4("Ansprechpartner Auswahl");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>723dd0ef-6d16-43e2-9a8c-9848d052398a</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>4cf0f123-04a6-4534-be61-7852e52bcd5d</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="QBRFilter">
          <DataField>QBRFilter</DataField>
        </Field>
        <Field Name="Anlagedatumfilter">
          <DataField>Anlagedatumfilter</DataField>
        </Field>
        <Field Name="Memodatumfilter">
          <DataField>Memodatumfilter</DataField>
        </Field>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="Anlagename">
          <DataField>Anlagename</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="Projektklasse">
          <DataField>Projektklasse</DataField>
        </Field>
        <Field Name="Projektstatus">
          <DataField>Projektstatus</DataField>
        </Field>
        <Field Name="Kontakt_Verkaufer">
          <DataField>Kontakt_Verkaufer</DataField>
        </Field>
        <Field Name="Memodatum_Memokopf">
          <DataField>Memodatum_Memokopf</DataField>
        </Field>
        <Field Name="Kontakt_Betreuer">
          <DataField>Kontakt_Betreuer</DataField>
        </Field>
        <Field Name="Kontakt_Ort">
          <DataField>Kontakt_Ort</DataField>
        </Field>
        <Field Name="Projektnr">
          <DataField>Projektnr</DataField>
        </Field>
        <Field Name="Kontakt_PLZ">
          <DataField>Kontakt_PLZ</DataField>
        </Field>
        <Field Name="Projektname">
          <DataField>Projektname</DataField>
        </Field>
        <Field Name="Kontaktname">
          <DataField>Kontaktname</DataField>
        </Field>
        <Field Name="Statustext">
          <DataField>Statustext</DataField>
        </Field>
        <Field Name="vLinientext">
          <DataField>vLinientext</DataField>
        </Field>
        <Field Name="Kontaktart_Memokopf">
          <DataField>Kontaktart_Memokopf</DataField>
        </Field>
        <Field Name="Memokurztext_Memokopf">
          <DataField>Memokurztext_Memokopf</DataField>
        </Field>
        <Field Name="Mandantenname_AnsprechpartnerAuswahl">
          <DataField>Mandantenname_AnsprechpartnerAuswahl</DataField>
        </Field>
        <Field Name="Kontaktname_AnsprechpartnerAuswahl">
          <DataField>Kontaktname_AnsprechpartnerAuswahl</DataField>
        </Field>
        <Field Name="Kontaktnr_AnsprechpartnerAuswahl">
          <DataField>Kontaktnr_AnsprechpartnerAuswahl</DataField>
        </Field>
        <Field Name="Bemerkung_Memozeile">
          <DataField>Bemerkung_Memozeile</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}
