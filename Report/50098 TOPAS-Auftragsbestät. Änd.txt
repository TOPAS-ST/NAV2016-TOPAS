OBJECT Report 50098 TOPAS-Auftragsbest„t. Žnd
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=09:36:00;
    Modified=Yes;
    Version List=Beleg Žnderungsbest„tigung --> 50098 !!,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   AnzKopien := 1;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  AnzKopien_sich := AnzKopien;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Order),
                                       Location Code=FILTER(ZENT|KONSI));
               PrintOnlyIfDetail=Yes;
               ReqFilterHeadingML=DEU=Verkaufsauftrag;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  //25.04.2012-ST
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF NOT kunde.GET("Sales Header"."Sell-to Customer No.") THEN CurrReport.BREAK;
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  adv_andruck_notwendig := FALSE;
                                  IF ("Sales Header"."AB via EMail") OR (kunde."Best„tigung via Internet") THEN
                                    AnzKopien := 0 ELSE AnzKopien := AnzKopien_sich;
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    CLEAR(VerkEinkPerson);
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  //IF verkaufskopf.W„hrungscode = '' THEN BEGIN
                                  //  FIBUEinrichtung.TESTFIELD(Mandantenw„hrungscode);
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung.Mandantenw„hrungscode);
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung.Mandantenw„hrungscode);
                                  //END ELSE BEGIN
                                  //  TotalText := STRSUBSTNO('Total %1',W„hrungscode);
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',W„hrungscode);
                                  //END;
                                  FormatAdr.SalesHeaderBillTo(DebAdr,"Sales Header");
                                  FormatAdr.SalesHeaderSellTo(VerkAdr,"Sales Header");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF (LieferAnAdr[i] <> VerkAdr[i]) OR (DebAdr[i] <> VerkAdr[i]) THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + '°' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ '+"Currency Code"+' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  v_FER_SPL := FALSE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,Order Date;
               CalcFields=AB via EMail }

    { 2   ;1   ;DataItem;Debitor             ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  // TOPAS Rahmenauftrag
                                  rahmenauftragsnummer := '';
                                  rahmen := FALSE;

                                  IF Steuernummer= '' THEN
                                    var_steuernr1 := ''
                                  ELSE
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      var_steuernr1 := 'Ihre Steuernummer:'
                                    ELSE
                                      var_steuernr1 := '';
                                  IF "Sales Header"."VAT Registration No." = '' THEN
                                     var_steuernr2 := ''
                                  ELSE
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      var_steuernr2 := 'USt-IdNr.'
                                    ELSE
                                      var_steuernr2 := 'Tax Number';

                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF "Sales Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := 'Total';
                                      TotalInklMWStText := 'Total inkl. MWSt';
                                      //TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      //TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := 'Total';
                                      TotalInklMWStText := 'Total inkl. MWSt';
                                      //TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                      //TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Sales Header"."Currency Code");
                                    END;
                                  END ELSE BEGIN
                                    IF "Sales Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := 'Total';
                                      TotalInklMWStText := 'Total incl. V.A.T.';
                                      //TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      //TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := 'Total';
                                      TotalInklMWStText := 'Total incl. V.A.T.';
                                      //TotalText := STRSUBSTNO('Total %1',"Sales Header"."Currency Code");
                                      //TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',"Sales Header"."Currency Code");
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Header;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 4   ;2   ;DataItem;                    ;
               DataItemTable=Table291;
               DataItemLinkReference=Sales Header;
               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 5   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               sum_restauftragsbestand := 0;
                               sum_mwstbetrag := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  sum_restauftragsbestand := 0;
                                  sum_mwstbetrag := 0;
                                  CLEAR(VerkZeile2);
                                  CLEAR(VerkBuchen);
                                  VerkBuchen.GetSalesLines("Sales Header",VerkZeile2,0);
                                  IF Number > 1 THEN
                                    ReportForNav.PrinterSettings.PaperSource(1)
                                  ELSE
                                    ReportForNav.PrinterSettings.PaperSource(3);
                                  PrinterSelection.RESET;
                                  PrinterSelection.SETFILTER("User ID",'%1',USERID);
                                  PrinterSelection.SETFILTER("Report ID",'%1',50098);
                                  IF PrinterSelection.FINDFIRST() THEN BEGIN
                                    IF (PrinterSelection."Printer Name" <> 'PDFCreator') AND (PrinterSelection."Printer Name" <> 'Bullzip PDF Printer')
                                    AND ("Sales Header"."AB via EMail" = TRUE) THEN
                                      pdf := TRUE
                                    ELSE
                                      pdf := FALSE;
                                  END ELSE
                                    pdf := FALSE;

                                  FOR k := 1 TO 9 DO BEGIN
                                    andruck[k] := '';
                                  END;
                                  n„chste_lief_jahr := '';
                                  n„chste_lief_woche := '';
                                  counter := 0;

                                  IF ((Number > 1) AND (pdf = FALSE)) OR (pdf = TRUE) OR (kunde."Best„tigung via Internet" = TRUE) THEN BEGIN
                                    ReportForNav.PrinterSettings.PaperSource(1);
                                    KopieText := 'skopie';
                                    IF kunde."AB vor Wandlung" THEN andruck[AndruckFeldPrfen] := 'Achtung erst AB dann Wandeln !!!';
                                    IF kunde."AB via EMail" THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'Achtung via E-Mail versenden !!!';
                                      andruck[AndruckFeldPrfen] := "Sales Header"."AB EMail-Adresse";
                                      andruck[AndruckFeldPrfen] := 'Erledigt von ..............'  ;
                                    END;
                                    IF kunde."AB via Fax" THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'Achtung via Fax versenden !!!';
                                      andruck[AndruckFeldPrfen] := 'Erledigt von ..............'  ;
                                    END;
                                    IF kunde."AB nur best„tigt" THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'Keine AB ohne Termin !!!';
                                    END;
                                    IF kunde."Best„tigung via Internet" THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'Best. per Internet (Vertrieb)!';
                                      andruck[AndruckFeldPrfen] := 'Termin eingehend beim Kunden';
                                      andruck[AndruckFeldPrfen] := 'Erledigt von ..............'  ;
                                    END;
                                    IF kunde."abw. Rechnungsadresse" THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'abw. Rechnungsadresse berprfen !!!';
                                    END;
                                    IF kunde."AB nur bei Abweichungen" = TRUE THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'AB nur bei Abweichungen !!!';
                                    END;
                                    IF "Sales Header"."Location Code" = 'KONSI' THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'Konsignationslager';
                                    END;
                                    IF "Sales Header"."Nicht rechnen" THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'Nicht rechnen, ist fix !!!';
                                    END;
                                    IF "Sales Header".W„hrungsabgleich THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'WŽ berprfen, +/- 3% !';
                                    END;
                                    IF "Sales Header"."Shipping Agent Code" = 'UPS-RG5' THEN BEGIN
                                      andruck[AndruckFeldPrfen] := 'UPS Paperless Invoice erforderlich !';
                                      andruck[AndruckFeldPrfen] := 'Keine Papierrechnung zum Paket !';
                                    END;

                                    IF STRPOS("Sales Header"."Payment Terms Code",'SOR') <> 0 THEN
                                      andruck[9] := 'SOR';
                                    //NEU TOPAS 14.06.10 UB KW fr Ablage bestimmen
                                    n„chste_lief_tab.RESET;
                                    n„chste_lief_tab.SETFILTER("Document No.",'%1',"Sales Header"."No.");
                                    n„chste_lief_tab.SETFILTER(Type,'%1',n„chste_lief_tab.Type::Item);
                                    n„chste_lief_tab.SETFILTER("Outstanding Quantity",'>%1',0);
                                    n„chste_lief_tab.SETCURRENTKEY("Document Type",Type,"Promised Delivery Date");
                                    n„chste_lief_jahr := '';
                                    n„chste_lief_woche := '';
                                    IF (n„chste_lief_tab.FINDFIRST) AND (n„chste_lief_tab."Promised Delivery Date" <> 0D) THEN BEGIN
                                      n„chste_lief_woche := 'KW ' + FORMAT(DATE2DWY(n„chste_lief_tab."Promised Delivery Date", 2));
                                      n„chste_lief_jahr := FORMAT(DATE2DWY(n„chste_lief_tab."Promised Delivery Date", 3));
                                      IF n„chste_lief_tab."Promised Delivery Date" = (31122053D) THEN BEGIN
                                        n„chste_lief_jahr := '';
                                        n„chste_lief_woche := 'Auf Abruf';
                                      END;
                                      IF n„chste_lief_tab.FINDLAST THEN BEGIN
                                        IF n„chste_lief_tab."Promised Delivery Date" = (31122055D) THEN BEGIN
                                          n„chste_lief_jahr := '';
                                          n„chste_lief_woche := 'Termin folgt';
                                        END;
                                      END;
                                    END;
                                  END;

                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF (Number > 1) OR (pdf = TRUE) OR (kunde."Best„tigung via Internet") THEN KopieText := 'skopie';
                                    ReportForNav.PageNo := 1;
                                    IF "Sales Header"."Document Date" > "Sales Header"."Order Date" THEN
                                      „nderung := 'Žnderungs-'
                                    ELSE
                                      „nderung := '';
                                  END ELSE BEGIN
                                    IF (Number > 1) OR (pdf = TRUE) OR (kunde."Best„tigung via Internet") THEN KopieText := ' Copy';
                                    ReportForNav.PageNo := 1;
                                    IF "Sales Header"."Document Date" > "Sales Header"."Order Date" THEN
                                      „nderung := 'Change'
                                    ELSE
                                      „nderung := '';
                                  END;

                                  IF (("Sales Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Header"."Shipment Method Code" = 'ACC-ENG')
                                  OR ("Sales Header"."Shipment Method Code" = 'EXW_1')) THEN
                                    Account := "Shipping Agent".Name+' / '+"Sales Header".Spediteuraccount
                                  ELSE
                                    Account := "Shipping Agent".Name;
                                  IF (Number > 1) AND ("Sales Header"."Keine AB an Kunden") THEN
                                    andruck[AndruckFeldPrfen] := 'Keine AB an Kunden!!!';

                                  //03.07.2018 ST - Andruck des Hinweises, dass noch keine ADV vorliegt, diese aber fr CHAMPS erforderlich ist
                                  SalesLine.RESET;
                                  SalesLine.SETRANGE("Document No.","Sales Header"."No.");
                                  SalesLine.SETRANGE(Type,SalesLine.Type::Item);
                                  IF SalesLine.FINDFIRST THEN BEGIN
                                    REPEAT
                                      IF (Artikel.GET(SalesLine."No.") AND (Artikel."Software Upgrade Protection")) THEN
                                        TroubleshootingSetup.SETRANGE(Type,TroubleshootingSetup.Type::Item);
                                        TroubleshootingSetup.SETRANGE("No.",Artikel."No.");
                                        TroubleshootingSetup.SETRANGE("Troubleshooting No.",'CHAMPS');
                                        IF TroubleshootingSetup.FINDFIRST THEN
                                          IF (Debitor.ADV = FALSE) AND (Debitor."Territory Code" = 'SYSTEM') THEN BEGIN
                                            adv_andruck_notwendig := TRUE;
                                            IF (Number > 1) OR (pdf = TRUE) THEN
                                              andruck[AndruckFeldPrfen] := 'AV mitschicken!';
                                          END;
                                    UNTIL (SalesLine.NEXT = 0) OR (adv_andruck_notwendig);
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkDruckZ„hler.RUN("Sales Header");
                                // TOPAS Rahmenauftrag
                                {
                                IF rahmen THEN BEGIN
                                  rahmenauftr„ge.SETFILTER("No.",rahmenauftragsnummer);
                                  MESSAGE('Rahmenauftrag mit der Nr.:' + rahmenauftragsnummer + ' manuell drucken!') ;
                                  //REPORT.RUN(50114,FALSE,FALSE,rahmenauftr„ge);
                                END;
                                }
                                // ende
                              END;
                               }

    { 6   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 1000000003;3;Column;Picture_Firmendaten;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 7   ;3   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 8   ;3   ;Column  ;andruck9            ;
               IncludeCaption=No;
               SourceExpr=andruck[9] }

    { 9   ;3   ;Column  ;nachste_lief_jahr   ;
               IncludeCaption=No;
               SourceExpr=n„chste_lief_jahr }

    { 10  ;3   ;Column  ;nachste_lief_woche  ;
               IncludeCaption=No;
               SourceExpr=n„chste_lief_woche }

    { 11  ;3   ;Column  ;andruck1            ;
               IncludeCaption=No;
               SourceExpr=andruck[1] }

    { 12  ;3   ;Column  ;andruck2            ;
               IncludeCaption=No;
               SourceExpr=andruck[2] }

    { 13  ;3   ;Column  ;ansp_fax            ;
               IncludeCaption=No;
               SourceExpr=ansp_fax }

    { 14  ;3   ;Column  ;ansp_telefon        ;
               IncludeCaption=No;
               SourceExpr=ansp_telefon }

    { 15  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."First name" + ' ' +"Salesperson/Purchaser".Name }

    { 16  ;3   ;Column  ;ansp_anrede         ;
               IncludeCaption=No;
               SourceExpr=ansp_anrede }

    { 17  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 18  ;3   ;Column  ;andruck7            ;
               IncludeCaption=No;
               SourceExpr=andruck[7] }

    { 19  ;3   ;Column  ;Steuernummer_Debito ;
               IncludeCaption=No;
               SourceExpr=Debitor.Steuernummer }

    { 20  ;3   ;Column  ;var_steuernr1       ;
               IncludeCaption=No;
               SourceExpr=var_steuernr1 }

    { 21  ;3   ;Column  ;andruck6            ;
               IncludeCaption=No;
               SourceExpr=andruck[6] }

    { 22  ;3   ;Column  ;andruck5            ;
               IncludeCaption=No;
               SourceExpr=andruck[5] }

    { 23  ;3   ;Column  ;andruck4            ;
               IncludeCaption=No;
               SourceExpr=andruck[4] }

    { 24  ;3   ;Column  ;andruck3            ;
               IncludeCaption=No;
               SourceExpr=andruck[3] }

    { 25  ;3   ;Column  ;anderung            ;
               IncludeCaption=No;
               SourceExpr=„nderung }

    { 26  ;3   ;Column  ;SalesHeaderExternalDocumentNo__SalesHeaderYourReference;
               IncludeCaption=No;
               SourceExpr="Sales Header"."External Document No."+' '+"Sales Header"."Your Reference" }

    { 27  ;3   ;Column  ;OurAccountNo_Debito ;
               IncludeCaption=No;
               SourceExpr=Debitor."Our Account No." }

    { 28  ;3   ;Column  ;var_steuernr2       ;
               IncludeCaption=No;
               SourceExpr=var_steuernr2 }

    { 29  ;3   ;Column  ;VATRegistrationNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."VAT Registration No." }

    { 30  ;3   ;Column  ;KopieText           ;
               IncludeCaption=No;
               SourceExpr=KopieText }

    { 31  ;3   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="Sales Header"."No." }

    { 32  ;3   ;Column  ;Bill_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Bill-to Customer No." }

    { 33  ;3   ;Column  ;SalesHeaderDocumentDate_0_1;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 34  ;3   ;Column  ;seite               ;
               IncludeCaption=No;
               SourceExpr=seite }

    { 35  ;3   ;Column  ;VerkAdr8            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[8] }

    { 36  ;3   ;Column  ;VerkAdr7            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[7] }

    { 37  ;3   ;Column  ;VerkAdr6            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[6] }

    { 38  ;3   ;Column  ;VerkAdr5            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[5] }

    { 39  ;3   ;Column  ;VerkAdr4            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[4] }

    { 40  ;3   ;Column  ;VerkAdr3            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[3] }

    { 41  ;3   ;Column  ;VerkAdr2            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[2] }

    { 42  ;3   ;Column  ;VerkAdr1            ;
               IncludeCaption=No;
               SourceExpr=VerkAdr[1] }

    { 43  ;3   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 44  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := VerkZeile2.FIND('+');
                               WHILE MehrZeilen AND (VerkZeile2.Description = '') AND
                                     (VerkZeile2."No." = '') AND (VerkZeile2.Quantity = 0) AND
                                     (VerkZeile2.Amount = 0)
                               DO
                                 MehrZeilen := VerkZeile2.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               VerkZeile2.SETRANGE("Line No.",0,VerkZeile2."Line No.");
                               SETRANGE(Number,1,VerkZeile2.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    VerkZeile2.FIND('-')
                                  ELSE
                                    VerkZeile2.NEXT;

                                  "Sales Line" := VerkZeile2;
                                  IF "Sales Line"."Outstanding Quantity" <> 0 THEN BEGIN
                                    MWSTBetragZeile.INIT;
                                    MWSTBetragZeile."VAT %" := "Sales Line"."VAT %";
                                    MWSTBetragZeile."VAT Base" := "Sales Line".Amount;
                                    MWSTBetragZeile."Amount Including VAT" := "Sales Line"."Amount Including VAT";
                                    MWSTBetragZeile.InsertLine;
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      steuer_text:=MWSTBetragZeile.VATAmountText
                                    ELSE
                                      steuer_text:='Total V.A.T.';
                                  END;

                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Line".Type = "Sales Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND ("Sales Line"."Quantity Shipped" <> "Sales Line"."Quantity (Base)") THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                  IF v_FER_SPL = FALSE THEN BEGIN
                                    IF (("Sales Line"."Manufacturer Code" ='82') OR ("Sales Line"."Manufacturer Code" = '85')) THEN BEGIN
                                    v_FER_SPL := TRUE;
                                    END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                VerkZeile2.DELETEALL;
                              END;

               DataItemLinkReference=SeiteSchleife }

    { 45  ;4   ;Column  ;waehrung2           ;
               IncludeCaption=No;
               SourceExpr=waehrung2 }

    { 46  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100__VerkZeile2In;
               IncludeCaption=No;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100) +VerkZeile2. "Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 47  ;4   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Description }

    { 48  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_VerkZeile2VATPct_100_S;
               IncludeCaption=No;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+VerkZeile2."VAT %")*100)+"Sales Line"."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 49  ;4   ;Column  ;UnitPrice_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 50  ;4   ;Column  ;OutstandingQuantity_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Outstanding Quantity" }

    { 51  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_001;
               IncludeCaption=No;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 52  ;4   ;Column  ;UnitofMeasure_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit of Measure" }

    { 53  ;4   ;Column  ;Quantity_SalesLine  ;
               IncludeCaption=No;
               SourceExpr="Sales Line".Quantity }

    { 54  ;4   ;Column  ;No_SalesLine        ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."No." }

    { 55  ;4   ;Column  ;ROUND_VerkZeile2OutstandingAmount_100_mwst_100_VerkZeile2Inv;
               IncludeCaption=No;
               SourceExpr=ROUND(((VerkZeile2."Outstanding Amount")/(100+mwst)*100)+VerkZeile2."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 56  ;4   ;Column  ;ROUND_VerkZeile2InvDiscountAmount_001;
               IncludeCaption=No;
               SourceExpr=ROUND(-VerkZeile2."Inv. Discount Amount",0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 57  ;4   ;Column  ;lead_free_text0     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text0 }

    { 58  ;4   ;Column  ;lead_free_text1     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text1 }

    { 59  ;4   ;Column  ;lead_free_text2     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text2 }

    { 60  ;4   ;Column  ;lead_text           ;
               IncludeCaption=No;
               SourceExpr=lead_text }

    { 61  ;4   ;Column  ;sum_restauftragsbestand_sum_mwstbetrag;
               IncludeCaption=No;
               SourceExpr=(sum_restauftragsbestand+sum_mwstbetrag);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 62  ;4   ;Column  ;sum_mwstbetrag      ;
               IncludeCaption=No;
               SourceExpr=sum_mwstbetrag;
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 63  ;4   ;Column  ;sum_restauftragsbestand;
               IncludeCaption=No;
               SourceExpr=sum_restauftragsbestand;
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 64  ;4   ;Column  ;TotalInklMWStText   ;
               IncludeCaption=No;
               SourceExpr=TotalInklMWStText }

    { 65  ;4   ;Column  ;steuer_text         ;
               IncludeCaption=No;
               SourceExpr=steuer_text }

    { 66  ;4   ;Column  ;TotalText           ;
               IncludeCaption=No;
               SourceExpr=TotalText }

    { 67  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnPreDataItem=BEGIN
                               IF VerkZeile2."Promised Delivery Date" = (31122053D) THEN
                                 IF CurrReport.LANGUAGE = 1031 THEN
                                   liefert := 'Abruf'
                                 ELSE
                                   liefert := 'on call';
                               IF VerkZeile2."Promised Delivery Date" = (31122055D) THEN
                                 IF CurrReport.LANGUAGE = 1031 THEN
                                   liefert := 'folgt'
                                 ELSE
                                   liefert := 'To Follow';
                             END;

               OnAfterGetRecord=BEGIN
                                  IF "Sales Line".Type = "Sales Line".Type::Item THEN BEGIN
                                    IF "Sales Line"."VAT %" > 0 THEN         //sonst werden die Textzeilen mit bercksichtigt
                                      mwst := "Sales Line"."VAT %"
                                    ELSE
                                      mwst := 0;
                                  END;
                                  sum_restauftragsbestand := sum_restauftragsbestand + ROUND((("Sales Line"."Outstanding Amount") / (100 + mwst) * 100),0.01);
                                  // TOPAS
                                  IF "Sales Line"."Blanket Order No." <> '' THEN BEGIN
                                    rahmenauftragsnummer := "Sales Line"."Blanket Order No.";
                                    rahmen := TRUE;
                                  END;
                                  // TOPAS
                                END;

               OnPostDataItem=BEGIN
                                liefert:='';
                              END;

               DataItemLinkReference=Sales Line;
               DataItemLink=No.=FIELD(No.) }

    { 68  ;5   ;Column  ;lead_symbol         ;
               IncludeCaption=No;
               SourceExpr=lead_symbol }

    { 69  ;5   ;Column  ;ROUND_SalesLineOutstandingAmount_100_mwst_100_001;
               DecimalPlaces=2:0;
               IncludeCaption=No;
               SourceExpr=ROUND((("Sales Line"."Outstanding Amount")/(100+mwst)*100),0.01);
               AutoFormatType=1;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 70  ;5   ;Column  ;LineNo_SalesLine    ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Line No." }

    { 71  ;5   ;Column  ;Herstellerkurzname_Item;
               IncludeCaption=No;
               SourceExpr=Herstellerkurzname }

    { 72  ;5   ;Column  ;Artikelnr2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 73  ;5   ;Column  ;Description_SalesLine4;
               IncludeCaption=No;
               SourceExpr="Sales Line".Description }

    { 74  ;5   ;Column  ;Quantity_SalesLine2 ;
               IncludeCaption=No;
               SourceExpr="Sales Line".Quantity }

    { 75  ;5   ;Column  ;OutstandingQuantity_SalesLine2;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Outstanding Quantity" }

    { 76  ;5   ;Column  ;liefert             ;
               IncludeCaption=No;
               SourceExpr=liefert }

    { 77  ;5   ;Column  ;Country_RegionofOriginCode_Item;
               IncludeCaption=No;
               SourceExpr="Country/Region of Origin Code" }

    { 78  ;5   ;Column  ;UnitPrice_SalesLine3;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Line"."Currency Code" }

    { 79  ;5   ;Column  ;PromisedDeliveryDate_VerkZeile2;
               IncludeCaption=No;
               SourceExpr=VerkZeile2."Promised Delivery Date" }

    { 80  ;5   ;Column  ;Description2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Description 2" }

    { 81  ;5   ;Column  ;TariffNo_Item       ;
               IncludeCaption=No;
               SourceExpr="Tariff No." }

    { 82  ;5   ;Column  ;ECCN_Nr__ItemECCN_Nr;
               IncludeCaption=No;
               SourceExpr='ECCN-Nr.: '+ Item."ECCN-Nr." }

    { 83  ;5   ;Column  ;Cross_ReferenceNo_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Cross-Reference No." }

    { 84  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 85  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;

               DataItemLinkReference=SeiteSchleife }

    { 86  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 87  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 88  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 89  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               DataItemLinkReference=SeiteSchleife }

    { 90  ;4   ;Column  ;Account             ;
               IncludeCaption=No;
               SourceExpr=Account }

    { 91  ;4   ;Column  ;Description_LieferBed;
               IncludeCaption=No;
               SourceExpr=LieferBed.Description }

    { 92  ;4   ;Column  ;Description_ZlgBed  ;
               IncludeCaption=No;
               SourceExpr=ZlgBed.Description }

    { 93  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;

               DataItemLinkReference=SeiteSchleife }

    { 94  ;4   ;Column  ;Sell_toCustomerNo_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Sell-to Customer No.") }

    { 95  ;4   ;Column  ;Sell_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 96  ;4   ;Column  ;DebAdr1             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[1] }

    { 97  ;4   ;Column  ;DebAdr2             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[2] }

    { 98  ;4   ;Column  ;DebAdr3             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[3] }

    { 99  ;4   ;Column  ;DebAdr4             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[4] }

    { 100 ;4   ;Column  ;DebAdr5             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[5] }

    { 101 ;4   ;Column  ;DebAdr6             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[6] }

    { 102 ;4   ;Column  ;DebAdr7             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[7] }

    { 103 ;4   ;Column  ;DebAdr8             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[8] }

    { 104 ;4   ;Column  ;LieferAnAdr1        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[1] }

    { 105 ;4   ;Column  ;LieferAnAdr2        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[2] }

    { 106 ;4   ;Column  ;LieferAnAdr3        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[3] }

    { 107 ;4   ;Column  ;LieferAnAdr4        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[4] }

    { 108 ;4   ;Column  ;LieferAnAdr5        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[5] }

    { 109 ;4   ;Column  ;LieferAnAdr6        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[6] }

    { 110 ;4   ;Column  ;LieferAnAdr7        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[7] }

    { 111 ;4   ;Column  ;LieferAnAdr8        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[8] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=No;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140002 : Record 98;
      LieferBed@1140003 : Record 10;
      ZlgBed@1140004 : Record 3;
      kunde@1000000004 : Record 18;
      leadfree_artikel@1000000011 : Record 27;
      lead_artikel@1000000010 : Record 27;
      Artikel@1000000009 : Record 27;
      VerkEinkPerson@1140008 : Record 13;
      Firmendaten@1140009 : Record 79;
      MWSTBetragZeile@1140010 : TEMPORARY Record 290;
      "UnsereKontonr."@1140011 : Record 18;
      rahmenauftr„ge@1000000005 : Record 36;
      VerkZeile2@1140012 : TEMPORARY Record 37;
      n„chste_lief_tab@1000000008 : Record 37;
      SalesLine@1000000003 : Record 37;
      language@1140071 : Record 8;
      PrinterSelection@1000000002 : Record 78;
      TroubleshootingSetup@1000000006 : Record 5945;
      VerkDruckZ„hler@1140013 : Codeunit 313;
      FormatAdr@1140014 : Codeunit 365;
      VerkBuchen@1140015 : Codeunit 80;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140016 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140017 : ARRAY [8] OF Text[50];
      FirmaAdr@1140018 : ARRAY [8] OF Text[50];
      Verk„uferText@1140019 : Text[30];
      MWStNrText@1140020 : Text[30];
      ReferenzText@1140021 : Text[30];
      TotalText@1140022 : Text[50];
      TotalInklMWStText@1140023 : Text[50];
      MehrZeilen@1140024 : Boolean;
      AnzKopien@1140025 : Integer;
      AnzKopien_sich@1140065 : Integer;
      AnzSchleifen@1140026 : Integer;
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      liefert@1140031 : Code[10];
      liefert2@1140032 : Date;
      mwst@1140033 : Decimal;
      „nderung@1140034 : Text[30];
      sum_restauftragsbestand@1140035 : Decimal;
      sum_mwstbetrag@1140066 : Decimal;
      sum_netto@1140070 : Decimal;
      AnzPorto@1140036 : Decimal;
      SumPorto@1140037 : Decimal;
      VerkAdr@1140038 : ARRAY [8] OF Text[50];
      waehrung@1000000013 : Code[10];
      waehrung2@1000000012 : Code[10];
      rahmenauftragsnummer@1140045 : Code[20];
      rahmen@1140047 : Boolean;
      lead_free_text0@1140048 : Text[80];
      lead_free_text1@1140049 : Text[80];
      leadfree_symbol@1140050 : Text[3];
      lead_text@1140068 : Text[120];
      lead_symbol@1140069 : Text[3];
      lead_free_text2@1140052 : Text[80];
      var_steuernr1@1140053 : Text[20];
      var_steuernr2@1140054 : Text[20];
      ansp_anrede@1140055 : Text[30];
      ansp_telefon@1140056 : Text[30];
      ansp_fax@1140057 : Text[30];
      steuer_text@1140058 : Text[30];
      seite@1140059 : Text[30];
      Account@1140062 : Text[100];
      pdf@1140064 : Boolean;
      k@1140030 : Integer;
      counter@1140040 : Integer;
      andruck@1140039 : ARRAY [9] OF Text[80];
      n„chste_lief_woche@1140042 : Text[30];
      n„chste_lief_jahr@1140043 : Text[30];
      v_FER_SPL@1140072 : Boolean;
      adv_andruck_notwendig@1000000007 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer1@1000000072(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(adv_andruck_notwendig);
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Header30@1000000067(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_TransHeader31@1000000068(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Body32@1000000069(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_TransFooter33@1000000070(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionMWStZahler_Footer34@1000000071(VAR MWStZ„hler@1000000000 : Record 2000000026);
    BEGIN
      WITH MWStZ„hler DO BEGIN
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header3@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //TOPAS 20.03.18 ST - rendert das Firmenlogo fr Batch L„ufe, da das Logo beim normalen Druck vom Briefpapier bezogen wird
        IF PrinterSelection.GET(USERID,50098) THEN BEGIN
          IF (PrinterSelection."Printer Name" = 'PDFCreator')
          OR (PrinterSelection."Printer Name" = 'Bullzip PDF Printer') THEN
            Firmendaten.CALCFIELDS(Picture);
        END;
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS Ende
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body7@5011(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //ReportForNav.ShowOutput(VerkZeile2.Art = 0);
        // Unterdckt Artikeltexte wenn eine Artikelzeile nicht berechnet wird
        SalesLine.RESET;
        SalesLine.SETFILTER("Document No.",'%1',VerkZeile2."Document No." );
        SalesLine.SETFILTER("Line No.",'%1',VerkZeile2."Attached to Line No." );
        IF SalesLine.FINDFIRST THEN BEGIN
          ReportForNav.ShowOutput(((SalesLine.Type = SalesLine.Type::Item) AND (SalesLine."Outstanding Quantity" > 0)) OR (SalesLine.Type = 0));
        END ELSE BEGIN
          IF ((VerkZeile2."Attached to Line No." = 0) AND (VerkZeile2.Type = 0)) THEN
            ReportForNav.ShowOutput(TRUE)
          ELSE
            ReportForNav.ShowOutput(FALSE);
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body8@5012(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        sum_netto := 0;
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::"G/L Account") AND (VerkZeile2."Outstanding Quantity" > 0));
        IF VerkZeile2.Type = VerkZeile2.Type::"G/L Account" THEN BEGIN
          sum_restauftragsbestand := sum_restauftragsbestand+ROUND(((VerkZeile2."Outstanding Amount")/(100+
          VerkZeile2."VAT %")*100),0.01);
          sum_netto := ROUND(((VerkZeile2."Outstanding Amount") / (100 + VerkZeile2."VAT %") * 100),0.01);
          sum_mwstbetrag := sum_mwstbetrag + ROUND(((sum_netto) / (100) * VerkZeile2."VAT %"),0.00001);
          SumPorto := VerkZeile2.Amount;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body10@5013(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2.Type = VerkZeile2.Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer13@5014(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile2."Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer14@5015(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer15@5016(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer16@5017(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer17@5018(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer19@5019(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer20@5020(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Debitor."VAT Bus. Posting Group" <> 'HAN_AUSL');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer21@5021(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Debitor."VAT Bus. Posting Group" = 'HAN_AUSL');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body22@5022(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND (VerkZeile2."Promised Delivery Date" = 31122055D));
        IF ((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND (VerkZeile2."Promised Delivery Date" = 31122055D)) THEN BEGIN
          sum_mwstbetrag := sum_mwstbetrag + ROUND(((VerkZeile2."Outstanding Amount") / (100 + VerkZeile2."VAT %") * VerkZeile2."VAT %"),0.00001);
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body23@5023(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity">0) AND (VerkZeile2."Promised Delivery Date" = 31122053D));
        IF ((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND (VerkZeile2."Promised Delivery Date" = 31122053D)) THEN BEGIN
         sum_mwstbetrag := sum_mwstbetrag + ROUND(((VerkZeile2."Outstanding Amount") / (100 + VerkZeile2."VAT %") * VerkZeile2."VAT %"),0.00001);
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body24@5024(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND (VerkZeile2."Promised Delivery Date" < 31122053D));
        IF ((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND (VerkZeile2."Promised Delivery Date" < 31122053D)) THEN BEGIN
          sum_mwstbetrag := sum_mwstbetrag + ROUND(((VerkZeile2."Outstanding Amount") / (100 + VerkZeile2."VAT %") * VerkZeile2."VAT %"),0.00001);
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body25@5025(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2."Description 2" <> '') AND (VerkZeile2."Outstanding Quantity">0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body26@5026(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
         ReportForNav.ShowOutput(((Item."Tariff No." <> '')AND (VerkZeile2."Outstanding Quantity" > 0)) OR ((Item."ECCN-Nr." <> '') AND (VerkZeile2."Outstanding Quantity" > 0)));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body27@5027(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2.Type = VerkZeile2.Type::Item) AND (VerkZeile2."Outstanding Quantity" > 0) AND ("Sales Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body28@5028(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(((Item.NCNR = TRUE) AND (VerkZeile2."Outstanding Quantity" > 0)) OR ((Item."Manufacturer Code" = '00') AND (VerkZeile2."Outstanding Quantity" > 0)));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body29@5029(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((VerkZeile2."VAT Prod. Posting Group" = '13B2') AND (VerkZeile2."Outstanding Quantity" > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body36@5035(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(LiefAdrAnzeigen);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body37@5036(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput("Sales Header"."Sell-to Customer No." <> "Sales Header"."Bill-to Customer No.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body38@5037(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput(LiefAdrAnzeigen);
      END;
    END;

    PROCEDURE AndruckFeldPrfen@1140000() : Integer;
    VAR
      nr@1140000 : Integer;
    BEGIN
      FOR nr:= 1 TO 8 DO BEGIN
        IF andruck[nr] = '' THEN
          EXIT(nr)
        ELSE BEGIN
          IF nr > 7 THEN BEGIN
            MESSAGE('Achtung Warnhinweis %1 konnte nicht auf der AB-Kopie angedruckt werden.\'+
                    'Wenden Sie sich bitte an Ihren Systemverwalter!',nr + counter);
            counter += 1;
            EXIT(8);
          END;
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header3': OnPreSectionSeiteSchleife_Header3(SeiteSchleife);
        END;
        'RundungsRahmen': CASE SectionId OF
          'Body7': OnPreSectionRundungsRahmen_Body7(RundungsRahmen);
          'Body8': OnPreSectionRundungsRahmen_Body8(RundungsRahmen);
          'Body10': OnPreSectionRundungsRahmen_Body10(RundungsRahmen);
          'Footer13': OnPreSectionRundungsRahmen_Footer13(RundungsRahmen);
          'Footer14': OnPreSectionRundungsRahmen_Footer14(RundungsRahmen);
          'Footer15': OnPreSectionRundungsRahmen_Footer15(RundungsRahmen);
          'Footer16': OnPreSectionRundungsRahmen_Footer16(RundungsRahmen);
          'Footer17': OnPreSectionRundungsRahmen_Footer17(RundungsRahmen);
          'Footer19': OnPreSectionRundungsRahmen_Footer19(RundungsRahmen);
          'Footer20': OnPreSectionRundungsRahmen_Footer20(RundungsRahmen);
          'Footer21': OnPreSectionRundungsRahmen_Footer21(RundungsRahmen);
          'Footer1': OnPreSectionRundungsRahmen_Footer1(RundungsRahmen);
        END;
        'Item': CASE SectionId OF
          'Body22': OnPreSectionItem_Body22(Item);
          'Body23': OnPreSectionItem_Body23(Item);
          'Body24': OnPreSectionItem_Body24(Item);
          'Body25': OnPreSectionItem_Body25(Item);
          'Body26': OnPreSectionItem_Body26(Item);
          'Body27': OnPreSectionItem_Body27(Item);
          'Body28': OnPreSectionItem_Body28(Item);
          'Body29': OnPreSectionItem_Body29(Item);
        END;
        'MWStZahler': CASE SectionId OF
          'Header30': OnPreSectionMWStZahler_Header30(MWStZ„hler);
          'TransHeader31': OnPreSectionMWStZahler_TransHeader31(MWStZ„hler);
          'Body32': OnPreSectionMWStZahler_Body32(MWStZ„hler);
          'TransFooter33': OnPreSectionMWStZahler_TransFooter33(MWStZ„hler);
          'Footer34': OnPreSectionMWStZahler_Footer34(MWStZ„hler);
        END;
        'Total2': CASE SectionId OF
          'Body36': OnPreSectionTotal2_Body36(Total2);
          'Body37': OnPreSectionTotal2_Body37(Total2);
          'Body38': OnPreSectionTotal2_Body38(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,VerkZeile2."Outstanding Amount");
                ReportForNav.AddTotal(DataItemId,1,VerkZeile2."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,VerkZeile2."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 VerkZeile2."Outstanding Amount" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 VerkZeile2."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 VerkZeile2."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
+e7JT1jOnaM7Uib2ZfwpX1cXiGQeJT+j4l//Pw==</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

