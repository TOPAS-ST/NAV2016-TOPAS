OBJECT Report 50171 ISO Eintr„ge
{
  OBJECT-PROPERTIES
  {
    Date=17.01.18;
    Time=10:42:18;
    Modified=Yes;
    Version List=TOPAS,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  IF Berichtstabelle.TABLECAPTION <> 'Berichtstabelle' THEN
                    ERROR('Sicherheitssperre verhindert Ausfhrung dieses Berichtes.');
                  Berichtstabelle.RESET;
                  IF Berichtstabelle.ISEMPTY = FALSE THEN BEGIN
                    REPEAT
                      Berichtstabelle.RESET;
                      IF Berichtstabelle.ISEMPTY = FALSE THEN
                      SLEEP(500);
                    UNTIL Berichtstabelle.ISEMPTY = TRUE;
                  END;

                  Memokopf.RESET;
                  Memokopf.SETFILTER(ISO,'%1',TRUE);
                  Memokopf.SETFILTER("Kampagnennr.",'<>%1','');
                  IF (Startdatum<>0D) AND (Enddatum=0D) THEN
                    Memokopf.SETFILTER(Memodatum,'>=%1',Startdatum);
                  IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Memodatum,'>=%1&<=%2',Startdatum,Enddatum);
                  IF (Startdatum=0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Memodatum,'<=%1',Enddatum);
                  IF Memokopf.FINDFIRST THEN BEGIN
                    REPEAT
                      Berichtstabelle.INIT;
                      Berichtstabelle.Tabelle := 'PROJEKTMEMO';
                      Berichtstabelle.Index := Memokopf."Memonr.";
                      Berichtstabelle.Datum := Memokopf.Anlagedatum;
                      Berichtstabelle."Belegnr." := Memokopf."Memonr.";
                      Berichtstabelle."Feld 1" := Memokopf.Memokurztext;
                      Berichtstabelle."Feld 2" := Memokopf."Kampagnennr.";
                      Berichtstabelle."Feld 6" := Memokopf."Angelegt von";
                      Berichtstabelle."Feld 18" := Memokopf.Memodatum;
                      Projekt.SETFILTER(Projekt."No.",Memokopf."Kampagnennr.");
                      IF Projekt.FINDFIRST THEN BEGIN
                        Berichtstabelle."Feld 11" := Projekt.Description;
                        Ansprech.SETRANGE(Ansprech."Kampagnennr.",Projekt."No.");
                        Ansprech.SETRANGE(Fhrungsrolle,TRUE);
                        IF Ansprech.FINDFIRST THEN BEGIN
                          Ansprech.CALCFIELDS(Mandantenname);
                          Berichtstabelle."Feld 10" := Ansprech.Mandantenname;
                        END;
                      END;
                      Berichtstabelle.INSERT;
                      Memozeile.RESET;
                      Memozeile.SETRANGE("Memonr.",Memokopf."Memonr.");
                      IF Memozeile.FINDFIRST THEN BEGIN
                        REPEAT
                          Berichtstabelle.INIT;
                          Berichtstabelle.Tabelle := 'MEMOZEILE';
                          Berichtstabelle.Index := Memozeile."Memonr.";
                          Berichtstabelle."Belegnr." := Memozeile."Memonr.";
                          Berichtstabelle."Zeilennr." := Memozeile."Zeilennr.";
                          Berichtstabelle."Feld 1" := Memozeile.Bemerkung;
                          Berichtstabelle.INSERT;
                        UNTIL Memozeile.NEXT = 0;
                      END;
                    UNTIL Memokopf.NEXT = 0;
                  END;

                  Memokopf.RESET;
                  Memokopf.SETFILTER(ISO,'%1',TRUE);
                  Memokopf.SETFILTER("Mandantennr.",'<>%1','');
                  IF (Startdatum<>0D) AND (Enddatum=0D) THEN
                    Memokopf.SETFILTER(Memodatum,'>=%1',Startdatum);
                  IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Memodatum,'>=%1&<=%2',Startdatum,Enddatum);
                  IF (Startdatum=0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Memodatum,'<=%1',Enddatum);
                  IF Memokopf.FINDFIRST THEN BEGIN
                    REPEAT
                      Berichtstabelle.INIT;
                      Berichtstabelle.Tabelle := 'KONTAKTMEMO';
                      Berichtstabelle.Index := Memokopf."Memonr.";
                      Berichtstabelle.Datum := Memokopf.Anlagedatum;
                      Berichtstabelle."Belegnr." := Memokopf."Memonr.";
                      Berichtstabelle."Feld 1" := Memokopf.Memokurztext;
                      Berichtstabelle."Feld 2" := Memokopf."Mandantennr.";
                      Berichtstabelle."Feld 6" := Memokopf."Angelegt von";
                      Berichtstabelle."Feld 18" := Memokopf.Memodatum;
                      Cont.SETFILTER(Cont."No.",'%1',Memokopf."Mandantennr.");
                      IF Cont.FINDFIRST THEN
                        Berichtstabelle."Feld 10" := Cont.Name;
                      Berichtstabelle.INSERT;
                      Memozeile.RESET;
                      Memozeile.SETRANGE("Memonr.",Memokopf."Memonr.");
                      IF Memozeile.FINDFIRST THEN BEGIN
                        REPEAT
                          Berichtstabelle.INIT;
                            Berichtstabelle.Tabelle := 'MEMOZEILE';
                            Berichtstabelle.Index := Memozeile."Memonr.";
                            Berichtstabelle."Belegnr." := Memozeile."Memonr.";
                            Berichtstabelle."Zeilennr." := Memozeile."Zeilennr.";
                            Berichtstabelle."Feld 1" := Memozeile.Bemerkung;
                          Berichtstabelle.INSERT;
                        UNTIL Memozeile.NEXT = 0;
                      END;
                    UNTIL Memokopf.NEXT = 0;
                  END;

                  Aufgabe.RESET;
                  Aufgabe.SETFILTER("System To-do Type",'%1',Aufgabe."System To-do Type"::Organizer);
                  Aufgabe.SETFILTER(ISO,'%1',TRUE);
                  IF (Startdatum<>0D) AND (Enddatum=0D) THEN
                    Aufgabe.SETFILTER("Erstellt am",'>=%1',Startdatum);
                  IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
                    Aufgabe.SETFILTER("Erstellt am",'>=%1&<=%2',Startdatum,Enddatum);
                  IF (Startdatum=0D) AND (Enddatum<>0D) THEN
                    Aufgabe.SETFILTER("Erstellt am",'<=%1',Enddatum);
                  IF Aufgabe.FINDFIRST THEN BEGIN
                    REPEAT
                      Berichtstabelle.INIT;
                      Berichtstabelle.Tabelle := 'AUFGABE';
                      Berichtstabelle.Index := Aufgabe."No.";
                      IF Aufgabe."Erstellt am" <> 0D THEN
                        Berichtstabelle.Datum := Aufgabe."Erstellt am"
                      ELSE
                        Berichtstabelle.Datum := Aufgabe.Date;
                      Berichtstabelle."Belegnr." := Aufgabe."No.";
                      Berichtstabelle."Feld 1" := Aufgabe.Description;
                      Berichtstabelle."Feld 2" := Aufgabe."Contact Company No.";
                      Berichtstabelle."Feld 6" := Aufgabe.Ersteller;
                      Aufgabe.CALCFIELDS("Contact Company Name");
                      Berichtstabelle."Feld 10" := Aufgabe."Contact Company Name";
                      Berichtstabelle."Feld 18" := Aufgabe.Date;
                      Berichtstabelle.INSERT;
                      Bemerkung.RESET;
                      Bemerkung.SETRANGE("Table Name",Bemerkung."Table Name"::"To-do");
                      Bemerkung.SETRANGE("No.",Aufgabe."No.");
                      IF Bemerkung.FINDFIRST THEN BEGIN
                        REPEAT
                          Berichtstabelle.INIT;
                          Berichtstabelle.Tabelle := 'BEMERKUNG';
                          Berichtstabelle.Index := Bemerkung."No.";
                          Berichtstabelle."Belegnr." := Bemerkung."No.";
                          Berichtstabelle."Zeilennr." := Bemerkung."Line No.";
                          Berichtstabelle.Datum := Bemerkung.Date;
                          Berichtstabelle."Feld 1" := Bemerkung.Comment;
                          Berichtstabelle.INSERT;
                        UNTIL Bemerkung.NEXT = 0;
                      END;
                    UNTIL Aufgabe.NEXT = 0;
                  END;
                  z„hler := 0;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   IF Berichtstabelle.TABLECAPTION = 'Berichtstabelle' THEN
                     Berichtstabelle.DELETEALL;
                   ;ReportForNav.Post;
                 END;

    UseRequestPage=Yes;
  }
  DATASET
  {
    { 1   ;    ;DataItem;Textkopf            ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Datum,Index)
                                 WHERE(Tabelle=FILTER(PROJEKTMEMO|KONTAKTMEMO|AUFGABE));
               OnAfterGetRecord=BEGIN
                                  z„hler := z„hler + 1;
                                END;
                                 }

    { 2   ;1   ;Column  ;Startdatum          ;
               SourceExpr=Startdatum }

    { 3   ;1   ;Column  ;Enddatum            ;
               SourceExpr=Enddatum }

    { 4   ;1   ;Column  ;USERID              ;
               SourceExpr=USERID }

    { 5   ;1   ;Column  ;WORKDATE            ;
               SourceExpr=WORKDATE }

    { 6   ;1   ;Column  ;ReportForNavPageNo  ;
               SourceExpr=ReportForNav.PageNo }

    { 7   ;1   ;Column  ;Index_Textkopf      ;
               SourceExpr=Index }

    { 8   ;1   ;Column  ;Feld2_Textkopf      ;
               SourceExpr="Feld 2" }

    { 9   ;1   ;Column  ;Feld1_Textkopf      ;
               SourceExpr="Feld 1" }

    { 10  ;1   ;Column  ;Feld11_Textkopf     ;
               SourceExpr="Feld 11" }

    { 11  ;1   ;Column  ;Feld18_Textkopf     ;
               SourceExpr="Feld 18" }

    { 12  ;1   ;Column  ;Feld10_Textkopf     ;
               SourceExpr="Feld 10" }

    { 13  ;1   ;Column  ;Feld6_Textkopf      ;
               SourceExpr="Feld 6" }

    { 14  ;1   ;Column  ;zahler              ;
               SourceExpr=z„hler }

    { 15  ;1   ;DataItem;Textzeile           ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(MEMOZEILE|BEMERKUNG));
               DataItemLink=Index=FIELD(Index) }

    { 16  ;2   ;Column  ;Feld1_Textzeile     ;
               SourceExpr="Feld 1" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140004;2;Field     ;
                  CaptionML=DEU=Datum von:;
                  SourceExpr=Startdatum }

      { 1140006;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=Enddatum }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Projekt@1140001 : Record 5071;
      Ansprech@1140002 : Record 50005;
      Cont@1140004 : Record 5050;
      Aufgabe@1140011 : Record 5080;
      Bemerkung@1140012 : Record 5061;
      Memokopf@1140006 : Record 50003;
      Memozeile@1140009 : Record 50004;
      Berichtstabelle@1140010 : Record 50037;
      Projektname@1140003 : Text[50];
      Fhrungsname@1140005 : Text[50];
      Startdatum@1140000 : Date;
      Enddatum@1140008 : Date;
      z„hler@1140007 : Integer;
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionTextkopf_Body2@5082(VAR Textkopf@1000000000 : Record 50037);
    BEGIN
      WITH Textkopf DO BEGIN
        ReportForNav.ShowOutput(Textkopf.Tabelle = 'PROJEKTMEMO');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTextkopf_Body3@5083(VAR Textkopf@1000000000 : Record 50037);
    BEGIN
      WITH Textkopf DO BEGIN
        ReportForNav.ShowOutput(Textkopf.Tabelle = 'KONTAKTMEMO');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTextkopf_Body4@5084(VAR Textkopf@1000000000 : Record 50037);
    BEGIN
      WITH Textkopf DO BEGIN
        ReportForNav.ShowOutput(Textkopf.Tabelle = 'AUFGABE');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTextkopf_Footer5@5085(VAR Textkopf@1000000000 : Record 50037);
    BEGIN
      WITH Textkopf DO BEGIN
        IF Enddatum = 0D THEN
          Enddatum := WORKDATE;
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Textkopf': CASE SectionId OF
          'Body2': OnPreSectionTextkopf_Body2(Textkopf);
          'Body3': OnPreSectionTextkopf_Body3(Textkopf);
          'Body4': OnPreSectionTextkopf_Body4(Textkopf);
          'Footer5': OnPreSectionTextkopf_Footer5(Textkopf);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>90f22772-c293-44c6-80de-2b05abcfcc19</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>a65df41a-1daf-4084-9079-934cdbba2c4b</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Startdatum">
          <DataField>Startdatum</DataField>
        </Field>
        <Field Name="Enddatum">
          <DataField>Enddatum</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="WORKDATE">
          <DataField>WORKDATE</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="Index_Textkopf">
          <DataField>Index_Textkopf</DataField>
        </Field>
        <Field Name="Feld2_Textkopf">
          <DataField>Feld2_Textkopf</DataField>
        </Field>
        <Field Name="Feld1_Textkopf">
          <DataField>Feld1_Textkopf</DataField>
        </Field>
        <Field Name="Feld11_Textkopf">
          <DataField>Feld11_Textkopf</DataField>
        </Field>
        <Field Name="Feld18_Textkopf">
          <DataField>Feld18_Textkopf</DataField>
        </Field>
        <Field Name="Feld10_Textkopf">
          <DataField>Feld10_Textkopf</DataField>
        </Field>
        <Field Name="Feld6_Textkopf">
          <DataField>Feld6_Textkopf</DataField>
        </Field>
        <Field Name="zahler">
          <DataField>zahler</DataField>
        </Field>
        <Field Name="Feld1_Textzeile">
          <DataField>Feld1_Textzeile</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

