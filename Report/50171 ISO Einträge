OBJECT Report 50171 ISO Eintr„ge
{
  OBJECT-PROPERTIES
  {
    Date=16.05.17;
    Time=14:58:58;
    Modified=Yes;
    Version List=TOPAS,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  IF Berichtstabelle.TABLECAPTION <> 'Berichtstabelle' THEN
                    ERROR('Sicherheitssperre verhindert Ausfhrung dieses Berichtes.');
                  Berichtstabelle.RESET;
                  IF Berichtstabelle.ISEMPTY = FALSE THEN
                    BEGIN
                      REPEAT
                        Berichtstabelle.RESET;
                        IF Berichtstabelle.ISEMPTY = FALSE THEN
                        SLEEP(500);
                      UNTIL Berichtstabelle.ISEMPTY = TRUE;
                    END;
                  Memokopf.RESET;
                  Memokopf.SETFILTER(Memokopf.ISO,'%1',TRUE);
                  Memokopf.SETFILTER(Memokopf."Kampagnennr.",'<>%1','');
                  IF (Startdatum<>0D) AND (Enddatum=0D) THEN
                    Memokopf.SETFILTER(Memokopf.Memodatum,'>=%1',Startdatum);
                  IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Memokopf.Memodatum,'>=%1&<=%2',Startdatum,Enddatum);
                  IF (Startdatum=0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Memokopf.Memodatum,'<=%1',Enddatum);
                  IF Memokopf.FINDFIRST THEN
                    BEGIN
                      REPEAT
                        Berichtstabelle.INIT;
                          Berichtstabelle.Tabelle := 'PROJEKTMEMO';
                          Berichtstabelle.Index := Memokopf."Memonr.";
                          Berichtstabelle.Datum := Memokopf.Anlagedatum;
                          Berichtstabelle."Belegnr." := Memokopf."Memonr.";
                          Berichtstabelle."Feld 1" := Memokopf.Memokurztext;
                          Berichtstabelle."Feld 2" := Memokopf."Kampagnennr.";
                          Berichtstabelle."Feld 6" := Memokopf."Angelegt von";
                          Berichtstabelle."Feld 18" := Memokopf.Memodatum;
                          Projekt.SETFILTER(Projekt."No.",Memokopf."Kampagnennr.");
                          IF Projekt.FINDFIRST THEN BEGIN
                               Berichtstabelle."Feld 11" := Projekt.Description;
                            Ansprech.SETFILTER(Ansprech."Kampagnennr.",Projekt."No.");
                            Ansprech.SETFILTER(Fhrungsrolle,'%1',TRUE);
                            IF Ansprech.FINDFIRST THEN BEGIN
                               Ansprech.CALCFIELDS(Mandantenname);
                               Berichtstabelle."Feld 10" := Ansprech.Mandantenname;
                            END;
                          END;
                        Berichtstabelle.INSERT;
                        Memozeile.RESET;
                        Memozeile.SETFILTER(Memozeile."Memonr.",'%1',Memokopf."Memonr.");
                        IF Memozeile.FINDFIRST THEN
                          BEGIN
                            REPEAT
                              Berichtstabelle.INIT;
                                Berichtstabelle.Tabelle := 'MEMOZEILE';
                                Berichtstabelle.Index := Memozeile."Memonr.";
                                Berichtstabelle."Belegnr." := Memozeile."Memonr.";
                                Berichtstabelle."Zeilennr." := Memozeile."Zeilennr.";
                                Berichtstabelle."Feld 1" := Memozeile.Bemerkung;
                              Berichtstabelle.INSERT;
                            UNTIL Memozeile.NEXT = 0;
                          END;
                      UNTIL Memokopf.NEXT = 0;
                    END;
                  Memokopf.RESET;
                  Memokopf.SETFILTER(Memokopf.ISO,'%1',TRUE);
                  Memokopf.SETFILTER(Memokopf."Mandantennr.",'<>%1','');
                  IF (Startdatum<>0D) AND (Enddatum=0D) THEN
                    Memokopf.SETFILTER(Memokopf.Memodatum,'>=%1',Startdatum);
                  IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Memokopf.Memodatum,'>=%1&<=%2',Startdatum,Enddatum);
                  IF (Startdatum=0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Memokopf.Memodatum,'<=%1',Enddatum);
                  IF Memokopf.FINDFIRST THEN
                    BEGIN
                      REPEAT
                        Berichtstabelle.INIT;
                          Berichtstabelle.Tabelle := 'KONTAKTMEMO';
                          Berichtstabelle.Index := Memokopf."Memonr.";
                          Berichtstabelle.Datum := Memokopf.Anlagedatum;
                          Berichtstabelle."Belegnr." := Memokopf."Memonr.";
                          Berichtstabelle."Feld 1" := Memokopf.Memokurztext;
                          Berichtstabelle."Feld 2" := Memokopf."Mandantennr.";
                          Berichtstabelle."Feld 6" := Memokopf."Angelegt von";
                          Berichtstabelle."Feld 18" := Memokopf.Memodatum;
                          Cont.SETFILTER(Cont."No.",'%1',Memokopf."Mandantennr.");
                          IF Cont.FINDFIRST THEN
                            Berichtstabelle."Feld 10" := Cont.Name;
                        Berichtstabelle.INSERT;
                        Memozeile.RESET;
                        Memozeile.SETFILTER(Memozeile."Memonr.",'%1',Memokopf."Memonr.");
                        IF Memozeile.FINDFIRST THEN
                          BEGIN
                            REPEAT
                              Berichtstabelle.INIT;
                                Berichtstabelle.Tabelle := 'MEMOZEILE';
                                Berichtstabelle.Index := Memozeile."Memonr.";
                                Berichtstabelle."Belegnr." := Memozeile."Memonr.";
                                Berichtstabelle."Zeilennr." := Memozeile."Zeilennr.";
                                Berichtstabelle."Feld 1" := Memozeile.Bemerkung;
                              Berichtstabelle.INSERT;
                            UNTIL Memozeile.NEXT = 0;
                          END;
                      UNTIL Memokopf.NEXT = 0;
                    END;
                  Aufgabe.RESET;
                  Aufgabe.SETFILTER(Aufgabe."System To-do Type",'%1',Aufgabe."System To-do Type"::Organizer);
                  Aufgabe.SETFILTER(Aufgabe.ISO,'%1',TRUE);
                  IF (Startdatum<>0D) AND (Enddatum=0D) THEN
                    Aufgabe.SETFILTER(Aufgabe."Erstellt am",'>=%1',Startdatum);
                  IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
                    Aufgabe.SETFILTER(Aufgabe."Erstellt am",'>=%1&<=%2',Startdatum,Enddatum);
                  IF (Startdatum=0D) AND (Enddatum<>0D) THEN
                    Aufgabe.SETFILTER(Aufgabe."Erstellt am",'<=%1',Enddatum);
                  IF Aufgabe.FINDFIRST THEN
                    BEGIN
                      REPEAT
                        Berichtstabelle.INIT;
                          Berichtstabelle.Tabelle := 'AUFGABE';
                          Berichtstabelle.Index := Aufgabe."No.";
                          IF Aufgabe."Erstellt am" <> 0D THEN
                            Berichtstabelle.Datum := Aufgabe."Erstellt am"
                          ELSE
                            Berichtstabelle.Datum := Aufgabe.Date;
                          Berichtstabelle."Belegnr." := Aufgabe."No.";
                          Berichtstabelle."Feld 1" := Aufgabe.Description;
                          Berichtstabelle."Feld 2" := Aufgabe."Contact Company No.";
                          Berichtstabelle."Feld 6" := Aufgabe.Ersteller;
                          Aufgabe.CALCFIELDS("Contact Company Name");
                          Berichtstabelle."Feld 10" := Aufgabe."Contact Company Name";
                          Berichtstabelle."Feld 18" := Aufgabe.Date;
                        Berichtstabelle.INSERT;
                        Bemerkung.RESET;
                        Bemerkung.SETFILTER(Bemerkung."Table Name",'Aufgabe');
                        Bemerkung.SETFILTER(Bemerkung."No.",'%1',Aufgabe."No.");
                        IF Bemerkung.FINDFIRST THEN
                          BEGIN
                            REPEAT
                              Berichtstabelle.INIT;
                                Berichtstabelle.Tabelle := 'BEMERKUNG';
                                Berichtstabelle.Index := Bemerkung."No.";
                                Berichtstabelle."Belegnr." := Bemerkung."No.";
                                Berichtstabelle."Zeilennr." := Bemerkung."Line No.";
                                Berichtstabelle.Datum := Bemerkung.Date;
                                Berichtstabelle."Feld 1" := Bemerkung.Comment;
                              Berichtstabelle.INSERT;
                            UNTIL Bemerkung.NEXT = 0;
                          END;
                      UNTIL Aufgabe.NEXT = 0;
                    END;
                  z„hler := 0;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   IF Berichtstabelle.TABLECAPTION = 'Berichtstabelle' THEN
                     Berichtstabelle.DELETEALL;
                   ;ReportForNav.Post;
                 END;

    UseRequestPage=Yes;
  }
  DATASET
  {
    { 1   ;    ;DataItem;Textkopf            ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Datum,Index)
                                 WHERE(Tabelle=FILTER(PROJEKTMEMO|KONTAKTMEMO|AUFGABE));
               OnAfterGetRecord=BEGIN
                                  z„hler := z„hler + 1;
                                END;
                                 }

    { 2   ;1   ;Column  ;Startdatum          ;
               SourceExpr=Startdatum }

    { 3   ;1   ;Column  ;Enddatum            ;
               SourceExpr=Enddatum }

    { 4   ;1   ;Column  ;USERID              ;
               SourceExpr=USERID }

    { 5   ;1   ;Column  ;WORKDATE            ;
               SourceExpr=WORKDATE }

    { 6   ;1   ;Column  ;ReportForNavPageNo  ;
               SourceExpr=ReportForNav.PageNo }

    { 7   ;1   ;Column  ;Index_Textkopf      ;
               SourceExpr=Index }

    { 8   ;1   ;Column  ;Feld2_Textkopf      ;
               SourceExpr="Feld 2" }

    { 9   ;1   ;Column  ;Feld1_Textkopf      ;
               SourceExpr="Feld 1" }

    { 10  ;1   ;Column  ;Feld11_Textkopf     ;
               SourceExpr="Feld 11" }

    { 11  ;1   ;Column  ;Feld18_Textkopf     ;
               SourceExpr="Feld 18" }

    { 12  ;1   ;Column  ;Feld10_Textkopf     ;
               SourceExpr="Feld 10" }

    { 13  ;1   ;Column  ;Feld6_Textkopf      ;
               SourceExpr="Feld 6" }

    { 14  ;1   ;Column  ;zahler              ;
               SourceExpr=z„hler }

    { 15  ;1   ;DataItem;Textzeile           ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(MEMOZEILE|BEMERKUNG));
               DataItemLink=Index=FIELD(Index) }

    { 16  ;2   ;Column  ;Feld1_Textzeile     ;
               SourceExpr="Feld 1" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140004;2;Field     ;
                  CaptionML=DEU=Datum von:;
                  SourceExpr=Startdatum }

      { 1140006;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=Enddatum }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Projekt@1140001 : Record 5071;
      Ansprech@1140002 : Record 50005;
      Cont@1140004 : Record 5050;
      Aufgabe@1140011 : Record 5080;
      Bemerkung@1140012 : Record 5061;
      Memokopf@1140006 : Record 50003;
      Memozeile@1140009 : Record 50004;
      Berichtstabelle@1140010 : Record 50037;
      Projektname@1140003 : Text[50];
      Fhrungsname@1140005 : Text[50];
      Startdatum@1140000 : Date;
      Enddatum@1140008 : Date;
      z„hler@1140007 : Integer;
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionTextkopf_Body2@5082(VAR Textkopf@1000000000 : Record 50037);
    BEGIN
      WITH Textkopf DO BEGIN
        ReportForNav.ShowOutput(Textkopf.Tabelle = 'PROJEKTMEMO');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTextkopf_Body3@5083(VAR Textkopf@1000000000 : Record 50037);
    BEGIN
      WITH Textkopf DO BEGIN
        ReportForNav.ShowOutput(Textkopf.Tabelle = 'KONTAKTMEMO');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTextkopf_Body4@5084(VAR Textkopf@1000000000 : Record 50037);
    BEGIN
      WITH Textkopf DO BEGIN
        ReportForNav.ShowOutput(Textkopf.Tabelle = 'AUFGABE');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTextkopf_Footer5@5085(VAR Textkopf@1000000000 : Record 50037);
    BEGIN
      WITH Textkopf DO BEGIN
        IF Enddatum = 0D THEN
          Enddatum := WORKDATE;
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Textkopf': CASE SectionId OF
          'Body2': OnPreSectionTextkopf_Body2(Textkopf);
          'Body3': OnPreSectionTextkopf_Body3(Textkopf);
          'Body4': OnPreSectionTextkopf_Body4(Textkopf);
          'Footer5': OnPreSectionTextkopf_Footer5(Textkopf);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>90f22772-c293-44c6-80de-2b05abcfcc19</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>a65df41a-1daf-4084-9079-934cdbba2c4b</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Startdatum">
          <DataField>Startdatum</DataField>
        </Field>
        <Field Name="Enddatum">
          <DataField>Enddatum</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="WORKDATE">
          <DataField>WORKDATE</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="Index_Textkopf">
          <DataField>Index_Textkopf</DataField>
        </Field>
        <Field Name="Feld2_Textkopf">
          <DataField>Feld2_Textkopf</DataField>
        </Field>
        <Field Name="Feld1_Textkopf">
          <DataField>Feld1_Textkopf</DataField>
        </Field>
        <Field Name="Feld11_Textkopf">
          <DataField>Feld11_Textkopf</DataField>
        </Field>
        <Field Name="Feld18_Textkopf">
          <DataField>Feld18_Textkopf</DataField>
        </Field>
        <Field Name="Feld10_Textkopf">
          <DataField>Feld10_Textkopf</DataField>
        </Field>
        <Field Name="Feld6_Textkopf">
          <DataField>Feld6_Textkopf</DataField>
        </Field>
        <Field Name="zahler">
          <DataField>zahler</DataField>
        </Field>
        <Field Name="Feld1_Textzeile">
          <DataField>Feld1_Textzeile</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

