OBJECT Report 50092 Job Daten Guv_Bilanz -> Excel
{
  OBJECT-PROPERTIES
  {
    Date=07.08.18;
    Time=11:49:11;
    Modified=Yes;
    Version List=wird von Ulf benutzt;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    OnInitReport=BEGIN
                   //   Hier sind die Datumsangaben fr die Berichtsauswertung jedes Jahr anzupassen
                   //   auch in Funktion 'Systeme()' und 'Daten_Nav_Systeme' das Datum ( erste Zeile ) „ndern.
                   PeriodStartDate[1] := 010718D;
                   var_jahr[1] := 010717D;
                   Abgrenz_Datum := 300619D;
                 END;

    OnPreReport=BEGIN

                  // //Champs;
                  Daten_Nav_Champs;
                  // //Vorl_GuV;
                  Daten_Nav_GuV;
                  // //Rohbilanz;
                  Daten_Nav_Bil;
                  // //    //Systeme_Test;
                  // //    //Rohbilanz_Test;
                  // //Systeme;
                  Daten_Nav_Systeme;
                  // //Dienstleistung;
                  Daten_Nav_Dienstleistung;
                  // //Umsatz;
                  Daten_Nav_UM;
                  // //Hersteller;
                  // //Daten_Nav_Hersteller;
                  // //    //Champs_neu;

                  Daten_Nav_AE;
                END;

    OnPostReport=BEGIN
                   MESSAGE('Report 50092 Job Daten GuV_Bilanz ist beendet. Status = OK');
                 END;

    UseRequestPage=No;
  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Excel@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Unknown Class";
      Book@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Unknown Class";
      Range@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Unknown Class";
      Sheet@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Unknown Class";
      wshFile@1000000000 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      k@1140004 : Text[30];
      j@1140005 : Text[30];
      i@1140006 : Integer;
      u@1140120 : Integer;
      w@1000000001 : Integer;
      e@1000000002 : Integer;
      AU_PER@1140007 : Record 50019;
      AU_PER1@1140008 : Record 50019;
      vkcode@1140009 : Record 13;
      vkcode1@1140123 : Record 13;
      vkz@1140029 : Record 37;
      VKRK@1140114 : Record 112;
      VKRZ@1140115 : Record 113;
      VKGK@1140116 : Record 114;
      VKGZ@1140117 : Record 115;
      Artikel@1140118 : Record 27;
      Belege@1140124 : Record 50010;
      Herstell@1140119 : Record 5720;
      PeriodStartDate@1140010 : ARRAY [14] OF Date;
      PeriodLength@1140026 : DateFormula;
      var_bal@1140011 : ARRAY [13] OF Decimal;
      var_bal_total@1140027 : ARRAY [13] OF Decimal;
      var_balance@1140012 : ARRAY [13] OF Decimal;
      var_balance_monat@1000000025 : ARRAY [13] OF Decimal;
      var_balance_total@1140013 : ARRAY [13] OF Decimal;
      v_aubest@1140014 : ARRAY [13] OF Decimal;
      v_aubest_total@1140015 : ARRAY [13] OF Decimal;
      v_aubest1@1140016 : ARRAY [13] OF Decimal;
      v_aubest1_total@1140017 : ARRAY [13] OF Decimal;
      v_summe@1140018 : Decimal;
      v_summe_total@1140019 : Decimal;
      v_summe_aur@1140020 : Decimal;
      v_summe_aur1@1140022 : Decimal;
      v_sum_aubest@1140021 : Decimal;
      v_au_wert@1140023 : Decimal;
      v_aur_wert@1140024 : Decimal;
      v_sum_au@1140028 : Decimal;
      v_sum_au_rahmen@1140025 : Decimal;
      sachkonten@1140030 : Record 15;
      sachposten@1140032 : Record 17;
      service@1140093 : Record 50024;
      lief@1140094 : Record 111;
      var_balance_gesamt_konto@1140031 : Decimal;
      var_balance_total_summe@1140033 : Decimal;
      liefnr@1140092 : Code[10];
      liefzeilennr@1140091 : Integer;
      anzahllief@1140090 : Integer;
      stich_monat@1140089 : Integer;
      stich_jahr@1140088 : Integer;
      ablauf_monat@1140087 : Integer;
      ablauf_jahr@1140086 : Integer;
      start_monat@1140085 : Integer;
      start_jahr@1140084 : Integer;
      LZ_jahr@1140083 : Integer;
      LZ_monat@1140082 : Integer;
      LZ_jahr_datum@1140081 : Integer;
      LZ_monat_datum@1140080 : Integer;
      LZ_rest@1140079 : Integer;
      LZ_rest_datum@1140078 : Integer;
      LZ@1140077 : Integer;
      Rech_tagessatz@1140076 : Boolean;
      rech@1140075 : Record 50010;
      alte_lief@1000000003 : Record 50008;
      deb@1140074 : Record 18;
      Sum_ek@1140073 : Decimal;
      Sum_vk@1140072 : Decimal;
      LZ_tage@1140071 : Integer;
      LZ_tage_stich@1140070 : Integer;
      LZ_tage_abgrenz@1140069 : Decimal;
      LZ_tage_bewert@1140068 : Integer;
      frei_lager@1140067 : Boolean;
      champsauswert@1140066 : Boolean;
      wartkopf@1140065 : Record 50011;
      GJ10_11_Neu@1140064 : Decimal;
      GJ11_12_Neu@1140063 : Decimal;
      GJ12_13_Neu@1140062 : Decimal;
      GJ13_14_Neu@1140061 : Decimal;
      GJ14_15_Neu@1140060 : Decimal;
      GJ15_16_Neu@1140059 : Decimal;
      GJ16_17_Neu@1140058 : Decimal;
      GJ17_18_Neu@1140057 : Decimal;
      GJ18_19_Neu@1140056 : Decimal;
      GJ19_20_Neu@1140055 : Decimal;
      GJ10_11_Verl@1140054 : Decimal;
      GJ11_12_Verl@1140053 : Decimal;
      GJ12_13_Verl@1140052 : Decimal;
      GJ13_14_Verl@1140051 : Decimal;
      GJ14_15_Verl@1140050 : Decimal;
      GJ15_16_Verl@1140049 : Decimal;
      GJ16_17_Verl@1140048 : Decimal;
      GJ17_18_Verl@1140047 : Decimal;
      GJ18_19_Verl@1140046 : Decimal;
      GJ19_20_Verl@1140045 : Decimal;
      GJ10_11Abgel@1140044 : Decimal;
      GJ11_12Abgel@1140043 : Decimal;
      GJ12_13Abgel@1140042 : Decimal;
      GJ13_14Abgel@1140041 : Decimal;
      GJ14_15Abgel@1140040 : Decimal;
      GJ15_16Abgel@1140039 : Decimal;
      GJ16_17Abgel@1140038 : Decimal;
      GJ17_18Abgel@1140037 : Decimal;
      GJ18_19Abgel@1140036 : Decimal;
      GJ19_20Abgel@1140035 : Decimal;
      var_jahr@1140034 : ARRAY [30] OF Date;
      var_startjahr@1140106 : Date;
      champsstat@1140105 : Boolean;
      var_sj_eingabe@1140104 : Date;
      var_jahr_wert@1140103 : ARRAY [30] OF Decimal;
      LZ_tage_jahr@1140102 : ARRAY [30] OF Integer;
      var_jahr_gesamt@1140101 : ARRAY [30] OF Decimal;
      var_jahr_neu@1140100 : ARRAY [30] OF Decimal;
      var_jahr_verl„ng@1140099 : ARRAY [30] OF Decimal;
      var_jahr_abgelauf@1140098 : ARRAY [30] OF Decimal;
      v_rohbilanz@1140097 : Boolean;
      v_vorl_GuV@1140096 : Boolean;
      v_AE_per_Periode@1140095 : Boolean;
      Abgrenzung@1140108 : Boolean;
      Abgrenz_Datum@1140107 : Date;
      datum_zeit@1140109 : DateTime;
      sum_gj_12@1140110 : Decimal;
      sum_gj_36@1140111 : Decimal;
      sum_gj_sonst@1140112 : Decimal;
      sum_gj_gesamt@1140113 : Decimal;
      v_Daten_Nav_GuV@1140121 : Text[30];
      v_sachpostsum@1140122 : Decimal;
      v_kein_VCode@1140125 : Text[10];
      TempExcelBuffer@1000000014 : TEMPORARY Record 370;
      FileMgt@1000000013 : Codeunit 419;
      ServerFileName@1000000012 : Text;
      SheetName@1000000011 : Text[250];
      DoUpdateExistingWorksheet@1000000010 : Boolean;
      Testmode@1000000009 : Boolean;
      Window@1000000008 : Dialog;
      RecNo@1000000007 : Integer;
      TotalRecNo@1000000006 : Integer;
      RowNo@1000000005 : Integer;
      ColumnNo@1000000004 : Integer;
      Text000@1000000020 : TextConst 'DEU=Daten werden analysiert ...\\;ENU=Analyzing Data...\\';
      Text001@1000000019 : TextConst 'DEU=Hersteller;ENU=Manufacturer';
      Text002@1000000018 : TextConst 'DEU=Arbeitsmappe aktualisieren;ENU=Update Workbook';
      ExcelFileExtensionTok@1000000017 : TextConst '@@@={Locked};DEU=.xlsx;ENU=.xlsx';
      NewFileDirectory@1000000016 : TextConst 'DEU=F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\';
      Text003@1000000015 : TextConst 'DEU=Excel Export erfolgreich abgeschlossen.';
      AEMTL@1000000021 : Record 50017;
      vkk@1000000022 : Record 36;
      vkk_arch@1000000023 : Record 5107;
      vkz_arch@1000000024 : Record 5108;

    PROCEDURE Champs@1140003();
    BEGIN
      CREATE (Excel,FALSE,TRUE);
      CREATE (wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('B:O').NumberFormat := '0,00';
      Sheet.Range('A1').Value := 'šbersicht der Champsvertr„ge per '; // šberschriftszeile
      Sheet.Range('A2').Value := WORKDATE;
      //  PeriodStartDate[i + 1] := CALCDATE('1M',PeriodStartDate[i]);
      FOR i:=1 TO 12 DO
      BEGIN
        var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);
        Sheet.Range('C4').Value :='GJ '+FORMAT(var_jahr[1]);
        Sheet.Range('D4').Value :='GJ '+FORMAT(var_jahr[2]);
        Sheet.Range('E4').Value :='GJ '+FORMAT(var_jahr[3]);
        Sheet.Range('F4').Value :='GJ '+FORMAT(var_jahr[4]);
        Sheet.Range('G4').Value :='GJ '+FORMAT(var_jahr[5]);
        Sheet.Range('H4').Value :='GJ '+FORMAT(var_jahr[6]);
        Sheet.Range('I4').Value :='GJ '+FORMAT(var_jahr[7]);
        Sheet.Range('J4').Value :='GJ '+FORMAT(var_jahr[8]);
        Sheet.Range('K4').Value :='GJ '+FORMAT(var_jahr[9]);
        Sheet.Range('L4').Value :='GJ '+FORMAT(var_jahr[10]);
        Sheet.Range('M4').Value :='GJ '+FORMAT(var_jahr[11]);
        Sheet.Range('N4').Value :='GJ '+FORMAT(var_jahr[12]);
      END;
      //  Ende šberschriftenanlage
      j := '5';                                   // <- Import in excel ab Zeile 3
      service.RESET;
      service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      service.SETFILTER(service.Art,'%1',service.Art::Service);
      service.SETFILTER(service.Inaktiv,'%1',FALSE);
      service.SETFILTER(service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      //Service.SETFILTER(Service."Hauptwartungsvertragsnr.",'%1|%2','SV101035','SV101119');
      //Service.SETFILTER(Service."Hauptwartungsvertragsnr.",'%1','SV101119');
      //Service.SETFILTER(Service."Hauptwartungsvertragsnr.",'%1','SV101035');
      IF service.FIND('-') THEN BEGIN  //xx1

      REPEAT
        LZ_rest:=0;
        Artikel.RESET;
        Artikel.SETFILTER(Artikel."No.",'%1',service."SUP Artikelnr.");
        Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
        IF Artikel.FINDFIRST THEN BEGIN   //xx2
      //IF ((service."SUP Artikelnr."='ACTS-ADV-HWREPLAC#01') OR (service."SUP Artikelnr."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //END ELSE BEGIN
      //IF ((service."SUP Artikelnr."='ACTS-SUPP-24X7/SO#01') OR (service."SUP Artikelnr."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //END ELSE BEGIN
      //IF ((service."SUP Artikelnr."='ACTS-SUPP-9X5/SOF#01') OR (service."SUP Artikelnr."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //END ELSE BEGIN
            lief.RESET;
            lief.SETFILTER(lief."Document No.",'%1',service."Nr.");
            lief.SETFILTER(lief."Line No.",'%1',service."Belegzeilennr.");
            lief.SETFILTER(lief.Quantity,'<>%1',0);
            lief.SETFILTER(lief."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
            lief.SETFILTER(lief."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
            IF lief.FINDFIRST THEN BEGIN  //xx3
      //        IF ((lief."No."='ACTS-ADV-HWREPLAC#01') OR (lief."No."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-24X7/SO#01') OR (lief."No."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-9X5/SOF#01') OR (lief."No."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //        END ELSE BEGIN
              IF (liefnr=lief."Document No.") AND (liefzeilennr=lief."Line No.") THEN BEGIN   //xx4
              END  //xx4
              ELSE BEGIN  //xx4_1
                liefnr:=lief."Document No.";
                liefzeilennr:=lief."Line No.";
                FOR i:=1 TO 12 DO
                  BEGIN   //xx5
                    LZ_tage:= (service."Ablaufdatum Serviceleistung"- service.Lizenzdatum);
                    var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);
      //  Gesamt im Jahr abgeschlossen
      //  Hier wird das Buchungsdatum benutzt
                    IF (service.Belegdatum>(var_jahr[i])) AND (service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_gesamt[i]:=var_jahr_gesamt[i]+(lief.Quantity*lief."VK-Preis (MW)");
      //  Ende Gesamt im Jahr abgeschlossen
      //  Gesamt im Jahr neu abgeschlossen
                    IF service.Verl„ngerung=FALSE THEN BEGIN   //xx6
                      IF (service.Belegdatum>(var_jahr[i])) AND (service.Belegdatum<(var_jahr[i]+365)) THEN
                      var_jahr_neu[i]:=var_jahr_neu[i]+(lief.Quantity*lief."VK-Preis (MW)");
                    END;   //xx6
      //  Ende Gesamt im Jahr neu abgeschlossen
      //  Gesamt im Jahr verl„ngert
                   IF service.Verl„ngerung=TRUE THEN BEGIN   //xx7
                     IF (service.Belegdatum>(var_jahr[i])) AND (service.Belegdatum<(var_jahr[i]+365)) THEN
                     var_jahr_verl„ng[i]:=var_jahr_verl„ng[i]+(lief.Quantity*lief."VK-Preis (MW)");
                   END;   //xx7
      //  Ende Gesamt im Jahr verl„ngert
      //  Gesamt im Jahr abgelaufen
                   IF (service."Ablaufdatum Serviceleistung">(var_jahr[i])) AND (service."Ablaufdatum Serviceleistung"<(var_jahr[i]+365)) THEN
                   var_jahr_abgelauf[i]:=var_jahr_abgelauf[i]+(lief.Quantity*lief."VK-Preis (MW)");
      //  Ende Gesamt im Jahr abgelaufen
       //   Laufzeitenberechnung  ******************************************************************
                  IF ((service.Lizenzdatum>=(var_jahr[i])) AND (service.Lizenzdatum<=(var_jahr[i]+365))) THEN
                  BEGIN   //xx8
                    LZ_tage_jahr[i]:=var_jahr[i]+365-service.Lizenzdatum;
                    var_jahr_wert[i]:=var_jahr_wert[i]+((lief.Quantity*lief."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx8
                  IF (service."Ablaufdatum Serviceleistung">(var_jahr[i]+365)) AND ((var_jahr[i])>service.Lizenzdatum) THEN
                  BEGIN   //xx9
                    LZ_tage_jahr[i]:=var_jahr[i]+365-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((lief.Quantity*lief."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx9
                  IF ((service."Ablaufdatum Serviceleistung"-1>(var_jahr[i])) AND (service."Ablaufdatum Serviceleistung"-1<(var_jahr[i]+365))) THEN
                  BEGIN   //xx10
                    LZ_tage_jahr[i]:=service."Ablaufdatum Serviceleistung"-1-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((lief.Quantity*lief."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx10
      //  ENDE Laufzeitenberechnung ******************************************************************
      //       END;
      //       END;
      //       END;
              END;  //xx5
            END; //xx4_1
      // END;
      // END;



      {    END ELSE BEGIN   //xx11
      // Hier beginnt die Abfrage mit den historischen Lieferscheinen aus Tabelle Beleghistorie
            alte_lief.RESET;
            alte_lief.SETFILTER(alte_lief."Belegnr.",'%1',service."Nr.");
            alte_lief.SETFILTER(alte_lief."Zeilennr.",'%1',service."Belegzeilennr.");
            alte_lief.SETFILTER(alte_lief.Menge,'<>%1',0);
            alte_lief.SETFILTER(alte_lief.Herstellercode,'<>%1&<>%2','5710','5720');
            alte_lief.SETFILTER(alte_lief."Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
            IF alte_lief.FINDFIRST THEN BEGIN  //xx12
      //        IF ((lief."No."='ACTS-ADV-HWREPLAC#01') OR (lief."No."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-24X7/SO#01') OR (lief."No."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-9X5/SOF#01') OR (lief."No."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //        END ELSE BEGIN
              IF (liefnr=alte_lief."Belegnr.") AND (liefzeilennr=alte_lief."Zeilennr.") THEN BEGIN   //xx13
              END  //xx13
              ELSE BEGIN  //xx13_1
                liefnr:=alte_lief."Belegnr.";
                liefzeilennr:=alte_lief."Zeilennr.";
                  FOR i:=1 TO 12 DO
                  BEGIN   //xx14
                    LZ_tage:= (service."Ablaufdatum Serviceleistung"- service.Lizenzdatum);
                    var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);
      //  Gesamt im Jahr abgeschlossen
      //  Hier wird das Buchungsdatum benutzt
                    IF (service.Belegdatum>(var_jahr[i])) AND (service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_gesamt[i]:=var_jahr_gesamt[i]+(alte_lief."Betrag MW ohne Mwst.");
      //  Ende Gesamt im Jahr abgeschlossen
      //  Gesamt im Jahr neu abgeschlossen
                    IF service.Verl„ngerung=FALSE THEN BEGIN   //xx15
                      IF (service.Belegdatum>(var_jahr[i])) AND (service.Belegdatum<(var_jahr[i]+365)) THEN
                      var_jahr_neu[i]:=var_jahr_neu[i]+(alte_lief."Betrag MW ohne Mwst.");
                    END;    //xx15
      //  Ende Gesamt im Jahr neu abgeschlossen
      //  Gesamt im Jahr verl„ngert
                    IF service.Verl„ngerung=TRUE THEN BEGIN   //xx16
                      IF (service.Belegdatum>(var_jahr[i])) AND (service.Belegdatum<(var_jahr[i]+365)) THEN
                      var_jahr_verl„ng[i]:=var_jahr_verl„ng[i]+(alte_lief."Betrag MW ohne Mwst.");
                    END;  //xx16
      //  Ende Gesamt im Jahr verl„ngert
      //  Gesamt im Jahr abgelaufen
                    IF (service."Ablaufdatum Serviceleistung">(var_jahr[i])) AND (service."Ablaufdatum Serviceleistung"<(var_jahr[i]+365)) THEN
                    var_jahr_abgelauf[i]:=var_jahr_abgelauf[i]+(alte_lief."Betrag MW ohne Mwst.");
      //  Ende Gesamt im Jahr abgelaufen
       //   Laufzeitenberechnung  ******************************************************************
                    IF ((service.Lizenzdatum>=(var_jahr[i])) AND (service.Lizenzdatum<=(var_jahr[i]+365))) THEN
                    BEGIN    //xx17
                      LZ_tage_jahr[i]:=var_jahr[i]+365-service.Lizenzdatum;
                      var_jahr_wert[i]:=var_jahr_wert[i]+((alte_lief."Betrag MW ohne Mwst.")/LZ_tage*LZ_tage_jahr[i]);
                    END;   //xx17
                    IF (service."Ablaufdatum Serviceleistung">(var_jahr[i]+365)) AND ((var_jahr[i])>service.Lizenzdatum) THEN
                    BEGIN   //xx18
                      LZ_tage_jahr[i]:=var_jahr[i]+365-var_jahr[i];
                      var_jahr_wert[i]:=var_jahr_wert[i]+((alte_lief."Betrag MW ohne Mwst.")/LZ_tage*LZ_tage_jahr[i]);
                    END;   //xx18
                    IF ((service."Ablaufdatum Serviceleistung"-1>(var_jahr[i])) AND (service."Ablaufdatum Serviceleistung"-1<(var_jahr[i]+365))) THEN
                    BEGIN  //xx19
                      LZ_tage_jahr[i]:=service."Ablaufdatum Serviceleistung"-1-var_jahr[i];
                      var_jahr_wert[i]:=var_jahr_wert[i]+((alte_lief."Betrag MW ohne Mwst.")/LZ_tage*LZ_tage_jahr[i]);
                    END;  //xx19
                  END; //xx14
                END;  //xx13_1
              END;   //xx12
      }
            END;   //xx11
          END;   //xx3
      //  END;  //xx2
      UNTIL service.NEXT=0;
      END;   //xx1
      Sheet.Range('A6').Value :='Gesamt Jahr';
      Sheet.Range('C6').Value :=var_jahr_gesamt[1];
      Sheet.Range('D6').Value :=var_jahr_gesamt[2];
      Sheet.Range('E6').Value :=var_jahr_gesamt[3];
      Sheet.Range('F6').Value :=var_jahr_gesamt[4];
      Sheet.Range('G6').Value :=var_jahr_gesamt[5];
      Sheet.Range('H6').Value :=var_jahr_gesamt[6];
      Sheet.Range('I6').Value :=var_jahr_gesamt[7];
      Sheet.Range('J6').Value :=var_jahr_gesamt[8];
      Sheet.Range('K6').Value :=var_jahr_gesamt[9];
      Sheet.Range('L6').Value :=var_jahr_gesamt[10];
      Sheet.Range('M6').Value :=var_jahr_gesamt[11];
      Sheet.Range('N6').Value :=var_jahr_gesamt[12];
      Sheet.Range('A7').Value :='Gesamt Jahr neu';
      Sheet.Range('C7').Value :=var_jahr_neu[1];
      Sheet.Range('D7').Value :=var_jahr_neu[2];
      Sheet.Range('E7').Value :=var_jahr_neu[3];
      Sheet.Range('F7').Value :=var_jahr_neu[4];
      Sheet.Range('G7').Value :=var_jahr_neu[5];
      Sheet.Range('H7').Value :=var_jahr_neu[6];
      Sheet.Range('I7').Value :=var_jahr_neu[7];
      Sheet.Range('J7').Value :=var_jahr_neu[8];
      Sheet.Range('K7').Value :=var_jahr_neu[9];
      Sheet.Range('L7').Value :=var_jahr_neu[10];
      Sheet.Range('M7').Value :=var_jahr_neu[11];
      Sheet.Range('N7').Value :=var_jahr_neu[12];
      Sheet.Range('A8').Value :='Gesamt Jahr verl„ngert';
      Sheet.Range('C8').Value :=var_jahr_verl„ng[1];
      Sheet.Range('D8').Value :=var_jahr_verl„ng[2];
      Sheet.Range('E8').Value :=var_jahr_verl„ng[3];
      Sheet.Range('F8').Value :=var_jahr_verl„ng[4];
      Sheet.Range('G8').Value :=var_jahr_verl„ng[5];
      Sheet.Range('H8').Value :=var_jahr_verl„ng[6];
      Sheet.Range('I8').Value :=var_jahr_verl„ng[7];
      Sheet.Range('J8').Value :=var_jahr_verl„ng[8];
      Sheet.Range('K8').Value :=var_jahr_verl„ng[9];
      Sheet.Range('L8').Value :=var_jahr_verl„ng[10];
      Sheet.Range('M8').Value :=var_jahr_verl„ng[11];
      Sheet.Range('N8').Value :=var_jahr_verl„ng[12];
      Sheet.Range('A10').Value :='im Jahr ablaufend';
      Sheet.Range('C10').Value :=var_jahr_abgelauf[1];
      Sheet.Range('D10').Value :=var_jahr_abgelauf[2];
      Sheet.Range('E10').Value :=var_jahr_abgelauf[3];
      Sheet.Range('F10').Value :=var_jahr_abgelauf[4];
      Sheet.Range('G10').Value :=var_jahr_abgelauf[5];
      Sheet.Range('H10').Value :=var_jahr_abgelauf[6];
      Sheet.Range('I10').Value :=var_jahr_abgelauf[7];
      Sheet.Range('J10').Value :=var_jahr_abgelauf[8];
      Sheet.Range('K10').Value :=var_jahr_abgelauf[9];
      Sheet.Range('L10').Value :=var_jahr_abgelauf[10];
      Sheet.Range('M10').Value :=var_jahr_abgelauf[11];
      Sheet.Range('N10').Value :=var_jahr_abgelauf[12];
       {
      Sheet.Range('A12').Value :='Verl„ngert in % von Neuvertr„gen';
      IF ((var_jahr_verl„ng[1]<>0) AND (var_jahr_neu[1]<>0)) THEN
      Sheet.Range('C12').Value :=(var_jahr_verl„ng[1]/var_jahr_neu[1]*100);
      IF ((var_jahr_verl„ng[2]<>0) AND (var_jahr_neu[2]<>0)) THEN
      Sheet.Range('D12').Value :=(var_jahr_verl„ng[2]/var_jahr_neu[2]*100);
      IF ((var_jahr_verl„ng[3]<>0) AND (var_jahr_neu[3]<>0)) THEN
      Sheet.Range('E12').Value :=(var_jahr_verl„ng[3]/var_jahr_neu[3]*100);
      IF ((var_jahr_verl„ng[4]<>0) AND (var_jahr_neu[4]<>0)) THEN
      Sheet.Range('F12').Value :=(var_jahr_verl„ng[4]/var_jahr_neu[4]*100);
      IF ((var_jahr_verl„ng[5]<>0) AND (var_jahr_neu[5]<>0)) THEN
      Sheet.Range('G12').Value :=(var_jahr_verl„ng[5]/var_jahr_neu[5]*100);
      IF ((var_jahr_verl„ng[6]<>0) AND (var_jahr_neu[6]<>0)) THEN
      Sheet.Range('H12').Value :=(var_jahr_verl„ng[6]/var_jahr_neu[6]*100);
      IF ((var_jahr_verl„ng[7]<>0) AND (var_jahr_neu[7]<>0)) THEN
      Sheet.Range('I12').Value :=(var_jahr_verl„ng[7]/var_jahr_neu[7]*100);
      IF ((var_jahr_verl„ng[8]<>0) AND (var_jahr_neu[8]<>0)) THEN
      Sheet.Range('J12').Value :=(var_jahr_verl„ng[8]/var_jahr_neu[8]*100);
      IF ((var_jahr_verl„ng[9]<>0) AND (var_jahr_neu[9]<>0)) THEN
      Sheet.Range('K12').Value :=(var_jahr_verl„ng[9]/var_jahr_neu[9]*100);
      IF ((var_jahr_verl„ng[10]<>0) AND (var_jahr_neu[10]<>0)) THEN
      Sheet.Range('L12').Value :=(var_jahr_verl„ng[10]/var_jahr_neu[10]*100);
      IF ((var_jahr_verl„ng[11]<>0) AND (var_jahr_neu[11]<>0)) THEN
      Sheet.Range('M12').Value :=(var_jahr_verl„ng[11]/var_jahr_neu[11]*100);
      IF ((var_jahr_verl„ng[12]<>0) AND (var_jahr_neu[12]<>0)) THEN
      Sheet.Range('N12').Value :=(var_jahr_verl„ng[12]/var_jahr_neu[12]*100);
       }
      Sheet.Range('A13').Value :='Verl„ngert in % von Ablaufend';
      IF ((var_jahr_verl„ng[1]<>0) AND (var_jahr_abgelauf[1]<>0)) THEN
      Sheet.Range('C13').Value :=(var_jahr_verl„ng[1]/var_jahr_abgelauf[1]*100);
      IF ((var_jahr_verl„ng[2]<>0) AND (var_jahr_abgelauf[2]<>0)) THEN
      Sheet.Range('D13').Value :=(var_jahr_verl„ng[2]/var_jahr_abgelauf[2]*100);
      IF ((var_jahr_verl„ng[3]<>0) AND (var_jahr_abgelauf[3]<>0)) THEN
      Sheet.Range('E13').Value :=(var_jahr_verl„ng[3]/var_jahr_abgelauf[3]*100);
      IF ((var_jahr_verl„ng[4]<>0) AND (var_jahr_abgelauf[4]<>0)) THEN
      Sheet.Range('F13').Value :=(var_jahr_verl„ng[4]/var_jahr_abgelauf[4]*100);
      IF ((var_jahr_verl„ng[5]<>0) AND (var_jahr_abgelauf[5]<>0)) THEN
      Sheet.Range('G13').Value :=(var_jahr_verl„ng[5]/var_jahr_abgelauf[5]*100);
      IF ((var_jahr_verl„ng[6]<>0) AND (var_jahr_abgelauf[6]<>0)) THEN
      Sheet.Range('H13').Value :=(var_jahr_verl„ng[6]/var_jahr_abgelauf[6]*100);
      IF ((var_jahr_verl„ng[7]<>0) AND (var_jahr_abgelauf[7]<>0)) THEN
      Sheet.Range('I13').Value :=(var_jahr_verl„ng[7]/var_jahr_abgelauf[7]*100);
      IF ((var_jahr_verl„ng[8]<>0) AND (var_jahr_abgelauf[8]<>0)) THEN
      Sheet.Range('J13').Value :=(var_jahr_verl„ng[8]/var_jahr_abgelauf[8]*100);
      IF ((var_jahr_verl„ng[9]<>0) AND (var_jahr_abgelauf[9]<>0)) THEN
      Sheet.Range('K13').Value :=(var_jahr_verl„ng[9]/var_jahr_abgelauf[9]*100);
      IF ((var_jahr_verl„ng[10]<>0) AND (var_jahr_abgelauf[10]<>0)) THEN
      Sheet.Range('L13').Value :=(var_jahr_verl„ng[10]/var_jahr_abgelauf[10]*100);
      IF ((var_jahr_verl„ng[11]<>0) AND (var_jahr_abgelauf[11]<>0)) THEN
      Sheet.Range('M13').Value :=(var_jahr_verl„ng[11]/var_jahr_abgelauf[11]*100);
      IF ((var_jahr_verl„ng[12]<>0) AND (var_jahr_abgelauf[12]<>0)) THEN
      Sheet.Range('N13').Value :=(var_jahr_verl„ng[12]/var_jahr_abgelauf[12]*100);
      Sheet.Range('A14').Value :='Verl„ngert in % von Jahreseingang';
      IF ((var_jahr_verl„ng[1]<>0) AND (var_jahr_gesamt[1]<>0)) THEN
      Sheet.Range('C14').Value :=(var_jahr_verl„ng[1]/var_jahr_gesamt[1]*100);
      IF ((var_jahr_verl„ng[2]<>0) AND (var_jahr_gesamt[2]<>0)) THEN
      Sheet.Range('D14').Value :=(var_jahr_verl„ng[2]/var_jahr_gesamt[2]*100);
      IF ((var_jahr_verl„ng[3]<>0) AND (var_jahr_gesamt[3]<>0)) THEN
      Sheet.Range('E14').Value :=(var_jahr_verl„ng[3]/var_jahr_gesamt[3]*100);
      IF ((var_jahr_verl„ng[4]<>0) AND (var_jahr_gesamt[4]<>0)) THEN
      Sheet.Range('F14').Value :=(var_jahr_verl„ng[4]/var_jahr_gesamt[4]*100);
      IF ((var_jahr_verl„ng[5]<>0) AND (var_jahr_gesamt[5]<>0)) THEN
      Sheet.Range('G14').Value :=(var_jahr_verl„ng[5]/var_jahr_gesamt[5]*100);
      IF ((var_jahr_verl„ng[6]<>0) AND (var_jahr_gesamt[6]<>0)) THEN
      Sheet.Range('H14').Value :=(var_jahr_verl„ng[6]/var_jahr_gesamt[6]*100);
      IF ((var_jahr_verl„ng[7]<>0) AND (var_jahr_gesamt[7]<>0)) THEN
      Sheet.Range('I14').Value :=(var_jahr_verl„ng[7]/var_jahr_gesamt[7]*100);
      IF ((var_jahr_verl„ng[8]<>0) AND (var_jahr_gesamt[8]<>0)) THEN
      Sheet.Range('J14').Value :=(var_jahr_verl„ng[8]/var_jahr_gesamt[8]*100);
      IF ((var_jahr_verl„ng[9]<>0) AND (var_jahr_gesamt[9]<>0)) THEN
      Sheet.Range('K14').Value :=(var_jahr_verl„ng[9]/var_jahr_gesamt[9]*100);
      IF ((var_jahr_verl„ng[10]<>0) AND (var_jahr_gesamt[10]<>0)) THEN
      Sheet.Range('L14').Value :=(var_jahr_verl„ng[10]/var_jahr_gesamt[10]*100);
      IF ((var_jahr_verl„ng[11]<>0) AND (var_jahr_gesamt[11]<>0)) THEN
      Sheet.Range('M14').Value :=(var_jahr_verl„ng[11]/var_jahr_gesamt[11]*100);
      IF ((var_jahr_verl„ng[12]<>0) AND (var_jahr_gesamt[12]<>0)) THEN
      Sheet.Range('N14').Value :=(var_jahr_verl„ng[12]/var_jahr_gesamt[12]*100);
      Sheet.Range('A16').Value :='Auf Laufzeit verteilt';
      Sheet.Range('C16').Value :=var_jahr_wert[1];
      Sheet.Range('D16').Value :=var_jahr_wert[2];
      Sheet.Range('E16').Value :=var_jahr_wert[3];
      Sheet.Range('F16').Value :=var_jahr_wert[4];
      Sheet.Range('G16').Value :=var_jahr_wert[5];
      Sheet.Range('H16').Value :=var_jahr_wert[6];
      Sheet.Range('I16').Value :=var_jahr_wert[7];
      Sheet.Range('J16').Value :=var_jahr_wert[8];
      Sheet.Range('K16').Value :=var_jahr_wert[9];
      Sheet.Range('L16').Value :=var_jahr_wert[10];
      Sheet.Range('M16').Value :=var_jahr_wert[11];
      Sheet.Range('N16').Value :=var_jahr_wert[12];
      service.RESET;
      service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      service.SETFILTER(service.Art,'%1',service.Art::Service);
      service.SETFILTER(service."Ablaufdatum Serviceleistung",'>%1',Abgrenz_Datum);
      service.SETFILTER(service.Belegdatum,'<=%1',Abgrenz_Datum);
      service.SETFILTER(service.Inaktiv,'%1',FALSE);
      service.SETFILTER(service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      IF service.FIND('-') THEN BEGIN  //yy1
      REPEAT
        LZ_rest:=0;
      //IF ((service."SUP Artikelnr."='ACTS-ADV-HWREPLAC#01') OR (service."SUP Artikelnr."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //END ELSE BEGIN
      //IF ((service."SUP Artikelnr."='ACTS-SUPP-24X7/SO#01') OR (service."SUP Artikelnr."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //END ELSE BEGIN
      //IF ((service."SUP Artikelnr."='ACTS-SUPP-9X5/SOF#01') OR (service."SUP Artikelnr."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //END ELSE BEGIN
         Artikel.RESET;
         Artikel.SETFILTER(Artikel."No.",'%1',service."SUP Artikelnr.");
         Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2','5710','5720');
         IF Artikel.FINDFIRST THEN BEGIN  //yy2
           lief.RESET;
           lief.SETFILTER(lief."Document No.",'%1',service."Nr.");
           lief.SETFILTER(lief."Line No.",'%1',service."Belegzeilennr.");
           lief.SETFILTER(lief.Quantity,'<>%1',0);
           lief.SETFILTER(lief."Manufacturer Code",'<>%1&<>%2','5710','5720');
           lief.SETFILTER(lief."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
             IF lief.FINDFIRST THEN BEGIN  //yy3
      //        IF ((lief."No."='ACTS-ADV-HWREPLAC#01') OR (lief."No."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-24X7/SO#01') OR (lief."No."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-9X5/SOF#01') OR (lief."No."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //        END ELSE BEGIN
              IF (liefnr=lief."Document No.") AND (liefzeilennr=lief."Line No.") THEN BEGIN  //yy4
              END ELSE BEGIN  //yy4_1
                LZ_tage:= (service."Ablaufdatum Serviceleistung"- service.Lizenzdatum-1);
                LZ_tage_stich:=(service."Ablaufdatum Serviceleistung"-Abgrenz_Datum-1);
                LZ_tage_bewert:=0;
                IF LZ_tage_stich>LZ_tage THEN BEGIN   //yy5
                  LZ_tage_bewert := LZ_tage;
                END ELSE BEGIN  ///yy5_1
                  LZ_tage_bewert := LZ_tage_stich;
                END;    //yy5_1
                Sum_ek:=(Sum_ek+ (ROUND(lief."Unit Cost (LCY)"/ LZ_tage*LZ_tage_bewert*lief.Quantity)));
                Sum_vk:=(Sum_vk+ (ROUND(lief."VK-Preis (MW)"/ LZ_tage*LZ_tage_bewert*lief.Quantity)));
      //        Sum_vIF k:=(Sum_vk+ (ROUND(Lief."Unit Price"/ LZ_tage*LZ_tage_bewert*Lief.Quantity)));
                liefnr:=lief."Document No.";
                liefzeilennr:=lief."Line No.";
      //    END;
      //    END;
      //    END;
              END;  //yy 4_1
      //     END ELSE BEGIN   //yy3_1
      //     alte_lief.RESET;
      //     alte_lief.SETFILTER(alte_lief."Belegnr.",'%1',service."Nr.");
      //     alte_lief.SETFILTER(alte_lief."Zeilennr.",'%1',service."Belegzeilennr.");
      //     alte_lief.SETFILTER(alte_lief.Menge,'<>%1',0);
      //     alte_lief.SETFILTER(alte_lief.Herstellercode,'<>%1&<>%2','5710','5720');
      //     alte_lief.SETFILTER(alte_lief."Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      //     IF alte_lief.FINDFIRST THEN BEGIN  //yy6

      //        IF (liefnr=alte_lief."Belegnr.") AND (liefzeilennr=alte_lief."Zeilennr.") THEN BEGIN  //yy7
      //        END ELSE BEGIN  //yy7_1
      //          LZ_tage:= (service."Ablaufdatum Serviceleistung"- service.Lizenzdatum-1);
      //          LZ_tage_stich:=(service."Ablaufdatum Serviceleistung"-Abgrenz_Datum-1);
      //          LZ_tage_bewert:=0;
      //          IF LZ_tage_stich>LZ_tage THEN BEGIN   //yy8
      //            LZ_tage_bewert := LZ_tage;
      //          END ELSE BEGIN  ///yy8_1
      //            LZ_tage_bewert := LZ_tage_stich;
      //          END;    //yy8_1
      //          Sum_ek:=(Sum_ek+ (ROUND(alte_lief."EK-Preis"/ LZ_tage*LZ_tage_bewert*alte_lief.Menge)));   //   ************************* eventl. šberarbeiten: Einstandspreis?
      //          Sum_vk:=(Sum_vk+ (ROUND(alte_lief."VK-Preis"/ LZ_tage*LZ_tage_bewert*alte_lief.Menge)));
      //          liefnr:=alte_lief."Belegnr.";
      //          liefzeilennr:=alte_lief."Zeilennr.";
      //        END;  //yy 7_1
      //     END;   //yy3_1
        END;  //yy2
      END;
      UNTIL service.NEXT=0;
      END;   //yy1




      Sheet.Range('A20').Value :='Abgrenzung per: ';
      Sheet.Range('A21').Value :=Abgrenz_Datum;
      Sheet.Range('A22').Value :='Abgrenz_Ek';
      Sheet.Range('B22').Value :=FORMAT(Sum_ek);
      Sheet.Range('A23').Value :='Abgrenz_Vk';
      Sheet.Range('B23').Value :=FORMAT(Sum_vk);
      //Excel.Visible(TRUE);
      service.RESET;
      service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      service.SETFILTER(service.Art,'%1',service.Art::Service);
      service.SETFILTER(service."Dauer Serviceleistung",'%1','12M');
      service.SETFILTER(service.Belegdatum,'%1..%2',PeriodStartDate[1],Abgrenz_Datum);
      service.SETFILTER(service.Inaktiv,'%1',FALSE);
      service.SETFILTER(service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      IF service.FIND('-') THEN BEGIN
      REPEAT
      //IF ((service."SUP Artikelnr."='ACTS-ADV-HWREPLAC#01') OR (service."SUP Artikelnr."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //END ELSE BEGIN
      //IF ((service."SUP Artikelnr."='ACTS-SUPP-24X7/SO#01') OR (service."SUP Artikelnr."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //END ELSE BEGIN
      //IF ((service."SUP Artikelnr."='ACTS-SUPP-9X5/SOF#01') OR (service."SUP Artikelnr."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //END ELSE BEGIN
         Artikel.RESET;
         Artikel.SETFILTER(Artikel."No.",'%1',service."SUP Artikelnr.");
         Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2','5710','5720');
         IF Artikel.FINDFIRST THEN BEGIN
        lief.RESET;
        lief.SETFILTER(lief."Document No.",'%1',service."Nr.");
        lief.SETFILTER(lief."Line No.",'%1',service."Belegzeilennr.");
        lief.SETFILTER(lief.Quantity,'<>%1',0);
        lief.SETFILTER(lief."Manufacturer Code",'<>%1&<>%2','5710','5720');
        lief.SETFILTER(lief."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
         IF lief.FINDFIRST THEN BEGIN
      //        IF ((lief."No."='ACTS-ADV-HWREPLAC#01') OR (lief."No."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-24X7/SO#01') OR (lief."No."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-9X5/SOF#01') OR (lief."No."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //        END ELSE BEGIN
            IF (liefnr=lief."Document No.") AND (liefzeilennr=lief."Line No.") THEN BEGIN
            END ELSE BEGIN
               liefnr:=lief."Document No.";
               liefzeilennr:=lief."Line No.";
               sum_gj_12:=sum_gj_12 + (lief.Quantity* lief."VK-Preis (MW)");
      //      END;
      //      END;
      //      END;
            END;
         END;
      END;
      //END;
      //END;
      UNTIL service.NEXT=0;
      END;
      Sheet.Range('A25').Value :='GJ_12M:';
      Sheet.Range('B25').Value :=FORMAT(sum_gj_12);
      service.RESET;
      service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      service.SETFILTER(service.Art,'%1',service.Art::Service);
      service.SETFILTER(service."Dauer Serviceleistung",'>%1&<%2','12M','36M');
      service.SETFILTER(service.Belegdatum,'%1..%2',PeriodStartDate[1],Abgrenz_Datum);
      service.SETFILTER(service.Inaktiv,'%1',FALSE);
      service.SETFILTER(service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      IF service.FIND('-') THEN BEGIN
      REPEAT
      //IF ((service."SUP Artikelnr."='ACTS-ADV-HWREPLAC#01') OR (service."SUP Artikelnr."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //END ELSE BEGIN
      //IF ((service."SUP Artikelnr."='ACTS-SUPP-24X7/SO#01') OR (service."SUP Artikelnr."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //END ELSE BEGIN
      //IF ((service."SUP Artikelnr."='ACTS-SUPP-9X5/SOF#01') OR (service."SUP Artikelnr."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //END ELSE BEGIN
         Artikel.RESET;
         Artikel.SETFILTER(Artikel."No.",'%1',service."SUP Artikelnr.");
         Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2','5710','5720');
         IF Artikel.FINDFIRST THEN BEGIN
        lief.RESET;
        lief.SETFILTER(lief."Document No.",'%1',service."Nr.");
        lief.SETFILTER(lief."Line No.",'%1',service."Belegzeilennr.");
        lief.SETFILTER(lief.Quantity,'<>%1',0);
        lief.SETFILTER(lief."Manufacturer Code",'<>%1&<>%2','5710','5720');
        lief.SETFILTER(lief."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
         IF lief.FINDFIRST THEN BEGIN
      //        IF ((lief."No."='ACTS-ADV-HWREPLAC#01') OR (lief."No."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-24X7/SO#01') OR (lief."No."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-9X5/SOF#01') OR (lief."No."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //        END ELSE BEGIN
            IF (liefnr=lief."Document No.") AND (liefzeilennr=lief."Line No.") THEN BEGIN
            END ELSE BEGIN
               liefnr:=lief."Document No.";
               liefzeilennr:=lief."Line No.";
               sum_gj_36:=sum_gj_36 + (lief.Quantity* lief."VK-Preis (MW)");
      //   END;
      //   END;
      //   END;
         END;
         END;
      END;
      //END;
      //END;
      UNTIL service.NEXT=0;
      END;
      Sheet.Range('A26').Value :='GJ_13-35M:';
      Sheet.Range('B26').Value :=FORMAT(sum_gj_36);
      service.RESET;
      service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      service.SETFILTER(service.Art,'%1',service.Art::Service);
      service.SETFILTER(service."Dauer Serviceleistung",'>=%1','36M');
      service.SETFILTER(service.Belegdatum,'%1..%2',PeriodStartDate[1],Abgrenz_Datum);
      service.SETFILTER(service.Inaktiv,'%1',FALSE);
      service.SETFILTER(service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      IF service.FIND('-') THEN BEGIN
      REPEAT
      //IF ((service."SUP Artikelnr."='ACTS-ADV-HWREPLAC#01') OR (service."SUP Artikelnr."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //END ELSE BEGIN
      //IF ((service."SUP Artikelnr."='ACTS-SUPP-24X7/SO#01') OR (service."SUP Artikelnr."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //END ELSE BEGIN
      //IF ((service."SUP Artikelnr."='ACTS-SUPP-9X5/SOF#01') OR (service."SUP Artikelnr."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //END ELSE BEGIN
         Artikel.RESET;
         Artikel.SETFILTER(Artikel."No.",'%1',service."SUP Artikelnr.");
         Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2','5710','5720');
         IF Artikel.FINDFIRST THEN BEGIN
        lief.RESET;
        lief.SETFILTER(lief."Document No.",'%1',service."Nr.");
        lief.SETFILTER(lief."Line No.",'%1',service."Belegzeilennr.");
        lief.SETFILTER(lief."Manufacturer Code",'<>%1&<>%2','5710','5720');
        lief.SETFILTER(lief.Quantity,'<>%1',0);
        lief.SETFILTER(lief."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
         IF lief.FINDFIRST THEN BEGIN
      //        IF ((lief."No."='ACTS-ADV-HWREPLAC#01') OR (lief."No."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-24X7/SO#01') OR (lief."No."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-9X5/SOF#01') OR (lief."No."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //        END ELSE BEGIN
            IF (liefnr=lief."Document No.") AND (liefzeilennr=lief."Line No.") THEN BEGIN
            END ELSE BEGIN
               liefnr:=lief."Document No.";
               liefzeilennr:=lief."Line No.";
             sum_gj_sonst:=sum_gj_sonst + (lief.Quantity* lief."VK-Preis (MW)");
      //    END;
      //    END;
      //    END;
          END;
          END;
      END;
      //END;
      //END;
      UNTIL service.NEXT=0;
      END;
      Sheet.Range('A27').Value :='GJ_36M +:';
      Sheet.Range('B27').Value :=FORMAT(sum_gj_sonst);
      service.RESET;
      service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      service.SETFILTER(service.Art,'%1',service.Art::Service);
      //service.SETFILTER(service.Lizenzdatum,'>=%1&<=%2',PeriodStartDate[1],Abgrenz_Datum);
      service.SETFILTER(service.Belegdatum,'>=%1&<=%2',PeriodStartDate[1],Abgrenz_Datum);
      service.SETFILTER(service.Inaktiv,'%1',FALSE);
      service.SETFILTER(service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      IF service.FIND('-') THEN BEGIN
      REPEAT
      //IF ((service."SUP Artikelnr."='ACTS-ADV-HWREPLAC#01') OR (service."SUP Artikelnr."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //END ELSE BEGIN
      //IF ((service."SUP Artikelnr."='ACTS-SUPP-24X7/SO#01') OR (service."SUP Artikelnr."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //END ELSE BEGIN
      //IF ((service."SUP Artikelnr."='ACTS-SUPP-9X5/SOF#01') OR (service."SUP Artikelnr."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //END ELSE BEGIN
         Artikel.RESET;
         Artikel.SETFILTER(Artikel."No.",'%1',service."SUP Artikelnr.");
         Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2','5710','5720');
         IF Artikel.FINDFIRST THEN BEGIN
        lief.RESET;
        lief.SETFILTER(lief."Document No.",'%1',service."Nr.");
        lief.SETFILTER(lief."Line No.",'%1',service."Belegzeilennr.");
        lief.SETFILTER(lief.Quantity,'<>%1',0);
        lief.SETFILTER(lief."Manufacturer Code",'<>%1&<>%2','5710','5720');
        lief.SETFILTER(lief."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
         IF lief.FINDFIRST THEN BEGIN
      //        IF ((lief."No."='ACTS-ADV-HWREPLAC#01') OR (lief."No."='ACTS-ADV-HWREPLAC#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-24X7/SO#01') OR (lief."No."='ACTS-SUPP-24X7/SO#02')) THEN BEGIN
      //        END ELSE BEGIN
      //        IF ((lief."No."='ACTS-SUPP-9X5/SOF#01') OR (lief."No."='ACTS-SUPP-9X5/SOF#02')) THEN BEGIN
      //        END ELSE BEGIN
            IF (liefnr=lief."Document No.") AND (liefzeilennr=lief."Line No.") THEN BEGIN
            END ELSE BEGIN
               liefnr:=lief."Document No.";
               liefzeilennr:=lief."Line No.";
               sum_gj_gesamt:=sum_gj_gesamt +(lief.Quantity* lief."VK-Preis (MW)");
      //      END;
      //      END;
      //      END;
            END;
         END;
      END;
      //END;
      //END;
      UNTIL service.NEXT=0;
      END;
      Sheet.Range('A28').Value :='GJ_Gesamt:';
      Sheet.Range('B28').Value :=FORMAT(sum_gj_gesamt);
      //IF ERASE('F:\Tausch\Nav\Daten\Daten_Nav_Champs.xlsx')THEN;
      IF wshFile.FileExists('F:\Tausch\Nav\Daten\Daten_Nav_Champs.xlsx') THEN wshFile.DeleteFile('F:\Tausch\Nav\Daten\Daten_Nav_Champs.xlsx');
      CLEAR(wshFile);
      Book.SaveAs('F:\Tausch\Nav\Daten\Daten_Nav_Champs.xlsx',51,'','',FALSE,FALSE);
      Book.Close(TRUE);
      //Excel.Visible(TRUE);
      //Excel.Quit;

      //Vorl_GuV;

      //  *****************************************************************************************************************************************
      //  *****************************************************************************************************************************************
      //  *****************************************************************************************************************************************
    END;

    PROCEDURE Rohbilanz@1140000();
    BEGIN
      {    // Diese Version holt die aktuellen Kontosalden (wird z.Zt. nicht ausgefhrt).
           // Teil 2 grenzt die Buchungsposten bis Ende des GJ ab (wird z.Zt. ausgefhrt).
      //CLEAR(Excel);

      REPEAT
      UNTIL ISCLEAR(Excel);
      //CREATE(Excel);
      CREATE (Excel,FALSE,TRUE);
      CREATE (wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('C:O').NumberFormat:='0,00';
      Sheet.Range('A1').Value :='Nr.';
      Sheet.Range('B1').Value :='Name';
      Sheet.Range('C1').Value :='Saldo';
      j := '2';
      sachkonten.RESET;
      sachkonten.CALCFIELDS(Balance);
      sachkonten.SETFILTER(sachkonten."Balance at Date",'<>%1',0);
      sachkonten.SETFILTER(sachkonten."Income/Balance",'%1',sachkonten."Income/Balance"::"Balance Sheet");
      IF sachkonten.FIND('-') THEN BEGIN
      sachkonten.CALCFIELDS(Balance);
      REPEAT
      sachkonten.CALCFIELDS(Balance);
      IF  sachkonten."No."='9999'THEN BEGIN
      END ELSE BEGIN
            Sheet.Range('A'+j).Value := sachkonten."No.";
            Sheet.Range('B'+j).Value := sachkonten.Name;
            Sheet.Range('C'+j).Value := sachkonten.Balance;
      END;
          j:=INCSTR(j);
      UNTIL sachkonten.NEXT=0;
       END;
      //IF ERASE('F:\Tausch\Nav\Daten\Daten_Nav_Bil.xlsx')THEN;
      IF wshFile.FileExists('F:\Tausch\Nav\Daten\Daten_Nav_Bil.xlsx') THEN wshFile.DeleteFile('F:\Tausch\Nav\Daten\Daten_Nav_Bil.xlsx');
      //CLEAR(wshFile);
      Book.SaveAs('F:\Tausch\Nav\Daten\Daten_Nav_Bil.xlsx',51,'','',FALSE,FALSE);
      Book.Close(TRUE);
      //Excel.Visible(TRUE);
      }
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);
      CREATE (Excel,FALSE,TRUE);
      CREATE (wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('C:O').NumberFormat:='0,00';
      Sheet.Range('A1').Value :='Nr.';
      Sheet.Range('B1').Value :='Name';
      Sheet.Range('C1').Value :='Saldo';
      j := '2';
      sachkonten.RESET;
      //sachkonten.SETFILTER(sachkonten."No.",'%1..%2','0001','3999');
      sachkonten.SETRANGE(sachkonten."No.",'0001','3999');
      IF sachkonten.FIND('-') THEN BEGIN
      REPEAT
      v_sachpostsum:=0;
       sachposten.RESET;
      // sachposten.SETFILTER(sachposten."G/L Account No.",'%1',sachkonten."No.");
      // sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010100D,Abgrenz_Datum);
       sachposten.SETRANGE(sachposten."G/L Account No.",sachkonten."No.");
       sachposten.SETRANGE(sachposten."Posting Date",010100D,Abgrenz_Datum);
       IF sachposten.FIND('-') THEN BEGIN
        REPEAT
           v_sachpostsum:=v_sachpostsum+sachposten.Amount;
        UNTIL sachposten.NEXT=0;
        END;
        IF v_sachpostsum<>0 THEN BEGIN
          Sheet.Range('A'+j).Value := sachkonten."No.";
          Sheet.Range('B'+j).Value := sachkonten.Name;
          Sheet.Range('C'+j).Value := v_sachpostsum;
          j:=INCSTR(j);
        END;
      UNTIL sachkonten.NEXT=0;
      END;
      //IF ERASE('F:\Tausch\Nav\Daten_NAV2016\Daten_Nav_Bil.xlsx')THEN;
      IF wshFile.FileExists('F:\Tausch\Nav\Daten\Daten_Nav_Bil.xlsx') THEN wshFile.DeleteFile('F:\Tausch\Nav\Daten\Daten_Nav_Bil.xlsx');
      CLEAR(wshFile);
      Book.SaveAs('F:\Tausch\Nav\Daten\Daten_Nav_Bil.xlsx',51,'','',FALSE,FALSE);
      Book.Close(TRUE);
      //Excel.Visible(TRUE);

      // Systeme;

      //  ****************************************************************************************************************************************************
      //  ****************************************************************************************************************************************************
      //  ****************************************************************************************************************************************************
    END;

    PROCEDURE Vorl_GuV@1140001();
    BEGIN
      FOR i := 1 TO 13 DO
      PeriodStartDate[i + 1] := CALCDATE('1M',PeriodStartDate[i]);
      PeriodStartDate[14] := 31129999D;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE (Excel,FALSE,TRUE);
      CREATE (wshFile,FALSE,TRUE);                                         //erzeugt excel
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Names.Add('GUV_KTO','=Tabelle1!$A$2:$A$202');
      //Compare_Book.Names.Add('GUV_KTO','='+c_sheet_name+'!$A$2:$A$202');
      Sheet.StandardWidth := 16;
      Sheet.Range('A:A').ColumnWidth := 10;
      Sheet.Range('B:B').ColumnWidth := 30;
      Sheet.Range('A1').Value := 'Konto-Nr.';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Kontoname';
      Sheet.Range('C1').Value := 'Gesamt';
      Sheet.Range('D1').Value := FORMAT(PeriodStartDate[1]) + '..' +  FORMAT(PeriodStartDate[2]-1);
      Sheet.Range('E1').Value := FORMAT(PeriodStartDate[2]) + '..' +  FORMAT(PeriodStartDate[3]-1);
      Sheet.Range('F1').Value := FORMAT(PeriodStartDate[3]) + '..' +  FORMAT(PeriodStartDate[4]-1);
      Sheet.Range('G1').Value := FORMAT(PeriodStartDate[4]) + '..' +  FORMAT(PeriodStartDate[5]-1);
      Sheet.Range('H1').Value := FORMAT(PeriodStartDate[5]) + '..' +  FORMAT(PeriodStartDate[6]-1);
      Sheet.Range('I1').Value := FORMAT(PeriodStartDate[6]) + '..' +  FORMAT(PeriodStartDate[7]-1);
      Sheet.Range('J1').Value := FORMAT(PeriodStartDate[7]) + '..' +  FORMAT(PeriodStartDate[8]-1);
      Sheet.Range('K1').Value := FORMAT(PeriodStartDate[8]) + '..' +  FORMAT(PeriodStartDate[9]-1);
      Sheet.Range('L1').Value := FORMAT(PeriodStartDate[9]) + '..' +  FORMAT(PeriodStartDate[10]-1);
      Sheet.Range('M1').Value := FORMAT(PeriodStartDate[10]) + '..' + FORMAT( PeriodStartDate[11]-1);
      Sheet.Range('N1').Value := FORMAT(PeriodStartDate[11]) + '..' + FORMAT(PeriodStartDate[12]-1);
      Sheet.Range('O1').Value := FORMAT(PeriodStartDate[12]) + '..' + FORMAT(PeriodStartDate[13]-1);
      //datum_zeit:=DateTime;
      //Sheet.Range('P1').Value := datum_zeit;
      //Sheet.Range('P1').NumberFormat := 'tt.mm.jj hh:mm;@';
      Sheet.Range('P1').NumberFormat := '@';
      Sheet.Range('P1').Value := FORMAT(CURRENTDATETIME);
      j := '2';                                                    // <- Import in excel ab Zeile 2
      sachkonten.RESET;
      //sachkonten.SETFILTER(sachkonten."No.",'%1..%2','4000','7999');
      sachkonten.SETRANGE(sachkonten."No.",'4000','7999');
      //sachkonten.SETFILTER(sachkonten."No.",'%1','5200');
      IF sachkonten.FIND('-') THEN BEGIN
      REPEAT
      FOR i:=1 TO 12 DO
      BEGIN
        var_balance[i]:=0;
      END;
      var_balance_gesamt_konto := 0;
       sachposten.RESET;
      // sachposten.SETFILTER(sachposten."G/L Account No.",'%1',sachkonten."No.");
       sachposten.SETRANGE(sachposten."G/L Account No.",sachkonten."No.");
        IF sachposten.FIND('-') THEN BEGIN
            FOR i:=1 TO 12 DO
                BEGIN
      //        sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',PeriodStartDate[i],(PeriodStartDate[i+1] - 1));
              sachposten.SETRANGE(sachposten."Posting Date",PeriodStartDate[i],(PeriodStartDate[i+1] - 1));
              IF sachposten.FIND('-') THEN BEGIN
              REPEAT
                  var_balance[i] := var_balance[i] + sachposten.Amount;
                  var_balance_total[i] := var_balance_total[i] + sachposten.Amount;
                  var_balance_total_summe := var_balance_total_summe + sachposten.Amount;
              UNTIL sachposten.NEXT=0;
              END;
       var_balance_gesamt_konto := var_balance_gesamt_konto + var_balance[i];
      //     var_balance_total_summe := var_balance_total_summe + var_balance_total[i];
      //     var_balance_total_summe := var_balance_total_summe + var_balance_gesamt_konto;
       END;
          IF var_balance_gesamt_konto<>0 THEN BEGIN
              Sheet.Range('A'+j).Value := sachkonten."No.";
              Sheet.Range('B'+j).Value := sachkonten.Name;
              Sheet.Range('C'+j).Value := var_balance_gesamt_konto;
              Sheet.Range('D'+j).Value := var_balance[1];
              Sheet.Range('E'+j).Value := var_balance[2];
              Sheet.Range('F'+j).Value := var_balance[3];
              Sheet.Range('G'+j).Value := var_balance[4];
              Sheet.Range('H'+j).Value := var_balance[5];
              Sheet.Range('I'+j).Value := var_balance[6];
              Sheet.Range('J'+j).Value := var_balance[7];
              Sheet.Range('K'+j).Value := var_balance[8];
              Sheet.Range('L'+j).Value := var_balance[9];
              Sheet.Range('M'+j).Value := var_balance[10];
              Sheet.Range('N'+j).Value := var_balance[11];
              Sheet.Range('O'+j).Value := var_balance[12];
        j := INCSTR (j);
        END;
        END;
      UNTIL sachkonten.NEXT=0;
      END;
      j := INCSTR(j) ;
      Sheet.Range('B160').Value := 'Summe:';
      Sheet.Range('C160').Value := var_balance_total_summe;
      Sheet.Range('D160').Value := var_balance_total[1];
      Sheet.Range('E160').Value := var_balance_total[2];
      Sheet.Range('F160').Value := var_balance_total[3];
      Sheet.Range('G160').Value := var_balance_total[4];
      Sheet.Range('H160').Value := var_balance_total[5];
      Sheet.Range('I160').Value := var_balance_total[6];
      Sheet.Range('J160').Value := var_balance_total[7];
      Sheet.Range('K160').Value := var_balance_total[8];
      Sheet.Range('L160').Value := var_balance_total[9];
      Sheet.Range('M160').Value := var_balance_total[10];
      Sheet.Range('N160').Value := var_balance_total[11];
      Sheet.Range('O160').Value := var_balance_total[12];
      IF var_balance_total_summe > 0 THEN
        Sheet.Range('C150').Font.Color := 255;
      IF var_balance_total[1] > 0 THEN
        Sheet.Range('D150').Font.Color := 255;
      IF var_balance_total[2] > 0 THEN
        Sheet.Range('E150').Font.Color := 255;
      IF var_balance_total[3] > 0 THEN
        Sheet.Range('F150').Font.Color := 255;
      IF var_balance_total[4] > 0 THEN
        Sheet.Range('G150').Font.Color := 255;
      IF var_balance_total[5] > 0 THEN
        Sheet.Range('H150').Font.Color := 255;
      IF var_balance_total[6] > 0 THEN
        Sheet.Range('I150').Font.Color := 255;
      IF var_balance_total[7] > 0 THEN
        Sheet.Range('J150').Font.Color := 255;
      IF var_balance_total[8] > 0 THEN
        Sheet.Range('K150').Font.Color := 255;
      IF var_balance_total[9] > 0 THEN
        Sheet.Range('L150').Font.Color := 255;
      IF var_balance_total[10] > 0 THEN
        Sheet.Range('M150').Font.Color := 255;
      IF var_balance_total[11] > 0 THEN
        Sheet.Range('N150').Font.Color := 255;
      IF var_balance_total[12] > 0 THEN
        Sheet.Range('O150').Font.Color := 255;
        Sheet.Range('C150').Font.Color := 255;

      //IF ERASE('F:\Tausch\Nav\Daten_NAV2016\Daten_Nav_GuV.xlsx')THEN;
      IF wshFile.FileExists('F:\Tausch\Nav\Daten\Daten_Nav_GuV.xlsx') THEN wshFile.DeleteFile('F:\Tausch\Nav\Daten\Daten_Nav_GuV.xlsx');
      CLEAR(wshFile);
      Book.SaveAs('F:\Tausch\Nav\Daten\Daten_Nav_GuV.xlsx',51,'','',FALSE,FALSE);
      Book.Close(TRUE);
      //Excel.Visible(TRUE);

      //Rohbilanz;

      //   *********************************************************************************************************************************************************
      //   *********************************************************************************************************************************************************
      //   *********************************************************************************************************************************************************
    END;

    PROCEDURE Systeme@1140002();
    BEGIN
      //PeriodStartDate[1] := 010716D;
      FOR i := 1 TO 13 DO
      PeriodStartDate[i + 1] := CALCDATE('1M',PeriodStartDate[i]);
      PeriodStartDate[14] := 31129999D;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);
      CREATE (Excel,FALSE,TRUE);
      CREATE (wshFile,FALSE,TRUE);                                           //erzeugt excel
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('A11').Value := 'VK-Ums„tze nach Perioden'; // definiert die Beschriftung der berschriftszeile
      Sheet.Range('A12').Value := 'Herstell-Code';
      Sheet.Range('B12').Value := 'Hersteller';
      Sheet.Range('C12').Value := 'Gesamt';
      Sheet.Range('D12').Value := FORMAT(PeriodStartDate[1]);
      Sheet.Range('E12').Value := FORMAT(PeriodStartDate[2]);
      Sheet.Range('F12').Value := FORMAT(PeriodStartDate[3]);
      Sheet.Range('G12').Value := FORMAT(PeriodStartDate[4]);
      Sheet.Range('H12').Value := FORMAT(PeriodStartDate[5]);
      Sheet.Range('I12').Value := FORMAT(PeriodStartDate[6]);
      Sheet.Range('J12').Value := FORMAT(PeriodStartDate[7]);
      Sheet.Range('K12').Value := FORMAT(PeriodStartDate[8]);
      Sheet.Range('L12').Value := FORMAT(PeriodStartDate[9]);
      Sheet.Range('M12').Value := FORMAT(PeriodStartDate[10]);
      Sheet.Range('N12').Value := FORMAT(PeriodStartDate[11]);
      Sheet.Range('O12').Value := FORMAT(PeriodStartDate[12]);
      //j := '13';                                                    // <- Import in excel ab Zeile 2
      ///Hersteller  1 Teil VK
      //////********************************************************************************************
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4','20','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      //Rechnungszeilen verarbeiten
      FOR i := 1 TO 12 DO
       BEGIN
        VKRZ.RESET;
      //  VKRZ.SETFILTER(VKRZ."Manufacturer Code",'%1',Herstell.Code);
      //  VKRZ.SETFILTER(VKRZ."Posting Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
      //  VKRZ.SETFILTER(VKRZ.Type,'%1',VKRZ.Type::Item);
        VKRZ.SETRANGE(VKRZ."Manufacturer Code",Herstell.Code);
        VKRZ.SETRANGE(VKRZ."Posting Date",PeriodStartDate[i],PeriodStartDate[i+1] - 1);
        VKRZ.SETRANGE(VKRZ.Type,VKRZ.Type::Item);
        VKRZ.SETFILTER(VKRZ.Quantity,'>%1',0);
        VKRZ.SETFILTER(VKRZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
        IF VKRZ.FIND('-') THEN BEGIN
            REPEAT
              IF  VKRZ."VK-Preis (MW)"=VKRZ."Unit Price" THEN
               BEGIN
                 var_balance[i] := var_balance[i] +( VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_summe:=v_summe + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_summe_total:= v_summe_total + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  var_balance_total[i] := var_balance_total[i] + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                END
               ELSE
                BEGIN
                   IF VKRZ.Einkaufsw„hrungsfaktor <> 0 THEN
                    BEGIN
      //  Diese Zeile stimmt nur, wenn Einkaufrechnungsfaktor identisch mit Verkaufsw„hrungsfaktor aus dem VK-Kopf  **********************
                  v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                      var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                      v_summe:=v_summe + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                      v_summe_total:= v_summe_total + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    END
                   ELSE
                    BEGIN
                    v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                      var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      v_summe:=v_summe + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      v_summe_total:= v_summe_total + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                    END;
                END;
           UNTIL VKRZ.NEXT = 0;
        END ELSE BEGIN
          var_balance[i] := 0;
        END;
      END;
      //FOR i := 1 TO 12 DO
      //BEGIN
      //  var_balance_total[i] := var_balance_total[i] + var_balance[i];
      //END;
      // Anzeigen wenn RE fr 20 Wildixvorliegt
      IF Herstell.Code='20' THEN BEGIN
      //IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A13').Value := Herstell.Code;
        Sheet.Range('B13').Value := Herstell.Name;
        Sheet.Range('C13').Value := v_summe;
        Sheet.Range('D13').Value := var_balance[1];
        Sheet.Range('E13').Value := var_balance[2];
        Sheet.Range('F13').Value := var_balance[3];
        Sheet.Range('G13').Value := var_balance[4];
        Sheet.Range('H13').Value := var_balance[5];
        Sheet.Range('I13').Value := var_balance[6];
        Sheet.Range('J13').Value := var_balance[7];
        Sheet.Range('K13').Value := var_balance[8];
        Sheet.Range('L13').Value := var_balance[9];
        Sheet.Range('M13').Value := var_balance[10];
        Sheet.Range('N13').Value := var_balance[11];
        Sheet.Range('O13').Value := var_balance[12];
      //END;
      END;
      // Anzeigen wenn RE fr 59 ACS vorliegt
      IF Herstell.Code='59' THEN BEGIN
      //IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A14').Value := Herstell.Code;
        Sheet.Range('B14').Value := Herstell.Name;
        Sheet.Range('C14').Value := v_summe;
        Sheet.Range('D14').Value := var_balance[1];
        Sheet.Range('E14').Value := var_balance[2];
        Sheet.Range('F14').Value := var_balance[3];
        Sheet.Range('G14').Value := var_balance[4];
        Sheet.Range('H14').Value := var_balance[5];
        Sheet.Range('I14').Value := var_balance[6];
        Sheet.Range('J14').Value := var_balance[7];
        Sheet.Range('K14').Value := var_balance[8];
        Sheet.Range('L14').Value := var_balance[9];
        Sheet.Range('M14').Value := var_balance[10];
        Sheet.Range('N14').Value := var_balance[11];
        Sheet.Range('O14').Value := var_balance[12];
      //END;
      END;
      // Anzeigen wenn RE fr 82 Splicecom vorliegt
      IF Herstell.Code='82' THEN BEGIN
      //IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A15').Value := Herstell.Code;
        Sheet.Range('B15').Value := Herstell.Name;
        Sheet.Range('C15').Value := v_summe;
        Sheet.Range('D15').Value := var_balance[1];
        Sheet.Range('E15').Value := var_balance[2];
        Sheet.Range('F15').Value := var_balance[3];
        Sheet.Range('G15').Value := var_balance[4];
        Sheet.Range('H15').Value := var_balance[5];
        Sheet.Range('I15').Value := var_balance[6];
        Sheet.Range('J15').Value := var_balance[7];
        Sheet.Range('K15').Value := var_balance[8];
        Sheet.Range('L15').Value := var_balance[9];
        Sheet.Range('M15').Value := var_balance[10];
        Sheet.Range('N15').Value := var_balance[11];
        Sheet.Range('O15').Value := var_balance[12];
      //END;
      END;
      // Anzeigen wenn RE fr 85 Ferrari vorliegt
      IF Herstell.Code='85' THEN BEGIN
      //IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A16').Value := Herstell.Code;
        Sheet.Range('B16').Value := Herstell.Name;
        Sheet.Range('C16').Value := v_summe;
        Sheet.Range('D16').Value := var_balance[1];
        Sheet.Range('E16').Value := var_balance[2];
        Sheet.Range('F16').Value := var_balance[3];
        Sheet.Range('G16').Value := var_balance[4];
        Sheet.Range('H16').Value := var_balance[5];
        Sheet.Range('I16').Value := var_balance[6];
        Sheet.Range('J16').Value := var_balance[7];
        Sheet.Range('K16').Value := var_balance[8];
        Sheet.Range('L16').Value := var_balance[9];
        Sheet.Range('M16').Value := var_balance[10];
        Sheet.Range('N16').Value := var_balance[11];
        Sheet.Range('O16').Value := var_balance[12];
      //END;
      END;
      //IF v_summe <> 0 THEN BEGIN
      //  j:=INCSTR(j);
      //END;
      UNTIL Herstell.NEXT=0;
      END;
      //Salesperson/Purchaser - OnPostDataItem()
      j:=INCSTR(j);
      Sheet.Range('A19').Value := 'Gesamt';
      Sheet.Range('B19').Value := 'VK-Rechnungen';
      Sheet.Range('C19').Value := v_summe_total;
      Sheet.Range('D19').Value := var_balance_total[1];
      Sheet.Range('E19').Value := var_balance_total[2];
      Sheet.Range('F19').Value := var_balance_total[3];
      Sheet.Range('G19').Value := var_balance_total[4];
      Sheet.Range('H19').Value := var_balance_total[5];
      Sheet.Range('I19').Value := var_balance_total[6];
      Sheet.Range('J19').Value := var_balance_total[7];
      Sheet.Range('K19').Value := var_balance_total[8];
      Sheet.Range('L19').Value := var_balance_total[9];
      Sheet.Range('M19').Value := var_balance_total[10];
      Sheet.Range('N19').Value := var_balance_total[11];
      Sheet.Range('O19').Value := var_balance_total[12];
      //Sheet.Range('P'+j).Value := v_sum_au;
      Sheet.Range('A1').Value := 'Gesamt';
      Sheet.Range('B1').Value := 'VK-Rechnung';
      Sheet.Range('C1').Value := v_summe_total;
      Sheet.Range('D1').Value := var_balance_total[1];
      Sheet.Range('E1').Value := var_balance_total[2];
      Sheet.Range('F1').Value := var_balance_total[3];
      Sheet.Range('G1').Value := var_balance_total[4];
      Sheet.Range('H1').Value := var_balance_total[5];
      Sheet.Range('I1').Value := var_balance_total[6];
      Sheet.Range('J1').Value := var_balance_total[7];
      Sheet.Range('K1').Value := var_balance_total[8];
      Sheet.Range('L1').Value := var_balance_total[9];
      Sheet.Range('M1').Value := var_balance_total[10];
      Sheet.Range('N1').Value := var_balance_total[11];
      Sheet.Range('O1').Value := var_balance_total[12];
      //j:=INCSTR(j);
      //j:=INCSTR(j);
      j := '21';
      // Gutschriftszeilen verarbeiten ************************************************************************************************
      Sheet.Range('A'+j).Value := 'Verkaufs-Gutschriften nach Perioden'; // definiert die Beschriftung der berschriftszeile
        j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Herstell-Code';
      Sheet.Range('B'+j).Value := 'Hersteller';
      Sheet.Range('C'+j).Value := 'Gesamt';
      Sheet.Range('D'+j).Value := FORMAT(PeriodStartDate[1]);
      Sheet.Range('E'+j).Value := FORMAT(PeriodStartDate[2]);
      Sheet.Range('F'+j).Value := FORMAT(PeriodStartDate[3]);
      Sheet.Range('G'+j).Value := FORMAT(PeriodStartDate[4]);
      Sheet.Range('H'+j).Value := FORMAT(PeriodStartDate[5]);
      Sheet.Range('I'+j).Value := FORMAT(PeriodStartDate[6]);
      Sheet.Range('J'+j).Value := FORMAT(PeriodStartDate[7]);
      Sheet.Range('K'+j).Value := FORMAT(PeriodStartDate[8]);
      Sheet.Range('L'+j).Value := FORMAT(PeriodStartDate[9]);
      Sheet.Range('M'+j).Value := FORMAT(PeriodStartDate[10]);
      Sheet.Range('N'+j).Value := FORMAT(PeriodStartDate[11]);
      Sheet.Range('O'+j).Value := FORMAT(PeriodStartDate[12]);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4','20','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      FOR u := 1 TO 12 DO
       BEGIN
        VKGK.RESET;
        VKGK.SETFILTER(VKGK."Posting Date",'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
        IF VKGK.FIND('-') THEN BEGIN
            REPEAT
               VKGZ.RESET;
      //          VKGZ.SETFILTER(VKGZ."Document No.",'%1',VKGK."No.");
      //          VKGZ.SETFILTER(VKGZ."Manufacturer Code",'%1',Herstell.Code);
      //          VKGZ.SETFILTER(VKGZ.Type,'%1',VKRZ.Type::Item);
                VKGZ.SETRANGE(VKGZ."Document No.",VKGK."No.");
                VKGZ.SETRANGE(VKGZ."Manufacturer Code",Herstell.Code);
                VKGZ.SETRANGE(VKGZ.Type,VKRZ.Type::Item);
                VKGZ.SETFILTER(VKGZ.Quantity,'<>%1',0);
                VKGZ.SETFILTER(VKGZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
                 IF VKGZ.FIND('-') THEN BEGIN
                  REPEAT
                   var_balance[u] := var_balance[u] + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                   v_summe:=v_summe + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                   v_summe_total:= v_summe_total + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                   var_balance_total[u] := var_balance_total[u] + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                  UNTIL VKGZ.NEXT = 0;
                 END;
            UNTIL VKGK.NEXT = 0;
        END;
       END;
      // Anzeigen wenn GU fr 20 Wildix  vorliegt
      IF Herstell.Code='20' THEN BEGIN
        Sheet.Range('A23').Value := Herstell.Code;
        Sheet.Range('B23').Value := Herstell.Name;
        Sheet.Range('C23').Value := v_summe;
        Sheet.Range('D23').Value := var_balance[1];
        Sheet.Range('E23').Value := var_balance[2];
        Sheet.Range('F23').Value := var_balance[3];
        Sheet.Range('G23').Value := var_balance[4];
        Sheet.Range('H23').Value := var_balance[5];
        Sheet.Range('I23').Value := var_balance[6];
        Sheet.Range('J23').Value := var_balance[7];
        Sheet.Range('K23').Value := var_balance[8];
        Sheet.Range('L23').Value := var_balance[9];
        Sheet.Range('M23').Value := var_balance[10];
        Sheet.Range('N23').Value := var_balance[11];
        Sheet.Range('O23').Value := var_balance[12];
      END;
      // Anzeigen wenn GU fr 59 ACS  vorliegt
      IF Herstell.Code='59' THEN BEGIN
        Sheet.Range('A24').Value := Herstell.Code;
        Sheet.Range('B24').Value := Herstell.Name;
        Sheet.Range('C24').Value := v_summe;
        Sheet.Range('D24').Value := var_balance[1];
        Sheet.Range('E24').Value := var_balance[2];
        Sheet.Range('F24').Value := var_balance[3];
        Sheet.Range('G24').Value := var_balance[4];
        Sheet.Range('H24').Value := var_balance[5];
        Sheet.Range('I24').Value := var_balance[6];
        Sheet.Range('J24').Value := var_balance[7];
        Sheet.Range('K24').Value := var_balance[8];
        Sheet.Range('L24').Value := var_balance[9];
        Sheet.Range('M24').Value := var_balance[10];
        Sheet.Range('N24').Value := var_balance[11];
        Sheet.Range('O24').Value := var_balance[12];
      END;
      // Anzeigen wenn GU fr 82 Splicecom  vorliegt
      IF Herstell.Code='82' THEN BEGIN
        Sheet.Range('A25').Value := Herstell.Code;
        Sheet.Range('B25').Value := Herstell.Name;
        Sheet.Range('C25').Value := v_summe;
        Sheet.Range('D25').Value := var_balance[1];
        Sheet.Range('E25').Value := var_balance[2];
        Sheet.Range('F25').Value := var_balance[3];
        Sheet.Range('G25').Value := var_balance[4];
        Sheet.Range('H25').Value := var_balance[5];
        Sheet.Range('I25').Value := var_balance[6];
        Sheet.Range('J25').Value := var_balance[7];
        Sheet.Range('K25').Value := var_balance[8];
        Sheet.Range('L25').Value := var_balance[9];
        Sheet.Range('M25').Value := var_balance[10];
        Sheet.Range('N25').Value := var_balance[11];
        Sheet.Range('O25').Value := var_balance[12];
      END;
      // Anzeigen wenn GU fr 85 Ferrari  vorliegt
      IF Herstell.Code='85' THEN BEGIN
        Sheet.Range('A26').Value := Herstell.Code;
        Sheet.Range('B26').Value := Herstell.Name;
        Sheet.Range('C26').Value := v_summe;
        Sheet.Range('D26').Value := var_balance[1];
        Sheet.Range('E26').Value := var_balance[2];
        Sheet.Range('F26').Value := var_balance[3];
        Sheet.Range('G26').Value := var_balance[4];
        Sheet.Range('H26').Value := var_balance[5];
        Sheet.Range('I26').Value := var_balance[6];
        Sheet.Range('J26').Value := var_balance[7];
        Sheet.Range('K26').Value := var_balance[8];
        Sheet.Range('L26').Value := var_balance[9];
        Sheet.Range('M26').Value := var_balance[10];
        Sheet.Range('N26').Value := var_balance[11];
        Sheet.Range('O26').Value := var_balance[12];
      END;
      UNTIL Herstell.NEXT=0;
      END;
      j:='29';
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'VK-Gutschriften';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      Sheet.Range('A2').Value := 'Gesamt';
      Sheet.Range('B2').Value := 'VK_Gutschrift';
      Sheet.Range('C2').Value := v_summe_total;
      Sheet.Range('D2').Value := var_balance_total[1];
      Sheet.Range('E2').Value := var_balance_total[2];
      Sheet.Range('F2').Value := var_balance_total[3];
      Sheet.Range('G2').Value := var_balance_total[4];
      Sheet.Range('H2').Value := var_balance_total[5];
      Sheet.Range('I2').Value := var_balance_total[6];
      Sheet.Range('J2').Value := var_balance_total[7];
      Sheet.Range('K2').Value := var_balance_total[8];
      Sheet.Range('L2').Value := var_balance_total[9];
      Sheet.Range('M2').Value := var_balance_total[10];
      Sheet.Range('N2').Value := var_balance_total[11];
      Sheet.Range('O2').Value := var_balance_total[12];
      //j:=INCSTR(j);
      //j:=INCSTR(j);
      ///Hersteller  2 Teil EK
      //////********************************************************************************************
      j := '31';
      Sheet.Range('A'+j).Value := 'EK-Preise aus Rechnungsums„tzen nach Perioden';
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Herstell-Code';
      Sheet.Range('B'+j).Value := 'Hersteller';
      Sheet.Range('C'+j).Value := 'Gesamt';
      Sheet.Range('D'+j).Value := FORMAT(PeriodStartDate[1]);
      Sheet.Range('E'+j).Value := FORMAT(PeriodStartDate[2]);
      Sheet.Range('F'+j).Value := FORMAT(PeriodStartDate[3]);
      Sheet.Range('G'+j).Value := FORMAT(PeriodStartDate[4]);
      Sheet.Range('H'+j).Value := FORMAT(PeriodStartDate[5]);
      Sheet.Range('I'+j).Value := FORMAT(PeriodStartDate[6]);
      Sheet.Range('J'+j).Value := FORMAT(PeriodStartDate[7]);
      Sheet.Range('K'+j).Value := FORMAT(PeriodStartDate[8]);
      Sheet.Range('L'+j).Value := FORMAT(PeriodStartDate[9]);
      Sheet.Range('M'+j).Value := FORMAT(PeriodStartDate[10]);
      Sheet.Range('N'+j).Value := FORMAT(PeriodStartDate[11]);
      Sheet.Range('O'+j).Value := FORMAT(PeriodStartDate[12]);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4','20','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      //EK-Preise aus Rechnungszeilen verarbeiten
      FOR i := 1 TO 12 DO
       BEGIN
        VKRZ.RESET;
      //  VKRZ.SETFILTER(VKRZ."Manufacturer Code",'%1',Herstell.Code);
      //  VKRZ.SETFILTER(VKRZ."Posting Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
      //  VKRZ.SETFILTER(VKRZ.Type,'%1',VKRZ.Type::Item);
        VKRZ.SETRANGE(VKRZ."Manufacturer Code",Herstell.Code);
        VKRZ.SETRANGE(VKRZ."Posting Date",PeriodStartDate[i],PeriodStartDate[i+1] - 1);
        VKRZ.SETRANGE(VKRZ.Type,VKRZ.Type::Item);
        VKRZ.SETFILTER(VKRZ.Quantity,'<>%1',0);
        VKRZ.SETFILTER(VKRZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
        IF VKRZ.FIND('-') THEN BEGIN
            REPEAT
      //        IF  VKRZ."VK-Preis (MW)"=VKRZ."Unit Price" THEN
      //         BEGIN
                 var_balance[i] := var_balance[i] +(VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                  v_summe:=v_summe + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                  v_summe_total:= v_summe_total + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                  var_balance_total[i] := var_balance_total[i] + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
      //          END
      //         ELSE
      //          BEGIN
      //             IF VKRZ.Einkaufsw„hrungsfaktor <> 0 THEN
      //              BEGIN
      //  Diese Zeile stimmt nur, wenn Einkaufrechnungsfaktor identisch mit Verkaufsw„hrungsfaktor aus dem VK-Kopf  **********************
      //                var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
      //                v_summe:=v_summe + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
      //                v_summe_total:= v_summe_total + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
      // var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
      //              END
      //             ELSE
      //              BEGIN
      //                var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
      //                v_summe:=v_summe + ((VKRZ."Unit Price") * (VKRZ.Quantity));
      //                v_summe_total:= v_summe_total + ((VKRZ."Unit Price") * (VKRZ.Quantity));
      //                var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
      //              END;
      //          END;
           UNTIL VKRZ.NEXT = 0;
        END ELSE BEGIN
          var_balance[i] := 0;
        END;
      END;
      //FOR i := 1 TO 12 DO
      //BEGIN
      //  var_balance_total[i] := var_balance_total[i] + var_balance[i];
      //END;
      // Anzeigen wenn Einkauf-Ums„tze fr 20 Wildix  vorliegt
      IF Herstell.Code='20' THEN BEGIN
        Sheet.Range('A33').Value := Herstell.Code;
        Sheet.Range('B33').Value := Herstell.Name;
        Sheet.Range('C33').Value := v_summe;
        Sheet.Range('D33').Value := var_balance[1];
        Sheet.Range('E33').Value := var_balance[2];
        Sheet.Range('F33').Value := var_balance[3];
        Sheet.Range('G33').Value := var_balance[4];
        Sheet.Range('H33').Value := var_balance[5];
        Sheet.Range('I33').Value := var_balance[6];
        Sheet.Range('J33').Value := var_balance[7];
        Sheet.Range('K33').Value := var_balance[8];
        Sheet.Range('L33').Value := var_balance[9];
        Sheet.Range('M33').Value := var_balance[10];
        Sheet.Range('N33').Value := var_balance[11];
        Sheet.Range('O33').Value := var_balance[12];
      END;
      // Anzeigen wenn Einkauf-Ums„tze fr 59 ACS vorliegt
      IF Herstell.Code='59' THEN BEGIN
        Sheet.Range('A34').Value := Herstell.Code;
        Sheet.Range('B34').Value := Herstell.Name;
        Sheet.Range('C34').Value := v_summe;
        Sheet.Range('D34').Value := var_balance[1];
        Sheet.Range('E34').Value := var_balance[2];
        Sheet.Range('F34').Value := var_balance[3];
        Sheet.Range('G34').Value := var_balance[4];
        Sheet.Range('H34').Value := var_balance[5];
        Sheet.Range('I34').Value := var_balance[6];
        Sheet.Range('J34').Value := var_balance[7];
        Sheet.Range('K34').Value := var_balance[8];
        Sheet.Range('L34').Value := var_balance[9];
        Sheet.Range('M34').Value := var_balance[10];
        Sheet.Range('N34').Value := var_balance[11];
        Sheet.Range('O34').Value := var_balance[12];
      END;
      // Anzeigen wenn Einkauf-Ums„tze fr 82 Splicecom  vorliegt
      IF Herstell.Code='82' THEN BEGIN
        Sheet.Range('A35').Value := Herstell.Code;
        Sheet.Range('B35').Value := Herstell.Name;
        Sheet.Range('C35').Value := v_summe;
        Sheet.Range('D35').Value := var_balance[1];
        Sheet.Range('E35').Value := var_balance[2];
        Sheet.Range('F35').Value := var_balance[3];
        Sheet.Range('G35').Value := var_balance[4];
        Sheet.Range('H35').Value := var_balance[5];
        Sheet.Range('I35').Value := var_balance[6];
        Sheet.Range('J35').Value := var_balance[7];
        Sheet.Range('K35').Value := var_balance[8];
        Sheet.Range('L35').Value := var_balance[9];
        Sheet.Range('M35').Value := var_balance[10];
        Sheet.Range('N35').Value := var_balance[11];
        Sheet.Range('O35').Value := var_balance[12];
      END;
      // Anzeigen wenn Einkauf-Ums„tze fr 85 Ferrari  vorliegt
      IF Herstell.Code='85' THEN BEGIN
        Sheet.Range('A36').Value := Herstell.Code;
        Sheet.Range('B36').Value := Herstell.Name;
        Sheet.Range('C36').Value := v_summe;
        Sheet.Range('D36').Value := var_balance[1];
        Sheet.Range('E36').Value := var_balance[2];
        Sheet.Range('F36').Value := var_balance[3];
        Sheet.Range('G36').Value := var_balance[4];
        Sheet.Range('H36').Value := var_balance[5];
        Sheet.Range('I36').Value := var_balance[6];
        Sheet.Range('J36').Value := var_balance[7];
        Sheet.Range('K36').Value := var_balance[8];
        Sheet.Range('L36').Value := var_balance[9];
        Sheet.Range('M36').Value := var_balance[10];
        Sheet.Range('N36').Value := var_balance[11];
        Sheet.Range('O36').Value := var_balance[12];
      END;
      //IF v_summe <> 0 THEN BEGIN
      //  j:=INCSTR(j);
      //END;
      UNTIL Herstell.NEXT=0;
      END;
      //Salesperson/Purchaser - OnPostDataItem()
      j := '39';
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'EK-Rechnungen';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      Sheet.Range('A3').Value := 'Gesamt';
      Sheet.Range('B3').Value := 'EK-Rechnung';
      Sheet.Range('C3').Value := v_summe_total;
      Sheet.Range('D3').Value := var_balance_total[1];
      Sheet.Range('E3').Value := var_balance_total[2];
      Sheet.Range('F3').Value := var_balance_total[3];
      Sheet.Range('G3').Value := var_balance_total[4];
      Sheet.Range('H3').Value := var_balance_total[5];
      Sheet.Range('I3').Value := var_balance_total[6];
      Sheet.Range('J3').Value := var_balance_total[7];
      Sheet.Range('K3').Value := var_balance_total[8];
      Sheet.Range('L3').Value := var_balance_total[9];
      Sheet.Range('M3').Value := var_balance_total[10];
      Sheet.Range('N3').Value := var_balance_total[11];
      Sheet.Range('O3').Value := var_balance_total[12];
      //j:=INCSTR(j);
      //j:=INCSTR(j);
      // Gutschriftszeilen verarbeiten************************************************************************************
      j := '41';
      Sheet.Range('A'+j).Value := 'EK-Preise aus VK-Gutschriften nach Perioden'; // definiert die Beschriftung der berschriftszeile
        j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Herstell-Code';
      Sheet.Range('B'+j).Value := 'Hersteller';
      Sheet.Range('C'+j).Value := 'Gesamt';
      Sheet.Range('D'+j).Value := FORMAT(PeriodStartDate[1]);
      Sheet.Range('E'+j).Value := FORMAT(PeriodStartDate[2]);
      Sheet.Range('F'+j).Value := FORMAT(PeriodStartDate[3]);
      Sheet.Range('G'+j).Value := FORMAT(PeriodStartDate[4]);
      Sheet.Range('H'+j).Value := FORMAT(PeriodStartDate[5]);
      Sheet.Range('I'+j).Value := FORMAT(PeriodStartDate[6]);
      Sheet.Range('J'+j).Value := FORMAT(PeriodStartDate[7]);
      Sheet.Range('K'+j).Value := FORMAT(PeriodStartDate[8]);
      Sheet.Range('L'+j).Value := FORMAT(PeriodStartDate[9]);
      Sheet.Range('M'+j).Value := FORMAT(PeriodStartDate[10]);
      Sheet.Range('N'+j).Value := FORMAT(PeriodStartDate[11]);
      Sheet.Range('O'+j).Value := FORMAT(PeriodStartDate[12]);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4','20','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      FOR u := 1 TO 12 DO
       BEGIN
        VKGK.RESET;
        VKGK.SETFILTER(VKGK."Posting Date",'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
        IF VKGK.FIND('-') THEN BEGIN
            REPEAT
               VKGZ.RESET;
      //          VKGZ.SETFILTER(VKGZ."Document No.",'%1',VKGK."No.");
      //          VKGZ.SETFILTER(VKGZ."Manufacturer Code",'%1',Herstell.Code);
      //          VKGZ.SETFILTER(VKGZ.Type,'%1',VKRZ.Type::Item);
                VKGZ.SETRANGE(VKGZ."Document No.",VKGK."No.");
                VKGZ.SETRANGE(VKGZ."Manufacturer Code",Herstell.Code);
                VKGZ.SETRANGE(VKGZ.Type,VKRZ.Type::Item);
                VKGZ.SETFILTER(VKGZ.Quantity,'<>%1',0);
                VKGZ.SETFILTER(VKGZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
                 IF VKGZ.FIND('-') THEN BEGIN
                  REPEAT
                   var_balance[u] := var_balance[u] + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                   v_summe:=v_summe + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                   v_summe_total:= v_summe_total + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                   var_balance_total[u] := var_balance_total[u] + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                  UNTIL VKGZ.NEXT = 0;
                 END;
            UNTIL VKGK.NEXT = 0;
        END;
       END;
      // Anzeigen wenn Einkauf-Gutschriften fr 20 Wildix  vorliegen
      IF Herstell.Code='20' THEN BEGIN
        Sheet.Range('A43').Value := Herstell.Code;
        Sheet.Range('B43').Value := Herstell.Name;
        Sheet.Range('C43').Value := v_summe;
        Sheet.Range('D43').Value := var_balance[1];
        Sheet.Range('E43').Value := var_balance[2];
        Sheet.Range('F43').Value := var_balance[3];
        Sheet.Range('G43').Value := var_balance[4];
        Sheet.Range('H43').Value := var_balance[5];
        Sheet.Range('I43').Value := var_balance[6];
        Sheet.Range('J43').Value := var_balance[7];
        Sheet.Range('K43').Value := var_balance[8];
        Sheet.Range('L43').Value := var_balance[9];
        Sheet.Range('M43').Value := var_balance[10];
        Sheet.Range('N43').Value := var_balance[11];
        Sheet.Range('O43').Value := var_balance[12];
      END;
      // Anzeigen wenn Einkauf-Gutschriften fr 59 ACS  vorliegen
      IF Herstell.Code='59' THEN BEGIN
        Sheet.Range('A44').Value := Herstell.Code;
        Sheet.Range('B44').Value := Herstell.Name;
        Sheet.Range('C44').Value := v_summe;
        Sheet.Range('D44').Value := var_balance[1];
        Sheet.Range('E44').Value := var_balance[2];
        Sheet.Range('F44').Value := var_balance[3];
        Sheet.Range('G44').Value := var_balance[4];
        Sheet.Range('H44').Value := var_balance[5];
        Sheet.Range('I44').Value := var_balance[6];
        Sheet.Range('J44').Value := var_balance[7];
        Sheet.Range('K44').Value := var_balance[8];
        Sheet.Range('L44').Value := var_balance[9];
        Sheet.Range('M44').Value := var_balance[10];
        Sheet.Range('N44').Value := var_balance[11];
        Sheet.Range('O44').Value := var_balance[12];
      END;
      // Anzeigen wenn Einkauf-Gutschriften fr 82 Splicecom  vorliegen
      IF Herstell.Code='82' THEN BEGIN
        Sheet.Range('A45').Value := Herstell.Code;
        Sheet.Range('B45').Value := Herstell.Name;
        Sheet.Range('C45').Value := v_summe;
        Sheet.Range('D45').Value := var_balance[1];
        Sheet.Range('E45').Value := var_balance[2];
        Sheet.Range('F45').Value := var_balance[3];
        Sheet.Range('G45').Value := var_balance[4];
        Sheet.Range('H45').Value := var_balance[5];
        Sheet.Range('I45').Value := var_balance[6];
        Sheet.Range('J45').Value := var_balance[7];
        Sheet.Range('K45').Value := var_balance[8];
        Sheet.Range('L45').Value := var_balance[9];
        Sheet.Range('M45').Value := var_balance[10];
        Sheet.Range('N45').Value := var_balance[11];
        Sheet.Range('O45').Value := var_balance[12];
      END;
      // Anzeigen wenn Einkauf-Gutschriften fr 85 Ferrari vorliegen
      IF Herstell.Code='85' THEN BEGIN
        Sheet.Range('A46').Value := Herstell.Code;
        Sheet.Range('B46').Value := Herstell.Name;
        Sheet.Range('C46').Value := v_summe;
        Sheet.Range('D46').Value := var_balance[1];
        Sheet.Range('E46').Value := var_balance[2];
        Sheet.Range('F46').Value := var_balance[3];
        Sheet.Range('G46').Value := var_balance[4];
        Sheet.Range('H46').Value := var_balance[5];
        Sheet.Range('I46').Value := var_balance[6];
        Sheet.Range('J46').Value := var_balance[7];
        Sheet.Range('K46').Value := var_balance[8];
        Sheet.Range('L46').Value := var_balance[9];
        Sheet.Range('M46').Value := var_balance[10];
        Sheet.Range('N46').Value := var_balance[11];
        Sheet.Range('O46').Value := var_balance[12];
      END;
      //IF v_summe <> 0 THEN BEGIN
      //  j:=INCSTR(j);
      //END;
      UNTIL Herstell.NEXT=0;
      END;
      j := '49';
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'EK-Gutschriften';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      Sheet.Range('A4').Value := 'Gesamt';
      Sheet.Range('B4').Value := 'EK-Gutschrift';
      Sheet.Range('C4').Value := v_summe_total;
      Sheet.Range('D4').Value := var_balance_total[1];
      Sheet.Range('E4').Value := var_balance_total[2];
      Sheet.Range('F4').Value := var_balance_total[3];
      Sheet.Range('G4').Value := var_balance_total[4];
      Sheet.Range('H4').Value := var_balance_total[5];
      Sheet.Range('I4').Value := var_balance_total[6];
      Sheet.Range('J4').Value := var_balance_total[7];
      Sheet.Range('K4').Value := var_balance_total[8];
      Sheet.Range('L4').Value := var_balance_total[9];
      Sheet.Range('M4').Value := var_balance_total[10];
      Sheet.Range('N4').Value := var_balance_total[11];
      Sheet.Range('O4').Value := var_balance_total[12];
      //IF ERASE('F:\Tausch\Nav\Daten\Daten_Nav_Systeme.xlsx')THEN;
      IF wshFile.FileExists('F:\Tausch\Nav\Daten\Daten_Nav_Systeme.xlsx') THEN wshFile.DeleteFile('F:\Tausch\Nav\Daten\Daten_Nav_Systeme.xlsx');
      CLEAR(wshFile);
      Book.SaveAs('F:\Tausch\Nav\Daten\Daten_Nav_Systeme.xlsx',51,'','',FALSE,FALSE);
      Book.Close(TRUE);


      //Dienstleistung;
      //Excel.Visible(TRUE);
      //Excel.Quit;
    END;

    PROCEDURE Systeme_Test@1140004();
    BEGIN
      PeriodStartDate[1] := 010718D;
      FOR i := 1 TO 13 DO
      PeriodStartDate[i + 1] := CALCDATE('1M',PeriodStartDate[i]);
      PeriodStartDate[14] := 31129999D;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);
      CREATE (Excel,FALSE,TRUE);
      CREATE (wshFile,FALSE,TRUE);                                           //erzeugt excel
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('A11').Value := 'VK-Ums„tze nach Perioden'; // definiert die Beschriftung der berschriftszeile
      Sheet.Range('A12').Value := 'Herstell-Code';
      Sheet.Range('B12').Value := 'Hersteller';
      Sheet.Range('C12').Value := 'Gesamt';
      Sheet.Range('D12').Value := FORMAT(PeriodStartDate[1]);
      Sheet.Range('E12').Value := FORMAT(PeriodStartDate[2]);
      Sheet.Range('F12').Value := FORMAT(PeriodStartDate[3]);
      Sheet.Range('G12').Value := FORMAT(PeriodStartDate[4]);
      Sheet.Range('H12').Value := FORMAT(PeriodStartDate[5]);
      Sheet.Range('I12').Value := FORMAT(PeriodStartDate[6]);
      Sheet.Range('J12').Value := FORMAT(PeriodStartDate[7]);
      Sheet.Range('K12').Value := FORMAT(PeriodStartDate[8]);
      Sheet.Range('L12').Value := FORMAT(PeriodStartDate[9]);
      Sheet.Range('M12').Value := FORMAT(PeriodStartDate[10]);
      Sheet.Range('N12').Value := FORMAT(PeriodStartDate[11]);
      Sheet.Range('O12').Value := FORMAT(PeriodStartDate[12]);
      j := '13';                                                    // <- Import in excel ab Zeile 2
      ///Hersteller  1 Teil VK
      //////********************************************************************************************
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      //Rechnungszeilen verarbeiten
      FOR i := 1 TO 12 DO
       BEGIN
        VKRZ.RESET;
        VKRZ.SETFILTER(VKRZ."Manufacturer Code",'%1',Herstell.Code);
        VKRZ.SETFILTER(VKRZ."Posting Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
      //VKRZ.SETFILTER(VKRZ."Posting Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] );
        VKRZ.SETFILTER(VKRZ.Type,'%1',VKRZ.Type::Item);
        VKRZ.SETFILTER(VKRZ.Quantity,'>%1',0);
        VKRZ.SETFILTER(VKRZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
        IF VKRZ.FIND('-') THEN BEGIN
            REPEAT
              IF  VKRZ."VK-Preis (MW)"=VKRZ."Unit Price" THEN
               BEGIN
                 var_balance[i] := var_balance[i] +( VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_summe:=v_summe + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_summe_total:= v_summe_total + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  var_balance_total[i] := var_balance_total[i] + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                END
               ELSE
                BEGIN
                   IF VKRZ.Einkaufsw„hrungsfaktor <> 0 THEN
                    BEGIN
      //  Diese Zeile stimmt nur, wenn Einkaufrechnungsfaktor identisch mit Verkaufsw„hrungsfaktor aus dem VK-Kopf  **********************
                  v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                      var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                      v_summe:=v_summe + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                      v_summe_total:= v_summe_total + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    END
                   ELSE
                    BEGIN
                    v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                      var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      v_summe:=v_summe + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      v_summe_total:= v_summe_total + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                    END;
                END;
           UNTIL VKRZ.NEXT = 0;
        END ELSE BEGIN
          var_balance[i] := 0;
        END;
      END;
      //FOR i := 1 TO 12 DO
      //BEGIN
      //  var_balance_total[i] := var_balance_total[i] + var_balance[i];
      //END;
      // Anzeigen wenn AE vorliegt
      IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      END;
      UNTIL Herstell.NEXT=0;
      END;
      //Salesperson/Purchaser - OnPostDataItem()
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'VK-Rechnungen';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      //Sheet.Range('P'+j).Value := v_sum_au;
      //   Zeile 1      *********************************************************************************************
      Sheet.Range('A1').Value := 'Gesamt';
      Sheet.Range('B1').Value := 'VK-Rechnung';
      Sheet.Range('C1').Value := v_summe_total;
      Sheet.Range('D1').Value := var_balance_total[1];
      Sheet.Range('E1').Value := var_balance_total[2];
      Sheet.Range('F1').Value := var_balance_total[3];
      Sheet.Range('G1').Value := var_balance_total[4];
      Sheet.Range('H1').Value := var_balance_total[5];
      Sheet.Range('I1').Value := var_balance_total[6];
      Sheet.Range('J1').Value := var_balance_total[7];
      Sheet.Range('K1').Value := var_balance_total[8];
      Sheet.Range('L1').Value := var_balance_total[9];
      Sheet.Range('M1').Value := var_balance_total[10];
      Sheet.Range('N1').Value := var_balance_total[11];
      Sheet.Range('O1').Value := var_balance_total[12];
      j:=INCSTR(j);
      j:=INCSTR(j);
      //  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      {
      Sheet.Range('B1').Value := 'VK-Rechnung Test !!!!';
      j:=INCSTR(j);
      ///Hersteller  1 Teil VK
      //////********************************************************************************************
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      //Rechnungszeilen verarbeiten
      //{
      FOR i := 1 TO 12 DO
       BEGIN
        VKRZ.RESET;
        VKRZ.SETFILTER(VKRZ."Manufacturer Code",'%1',Herstell.Code);
        VKRZ.SETFILTER(VKRZ."Posting Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
      //VKRZ.SETFILTER(VKRZ."Posting Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] );
        VKRZ.SETFILTER(VKRZ.Type,'%1',VKRZ.Type::Item);
        VKRZ.SETFILTER(VKRZ.Quantity,'>%1',0);
        IF VKRZ.FIND('-') THEN BEGIN
            REPEAT
              IF  VKRZ."VK-Preis (MW)"=VKRZ."Unit Price" THEN
               BEGIN
                 var_balance[i] := var_balance[i] +( VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_summe:=v_summe + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_summe_total:= v_summe_total + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  var_balance_total[i] := var_balance_total[i] + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                END
               ELSE
                BEGIN
                   IF VKRZ.Einkaufsw„hrungsfaktor <> 0 THEN
                    BEGIN
      //  Diese Zeile stimmt nur, wenn Einkaufrechnungsfaktor identisch mit Verkaufsw„hrungsfaktor aus dem VK-Kopf  **********************
                      var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                      v_summe:=v_summe + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                      v_summe_total:= v_summe_total + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
       var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    END
                   ELSE
                    BEGIN
                      var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      v_summe:=v_summe + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      v_summe_total:= v_summe_total + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                    END;
                END;
           UNTIL VKRZ.NEXT = 0;
        END ELSE BEGIN
          var_balance[i] := 0;
        END;
      END;
      //}
      FOR u := 1 TO 12 DO
       BEGIN
        VKRK.RESET;
        VKRK.SETFILTER(VKRK."Posting Date",'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
        IF VKRK.FIND('-') THEN BEGIN
            REPEAT
               VKRZ.RESET;
                VKRZ.SETFILTER(VKRZ."Document No.",'%1',VKRK."No.");
                VKRZ.SETFILTER(VKRZ."Manufacturer Code",'%1',Herstell.Code);
                VKRZ.SETFILTER(VKRZ.Type,'%1',VKRZ.Type::Item);
                VKRZ.SETFILTER(VKRZ.Quantity,'<>%1',0);
                VKRZ.SETFILTER(VKRZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
                 IF VKRZ.FIND('-') THEN BEGIN
                  REPEAT
                    IF VKRK."Currency Factor" = 0 THEN BEGIN
                          var_balance[u] := var_balance[u] + (VKRZ."Unit Price"*VKRZ.Quantity*(-1));
                          v_summe:=v_summe + (VKRZ."Unit Price"*VKRZ.Quantity*(-1));
                          v_summe_total:= v_summe_total + (VKRZ."Unit Price"*VKRZ.Quantity*(-1));
                          var_balance_total[u] := var_balance_total[u] + (VKRZ."Unit Price"*VKRZ.Quantity*(-1));
                     END ELSE BEGIN
                          var_balance[u] := var_balance[u] + (VKRZ."Unit Price"*VKRZ.Quantity*(-1)/VKRK."Currency Factor");
                          v_summe:=v_summe + (VKRZ."Unit Price"*VKRZ.Quantity*(-1)/VKRK."Currency Factor");
                          v_summe_total:= v_summe_total + (VKRZ."Unit Price"*VKRZ.Quantity*(-1)/VKRK."Currency Factor");
                          var_balance_total[u] := var_balance_total[u] + (VKRZ."Unit Price"*VKRZ.Quantity*(-1)/VKRK."Currency Factor");
                     END;
                  UNTIL VKRZ.NEXT = 0;
                 END;
            UNTIL VKRK.NEXT = 0;
        END;
       END;
      //FOR i := 1 TO 12 DO
      //BEGIN
      //  var_balance_total[i] := var_balance_total[i] + var_balance[i];
      //END;
      // Anzeigen wenn AE vorliegt
      IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      END;
      UNTIL Herstell.NEXT=0;
      END;
      //Salesperson/Purchaser - OnPostDataItem()
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'VK-Rechnungen';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      //   Zeile 5     **********************************************************************************
      Sheet.Range('A5').Value := 'Gesamt';
      Sheet.Range('B5').Value := 'VK-Rechnung';
      Sheet.Range('C5').Value := v_summe_total;
      Sheet.Range('D5').Value := var_balance_total[1];
      Sheet.Range('E5').Value := var_balance_total[2];
      Sheet.Range('F5').Value := var_balance_total[3];
      Sheet.Range('G5').Value := var_balance_total[4];
      Sheet.Range('H5').Value := var_balance_total[5];
      Sheet.Range('I5').Value := var_balance_total[6];
      Sheet.Range('J5').Value := var_balance_total[7];
      Sheet.Range('K5').Value := var_balance_total[8];
      Sheet.Range('L5').Value := var_balance_total[9];
      Sheet.Range('M5').Value := var_balance_total[10];
      Sheet.Range('N5').Value := var_balance_total[11];
      Sheet.Range('O5').Value := var_balance_total[12];
      j:=INCSTR(j);
      j:=INCSTR(j);
      }
       //   ENDE   TEST  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      // Gutschriftszeilen verarbeiten
      Sheet.Range('A'+j).Value := 'VK-Gutschriften nach Perioden'; // definiert die Beschriftung der berschriftszeile
        j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Herstell-Code';
      Sheet.Range('B'+j).Value := 'Hersteller';
      Sheet.Range('C'+j).Value := 'Gesamt';
      Sheet.Range('D'+j).Value := FORMAT(PeriodStartDate[1]);
      Sheet.Range('E'+j).Value := FORMAT(PeriodStartDate[2]);
      Sheet.Range('F'+j).Value := FORMAT(PeriodStartDate[3]);
      Sheet.Range('G'+j).Value := FORMAT(PeriodStartDate[4]);
      Sheet.Range('H'+j).Value := FORMAT(PeriodStartDate[5]);
      Sheet.Range('I'+j).Value := FORMAT(PeriodStartDate[6]);
      Sheet.Range('J'+j).Value := FORMAT(PeriodStartDate[7]);
      Sheet.Range('K'+j).Value := FORMAT(PeriodStartDate[8]);
      Sheet.Range('L'+j).Value := FORMAT(PeriodStartDate[9]);
      Sheet.Range('M'+j).Value := FORMAT(PeriodStartDate[10]);
      Sheet.Range('N'+j).Value := FORMAT(PeriodStartDate[11]);
      Sheet.Range('O'+j).Value := FORMAT(PeriodStartDate[12]);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      FOR u := 1 TO 12 DO
       BEGIN
        VKGK.RESET;
        VKGK.SETFILTER(VKGK."Posting Date",'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
        IF VKGK.FIND('-') THEN BEGIN
            REPEAT
               VKGZ.RESET;
                VKGZ.SETFILTER(VKGZ."Document No.",'%1',VKGK."No.");
                VKGZ.SETFILTER(VKGZ."Manufacturer Code",'%1',Herstell.Code);
                VKGZ.SETFILTER(VKGZ.Type,'%1',VKRZ.Type::Item);
                VKGZ.SETFILTER(VKGZ.Quantity,'<>%1',0);
                VKGZ.SETFILTER(VKGZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
                 IF VKGZ.FIND('-') THEN BEGIN
                  REPEAT
                   var_balance[u] := var_balance[u] + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                   v_summe:=v_summe + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                   v_summe_total:= v_summe_total + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                   var_balance_total[u] := var_balance_total[u] + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                  UNTIL VKGZ.NEXT = 0;
                 END;
            UNTIL VKGK.NEXT = 0;
        END;
       END;
      IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      END;
      UNTIL Herstell.NEXT=0;
      END;
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'VK-Gutschriften';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      //  Zeile 2        *********************************************************************************
      Sheet.Range('A2').Value := 'Gesamt';
      Sheet.Range('B2').Value := 'VK_Gutschrift';
      Sheet.Range('C2').Value := v_summe_total;
      Sheet.Range('D2').Value := var_balance_total[1];
      Sheet.Range('E2').Value := var_balance_total[2];
      Sheet.Range('F2').Value := var_balance_total[3];
      Sheet.Range('G2').Value := var_balance_total[4];
      Sheet.Range('H2').Value := var_balance_total[5];
      Sheet.Range('I2').Value := var_balance_total[6];
      Sheet.Range('J2').Value := var_balance_total[7];
      Sheet.Range('K2').Value := var_balance_total[8];
      Sheet.Range('L2').Value := var_balance_total[9];
      Sheet.Range('M2').Value := var_balance_total[10];
      Sheet.Range('N2').Value := var_balance_total[11];
      Sheet.Range('O2').Value := var_balance_total[12];
      j:=INCSTR(j);
      j:=INCSTR(j);
      ///Hersteller  2 Teil EK
      // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      Sheet.Range('A'+j).Value := 'EK-Ums„tze nach Perioden';
      j:=INCSTR(j);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      //EK-Rechnungszeilen verarbeiten
      FOR i := 1 TO 12 DO
       BEGIN
        VKRZ.RESET;
        VKRZ.SETFILTER(VKRZ."Manufacturer Code",'%1',Herstell.Code);
        VKRZ.SETFILTER(VKRZ."Posting Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
      //VKRZ.SETFILTER(VKRZ."Posting Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] );
        VKRZ.SETFILTER(VKRZ.Type,'%1',VKRZ.Type::Item);
        VKRZ.SETFILTER(VKRZ.Quantity,'<>%1',0);
        VKRZ.SETFILTER(VKRZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
        IF VKRZ.FIND('-') THEN BEGIN
            REPEAT
      //        IF  VKRZ."VK-Preis (MW)"=VKRZ."Unit Price" THEN
      //         BEGIN
                 var_balance[i] := var_balance[i] +(VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                  v_summe:=v_summe + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                  v_summe_total:= v_summe_total + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                  var_balance_total[i] := var_balance_total[i] + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
      //          END
      //         ELSE
      //          BEGIN
      //             IF VKRZ.Einkaufsw„hrungsfaktor <> 0 THEN
      //              BEGIN
      //  Diese Zeile stimmt nur, wenn Einkaufrechnungsfaktor identisch mit Verkaufsw„hrungsfaktor aus dem VK-Kopf  **********************
      //                var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
      //                v_summe:=v_summe + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
      //                v_summe_total:= v_summe_total + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
      // var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
      //              END
      //             ELSE
      //              BEGIN
      //                var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
      //                v_summe:=v_summe + ((VKRZ."Unit Price") * (VKRZ.Quantity));
      //                v_summe_total:= v_summe_total + ((VKRZ."Unit Price") * (VKRZ.Quantity));
      //                var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
      //              END;
      //          END;
           UNTIL VKRZ.NEXT = 0;
        END ELSE BEGIN
          var_balance[i] := 0;
        END;
      END;
      //FOR i := 1 TO 12 DO
      //BEGIN
      //  var_balance_total[i] := var_balance_total[i] + var_balance[i];
      //END;
      // Anzeigen wenn AE vorliegt
      IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      END;
      UNTIL Herstell.NEXT=0;
      END;
      //Salesperson/Purchaser - OnPostDataItem()
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'EK-Rechnungen';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      //   Zeile 3      *****************************************************************************************************
      Sheet.Range('A3').Value := 'Gesamt';
      Sheet.Range('B3').Value := 'EK-Rechnung';
      Sheet.Range('C3').Value := v_summe_total;
      Sheet.Range('D3').Value := var_balance_total[1];
      Sheet.Range('E3').Value := var_balance_total[2];
      Sheet.Range('F3').Value := var_balance_total[3];
      Sheet.Range('G3').Value := var_balance_total[4];
      Sheet.Range('H3').Value := var_balance_total[5];
      Sheet.Range('I3').Value := var_balance_total[6];
      Sheet.Range('J3').Value := var_balance_total[7];
      Sheet.Range('K3').Value := var_balance_total[8];
      Sheet.Range('L3').Value := var_balance_total[9];
      Sheet.Range('M3').Value := var_balance_total[10];
      Sheet.Range('N3').Value := var_balance_total[11];
      Sheet.Range('O3').Value := var_balance_total[12];
      j:=INCSTR(j);
      j:=INCSTR(j);
      // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      // Gutschriftszeilen verarbeiten
      Sheet.Range('A'+j).Value := 'EK-Gutschriften nach Perioden'; // definiert die Beschriftung der berschriftszeile
        j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Herstell-Code';
      Sheet.Range('B'+j).Value := 'Hersteller';
      Sheet.Range('C'+j).Value := 'Gesamt';
      Sheet.Range('D'+j).Value := FORMAT(PeriodStartDate[1]);
      Sheet.Range('E'+j).Value := FORMAT(PeriodStartDate[2]);
      Sheet.Range('F'+j).Value := FORMAT(PeriodStartDate[3]);
      Sheet.Range('G'+j).Value := FORMAT(PeriodStartDate[4]);
      Sheet.Range('H'+j).Value := FORMAT(PeriodStartDate[5]);
      Sheet.Range('I'+j).Value := FORMAT(PeriodStartDate[6]);
      Sheet.Range('J'+j).Value := FORMAT(PeriodStartDate[7]);
      Sheet.Range('K'+j).Value := FORMAT(PeriodStartDate[8]);
      Sheet.Range('L'+j).Value := FORMAT(PeriodStartDate[9]);
      Sheet.Range('M'+j).Value := FORMAT(PeriodStartDate[10]);
      Sheet.Range('N'+j).Value := FORMAT(PeriodStartDate[11]);
      Sheet.Range('O'+j).Value := FORMAT(PeriodStartDate[12]);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      FOR u := 1 TO 12 DO
       BEGIN
        VKGK.RESET;
        VKGK.SETFILTER(VKGK."Posting Date",'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
        IF VKGK.FIND('-') THEN BEGIN
            REPEAT
               VKGZ.RESET;
                VKGZ.SETFILTER(VKGZ."Document No.",'%1',VKGK."No.");
                VKGZ.SETFILTER(VKGZ."Manufacturer Code",'%1',Herstell.Code);
                VKGZ.SETFILTER(VKGZ.Type,'%1',VKRZ.Type::Item);
                VKGZ.SETFILTER(VKGZ.Quantity,'<>%1',0);
                VKGZ.SETFILTER(VKGZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
                 IF VKGZ.FIND('-') THEN BEGIN
                  REPEAT
                   var_balance[u] := var_balance[u] + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                   v_summe:=v_summe + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                   v_summe_total:= v_summe_total + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                   var_balance_total[u] := var_balance_total[u] + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                  UNTIL VKGZ.NEXT = 0;
                 END;
            UNTIL VKGK.NEXT = 0;
        END;
       END;
      IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      END;
      UNTIL Herstell.NEXT=0;
      END;
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'EK-Gutschriften';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      //   Zeile 4     ******************************************************************************************************
      Sheet.Range('A4').Value := 'Gesamt';
      Sheet.Range('B4').Value := 'EK-Gutschrift';
      Sheet.Range('C4').Value := v_summe_total;
      Sheet.Range('D4').Value := var_balance_total[1];
      Sheet.Range('E4').Value := var_balance_total[2];
      Sheet.Range('F4').Value := var_balance_total[3];
      Sheet.Range('G4').Value := var_balance_total[4];
      Sheet.Range('H4').Value := var_balance_total[5];
      Sheet.Range('I4').Value := var_balance_total[6];
      Sheet.Range('J4').Value := var_balance_total[7];
      Sheet.Range('K4').Value := var_balance_total[8];
      Sheet.Range('L4').Value := var_balance_total[9];
      Sheet.Range('M4').Value := var_balance_total[10];
      Sheet.Range('N4').Value := var_balance_total[11];
      Sheet.Range('O4').Value := var_balance_total[12];
      //  ab hier TEST mit Belege-Tabelle   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      //{
      v_sum_au:=0;
       j:=INCSTR(j);
       j:=INCSTR(j);
       j:=INCSTR(j);
      // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      Sheet.Range('A'+j).Value := 'Test Daten aus Belege-Tabelle';
        j:=INCSTR(j);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      FOR u := 1 TO 12 DO
       BEGIN
        rech.RESET;
        rech.SETFILTER(rech.Herstellercode,'%1',Herstell.Code);
        rech.SETFILTER(rech.Belegdatum,'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
        rech.SETFILTER(rech.Belegart,'%1',rech.Belegart::Invoice);
        rech.SETFILTER(rech.Lagerortcode,'%1|%2|%3','ZENT','KONSI','ERSATZ');
      //  rech.SETFILTER(rech.Lagerortcode,'%1|%2|%3|%4','ZENT','KONSI','IDT','ERSATZ');
        rech.SETFILTER(rech.Menge,'<>%1',0);
        IF rech.FIND('-') THEN BEGIN
            REPEAT
                   var_balance[u] := var_balance[u] + (rech."Betrag MW ohne Mwst.");
                   v_summe:=v_summe + (rech."Betrag MW ohne Mwst.");
                   v_summe_total:= v_summe_total + (rech."Betrag MW ohne Mwst.");
                   v_sum_au:=v_sum_au + (rech.Menge*rech."Einstandspreis MW");
                   var_balance_total[u] := var_balance_total[u] + (rech."Betrag MW ohne Mwst.");
            UNTIL rech.NEXT = 0;
        END;
       END;
      IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      END;
      UNTIL Herstell.NEXT=0;
      END;
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'BELEG VK-Rechnung';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      Sheet.Range('P'+j).Value := v_sum_au;
      // Zeile  5        ****************************************************************************************
      Sheet.Range('A5').Value := 'Gesamt';
      Sheet.Range('B5').Value := 'BELEG VK-Rechnung';
      Sheet.Range('C5').Value := v_summe_total;
      Sheet.Range('D5').Value := var_balance_total[1];
      Sheet.Range('E5').Value := var_balance_total[2];
      Sheet.Range('F5').Value := var_balance_total[3];
      Sheet.Range('G5').Value := var_balance_total[4];
      Sheet.Range('H5').Value := var_balance_total[5];
      Sheet.Range('I5').Value := var_balance_total[6];
      Sheet.Range('J5').Value := var_balance_total[7];
      Sheet.Range('K5').Value := var_balance_total[8];
      Sheet.Range('L5').Value := var_balance_total[9];
      Sheet.Range('M5').Value := var_balance_total[10];
      Sheet.Range('N5').Value := var_balance_total[11];
      Sheet.Range('O5').Value := var_balance_total[12];
       j:=INCSTR(j);
       j:=INCSTR(j);
       j:=INCSTR(j);
      // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      Sheet.Range('A'+j).Value := 'Test Daten aus Belege-Tabelle';
        j:=INCSTR(j);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      FOR u := 1 TO 12 DO
       BEGIN
        rech.RESET;
        rech.SETFILTER(rech.Herstellercode,'%1',Herstell.Code);
        rech.SETFILTER(rech.Belegdatum,'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
        rech.SETFILTER(rech.Belegart,'%1',rech.Belegart::"Credit Memo");
        rech.SETFILTER(rech.Lagerortcode,'%1|%2|%3','ZENT','KONSI','ERSATZ');
      //  rech.SETFILTER(rech.Lagerortcode,'%1|%2|%3|%4','ZENT','KONSI','IDT','ERSATZ');
        rech.SETFILTER(rech.Menge,'<>%1',0);
        IF rech.FIND('-') THEN BEGIN
            REPEAT
                   var_balance[u] := var_balance[u] + (rech."Betrag MW ohne Mwst."*(-1));
                   v_summe:=v_summe + (rech."Betrag MW ohne Mwst."*(-1));
                   v_summe_total:= v_summe_total + (rech."Betrag MW ohne Mwst."*(-1));
                   var_balance_total[u] := var_balance_total[u] + (rech."Betrag MW ohne Mwst."*(-1));
            UNTIL rech.NEXT = 0;
        END;
       END;
      IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      END;
      UNTIL Herstell.NEXT=0;
      END;
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'BELEG VK-Gutschriften';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      //  Zeile 6         ****************************************************************************************
      Sheet.Range('A6').Value := 'Gesamt';
      Sheet.Range('B6').Value := 'BELEG VK-Gutschrift';
      Sheet.Range('C6').Value := v_summe_total;
      Sheet.Range('D6').Value := var_balance_total[1];
      Sheet.Range('E6').Value := var_balance_total[2];
      Sheet.Range('F6').Value := var_balance_total[3];
      Sheet.Range('G6').Value := var_balance_total[4];
      Sheet.Range('H6').Value := var_balance_total[5];
      Sheet.Range('I6').Value := var_balance_total[6];
      Sheet.Range('J6').Value := var_balance_total[7];
      Sheet.Range('K6').Value := var_balance_total[8];
      Sheet.Range('L6').Value := var_balance_total[9];
      Sheet.Range('M6').Value := var_balance_total[10];
      Sheet.Range('N6').Value := var_balance_total[11];
      Sheet.Range('O6').Value := var_balance_total[12];
       j:=INCSTR(j);
       j:=INCSTR(j);
       j:=INCSTR(j);
      //  ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      Sheet.Range('A'+j).Value := 'Test Daten aus Belege-Tabelle';
        j:=INCSTR(j);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      FOR u := 1 TO 12 DO
       BEGIN
        rech.RESET;
        rech.SETFILTER(rech.Herstellercode,'%1',Herstell.Code);
        rech.SETFILTER(rech.Belegdatum,'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
        rech.SETFILTER(rech.Belegart,'%1',rech.Belegart::Invoice);
        rech.SETFILTER(rech.Lagerortcode,'%1|%2|%3','ZENT','KONSI','ERSATZ');
      //  rech.SETFILTER(rech.Lagerortcode,'%1|%2|%3|%4','ZENT','KONSI','IDT','ERSATZ');
        rech.SETFILTER(rech.Menge,'<>%1',0);
        IF rech.FIND('-') THEN BEGIN
            REPEAT
                   var_balance[u] := var_balance[u] + (rech.Menge*rech."Einstandspreis MW");
                   v_summe:=v_summe + (rech.Menge*rech."Einstandspreis MW");
                   v_summe_total:= v_summe_total + (rech.Menge*rech."Einstandspreis MW");
                   var_balance_total[u] := var_balance_total[u] + (rech.Menge*rech."Einstandspreis MW");
            UNTIL rech.NEXT = 0;
        END;
       END;
      IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      END;
      UNTIL Herstell.NEXT=0;
      END;
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'BELEG EK-Rechnungen';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      //   Zeile 7             **********************************************************************************************
      Sheet.Range('A7').Value := 'Gesamt';
      Sheet.Range('B7').Value := 'BELEG EK-Rechnung';
      Sheet.Range('C7').Value := v_summe_total;
      Sheet.Range('D7').Value := var_balance_total[1];
      Sheet.Range('E7').Value := var_balance_total[2];
      Sheet.Range('F7').Value := var_balance_total[3];
      Sheet.Range('G7').Value := var_balance_total[4];
      Sheet.Range('H7').Value := var_balance_total[5];
      Sheet.Range('I7').Value := var_balance_total[6];
      Sheet.Range('J7').Value := var_balance_total[7];
      Sheet.Range('K7').Value := var_balance_total[8];
      Sheet.Range('L7').Value := var_balance_total[9];
      Sheet.Range('M7').Value := var_balance_total[10];
      Sheet.Range('N7').Value := var_balance_total[11];
      Sheet.Range('O7').Value := var_balance_total[12];
        j:=INCSTR(j);
       j:=INCSTR(j);
       j:=INCSTR(j);
      //  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      Sheet.Range('A'+j).Value := 'Test Daten aus Belege-Tabelle';
        j:=INCSTR(j);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      FOR u := 1 TO 12 DO
       BEGIN
        rech.RESET;
        rech.SETFILTER(rech.Herstellercode,'%1',Herstell.Code);
        rech.SETFILTER(rech.Belegdatum,'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
        rech.SETFILTER(rech.Belegart,'%1',rech.Belegart::"Credit Memo");
        rech.SETFILTER(rech.Lagerortcode,'%1|%2|%3','ZENT','KONSI','ERSATZ');
      //  rech.SETFILTER(rech.Lagerortcode,'%1|%2|%3|%4','ZENT','KONSI','IDT','ERSATZ');
        rech.SETFILTER(rech.Menge,'<>%1',0);
        IF rech.FIND('-') THEN BEGIN
            REPEAT
                   var_balance[u] := var_balance[u] + (rech.Menge*rech."Einstandspreis MW"*(-1));
                   v_summe:=v_summe + (rech.Menge*rech."Einstandspreis MW"*(-1));
                   v_summe_total:= v_summe_total + (rech.Menge*rech."Einstandspreis MW"*(-1));
                   var_balance_total[u] := var_balance_total[u] + (rech.Menge*rech."Einstandspreis MW"*(-1));
            UNTIL rech.NEXT = 0;
        END;
       END;
      IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      END;
      UNTIL Herstell.NEXT=0;
      END;
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'BELEG EK-Gutschriften';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      //  Zeile 8     **********************************************************************************************
      Sheet.Range('A8').Value := 'Gesamt';
      Sheet.Range('B8').Value := 'BELEG EK-Gutschrift';
      Sheet.Range('C8').Value := v_summe_total;
      Sheet.Range('D8').Value := var_balance_total[1];
      Sheet.Range('E8').Value := var_balance_total[2];
      Sheet.Range('F8').Value := var_balance_total[3];
      Sheet.Range('G8').Value := var_balance_total[4];
      Sheet.Range('H8').Value := var_balance_total[5];
      Sheet.Range('I8').Value := var_balance_total[6];
      Sheet.Range('J8').Value := var_balance_total[7];
      Sheet.Range('K8').Value := var_balance_total[8];
      Sheet.Range('L8').Value := var_balance_total[9];
      Sheet.Range('M8').Value := var_balance_total[10];
      Sheet.Range('N8').Value := var_balance_total[11];
      Sheet.Range('O8').Value := var_balance_total[12];
      j:=INCSTR(j);
      j:=INCSTR(j);
      j:=INCSTR(j);
      // ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      Sheet.Range('A'+j).Value := 'TEST  EK-Ums„tze nach Perioden';
      j:=INCSTR(j);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      //EK-Rechnungszeilen verarbeiten
      FOR i := 1 TO 12 DO
       BEGIN
        VKRZ.RESET;
        VKRZ.SETFILTER(VKRZ."Manufacturer Code",'%1',Herstell.Code);
        VKRZ.SETFILTER(VKRZ."Posting Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
      //VKRZ.SETFILTER(VKRZ."Posting Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] );
        VKRZ.SETFILTER(VKRZ.Type,'%1',VKRZ.Type::Item);
        VKRZ.SETFILTER(VKRZ.Quantity,'<>%1',0);
        VKRZ.SETFILTER(VKRZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
        IF VKRZ.FIND('-') THEN BEGIN
            REPEAT
              IF  VKRZ."VK-Preis (MW)"=VKRZ."Unit Price" THEN
               BEGIN
                 var_balance[i] := var_balance[i] +(VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                  v_summe:=v_summe + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                  v_summe_total:= v_summe_total + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                  var_balance_total[i] := var_balance_total[i] + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                END
               ELSE
                BEGIN
                   IF VKRZ.Einkaufsw„hrungsfaktor <> 0 THEN
                    BEGIN
      //  Diese Zeile stimmt nur, wenn Einkaufrechnungsfaktor identisch mit Verkaufsw„hrungsfaktor aus dem VK-Kopf  **********************
                      var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                      v_summe:=v_summe + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                      v_summe_total:= v_summe_total + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
       var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    END
                   ELSE
                    BEGIN
                      var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      v_summe:=v_summe + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      v_summe_total:= v_summe_total + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                    END;
                END;
           UNTIL VKRZ.NEXT = 0;
        END ELSE BEGIN
          var_balance[i] := 0;
        END;
      END;
      //FOR i := 1 TO 12 DO
      //BEGIN
      //  var_balance_total[i] := var_balance_total[i] + var_balance[i];
      //END;
      // Anzeigen wenn AE vorliegt
      IF v_summe <> 0 THEN BEGIN
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      END;
      UNTIL Herstell.NEXT=0;
      END;
      //Salesperson/Purchaser - OnPostDataItem()
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'EK-Rechnungen';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      //   Zeile 9   *******************************************************************************************************************
      Sheet.Range('A9').Value := 'Gesamt';
      Sheet.Range('B9').Value := 'EK-Rechnung';
      Sheet.Range('C9').Value := v_summe_total;
      Sheet.Range('D9').Value := var_balance_total[1];
      Sheet.Range('E9').Value := var_balance_total[2];
      Sheet.Range('F9').Value := var_balance_total[3];
      Sheet.Range('G9').Value := var_balance_total[4];
      Sheet.Range('H9').Value := var_balance_total[5];
      Sheet.Range('I9').Value := var_balance_total[6];
      Sheet.Range('J9').Value := var_balance_total[7];
      Sheet.Range('K9').Value := var_balance_total[8];
      Sheet.Range('L9').Value := var_balance_total[9];
      Sheet.Range('M9').Value := var_balance_total[10];
      Sheet.Range('N9').Value := var_balance_total[11];
      Sheet.Range('O9').Value := var_balance_total[12];
      j:=INCSTR(j);
      j:=INCSTR(j);
      // +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
      //}
      //IF ERASE('F:\Tausch\Nav\Daten\Daten_Nav_Systeme_test.xlsx')THEN;
      IF wshFile.FileExists('F:\Tausch\Nav\Daten\Daten_Nav_Systeme_test.xlsx') THEN wshFile.DeleteFile('F:\Tausch\Nav\Daten\Daten_Nav_Systeme_test.xlsx');
      CLEAR(wshFile);
      Book.SaveAs('F:\Tausch\Nav\Daten\Daten_Nav_Systeme_test.xlsx',51,'','',FALSE,FALSE);
      Book.Close(TRUE);
      //Excel.Visible(TRUE);
      Excel.Quit;
    END;

    PROCEDURE Rohbilanz_Test@1140005();
    BEGIN
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);
      CREATE (Excel,FALSE,TRUE);
      CREATE (wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('C:O').NumberFormat:='0,00';
      Sheet.Range('A1').Value :='Nr.';
      Sheet.Range('B1').Value :='Name';
      Sheet.Range('C1').Value :='Saldo';
      j := '2';
      sachkonten.RESET;
      sachkonten.SETFILTER(sachkonten."No.",'%1..%2','0001','3999');
      IF sachkonten.FIND('-') THEN BEGIN
      REPEAT
      v_sachpostsum:=0;
       sachposten.RESET;
       sachposten.SETFILTER(sachposten."G/L Account No.",'%1',sachkonten."No.");
       sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010100D,Abgrenz_Datum);
        IF sachposten.FIND('-') THEN BEGIN
        REPEAT
           v_sachpostsum:=v_sachpostsum+sachposten.Amount;
        UNTIL sachposten.NEXT=0;
        END;
        IF v_sachpostsum<>0 THEN BEGIN
          Sheet.Range('A'+j).Value := sachkonten."No.";
          Sheet.Range('B'+j).Value := sachkonten.Name;
          Sheet.Range('C'+j).Value := v_sachpostsum;
          j:=INCSTR(j);
        END;
      UNTIL sachkonten.NEXT=0;
      END;
      // //IF ERASE('F:\Tausch\Nav\Daten\Daten_Nav_Bil.xlsx')THEN;
      //IF wshFile.FileExists('F:\Tausch\Nav\Daten\Daten_Nav_Bil.xlsx') THEN wshFile.DeleteFile('F:\Tausch\Nav\Daten\Daten_Nav_Bil.xlsx');
      //CLEAR(wshFile);
      //Book.SaveAs('F:\Tausch\Nav\Daten\Daten_Nav_Bil.xlsx',51,'','',FALSE,FALSE);
      //Book.Close(TRUE);
      Excel.Visible(TRUE);


      //  ********************************************************************************************************************************************************
      //  ********************************************************************************************************************************************************
      //  ********************************************************************************************************************************************************
    END;

    PROCEDURE Dienstleistung@1140006();
    BEGIN
      //PeriodStartDate[1] := 010715D;
      FOR i := 1 TO 13 DO
      PeriodStartDate[i + 1] := CALCDATE('1M',PeriodStartDate[i]);
      PeriodStartDate[14] := 31129999D;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);
      CREATE (Excel,FALSE,TRUE);
      CREATE (wshFile,FALSE,TRUE);                                            //erzeugt excel
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      j := '20';                                                    // <- Import in excel ab Zeile 2
      Sheet.Range('A'+j).Value := 'VK-Ums„tze nach Perioden'; // definiert die Beschriftung der berschriftszeile
        j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Herstell-Code';
      Sheet.Range('B'+j).Value := 'Hersteller';
      Sheet.Range('C'+j).Value := 'Gesamt';
      Sheet.Range('D'+j).Value := FORMAT(PeriodStartDate[1]);
      Sheet.Range('E'+j).Value := FORMAT(PeriodStartDate[2]);
      Sheet.Range('F'+j).Value := FORMAT(PeriodStartDate[3]);
      Sheet.Range('G'+j).Value := FORMAT(PeriodStartDate[4]);
      Sheet.Range('H'+j).Value := FORMAT(PeriodStartDate[5]);
      Sheet.Range('I'+j).Value := FORMAT(PeriodStartDate[6]);
      Sheet.Range('J'+j).Value := FORMAT(PeriodStartDate[7]);
      Sheet.Range('K'+j).Value := FORMAT(PeriodStartDate[8]);
      Sheet.Range('L'+j).Value := FORMAT(PeriodStartDate[9]);
      Sheet.Range('M'+j).Value := FORMAT(PeriodStartDate[10]);
      Sheet.Range('N'+j).Value := FORMAT(PeriodStartDate[11]);
      Sheet.Range('O'+j).Value := FORMAT(PeriodStartDate[12]);
        j:=INCSTR(j);
      ///Hersteller  1 Teil VK
      //////********************************************************************************************
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'52|53|57*|86|87|96');
      //Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4','5720','5730','57','5710');
      //Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4|%5','52','53','57','5710','96');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      //Rechnungszeilen verarbeiten
      FOR i := 1 TO 12 DO
       BEGIN
        VKRZ.RESET;
      //  VKRZ.SETFILTER(VKRZ."Manufacturer Code",'%1',Herstell.Code);
      //  VKRZ.SETFILTER(VKRZ."Posting Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
      //  VKRZ.SETFILTER(VKRZ.Type,'%1',VKRZ.Type::Item);
        VKRZ.SETRANGE(VKRZ."Manufacturer Code",Herstell.Code);
        VKRZ.SETRANGE(VKRZ."Posting Date",PeriodStartDate[i],PeriodStartDate[i+1] - 1);
        VKRZ.SETRANGE(VKRZ.Type,VKRZ.Type::Item);
        VKRZ.SETFILTER(VKRZ.Quantity,'>%1',0);
        VKRZ.SETFILTER(VKRZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
        IF VKRZ.FIND('-') THEN BEGIN
            REPEAT
              IF  VKRZ."VK-Preis (MW)"=VKRZ."Unit Price" THEN
               BEGIN
                 var_balance[i] := var_balance[i] +( VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_summe:=v_summe + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_summe_total:= v_summe_total + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  var_balance_total[i] := var_balance_total[i] + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                END
               ELSE
                BEGIN
                   IF VKRZ.Einkaufsw„hrungsfaktor <> 0 THEN
                    BEGIN
      //  Diese Zeile stimmt nur, wenn Einkaufrechnungsfaktor identisch mit Verkaufsw„hrungsfaktor aus dem VK-Kopf  **********************
                  v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                      var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                      v_summe:=v_summe + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                      v_summe_total:= v_summe_total + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    END
                   ELSE
                    BEGIN
                    v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                      var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      v_summe:=v_summe + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      v_summe_total:= v_summe_total + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                      var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                    END;
                END;
           UNTIL VKRZ.NEXT = 0;
        END ELSE BEGIN
          var_balance[i] := 0;
        END;
      END;
      //FOR i := 1 TO 12 DO
      //BEGIN
      //  var_balance_total[i] := var_balance_total[i] + var_balance[i];
      //END;
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
      // Anzeigen wenn AE vorliegt
      IF v_summe <> 0 THEN BEGIN
      //  Sheet.Range('A'+j).Value := Herstell.Code;
      //  Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      //IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      //END;
      UNTIL Herstell.NEXT=0;
      END;
      //Salesperson/Purchaser - OnPostDataItem()
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'VK-Rechnungen';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      //Sheet.Range('P'+j).Value := v_sum_au;
      Sheet.Range('A1').Value := 'Gesamt';
      Sheet.Range('B1').Value := 'VK-Rechnung';
      Sheet.Range('C1').Value := v_summe_total;
      Sheet.Range('D1').Value := var_balance_total[1];
      Sheet.Range('E1').Value := var_balance_total[2];
      Sheet.Range('F1').Value := var_balance_total[3];
      Sheet.Range('G1').Value := var_balance_total[4];
      Sheet.Range('H1').Value := var_balance_total[5];
      Sheet.Range('I1').Value := var_balance_total[6];
      Sheet.Range('J1').Value := var_balance_total[7];
      Sheet.Range('K1').Value := var_balance_total[8];
      Sheet.Range('L1').Value := var_balance_total[9];
      Sheet.Range('M1').Value := var_balance_total[10];
      Sheet.Range('N1').Value := var_balance_total[11];
      Sheet.Range('O1').Value := var_balance_total[12];
      j:=INCSTR(j);
      j:=INCSTR(j);
      // Gutschriftszeilen verarbeiten
      j := '40';
      Sheet.Range('A'+j).Value := 'VK-Gutschriften nach Perioden'; // definiert die Beschriftung der berschriftszeile
        j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Herstell-Code';
      Sheet.Range('B'+j).Value := 'Hersteller';
      Sheet.Range('C'+j).Value := 'Gesamt';
      Sheet.Range('D'+j).Value := FORMAT(PeriodStartDate[1]);
      Sheet.Range('E'+j).Value := FORMAT(PeriodStartDate[2]);
      Sheet.Range('F'+j).Value := FORMAT(PeriodStartDate[3]);
      Sheet.Range('G'+j).Value := FORMAT(PeriodStartDate[4]);
      Sheet.Range('H'+j).Value := FORMAT(PeriodStartDate[5]);
      Sheet.Range('I'+j).Value := FORMAT(PeriodStartDate[6]);
      Sheet.Range('J'+j).Value := FORMAT(PeriodStartDate[7]);
      Sheet.Range('K'+j).Value := FORMAT(PeriodStartDate[8]);
      Sheet.Range('L'+j).Value := FORMAT(PeriodStartDate[9]);
      Sheet.Range('M'+j).Value := FORMAT(PeriodStartDate[10]);
      Sheet.Range('N'+j).Value := FORMAT(PeriodStartDate[11]);
      Sheet.Range('O'+j).Value := FORMAT(PeriodStartDate[12]);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'52|53|57*|86|87|96');
      //Herstell.SETFILTER(Herstell.Code,'57*');
      //Herstell.SETFILTER(Herstell.Code,'%1*','57');
      //Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4','5720','5730','57','5710');
      //Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4|%5','52','53','57','5710','96');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      FOR u := 1 TO 12 DO
       BEGIN
        VKGK.RESET;
        VKGK.SETFILTER(VKGK."Posting Date",'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
        IF VKGK.FIND('-') THEN BEGIN
            REPEAT
               VKGZ.RESET;
      //          VKGZ.SETFILTER(VKGZ."Document No.",'%1',VKGK."No.");
      //          VKGZ.SETFILTER(VKGZ."Manufacturer Code",'%1',Herstell.Code);
      //          VKGZ.SETFILTER(VKGZ.Type,'%1',VKRZ.Type::Item);
                VKGZ.SETRANGE(VKGZ."Document No.",VKGK."No.");
                VKGZ.SETRANGE(VKGZ."Manufacturer Code",Herstell.Code);
                VKGZ.SETRANGE(VKGZ.Type,VKRZ.Type::Item);
                VKGZ.SETFILTER(VKGZ.Quantity,'<>%1',0);
                VKGZ.SETFILTER(VKGZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
                 IF VKGZ.FIND('-') THEN BEGIN
                  REPEAT
                   var_balance[u] := var_balance[u] + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                   v_summe:=v_summe + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                   v_summe_total:= v_summe_total + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                   var_balance_total[u] := var_balance_total[u] + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                  UNTIL VKGZ.NEXT = 0;
                 END;
            UNTIL VKGK.NEXT = 0;
        END;
       END;
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
      IF v_summe <> 0 THEN BEGIN
      //  Sheet.Range('A'+j).Value := Herstell.Code;
      //  Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      //IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      //END;
      UNTIL Herstell.NEXT=0;
      END;
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'VK-Gutschriften';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      Sheet.Range('A2').Value := 'Gesamt';
      Sheet.Range('B2').Value := 'VK_Gutschrift';
      Sheet.Range('C2').Value := v_summe_total;
      Sheet.Range('D2').Value := var_balance_total[1];
      Sheet.Range('E2').Value := var_balance_total[2];
      Sheet.Range('F2').Value := var_balance_total[3];
      Sheet.Range('G2').Value := var_balance_total[4];
      Sheet.Range('H2').Value := var_balance_total[5];
      Sheet.Range('I2').Value := var_balance_total[6];
      Sheet.Range('J2').Value := var_balance_total[7];
      Sheet.Range('K2').Value := var_balance_total[8];
      Sheet.Range('L2').Value := var_balance_total[9];
      Sheet.Range('M2').Value := var_balance_total[10];
      Sheet.Range('N2').Value := var_balance_total[11];
      Sheet.Range('O2').Value := var_balance_total[12];
      j:=INCSTR(j);
      j:=INCSTR(j);
      ///Hersteller  2 Teil EK
      //////********************************************************************************************
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
       j := '60';
      Sheet.Range('A'+j).Value := 'EK-Ums„tze nach Perioden';
      j:=INCSTR(j);
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'52|53|57*|86|87|96');
      //Herstell.SETFILTER(Herstell.Code,'57*');
      //Herstell.SETFILTER(Herstell.Code,'%1*','57');
      //Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4','5720','5730','57','5710');
      //Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4|%5','52','53','57','5710','96');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      //EK-Rechnungszeilen verarbeiten
      FOR i := 1 TO 12 DO
       BEGIN
        VKRZ.RESET;
      //  VKRZ.SETFILTER(VKRZ."Manufacturer Code",'%1',Herstell.Code);
      //  VKRZ.SETFILTER(VKRZ."Posting Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
      //  VKRZ.SETFILTER(VKRZ.Type,'%1',VKRZ.Type::Item);
        VKRZ.SETRANGE(VKRZ."Manufacturer Code",Herstell.Code);
        VKRZ.SETRANGE(VKRZ."Posting Date",PeriodStartDate[i],PeriodStartDate[i+1] - 1);
        VKRZ.SETRANGE(VKRZ.Type,VKRZ.Type::Item);
        VKRZ.SETFILTER(VKRZ.Quantity,'<>%1',0);
        VKRZ.SETFILTER(VKRZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
        IF VKRZ.FIND('-') THEN BEGIN
            REPEAT
      //        IF  VKRZ."VK-Preis (MW)"=VKRZ."Unit Price" THEN
      //         BEGIN
                 var_balance[i] := var_balance[i] +(VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                  v_summe:=v_summe + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                  v_summe_total:= v_summe_total + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                  var_balance_total[i] := var_balance_total[i] + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
      //          END
      //         ELSE
      //          BEGIN
      //             IF VKRZ.Einkaufsw„hrungsfaktor <> 0 THEN
      //              BEGIN
      //  Diese Zeile stimmt nur, wenn Einkaufrechnungsfaktor identisch mit Verkaufsw„hrungsfaktor aus dem VK-Kopf  **********************
      //                var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
      //                v_summe:=v_summe + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
      //                v_summe_total:= v_summe_total + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
      // var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
      //              END
      //             ELSE
      //              BEGIN
      //                var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
      //                v_summe:=v_summe + ((VKRZ."Unit Price") * (VKRZ.Quantity));
      //                v_summe_total:= v_summe_total + ((VKRZ."Unit Price") * (VKRZ.Quantity));
      //                var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
      //              END;
      //          END;
           UNTIL VKRZ.NEXT = 0;
        END ELSE BEGIN
          var_balance[i] := 0;
        END;
      END;
      //FOR i := 1 TO 12 DO
      //BEGIN
      //  var_balance_total[i] := var_balance_total[i] + var_balance[i];
      //END;
      // Anzeigen wenn AE vorliegt
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
      IF v_summe <> 0 THEN BEGIN
      //  Sheet.Range('A'+j).Value := Herstell.Code;
      //  Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      //IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      //END;
      UNTIL Herstell.NEXT=0;
      END;
      //Salesperson/Purchaser - OnPostDataItem()
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'EK-Rechnungen';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      Sheet.Range('A3').Value := 'Gesamt';
      Sheet.Range('B3').Value := 'EK-Rechnung';
      Sheet.Range('C3').Value := v_summe_total;
      Sheet.Range('D3').Value := var_balance_total[1];
      Sheet.Range('E3').Value := var_balance_total[2];
      Sheet.Range('F3').Value := var_balance_total[3];
      Sheet.Range('G3').Value := var_balance_total[4];
      Sheet.Range('H3').Value := var_balance_total[5];
      Sheet.Range('I3').Value := var_balance_total[6];
      Sheet.Range('J3').Value := var_balance_total[7];
      Sheet.Range('K3').Value := var_balance_total[8];
      Sheet.Range('L3').Value := var_balance_total[9];
      Sheet.Range('M3').Value := var_balance_total[10];
      Sheet.Range('N3').Value := var_balance_total[11];
      Sheet.Range('O3').Value := var_balance_total[12];
      j:=INCSTR(j);
      j:=INCSTR(j);
      // Gutschriftszeilen verarbeiten
      j := '80';
      Sheet.Range('A'+j).Value := 'EK-Gutschriften nach Perioden'; // definiert die Beschriftung der berschriftszeile
        j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Herstell-Code';
      Sheet.Range('B'+j).Value := 'Hersteller';
      Sheet.Range('C'+j).Value := 'Gesamt';
      Sheet.Range('D'+j).Value := FORMAT(PeriodStartDate[1]);
      Sheet.Range('E'+j).Value := FORMAT(PeriodStartDate[2]);
      Sheet.Range('F'+j).Value := FORMAT(PeriodStartDate[3]);
      Sheet.Range('G'+j).Value := FORMAT(PeriodStartDate[4]);
      Sheet.Range('H'+j).Value := FORMAT(PeriodStartDate[5]);
      Sheet.Range('I'+j).Value := FORMAT(PeriodStartDate[6]);
      Sheet.Range('J'+j).Value := FORMAT(PeriodStartDate[7]);
      Sheet.Range('K'+j).Value := FORMAT(PeriodStartDate[8]);
      Sheet.Range('L'+j).Value := FORMAT(PeriodStartDate[9]);
      Sheet.Range('M'+j).Value := FORMAT(PeriodStartDate[10]);
      Sheet.Range('N'+j).Value := FORMAT(PeriodStartDate[11]);
      Sheet.Range('O'+j).Value := FORMAT(PeriodStartDate[12]);
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'52|53|57*|86|87|96');
      //Herstell.SETFILTER(Herstell.Code,'57*');
      //Herstell.SETFILTER(Herstell.Code,'%1*','57');
      //Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4','5720','5730','57','5710');
      //Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4|%5','52','53','57','5710','96');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      FOR u := 1 TO 12 DO
       BEGIN
        VKGK.RESET;
        VKGK.SETFILTER(VKGK."Posting Date",'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
        IF VKGK.FIND('-') THEN BEGIN
            REPEAT
               VKGZ.RESET;
      //          VKGZ.SETFILTER(VKGZ."Document No.",'%1',VKGK."No.");
      //          VKGZ.SETFILTER(VKGZ."Manufacturer Code",'%1',Herstell.Code);
      //          VKGZ.SETFILTER(VKGZ.Type,'%1',VKRZ.Type::Item);
                VKGZ.SETRANGE(VKGZ."Document No.",VKGK."No.");
                VKGZ.SETRANGE(VKGZ."Manufacturer Code",Herstell.Code);
                VKGZ.SETRANGE(VKGZ.Type,VKRZ.Type::Item);
                VKGZ.SETFILTER(VKGZ.Quantity,'<>%1',0);
                VKGZ.SETFILTER(VKGZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
                 IF VKGZ.FIND('-') THEN BEGIN
                  REPEAT
                   var_balance[u] := var_balance[u] + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                   v_summe:=v_summe + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                   v_summe_total:= v_summe_total + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                   var_balance_total[u] := var_balance_total[u] + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                  UNTIL VKGZ.NEXT = 0;
                 END;
            UNTIL VKGK.NEXT = 0;
        END;
       END;
        Sheet.Range('A'+j).Value := Herstell.Code;
        Sheet.Range('B'+j).Value := Herstell.Name;
      IF v_summe <> 0 THEN BEGIN
      //  Sheet.Range('A'+j).Value := Herstell.Code;
      //  Sheet.Range('B'+j).Value := Herstell.Name;
        Sheet.Range('C'+j).Value := v_summe;
        Sheet.Range('D'+j).Value := var_balance[1];
        Sheet.Range('E'+j).Value := var_balance[2];
        Sheet.Range('F'+j).Value := var_balance[3];
        Sheet.Range('G'+j).Value := var_balance[4];
        Sheet.Range('H'+j).Value := var_balance[5];
        Sheet.Range('I'+j).Value := var_balance[6];
        Sheet.Range('J'+j).Value := var_balance[7];
        Sheet.Range('K'+j).Value := var_balance[8];
        Sheet.Range('L'+j).Value := var_balance[9];
        Sheet.Range('M'+j).Value := var_balance[10];
        Sheet.Range('N'+j).Value := var_balance[11];
        Sheet.Range('O'+j).Value := var_balance[12];
      END;
      //IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      //END;
      UNTIL Herstell.NEXT=0;
      END;
      j:=INCSTR(j);
      Sheet.Range('A'+j).Value := 'Gesamt';
      Sheet.Range('B'+j).Value := 'EK-Gutschriften';
      Sheet.Range('C'+j).Value := v_summe_total;
      Sheet.Range('D'+j).Value := var_balance_total[1];
      Sheet.Range('E'+j).Value := var_balance_total[2];
      Sheet.Range('F'+j).Value := var_balance_total[3];
      Sheet.Range('G'+j).Value := var_balance_total[4];
      Sheet.Range('H'+j).Value := var_balance_total[5];
      Sheet.Range('I'+j).Value := var_balance_total[6];
      Sheet.Range('J'+j).Value := var_balance_total[7];
      Sheet.Range('K'+j).Value := var_balance_total[8];
      Sheet.Range('L'+j).Value := var_balance_total[9];
      Sheet.Range('M'+j).Value := var_balance_total[10];
      Sheet.Range('N'+j).Value := var_balance_total[11];
      Sheet.Range('O'+j).Value := var_balance_total[12];
      Sheet.Range('A4').Value := 'Gesamt';
      Sheet.Range('B4').Value := 'EK-Gutschrift';
      Sheet.Range('C4').Value := v_summe_total;
      Sheet.Range('D4').Value := var_balance_total[1];
      Sheet.Range('E4').Value := var_balance_total[2];
      Sheet.Range('F4').Value := var_balance_total[3];
      Sheet.Range('G4').Value := var_balance_total[4];
      Sheet.Range('H4').Value := var_balance_total[5];
      Sheet.Range('I4').Value := var_balance_total[6];
      Sheet.Range('J4').Value := var_balance_total[7];
      Sheet.Range('K4').Value := var_balance_total[8];
      Sheet.Range('L4').Value := var_balance_total[9];
      Sheet.Range('M4').Value := var_balance_total[10];
      Sheet.Range('N4').Value := var_balance_total[11];
      Sheet.Range('O4').Value := var_balance_total[12];
      //IF ERASE('F:\Tausch\Nav\Daten\Daten_Nav_Dienstleistung.xlsx')THEN;
      IF wshFile.FileExists('F:\Tausch\Nav\Daten\Daten_Nav_Dienstleistung.xlsx') THEN wshFile.DeleteFile('F:\Tausch\Nav\Daten\Daten_Nav_Dienstleistung.xlsx');
      CLEAR(wshFile);
      Book.SaveAs('F:\Tausch\Nav\Daten\Daten_Nav_Dienstleistung.xlsx',51,'','',FALSE,FALSE);
      Book.Close(TRUE);
      //Excel.Visible(TRUE);
      //Excel.Quit;


      // Umsatz;
    END;

    PROCEDURE Umsatz@1140007();
    BEGIN

      FOR i := 1 TO 13 DO
      PeriodStartDate[i + 1] := CALCDATE('1M',PeriodStartDate[i]);
      PeriodStartDate[14] := 31129999D;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);
      //CREATE (Excel);
      CREATE (Excel,FALSE,TRUE);
      CREATE (wshFile,FALSE,TRUE);                                            //erzeugt excel
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('A1').Value := 'Umsatzerl”se Verk„ufercode nach Perioden'; // definiert die Beschriftung der berschriftszeile
      Sheet.Range('A2').Value := 'Verk„ufer';
      Sheet.Range('B2').Value := 'Betreuer';
      Sheet.Range('C2').Value := 'Gesamt';
      Sheet.Range('D2').Value := FORMAT(PeriodStartDate[1]);
      Sheet.Range('E2').Value := FORMAT(PeriodStartDate[2]);
      Sheet.Range('F2').Value := FORMAT(PeriodStartDate[3]);
      Sheet.Range('G2').Value := FORMAT(PeriodStartDate[4]);
      Sheet.Range('H2').Value := FORMAT(PeriodStartDate[5]);
      Sheet.Range('I2').Value := FORMAT(PeriodStartDate[6]);
      Sheet.Range('J2').Value := FORMAT(PeriodStartDate[7]);
      Sheet.Range('K2').Value := FORMAT(PeriodStartDate[8]);
      Sheet.Range('L2').Value := FORMAT(PeriodStartDate[9]);
      Sheet.Range('M2').Value := FORMAT(PeriodStartDate[10]);
      Sheet.Range('N2').Value := FORMAT(PeriodStartDate[11]);
      Sheet.Range('O2').Value := FORMAT(PeriodStartDate[12]);
      j := '3';                                                    // <- Import in excel ab Zeile 2
      ///salesperson  1 Teil
      //////********************************************************************************************
      vkcode.RESET;
      vkcode.SETRANGE(vkcode."Kenner Aussen_Innendienst",'A','B');
      IF vkcode.FIND('-') THEN BEGIN
      REPEAT
          vkcode1.RESET;
          vkcode1.SETRANGE(vkcode1."Kenner Aussen_Innendienst",'A','B');
          IF vkcode1.FIND('-') THEN BEGIN
          REPEAT
              v_summe:=0;
              var_balance[1]:=0;
              var_balance[2]:=0;
              var_balance[3]:=0;
              var_balance[4]:=0;
              var_balance[5]:=0;
              var_balance[6]:=0;
              var_balance[7]:=0;
              var_balance[8]:=0;
              var_balance[9]:=0;
              var_balance[10]:=0;
              var_balance[11]:=0;
              var_balance[12]:=0;
              FOR i := 1 TO 12 DO
               BEGIN
                Belege.RESET;
                Belege.SETRANGE(Belege.Verk„ufercode,vkcode.Code);
                Belege.SETRANGE(Belege."Betreuer Innendienst",vkcode1.Code);
                Belege.SETRANGE(Belege.Belegdatum,PeriodStartDate[i],PeriodStartDate[i+1] - 1);
                Belege.SETFILTER(Belege.Belegart,'%1|%2',Belege.Belegart::Invoice,Belege.Belegart::"Credit Memo");
                IF Belege.FIND('-') THEN BEGIN
                    REPEAT
                     IF Belege.Belegart=Belege.Belegart::Invoice THEN BEGIN
                      var_balance[i] := var_balance[i] + Belege."Betrag MW ohne Mwst.";
                      v_summe:=v_summe + Belege."Betrag MW ohne Mwst.";
                      v_summe_total:= v_summe_total + Belege."Betrag MW ohne Mwst.";
                     END;
                     IF Belege.Belegart=Belege.Belegart::"Credit Memo" THEN BEGIN
                      var_balance[i] := var_balance[i] + (Belege."Betrag MW ohne Mwst."*(-1));
                      v_summe:=v_summe + (Belege."Betrag MW ohne Mwst."*(-1));
                      v_summe_total:= v_summe_total + (Belege."Betrag MW ohne Mwst."*(-1));
                     END;
                   UNTIL Belege.NEXT = 0;
                   END;
                  END;
                          FOR i := 1 TO 12 DO
                          BEGIN
                            var_balance_total[i] := var_balance_total[i] + var_balance[i];
                          END;
                        // Anzeigen wenn AE vorliegt
                        IF v_summe <> 0 THEN BEGIN
                          Sheet.Range('A'+j).Value := vkcode.Code;
                          Sheet.Range('B'+j).Value := vkcode1.Code;
                          Sheet.Range('C'+j).Value := v_summe;
                          Sheet.Range('D'+j).Value := var_balance[1];
                          Sheet.Range('E'+j).Value := var_balance[2];
                          Sheet.Range('F'+j).Value := var_balance[3];
                          Sheet.Range('G'+j).Value := var_balance[4];
                          Sheet.Range('H'+j).Value := var_balance[5];
                          Sheet.Range('I'+j).Value := var_balance[6];
                          Sheet.Range('J'+j).Value := var_balance[7];
                          Sheet.Range('K'+j).Value := var_balance[8];
                          Sheet.Range('L'+j).Value := var_balance[9];
                          Sheet.Range('M'+j).Value := var_balance[10];
                          Sheet.Range('N'+j).Value := var_balance[11];
                          Sheet.Range('O'+j).Value := var_balance[12];
                            j:=INCSTR(j);
                         END;
          //           END;
                  UNTIL vkcode1.NEXT=0;
                  END;
      IF v_summe <> 0 THEN BEGIN
        j:=INCSTR(j);
      END;
      UNTIL vkcode.NEXT=0;
      END;
      //  j:=INCSTR(j);
      //  j:=INCSTR(j);
      //  j:=INCSTR(j);
      Sheet.Range('A37').Value := 'Umsatz Gesamt Monat';
      Sheet.Range('C37').Value := v_summe_total;
      Sheet.Range('D37').Value := var_balance_total[1];
      Sheet.Range('E37').Value := var_balance_total[2];
      Sheet.Range('F37').Value := var_balance_total[3];
      Sheet.Range('G37').Value := var_balance_total[4];
      Sheet.Range('H37').Value := var_balance_total[5];
      Sheet.Range('I37').Value := var_balance_total[6];
      Sheet.Range('J37').Value := var_balance_total[7];
      Sheet.Range('K37').Value := var_balance_total[8];
      Sheet.Range('L37').Value := var_balance_total[9];
      Sheet.Range('M37').Value := var_balance_total[10];
      Sheet.Range('N37').Value := var_balance_total[11];
      Sheet.Range('O37').Value := var_balance_total[12];
        j:=INCSTR(j);
          Belege.RESET;
          Belege.SETRANGE(Belege.Belegdatum,PeriodStartDate[i],PeriodStartDate[i+1] - 1);
          Belege.SETFILTER(Belege.Belegart,'%1|%2',Belege.Belegart::Invoice,Belege.Belegart::"Credit Memo");
          Belege.SETFILTER(Belege.Verk„ufercode,'%1','');
      //    Belege.SETRANGE(Belege."Betreuer Innendienst",vkcode1.Code);
          IF Belege.FINDFIRST THEN BEGIN
           v_kein_VCode:=Belege."Belegnr.";
          END;
          Belege.RESET;
          Belege.SETRANGE(Belege.Belegdatum,PeriodStartDate[i],PeriodStartDate[i+1] - 1);
          Belege.SETFILTER(Belege.Belegart,'%1|%2',Belege.Belegart::Invoice,Belege.Belegart::"Credit Memo");
          Belege.SETFILTER(Belege."Betreuer Innendienst",'%1','');
          IF Belege.FINDFIRST THEN BEGIN
           v_kein_VCode:=Belege."Belegnr.";
          END;
        IF v_kein_VCode='' THEN BEGIN
        END ELSE BEGIN
        Sheet.Range('A'+j).Value := 'Es gibt Belege ohne Verk„ufer und/oder Bearbeiter Code' + v_kein_VCode;
        END;
      //IF ERASE('F:\Tausch\Nav\Daten\Daten_Nav_UM.xlsx')THEN;
      IF wshFile.FileExists('F:\Tausch\Nav\Daten\Daten_Nav_UM.xlsx') THEN wshFile.DeleteFile('F:\Tausch\Nav\Daten\Daten_Nav_UM.xlsx');
      CLEAR(wshFile);
      Book.SaveAs('F:\Tausch\Nav\Daten\Daten_Nav_UM.xlsx',51,'','',FALSE,FALSE);
      Book.Close(TRUE);
      //Excel.Visible(TRUE);
      //Excel.Quit;


      // Hersteller;
    END;

    PROCEDURE Hersteller@1140008();
    BEGIN
      CLEAR(Excel);

      REPEAT
      UNTIL ISCLEAR(Excel);
      //CREATE(Excel);
      CREATE (Excel,FALSE,TRUE);
      CREATE (wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('C:O').NumberFormat:='0,00';
      Sheet.Range('A1').Value :='Hersteller Code';
      Sheet.Range('B1').Value :='Hersteller Name';
      Sheet.Range('C1').Value :='Hersteller Kurzbezeichnung';
      Sheet.Range('D1').Value :='Gesch„ftsbereich';
      j := '2';
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1..%2','00','9999');
      Herstell.SETFILTER(Herstell.Name,'<>%1','');
      IF Herstell.FIND('-') THEN BEGIN
      REPEAT
          Sheet.Range('A'+j).Value := Herstell.Code;
          Sheet.Range('B'+j).Value := Herstell.Name;
          Sheet.Range('C'+j).Value := Herstell.Herstellerkurzname;
          Sheet.Range('D'+j).Value := FORMAT(Herstell.Gesch„ftsbereich);
          j:=INCSTR(j);
      UNTIL Herstell.NEXT=0;
      END;
      //IF ERASE('F:\Tausch\Nav\Daten\Daten_Nav_Hersteller.xlsx')THEN;
      IF wshFile.FileExists('F:\Tausch\Nav\Daten\Daten_Nav_Hersteller.xlsx') THEN wshFile.DeleteFile('F:\Tausch\Nav\Daten\Daten_Nav_Hersteller.xlsx');
      CLEAR(wshFile);
      Book.SaveAs('F:\Tausch\Nav\Daten\Daten_Nav_Hersteller.xlsx',51,'','',FALSE,FALSE);
      Book.Close(TRUE);
      //Excel.Visible(TRUE);
      Excel.Quit;
    END;

    LOCAL PROCEDURE CreateExcel@1000000000();
    BEGIN
      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);
    END;

    LOCAL PROCEDURE CloseExcel@1000000001(Sheetname@1000000000 : Text;Filename@1000000001 : Text;FilePath@1000000002 : Text);
    BEGIN
      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet(Sheetname,COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          IF (Filename = '') OR (FilePath = '') THEN
            TempExcelBuffer.OpenExcel //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          ELSE
            TempExcelBuffer.OpenExcelWithoutAutoFit(Sheetname,Filename + ExcelFileExtensionTok,FilePath,FALSE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE EnterCell@1000000002(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];Bold@1000000003 : Boolean;Italic@1000000004 : Boolean;UnderLine@1000000005 : Boolean;NumberFormat@1000000006 : Text[30];CellType@1000000007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    LOCAL PROCEDURE UpdateCell@1000000003(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text);
    BEGIN
      IF TempExcelBuffer.GET(RowNo,ColumnNo)  THEN BEGIN
        TempExcelBuffer."Cell Value as Text" := CellValue;
        TempExcelBuffer.MODIFY;
      END;
    END;

    LOCAL PROCEDURE Daten_Nav_Champs@1000000004();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'šbersicht der Champsvertr„ge per ',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,1,FORMAT(WORKDATE),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      ColumnNo:=2;
      FOR i:=1 TO 12 DO BEGIN
        var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);
        ColumnNo:=ColumnNo+1;
        EnterCell(4,ColumnNo,'GJ '+FORMAT(var_jahr[i]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,4,'GJ '+FORMAT(var_jahr[2]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,5,'GJ '+FORMAT(var_jahr[3]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,6,'GJ '+FORMAT(var_jahr[4]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,7,'GJ '+FORMAT(var_jahr[5]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,8,'GJ '+FORMAT(var_jahr[6]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,9,'GJ '+FORMAT(var_jahr[7]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,10,'GJ '+FORMAT(var_jahr[8]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,11,'GJ '+FORMAT(var_jahr[9]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,12,'GJ '+FORMAT(var_jahr[10]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,13,'GJ '+FORMAT(var_jahr[11]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,14,'GJ '+FORMAT(var_jahr[12]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      END;
      //  Ende šberschriftenanlage
      RowNo := 5;
      service.RESET;
      service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      service.SETFILTER(service.Art,'%1',service.Art::Service);
      service.SETFILTER(service.Inaktiv,'%1',FALSE);
      service.SETFILTER(service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      //Service.SETFILTER(Service."Hauptwartungsvertragsnr.",'%1|%2','SV101035','SV101119');
      IF service.FIND('-') THEN BEGIN  //xx1
        REPEAT
          LZ_rest:=0;
          Artikel.RESET;
          Artikel.SETFILTER(Artikel."No.",'%1',service."SUP Artikelnr.");
          Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
          IF Artikel.FINDFIRST THEN BEGIN   //xx2
            lief.RESET;
            lief.SETFILTER(lief."Document No.",'%1',service."Nr.");
            lief.SETFILTER(lief."Line No.",'%1',service."Belegzeilennr.");
            lief.SETFILTER(lief.Quantity,'<>%1',0);
            lief.SETFILTER(lief."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
            lief.SETFILTER(lief."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
            IF lief.FINDFIRST THEN BEGIN  //xx3
              IF (liefnr=lief."Document No.") AND (liefzeilennr=lief."Line No.") THEN BEGIN   //xx4
              END ELSE BEGIN  //xx4_1
                liefnr:=lief."Document No.";
                liefzeilennr:=lief."Line No.";
                FOR i:=1 TO 12 DO BEGIN   //xx5
                  LZ_tage:= (service."Ablaufdatum Serviceleistung"- service.Lizenzdatum);
                  var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);
      //          Gesamt im Jahr abgeschlossen
      //          Hier wird das Buchungsdatum benutzt
                  IF (service.Belegdatum>(var_jahr[i])) AND (service.Belegdatum<(var_jahr[i]+365)) THEN
                  var_jahr_gesamt[i]:=var_jahr_gesamt[i]+(lief.Quantity*lief."VK-Preis (MW)");
      //          Ende Gesamt im Jahr abgeschlossen
      //          Gesamt im Jahr neu abgeschlossen
                  IF service.Verl„ngerung=FALSE THEN BEGIN   //xx6
                    IF (service.Belegdatum>(var_jahr[i])) AND (service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_neu[i]:=var_jahr_neu[i]+(lief.Quantity*lief."VK-Preis (MW)");
                  END;   //xx6
      //          Ende Gesamt im Jahr neu abgeschlossen
      //          Gesamt im Jahr verl„ngert
                  IF service.Verl„ngerung=TRUE THEN BEGIN   //xx7
                    IF (service.Belegdatum>(var_jahr[i])) AND (service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_verl„ng[i]:=var_jahr_verl„ng[i]+(lief.Quantity*lief."VK-Preis (MW)");
                  END;   //xx7
      //          Ende Gesamt im Jahr verl„ngert
      //          Gesamt im Jahr abgelaufen
                  IF (service."Ablaufdatum Serviceleistung">(var_jahr[i])) AND (service."Ablaufdatum Serviceleistung"<(var_jahr[i]+365)) THEN
                  var_jahr_abgelauf[i]:=var_jahr_abgelauf[i]+(lief.Quantity*lief."VK-Preis (MW)");
      //          Ende Gesamt im Jahr abgelaufen
      //          Laufzeitenberechnung  ******************************************************************
                  IF ((service.Lizenzdatum>=(var_jahr[i])) AND (service.Lizenzdatum<=(var_jahr[i]+365))) THEN BEGIN   //xx8
                    LZ_tage_jahr[i]:=var_jahr[i]+365-service.Lizenzdatum;
                    var_jahr_wert[i]:=var_jahr_wert[i]+((lief.Quantity*lief."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx8
                  IF (service."Ablaufdatum Serviceleistung">(var_jahr[i]+365)) AND ((var_jahr[i])>service.Lizenzdatum) THEN BEGIN   //xx9
                    LZ_tage_jahr[i]:=var_jahr[i]+365-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((lief.Quantity*lief."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx9
                  IF ((service."Ablaufdatum Serviceleistung"-1>(var_jahr[i])) AND (service."Ablaufdatum Serviceleistung"-1<(var_jahr[i]+365))) THEN BEGIN   //xx10
                    LZ_tage_jahr[i]:=service."Ablaufdatum Serviceleistung"-1-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((lief.Quantity*lief."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx10
      //          ENDE Laufzeitenberechnung ******************************************************************
                END;  //xx5
              END; //xx4_1
            END;   //xx11
          END;   //xx3
        UNTIL service.NEXT=0;
      END;   //xx1
      RowNo := 6;
      EnterCell(RowNo,1,'Gesamt Jahr',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_gesamt[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_gesamt[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_gesamt[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_gesamt[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_gesamt[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_gesamt[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_gesamt[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_gesamt[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_gesamt[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_gesamt[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_gesamt[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_gesamt[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 7;
      EnterCell(RowNo,1,'Gesamt Jahr neu',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_neu[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_neu[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_neu[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_neu[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_neu[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_neu[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_neu[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_neu[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_neu[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_neu[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_neu[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_neu[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 8;
      EnterCell(RowNo,1,'Gesamt Jahr verl„ngert',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 10;
      EnterCell(RowNo,1,'im Jahr ablaufend',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_abgelauf[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_abgelauf[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_abgelauf[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_abgelauf[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_abgelauf[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_abgelauf[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_abgelauf[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_abgelauf[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_abgelauf[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_abgelauf[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_abgelauf[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_abgelauf[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 13;
      EnterCell(RowNo,1,'Verl„ngert in % von Ablaufend',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_verl„ng[1]<>0) AND (var_jahr_abgelauf[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]/var_jahr_abgelauf[1]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[2]<>0) AND (var_jahr_abgelauf[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]/var_jahr_abgelauf[2]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[3]<>0) AND (var_jahr_abgelauf[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]/var_jahr_abgelauf[3]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[4]<>0) AND (var_jahr_abgelauf[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]/var_jahr_abgelauf[4]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[5]<>0) AND (var_jahr_abgelauf[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]/var_jahr_abgelauf[5]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[6]<>0) AND (var_jahr_abgelauf[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]/var_jahr_abgelauf[6]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[7]<>0) AND (var_jahr_abgelauf[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]/var_jahr_abgelauf[7]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[8]<>0) AND (var_jahr_abgelauf[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]/var_jahr_abgelauf[8]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[9]<>0) AND (var_jahr_abgelauf[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]/var_jahr_abgelauf[9]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[10]<>0) AND (var_jahr_abgelauf[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]/var_jahr_abgelauf[10]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[11]<>0) AND (var_jahr_abgelauf[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]/var_jahr_abgelauf[11]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[12]<>0) AND (var_jahr_abgelauf[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]/var_jahr_abgelauf[12]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 14;
      EnterCell(RowNo,1,'Verl„ngert in % von Jahreseingang',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_verl„ng[1]<>0) AND (var_jahr_gesamt[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]/var_jahr_gesamt[1]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[2]<>0) AND (var_jahr_gesamt[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]/var_jahr_gesamt[2]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[3]<>0) AND (var_jahr_gesamt[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]/var_jahr_gesamt[3]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[4]<>0) AND (var_jahr_gesamt[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]/var_jahr_gesamt[4]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[5]<>0) AND (var_jahr_gesamt[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]/var_jahr_gesamt[5]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[6]<>0) AND (var_jahr_gesamt[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]/var_jahr_gesamt[6]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[7]<>0) AND (var_jahr_gesamt[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]/var_jahr_gesamt[7]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[8]<>0) AND (var_jahr_gesamt[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]/var_jahr_gesamt[8]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[9]<>0) AND (var_jahr_gesamt[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]/var_jahr_gesamt[9]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[10]<>0) AND (var_jahr_gesamt[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]/var_jahr_gesamt[10]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[11]<>0) AND (var_jahr_gesamt[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]/var_jahr_gesamt[11]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[12]<>0) AND (var_jahr_gesamt[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]/var_jahr_gesamt[12]*100),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := 16;
      EnterCell(RowNo,1,'Auf Laufzeit verteilt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_wert[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_wert[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_wert[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_wert[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_wert[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_wert[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_wert[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_wert[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_wert[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_wert[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_wert[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_wert[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      service.RESET;
      service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      service.SETFILTER(service.Art,'%1',service.Art::Service);
      service.SETFILTER(service."Ablaufdatum Serviceleistung",'>%1',Abgrenz_Datum);
      service.SETFILTER(service.Belegdatum,'<=%1',Abgrenz_Datum);
      service.SETFILTER(service.Inaktiv,'%1',FALSE);
      service.SETFILTER(service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      IF service.FIND('-') THEN BEGIN  //yy1
        REPEAT
          LZ_rest:=0;
          Artikel.RESET;
          Artikel.SETFILTER(Artikel."No.",'%1',service."SUP Artikelnr.");
          Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2','5710','5720');
          IF Artikel.FINDFIRST THEN BEGIN  //yy2
            lief.RESET;
            lief.SETFILTER(lief."Document No.",'%1',service."Nr.");
            lief.SETFILTER(lief."Line No.",'%1',service."Belegzeilennr.");
            lief.SETFILTER(lief.Quantity,'<>%1',0);
            lief.SETFILTER(lief."Manufacturer Code",'<>%1&<>%2','5710','5720');
            lief.SETFILTER(lief."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
            IF lief.FINDFIRST THEN BEGIN  //yy3
              IF (liefnr=lief."Document No.") AND (liefzeilennr=lief."Line No.") THEN BEGIN  //yy4
              END ELSE BEGIN  //yy4_1
                LZ_tage:= (service."Ablaufdatum Serviceleistung"- service.Lizenzdatum-1);
                LZ_tage_stich:=(service."Ablaufdatum Serviceleistung"-Abgrenz_Datum-1);
                LZ_tage_bewert:=0;
                IF LZ_tage_stich>LZ_tage THEN BEGIN   //yy5
                  LZ_tage_bewert := LZ_tage;
                END ELSE BEGIN  ///yy5_1
                  LZ_tage_bewert := LZ_tage_stich;
                END;    //yy5_1
                Sum_ek:=(Sum_ek+ (ROUND(lief."Unit Cost (LCY)"/ LZ_tage*LZ_tage_bewert*lief.Quantity)));
                Sum_vk:=(Sum_vk+ (ROUND(lief."VK-Preis (MW)"/ LZ_tage*LZ_tage_bewert*lief.Quantity)));
      //          Sum_vIF k:=(Sum_vk+ (ROUND(Lief."Unit Price"/ LZ_tage*LZ_tage_bewert*Lief.Quantity)));
                liefnr:=lief."Document No.";
                liefzeilennr:=lief."Line No.";
              END;  //yy 4_1
            END;  //yy2
          END;
        UNTIL service.NEXT=0;
      END;   //yy1

      RowNo := 20;
      EnterCell(RowNo,1,'Abgrenzung per',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 21;
      EnterCell(RowNo,1,FORMAT(Abgrenz_Datum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 22;
      EnterCell(RowNo,1,'Abgrenz_Ek',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT(Sum_ek),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := 23;
      EnterCell(RowNo,1,'Abgrenz_Vk',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT(Sum_vk),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      service.RESET;
      service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      service.SETFILTER(service.Art,'%1',service.Art::Service);
      service.SETFILTER(service."Dauer Serviceleistung",'%1','12M');
      service.SETFILTER(service.Belegdatum,'%1..%2',PeriodStartDate[1],Abgrenz_Datum);
      service.SETFILTER(service.Inaktiv,'%1',FALSE);
      service.SETFILTER(service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      IF service.FIND('-') THEN BEGIN
        REPEAT
          Artikel.RESET;
          Artikel.SETFILTER(Artikel."No.",'%1',service."SUP Artikelnr.");
          Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2','5710','5720');
          IF Artikel.FINDFIRST THEN BEGIN
            lief.RESET;
            lief.SETFILTER(lief."Document No.",'%1',service."Nr.");
            lief.SETFILTER(lief."Line No.",'%1',service."Belegzeilennr.");
            lief.SETFILTER(lief.Quantity,'<>%1',0);
            lief.SETFILTER(lief."Manufacturer Code",'<>%1&<>%2','5710','5720');
            lief.SETFILTER(lief."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
            IF lief.FINDFIRST THEN BEGIN
              IF (liefnr=lief."Document No.") AND (liefzeilennr=lief."Line No.") THEN BEGIN
              END ELSE BEGIN
                liefnr:=lief."Document No.";
                liefzeilennr:=lief."Line No.";
                sum_gj_12:=sum_gj_12 + (lief.Quantity* lief."VK-Preis (MW)");
              END;
            END;
          END;
        UNTIL service.NEXT=0;
      END;
      RowNo := 25;
      EnterCell(RowNo,1,'GJ_12M:',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT(sum_gj_12),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      service.RESET;
      service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      service.SETFILTER(service.Art,'%1',service.Art::Service);
      service.SETFILTER(service."Dauer Serviceleistung",'>%1&<%2','12M','36M');
      service.SETFILTER(service.Belegdatum,'%1..%2',PeriodStartDate[1],Abgrenz_Datum);
      service.SETFILTER(service.Inaktiv,'%1',FALSE);
      service.SETFILTER(service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      IF service.FIND('-') THEN BEGIN
        REPEAT
          Artikel.RESET;
          Artikel.SETFILTER(Artikel."No.",'%1',service."SUP Artikelnr.");
          Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2','5710','5720');
          IF Artikel.FINDFIRST THEN BEGIN
            lief.RESET;
            lief.SETFILTER(lief."Document No.",'%1',service."Nr.");
            lief.SETFILTER(lief."Line No.",'%1',service."Belegzeilennr.");
            lief.SETFILTER(lief.Quantity,'<>%1',0);
            lief.SETFILTER(lief."Manufacturer Code",'<>%1&<>%2','5710','5720');
            lief.SETFILTER(lief."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
            IF lief.FINDFIRST THEN BEGIN
              IF (liefnr=lief."Document No.") AND (liefzeilennr=lief."Line No.") THEN BEGIN
              END ELSE BEGIN
                liefnr:=lief."Document No.";
                liefzeilennr:=lief."Line No.";
                sum_gj_36:=sum_gj_36 + (lief.Quantity* lief."VK-Preis (MW)");
              END;
            END;
          END;
        UNTIL service.NEXT=0;
      END;
      RowNo := 26;
      EnterCell(RowNo,1,'GJ_13-35M:',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT(sum_gj_36),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      service.RESET;
      service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      service.SETFILTER(service.Art,'%1',service.Art::Service);
      service.SETFILTER(service."Dauer Serviceleistung",'>=%1','36M');
      service.SETFILTER(service.Belegdatum,'%1..%2',PeriodStartDate[1],Abgrenz_Datum);
      service.SETFILTER(service.Inaktiv,'%1',FALSE);
      service.SETFILTER(service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      IF service.FIND('-') THEN BEGIN
        REPEAT
          Artikel.RESET;
          Artikel.SETFILTER(Artikel."No.",'%1',service."SUP Artikelnr.");
          Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2','5710','5720');
          IF Artikel.FINDFIRST THEN BEGIN
            lief.RESET;
            lief.SETFILTER(lief."Document No.",'%1',service."Nr.");
            lief.SETFILTER(lief."Line No.",'%1',service."Belegzeilennr.");
            lief.SETFILTER(lief."Manufacturer Code",'<>%1&<>%2','5710','5720');
            lief.SETFILTER(lief.Quantity,'<>%1',0);
            lief.SETFILTER(lief."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
            IF lief.FINDFIRST THEN BEGIN
              IF (liefnr=lief."Document No.") AND (liefzeilennr=lief."Line No.") THEN BEGIN
              END ELSE BEGIN
                liefnr:=lief."Document No.";
                liefzeilennr:=lief."Line No.";
                sum_gj_sonst:=sum_gj_sonst + (lief.Quantity* lief."VK-Preis (MW)");
              END;
            END;
          END;
        UNTIL service.NEXT=0;
      END;
      RowNo := 27;
      EnterCell(RowNo,1,'GJ_36M +:',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT(sum_gj_sonst),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      service.RESET;
      service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      service.SETFILTER(service.Art,'%1',service.Art::Service);
      service.SETFILTER(service.Belegdatum,'>=%1&<=%2',PeriodStartDate[1],Abgrenz_Datum);
      service.SETFILTER(service.Inaktiv,'%1',FALSE);
      service.SETFILTER(service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      IF service.FIND('-') THEN BEGIN
        REPEAT
          Artikel.RESET;
          Artikel.SETFILTER(Artikel."No.",'%1',service."SUP Artikelnr.");
          Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2','5710','5720');
          IF Artikel.FINDFIRST THEN BEGIN
            lief.RESET;
            lief.SETFILTER(lief."Document No.",'%1',service."Nr.");
            lief.SETFILTER(lief."Line No.",'%1',service."Belegzeilennr.");
            lief.SETFILTER(lief.Quantity,'<>%1',0);
            lief.SETFILTER(lief."Manufacturer Code",'<>%1&<>%2','5710','5720');
            lief.SETFILTER(lief."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
            IF lief.FINDFIRST THEN BEGIN
              IF (liefnr=lief."Document No.") AND (liefzeilennr=lief."Line No.") THEN BEGIN
              END ELSE BEGIN
                liefnr:=lief."Document No.";
                liefzeilennr:=lief."Line No.";
                sum_gj_gesamt:=sum_gj_gesamt +(lief.Quantity* lief."VK-Preis (MW)");
              END;
            END;
          END;
        UNTIL service.NEXT=0;
      END;
      RowNo := 28;
      EnterCell(RowNo,1,'GJ_Gesamt:',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT(sum_gj_gesamt),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('Daten_Nav_Champs','Daten_Nav_Champs','F:\Tausch\Nav\Daten');
      //MESSAGE(Text003);
    END;

    LOCAL PROCEDURE Daten_Nav_GuV@1000000005();
    BEGIN
      FOR i := 1 TO 13 DO
      {
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      v_summe:=0;
      var_balance[1]:=0;
      var_balance[2]:=0;
      var_balance[3]:=0;
      var_balance[4]:=0;
      var_balance[5]:=0;
      var_balance[6]:=0;
      var_balance[7]:=0;
      var_balance[8]:=0;
      var_balance[9]:=0;
      var_balance[10]:=0;
      var_balance[11]:=0;
      var_balance[12]:=0;
      }
      PeriodStartDate[i + 1] := CALCDATE('1M',PeriodStartDate[i]);
      PeriodStartDate[14] := 31129999D;
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Konto-Nr.',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Kontoname',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Gesamt',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(PeriodStartDate[1]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,5,FORMAT(PeriodStartDate[2]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,6,FORMAT(PeriodStartDate[3]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,7,FORMAT(PeriodStartDate[4]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,FORMAT(PeriodStartDate[5]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,9,FORMAT(PeriodStartDate[6]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,10,FORMAT(PeriodStartDate[7]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,11,FORMAT(PeriodStartDate[8]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,12,FORMAT(PeriodStartDate[9]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,13,FORMAT(PeriodStartDate[10]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,14,FORMAT(PeriodStartDate[11]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,15,FORMAT(PeriodStartDate[12]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

      sachkonten.RESET;
      sachkonten.SETRANGE(sachkonten."No.",'4000','7999');
      IF sachkonten.FIND('-') THEN BEGIN
        REPEAT
          FOR i:=1 TO 12 DO BEGIN
            var_balance[i]:=0;
          END;
          var_balance_gesamt_konto := 0;
          sachposten.RESET;
          sachposten.SETRANGE(sachposten."G/L Account No.",sachkonten."No.");
          IF sachposten.FIND('-') THEN BEGIN
            FOR i:=1 TO 12 DO BEGIN
              sachposten.SETRANGE(sachposten."Posting Date",PeriodStartDate[i],(PeriodStartDate[i+1] - 1));
              IF sachposten.FIND('-') THEN BEGIN
                REPEAT
                  var_balance[i] := var_balance[i] + sachposten.Amount;
                  var_balance_total[i] := var_balance_total[i] + sachposten.Amount;
                  var_balance_total_summe := var_balance_total_summe + sachposten.Amount;
                UNTIL sachposten.NEXT=0;
              END;
              var_balance_gesamt_konto := var_balance_gesamt_konto + var_balance[i];
            END;
            IF var_balance_gesamt_konto<>0 THEN BEGIN
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,sachkonten."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,sachkonten.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(var_balance_gesamt_konto),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            END;
          END;
        UNTIL sachkonten.NEXT=0;
      END;
      EnterCell(160,2,'Summe',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(160,3,FORMAT(var_balance_total_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(160,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(160,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(160,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(160,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(160,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(160,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(160,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(160,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(160,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(160,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(160,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(160,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('Daten_Nav_GuV','Daten_Nav_GuV','F:\Tausch\Nav\Daten');
      //MESSAGE(Text003);
    END;

    LOCAL PROCEDURE Daten_Nav_Bil@1000000006();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Nr.',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Saldo',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      sachkonten.RESET;
      sachkonten.SETRANGE(sachkonten."No.",'0001','3999');
      IF sachkonten.FIND('-') THEN BEGIN
        REPEAT
          v_sachpostsum:=0;
          sachposten.RESET;
          sachposten.SETRANGE(sachposten."G/L Account No.",sachkonten."No.");
          sachposten.SETRANGE(sachposten."Posting Date",010100D,Abgrenz_Datum);
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              v_sachpostsum:=v_sachpostsum+sachposten.Amount;
            UNTIL sachposten.NEXT=0;
          END;
          IF v_sachpostsum<>0 THEN BEGIN
            RowNo := RowNo + 1;
            EnterCell(RowNo,1,sachkonten."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,sachkonten.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_sachpostsum),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
        UNTIL sachkonten.NEXT=0;
      END;
      CloseExcel('Daten_Nav_Bil','Daten_Nav_Bil','F:\Tausch\Nav\Daten');
      //MESSAGE(Text003);
    END;

    LOCAL PROCEDURE Daten_Nav_Systeme@1000000007();
    BEGIN
      //PeriodStartDate[1] := 010716D;
      FOR i := 1 TO 13 DO
      PeriodStartDate[i + 1] := CALCDATE('1M',PeriodStartDate[i]);
      PeriodStartDate[14] := 31129999D;

      CreateExcel;
      RowNo := 11;
      EnterCell(RowNo,1,'VK-Ums„tze nach Perioden',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);                                                // <- Import in excel ab Zeile 2
      RowNo := 12;
      EnterCell(RowNo,1,'Herstell-Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Hersteller',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Gesamt',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(PeriodStartDate[1]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,5,FORMAT(PeriodStartDate[2]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,6,FORMAT(PeriodStartDate[3]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,7,FORMAT(PeriodStartDate[4]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,FORMAT(PeriodStartDate[5]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,9,FORMAT(PeriodStartDate[6]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,10,FORMAT(PeriodStartDate[7]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,11,FORMAT(PeriodStartDate[8]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,12,FORMAT(PeriodStartDate[9]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,13,FORMAT(PeriodStartDate[10]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,14,FORMAT(PeriodStartDate[11]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,15,FORMAT(PeriodStartDate[12]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                                                       // <- Import in excel ab Zeile 2
      ///Hersteller  1 Teil VK
      //////********************************************************************************************
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4','20','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
        REPEAT
          v_summe:=0;
          var_balance[1]:=0;
          var_balance[2]:=0;
          var_balance[3]:=0;
          var_balance[4]:=0;
          var_balance[5]:=0;
          var_balance[6]:=0;
          var_balance[7]:=0;
          var_balance[8]:=0;
          var_balance[9]:=0;
          var_balance[10]:=0;
          var_balance[11]:=0;
          var_balance[12]:=0;
          //Rechnungszeilen verarbeiten
          FOR i := 1 TO 12 DO BEGIN
            VKRZ.RESET;
            VKRZ.SETRANGE(VKRZ."Manufacturer Code",Herstell.Code);
            VKRZ.SETRANGE(VKRZ."Posting Date",PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            VKRZ.SETRANGE(VKRZ.Type,VKRZ.Type::Item);
            VKRZ.SETFILTER(VKRZ.Quantity,'>%1',0);
            VKRZ.SETFILTER(VKRZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
            IF VKRZ.FIND('-') THEN BEGIN
              REPEAT
                IF  VKRZ."VK-Preis (MW)"=VKRZ."Unit Price" THEN BEGIN
                  var_balance[i] := var_balance[i] +( VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_summe:=v_summe + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_summe_total:= v_summe_total + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  var_balance_total[i] := var_balance_total[i] + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                END ELSE BEGIN
                  IF VKRZ.Einkaufsw„hrungsfaktor <> 0 THEN BEGIN
      //            Diese Zeile stimmt nur, wenn Einkaufrechnungsfaktor identisch mit Verkaufsw„hrungsfaktor aus dem VK-Kopf  **********************
                    v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                    var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    v_summe:=v_summe + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    v_summe_total:= v_summe_total + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                  END ELSE BEGIN
                    v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                    var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                    v_summe:=v_summe + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                    v_summe_total:= v_summe_total + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                    var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                  END;
                END;
              UNTIL VKRZ.NEXT = 0;
            END ELSE BEGIN
              var_balance[i] := 0;
            END;
          END;
          // Anzeigen wenn RE fr 20 Wildixvorliegt
          IF Herstell.Code='20' THEN BEGIN
            RowNo := 13;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
          // Anzeigen wenn RE fr 59 ACS vorliegt
          IF Herstell.Code='59' THEN BEGIN
            RowNo := 14;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
          // Anzeigen wenn RE fr 82 Splicecom vorliegt
          IF Herstell.Code='82' THEN BEGIN
            RowNo := 15;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
          // Anzeigen wenn RE fr 85 Ferrari vorliegt
          IF Herstell.Code='85' THEN BEGIN
            RowNo := 16;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
        UNTIL Herstell.NEXT=0;
      END;
      //Salesperson/Purchaser - OnPostDataItem()
      RowNo := 19;
      EnterCell(RowNo,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'VK-Rechnung',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(1,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,2,'VK-Rechnung',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 21;
      // Gutschriftszeilen verarbeiten ************************************************************************************************
      EnterCell(RowNo,1,'VK-Gutschriften nach Perioden',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 22;
      EnterCell(RowNo,1,'Herstell-Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Hersteller',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Gesamt',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(PeriodStartDate[1]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,5,FORMAT(PeriodStartDate[2]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,6,FORMAT(PeriodStartDate[3]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,7,FORMAT(PeriodStartDate[4]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,FORMAT(PeriodStartDate[5]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,9,FORMAT(PeriodStartDate[6]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,10,FORMAT(PeriodStartDate[7]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,11,FORMAT(PeriodStartDate[8]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,12,FORMAT(PeriodStartDate[9]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,13,FORMAT(PeriodStartDate[10]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,14,FORMAT(PeriodStartDate[11]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,15,FORMAT(PeriodStartDate[12]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4','20','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
        REPEAT
          v_summe:=0;
          var_balance[1]:=0;
          var_balance[2]:=0;
          var_balance[3]:=0;
          var_balance[4]:=0;
          var_balance[5]:=0;
          var_balance[6]:=0;
          var_balance[7]:=0;
          var_balance[8]:=0;
          var_balance[9]:=0;
          var_balance[10]:=0;
          var_balance[11]:=0;
          var_balance[12]:=0;
          FOR u := 1 TO 12 DO BEGIN
            VKGK.RESET;
            VKGK.SETFILTER(VKGK."Posting Date",'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
            IF VKGK.FIND('-') THEN BEGIN
              REPEAT
                VKGZ.RESET;
                VKGZ.SETRANGE(VKGZ."Document No.",VKGK."No.");
                VKGZ.SETRANGE(VKGZ."Manufacturer Code",Herstell.Code);
                VKGZ.SETRANGE(VKGZ.Type,VKRZ.Type::Item);
                VKGZ.SETFILTER(VKGZ.Quantity,'<>%1',0);
                VKGZ.SETFILTER(VKGZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
                IF VKGZ.FIND('-') THEN BEGIN
                  REPEAT
                    var_balance[u] := var_balance[u] + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                    v_summe:=v_summe + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                    v_summe_total:= v_summe_total + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                    var_balance_total[u] := var_balance_total[u] + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                  UNTIL VKGZ.NEXT = 0;
                END;
              UNTIL VKGK.NEXT = 0;
            END;
          END;
      //  Anzeigen wenn GU fr 20 Wildix  vorliegt
          IF Herstell.Code='20' THEN BEGIN
            RowNo := 23;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      //  Anzeigen wenn GU fr 59 ACS  vorliegt
          IF Herstell.Code='59' THEN BEGIN
            RowNo := 24;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      //  Anzeigen wenn GU fr 82 Splicecom  vorliegt
          IF Herstell.Code='82' THEN BEGIN
            RowNo := 25;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      //  Anzeigen wenn GU fr 85 Ferrari  vorliegt
          IF Herstell.Code='85' THEN BEGIN
            RowNo := 26;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
        UNTIL Herstell.NEXT=0;
      END;
      RowNo := 29;
      EnterCell(RowNo,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'VK-Gutschriften',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(2,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,2,'VK-Gutschriften',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      ///Hersteller  2 Teil EK
      //////********************************************************************************************
      RowNo := 31;
      EnterCell(RowNo,1,'EK-Preise aus Rechnungsums„tzen nach Perioden',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      RowNo := 32;
      EnterCell(RowNo,1,'Herstell-Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Hersteller',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Gesamt',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(PeriodStartDate[1]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,5,FORMAT(PeriodStartDate[2]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,6,FORMAT(PeriodStartDate[3]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,7,FORMAT(PeriodStartDate[4]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,FORMAT(PeriodStartDate[5]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,9,FORMAT(PeriodStartDate[6]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,10,FORMAT(PeriodStartDate[7]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,11,FORMAT(PeriodStartDate[8]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,12,FORMAT(PeriodStartDate[9]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,13,FORMAT(PeriodStartDate[10]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,14,FORMAT(PeriodStartDate[11]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,15,FORMAT(PeriodStartDate[12]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4','20','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
        REPEAT
          v_summe:=0;
          var_balance[1]:=0;
          var_balance[2]:=0;
          var_balance[3]:=0;
          var_balance[4]:=0;
          var_balance[5]:=0;
          var_balance[6]:=0;
          var_balance[7]:=0;
          var_balance[8]:=0;
          var_balance[9]:=0;
          var_balance[10]:=0;
          var_balance[11]:=0;
          var_balance[12]:=0;
      //  EK-Preise aus Rechnungszeilen verarbeiten
          FOR i := 1 TO 12 DO BEGIN
            VKRZ.RESET;
            VKRZ.SETRANGE(VKRZ."Manufacturer Code",Herstell.Code);
            VKRZ.SETRANGE(VKRZ."Posting Date",PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            VKRZ.SETRANGE(VKRZ.Type,VKRZ.Type::Item);
            VKRZ.SETFILTER(VKRZ.Quantity,'<>%1',0);
            VKRZ.SETFILTER(VKRZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
            IF VKRZ.FIND('-') THEN BEGIN
              REPEAT
                var_balance[i] := var_balance[i] +(VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                v_summe:=v_summe + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                v_summe_total:= v_summe_total + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                var_balance_total[i] := var_balance_total[i] + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
              UNTIL VKRZ.NEXT = 0;
            END ELSE BEGIN
              var_balance[i] := 0;
            END;
          END;

      //  Anzeigen wenn Einkauf-Ums„tze fr 20 Wildix  vorliegt
          IF Herstell.Code='20' THEN BEGIN
            RowNo := 33;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      //  Anzeigen wenn Einkauf-Ums„tze fr 59 ACS vorliegt
          IF Herstell.Code='59' THEN BEGIN
            RowNo := 34;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      //  Anzeigen wenn Einkauf-Ums„tze fr 82 Splicecom  vorliegt
          IF Herstell.Code='82' THEN BEGIN
            RowNo := 35;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      //  Anzeigen wenn Einkauf-Ums„tze fr 85 Ferrari  vorliegt
          IF Herstell.Code='85' THEN BEGIN
            RowNo := 36;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
        UNTIL Herstell.NEXT=0;
      END;
      //Salesperson/Purchaser - OnPostDataItem()
      RowNo := 39;
      EnterCell(RowNo,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'EK-Rechnungen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(3,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,2,'EK-Rechnungen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      // Gutschriftszeilen verarbeiten************************************************************************************
      RowNo := 41;
      EnterCell(RowNo,1,'EK-Preise aus VK-Gutschriften nach Perioden',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 42;
      EnterCell(RowNo,1,'Herstell-Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Hersteller',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Gesamt',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(PeriodStartDate[1]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,5,FORMAT(PeriodStartDate[2]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,6,FORMAT(PeriodStartDate[3]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,7,FORMAT(PeriodStartDate[4]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,FORMAT(PeriodStartDate[5]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,9,FORMAT(PeriodStartDate[6]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,10,FORMAT(PeriodStartDate[7]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,11,FORMAT(PeriodStartDate[8]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,12,FORMAT(PeriodStartDate[9]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,13,FORMAT(PeriodStartDate[10]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,14,FORMAT(PeriodStartDate[11]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,15,FORMAT(PeriodStartDate[12]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1|%2|%3|%4','20','59','82','85');
      IF Herstell.FIND('-') THEN BEGIN
        REPEAT
          v_summe:=0;
          var_balance[1]:=0;
          var_balance[2]:=0;
          var_balance[3]:=0;
          var_balance[4]:=0;
          var_balance[5]:=0;
          var_balance[6]:=0;
          var_balance[7]:=0;
          var_balance[8]:=0;
          var_balance[9]:=0;
          var_balance[10]:=0;
          var_balance[11]:=0;
          var_balance[12]:=0;
          FOR u := 1 TO 12 DO BEGIN
            VKGK.RESET;
            VKGK.SETFILTER(VKGK."Posting Date",'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
            IF VKGK.FIND('-') THEN BEGIN
              REPEAT
                VKGZ.RESET;
                VKGZ.SETRANGE(VKGZ."Document No.",VKGK."No.");
                VKGZ.SETRANGE(VKGZ."Manufacturer Code",Herstell.Code);
                VKGZ.SETRANGE(VKGZ.Type,VKRZ.Type::Item);
                VKGZ.SETFILTER(VKGZ.Quantity,'<>%1',0);
                VKGZ.SETFILTER(VKGZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
                IF VKGZ.FIND('-') THEN BEGIN
                  REPEAT
                    var_balance[u] := var_balance[u] + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                    v_summe:=v_summe + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                    v_summe_total:= v_summe_total + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                    var_balance_total[u] := var_balance_total[u] + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                  UNTIL VKGZ.NEXT = 0;
                END;
              UNTIL VKGK.NEXT = 0;
            END;
          END;
      //  Anzeigen wenn Einkauf-Gutschriften fr 20 Wildix  vorliegen
          IF Herstell.Code='20' THEN BEGIN
            RowNo := 43;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      //  Anzeigen wenn Einkauf-Gutschriften fr 59 ACS  vorliegen
          IF Herstell.Code='59' THEN BEGIN
            RowNo := 44;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      //  Anzeigen wenn Einkauf-Gutschriften fr 82 Splicecom  vorliegen
          IF Herstell.Code='82' THEN BEGIN
            RowNo := 45;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      //  Anzeigen wenn Einkauf-Gutschriften fr 85 Ferrari vorliegen
          IF Herstell.Code='85' THEN BEGIN
            RowNo := 46;
            EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
        UNTIL Herstell.NEXT=0;
      END;
      RowNo := 49;
      EnterCell(RowNo,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'EK-Gutschriften',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(4,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,2,'EK-Gutschriften',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('Daten_Nav_Systeme','Daten_Nav_Systeme','F:\Tausch\Nav\Daten');
      //MESSAGE(Text003);
    END;

    LOCAL PROCEDURE Daten_Nav_Dienstleistung@1000000008();
    BEGIN
      //PeriodStartDate[1] := 010715D;
      FOR i := 1 TO 13 DO
      PeriodStartDate[i + 1] := CALCDATE('1M',PeriodStartDate[i]);
      PeriodStartDate[14] := 31129999D;

      CreateExcel;
      RowNo := 20;
      EnterCell(RowNo,1,'VK-Ums„tze nach Perioden',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);                                                // <- Import in excel ab Zeile 2

      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Herstell-Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Hersteller',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Gesamt',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(PeriodStartDate[1]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,5,FORMAT(PeriodStartDate[2]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,6,FORMAT(PeriodStartDate[3]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,7,FORMAT(PeriodStartDate[4]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,FORMAT(PeriodStartDate[5]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,9,FORMAT(PeriodStartDate[6]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,10,FORMAT(PeriodStartDate[7]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,11,FORMAT(PeriodStartDate[8]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,12,FORMAT(PeriodStartDate[9]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,13,FORMAT(PeriodStartDate[10]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,14,FORMAT(PeriodStartDate[11]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,15,FORMAT(PeriodStartDate[12]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

      RowNo := RowNo + 1;
      ///Hersteller  1 Teil VK
      //////********************************************************************************************
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'52|53|57*|86|87|96');
      IF Herstell.FIND('-') THEN BEGIN
        REPEAT
          v_summe:=0;
          var_balance[1]:=0;
          var_balance[2]:=0;
          var_balance[3]:=0;
          var_balance[4]:=0;
          var_balance[5]:=0;
          var_balance[6]:=0;
          var_balance[7]:=0;
          var_balance[8]:=0;
          var_balance[9]:=0;
          var_balance[10]:=0;
          var_balance[11]:=0;
          var_balance[12]:=0;
      //  Rechnungszeilen verarbeiten
          FOR i := 1 TO 12 DO BEGIN
            VKRZ.RESET;
            VKRZ.SETRANGE(VKRZ."Manufacturer Code",Herstell.Code);
            VKRZ.SETRANGE(VKRZ."Posting Date",PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            VKRZ.SETRANGE(VKRZ.Type,VKRZ.Type::Item);
            VKRZ.SETFILTER(VKRZ.Quantity,'>%1',0);
            VKRZ.SETFILTER(VKRZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
            IF VKRZ.FIND('-') THEN BEGIN
              REPEAT
                IF VKRZ."VK-Preis (MW)"=VKRZ."Unit Price" THEN BEGIN
                  var_balance[i] := var_balance[i] +( VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_summe:=v_summe + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_summe_total:= v_summe_total + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  var_balance_total[i] := var_balance_total[i] + (VKRZ."VK-Preis (MW)"*VKRZ.Quantity);
                  v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                END ELSE BEGIN
                  IF VKRZ.Einkaufsw„hrungsfaktor <> 0 THEN BEGIN
      //            Diese Zeile stimmt nur, wenn Einkaufrechnungsfaktor identisch mit Verkaufsw„hrungsfaktor aus dem VK-Kopf  **********************
                    v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                    var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    v_summe:=v_summe + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    v_summe_total:= v_summe_total + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                    var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") / (VKRZ.Einkaufsw„hrungsfaktor)* (VKRZ.Quantity));
                  END ELSE BEGIN
                    v_sum_au:=v_sum_au + ((VKRZ.Quantity)*(VKRZ."Unit Cost (LCY)"));
                    var_balance[i] := var_balance[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                    v_summe:=v_summe + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                    v_summe_total:= v_summe_total + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                    var_balance_total[i] := var_balance_total[i] + ((VKRZ."Unit Price") * (VKRZ.Quantity));
                  END;
                END;
              UNTIL VKRZ.NEXT = 0;
            END ELSE BEGIN
              var_balance[i] := 0;
            END;
          END;
          EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  Anzeigen wenn AE vorliegt
          IF v_summe <> 0 THEN BEGIN
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
          RowNo := RowNo + 1;
        UNTIL Herstell.NEXT=0;
      END;
      //Salesperson/Purchaser - OnPostDataItem()
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'VK-Rechnungen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(1,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,2,'VK-Rechnungen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := RowNo + 1;
      // Gutschriftszeilen verarbeiten
      RowNo := 40;
      EnterCell(RowNo,1,'VK-Gutschriften nach Perioden',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Herstell-Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Hersteller',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Gesamt',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(PeriodStartDate[1]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,5,FORMAT(PeriodStartDate[2]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,6,FORMAT(PeriodStartDate[3]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,7,FORMAT(PeriodStartDate[4]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,FORMAT(PeriodStartDate[5]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,9,FORMAT(PeriodStartDate[6]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,10,FORMAT(PeriodStartDate[7]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,11,FORMAT(PeriodStartDate[8]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,12,FORMAT(PeriodStartDate[9]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,13,FORMAT(PeriodStartDate[10]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,14,FORMAT(PeriodStartDate[11]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,15,FORMAT(PeriodStartDate[12]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := RowNo + 1;
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'52|53|57*|86|87|96');
      IF Herstell.FIND('-') THEN BEGIN
        REPEAT
          v_summe:=0;
          var_balance[1]:=0;
          var_balance[2]:=0;
          var_balance[3]:=0;
          var_balance[4]:=0;
          var_balance[5]:=0;
          var_balance[6]:=0;
          var_balance[7]:=0;
          var_balance[8]:=0;
          var_balance[9]:=0;
          var_balance[10]:=0;
          var_balance[11]:=0;
          var_balance[12]:=0;
          FOR u := 1 TO 12 DO BEGIN
            VKGK.RESET;
            VKGK.SETFILTER(VKGK."Posting Date",'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
            IF VKGK.FIND('-') THEN BEGIN
              REPEAT
                VKGZ.RESET;
                VKGZ.SETRANGE(VKGZ."Document No.",VKGK."No.");
                VKGZ.SETRANGE(VKGZ."Manufacturer Code",Herstell.Code);
                VKGZ.SETRANGE(VKGZ.Type,VKRZ.Type::Item);
                VKGZ.SETFILTER(VKGZ.Quantity,'<>%1',0);
                VKGZ.SETFILTER(VKGZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
                IF VKGZ.FIND('-') THEN BEGIN
                  REPEAT
                    var_balance[u] := var_balance[u] + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                    v_summe:=v_summe + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                    v_summe_total:= v_summe_total + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                    var_balance_total[u] := var_balance_total[u] + (VKGZ."VK-Preis (MW)"*VKGZ.Quantity*(-1));
                  UNTIL VKGZ.NEXT = 0;
                END;
              UNTIL VKGK.NEXT = 0;
            END;
          END;
          EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF v_summe <> 0 THEN BEGIN
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
          RowNo := RowNo + 1;
        UNTIL Herstell.NEXT=0;
      END;
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'VK-Gutschriften',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(2,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,2,'VK-Gutschriften',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(2,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo + 1;
      RowNo := RowNo + 1;
      ///Hersteller  2 Teil EK
      //////********************************************************************************************
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      RowNo := 60;
      EnterCell(RowNo,1,'EK-Ums„tze nach Perioden',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Herstell-Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Hersteller',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Gesamt',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(PeriodStartDate[1]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,5,FORMAT(PeriodStartDate[2]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,6,FORMAT(PeriodStartDate[3]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,7,FORMAT(PeriodStartDate[4]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,FORMAT(PeriodStartDate[5]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,9,FORMAT(PeriodStartDate[6]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,10,FORMAT(PeriodStartDate[7]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,11,FORMAT(PeriodStartDate[8]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,12,FORMAT(PeriodStartDate[9]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,13,FORMAT(PeriodStartDate[10]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,14,FORMAT(PeriodStartDate[11]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,15,FORMAT(PeriodStartDate[12]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := RowNo + 1;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'52|53|57*|86|87|96');
      IF Herstell.FIND('-') THEN BEGIN
        REPEAT
          v_summe:=0;
          var_balance[1]:=0;
          var_balance[2]:=0;
          var_balance[3]:=0;
          var_balance[4]:=0;
          var_balance[5]:=0;
          var_balance[6]:=0;
          var_balance[7]:=0;
          var_balance[8]:=0;
          var_balance[9]:=0;
          var_balance[10]:=0;
          var_balance[11]:=0;
          var_balance[12]:=0;
      //  EK-Rechnungszeilen verarbeiten
          FOR i := 1 TO 12 DO BEGIN
            VKRZ.RESET;
            VKRZ.SETRANGE(VKRZ."Manufacturer Code",Herstell.Code);
            VKRZ.SETRANGE(VKRZ."Posting Date",PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            VKRZ.SETRANGE(VKRZ.Type,VKRZ.Type::Item);
            VKRZ.SETFILTER(VKRZ.Quantity,'<>%1',0);
            VKRZ.SETFILTER(VKRZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
            IF VKRZ.FIND('-') THEN BEGIN
              REPEAT
                var_balance[i] := var_balance[i] +(VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                v_summe:=v_summe + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                v_summe_total:= v_summe_total + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
                var_balance_total[i] := var_balance_total[i] + (VKRZ."Unit Cost (LCY)"*VKRZ.Quantity);
              UNTIL VKRZ.NEXT = 0;
            END ELSE BEGIN
              var_balance[i] := 0;
            END;
          END;

      //  Anzeigen wenn AE vorliegt
          EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF v_summe <> 0 THEN BEGIN
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      //  IF v_summe <> 0 THEN BEGIN
          RowNo := RowNo + 1;
        UNTIL Herstell.NEXT=0;
      END;
      //Salesperson/Purchaser - OnPostDataItem()
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'EK-Rechnungen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(3,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,2,'EK-Rechnungen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(3,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo + 1;
      RowNo := RowNo + 1;
      // Gutschriftszeilen verarbeiten
      RowNo := 80;
      EnterCell(RowNo,1,'EK-Gutschriften nach Perioden',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Herstell-Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Hersteller',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Gesamt',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(PeriodStartDate[1]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,5,FORMAT(PeriodStartDate[2]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,6,FORMAT(PeriodStartDate[3]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,7,FORMAT(PeriodStartDate[4]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,FORMAT(PeriodStartDate[5]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,9,FORMAT(PeriodStartDate[6]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,10,FORMAT(PeriodStartDate[7]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,11,FORMAT(PeriodStartDate[8]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,12,FORMAT(PeriodStartDate[9]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,13,FORMAT(PeriodStartDate[10]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,14,FORMAT(PeriodStartDate[11]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,15,FORMAT(PeriodStartDate[12]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := RowNo + 1;
      v_summe_total:=0;
      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'52|53|57*|86|87|96');
      IF Herstell.FIND('-') THEN BEGIN
        REPEAT
          v_summe:=0;
          var_balance[1]:=0;
          var_balance[2]:=0;
          var_balance[3]:=0;
          var_balance[4]:=0;
          var_balance[5]:=0;
          var_balance[6]:=0;
          var_balance[7]:=0;
          var_balance[8]:=0;
          var_balance[9]:=0;
          var_balance[10]:=0;
          var_balance[11]:=0;
          var_balance[12]:=0;
          FOR u := 1 TO 12 DO BEGIN
            VKGK.RESET;
            VKGK.SETFILTER(VKGK."Posting Date",'%1..%2',PeriodStartDate[u],PeriodStartDate[u+1] - 1);
            IF VKGK.FIND('-') THEN BEGIN
              REPEAT
                VKGZ.RESET;
                VKGZ.SETRANGE(VKGZ."Document No.",VKGK."No.");
                VKGZ.SETRANGE(VKGZ."Manufacturer Code",Herstell.Code);
                VKGZ.SETRANGE(VKGZ.Type,VKRZ.Type::Item);
                VKGZ.SETFILTER(VKGZ.Quantity,'<>%1',0);
                VKGZ.SETFILTER(VKGZ."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
                IF VKGZ.FIND('-') THEN BEGIN
                  REPEAT
                    var_balance[u] := var_balance[u] + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                    v_summe:=v_summe + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                    v_summe_total:= v_summe_total + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                    var_balance_total[u] := var_balance_total[u] + (VKGZ."Unit Cost (LCY)"*VKGZ.Quantity*(-1));
                  UNTIL VKGZ.NEXT = 0;
                END;
              UNTIL VKGK.NEXT = 0;
            END;
          END;
          EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF v_summe <> 0 THEN BEGIN
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
          RowNo := RowNo + 1;
        UNTIL Herstell.NEXT=0;
      END;
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'EK-Gutschriften',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(4,1,'Gesamt',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,2,'EK-Gutschriften',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('Daten_Nav_Dienstleistung','Daten_Nav_Dienstleistung','F:\Tausch\Nav\Daten');
      //MESSAGE(Text003);
    END;

    LOCAL PROCEDURE Daten_Nav_UM@1000000009();
    BEGIN
      v_summe:=0;
      v_summe_total:=0;
      FOR i := 1 TO 13 DO

      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;

      PeriodStartDate[i + 1] := CALCDATE('1M',PeriodStartDate[i]);
      PeriodStartDate[14] := 31129999D;
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Umsatzerl”se Verk„ufercode nach Perioden',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Verk„ufer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Betreuer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Gesamt',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(PeriodStartDate[1]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,5,FORMAT(PeriodStartDate[2]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,6,FORMAT(PeriodStartDate[3]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,7,FORMAT(PeriodStartDate[4]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,FORMAT(PeriodStartDate[5]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,9,FORMAT(PeriodStartDate[6]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,10,FORMAT(PeriodStartDate[7]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,11,FORMAT(PeriodStartDate[8]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,12,FORMAT(PeriodStartDate[9]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,13,FORMAT(PeriodStartDate[10]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,14,FORMAT(PeriodStartDate[11]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,15,FORMAT(PeriodStartDate[12]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := RowNo + 1;
      ///salesperson  1 Teil
      //////********************************************************************************************
      vkcode.RESET;
      vkcode.SETRANGE(vkcode."Kenner Aussen_Innendienst",'A','B');
      IF vkcode.FIND('-') THEN BEGIN
        REPEAT
          vkcode1.RESET;
          vkcode1.SETRANGE(vkcode1."Kenner Aussen_Innendienst",'A','B');
          IF vkcode1.FIND('-') THEN BEGIN
            REPEAT
              v_summe:=0;
              var_balance[1]:=0;
              var_balance[2]:=0;
              var_balance[3]:=0;
              var_balance[4]:=0;
              var_balance[5]:=0;
              var_balance[6]:=0;
              var_balance[7]:=0;
              var_balance[8]:=0;
              var_balance[9]:=0;
              var_balance[10]:=0;
              var_balance[11]:=0;
              var_balance[12]:=0;
              FOR i := 1 TO 12 DO BEGIN
                Belege.RESET;
                Belege.SETRANGE(Belege.Verk„ufercode,vkcode.Code);
                Belege.SETRANGE(Belege."Betreuer Innendienst",vkcode1.Code);
                Belege.SETRANGE(Belege.Belegdatum,PeriodStartDate[i],PeriodStartDate[i+1] - 1);
                Belege.SETFILTER(Belege.Belegart,'%1|%2',Belege.Belegart::Invoice,Belege.Belegart::"Credit Memo");
                IF Belege.FIND('-') THEN BEGIN
                  REPEAT
                    IF Belege.Belegart=Belege.Belegart::Invoice THEN BEGIN
                      var_balance[i] := var_balance[i] + Belege."Betrag MW ohne Mwst.";
                      v_summe:=v_summe + Belege."Betrag MW ohne Mwst.";
                      v_summe_total:= v_summe_total + Belege."Betrag MW ohne Mwst.";
                    END;
                    IF Belege.Belegart=Belege.Belegart::"Credit Memo" THEN BEGIN
                      var_balance[i] := var_balance[i] + (Belege."Betrag MW ohne Mwst."*(-1));
                      v_summe:=v_summe + (Belege."Betrag MW ohne Mwst."*(-1));
                      v_summe_total:= v_summe_total + (Belege."Betrag MW ohne Mwst."*(-1));
                    END;
                  UNTIL Belege.NEXT = 0;
                END;
              END;
              FOR i := 1 TO 12 DO BEGIN
                var_balance_total[i] := var_balance_total[i] + var_balance[i];
              END;
      //      Anzeigen wenn AE vorliegt
              IF v_summe <> 0 THEN BEGIN
                EnterCell(RowNo,1,vkcode.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,2,vkcode1.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                RowNo := RowNo + 1;
              END;
            UNTIL vkcode1.NEXT=0;
          END;
          IF v_summe <> 0 THEN BEGIN
            RowNo := RowNo + 1;
          END;
        UNTIL vkcode.NEXT=0;
      END;
      RowNo := 37;
      EnterCell(RowNo,1,'Umsatz Gesamt Monat',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(RowNo,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo + 1;
      Belege.RESET;
      Belege.SETRANGE(Belege.Belegdatum,PeriodStartDate[i],PeriodStartDate[i+1] - 1);
      Belege.SETFILTER(Belege.Belegart,'%1|%2',Belege.Belegart::Invoice,Belege.Belegart::"Credit Memo");
      Belege.SETFILTER(Belege.Verk„ufercode,'%1','');
      // Belege.SETRANGE(Belege."Betreuer Innendienst",vkcode1.Code);
      IF Belege.FINDFIRST THEN BEGIN
        v_kein_VCode:=Belege."Belegnr.";
      END;
      Belege.RESET;
      Belege.SETRANGE(Belege.Belegdatum,PeriodStartDate[i],PeriodStartDate[i+1] - 1);
      Belege.SETFILTER(Belege.Belegart,'%1|%2',Belege.Belegart::Invoice,Belege.Belegart::"Credit Memo");
      Belege.SETFILTER(Belege."Betreuer Innendienst",'%1','');
      IF Belege.FINDFIRST THEN BEGIN
        v_kein_VCode:=Belege."Belegnr.";
      END;
      IF v_kein_VCode='' THEN BEGIN
      END ELSE BEGIN
        EnterCell(RowNo,1,'Es gibt Belege ohne Verk„ufer und/oder Bearbeiter Code' + v_kein_VCode,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      END;

      CloseExcel('Daten_Nav_UM','Daten_Nav_UM','F:\Tausch\Nav\Daten');
      //MESSAGE(Text003);
    END;

    LOCAL PROCEDURE Daten_Nav_Hersteller@1000000010();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Hersteller Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Hersteller Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Hersteller Kurzbezeichnung',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Gesch„ftsbereich',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      Herstell.RESET;
      Herstell.SETFILTER(Herstell.Code,'%1..%2','00','9999');
      Herstell.SETFILTER(Herstell.Name,'<>%1','');
      IF Herstell.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,Herstell.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,Herstell.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,Herstell.Herstellerkurzname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(Herstell.Gesch„ftsbereich),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo + 1;
        UNTIL Herstell.NEXT=0;
      END;
      CloseExcel('Daten_Nav_Hersteller','Daten_Nav_Hersteller','F:\Tausch\Nav\Daten');
      //MESSAGE(Text003);
    END;

    LOCAL PROCEDURE Daten_Nav_AE@1000000011();
    BEGIN

      FOR i := 1 TO 13 DO
      PeriodStartDate[i + 1] := CALCDATE('1M',PeriodStartDate[i]);
      PeriodStartDate[14] := 31129999D;

      var_balance_total[1]:=0;
      var_balance_total[2]:=0;
      var_balance_total[3]:=0;
      var_balance_total[4]:=0;
      var_balance_total[5]:=0;
      var_balance_total[6]:=0;
      var_balance_total[7]:=0;
      var_balance_total[8]:=0;
      var_balance_total[9]:=0;
      var_balance_total[10]:=0;
      var_balance_total[11]:=0;
      var_balance_total[12]:=0;

      var_balance_monat[1]:=0;
      var_balance_monat[2]:=0;
      var_balance_monat[3]:=0;
      var_balance_monat[4]:=0;
      var_balance_monat[5]:=0;
      var_balance_monat[6]:=0;
      var_balance_monat[7]:=0;
      var_balance_monat[8]:=0;
      var_balance_monat[9]:=0;
      var_balance_monat[10]:=0;
      var_balance_monat[11]:=0;
      var_balance_monat[12]:=0;

      v_summe_total:= 0;

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Auftragseingang nach Perioden',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'VK-Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Gesamt',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(PeriodStartDate[1]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,5,FORMAT(PeriodStartDate[2]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,6,FORMAT(PeriodStartDate[3]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,7,FORMAT(PeriodStartDate[4]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,FORMAT(PeriodStartDate[5]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,9,FORMAT(PeriodStartDate[6]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,10,FORMAT(PeriodStartDate[7]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,11,FORMAT(PeriodStartDate[8]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,12,FORMAT(PeriodStartDate[9]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,13,FORMAT(PeriodStartDate[10]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,14,FORMAT(PeriodStartDate[11]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,15,FORMAT(PeriodStartDate[12]),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := RowNo + 1;
      ///salesperson  1 Teil
      /////********************************************************************************************
      vkcode.RESET;
      vkcode.SETFILTER(vkcode.Code,'<>%1','ALLE');
      //vkcode.SETFILTER(vkcode.Code,'<>%1','MULTI');
      IF vkcode.FINDFIRST THEN BEGIN
        REPEAT
          v_summe:=0;
          var_balance[1]:=0;
          var_balance[2]:=0;
          var_balance[3]:=0;
          var_balance[4]:=0;
          var_balance[5]:=0;
          var_balance[6]:=0;
          var_balance[7]:=0;
          var_balance[8]:=0;
          var_balance[9]:=0;
          var_balance[10]:=0;
          var_balance[11]:=0;
          var_balance[12]:=0;



      {
          FOR i := 1 TO 12 DO BEGIN
            AU_PER.RESET;
            AU_PER.SETFILTER(AU_PER.Verk„ufercode,'%1',vkcode.Code);
            AU_PER.SETFILTER(Periodendatum,'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            AU_PER.SETFILTER(AU_PER.Art,'%1|%2','AU','GU');
            AU_PER.SETFILTER(AU_PER.Deaktiv,'%1',FALSE);
            IF AU_PER.FINDFIRST THEN BEGIN
              REPEAT
                var_balance[i] := var_balance[i] + AU_PER.Wert_MW;
                v_summe:=v_summe + AU_PER.Wert_MW;
                v_summe_total:= v_summe_total + AU_PER.Wert_MW;
              UNTIL AU_PER.NEXT = 0;
            END ELSE BEGIN
              var_balance[i] := 0;
            END;
          END;
      }

          FOR i := 1 TO 12 DO BEGIN
            AEMTL.RESET;
            AEMTL.SETFILTER(AEMTL.Vertreter,'%1',vkcode.Code);
      //      AEMTL.SETFILTER(AEMTL.Datum,'%1..%2',01092017D,30092017D);
            AEMTL.SETFILTER(AEMTL.Datum,'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            AEMTL.SETFILTER(AEMTL.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      //      AEMTL.SETFILTER(AEMTL.Status,'%1','AE');
            IF AEMTL.FINDFIRST THEN BEGIN
              REPEAT
                var_balance[i] := var_balance[i] + AEMTL."Betrag in EUR";
                  var_balance_monat[i] := var_balance_monat[i] + AEMTL."Betrag in EUR";
                  var_balance_total[i] := var_balance_total[i] + AEMTL."Betrag in EUR";
                v_summe:=v_summe + AEMTL."Betrag in EUR";
       //         IF AEMTL.Vertreter='ESK' THEN BEGIN
                  v_summe_total:= v_summe_total + AEMTL."Betrag in EUR";
       //        END;
              UNTIL AEMTL.NEXT = 0;
            END ELSE BEGIN

              var_balance[i] := 0;

            END;
          END;
          FOR i := 1 TO 12 DO BEGIN
      //      var_balance_monat[i] := var_balance_monat[i] + var_balance[i];
      //      var_balance_total[i] := var_balance_total[i] + var_balance[i];
          END;

      //  Anzeigen wenn AE vorliegt
          IF v_summe <> 0 THEN BEGIN
            EnterCell(RowNo,1,vkcode.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,vkcode."First name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_balance[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_balance[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_balance[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_balance[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_balance[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_balance[6]),FALSE,FALSE,FALSE,'###,##,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_balance[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_balance[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_balance[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_balance[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_balance[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_balance[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;


          IF v_summe <> 0 THEN BEGIN
            RowNo := RowNo + 1;
          END;
        UNTIL vkcode.NEXT=0;
      END;

      //Salesperson/Purchaser - OnPostDataItem()
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'AU Gesamt Monat',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo + 1;
      RowNo := RowNo + 1;

      EnterCell(100,1,'AU Gesamt Monat',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(100,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(100,4,FORMAT(var_balance_total[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(100,5,FORMAT(var_balance_total[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(100,6,FORMAT(var_balance_total[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(100,7,FORMAT(var_balance_total[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(100,8,FORMAT(var_balance_total[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(100,9,FORMAT(var_balance_total[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(100,10,FORMAT(var_balance_total[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(100,11,FORMAT(var_balance_total[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(100,12,FORMAT(var_balance_total[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(100,13,FORMAT(var_balance_total[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(100,14,FORMAT(var_balance_total[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(100,15,FORMAT(var_balance_total[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo + 1;


      ////**********************************************************************************************
      ///////SP 2 Teil
      ///  On Pre
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Rahmenauftragseingang',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Sheet.Range('A'+j).Value := 'Rahmenauftragseingang:';
      RowNo := RowNo + 1;

      //// On after get Record SP

      vkcode.RESET;
      vkcode.SETFILTER(vkcode.Code,'<>%1','ALLE');
      //vkcode.SETFILTER(vkcode.Code,'<>%1','MULTI');
      IF vkcode.FINDFIRST THEN BEGIN
        REPEAT
          v_summe:=0;
          var_bal[1]:=0;
          var_bal[2]:=0;
          var_bal[3]:=0;
          var_bal[4]:=0;
          var_bal[5]:=0;
          var_bal[6]:=0;
          var_bal[7]:=0;
          var_bal[8]:=0;
          var_bal[9]:=0;
          var_bal[10]:=0;
          var_bal[11]:=0;
          var_bal[12]:=0;


      //  bestehende Rahmen
          FOR i := 1 TO 12 DO BEGIN
            vkk.RESET;
            vkk.SETFILTER(vkk."Document Type",'%1',vkk."Document Type"::"Blanket Order");
            vkk.SETFILTER(vkk."Salesperson Code",'%1',vkcode.Code);
            vkk.SETFILTER(vkk."Order Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            IF vkk.FINDFIRST THEN BEGIN
              REPEAT
                vkz.RESET;
                vkz.SETFILTER(vkz."Document No.",'%1',vkk."No.");
                vkz.SETFILTER(vkz.Quantity,'>%1',0);
                IF vkz.FINDFIRST THEN BEGIN
                  REPEAT
                    var_bal[i] := var_bal[i] + (vkz."VK-Preis (MW)"*vkz.Quantity);
                    v_summe:=v_summe + (vkz."VK-Preis (MW)"*vkz.Quantity);
                    v_summe_aur:=v_summe_aur + (vkz."VK-Preis (MW)"*vkz.Quantity);
                    v_summe_total:= v_summe_total + (vkz."VK-Preis (MW)"*vkz.Quantity);
                  UNTIL vkz.NEXT=0;
                END ELSE BEGIN
                  var_bal[i] := 0;
                END;
              UNTIL vkk.NEXT = 0;
            END;
          END;
      //  archivierte Rahmen
          FOR i := 1 TO 12 DO BEGIN
            vkk_arch.RESET;
            vkk_arch.SETFILTER(vkk_arch."Document Type",'%1',vkk_arch."Document Type"::"Blanket Order");
            vkk_arch.SETFILTER(vkk_arch."Salesperson Code",'%1',vkcode.Code);
            vkk_arch.SETFILTER(vkk_arch."Order Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            vkk_arch.SETFILTER(vkk_arch."Version No.",'%1', 1);
            IF vkk_arch.FINDFIRST THEN BEGIN
              REPEAT
                vkz_arch.RESET;
                vkz_arch.SETFILTER(vkz_arch."Document No.",'%1',vkk_arch."No.");
                vkz_arch.SETFILTER(vkz_arch.Quantity,'>%1',0);
                IF vkz_arch.FINDFIRST THEN BEGIN
                  REPEAT
                    IF vkz_arch.Quantity=vkz_arch."Outstanding Quantity" THEN BEGIN
                    END ELSE BEGIN
                      var_bal[i] := var_bal[i] + (vkz_arch."VK-Preis (MW)"*(vkz_arch.Quantity-vkz_arch."Outstanding Quantity"));
                      v_summe:=v_summe + (vkz_arch."VK-Preis (MW)"*(vkz_arch.Quantity-vkz_arch."Outstanding Quantity"));
                      v_summe_aur:=v_summe_aur + (vkz_arch."VK-Preis (MW)"*(vkz_arch.Quantity-vkz_arch."Outstanding Quantity"));
                      v_summe_total:= v_summe_total + (vkz_arch."VK-Preis (MW)"*(vkz_arch.Quantity-vkz_arch."Outstanding Quantity"));
                    END;
                  UNTIL vkz_arch.NEXT=0;
                END ELSE BEGIN
                  var_bal[i] := 0;
                END;
              UNTIL vkk_arch.NEXT = 0;
            END;
          END;

      {    FOR i := 1 TO 12 DO BEGIN
            AU_PER.RESET;
            AU_PER.SETFILTER(AU_PER.Verk„ufercode,'%1',vkcode.Code);
            AU_PER.SETFILTER(Periodendatum,'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            AU_PER.SETFILTER(AU_PER.Art,'%1','AUR');
            IF AU_PER.FINDFIRST THEN BEGIN
              REPEAT
                var_bal[i] := var_bal[i] + AU_PER.Wert_MW;
                v_summe:=v_summe + AU_PER.Wert_MW;
                v_summe_aur:=v_summe_aur + AU_PER.Wert_MW;
                v_summe_total:= v_summe_total + AU_PER.Wert_MW;
              UNTIL AU_PER.NEXT = 0;
            END ELSE BEGIN
              var_bal[i] := 0;
            END;
          END;
      }

          FOR i := 1 TO 12 DO BEGIN
            var_balance_total[i] := var_balance_total[i] + var_bal[i];
            var_bal_total[i] := var_bal_total[i] + var_bal[i];
          END;
      //  Anzeigen wenn AE vorliegt
          IF v_summe <> 0 THEN BEGIN
            EnterCell(RowNo,1,vkcode.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,vkcode."First name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(var_bal[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(var_bal[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(var_bal[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(var_bal[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(var_bal[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(var_bal[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(var_bal[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(var_bal[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(var_bal[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(var_bal[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(var_bal[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(var_bal[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

          END;
          IF v_summe <> 0 THEN BEGIN
            RowNo := RowNo + 1;
          END;
        UNTIL vkcode.NEXT=0;
      END;


      ////  On Post data Item SP
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'AUR Gesamt Monat',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_summe_aur),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_bal_total[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_bal_total[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_bal_total[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_bal_total[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_bal_total[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_bal_total[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_bal_total[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_bal_total[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_bal_total[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_bal_total[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_bal_total[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_bal_total[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo + 1;
      RowNo := RowNo + 1;

      EnterCell(101,1,'AUR Gesamt Monat',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(101,3,FORMAT(v_summe_aur),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(101,4,FORMAT(var_bal_total[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(101,5,FORMAT(var_bal_total[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(101,6,FORMAT(var_bal_total[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(101,7,FORMAT(var_bal_total[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(101,8,FORMAT(var_bal_total[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(101,9,FORMAT(var_bal_total[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(101,10,FORMAT(var_bal_total[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(101,11,FORMAT(var_bal_total[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(101,12,FORMAT(var_bal_total[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(101,13,FORMAT(var_bal_total[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(101,14,FORMAT(var_bal_total[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(101,15,FORMAT(var_bal_total[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      /////// SP AUBEST on pre  3. TEIL  *****************************************************************************************
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Auftr„ge aus Rahmen',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Sheet.Range('A'+j).Value := 'Auftr„ge aus Rahmen';
      RowNo := RowNo + 1;

      ////// SP Aubest on after get record
      vkcode.RESET;
      vkcode.SETFILTER(vkcode.Code,'<>%1','MULTI');
      IF vkcode.FINDFIRST THEN BEGIN
        REPEAT
          v_sum_au:=0;
          v_aubest[1]:=0;
          v_aubest[2]:=0;
          v_aubest[3]:=0;
          v_aubest[4]:=0;
          v_aubest[5]:=0;
          v_aubest[6]:=0;
          v_aubest[7]:=0;
          v_aubest[8]:=0;
          v_aubest[9]:=0;
          v_aubest[10]:=0;
          v_aubest[11]:=0;
          v_aubest[12]:=0;



      {    FOR i := 1 TO 12 DO BEGIN
            AU_PER.RESET;
            AU_PER.SETFILTER(AU_PER.Verk„ufercode,'%1',vkcode.Code);
            AU_PER.SETFILTER(Periodendatum,'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            AU_PER.SETFILTER(AU_PER.Art,'%1','AU');
            AU_PER.SETFILTER(AU_PER."AU aus Rahmen",'%1',TRUE);
            IF AU_PER.FINDFIRST THEN BEGIN
              REPEAT
                v_aubest[i] := v_aubest[i] + AU_PER.Wert_MW;
                v_sum_au:= v_sum_au + AU_PER.Wert_MW;
                v_sum_aubest:= v_sum_aubest + AU_PER.Wert_MW;
                v_summe_total:= v_summe_total - AU_PER.Wert_MW;
              UNTIL AU_PER.NEXT = 0;
            END ELSE BEGIN
              v_aubest[i] := 0;
            END;
          END;
      }

          FOR i := 1 TO 12 DO BEGIN
            AEMTL.RESET;
            AEMTL.SETFILTER(AEMTL.Vertreter,'%1',vkcode.Code);
            AEMTL.SETFILTER(AEMTL.Datum,'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            AEMTL.SETFILTER(AEMTL.Status,'%1','AE');
            AEMTL.SETFILTER(AEMTL."AU aus Rahmen",'%1',TRUE);
            IF AEMTL.FINDFIRST THEN BEGIN
              REPEAT
                v_aubest[i] := v_aubest[i] + AEMTL."Betrag in EUR";
                v_sum_au:= v_sum_au + AEMTL."Betrag in EUR";
                v_sum_aubest:= v_sum_aubest + AEMTL."Betrag in EUR";
                v_summe_total:= v_summe_total + AEMTL."Betrag in EUR";
              UNTIL AEMTL.NEXT = 0;
            END ELSE BEGIN
              v_aubest[i] := 0;
            END;
          END;


          FOR i := 1 TO 12 DO BEGIN
            var_balance_total[i] := var_balance_total[i] - v_aubest[i];
            v_aubest_total[i] := v_aubest_total[i] + v_aubest[i];
          END;
      //  Anzeigen wenn AE vorliegt
          IF v_sum_au <> 0 THEN BEGIN
            EnterCell(RowNo,1,vkcode.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,vkcode."First name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_sum_au),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(v_aubest[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(v_aubest[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(v_aubest[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(v_aubest[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(v_aubest[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(v_aubest[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(v_aubest[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(v_aubest[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(v_aubest[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(v_aubest[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(v_aubest[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(v_aubest[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
          IF v_sum_au <> 0 THEN BEGIN
            RowNo := RowNo + 1;
          END;
        UNTIL vkcode.NEXT=0;
      END;


      //// Sp AUBest on Post
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'AU aus Rahmen Gesamt Monat',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_sum_aubest),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(v_aubest_total[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(v_aubest_total[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(v_aubest_total[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(v_aubest_total[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(v_aubest_total[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(v_aubest_total[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(v_aubest_total[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(v_aubest_total[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(v_aubest_total[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(v_aubest_total[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(v_aubest_total[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(v_aubest_total[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo + 1;
      RowNo := RowNo + 1;

      EnterCell(102,1,'AU aus Rahmen Gesamt Monat',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(102,3,FORMAT(v_sum_aubest),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(102,4,FORMAT(v_aubest_total[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(102,5,FORMAT(v_aubest_total[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(102,6,FORMAT(v_aubest_total[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(102,7,FORMAT(v_aubest_total[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(102,8,FORMAT(v_aubest_total[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(102,9,FORMAT(v_aubest_total[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(102,10,FORMAT(v_aubest_total[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(102,11,FORMAT(v_aubest_total[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(102,12,FORMAT(v_aubest_total[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(102,13,FORMAT(v_aubest_total[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(102,14,FORMAT(v_aubest_total[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(102,15,FORMAT(v_aubest_total[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      ///// AUAUR   4. TEIL
      ////  on pre
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Netto RAE',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  Sheet.Range('A'+j).Value := 'Netto RAE';
      RowNo := RowNo + 1;





      vkcode.RESET;
      vkcode.SETFILTER(vkcode.Code,'<>%1','ALLE');
      //vkcode.SETFILTER(vkcode.Code,'<>%1','MULTI');
      IF vkcode.FINDFIRST THEN BEGIN
        REPEAT
         v_summe:=0;
         v_aubest[1]:=0;
         v_aubest[2]:=0;
         v_aubest[3]:=0;
         v_aubest[4]:=0;
         v_aubest[5]:=0;
         v_aubest[6]:=0;
         v_aubest[7]:=0;
         v_aubest[8]:=0;
         v_aubest[9]:=0;
         v_aubest[10]:=0;
         v_aubest[11]:=0;
         v_aubest[12]:=0;
         v_aubest1[1]:=0;
         v_aubest1[2]:=0;
         v_aubest1[3]:=0;
         v_aubest1[4]:=0;
         v_aubest1[5]:=0;
         v_aubest1[6]:=0;
         v_aubest1[7]:=0;
         v_aubest1[8]:=0;
         v_aubest1[9]:=0;
         v_aubest1[10]:=0;
         v_aubest1[11]:=0;
         v_aubest1[12]:=0;


      //  bestehende Rahmen
          FOR i := 1 TO 12 DO BEGIN
            vkk.RESET;
            vkk.SETFILTER(vkk."Document Type",'%1',vkk."Document Type"::"Blanket Order");
            vkk.SETFILTER(vkk."Salesperson Code",'%1',vkcode.Code);
            vkk.SETFILTER(vkk."Order Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            IF vkk.FINDFIRST THEN BEGIN
              REPEAT
                vkz.RESET;
                vkz.SETFILTER(vkz."Document No.",'%1',vkk."No.");
                vkz.SETFILTER(vkz.Quantity,'>%1',0);
                IF vkz.FINDFIRST THEN BEGIN
                  REPEAT
                     v_aubest1[i]:=v_aubest1[i] +  (vkz."VK-Preis (MW)"*vkz.Quantity);
                    v_summe:=v_summe + (vkz."VK-Preis (MW)"*vkz.Quantity);
                    v_summe_aur:=v_summe_aur + (vkz."VK-Preis (MW)"*vkz.Quantity);
                    v_summe_total:= v_summe_total + (vkz."VK-Preis (MW)"*vkz.Quantity);
                  UNTIL vkz.NEXT=0;
                END ELSE BEGIN
                  var_bal[i] := 0;
                END;
              UNTIL vkk.NEXT = 0;
            END;
          END;
      //  archivierte Rahmen
          FOR i := 1 TO 12 DO BEGIN
            vkk_arch.RESET;
            vkk_arch.SETFILTER(vkk_arch."Document Type",'%1',vkk_arch."Document Type"::"Blanket Order");
            vkk_arch.SETFILTER(vkk_arch."Salesperson Code",'%1',vkcode.Code);
            vkk_arch.SETFILTER(vkk_arch."Order Date",'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            vkk_arch.SETFILTER(vkk_arch."Version No.",'%1', 1);
            IF vkk_arch.FINDFIRST THEN BEGIN
              REPEAT
                vkz_arch.RESET;
                vkz_arch.SETFILTER(vkz_arch."Document No.",'%1',vkk_arch."No.");
                vkz_arch.SETFILTER(vkz_arch.Quantity,'>%1',0);
                IF vkz_arch.FINDFIRST THEN BEGIN
                  REPEAT
                    IF vkz_arch.Quantity=vkz_arch."Outstanding Quantity" THEN BEGIN
                    END ELSE BEGIN
                    v_aubest1[i]:=v_aubest1[i] + (vkz_arch."VK-Preis (MW)"*(vkz_arch.Quantity-vkz_arch."Outstanding Quantity"));
      //                var_bal[i] := var_bal[i] + (vkz_arch."VK-Preis (MW)"*(vkz_arch.Quantity-vkz_arch."Outstanding Quantity"));
                      v_summe:=v_summe + (vkz_arch."VK-Preis (MW)"*(vkz_arch.Quantity-vkz_arch."Outstanding Quantity"));
                      v_summe_aur:=v_summe_aur + (vkz_arch."VK-Preis (MW)"*(vkz_arch.Quantity-vkz_arch."Outstanding Quantity"));
                      v_summe_total:= v_summe_total + (vkz_arch."VK-Preis (MW)"*(vkz_arch.Quantity-vkz_arch."Outstanding Quantity"));
                    END;
                  UNTIL vkz_arch.NEXT=0;
                END ELSE BEGIN
                  v_aubest1[i] := 0;
                END;
              UNTIL vkk_arch.NEXT = 0;
            END;
          END;
      //    Auftr„ge aus Rahmen
          FOR i := 1 TO 12 DO BEGIN
            AEMTL.RESET;
            AEMTL.SETFILTER(AEMTL.Vertreter,'%1',vkcode.Code);
            AEMTL.SETFILTER(AEMTL.Datum,'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            AEMTL.SETFILTER(AEMTL.Status,'%1','AE');
            AEMTL.SETFILTER(AEMTL."AU aus Rahmen",'%1',TRUE);
            IF AEMTL.FINDFIRST THEN BEGIN
              REPEAT
                v_aubest[i] := v_aubest[i] + AEMTL."Betrag in EUR";
                v_sum_au:= v_sum_au + AEMTL."Betrag in EUR";
                v_sum_aubest:= v_sum_aubest + AEMTL."Betrag in EUR";
                v_summe:= v_summe - AEMTL."Betrag in EUR";
                v_summe_total:= v_summe_total - AEMTL."Betrag in EUR";
              UNTIL AEMTL.NEXT = 0;
            END ELSE BEGIN
              v_aubest[i] := 0;
            END;
          END;

       FOR i := 1 TO 12 DO BEGIN
            var_balance_total[i] := var_balance_total[i] +  v_aubest1[i]-v_aubest[i];
            var_bal_total[i] := var_bal_total[i] + v_aubest1[i];
      //      v_aubest1_total[i]:= v_aubest1_total[i] + v_aubest1[i];
            v_summe_aur1:= v_summe_aur1 + v_aubest1[i]- v_aubest[i];
            v_aubest1_total[i] := v_aubest1_total[i] + v_aubest1[i]- v_aubest[i];
          END;
      //  Anzeigen wenn AE vorliegt
          IF v_summe <> 0 THEN BEGIN
            EnterCell(RowNo,1,vkcode.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,vkcode."First name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(v_aubest1[1]- v_aubest[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(v_aubest1[2]- v_aubest[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(v_aubest1[3]- v_aubest[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(v_aubest1[4]- v_aubest[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(v_aubest1[5]- v_aubest[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(v_aubest1[6]- v_aubest[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(v_aubest1[7]- v_aubest[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(v_aubest1[8]- v_aubest[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(v_aubest1[9]- v_aubest[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(v_aubest1[10]- v_aubest[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(v_aubest1[11]- v_aubest[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(v_aubest1[12]- v_aubest[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

          END;
          IF v_summe <> 0 THEN BEGIN
            RowNo := RowNo + 1;
          END;
        UNTIL vkcode.NEXT=0;
      END;

      {
      /////AUAUR - OnAfterGetRecord()
      vkcode.RESET;
      //vkcode.SETFILTER(vkcode.Code,'<>%1','MULTI');
      vkcode.SETFILTER(vkcode.Code,'<>%1','ALLE');
      IF vkcode.FINDFIRST THEN BEGIN
        REPEAT
          v_summe:=0;
          v_aubest1[1]:=0;
          v_aubest1[2]:=0;
          v_aubest1[3]:=0;
          v_aubest1[4]:=0;
          v_aubest1[5]:=0;
          v_aubest1[6]:=0;
          v_aubest1[7]:=0;
          v_aubest1[8]:=0;
          v_aubest1[9]:=0;
          v_aubest1[10]:=0;
          v_aubest1[11]:=0;
          v_aubest1[12]:=0;
          FOR i := 1 TO 12 DO BEGIN
            AU_PER.RESET;
            AU_PER.SETFILTER(AU_PER.Verk„ufercode,'%1',vkcode.Code);
            AU_PER.SETFILTER(Periodendatum,'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            AU_PER.SETFILTER(AU_PER.Art,'%1','AUR');
            IF AU_PER.FINDFIRST THEN BEGIN
              REPEAT
                v_aubest1[i] :=v_aubest1[i] + AU_PER.Wert_MW;
                v_summe:=v_summe + AU_PER.Wert_MW;
                v_summe_aur1:=v_summe_aur1 + AU_PER.Wert_MW;
      //        V_Summe_Total:= V_Summe_Total + AU_PER.Wert_MW;
              UNTIL AU_PER.NEXT = 0;
      //    END ELSE BEGIN
      //      var_bal[i] := 0;
            END;
            AU_PER1.RESET;
            AU_PER1.SETFILTER(AU_PER1.Verk„ufercode,'%1',vkcode.Code);
            AU_PER1.SETFILTER(Periodendatum,'%1..%2',PeriodStartDate[i],PeriodStartDate[i+1] - 1);
            AU_PER1.SETFILTER(AU_PER1.Art,'%1','AU');
            AU_PER1.SETFILTER(AU_PER1."AU aus Rahmen",'%1',TRUE);
            IF AU_PER1.FINDFIRST THEN BEGIN
              REPEAT
                v_aubest1[i] := v_aubest1[i] - AU_PER1.Wert_MW;
                v_summe:= v_summe - AU_PER1.Wert_MW;
                v_summe_aur1:= v_summe_aur1 - AU_PER1.Wert_MW;
      //        v_summe_aur:=v_summe_aur - v_sum_aubest;
      //        V_Summe_Total:= V_Summe_Total - AU_PER1.Wert_MW;
              UNTIL AU_PER1.NEXT = 0;
            END;
      //    v_aubest[i]:=0;

          END;
          FOR i := 1 TO 12 DO BEGIN
            var_balance_total[i] := var_balance_total[i] + v_aubest1[i];
            v_aubest1_total[i] := v_aubest1_total[i] + v_aubest1[i];
          END;
      //  Anzeigen wenn AE vorliegt
          IF v_summe <> 0 THEN BEGIN
            EnterCell(RowNo,1,vkcode.Code,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,vkcode."First name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_summe),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(v_aubest1[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(v_aubest1[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(v_aubest1[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(v_aubest1[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(v_aubest1[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(v_aubest1[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(v_aubest1[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(v_aubest1[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(v_aubest1[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,13,FORMAT(v_aubest1[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(v_aubest1[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(v_aubest1[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
          IF v_summe <> 0 THEN BEGIN
            RowNo := RowNo + 1;
          END;
        UNTIL vkcode.NEXT=0;
      END;

      }
      /////AUAUR - OnPostDataItem()
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Netto RAE Gesamt Monat',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_summe_aur1),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(v_aubest1_total[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(v_aubest1_total[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(v_aubest1_total[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(v_aubest1_total[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(v_aubest1_total[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(v_aubest1_total[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(v_aubest1_total[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(v_aubest1_total[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(v_aubest1_total[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(v_aubest1_total[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(v_aubest1_total[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(v_aubest1_total[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo + 1;
      RowNo := RowNo + 1;
      {
      EnterCell(RowNo,1,'Netto RAE Gesamt Monat',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_summe_aur1),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(v_aubest1_total[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(v_aubest1_total[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(v_aubest1_total[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(v_aubest1_total[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(v_aubest1_total[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(v_aubest1_total[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(v_aubest1_total[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(v_aubest1_total[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(v_aubest1_total[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(v_aubest1_total[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(v_aubest1_total[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(v_aubest1_total[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //////  ********************************************************************************************************************

      }

      //Post Report
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Gesamt Monat',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_balance_total[1]-v_aubest1_total[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_balance_total[2]-v_aubest1_total[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_balance_total[3]-v_aubest1_total[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_balance_total[4]-v_aubest1_total[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_balance_total[5]-v_aubest1_total[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_balance_total[6]-v_aubest1_total[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_balance_total[7]-v_aubest1_total[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_balance_total[8]-v_aubest1_total[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_balance_total[9]-v_aubest1_total[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_balance_total[10]-v_aubest1_total[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_balance_total[11]-v_aubest1_total[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_balance_total[12]-v_aubest1_total[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo + 1;
      RowNo := RowNo + 1;
      RowNo := RowNo + 1;


      vkz.RESET;


      vkz.SETFILTER(vkz."Document Type",'%1',vkz."Document Type"::Order);
      vkz.SETFILTER(vkz.Type,'%1',vkz.Type::Item);
      vkz.SETFILTER(vkz."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      vkz.SETFILTER(vkz."Outstanding Quantity",'>%1',0);
      IF vkz.FINDFIRST THEN BEGIN
        REPEAT
          v_au_wert := v_au_wert + (vkz."Outstanding Quantity" * vkz."VK-Preis (MW)");
        UNTIL vkz.NEXT = 0;
      END;

      vkz.RESET;
      vkz.SETFILTER(vkz."Document Type",'%1',vkz."Document Type"::Order);
      vkz.SETFILTER(vkz.Type,'%1',vkz.Type::Item);
      vkz.SETFILTER(vkz."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      vkz.SETFILTER(vkz."Outstanding Quantity",'>%1',0);
      vkz.SETFILTER(vkz."Blanket Order No.",'<>%1','');
      IF vkz.FINDFIRST THEN BEGIN
        REPEAT
          v_sum_au_rahmen := v_sum_au_rahmen + (vkz."Outstanding Quantity" * vkz."VK-Preis (MW)");
        UNTIL vkz.NEXT = 0;
      END;

      vkz.RESET;
      vkz.CALCFIELDS("offene Menge aus Rahmen im AU");
      vkz.SETFILTER(vkz."Document Type",'%1',vkz."Document Type"::"Blanket Order");
      vkz.SETFILTER(vkz.Type,'%1',vkz.Type::Item);
      vkz.SETFILTER(vkz."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      vkz.SETFILTER(vkz."Outstanding Quantity",'>%1',0);
      IF vkz.FINDFIRST THEN BEGIN
        REPEAT
      //      v_au_menge:=0;
      //           vkz1.RESET;
      //           vkz1.SETFILTER(vkz1."Blanket Order No.",'%1',vkz."Document No.");
      //           vkz1.SETFILTER(vkz1."Blanket Order Line No.",'%1',vkz."Line No.");
      //           vkz1.SETFILTER(vkz1."Outstanding Quantity",'<>%1',0);
      //               IF vkz1.FINDFIRST THEN BEGIN
      //               REPEAT
      //                 v_au_menge:=0;
      //                 v_au_menge:=v_au_menge+(vkz1."Outstanding Quantity");
      //               UNTIL vkz1.NEXT = 0;
      //               END;
      //            var_vkk.RESET;
      //            var_vkk.SETFILTER(var_vkk."No.",'%1',vkz."Document No.");
      //            IF var_vkk.FINDFIRST THEN BEGIN
      //              IF var_vkk."Currency Code"='' THEN BEGIN
      //                 v_aur_wert:=(v_aur_wert+ ROUND((vkz."Outstanding Quantity")-(vkz."offene Menge aus Rahmen im AU"))
      //                  *vkz."Line Amount"/vkz.Quantity);
      //                END ELSE BEGIN
      //                 v_aur_wert:=(v_aur_wert+ ROUND((vkz."Outstanding Quantity")-(vkz."offene Menge aus Rahmen im AU"))
      //                 *vkz."Line Amount"/vkz.Quantity/var_vkk."Currency Factor");
      //                END;
      //             END;

      //  v_aur_wert:= v_aur_wert+(vkz."Outstanding Quantity"* vkz."VK-Preis (MW)");
      vkz.CALCFIELDS("offene Menge aus Rahmen im AU");
         v_aur_wert:= v_aur_wert+ (vkz.Quantity-vkz."Quantity Shipped"-vkz."offene Menge aus Rahmen im AU")*vkz."VK-Preis (MW)";
        UNTIL vkz.NEXT = 0;
      END;

      EnterCell(RowNo,1,'Gesamt Auftragsbestand:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //Sheet.Range('A'+j).Value := 'Gesamt Auftragsbestand:';
      EnterCell(RowNo,3,FORMAT(v_au_wert),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //Sheet.Range('C'+j).Value := v_au_wert;

      RowNo := RowNo + 1;
      RowNo := RowNo + 1;
      //Sheet.Range('A'+j).Value := 'Gesamt Rahmenbestand:';
      EnterCell(RowNo,1,'Gesamt Rahmenbestand:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(v_aur_wert),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //Sheet.Range('C'+j).Value := v_aur_wert;
      //EnterCell(RowNo,3,FORMAT(v_aur_wert-v_sum_au_rahmen),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //Sheet.Range('C'+j).Value := v_aur_wert-v_sum_au_rahmen;

      EnterCell(104,1,'Gesamt Monat',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(104,3,FORMAT(v_summe_total),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(104,4,FORMAT(var_balance_total[1]-v_aubest1_total[1]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(104,5,FORMAT(var_balance_total[2]-v_aubest1_total[2]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(104,6,FORMAT(var_balance_total[3]-v_aubest1_total[3]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(104,7,FORMAT(var_balance_total[4]-v_aubest1_total[4]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(104,8,FORMAT(var_balance_total[5]-v_aubest1_total[5]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(104,9,FORMAT(var_balance_total[6]-v_aubest1_total[6]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(104,10,FORMAT(var_balance_total[7]-v_aubest1_total[7]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(104,11,FORMAT(var_balance_total[8]-v_aubest1_total[8]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(104,12,FORMAT(var_balance_total[9]-v_aubest1_total[9]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(104,13,FORMAT(var_balance_total[10]-v_aubest1_total[10]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(104,14,FORMAT(var_balance_total[11]-v_aubest1_total[11]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(104,15,FORMAT(var_balance_total[12]-v_aubest1_total[12]),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //Sheet.Range('A106').Value := 'Gesamt Auftragsbestand:';
      //Sheet.Range('C106').Value := v_au_wert;
      EnterCell(106,1,'Gesamt Auftragsbestand:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(106,3,FORMAT(v_au_wert),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //Sheet.Range('A107').Value := 'Gesamt Rahmenbestand:';
      //Sheet.Range('C107').Value := v_aur_wert;
      //Sheet.Range('C107').Value := v_aur_wert-v_sum_au_rahmen;
      EnterCell(107,1,'Gesamt Rahmenbestand:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(107,3,FORMAT(v_aur_wert),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(107,4,FORMAT(v_aur_wert-v_sum_au_rahmen),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('Daten_Nav_AE','Daten_Nav_AE','F:\Tausch\Nav\Daten');
    END;

    BEGIN
    {

      // Achtung: Beim šberschreiben der Excel-Files kommt noch ein Fenster hoch, ob Datei berschrieben werden soll
      *******************************************************************************************************************



      // Function Champs wird von OnPreReport() gestartet und ruft weitere Function auf, die wieder weitere aufrufen
      // Function Champs         startet Function Vorl_GuV;
      // Function Vorl_GuV       startet Function Rohbilanz;
      // Function Rohbilanz      startet Function Systeme;
      // Function Systeme        startet Function Dienstleistung;
      // Function Dienstleistung startet Function Umsatz;
      // Function Umsatz         startet Function Hersteller;
      // Function Herseller      beendet den Job.

      // Function Rohbilanz_Test und Systeme_Test werden nicht benutzt und rufen keine weiteren Functions auf.
    }
    END.
  }
  RDLDATA
  {
  }
}

