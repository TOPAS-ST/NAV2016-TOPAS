OBJECT Report 50055 TOPAS Service Auswertung
{
  OBJECT-PROPERTIES
  {
    Date=06.02.18;
    Time=10:55:07;
    Modified=Yes;
    Version List=FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  IF auswertungs_mode = auswertungs_mode :: Einfach THEN
                    Auswertung_einfach;
                  IF auswertungs_mode = auswertungs_mode :: Detailliert THEN
                    Auswertung_detailliert;

                  Berichtstabelle_Artikel.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Debitor.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Header2.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Einkauf1.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Einkauf2.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Verkauf1.COPY(Berichtstabelle,TRUE);
                  Berichtstabelle_Verkauf2.COPY(Berichtstabelle,TRUE);

                  ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1000000000;;DataItem;CopyItem          ;
               DataItemTable=Table2000000026;
               OnPreDataItem=BEGIN
                               Berichtstabelle_Artikel.RESET;
                               Berichtstabelle_Artikel.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Artikel.SETFILTER(Tabelle,'%1','ARTIKEL_E');
                               SETRANGE(Number,1,Berichtstabelle_Artikel.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Artikel.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Artikel.NEXT;
                                  END;

                                  IF umsatz_acs_champf„hig > 0 THEN BEGIN
                                    ratio_umsatz_art_umsatz_acs_champfaehig := ROUND((Berichtstabelle_Artikel."Feld 4" / umsatz_acs_champf„hig) * 100,2);
                                    ratio_umsatz_champ_acs_champfaehig := ROUND((umsatz_champ / umsatz_acs_champf„hig) * 100,2);
                                  END ELSE BEGIN
                                    ratio_umsatz_art_umsatz_acs_champfaehig := 0;
                                    ratio_umsatz_champ_acs_champfaehig := 0;
                                  END;

                                  IF umsatz_acs_supf„hig > 0 THEN BEGIN
                                    ratio_umsatz_sup_umsatz_acs_supfaehig := ROUND((umsatz_sup / umsatz_acs_supf„hig) * 100,2);
                                    ratio_umsatz_art_umsatz_acs_supfaehig := ROUND((Berichtstabelle_Artikel."Feld 4" / umsatz_acs_supf„hig) * 100,2);
                                  END ELSE BEGIN
                                    ratio_umsatz_sup_umsatz_acs_supfaehig := 0;
                                    ratio_umsatz_art_umsatz_acs_supfaehig := 0;
                                  END;
                                END;
                                 }

    { 2   ;1   ;Column  ;Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Teams;
               IncludeCaption=No;
               SourceExpr='Verk„ufercode: '+verk„ufer+' Betreuer Innendienst: ' + betreuer + ' Teams: ' + teams + ' Gebietscode: ' + gebietscode + '  Belegdatum: ' + FORMAT(Startdatum) + '..' + FORMAT(Enddatum) }

    { 3   ;1   ;Column  ;USERID              ;
               IncludeCaption=No;
               SourceExpr=USERID }

    { 4   ;1   ;Column  ;TODAY_0_4           ;
               IncludeCaption=No;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 5   ;1   ;Column  ;ReportForNavPageNo  ;
               IncludeCaption=No;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 6   ;1   ;Column  ;FORMAT_ROUND_Feld4_umsatz_acs_champfahig_100_000_Pct;
               IncludeCaption=No;
               SourceExpr=FORMAT(ratio_umsatz_art_umsatz_acs_champfaehig)+'%' }

    { 7   ;1   ;Column  ;W„hrung             ;
               SourceExpr='°' }

    { 8   ;1   ;Column  ;Feld4_Artikel       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Artikel."Feld 4" }

    { 9   ;1   ;Column  ;Feld3_Artikel       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Artikel."Feld 3" }

    { 10  ;1   ;Column  ;FORMAT_ROUND_Feld4_umsatz_acs_supfahig_100_000_Pct;
               IncludeCaption=No;
               SourceExpr=FORMAT(ratio_umsatz_art_umsatz_acs_supfaehig)+'%' }

    { 11  ;1   ;Column  ;umsatz_acs_supfahig ;
               IncludeCaption=No;
               SourceExpr=umsatz_acs_supf„hig }

    { 12  ;1   ;Column  ;umsatz_acs_champfahig;
               IncludeCaption=No;
               SourceExpr=umsatz_acs_champf„hig }

    { 13  ;1   ;Column  ;FORMAT_ROUND_umsatz_sup_umsatz_acs_supfahig_100_000_Pct;
               SourceExpr=FORMAT(ratio_umsatz_sup_umsatz_acs_supfaehig)+'%' }

    { 14  ;1   ;Column  ;umsatz_sup          ;
               IncludeCaption=No;
               SourceExpr=umsatz_sup }

    { 15  ;1   ;Column  ;FORMAT_ROUND_umsatz_champ_umsatz_acs_champfahig_100_000_Pct;
               IncludeCaption=No;
               SourceExpr=FORMAT(ratio_umsatz_champ_acs_champfaehig)+'%' }

    { 16  ;1   ;Column  ;umsatz_acs_champfahig_umsatz_acs_supfahig;
               IncludeCaption=No;
               SourceExpr=umsatz_acs_champf„hig+umsatz_acs_supf„hig }

    { 17  ;1   ;Column  ;umsatz_champ        ;
               IncludeCaption=No;
               SourceExpr=umsatz_champ }

    { 1000000001;1;DataItem;CopyCustomer     ;
               DataItemTable=Table2000000026;
               OnPreDataItem=BEGIN
                               Berichtstabelle_Debitor.RESET;
                               Berichtstabelle_Debitor.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Debitor.SETFILTER(Tabelle,'%1','DEBITOR_E');
                               Berichtstabelle_Debitor.SETFILTER("Feld 3",'%1',Berichtstabelle_Artikel."Feld 3");
                               SETRANGE(Number,1,Berichtstabelle_Debitor.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Debitor.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Debitor.NEXT;
                                  END;
                                END;
                                 }

    { 20  ;2   ;Column  ;Feld4_Debitor       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Debitor."Feld 4" }

    { 21  ;2   ;Column  ;Feld7_Debitor       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Debitor."Feld 7" }

    { 22  ;2   ;Column  ;Feld6_Debitor       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Debitor."Feld 6" }

    { 23  ;2   ;Column  ;Feld10_Debitor      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Debitor. "Feld 10" }

    { 24  ;2   ;Column  ;Index_Debitor       ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Debitor.Index }

    { 1000000002;;DataItem;CopyHeader2       ;
               DataItemTable=Table2000000026;
               OnPreDataItem=BEGIN
                               Berichtstabelle_Header2.RESET;
                               Berichtstabelle_Header2.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Header2.SETFILTER(Tabelle,'%1','HEADER2');
                               SETRANGE(Number,1,Berichtstabelle_Header2.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Header2.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Header2.NEXT;
                                  END;
                                END;
                                 }

    { 26  ;1   ;Column  ;Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Team2;
               IncludeCaption=No;
               SourceExpr='Verk„ufercode: '+verk„ufer+' Betreuer Innendienst: ' + betreuer + ' Teams: ' + teams + ' Gebietscode: ' + gebietscode + '  Belegdatum: ' + FORMAT(Startdatum) + '..' + FORMAT(Enddatum) }

    { 27  ;1   ;Column  ;USERID2             ;
               IncludeCaption=No;
               SourceExpr=USERID }

    { 28  ;1   ;Column  ;TODAY_0_42          ;
               IncludeCaption=No;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 29  ;1   ;Column  ;ReportForNavPageNo2 ;
               IncludeCaption=No;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 1000000003;;DataItem;CopyPurchase1     ;
               DataItemTable=Table2000000026;
               OnPreDataItem=BEGIN
                               Berichtstabelle_Einkauf1.RESET;
                               Berichtstabelle_Einkauf1.SETCURRENTKEY("Feld 2",Index);
                               Berichtstabelle_Einkauf1.SETFILTER(Tabelle,'%1','EINKAUF1');
                               SETRANGE(Number,1,Berichtstabelle_Einkauf1.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Einkauf1.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Einkauf1.NEXT;
                                  END;

                                  einkauf_gesamt_menge := Berichtstabelle_Einkauf1."Feld 4";
                                END;
                                 }

    { 31  ;1   ;Column  ;Feld5_Einkauf1      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Einkauf1."Feld 5" }

    { 32  ;1   ;Column  ;Feld4_Einkauf1      ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Einkauf1."Feld 4" }

    { 33  ;1   ;Column  ;Feld3_Einkauf1      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Einkauf1."Feld 3" }

    { 34  ;1   ;Column  ;Belegnr_Einkauf1    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Einkauf1."Belegnr." }

    { 35  ;1   ;Column  ;Datum_Einkauf1      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Einkauf1.Datum }

    { 36  ;1   ;Column  ;ek_gesamt_supfahig  ;
               IncludeCaption=No;
               SourceExpr=ek_gesamt_supf„hig }

    { 1000000012;1;Column;einkauf1_gesamt_menge;
               DecimalPlaces=0:0;
               SourceExpr=einkauf_gesamt_menge }

    { 1000000004;;DataItem;CopyPurchase2     ;
               DataItemTable=Table2000000026;
               OnPreDataItem=BEGIN
                               Berichtstabelle_Einkauf2.RESET;
                               Berichtstabelle_Einkauf2.SETCURRENTKEY("Feld 2",Index);
                               Berichtstabelle_Einkauf2.SETFILTER(Tabelle,'%1','EINKAUF2');
                               SETRANGE(Number,1,Berichtstabelle_Einkauf2.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Einkauf2.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Einkauf2.NEXT;
                                  END;

                                  einkauf_gesamt_menge := Berichtstabelle_Einkauf2."Feld 4";
                                  totale_EK_Menge := totale_EK_Menge + Berichtstabelle_Einkauf2."Feld 4";
                                END;
                                 }

    { 38  ;1   ;Column  ;Feld5_Einkauf2      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Einkauf2."Feld 5" }

    { 39  ;1   ;Column  ;Feld4_Einkauf2      ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Einkauf2."Feld 4" }

    { 40  ;1   ;Column  ;Feld3_Einkauf2      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Einkauf2."Feld 3" }

    { 41  ;1   ;Column  ;Belegnr_Einkauf2    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Einkauf2."Belegnr." }

    { 42  ;1   ;Column  ;Datum_Einkauf2      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Einkauf2.Datum }

    { 43  ;1   ;Column  ;ek_gesamt_champfahig;
               IncludeCaption=No;
               SourceExpr=ek_gesamt_champf„hig }

    { 1000000011;1;Column;einkauf2_gesamt_menge;
               DecimalPlaces=0:0;
               SourceExpr=einkauf_gesamt_menge }

    { 1000000005;;DataItem;CopyCustomer2     ;
               DataItemTable=Table2000000026;
               OnPreDataItem=BEGIN
                               Berichtstabelle_Debitor.RESET;
                               Berichtstabelle_Debitor.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Debitor.SETFILTER(Tabelle,'%1','DEBITOR_D');
                               SETRANGE(Number,1,Berichtstabelle_Debitor.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Debitor.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Debitor.NEXT;
                                  END;
                                END;
                                 }

    { 45  ;1   ;Column  ;Feld7_Debitor2      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Debitor."Feld 7" }

    { 46  ;1   ;Column  ;Feld6_Debitor2      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Debitor."Feld 6" }

    { 47  ;1   ;Column  ;Feld10_Debitor2     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Debitor."Feld 10" }

    { 48  ;1   ;Column  ;Index_Debitor2      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Debitor.Index }

    { 50  ;1   ;Column  ;totale_VK_Menge     ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=totale_VK_Menge }

    { 51  ;1   ;Column  ;totale_EK_Menge     ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=totale_EK_Menge }

    { 52  ;1   ;Column  ;totaler_betrag_geraete;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=totaler_betrag_geraete }

    { 54  ;1   ;Column  ;totale_CHAMP_Menge  ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=totale_CHAMP_Menge }

    { 1000000006;1;DataItem;CopySell1        ;
               DataItemTable=Table2000000026;
               OnPreDataItem=BEGIN
                               Berichtstabelle_Verkauf1.RESET;
                               Berichtstabelle_Verkauf1.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Verkauf1.SETFILTER(Tabelle,'%1','VERKAUF1');
                               Berichtstabelle_Verkauf1.SETFILTER("Feld 2",'%1',Berichtstabelle_Debitor.Index);
                               SETRANGE(Number,1,Berichtstabelle_Verkauf1.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Verkauf1.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Verkauf1.NEXT;
                                  END;

                                  Verkauf_VK_Menge := Berichtstabelle_Verkauf1."Feld 4";
                                  Verkauf_CHAMP_Menge := Berichtstabelle_Verkauf1."Feld 20";
                                  Verkauf_betrag_geraete := Berichtstabelle_Verkauf1."Feld 21";

                                  totale_VK_Menge := totale_VK_Menge + Berichtstabelle_Verkauf1."Feld 4";
                                  totale_CHAMP_Menge := totale_CHAMP_Menge + Berichtstabelle_Verkauf1."Feld 20";
                                  totaler_betrag_geraete := totaler_betrag_geraete + Berichtstabelle_Verkauf1."Feld 21";
                                END;
                                 }

    { 56  ;2   ;Column  ;V__Feld10__         ;
               IncludeCaption=No;
               SourceExpr='('+Berichtstabelle_Verkauf1."Feld 10"+')' }

    { 57  ;2   ;Column  ;AnteilChampVerkauf  ;
               SourceExpr=(Verkauf_CHAMP_Menge/Verkauf_VK_Menge)*100 }

    { 58  ;2   ;Column  ;Feld20_Verkauf1     ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Verkauf1."Feld 20" }

    { 59  ;2   ;Column  ;Feld5_Verkauf1      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Verkauf1."Feld 5" }

    { 60  ;2   ;Column  ;Feld4_Verkauf1      ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Verkauf1."Feld 4" }

    { 61  ;2   ;Column  ;Feld3_Verkauf1      ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Verkauf1."Feld 3" }

    { 62  ;2   ;Column  ;Feld21_Verkauf1     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Verkauf1."Feld 21" }

    { 1000000008;2;Column;Verkauf_VK_Menge   ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Verkauf_VK_Menge }

    { 1000000009;2;Column;Verkauf_CHAMP_Menge;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Verkauf_CHAMP_Menge }

    { 1000000010;2;Column;Verkauf_betrag_geraete;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Verkauf_betrag_geraete }

    { 1000000007;1;DataItem;CopySell2        ;
               DataItemTable=Table2000000026;
               OnPreDataItem=BEGIN
                               Berichtstabelle_Verkauf2.RESET;
                               Berichtstabelle_Verkauf2.SETCURRENTKEY(Tabelle,Index,"Belegnr.","Zeilennr.");
                               Berichtstabelle_Verkauf2.SETFILTER(Tabelle,'%1','VERKAUF2');
                               Berichtstabelle_Verkauf2.SETFILTER("Feld 2",'%1',Berichtstabelle_Debitor.Index);
                               SETRANGE(Number,1,Berichtstabelle_Verkauf2.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN BEGIN
                                    Berichtstabelle_Verkauf2.FIND('-');
                                  END ELSE BEGIN
                                    Berichtstabelle_Verkauf2.NEXT;
                                  END;

                                  IF totale_EK_Menge > 0 THEN
                                    ratio_VK_Menge_EK_Menge := (totale_VK_Menge / totale_EK_Menge) * 100
                                  ELSE
                                    ratio_VK_Menge_EK_Menge := 0;

                                  IF totale_VK_Menge > 0 THEN
                                    ratio_Champ_Menge_VK_Menge := (totale_CHAMP_Menge / totale_VK_Menge) * 100
                                  ELSE
                                    ratio_Champ_Menge_VK_Menge := 0;
                                END;
                                 }

    { 64  ;2   ;Column  ;posten_fehlen       ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=posten_fehlen }

    { 65  ;2   ;Column  ;Artikelnr_Textkette ;
               IncludeCaption=No;
               SourceExpr=Artikelnr_Textkette }

    { 66  ;2   ;Column  ;Liefermenge_gesamt  ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Liefermenge_gesamt }

    { 67  ;2   ;Column  ;Feld17_Verkauf2     ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Verkauf2."Feld 17" }

    { 68  ;2   ;Column  ;Belegnr_Verkauf2    ;
               IncludeCaption=No;
               SourceExpr=Berichtstabelle_Verkauf2."Belegnr." }

    { 49  ;2   ;Column  ;totale_VK_Menge_totale_EK_Menge_100;
               SourceExpr=FORMAT(ratio_VK_Menge_EK_Menge) }

    { 53  ;2   ;Column  ;totale_CHAMP_Menge_totale_VK_Menge_100;
               SourceExpr=FORMAT(ratio_Champ_Menge_VK_Menge) }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140014;2;Field     ;
                  CaptionML=DEU=Auswertung;
                  OptionCaptionML=DEU=Einfach,Detailliert;
                  SourceExpr=auswertungs_mode }

      { 1140004;2;Field     ;
                  CaptionML=DEU=Belegdatum von;
                  SourceExpr=Startdatum }

      { 1140012;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=Enddatum }

      { 1140005;2;Field     ;
                  CaptionML=DEU=Betreuer Innendienst;
                  SourceExpr=betreuer;
                  TableRelation=Salesperson/Purchaser }

      { 1140006;2;Field     ;
                  CaptionML=DEU=Verk„ufercode;
                  SourceExpr=verk„ufer;
                  TableRelation=Salesperson/Purchaser }

      { 1140007;2;Field     ;
                  CaptionML=DEU=Teams;
                  SourceExpr=teams;
                  TableRelation=Team }

      { 1140009;2;Field     ;
                  CaptionML=DEU=Gebietscode;
                  SourceExpr=gebietscode;
                  TableRelation=Territory }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Berichtstabelle@1140000 : TEMPORARY Record 50037;
      Berichtstabelle_Artikel@1000000012 : TEMPORARY Record 50037;
      Berichtstabelle_Debitor@1140015 : TEMPORARY Record 50037;
      Berichtstabelle_Header2@1000000006 : TEMPORARY Record 50037;
      Berichtstabelle_Einkauf1@1000000007 : TEMPORARY Record 50037;
      Berichtstabelle_Einkauf2@1000000008 : TEMPORARY Record 50037;
      Berichtstabelle_Verkauf1@1000000010 : TEMPORARY Record 50037;
      Berichtstabelle_Verkauf2@1000000011 : TEMPORARY Record 50037;
      Lieferzeile@1140032 : Record 111;
      Artikelnr_Textkette@1140033 : Text;
      "RE-Kopf"@1140001 : Record 112;
      "RE-Zeile"@1140002 : Record 113;
      "BET-Kopf"@1140018 : Record 38;
      "BET-Zeile"@1140019 : Record 39;
      "EK-Liefkopf"@1140041 : Record 120;
      "EK-Liefzeile"@1140042 : Record 121;
      Champs@1140030 : Record 50024;
      Wertpostenverb@1140027 : Record 6508;
      Wertposten@1140028 : Record 5802;
      Artikelposten@1140029 : Record 32;
      EK_Artikelposten@1140035 : Record 32;
      ArtikelAusglPosten@1140034 : Record 339;
      Item@1140010 : Record 27;
      Startdatum@1140004 : Date;
      Enddatum@1140005 : Date;
      betreuer@1140006 : Code[20];
      verk„ufer@1140007 : Code[20];
      teams@1140008 : Code[20];
      gebietscode@1140009 : Code[20];
      umsatz_acs_champf„hig@1140012 : Decimal;
      umsatz_acs_supf„hig@1140016 : Decimal;
      umsatz_item@1140013 : Decimal;
      umsatz_champ@1140014 : Decimal;
      umsatz_sup@1140011 : Decimal;
      vk_gesamt_champf„hig@1140024 : Decimal;
      vk_gesamt_supf„hig@1140025 : Decimal;
      ek_gesamt_champf„hig@1140022 : Decimal;
      ek_gesamt_supf„hig@1140023 : Decimal;
      einkauf_gesamt_menge@1000000009 : Decimal;
      totale_VK_Menge@1140036 : Decimal;
      totale_EK_Menge@1140021 : Decimal;
      totale_CHAMP_Menge@1140037 : Decimal;
      totaler_betrag_geraete@1140020 : Decimal;
      Verkauf_VK_Menge@1000000015 : Decimal;
      Verkauf_CHAMP_Menge@1000000016 : Decimal;
      Verkauf_betrag_geraete@1000000014 : Decimal;
      liefermenge_zeile@1140038 : Decimal;
      Liefermenge_gesamt@1140039 : Decimal;
      ratio_VK_Menge_EK_Menge@1000000000 : Decimal;
      ratio_Champ_Menge_VK_Menge@1000000005 : Decimal;
      ratio_umsatz_sup_umsatz_acs_supfaehig@1000000001 : Decimal;
      ratio_umsatz_art_umsatz_acs_champfaehig@1000000002 : Decimal;
      ratio_umsatz_art_umsatz_acs_supfaehig@1000000003 : Decimal;
      ratio_umsatz_champ_acs_champfaehig@1000000004 : Decimal;
      service_gebucht@1140031 : Integer;
      auswertungs_mode@1140017 : 'Einfach,Detailliert';
      posten_fehlen@1140040 : Text[10];
      counter@1140003 : Integer;
      artikel_zunull@1140043 : Integer;
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionCopyItem_Body2@5021(VAR Artikel@1000000000 : Record 50037);
    BEGIN
      WITH Artikel DO BEGIN
        ReportForNav.ShowOutput(STRPOS("Feld 3",'CHAMPS') <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCopyItem_Body3@5022(VAR Artikel@1000000000 : Record 50037);
    BEGIN
      WITH Artikel DO BEGIN
        ReportForNav.ShowOutput(STRPOS("Feld 3",'CHAMPS') = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCopyCustomer2_Header12@5023(VAR Debitor2@1000000000 : Record 50037);
    BEGIN
      WITH Debitor2 DO BEGIN
        Berichtstabelle.RESET;
        Berichtstabelle.SETFILTER(Tabelle,'%1|%2','EINKAUF1','EINKAUF2');
        IF Berichtstabelle.FINDFIRST THEN
          ReportForNav.NewPageWithoutTransportTotals;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCopySell2_Body19@5024(VAR Verkauf2@1000000000 : Record 50037);
    BEGIN
      WITH Verkauf2 DO BEGIN
        Artikelnr_Textkette := '';
        Liefermenge_gesamt := 0;
        posten_fehlen := '';
        Lieferzeile.RESET;
        Lieferzeile.SETFILTER("Document No.",'%1',"Belegnr.");
        Lieferzeile.SETFILTER(Type,'%1',Lieferzeile.Type :: Item);
        Lieferzeile.SETFILTER(Quantity,'>%1',0);
        IF Lieferzeile.FINDFIRST THEN
          REPEAT
            liefermenge_zeile := 0;
            Item.GET(Lieferzeile."No.");
            IF Item."Software Upgrade Protection" = FALSE THEN BEGIN
              Berichtstabelle.RESET;
              Berichtstabelle.SETFILTER(Tabelle,'%1','VERKAUF3');
              Berichtstabelle.SETFILTER("Belegnr.",'%1',Lieferzeile."Document No.");
              Berichtstabelle.SETFILTER("Zeilennr.",'%1',Lieferzeile."Line No.");
              Berichtstabelle.SETFILTER("Feld 3",'%1',Lieferzeile."Artikelnr. 2");
              IF Berichtstabelle.FINDFIRST THEN BEGIN
                REPEAT
                  liefermenge_zeile := liefermenge_zeile + Berichtstabelle."Feld 4";
                  Liefermenge_gesamt := Liefermenge_gesamt + Berichtstabelle."Feld 4";
                UNTIL Berichtstabelle.NEXT = 0;
                IF Artikelnr_Textkette <> '' THEN
                  Artikelnr_Textkette := Artikelnr_Textkette + ', ';
                Artikelnr_Textkette := Artikelnr_Textkette + Lieferzeile."Artikelnr. 2" + ' (' + FORMAT(liefermenge_zeile) + ')';
              END;
              Berichtstabelle.RESET;
              Berichtstabelle.SETFILTER(Tabelle,'%1','POSTEN_WEGFALL');
              Berichtstabelle.SETFILTER("Feld 7",'%1',Lieferzeile."Document No.");
              IF Berichtstabelle.FINDFIRST THEN BEGIN
                posten_fehlen := '*';
              END;
            END;
          UNTIL Lieferzeile.NEXT = 0;
      END;
    END;

    PROCEDURE Auswertung_einfach@1140000();
    BEGIN
      //*******************************************************************************************************
      //                        CHAMPS bzw. SUP Artikel werden in Rechnungen durchsucht
      //*******************************************************************************************************
      umsatz_acs_champf„hig := 0;
      umsatz_acs_supf„hig := 0;
      umsatz_item := 0;
      umsatz_champ := 0;
      umsatz_sup := 0;
      //*******************************************************************************************************
      //                                       CHAMPS Betrachtung
      //*******************************************************************************************************
      Item.RESET;
      Item.SETFILTER("Software Upgrade Protection",'%1',TRUE);
      IF Item.FINDFIRST THEN
        REPEAT
          umsatz_item := 0;
          "RE-Kopf".RESET;
          "RE-Kopf".SETCURRENTKEY("Sell-to Customer No.","Order Date");
          IF (Startdatum<>0D) AND (Enddatum=0D) THEN
            "RE-Kopf".SETFILTER("Posting Date",'>=%1',Startdatum);
          IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
            "RE-Kopf".SETFILTER("Posting Date",'>=%1&<=%2',Startdatum,Enddatum);
          IF (Startdatum=0D) AND (Enddatum<>0D) THEN
            "RE-Kopf".SETFILTER("Posting Date",'<=%1',Enddatum);
          "RE-Kopf".SETFILTER("Betreuer Innendienst",betreuer);
          "RE-Kopf".SETFILTER("Salesperson Code",verk„ufer);
          "RE-Kopf".SETFILTER(Teams,teams);
          "RE-Kopf".SETFILTER("Territory Code",gebietscode);
          IF "RE-Kopf".FINDFIRST THEN
            REPEAT
              "RE-Zeile".RESET;
              "RE-Zeile".SETFILTER("Document No.",'%1',"RE-Kopf"."No.");
              "RE-Zeile".SETFILTER("Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
              "RE-Zeile".SETFILTER(Type,'%1',"RE-Zeile".Type::Item);
              "RE-Zeile".SETFILTER("No.",'%1',Item."No.");
              "RE-Zeile".SETFILTER(Quantity,'>%1',0);
              IF "RE-Zeile".FINDFIRST THEN
                REPEAT
                  //Nur ein Datensatz pro SUP/CHAMPS Artikel und Debitor
                  Berichtstabelle.RESET;
                  Berichtstabelle.SETFILTER(Tabelle,'%1','DEBITOR_E');
                  Berichtstabelle.SETFILTER(Index,'%1',"RE-Zeile"."Sell-to Customer No.");
                  Berichtstabelle.SETFILTER("Belegnr.",'%1',Item."No.");
                  IF NOT Berichtstabelle.FINDFIRST THEN BEGIN
                    Berichtstabelle.INIT;
                    Berichtstabelle.Tabelle := 'DEBITOR_E';
                    Berichtstabelle.Index := "RE-Zeile"."Sell-to Customer No.";
                    Berichtstabelle."Belegnr." := "RE-Zeile"."No.";
                    Berichtstabelle."Feld 3" := "RE-Zeile"."Artikelnr. 2";
                    Berichtstabelle."Feld 6" := "RE-Kopf"."Betreuer Innendienst";
                    Berichtstabelle."Feld 7" := "RE-Kopf"."Salesperson Code";
                    Berichtstabelle."Feld 9" := "RE-Kopf"."Territory Code";
                    Berichtstabelle."Feld 10" := "RE-Kopf"."Sell-to Customer Name";
                    Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                    Berichtstabelle.User := USERID;
                    Berichtstabelle.INSERT;
                  END;
                  Berichtstabelle."Feld 4" := Berichtstabelle."Feld 4" + ("RE-Zeile"."VK-Preis (MW)" * "RE-Zeile".Quantity);
                  Berichtstabelle.MODIFY;
                  umsatz_item := umsatz_item + ("RE-Zeile"."VK-Preis (MW)" * "RE-Zeile".Quantity);
                  IF Item.Artikelgruppe = 'CHAMPS' THEN
                    umsatz_champ := umsatz_champ + ("RE-Zeile"."VK-Preis (MW)" * "RE-Zeile".Quantity)
                  ELSE
                    umsatz_sup := umsatz_sup + ("RE-Zeile"."VK-Preis (MW)" * "RE-Zeile".Quantity);
                UNTIL "RE-Zeile".NEXT = 0;
            UNTIL "RE-Kopf".NEXT = 0;
            IF umsatz_item <> 0 THEN BEGIN
              Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'ARTIKEL_E';
              Berichtstabelle.Index := Item."No.";
              Berichtstabelle."Feld 3" := Item."No. 2";
              Berichtstabelle."Feld 4" := umsatz_item;
              Berichtstabelle."Feld 17" := Item."Software Upgrade Protection";
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
              Berichtstabelle.User := USERID;
              Berichtstabelle.INSERT;
            END;
        UNTIL Item.NEXT = 0;
      //*******************************************************************************************************
      //                                        AudioCodes Gesamtumsatz
      //*******************************************************************************************************
      umsatz_acs_champf„hig := umsatz_acs_champf„hig + umsatz_champ;
      umsatz_acs_supf„hig := umsatz_acs_supf„hig + umsatz_sup;
      "RE-Kopf".RESET;
      "RE-Kopf".SETCURRENTKEY("Sell-to Customer No.","Order Date");
      IF (Startdatum<>0D) AND (Enddatum=0D) THEN
        "RE-Kopf".SETFILTER("Posting Date",'>=%1',Startdatum);
      IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
        "RE-Kopf".SETFILTER("Posting Date",'>=%1&<=%2',Startdatum,Enddatum);
      IF (Startdatum=0D) AND (Enddatum<>0D) THEN
        "RE-Kopf".SETFILTER("Posting Date",'<=%1',Enddatum);
      "RE-Kopf".SETFILTER("Betreuer Innendienst",betreuer);
      "RE-Kopf".SETFILTER("Salesperson Code",verk„ufer);
      "RE-Kopf".SETFILTER(Teams,teams);
      "RE-Kopf".SETFILTER("Territory Code",gebietscode);
      IF "RE-Kopf".FINDFIRST THEN
        REPEAT
          "RE-Zeile".RESET;
          "RE-Zeile".SETFILTER("Document No.",'%1',"RE-Kopf"."No.");
          "RE-Zeile".SETFILTER("Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          "RE-Zeile".SETFILTER("Manufacturer Code",'%1','59');
          "RE-Zeile".SETFILTER(Type,'%1',"RE-Zeile".Type::Item);
          "RE-Zeile".SETFILTER(Quantity,'>%1',0);
          IF "RE-Zeile".FINDFIRST THEN
            REPEAT
              Item.GET("RE-Zeile"."No.");
              IF Item."Software Upgrade Protection" = FALSE THEN BEGIN
                IF Item.Serviceklassifizierung <> 'SYSTEM FLAT' THEN
                  umsatz_acs_champf„hig := umsatz_acs_champf„hig + ("RE-Zeile"."VK-Preis (MW)" * "RE-Zeile".Quantity)
                ELSE
                  umsatz_acs_supf„hig := umsatz_acs_supf„hig + ("RE-Zeile"."VK-Preis (MW)" * "RE-Zeile".Quantity);
              END;
            UNTIL "RE-Zeile".NEXT = 0;
        UNTIL "RE-Kopf".NEXT = 0;
    END;

    PROCEDURE Auswertung_detailliert@1140001();
    BEGIN
      //*******************************************************************************************************
      //              ACS und CHAMPS bzw. SUP Artikel werden in VK und EK Rechnungen ausgewertet
      //*******************************************************************************************************
      //*******************************************************************************************************
      // Einkauf
      //*******************************************************************************************************
      ek_gesamt_champf„hig := 0;
      ek_gesamt_supf„hig := 0;
      ////Aktuelle Bestellungen untersuchen
      "BET-Kopf".RESET;
      IF (Startdatum<>0D) AND (Enddatum=0D) THEN
        "BET-Kopf".SETFILTER("Order Date",'>=%1',Startdatum);
      IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
        "BET-Kopf".SETFILTER("Order Date",'>=%1&<=%2',Startdatum,Enddatum);
      IF (Startdatum=0D) AND (Enddatum<>0D) THEN
        "BET-Kopf".SETFILTER("Order Date",'<=%1',Enddatum);
      IF "BET-Kopf".FINDFIRST THEN
        REPEAT
          "BET-Zeile".RESET;
          "BET-Zeile".SETFILTER("Document No.",'%1',"BET-Kopf"."No.");
          "BET-Zeile".SETFILTER("Location Code",'%1','ZENT');
          "BET-Zeile".SETFILTER("Manufacturer Code",'%1','59');
          "BET-Zeile".SETFILTER("Outstanding Quantity",'>%1',0);
          IF "BET-Zeile".FINDFIRST THEN BEGIN
            REPEAT
              Item.GET("BET-Zeile"."No.");
              IF Item."Software Upgrade Protection" = FALSE THEN BEGIN
                Berichtstabelle.RESET;
                Berichtstabelle.SETFILTER(Tabelle,'%1','HEADER2');
                IF NOT Berichtstabelle.FINDFIRST THEN BEGIN
                  Berichtstabelle.INIT;
                  Berichtstabelle.Tabelle := 'HEADER2';
                  Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                  Berichtstabelle.User := USERID;
                  Berichtstabelle.INSERT;
                END;
                IF Item.Serviceklassifizierung <> 'SYSTEM FLAT' THEN
                  ek_gesamt_champf„hig := ek_gesamt_champf„hig + ("BET-Zeile"."Direct Unit Cost" * "BET-Zeile"."Outstanding Quantity")
                ELSE
                  ek_gesamt_supf„hig := ek_gesamt_supf„hig + ("BET-Zeile"."Direct Unit Cost" * "BET-Zeile"."Outstanding Quantity");
                Berichtstabelle.RESET;
                Berichtstabelle.SETFILTER(Tabelle,'%1|%2','EINKAUF1','EINKAUF2');
                Berichtstabelle.SETFILTER("Belegnr.",'%1',"BET-Zeile"."Document No.");
                Berichtstabelle.SETFILTER("Feld 2",'%1',"BET-Zeile"."No.");
                IF NOT Berichtstabelle.FINDFIRST THEN BEGIN
                  Berichtstabelle.INIT;
                  IF Item.Serviceklassifizierung <> 'SYSTEM FLAT' THEN
                    Berichtstabelle.Tabelle := 'EINKAUF2'
                  ELSE
                    Berichtstabelle.Tabelle := 'EINKAUF1';
                  Berichtstabelle.Index := "BET-Zeile"."Document No.";
                  Berichtstabelle."Belegnr." := "BET-Zeile"."Document No.";
                  Berichtstabelle."Zeilennr." := "BET-Zeile"."Line No.";
                  Berichtstabelle.Datum  := "BET-Kopf"."Order Date";
                  Berichtstabelle."Feld 2" := "BET-Zeile"."No.";
                  Berichtstabelle."Feld 3" := Item."No. 2";
                  Berichtstabelle."Feld 4" := "BET-Zeile"."Outstanding Quantity";
                  Berichtstabelle."Feld 5" := "BET-Zeile"."Direct Unit Cost";
                  Berichtstabelle."Feld 20" := ("BET-Zeile"."Direct Unit Cost" * "BET-Zeile"."Outstanding Quantity");
                  Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                  Berichtstabelle.User := USERID;
                  Berichtstabelle.INSERT;
                END ELSE BEGIN
                  Berichtstabelle."Feld 4" :=  Berichtstabelle."Feld 4" +"BET-Zeile"."Outstanding Quantity";
                  Berichtstabelle."Feld 20" := Berichtstabelle."Feld 20" +
                                                    ("BET-Zeile"."Direct Unit Cost" * "BET-Zeile"."Outstanding Quantity");
                  Berichtstabelle.MODIFY;
                END;
              END;
            UNTIL "BET-Zeile".NEXT = 0;
          END;
      UNTIL "BET-Kopf".NEXT = 0;
      ////Gebuchte Einkaufslieferscheine
      "EK-Liefkopf".RESET;
      IF (Startdatum<>0D) AND (Enddatum=0D) THEN
        "EK-Liefkopf".SETFILTER("Order Date",'>=%1',Startdatum);
      IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
        "EK-Liefkopf".SETFILTER("Order Date",'>=%1&<=%2',Startdatum,Enddatum);
      IF (Startdatum=0D) AND (Enddatum<>0D) THEN
        "EK-Liefkopf".SETFILTER("Order Date",'<=%1',Enddatum);
      IF "EK-Liefkopf".FINDFIRST THEN
        REPEAT
          "EK-Liefzeile".RESET;
          "EK-Liefzeile".SETFILTER("Document No.",'%1',"EK-Liefkopf"."No.");
          "EK-Liefzeile".SETFILTER("Location Code",'%1','ZENT');
          "EK-Liefzeile".SETFILTER("Manufacturer Code",'%1','59');
          "EK-Liefzeile".SETFILTER(Quantity,'>%1',0);
          IF "EK-Liefzeile".FINDFIRST THEN BEGIN
            REPEAT
              Item.GET("EK-Liefzeile"."No.");
              IF Item."Software Upgrade Protection" = FALSE THEN BEGIN
                Berichtstabelle.RESET;
                Berichtstabelle.SETFILTER(Tabelle,'%1','HEADER2');
                IF NOT Berichtstabelle.FINDFIRST THEN BEGIN
                  Berichtstabelle.INIT;
                  Berichtstabelle.Tabelle := 'HEADER2';
                  Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                  Berichtstabelle.User := USERID;
                  Berichtstabelle.INSERT;
                END;
                IF Item.Serviceklassifizierung <> 'SYSTEM FLAT' THEN
                  ek_gesamt_champf„hig := ek_gesamt_champf„hig + ("EK-Liefzeile"."Direct Unit Cost" * "EK-Liefzeile".Quantity)
                ELSE
                  ek_gesamt_supf„hig := ek_gesamt_supf„hig + ("EK-Liefzeile"."Direct Unit Cost" * "EK-Liefzeile".Quantity);
                Berichtstabelle.RESET;
                Berichtstabelle.SETFILTER(Tabelle,'%1|%2','EINKAUF1','EINKAUF2');
                Berichtstabelle.SETFILTER("Belegnr.",'%1',"EK-Liefzeile"."Order No.");
                Berichtstabelle.SETFILTER("Feld 2",'%1',"EK-Liefzeile"."No.");
                IF NOT Berichtstabelle.FINDFIRST THEN BEGIN
                  Berichtstabelle.INIT;
                  IF Item.Serviceklassifizierung <> 'SYSTEM FLAT' THEN
                    Berichtstabelle.Tabelle := 'EINKAUF2'
                  ELSE
                    Berichtstabelle.Tabelle := 'EINKAUF1';
                  Berichtstabelle.Index := "EK-Liefzeile"."Document No.";
                  Berichtstabelle."Belegnr." := "EK-Liefzeile"."Order No.";
                  Berichtstabelle."Zeilennr." := "EK-Liefzeile"."Order Line No.";
                  Berichtstabelle.Datum  := "EK-Liefkopf"."Order Date";
                  Berichtstabelle."Feld 2" := Item."No.";
                  Berichtstabelle."Feld 3" := Item."No. 2";
                  Berichtstabelle."Feld 4" := "EK-Liefzeile".Quantity;
                  Berichtstabelle."Feld 5" := "EK-Liefzeile"."Direct Unit Cost";
                  Berichtstabelle."Feld 6" := "EK-Liefzeile"."Document No.";
                  Berichtstabelle."Feld 20" := ("EK-Liefzeile"."Direct Unit Cost" * "EK-Liefzeile".Quantity);
                  Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                  Berichtstabelle.User := USERID;
                  Berichtstabelle.INSERT;
                END ELSE BEGIN
                  Berichtstabelle."Feld 4" := Berichtstabelle."Feld 4" + "EK-Liefzeile".Quantity;
                  Berichtstabelle."Feld 20" := Berichtstabelle."Feld 20" +
                  ("EK-Liefzeile"."Direct Unit Cost" * "EK-Liefzeile".Quantity);
                  Berichtstabelle.MODIFY;
                END;
              END;
            UNTIL "EK-Liefzeile".NEXT = 0;
          END;
      UNTIL "EK-Liefkopf".NEXT = 0;
      //*******************************************************************************************************
      // Verkauf, gleicht mit dem Einkauf ab
      //*******************************************************************************************************
      vk_gesamt_champf„hig := 0;
      vk_gesamt_supf„hig := 0;
      "RE-Kopf".RESET;
      "RE-Kopf".SETCURRENTKEY("Sell-to Customer No.","Order Date");
      //"RE-Kopf".SETFILTER("Sell-to Customer No.",'%1','100056');
      IF (Startdatum<>0D) AND (Enddatum=0D) THEN
        "RE-Kopf".SETFILTER("Posting Date",'>=%1',Startdatum);
      IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
        "RE-Kopf".SETFILTER("Posting Date",'>=%1&<=%2',Startdatum,Enddatum);
      IF (Startdatum=0D) AND (Enddatum<>0D) THEN
        "RE-Kopf".SETFILTER("Posting Date",'<=%1',Enddatum);
      "RE-Kopf".SETFILTER("Betreuer Innendienst",betreuer);
      "RE-Kopf".SETFILTER("Salesperson Code",verk„ufer);
      "RE-Kopf".SETFILTER(Teams,teams);
      "RE-Kopf".SETFILTER("Territory Code",gebietscode);
      IF "RE-Kopf".FINDFIRST THEN
        REPEAT
          "RE-Zeile".RESET;
          "RE-Zeile".SETFILTER("Document No.",'%1',"RE-Kopf"."No.");
          "RE-Zeile".SETFILTER("Location Code",'%1|%2','ZENT','KONSI');
          "RE-Zeile".SETFILTER("Manufacturer Code",'%1','59');
          "RE-Zeile".SETFILTER(Type,'%1',"RE-Zeile".Type::Item);
          "RE-Zeile".SETFILTER(Quantity,'>%1',0);
          IF "RE-Zeile".FINDFIRST THEN
            REPEAT
              Item.GET("RE-Zeile"."No.");
              IF Item."Software Upgrade Protection" = FALSE THEN BEGIN
                IF Item.Serviceklassifizierung <> 'SYSTEM FLAT' THEN BEGIN
                  //Untersucht die Seriennr., ob diese auch mit Champs verbunden sind
                  Wertpostenverb.SETCURRENTKEY("Source RowId");
                  Wertpostenverb.SETRANGE("Source RowId",STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',
                                            DATABASE::"Sales Invoice Line",0,"RE-Zeile"."Document No.",'',0,"RE-Zeile"."Line No."));
                  IF Wertpostenverb.FINDFIRST THEN BEGIN
                    REPEAT
                      service_gebucht := 0;
                      Wertposten.GET(Wertpostenverb."Value Entry No.");
                      Artikelposten.GET(Wertposten."Item Ledger Entry No.");
                      ArtikelAusglPosten.RESET;
                      ArtikelAusglPosten.SETCURRENTKEY("Outbound Item Entry No.","Item Ledger Entry No.","Cost Application");
                      ArtikelAusglPosten.SETRANGE("Outbound Item Entry No.",Artikelposten."Entry No.");
                      ArtikelAusglPosten.SETRANGE("Item Ledger Entry No.",Artikelposten."Entry No.");
                      ArtikelAusglPosten.SETRANGE("Cost Application",TRUE);
                      IF ArtikelAusglPosten.FINDFIRST THEN BEGIN
                        EK_Artikelposten.RESET;
                        EK_Artikelposten.SETFILTER("Entry No.",'%1',ArtikelAusglPosten."Inbound Item Entry No.");
                        //EK_Artikelposten.GET(ArtikelAusglPosten."Inbound Item Entry No.");
                        IF (Startdatum<>0D) AND (Enddatum=0D) THEN
                          EK_Artikelposten.SETFILTER("Posting Date",'>=%1',Startdatum);
                        IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
                          EK_Artikelposten.SETFILTER("Posting Date",'>=%1&<=%2',Startdatum,Enddatum);
                        IF (Startdatum=0D) AND (Enddatum<>0D) THEN
                          EK_Artikelposten.SETFILTER("Posting Date",'<=%1',Enddatum);
                        IF (EK_Artikelposten.FINDFIRST)
                        AND (EK_Artikelposten."Entry Type" <> EK_Artikelposten."Entry Type" :: Transfer) THEN BEGIN
                        //AND (EK_Artikelposten."Posting Date" >= Startdatum) THEN
                          Berichtstabelle.INIT;
                          Berichtstabelle.Tabelle := 'ARTIKELPOSTEN';
                          Berichtstabelle.Index := FORMAT(EK_Artikelposten."Entry No.");
                          Berichtstabelle."Belegnr." := FORMAT(ArtikelAusglPosten."Entry No.");
                          Berichtstabelle."Zeilennr." := EK_Artikelposten."Document Line No.";
                          Berichtstabelle.Datum := EK_Artikelposten."Posting Date";
                          Berichtstabelle."Feld 2" := EK_Artikelposten."Item No.";
                          Berichtstabelle."Feld 6" := FORMAT(Artikelposten."Entry No.");
                          Berichtstabelle."Feld 7" := Artikelposten."Document No.";
                          Berichtstabelle."Feld 8" := Artikelposten."Serial No.";
                          Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                          Berichtstabelle.User := USERID;
                          Berichtstabelle.INSERT;
                          vk_gesamt_champf„hig := vk_gesamt_champf„hig + ("RE-Zeile"."VK-Preis (MW)" *
                          ((Artikelposten.Quantity) * (-1)));
                          //Nur ein Datensatz pro Debitor
                          Berichtstabelle.RESET;
                          Berichtstabelle.SETFILTER(Tabelle,'%1','DEBITOR_D');
                          Berichtstabelle.SETFILTER(Index,'%1',"RE-Zeile"."Sell-to Customer No.");
                          IF NOT Berichtstabelle.FINDFIRST THEN BEGIN
                            Berichtstabelle.INIT;
                            Berichtstabelle.Tabelle := 'DEBITOR_D';
                            Berichtstabelle.Index := "RE-Zeile"."Sell-to Customer No.";
                            Berichtstabelle."Belegnr." := "RE-Zeile"."Sell-to Customer No.";
                            Berichtstabelle."Zeilennr." := 0;
                            Berichtstabelle."Feld 3" := "RE-Zeile"."Artikelnr. 2";
                            Berichtstabelle."Feld 6" := "RE-Kopf"."Betreuer Innendienst";
                            Berichtstabelle."Feld 7" := "RE-Kopf"."Salesperson Code";
                            Berichtstabelle."Feld 9" := "RE-Kopf"."Territory Code";
                            Berichtstabelle."Feld 10" := "RE-Kopf"."Sell-to Customer Name";
                            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                            Berichtstabelle.User := USERID;
                            Berichtstabelle.INSERT;
                            END;
                          Champs.RESET;
                          Champs.SETFILTER(Art,'%1',Champs.Art :: Service);
                          Champs.SETFILTER("Urspr. Lieferscheinnr.",'%1',Artikelposten."Document No.");
                          Champs.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',Artikelposten."Document Line No.");
                          Champs.SETFILTER("Artikelnr.",'%1',Artikelposten."Item No.");
                          Champs.SETFILTER("Seriennr.",'%1',Artikelposten."Serial No.");
                          Champs.SETFILTER(Inaktiv,'%1',FALSE);
                          IF Champs.FINDFIRST THEN
                            service_gebucht := service_gebucht + Champs.Menge;
                          Berichtstabelle.RESET;
                          Berichtstabelle.SETFILTER(Tabelle,'%1','VERKAUF2');
                          Berichtstabelle.SETFILTER("Belegnr.",'%1',Artikelposten."Document No.");
                          IF NOT Berichtstabelle.FINDFIRST THEN BEGIN
                            Berichtstabelle.INIT;
                            Berichtstabelle.Tabelle := 'VERKAUF2';
                            Berichtstabelle.Index := Artikelposten."Document No.";
                            Berichtstabelle."Belegnr." := Artikelposten."Document No.";
                            Berichtstabelle."Zeilennr." := Artikelposten."Document Line No.";
                            Berichtstabelle.Datum  := Artikelposten."Posting Date";
                            Berichtstabelle."Feld 2" := "RE-Zeile"."Sell-to Customer No.";
                            IF service_gebucht <> 0 THEN
                              Berichtstabelle."Feld 17" := TRUE;
                            Berichtstabelle."Feld 20" := Wertpostenverb."Value Entry No.";
                            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                            Berichtstabelle.User := USERID;
                            Berichtstabelle.INSERT;
                          END;
                          //Artikelnr. nur einmal pro Lieferscheinnr., wird fr Section Verkauf Body (2) ben”tigt
                          Berichtstabelle.RESET;
                          Berichtstabelle.SETFILTER(Tabelle,'%1','VERKAUF3');
                          Berichtstabelle.SETFILTER(Index,'%1',Artikelposten."Item No.");
                          Berichtstabelle.SETFILTER("Belegnr.",'%1',Artikelposten."Document No.");
                          Berichtstabelle.SETFILTER("Zeilennr.",'%1',Artikelposten."Document Line No.");
                          Berichtstabelle.SETFILTER("Feld 2",'%1',Artikelposten."Source No.");
                          IF NOT Berichtstabelle.FINDFIRST THEN BEGIN
                            Berichtstabelle.INIT;
                            Berichtstabelle.Tabelle := 'VERKAUF3';
                            Berichtstabelle.Index := Artikelposten."Item No.";
                            Berichtstabelle."Belegnr." := Artikelposten."Document No.";
                            Berichtstabelle."Zeilennr." := Artikelposten."Document Line No.";
                            Berichtstabelle.Datum  := Artikelposten."Posting Date";
                            Berichtstabelle."Feld 2" := "RE-Zeile"."Sell-to Customer No.";
                            Berichtstabelle."Feld 3" := "RE-Zeile"."Artikelnr. 2";
                            Berichtstabelle."Feld 4" := ((Artikelposten.Quantity) * (-1));
                            Berichtstabelle."Feld 5" := ((Artikelposten.Quantity) * (-1)) * ("RE-Zeile"."VK-Preis (MW)");
                            IF service_gebucht <> 0 THEN
                              Berichtstabelle."Feld 17" := TRUE;
                            Berichtstabelle."Feld 20" := Wertpostenverb."Value Entry No.";
                            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                            Berichtstabelle.User := USERID;
                            Berichtstabelle.INSERT;
                          END ELSE BEGIN
                            Berichtstabelle."Feld 4" := Berichtstabelle."Feld 4" +
                            ((Artikelposten.Quantity) * (-1));
                            IF service_gebucht <> 0 THEN
                              Berichtstabelle."Feld 17" := TRUE;
                            Berichtstabelle.MODIFY;
                          END;
                          //Nur ein Datensatz pro Artikelnr., ansonsten wird dieser nur aktualisiert
                          Berichtstabelle.RESET;
                          Berichtstabelle.SETFILTER(Tabelle,'%1','VERKAUF1');
                          Berichtstabelle.SETFILTER(Index,'%1',Artikelposten."Item No.");
                          Berichtstabelle.SETFILTER("Feld 2",'%1',Artikelposten."Source No.");
                          IF NOT Berichtstabelle.FINDFIRST THEN BEGIN
                            Berichtstabelle.INIT;
                            Berichtstabelle.Tabelle := 'VERKAUF1';
                            Berichtstabelle.Index := Artikelposten."Item No.";
                            Berichtstabelle."Belegnr." := Artikelposten."Document No.";
                            Berichtstabelle."Zeilennr." := Artikelposten."Document Line No.";
                            Berichtstabelle.Datum  := "RE-Kopf"."Posting Date";
                            Berichtstabelle."Feld 2" := Artikelposten."Source No.";
                            Berichtstabelle."Feld 3" := "RE-Zeile"."Artikelnr. 2";
                            Berichtstabelle."Feld 4" := (Artikelposten.Quantity) * (-1);
                            Berichtstabelle."Feld 5" := ((Artikelposten.Quantity) * (-1)) * ("RE-Zeile"."VK-Preis (MW)");
                            artikel_zunull := 0;
                            IF "RE-Zeile"."VK-Preis (MW)" = 0 THEN
                              artikel_zunull := ((Artikelposten.Quantity) * (-1)) * ("RE-Zeile".Quantity);
                            Berichtstabelle."Feld 10" := FORMAT(artikel_zunull);
                            Berichtstabelle."Feld 20" := service_gebucht;
                            Berichtstabelle."Feld 21" := ((Artikelposten.Quantity) * (-1)) * ("RE-Zeile"."VK-Preis (MW)");
                            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                            Berichtstabelle.User := USERID;
                            Berichtstabelle.INSERT;
                          END ELSE BEGIN
                            Berichtstabelle."Feld 4" := Berichtstabelle."Feld 4" +
                                                              ((Artikelposten.Quantity) * (-1));
                            Berichtstabelle."Feld 5" := (Berichtstabelle."Feld 5" +
                            (("RE-Zeile"."VK-Preis (MW)") * (Artikelposten.Quantity) * (-1))) / 2;
                            IF "RE-Zeile"."VK-Preis (MW)" = 0 THEN BEGIN
                              EVALUATE(artikel_zunull,Berichtstabelle."Feld 10");
                              Berichtstabelle."Feld 10" := FORMAT(artikel_zunull + ((Artikelposten.Quantity) * (-1)));
                            END;
                            Berichtstabelle."Feld 20" := Berichtstabelle."Feld 20" + service_gebucht;
                            Berichtstabelle."Feld 21" := Berichtstabelle."Feld 21" +
                            (((Artikelposten.Quantity) * (-1)) * ("RE-Zeile"."VK-Preis (MW)"));
                            Berichtstabelle.MODIFY;
                          END;
                        END ELSE BEGIN
                          Berichtstabelle.INIT;
                          Berichtstabelle.Tabelle := 'POSTEN_WEGFALL';
                          Berichtstabelle.Index := FORMAT(EK_Artikelposten."Entry No.");
                          Berichtstabelle."Belegnr." := FORMAT(ArtikelAusglPosten."Entry No.");
                          Berichtstabelle."Zeilennr." := EK_Artikelposten."Document Line No.";
                          Berichtstabelle.Datum := EK_Artikelposten."Posting Date";
                          Berichtstabelle."Feld 2" := EK_Artikelposten."Item No.";
                          Berichtstabelle."Feld 6" := FORMAT(Artikelposten."Entry No.");
                          Berichtstabelle."Feld 7" := Artikelposten."Document No.";
                          Berichtstabelle."Feld 8" := Artikelposten."Serial No.";
                          Berichtstabelle."Feld 9" := Artikelposten."Source No.";
                          Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                          Berichtstabelle.User := USERID;
                          Berichtstabelle.INSERT;
                        END;
                      END;
                    UNTIL Wertpostenverb.NEXT = 0;
                  END;
                END;
              END;
            UNTIL "RE-Zeile".NEXT = 0;
        UNTIL "RE-Kopf".NEXT = 0;
      //*******************************************************************************************************
      // Zusammenfassung
      //*******************************************************************************************************
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'CopyItem': CASE SectionId OF
          'Body2': OnPreSectionCopyItem_Body2(Berichtstabelle_Artikel);
          'Body3': OnPreSectionCopyItem_Body3(Berichtstabelle_Artikel);
        END;
        'CopyCustomer2': CASE SectionId OF
          'Header12': OnPreSectionCopyCustomer2_Header12(Berichtstabelle_Debitor);
        END;
        'CopySell2': CASE SectionId OF
          'Body19': OnPreSectionCopySell2_Body19(Berichtstabelle_Verkauf2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // Do not change (Autogenerated by Reports ForNAV) - Instead change the Create Totals, Total Fields or Group Total Fields properties on the Data item in the ForNAV designer
      CASE DataItemId OF
        'CopyPurchase1': WITH CopyPurchase1 DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,einkauf_gesamt_menge);
              END;
           'Restore': BEGIN
                 einkauf_gesamt_menge := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
              END;
        END;  'CopyPurchase2': WITH CopyPurchase2 DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,einkauf_gesamt_menge);
              END;
           'Restore': BEGIN
                 einkauf_gesamt_menge := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
              END;
        END;  'CopySell1': WITH CopySell1 DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Verkauf_VK_Menge);
                ReportForNav.AddTotal(DataItemId,1,Verkauf_CHAMP_Menge);
                ReportForNav.AddTotal(DataItemId,2,Verkauf_betrag_geraete);
              END;
           'Restore': BEGIN
                 Verkauf_VK_Menge := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 Verkauf_CHAMP_Menge := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 Verkauf_betrag_geraete := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      #############################################
      18.01.18 ST - Umstellung auf Berichtstabelle Temporary YES
      Es kann beim Neu Generieren des Layouts (Run > Open Designer) zu Probleme beim Speichern kommen, diese dann einfach ignorieren und dass die
      ReportForNav::OnPreSection Aufrufe durch die jeweiligen DataItems ausgetauscht werden, das fhrt dann zu Problemen beim Compilieren
      Workaround: Die šbergabe Parameter mssen auf die jeweiligen Berichtstabellen Variablen umgestellt werden z.B. 'Body2': OnPreSectionCopyItem_Body2(Berichtstabelle_Artikel);
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>9e13e219-7baa-49d2-a498-24073d9e7951</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>9e9850d4-6a8d-4ce3-bd0e-623a8db7535e</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Teams">
          <DataField>Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Teams</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="FORMAT_ROUND_Feld4_umsatz_acs_champfahig_100_000_Pct">
          <DataField>FORMAT_ROUND_Feld4_umsatz_acs_champfahig_100_000_Pct</DataField>
        </Field>
        <Field Name="W„hrung">
          <DataField>W„hrung</DataField>
        </Field>
        <Field Name="Feld4_Artikel">
          <DataField>Feld4_Artikel</DataField>
        </Field>
        <Field Name="Feld4_ArtikelFormat">
          <DataField>Feld4_ArtikelFormat</DataField>
        </Field>
        <Field Name="Feld3_Artikel">
          <DataField>Feld3_Artikel</DataField>
        </Field>
        <Field Name="FORMAT_ROUND_Feld4_umsatz_acs_supfahig_100_000_Pct">
          <DataField>FORMAT_ROUND_Feld4_umsatz_acs_supfahig_100_000_Pct</DataField>
        </Field>
        <Field Name="umsatz_acs_supfahig">
          <DataField>umsatz_acs_supfahig</DataField>
        </Field>
        <Field Name="umsatz_acs_supfahigFormat">
          <DataField>umsatz_acs_supfahigFormat</DataField>
        </Field>
        <Field Name="umsatz_acs_champfahig">
          <DataField>umsatz_acs_champfahig</DataField>
        </Field>
        <Field Name="umsatz_acs_champfahigFormat">
          <DataField>umsatz_acs_champfahigFormat</DataField>
        </Field>
        <Field Name="FORMAT_ROUND_umsatz_sup_umsatz_acs_supfahig_100_000_Pct">
          <DataField>FORMAT_ROUND_umsatz_sup_umsatz_acs_supfahig_100_000_Pct</DataField>
        </Field>
        <Field Name="umsatz_sup">
          <DataField>umsatz_sup</DataField>
        </Field>
        <Field Name="umsatz_supFormat">
          <DataField>umsatz_supFormat</DataField>
        </Field>
        <Field Name="FORMAT_ROUND_umsatz_champ_umsatz_acs_champfahig_100_000_Pct">
          <DataField>FORMAT_ROUND_umsatz_champ_umsatz_acs_champfahig_100_000_Pct</DataField>
        </Field>
        <Field Name="umsatz_acs_champfahig_umsatz_acs_supfahig">
          <DataField>umsatz_acs_champfahig_umsatz_acs_supfahig</DataField>
        </Field>
        <Field Name="umsatz_acs_champfahig_umsatz_acs_supfahigFormat">
          <DataField>umsatz_acs_champfahig_umsatz_acs_supfahigFormat</DataField>
        </Field>
        <Field Name="umsatz_champ">
          <DataField>umsatz_champ</DataField>
        </Field>
        <Field Name="umsatz_champFormat">
          <DataField>umsatz_champFormat</DataField>
        </Field>
        <Field Name="Feld4_Debitor">
          <DataField>Feld4_Debitor</DataField>
        </Field>
        <Field Name="Feld4_DebitorFormat">
          <DataField>Feld4_DebitorFormat</DataField>
        </Field>
        <Field Name="Feld7_Debitor">
          <DataField>Feld7_Debitor</DataField>
        </Field>
        <Field Name="Feld6_Debitor">
          <DataField>Feld6_Debitor</DataField>
        </Field>
        <Field Name="Feld10_Debitor">
          <DataField>Feld10_Debitor</DataField>
        </Field>
        <Field Name="Index_Debitor">
          <DataField>Index_Debitor</DataField>
        </Field>
        <Field Name="Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Team2">
          <DataField>Verkaufercode__verkaufer_BetreuerInnendienst__betreuer_Team2</DataField>
        </Field>
        <Field Name="USERID2">
          <DataField>USERID2</DataField>
        </Field>
        <Field Name="TODAY_0_42">
          <DataField>TODAY_0_42</DataField>
        </Field>
        <Field Name="ReportForNavPageNo2">
          <DataField>ReportForNavPageNo2</DataField>
        </Field>
        <Field Name="Feld5_Einkauf1">
          <DataField>Feld5_Einkauf1</DataField>
        </Field>
        <Field Name="Feld5_Einkauf1Format">
          <DataField>Feld5_Einkauf1Format</DataField>
        </Field>
        <Field Name="Feld4_Einkauf1">
          <DataField>Feld4_Einkauf1</DataField>
        </Field>
        <Field Name="Feld4_Einkauf1Format">
          <DataField>Feld4_Einkauf1Format</DataField>
        </Field>
        <Field Name="Feld3_Einkauf1">
          <DataField>Feld3_Einkauf1</DataField>
        </Field>
        <Field Name="Belegnr_Einkauf1">
          <DataField>Belegnr_Einkauf1</DataField>
        </Field>
        <Field Name="Datum_Einkauf1">
          <DataField>Datum_Einkauf1</DataField>
        </Field>
        <Field Name="ek_gesamt_supfahig">
          <DataField>ek_gesamt_supfahig</DataField>
        </Field>
        <Field Name="ek_gesamt_supfahigFormat">
          <DataField>ek_gesamt_supfahigFormat</DataField>
        </Field>
        <Field Name="einkauf1_gesamt_menge">
          <DataField>einkauf1_gesamt_menge</DataField>
        </Field>
        <Field Name="einkauf1_gesamt_mengeFormat">
          <DataField>einkauf1_gesamt_mengeFormat</DataField>
        </Field>
        <Field Name="Feld5_Einkauf2">
          <DataField>Feld5_Einkauf2</DataField>
        </Field>
        <Field Name="Feld5_Einkauf2Format">
          <DataField>Feld5_Einkauf2Format</DataField>
        </Field>
        <Field Name="Feld4_Einkauf2">
          <DataField>Feld4_Einkauf2</DataField>
        </Field>
        <Field Name="Feld4_Einkauf2Format">
          <DataField>Feld4_Einkauf2Format</DataField>
        </Field>
        <Field Name="Feld3_Einkauf2">
          <DataField>Feld3_Einkauf2</DataField>
        </Field>
        <Field Name="Belegnr_Einkauf2">
          <DataField>Belegnr_Einkauf2</DataField>
        </Field>
        <Field Name="Datum_Einkauf2">
          <DataField>Datum_Einkauf2</DataField>
        </Field>
        <Field Name="ek_gesamt_champfahig">
          <DataField>ek_gesamt_champfahig</DataField>
        </Field>
        <Field Name="ek_gesamt_champfahigFormat">
          <DataField>ek_gesamt_champfahigFormat</DataField>
        </Field>
        <Field Name="einkauf2_gesamt_menge">
          <DataField>einkauf2_gesamt_menge</DataField>
        </Field>
        <Field Name="einkauf2_gesamt_mengeFormat">
          <DataField>einkauf2_gesamt_mengeFormat</DataField>
        </Field>
        <Field Name="Feld7_Debitor2">
          <DataField>Feld7_Debitor2</DataField>
        </Field>
        <Field Name="Feld6_Debitor2">
          <DataField>Feld6_Debitor2</DataField>
        </Field>
        <Field Name="Feld10_Debitor2">
          <DataField>Feld10_Debitor2</DataField>
        </Field>
        <Field Name="Index_Debitor2">
          <DataField>Index_Debitor2</DataField>
        </Field>
        <Field Name="totale_VK_Menge">
          <DataField>totale_VK_Menge</DataField>
        </Field>
        <Field Name="totale_VK_MengeFormat">
          <DataField>totale_VK_MengeFormat</DataField>
        </Field>
        <Field Name="totale_EK_Menge">
          <DataField>totale_EK_Menge</DataField>
        </Field>
        <Field Name="totale_EK_MengeFormat">
          <DataField>totale_EK_MengeFormat</DataField>
        </Field>
        <Field Name="totaler_betrag_geraete">
          <DataField>totaler_betrag_geraete</DataField>
        </Field>
        <Field Name="totaler_betrag_geraeteFormat">
          <DataField>totaler_betrag_geraeteFormat</DataField>
        </Field>
        <Field Name="totale_CHAMP_Menge">
          <DataField>totale_CHAMP_Menge</DataField>
        </Field>
        <Field Name="totale_CHAMP_MengeFormat">
          <DataField>totale_CHAMP_MengeFormat</DataField>
        </Field>
        <Field Name="V__Feld10__">
          <DataField>V__Feld10__</DataField>
        </Field>
        <Field Name="AnteilChampVerkauf">
          <DataField>AnteilChampVerkauf</DataField>
        </Field>
        <Field Name="AnteilChampVerkaufFormat">
          <DataField>AnteilChampVerkaufFormat</DataField>
        </Field>
        <Field Name="Feld20_Verkauf1">
          <DataField>Feld20_Verkauf1</DataField>
        </Field>
        <Field Name="Feld20_Verkauf1Format">
          <DataField>Feld20_Verkauf1Format</DataField>
        </Field>
        <Field Name="Feld5_Verkauf1">
          <DataField>Feld5_Verkauf1</DataField>
        </Field>
        <Field Name="Feld5_Verkauf1Format">
          <DataField>Feld5_Verkauf1Format</DataField>
        </Field>
        <Field Name="Feld4_Verkauf1">
          <DataField>Feld4_Verkauf1</DataField>
        </Field>
        <Field Name="Feld4_Verkauf1Format">
          <DataField>Feld4_Verkauf1Format</DataField>
        </Field>
        <Field Name="Feld3_Verkauf1">
          <DataField>Feld3_Verkauf1</DataField>
        </Field>
        <Field Name="Feld21_Verkauf1">
          <DataField>Feld21_Verkauf1</DataField>
        </Field>
        <Field Name="Feld21_Verkauf1Format">
          <DataField>Feld21_Verkauf1Format</DataField>
        </Field>
        <Field Name="Verkauf_VK_Menge">
          <DataField>Verkauf_VK_Menge</DataField>
        </Field>
        <Field Name="Verkauf_VK_MengeFormat">
          <DataField>Verkauf_VK_MengeFormat</DataField>
        </Field>
        <Field Name="Verkauf_CHAMP_Menge">
          <DataField>Verkauf_CHAMP_Menge</DataField>
        </Field>
        <Field Name="Verkauf_CHAMP_MengeFormat">
          <DataField>Verkauf_CHAMP_MengeFormat</DataField>
        </Field>
        <Field Name="Verkauf_betrag_geraete">
          <DataField>Verkauf_betrag_geraete</DataField>
        </Field>
        <Field Name="Verkauf_betrag_geraeteFormat">
          <DataField>Verkauf_betrag_geraeteFormat</DataField>
        </Field>
        <Field Name="posten_fehlen">
          <DataField>posten_fehlen</DataField>
        </Field>
        <Field Name="Artikelnr_Textkette">
          <DataField>Artikelnr_Textkette</DataField>
        </Field>
        <Field Name="Liefermenge_gesamt">
          <DataField>Liefermenge_gesamt</DataField>
        </Field>
        <Field Name="Liefermenge_gesamtFormat">
          <DataField>Liefermenge_gesamtFormat</DataField>
        </Field>
        <Field Name="Feld17_Verkauf2">
          <DataField>Feld17_Verkauf2</DataField>
        </Field>
        <Field Name="Belegnr_Verkauf2">
          <DataField>Belegnr_Verkauf2</DataField>
        </Field>
        <Field Name="totale_VK_Menge_totale_EK_Menge_100">
          <DataField>totale_VK_Menge_totale_EK_Menge_100</DataField>
        </Field>
        <Field Name="totale_CHAMP_Menge_totale_VK_Menge_100">
          <DataField>totale_CHAMP_Menge_totale_VK_Menge_100</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

