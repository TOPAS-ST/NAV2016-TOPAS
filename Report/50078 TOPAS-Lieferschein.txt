OBJECT Report 50078 TOPAS-Lieferschein
{
  OBJECT-PROPERTIES
  {
    Date=05.07.24;
    Time=13:20:58;
    Modified=Yes;
    Version List=Beleg,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;Sales Shipment Header;
               DataItemTable=Table110;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufslieferung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo",Picture,"Event Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  //TOPAS 25.04.12 ST
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  FormatAdr.SalesShptShipTo(LieferAnAdr,"Sales Shipment Header");
                                  FormatAdr.SalesShptBillTo(DebAdr,"Sales Shipment Header");
                                  DebAdrZeigen := "Bill-to Customer No." <>  "Sell-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(DebAdr) DO
                                    IF DebAdr[i] <> LieferAnAdr[i] THEN
                                      DebAdrZeigen := TRUE;
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  lief:= '';
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table291;
               OnAfterGetRecord=BEGIN
                                  spedition:="Shipping Agent";
                                END;

               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table10;
               DataItemLink=Code=FIELD(Shipment Method Code) }

    { 4   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  Verk_debitor := Customer;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF "Sales Shipment Header"."Location Code" = 'MUST' THEN
                                      titel := 'Musterlieferschein'
                                    ELSE
                                      titel := 'Lieferschein';
                                    IF "Sales Shipment Header"."Payment Terms Code" = 'BBL' THEN
                                      lief := 'Lieferung per Nachnahme'
                                  END ELSE BEGIN
                                    IF "Sales Shipment Header"."Location Code" = 'MUST' THEN
                                      titel := 'Sample Delivery Note'
                                    ELSE
                                      titel := 'Delivery Note';
                                    IF "Sales Shipment Header"."Payment Terms Code" = 'BBL' THEN
                                      lief := 'Cash on delivery'
                                  END;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 5   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    tel := "Salesperson/Purchaser"."Phone No.";
                                    fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    tel := "Salesperson/Purchaser".Tel_international;
                                    fax := "Salesperson/Purchaser".Fax_international;
                                    ansp := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 6   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := 1 + ABS(AnzKopien);
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               ReportForNav.PrinterSettings.PaperSource(3);
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  IF Number > 1 THEN
                                    KopieText := 'KOPIE';
                                  ReportForNav.PageNo := 1;
                                  IF (Number > 1) AND (titel = 'Musterlieferschein') THEN ReportForNav.PrinterSettings.PaperSource(2);
                                  IF (("Sales Shipment Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Shipment Header"."Shipment Method Code" = 'ACC-ENG')) THEN
                                    Account := "Shipping Agent".Name + ' / ' + "Sales Shipment Header".Spediteuraccount
                                  ELSE
                                    Account := "Shipping Agent".Name;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  LiefDruckZ„hler.RUN("Sales Shipment Header");
                              END;
                               }

    { 7   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 8   ;3   ;Column  ;Picture_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 9   ;3   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000018;3;Column;EventLogo_Firmendaten;
               SourceExpr=Firmendaten."Event Logo" }

    { 1000000014;3;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000004;3;Column;CompanyAddress     ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000003;3;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 1000000016;3;Column;CompanyEORINr      ;
               SourceExpr=CompanyInfo[16] }

    { 10  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 11  ;3   ;Column  ;tel                 ;
               IncludeCaption=No;
               SourceExpr=tel }

    { 12  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 13  ;3   ;Column  ;ansp                ;
               IncludeCaption=No;
               SourceExpr=ansp }

    { 14  ;3   ;Column  ;fax                 ;
               IncludeCaption=No;
               SourceExpr=fax }

    { 15  ;3   ;Column  ;titel               ;
               IncludeCaption=No;
               SourceExpr=titel }

    { 16  ;3   ;Column  ;No_SalesShipmentHeader;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Header"."No." }

    { 17  ;3   ;Column  ;VATRegistrationNo_Verk_debitor;
               IncludeCaption=No;
               SourceExpr=Verk_debitor."VAT Registration No." }

    { 18  ;3   ;Column  ;Sell_toCustomerNo_SalesShipmentHeader;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Header"."Sell-to Customer No." }

    { 19  ;3   ;Column  ;OurAccountNo_Verk_debitor;
               IncludeCaption=No;
               SourceExpr=Verk_debitor."Our Account No." }

    { 20  ;3   ;Column  ;SalesShipmentHeaderExternalDocumentNo__SalesShipmentHeaderYo;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Header"."External Document No."+' '+"Sales Shipment Header"."Your Reference" }

    { 1000000000;3;Column;SalesShipmentHeaderExternalDocumentNo;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Header"."External Document No." }

    { 21  ;3   ;Column  ;LieferAnAdr8        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[8] }

    { 22  ;3   ;Column  ;LieferAnAdr7        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[7] }

    { 25  ;3   ;Column  ;LieferAnAdr6        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[6] }

    { 26  ;3   ;Column  ;LieferAnAdr5        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[5] }

    { 27  ;3   ;Column  ;LieferAnAdr4        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[4] }

    { 28  ;3   ;Column  ;LieferAnAdr3        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[3] }

    { 29  ;3   ;Column  ;LieferAnAdr2        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[2] }

    { 30  ;3   ;Column  ;LieferAnAdr1        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[1] }

    { 23  ;3   ;Column  ;OrderNo_SalesShipmentHeader;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Header"."Order No." }

    { 24  ;3   ;Column  ;PostingDate_SalesShipmentHeader;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Shipment Header"."Posting Date",0,1) }

    { 31  ;3   ;Column  ;seite               ;
               IncludeCaption=No;
               SourceExpr=seite }

    { 36  ;3   ;DataItem;                    ;
               DataItemTable=Table111;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                                 IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE <> 1031 THEN BEGIN
                                    IF "Sales Shipment Line"."Unit of Measure Code" = 'STšCK' THEN
                                      einheiten_text := 'pcs.'
                                    ELSE
                                      einheiten_text := "Sales Shipment Line"."Unit of Measure Code";
                                  END ELSE BEGIN
                                    einheiten_text := "Sales Shipment Line"."Unit of Measure Code";
                                  END;

                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Shipment Line".Type = "Sales Shipment Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Shipment Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND ("Sales Shipment Line".Quantity > 0)THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Shipment Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 37  ;4   ;Column  ;Description_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr=Description }

    { 38  ;4   ;Column  ;OrderLineNo_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr="Order Line No." }

    { 39  ;4   ;Column  ;Quantity_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr=FORMAT(Quantity) }

    { 40  ;4   ;Column  ;No_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr="No." }

    { 41  ;4   ;Column  ;lead_free_text0     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text0 }

    { 42  ;4   ;Column  ;lead_free_text1     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text1 }

    { 43  ;4   ;Column  ;lead_free_text2     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text2 }

    { 44  ;4   ;Column  ;lead_text           ;
               IncludeCaption=No;
               SourceExpr=lead_text }

    { 45  ;4   ;Column  ;lief                ;
               IncludeCaption=No;
               SourceExpr=lief }

    { 46  ;4   ;Column  ;Account             ;
               IncludeCaption=No;
               SourceExpr=Account }

    { 47  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemLink=No.=FIELD(No.) }

    { 48  ;5   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 49  ;6   ;Column  ;lead_symbol         ;
               IncludeCaption=No;
               SourceExpr=lead_symbol }

    { 50  ;6   ;Column  ;Quantity_SalesShipmentLine2;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Shipment Line".Quantity) }

    { 1000000015;6;Column;BarcodeQty_SalesShipmentLine2;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Shipment Line".Quantity,0,1) }

    { 51  ;6   ;Column  ;Herstellerkurzname_Item;
               IncludeCaption=No;
               SourceExpr=Item.Herstellerkurzname }

    { 52  ;6   ;Column  ;Description_SalesShipmentLine5;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Line".Description }

    { 53  ;6   ;Column  ;Artikelnr2_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Line"."Artikelnr. 2" }

    { 54  ;6   ;Column  ;einheiten_text      ;
               IncludeCaption=No;
               SourceExpr=einheiten_text }

    { 55  ;6   ;Column  ;OrderLineNo_SalesShipmentLine2;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Line"."Order Line No." }

    { 57  ;6   ;Column  ;Description2_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Line"."Description 2" }

    { 58  ;6   ;Column  ;Cross_ReferenceNo_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Line"."Cross-Reference No." }

    { 59  ;6   ;Column  ;TariffNo_Item       ;
               IncludeCaption=No;
               SourceExpr=Item."Tariff No." }

    { 61  ;4   ;DataItem;                    ;
               DataItemTable=Table32;
               DataItemTableView=WHERE(Item Tracking=FILTER(<>None));
               OnPreDataItem=BEGIN
                               posten_durchlauf := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  //TOPAS 21.12.18 ST - verhindert den Andruck von berflssigen und identischen Product Keys fr Software Artikel +
                                  posten_menge := FORMAT("Item Ledger Entry".Quantity * (-1),0,1);
                                  IF (Item.Serviceklassifizierung = 'SOFTWARE') AND ((Item."Item Tracking Code" = 'SN-ODER-PK') OR (Item."Item Tracking Code" = 'PRODUCTKEY')
                                  OR (Item."Item Tracking Code" = 'SERIENNR')) AND (STRPOS(Item."No. 2",'OVOC') = 0) AND ("Sales Shipment Line".Quantity > 1) THEN BEGIN
                                  //AND (STRPOS("Item Ledger Entry"."Serial No.",'VT') <> 0) OR (STRPOS("Item Ledger Entry"."Serial No.",'NODATA') <> 0) THEN BEGIN
                                    posten_menge := '';
                                    IF posten_durchlauf > 0 THEN
                                      CurrReport.BREAK;
                                  END;

                                  posten_durchlauf += 1;
                                  //TOPAS -
                                END;

               DataItemLink=Document No.=FIELD(Document No.),
                            Item No.=FIELD(No.),
                            Document Line No.=FIELD(Line No.) }

    { 62  ;5   ;Column  ;Ursprungsland_ItemLedgerEntry;
               IncludeCaption=No;
               SourceExpr=Ursprungsland }

    { 63  ;5   ;Column  ;LotNo_ItemLedgerEntry;
               IncludeCaption=No;
               SourceExpr="Lot No." }

    { 66  ;5   ;Column  ;ItemLedgerEntryQuantity_1;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=posten_menge }

    { 1000000017;5;Column;BarcodeQty_ItemLedgerEntryQuantity_1;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=posten_menge }

    { 67  ;5   ;Column  ;SerialNo_ItemLedgerEntry;
               IncludeCaption=No;
               SourceExpr="Serial No." }

    { 1000000001;5;Column;ProductKey_ItemLedgerEntry;
               IncludeCaption=No;
               SourceExpr="Product Key" }

    { 1000000002;5;Column;SerialNo2_ItemLedgerEntry;
               IncludeCaption=No;
               SourceExpr="Serial No. 2" }

    { 68  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Shipment Header;
               DataItemLink=No.=FIELD(No.) }

    { 69  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 70  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT DebAdrZeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 71  ;4   ;Column  ;Bill_toCustomerNo_SalesShipmentHeader;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Header"."Bill-to Customer No." }

    { 73  ;4   ;Column  ;DebAdr8             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[8] }

    { 74  ;4   ;Column  ;DebAdr7             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[7] }

    { 75  ;4   ;Column  ;DebAdr6             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[6] }

    { 76  ;4   ;Column  ;DebAdr5             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[5] }

    { 77  ;4   ;Column  ;DebAdr4             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[4] }

    { 78  ;4   ;Column  ;DebAdr3             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[3] }

    { 79  ;4   ;Column  ;DebAdr2             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[2] }

    { 72  ;4   ;Column  ;DebAdr1             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[1] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      vk_zeile@1140003 : Record 37;
      spedition@1140004 : Record 291;
      art1@1140005 : Record 27;
      Verk_debitor@1140006 : Record 18;
      VerkEinkPerson@1140007 : Record 13;
      SalesShipLine@1140045 : Record 111;
      Firmendaten@1140008 : Record 79;
      language@1140002 : Record 8;
      PrinterSelection@1140046 : Record 78;
      leadfree_artikel@1000000008 : Record 27;
      lead_artikel@1000000007 : Record 27;
      LiefDruckZ„hler@1140009 : Codeunit 314;
      FormatAdr@1000000002 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [20] OF Text;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140011 : ARRAY [8] OF Text[50];
      FirmaAdr@1140012 : ARRAY [8] OF Text[50];
      Verk„uferText@1140013 : Text[20];
      ReferenzText@1140014 : Text[30];
      titel@1000000004 : Text[30];
      lief@1000000003 : Text[30];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      DebAdrZeigen@1140019 : Boolean;
      i@1140020 : Integer;
      lead_free_text0@1140022 : Text[80];
      lead_free_text1@1140023 : Text[80];
      leadfree_symbol@1140024 : Text[3];
      lead_text@1140043 : Text[120];
      lead_symbol@1140044 : Text[3];
      lead_free_text2@1140026 : Text[80];
      ansp@1140030 : Text[40];
      tel@1140031 : Text[40];
      fax@1140032 : Text[40];
      seite@1140033 : Text[30];
      einheiten_text@1140034 : Text[30];
      Account@1140041 : Text[90];
      posten_menge@1000000006 : Text;
      posten_durchlauf@1000000005 : Integer;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header1@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //TOPAS 29.06.15 ST - rendert das Firmenlogo fr Batch L„ufe, da das Logo beim normalen Druck vom Briefpapier bezogen wird
        IF PrinterSelection.GET(USERID,50078) THEN BEGIN
          IF (PrinterSelection."Printer Name" = 'PDFCreator')
          OR (PrinterSelection."Printer Name" = 'Bullzip PDF Printer') THEN
            Firmendaten.CALCFIELDS(Picture);
        END;
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS -
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header2@5011(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput(Customer.Barcode_Lieferschein_erw = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body5@5012(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput((((Type = 0) AND ("No." = 'LIEF_DRUCK')) OR ((Type = 0) AND ("No." = 'LIEF_DRU_A'))
        OR ((Type = 0) AND ("No." = 'S-AU-SPARE')) OR ((Type = 0) AND ("No." = 'S-AN-SPARE'))) AND ("No." <> 'AB_DRUCK'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body6@5013(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput((Type = 0) AND ("Sales Shipment Header"."Location Code" = 'MUST'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body7@5014(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(("No." ='BECHTLE') OR ("No." = 'IP_DYNAM') OR ("No." = 'IP DYNAM'));
        SalesShipLine.RESET;
        SalesShipLine.SETFILTER("Document No.",'%1',"Document No.");
        SalesShipLine.SETFILTER("Line No.",'%1',"Sales Shipment Line"."Attached to Line No.");
        SalesShipLine.SETFILTER("No.",'%1|%2|%3','BECHTLE','IP_DYNAM','IP DYNAM');
        IF SalesShipLine.FINDFIRST THEN
          ReportForNav.ShowOutput(TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body8@5015(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer9@5016(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer10@5017(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer11@5018(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer12@5019(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer14@5020(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput("Sales Shipment Line"."Location Code" = 'MUST');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body16@5021(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item) AND ("Sales Shipment Line".Quantity <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body17@5022(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item) AND ("Sales Shipment Line".Quantity <> 0)
        AND (Customer.Barcode_Lieferschein_erw = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body18@5023(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item)
         AND ("Sales Shipment Line"."Description 2" > '')
         AND ("Sales Shipment Line".Quantity <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body19@5024(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line"."Cross-Reference No." <> '') AND ("Sales Shipment Line".Quantity > 0)
        AND (Item."Tariff No." = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body20@5025(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Quantity > 0) AND
        ("Sales Shipment Line"."Cross-Reference No." = '') AND (Item."Tariff No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body21@5026(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item)
         AND ("Sales Shipment Line".Quantity > 0) AND (Item."Tariff No." <> '')
         AND ("Sales Shipment Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body22@5027(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item)
        AND ("Sales Shipment Line"."Cross-Reference No." <> '') AND ("Sales Shipment Line".Quantity <> 0)
        AND (Customer.Barcode_Lieferschein_erw = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body23@5028(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput((Item."C of C" = TRUE) AND ("Sales Shipment Line".Quantity <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body24@5029(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput((Item.Abzugstest = TRUE) AND ("Sales Shipment Line".Quantity <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItemLedgerEntry_Body26@5030(VAR "Item Ledger Entry"@1000000000 : Record 32);
    BEGIN
      WITH "Item Ledger Entry" DO BEGIN
        ReportForNav.ShowOutput(("Item Ledger Entry".Quantity <> 0) AND ("Item Ledger Entry"."Lot No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItemLedgerEntry_Body27@5031(VAR "Item Ledger Entry"@1000000000 : Record 32);
    BEGIN
      WITH "Item Ledger Entry" DO BEGIN
        IF Item.GET("Item Ledger Entry"."Item No.") THEN
          ReportForNav.ShowOutput(("Item Ledger Entry".Quantity <> 0) AND ("Item Ledger Entry"."Serial No." <> '')
          AND ((STRPOS(Item."Item Tracking Code",'SERIEN') <> 0) OR ((Item."Item Tracking Code" = 'SN-ODER-PK') AND ("Item Ledger Entry"."Product Key" = '')))
          AND ("Item Ledger Entry"."Lot No." = ''))
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItemLedgerEntry_Body31@1000000001(VAR "Item Ledger Entry"@1000000000 : Record 32);
    BEGIN
      WITH "Item Ledger Entry" DO BEGIN
        IF Item.GET("Item Ledger Entry"."Item No.") THEN
          ReportForNav.ShowOutput(("Item Ledger Entry".Quantity <> 0) AND ("Item Ledger Entry"."Product Key" <> '')
          AND ((Item."Item Tracking Code" = 'PRODUCTKEY') OR (Item."Item Tracking Code" = 'SERIENNR+P')
          OR ((Item."Item Tracking Code" = 'SN-ODER-PK') AND ((STRPOS("Item Ledger Entry"."Serial No.",'NODATA') <> 0) OR (STRPOS("Item Ledger Entry"."Serial No.",'VT') = 1)))))
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body28@5032(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput("Sales Shipment Header"."Location Code" <> 'MUST');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body29@5033(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Shipment Header"."Bill-to Customer No." <> "Sales Shipment Header"."Sell-to Customer No.";
        ReportForNav.ShowOutput("Sales Shipment Header"."Location Code" <> 'MUST');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body30@5034(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput("Sales Shipment Header"."Location Code" <> 'MUST');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header1': OnPreSectionSeiteSchleife_Header1(SeiteSchleife);
          'Header2': OnPreSectionSeiteSchleife_Header2(SeiteSchleife);
        END;
        'SalesShipmentLine': CASE SectionId OF
          'Body5': OnPreSectionSalesShipmentLine_Body5("Sales Shipment Line");
          'Body6': OnPreSectionSalesShipmentLine_Body6("Sales Shipment Line");
          'Body7': OnPreSectionSalesShipmentLine_Body7("Sales Shipment Line");
          'Body8': OnPreSectionSalesShipmentLine_Body8("Sales Shipment Line");
          'Footer9': OnPreSectionSalesShipmentLine_Footer9("Sales Shipment Line");
          'Footer10': OnPreSectionSalesShipmentLine_Footer10("Sales Shipment Line");
          'Footer11': OnPreSectionSalesShipmentLine_Footer11("Sales Shipment Line");
          'Footer12': OnPreSectionSalesShipmentLine_Footer12("Sales Shipment Line");
          'Footer14': OnPreSectionSalesShipmentLine_Footer14("Sales Shipment Line");
        END;
        'Country_Region': CASE SectionId OF
          'Body16': OnPreSectionCountry_Region_Body16("Country/Region");
          'Body17': OnPreSectionCountry_Region_Body17("Country/Region");
          'Body18': OnPreSectionCountry_Region_Body18("Country/Region");
          'Body19': OnPreSectionCountry_Region_Body19("Country/Region");
          'Body20': OnPreSectionCountry_Region_Body20("Country/Region");
          'Body21': OnPreSectionCountry_Region_Body21("Country/Region");
          'Body22': OnPreSectionCountry_Region_Body22("Country/Region");
          'Body23': OnPreSectionCountry_Region_Body23("Country/Region");
          'Body24': OnPreSectionCountry_Region_Body24("Country/Region");
        END;
        'ItemLedgerEntry': CASE SectionId OF
          'Body26': OnPreSectionItemLedgerEntry_Body26("Item Ledger Entry");
          'Body27': OnPreSectionItemLedgerEntry_Body27("Item Ledger Entry");
          'Body31': OnPreSectionItemLedgerEntry_Body31("Item Ledger Entry");
        END;
        'Total2': CASE SectionId OF
          'Body28': OnPreSectionTotal2_Body28(Total2);
          'Body29': OnPreSectionTotal2_Body29(Total2);
          'Body30': OnPreSectionTotal2_Body30(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  Verkaufsrechnungszeile, Body(5) eingefgt.
           Bezeichnung 2 ausdrucken.
      10.07.2017 Body(5) UB   ((Type = 0) AND ("No." = 'S-AU-SPARE') und  ((Type = 0) AND ("No." = 'S-AN-SPARE') hinzugefgt
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
Hn1MNwUbIcr+7f8B</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="EventLogo_Firmendaten">
          <DataField>EventLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="CompanyEORINr">
          <DataField>CompanyEORINr</DataField>
        </Field>
        <Field Name="E_Mail_Salesperson_Purchaser">
          <DataField>E_Mail_Salesperson_Purchaser</DataField>
        </Field>
        <Field Name="tel">
          <DataField>tel</DataField>
        </Field>
        <Field Name="Salesperson_Purchaserfirstname__Salesperson_PurchaserName">
          <DataField>Salesperson_Purchaserfirstname__Salesperson_PurchaserName</DataField>
        </Field>
        <Field Name="ansp">
          <DataField>ansp</DataField>
        </Field>
        <Field Name="fax">
          <DataField>fax</DataField>
        </Field>
        <Field Name="titel">
          <DataField>titel</DataField>
        </Field>
        <Field Name="No_SalesShipmentHeader">
          <DataField>No_SalesShipmentHeader</DataField>
        </Field>
        <Field Name="VATRegistrationNo_Verk_debitor">
          <DataField>VATRegistrationNo_Verk_debitor</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesShipmentHeader">
          <DataField>Sell_toCustomerNo_SalesShipmentHeader</DataField>
        </Field>
        <Field Name="OurAccountNo_Verk_debitor">
          <DataField>OurAccountNo_Verk_debitor</DataField>
        </Field>
        <Field Name="SalesShipmentHeaderExternalDocumentNo__SalesShipmentHeaderYo">
          <DataField>SalesShipmentHeaderExternalDocumentNo__SalesShipmentHeaderYo</DataField>
        </Field>
        <Field Name="SalesShipmentHeaderExternalDocumentNo">
          <DataField>SalesShipmentHeaderExternalDocumentNo</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="OrderNo_SalesShipmentHeader">
          <DataField>OrderNo_SalesShipmentHeader</DataField>
        </Field>
        <Field Name="PostingDate_SalesShipmentHeader">
          <DataField>PostingDate_SalesShipmentHeader</DataField>
        </Field>
        <Field Name="seite">
          <DataField>seite</DataField>
        </Field>
        <Field Name="Description_SalesShipmentLine">
          <DataField>Description_SalesShipmentLine</DataField>
        </Field>
        <Field Name="OrderLineNo_SalesShipmentLine">
          <DataField>OrderLineNo_SalesShipmentLine</DataField>
        </Field>
        <Field Name="Quantity_SalesShipmentLine">
          <DataField>Quantity_SalesShipmentLine</DataField>
        </Field>
        <Field Name="No_SalesShipmentLine">
          <DataField>No_SalesShipmentLine</DataField>
        </Field>
        <Field Name="lead_free_text0">
          <DataField>lead_free_text0</DataField>
        </Field>
        <Field Name="lead_free_text1">
          <DataField>lead_free_text1</DataField>
        </Field>
        <Field Name="lead_free_text2">
          <DataField>lead_free_text2</DataField>
        </Field>
        <Field Name="lead_text">
          <DataField>lead_text</DataField>
        </Field>
        <Field Name="lief">
          <DataField>lief</DataField>
        </Field>
        <Field Name="Account">
          <DataField>Account</DataField>
        </Field>
        <Field Name="lead_symbol">
          <DataField>lead_symbol</DataField>
        </Field>
        <Field Name="Quantity_SalesShipmentLine2">
          <DataField>Quantity_SalesShipmentLine2</DataField>
        </Field>
        <Field Name="BarcodeQty_SalesShipmentLine2">
          <DataField>BarcodeQty_SalesShipmentLine2</DataField>
        </Field>
        <Field Name="Herstellerkurzname_Item">
          <DataField>Herstellerkurzname_Item</DataField>
        </Field>
        <Field Name="Description_SalesShipmentLine5">
          <DataField>Description_SalesShipmentLine5</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesShipmentLine">
          <DataField>Artikelnr2_SalesShipmentLine</DataField>
        </Field>
        <Field Name="einheiten_text">
          <DataField>einheiten_text</DataField>
        </Field>
        <Field Name="OrderLineNo_SalesShipmentLine2">
          <DataField>OrderLineNo_SalesShipmentLine2</DataField>
        </Field>
        <Field Name="Description2_SalesShipmentLine">
          <DataField>Description2_SalesShipmentLine</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesShipmentLine">
          <DataField>Cross_ReferenceNo_SalesShipmentLine</DataField>
        </Field>
        <Field Name="TariffNo_Item">
          <DataField>TariffNo_Item</DataField>
        </Field>
        <Field Name="Ursprungsland_ItemLedgerEntry">
          <DataField>Ursprungsland_ItemLedgerEntry</DataField>
        </Field>
        <Field Name="LotNo_ItemLedgerEntry">
          <DataField>LotNo_ItemLedgerEntry</DataField>
        </Field>
        <Field Name="ItemLedgerEntryQuantity_1">
          <DataField>ItemLedgerEntryQuantity_1</DataField>
        </Field>
        <Field Name="BarcodeQty_ItemLedgerEntryQuantity_1">
          <DataField>BarcodeQty_ItemLedgerEntryQuantity_1</DataField>
        </Field>
        <Field Name="SerialNo_ItemLedgerEntry">
          <DataField>SerialNo_ItemLedgerEntry</DataField>
        </Field>
        <Field Name="ProductKey_ItemLedgerEntry">
          <DataField>ProductKey_ItemLedgerEntry</DataField>
        </Field>
        <Field Name="SerialNo2_ItemLedgerEntry">
          <DataField>SerialNo2_ItemLedgerEntry</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesShipmentHeader">
          <DataField>Bill_toCustomerNo_SalesShipmentHeader</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

