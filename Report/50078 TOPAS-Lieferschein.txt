OBJECT Report 50078 TOPAS-Lieferschein
{
  OBJECT-PROPERTIES
  {
    Date=02.02.18;
    Time=15:30:28;
    Modified=Yes;
    Version List=Beleg,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav := ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner := ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;Sales Shipment Header;
               DataItemTable=Table110;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufslieferung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  //TOPAS 25.04.12 ST
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  FormatAdr.SalesShptShipTo(LieferAnAdr,"Sales Shipment Header");
                                  FormatAdr.SalesShptBillTo(DebAdr,"Sales Shipment Header");
                                  DebAdrZeigen := "Bill-to Customer No." <>  "Sell-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(DebAdr) DO
                                    IF DebAdr[i] <> LieferAnAdr[i] THEN
                                      DebAdrZeigen := TRUE;
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  lief:= '';
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table291;
               OnAfterGetRecord=BEGIN
                                  spedition:="Shipping Agent";
                                END;

               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table10;
               DataItemLink=Code=FIELD(Shipment Method Code) }

    { 4   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  Verk_debitor := Customer;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF "Sales Shipment Header"."Location Code" = 'MUST' THEN
                                      titel := 'Musterlieferschein'
                                    ELSE
                                      titel := 'Lieferschein';
                                    IF "Sales Shipment Header"."Payment Terms Code" = 'BBL' THEN
                                      lief := 'Lieferung per Nachnahme'
                                  END ELSE BEGIN
                                    IF "Sales Shipment Header"."Location Code" = 'MUST' THEN
                                      titel := 'Sample Delivery Note'
                                    ELSE
                                      titel := 'Delivery Note';
                                    IF "Sales Shipment Header"."Payment Terms Code" = 'BBL' THEN
                                      lief := 'Cash on delivery'
                                  END;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 5   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    tel := "Salesperson/Purchaser"."Phone No.";
                                    fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    tel := "Salesperson/Purchaser".Tel_international;
                                    fax := "Salesperson/Purchaser".Fax_international;
                                    ansp := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 6   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := 1 + ABS(AnzKopien);
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               ReportForNav.PrinterSettings.PaperSource(3);
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  IF Number > 1 THEN
                                    KopieText := 'KOPIE';
                                  ReportForNav.PageNo := 1;
                                  IF (Number > 1) AND (titel = 'Musterlieferschein') THEN ReportForNav.PrinterSettings.PaperSource(2);
                                  IF (("Sales Shipment Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Shipment Header"."Shipment Method Code" = 'ACC-ENG')) THEN
                                    Account := "Shipping Agent".Name + ' / ' + "Sales Shipment Header".Spediteuraccount
                                  ELSE
                                    Account := "Shipping Agent".Name;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  LiefDruckZ„hler.RUN("Sales Shipment Header");
                              END;
                               }

    { 7   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 8   ;3   ;Column  ;Picture_Firmendaten ;
               SourceExpr=Firmendaten.Picture }

    { 9   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000014;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000004;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ', ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000003;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 10  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 11  ;3   ;Column  ;tel                 ;
               SourceExpr=tel }

    { 12  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 13  ;3   ;Column  ;ansp                ;
               SourceExpr=ansp }

    { 14  ;3   ;Column  ;fax                 ;
               SourceExpr=fax }

    { 15  ;3   ;Column  ;titel               ;
               SourceExpr=titel }

    { 16  ;3   ;Column  ;No_SalesShipmentHeader;
               SourceExpr="Sales Shipment Header"."No." }

    { 17  ;3   ;Column  ;VATRegistrationNo_Verk_debitor;
               SourceExpr=Verk_debitor."VAT Registration No." }

    { 18  ;3   ;Column  ;Sell_toCustomerNo_SalesShipmentHeader;
               SourceExpr="Sales Shipment Header"."Sell-to Customer No." }

    { 19  ;3   ;Column  ;OurAccountNo_Verk_debitor;
               SourceExpr=Verk_debitor."Our Account No." }

    { 20  ;3   ;Column  ;SalesShipmentHeaderExternalDocumentNo__SalesShipmentHeaderYo;
               SourceExpr="Sales Shipment Header"."External Document No."+' '+"Sales Shipment Header"."Your Reference" }

    { 1000000000;3;Column;SalesShipmentHeaderExternalDocumentNo;
               SourceExpr="Sales Shipment Header"."External Document No." }

    { 21  ;3   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 22  ;3   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 25  ;3   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 26  ;3   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 27  ;3   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 28  ;3   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 29  ;3   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 30  ;3   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 23  ;3   ;Column  ;OrderNo_SalesShipmentHeader;
               SourceExpr="Sales Shipment Header"."Order No." }

    { 24  ;3   ;Column  ;PostingDate_SalesShipmentHeader;
               SourceExpr="Sales Shipment Header"."Posting Date" }

    { 31  ;3   ;Column  ;seite               ;
               SourceExpr=seite }

    { 36  ;3   ;DataItem;                    ;
               DataItemTable=Table111;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                                 IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE <> 1031 THEN BEGIN
                                    IF "Sales Shipment Line"."Unit of Measure Code" = 'STšCK' THEN
                                      einheiten_text := 'pcs.'
                                    ELSE
                                      einheiten_text := "Sales Shipment Line"."Unit of Measure Code";
                                  END ELSE BEGIN
                                    einheiten_text := "Sales Shipment Line"."Unit of Measure Code";
                                  END;

                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Shipment Line".Type="Sales Shipment Line".Type::Item THEN BEGIN
                                    lead_symbol:='';
                                    IF lead_artikel.GET("Sales Shipment Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND ("Sales Shipment Line".Quantity > 0)THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Shipment Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 37  ;4   ;Column  ;Description_SalesShipmentLine;
               SourceExpr=Description }

    { 38  ;4   ;Column  ;OrderLineNo_SalesShipmentLine;
               SourceExpr="Order Line No." }

    { 39  ;4   ;Column  ;Quantity_SalesShipmentLine;
               SourceExpr=Quantity }

    { 40  ;4   ;Column  ;No_SalesShipmentLine;
               SourceExpr="No." }

    { 41  ;4   ;Column  ;lead_free_text0     ;
               SourceExpr=lead_free_text0 }

    { 42  ;4   ;Column  ;lead_free_text1     ;
               SourceExpr=lead_free_text1 }

    { 43  ;4   ;Column  ;lead_free_text2     ;
               SourceExpr=lead_free_text2 }

    { 44  ;4   ;Column  ;lead_text           ;
               SourceExpr=lead_text }

    { 45  ;4   ;Column  ;lief                ;
               SourceExpr=lief }

    { 46  ;4   ;Column  ;Account             ;
               SourceExpr=Account }

    { 47  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemLink=No.=FIELD(No.) }

    { 48  ;5   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 49  ;6   ;Column  ;lead_symbol         ;
               SourceExpr=lead_symbol }

    { 50  ;6   ;Column  ;Quantity_SalesShipmentLine2;
               SourceExpr="Sales Shipment Line".Quantity }

    { 51  ;6   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Item.Herstellerkurzname }

    { 52  ;6   ;Column  ;Description_SalesShipmentLine5;
               SourceExpr="Sales Shipment Line".Description }

    { 53  ;6   ;Column  ;Artikelnr2_SalesShipmentLine;
               SourceExpr="Sales Shipment Line"."Artikelnr. 2" }

    { 54  ;6   ;Column  ;einheiten_text      ;
               SourceExpr=einheiten_text }

    { 55  ;6   ;Column  ;OrderLineNo_SalesShipmentLine2;
               SourceExpr="Sales Shipment Line"."Order Line No." }

    { 57  ;6   ;Column  ;Description2_SalesShipmentLine;
               SourceExpr="Sales Shipment Line"."Description 2" }

    { 58  ;6   ;Column  ;Cross_ReferenceNo_SalesShipmentLine;
               SourceExpr="Sales Shipment Line"."Cross-Reference No." }

    { 59  ;6   ;Column  ;TariffNo_Item       ;
               SourceExpr=Item."Tariff No." }

    { 61  ;4   ;DataItem;                    ;
               DataItemTable=Table32;
               DataItemTableView=WHERE(Item Tracking=FILTER(<>None));
               DataItemLink=Document No.=FIELD(Document No.),
                            Item No.=FIELD(No.),
                            Document Line No.=FIELD(Line No.) }

    { 62  ;5   ;Column  ;Ursprungsland_ItemLedgerEntry;
               SourceExpr=Ursprungsland }

    { 63  ;5   ;Column  ;LotNo_ItemLedgerEntry;
               SourceExpr="Lot No." }

    { 66  ;5   ;Column  ;ItemLedgerEntryQuantity_1;
               DecimalPlaces=0:0;
               SourceExpr="Item Ledger Entry".Quantity*(-1) }

    { 67  ;5   ;Column  ;SerialNo_ItemLedgerEntry;
               SourceExpr="Serial No." }

    { 1000000001;5;Column;ProductKey_ItemLedgerEntry;
               SourceExpr="Product Key" }

    { 1000000002;5;Column;SerialNo2_ItemLedgerEntry;
               SourceExpr="Serial No. 2" }

    { 68  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Shipment Header;
               DataItemLink=No.=FIELD(No.) }

    { 69  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 70  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT DebAdrZeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 71  ;4   ;Column  ;Bill_toCustomerNo_SalesShipmentHeader;
               SourceExpr="Sales Shipment Header"."Bill-to Customer No." }

    { 73  ;4   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 74  ;4   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 75  ;4   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 76  ;4   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 77  ;4   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 78  ;4   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 79  ;4   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 72  ;4   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      vk_zeile@1140003 : Record 37;
      spedition@1140004 : Record 291;
      art1@1140005 : Record 27;
      Verk_debitor@1140006 : Record 18;
      VerkEinkPerson@1140007 : Record 13;
      SalesShipLine@1140045 : Record 111;
      Firmendaten@1140008 : Record 79;
      language@1140002 : Record 8;
      PrinterSelection@1140046 : Record 78;
      LiefDruckZ„hler@1140009 : Codeunit 314;
      FormatAdr@1000000002 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140011 : ARRAY [8] OF Text[50];
      FirmaAdr@1140012 : ARRAY [8] OF Text[50];
      Verk„uferText@1140013 : Text[20];
      ReferenzText@1140014 : Text[30];
      titel@1000000004 : Text[30];
      lief@1000000003 : Text[30];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      DebAdrZeigen@1140019 : Boolean;
      i@1140020 : Integer;
      lead_free_text0@1140022 : Text[80];
      lead_free_text1@1140023 : Text[80];
      leadfree_symbol@1140024 : Text[3];
      leadfree_artikel@1140025 : Record 27;
      lead_artikel@1140042 : Record 27;
      lead_text@1140043 : Text[120];
      lead_symbol@1140044 : Text[3];
      lead_free_text2@1140026 : Text[80];
      ansp@1140030 : Text[40];
      tel@1140031 : Text[40];
      fax@1140032 : Text[40];
      seite@1140033 : Text[30];
      einheiten_text@1140034 : Text[30];
      Account@1140041 : Text[90];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header1@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //TOPAS 29.06.15 ST - rendert das Firmenlogo fr Batch L„ufe, da das Logo beim normalen Druck vom Briefpapier bezogen wird
        IF PrinterSelection.GET(USERID,50078) THEN BEGIN
          IF (PrinterSelection."Printer Name" = 'PDFCreator')
          OR (PrinterSelection."Printer Name" = 'Bullzip PDF Printer') THEN
            Firmendaten.CALCFIELDS(Picture);
        END;
        //TOPAS Ende
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header2@5011(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput(Customer.Barcode_Lieferschein_erw = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body5@5012(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(((Type = 0) AND ("No." = 'LIEF_DRUCK')) OR ((Type = 0) AND ("No." = 'LIEF_DRU_A'))
        OR ((Type = 0) AND ("No." = 'S-AU-SPARE')) OR ((Type = 0) AND ("No." = 'S-AN-SPARE')));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body6@5013(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput((Type = 0) AND ("Sales Shipment Header"."Location Code" = 'MUST'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body7@5014(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(("No." ='BECHTLE') OR ("No." = 'IP DYNAM'));
        SalesShipLine.RESET;
        SalesShipLine.SETFILTER("Document No.",'%1',"Document No.");
        SalesShipLine.SETFILTER("Line No.",'%1',"Sales Shipment Line"."Attached to Line No.");
        SalesShipLine.SETFILTER("No.",'%1|%2','BECHTLE','IP DYNAM');
        IF SalesShipLine.FINDFIRST THEN
          ReportForNav.ShowOutput(TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body8@5015(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer9@5016(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <>'');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer10@5017(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <>'');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer11@5018(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <>'')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer12@5019(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(lead_text <>'');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer14@5020(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput("Sales Shipment Line"."Location Code" = 'MUST');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body16@5021(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item) AND ("Sales Shipment Line".Quantity<>0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body17@5022(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item) AND ("Sales Shipment Line".Quantity<>0) AND
        (Customer.Barcode_Lieferschein_erw = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body18@5023(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item)
         AND ("Sales Shipment Line"."Description 2">'')
         AND ("Sales Shipment Line".Quantity<>0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body19@5024(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line"."Cross-Reference No."<>'') AND ("Sales Shipment Line".Quantity > 0)
        AND (Item."Tariff No." = '') );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body20@5025(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Quantity > 0) AND
        ("Sales Shipment Line"."Cross-Reference No."='') AND (Item."Tariff No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body21@5026(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type ="Sales Shipment Line".Type::Item)
         AND ("Sales Shipment Line".Quantity > 0) AND (Item."Tariff No." <> '')
          AND ("Sales Shipment Line"."Cross-Reference No."<>''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body22@5027(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item)
        AND ("Sales Shipment Line"."Cross-Reference No." <> '') AND ("Sales Shipment Line".Quantity<>0)
        AND (Customer.Barcode_Lieferschein_erw = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body23@5028(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput((Item."C of C" =TRUE) AND ("Sales Shipment Line".Quantity<>0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body24@5029(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput((Item.Abzugstest =TRUE) AND ("Sales Shipment Line".Quantity<>0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItemLedgerEntry_Body26@5030(VAR "Item Ledger Entry"@1000000000 : Record 32);
    BEGIN
      WITH "Item Ledger Entry" DO BEGIN
        ReportForNav.ShowOutput(("Item Ledger Entry".Quantity <> 0) AND ("Item Ledger Entry"."Lot No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItemLedgerEntry_Body27@5031(VAR "Item Ledger Entry"@1000000000 : Record 32);
    BEGIN
      WITH "Item Ledger Entry" DO BEGIN
        IF Item.GET("Item Ledger Entry"."Item No.") THEN
          ReportForNav.ShowOutput(("Item Ledger Entry".Quantity <> 0) AND ("Item Ledger Entry"."Serial No." <> '')
          AND (STRPOS(Item."Item Tracking Code",'SERIEN') <> 0)  AND ("Item Ledger Entry"."Lot No." = ''))
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItemLedgerEntry_Body31@1000000001(VAR "Item Ledger Entry"@1000000000 : Record 32);
    BEGIN
      WITH "Item Ledger Entry" DO BEGIN
        IF Item.GET("Item Ledger Entry"."Item No.") THEN
          ReportForNav.ShowOutput(("Item Ledger Entry".Quantity <> 0) AND ("Item Ledger Entry"."Product Key" <> '')
          AND ((Item."Item Tracking Code" = 'PRODUCTKEY') OR (Item."Item Tracking Code" = 'SERIENNR+P')))
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body28@5032(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput("Sales Shipment Header"."Location Code" <> 'MUST');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body29@5033(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Shipment Header"."Bill-to Customer No." <> "Sales Shipment Header"."Sell-to Customer No.";
        ReportForNav.ShowOutput("Sales Shipment Header"."Location Code" <> 'MUST');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body30@5034(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput("Sales Shipment Header"."Location Code" <> 'MUST');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header1': OnPreSectionSeiteSchleife_Header1(SeiteSchleife);
          'Header2': OnPreSectionSeiteSchleife_Header2(SeiteSchleife);
        END;
        'SalesShipmentLine': CASE SectionId OF
          'Body5': OnPreSectionSalesShipmentLine_Body5("Sales Shipment Line");
          'Body6': OnPreSectionSalesShipmentLine_Body6("Sales Shipment Line");
          'Body7': OnPreSectionSalesShipmentLine_Body7("Sales Shipment Line");
          'Body8': OnPreSectionSalesShipmentLine_Body8("Sales Shipment Line");
          'Footer9': OnPreSectionSalesShipmentLine_Footer9("Sales Shipment Line");
          'Footer10': OnPreSectionSalesShipmentLine_Footer10("Sales Shipment Line");
          'Footer11': OnPreSectionSalesShipmentLine_Footer11("Sales Shipment Line");
          'Footer12': OnPreSectionSalesShipmentLine_Footer12("Sales Shipment Line");
          'Footer14': OnPreSectionSalesShipmentLine_Footer14("Sales Shipment Line");
        END;
        'Country_Region': CASE SectionId OF
          'Body16': OnPreSectionCountry_Region_Body16("Country/Region");
          'Body17': OnPreSectionCountry_Region_Body17("Country/Region");
          'Body18': OnPreSectionCountry_Region_Body18("Country/Region");
          'Body19': OnPreSectionCountry_Region_Body19("Country/Region");
          'Body20': OnPreSectionCountry_Region_Body20("Country/Region");
          'Body21': OnPreSectionCountry_Region_Body21("Country/Region");
          'Body22': OnPreSectionCountry_Region_Body22("Country/Region");
          'Body23': OnPreSectionCountry_Region_Body23("Country/Region");
          'Body24': OnPreSectionCountry_Region_Body24("Country/Region");
        END;
        'ItemLedgerEntry': CASE SectionId OF
          'Body26': OnPreSectionItemLedgerEntry_Body26("Item Ledger Entry");
          'Body27': OnPreSectionItemLedgerEntry_Body27("Item Ledger Entry");
          'Body31': OnPreSectionItemLedgerEntry_Body31("Item Ledger Entry");
        END;
        'Total2': CASE SectionId OF
          'Body28': OnPreSectionTotal2_Body28(Total2);
          'Body29': OnPreSectionTotal2_Body29(Total2);
          'Body30': OnPreSectionTotal2_Body30(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  Verkaufsrechnungszeile, Body(5) eingefgt.
           Bezeichnung 2 ausdrucken.
      10.07.2017 Body(5) UB   ((Type = 0) AND ("No." = 'S-AU-SPARE') und  ((Type = 0) AND ("No." = 'S-AN-SPARE') hinzugefgt
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>62e1eeb6-751c-47d3-8d25-8f662b967541</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>ff1d238b-81b4-423f-a55f-a3ec962bf762</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="E_Mail_Salesperson_Purchaser">
          <DataField>E_Mail_Salesperson_Purchaser</DataField>
        </Field>
        <Field Name="tel">
          <DataField>tel</DataField>
        </Field>
        <Field Name="Salesperson_Purchaserfirstname__Salesperson_PurchaserName">
          <DataField>Salesperson_Purchaserfirstname__Salesperson_PurchaserName</DataField>
        </Field>
        <Field Name="ansp">
          <DataField>ansp</DataField>
        </Field>
        <Field Name="fax">
          <DataField>fax</DataField>
        </Field>
        <Field Name="titel">
          <DataField>titel</DataField>
        </Field>
        <Field Name="No_SalesShipmentHeader">
          <DataField>No_SalesShipmentHeader</DataField>
        </Field>
        <Field Name="VATRegistrationNo_Verk_debitor">
          <DataField>VATRegistrationNo_Verk_debitor</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesShipmentHeader">
          <DataField>Sell_toCustomerNo_SalesShipmentHeader</DataField>
        </Field>
        <Field Name="OurAccountNo_Verk_debitor">
          <DataField>OurAccountNo_Verk_debitor</DataField>
        </Field>
        <Field Name="SalesShipmentHeaderExternalDocumentNo__SalesShipmentHeaderYo">
          <DataField>SalesShipmentHeaderExternalDocumentNo__SalesShipmentHeaderYo</DataField>
        </Field>
        <Field Name="SalesShipmentHeaderExternalDocumentNo">
          <DataField>SalesShipmentHeaderExternalDocumentNo</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="OrderNo_SalesShipmentHeader">
          <DataField>OrderNo_SalesShipmentHeader</DataField>
        </Field>
        <Field Name="PostingDate_SalesShipmentHeader">
          <DataField>PostingDate_SalesShipmentHeader</DataField>
        </Field>
        <Field Name="seite">
          <DataField>seite</DataField>
        </Field>
        <Field Name="Description_SalesShipmentLine">
          <DataField>Description_SalesShipmentLine</DataField>
        </Field>
        <Field Name="OrderLineNo_SalesShipmentLine">
          <DataField>OrderLineNo_SalesShipmentLine</DataField>
        </Field>
        <Field Name="Quantity_SalesShipmentLine">
          <DataField>Quantity_SalesShipmentLine</DataField>
        </Field>
        <Field Name="Quantity_SalesShipmentLineFormat">
          <DataField>Quantity_SalesShipmentLineFormat</DataField>
        </Field>
        <Field Name="No_SalesShipmentLine">
          <DataField>No_SalesShipmentLine</DataField>
        </Field>
        <Field Name="lead_free_text0">
          <DataField>lead_free_text0</DataField>
        </Field>
        <Field Name="lead_free_text1">
          <DataField>lead_free_text1</DataField>
        </Field>
        <Field Name="lead_free_text2">
          <DataField>lead_free_text2</DataField>
        </Field>
        <Field Name="lead_text">
          <DataField>lead_text</DataField>
        </Field>
        <Field Name="lief">
          <DataField>lief</DataField>
        </Field>
        <Field Name="Account">
          <DataField>Account</DataField>
        </Field>
        <Field Name="lead_symbol">
          <DataField>lead_symbol</DataField>
        </Field>
        <Field Name="Quantity_SalesShipmentLine2">
          <DataField>Quantity_SalesShipmentLine2</DataField>
        </Field>
        <Field Name="Quantity_SalesShipmentLine2Format">
          <DataField>Quantity_SalesShipmentLine2Format</DataField>
        </Field>
        <Field Name="Herstellerkurzname_Item">
          <DataField>Herstellerkurzname_Item</DataField>
        </Field>
        <Field Name="Description_SalesShipmentLine5">
          <DataField>Description_SalesShipmentLine5</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesShipmentLine">
          <DataField>Artikelnr2_SalesShipmentLine</DataField>
        </Field>
        <Field Name="einheiten_text">
          <DataField>einheiten_text</DataField>
        </Field>
        <Field Name="OrderLineNo_SalesShipmentLine2">
          <DataField>OrderLineNo_SalesShipmentLine2</DataField>
        </Field>
        <Field Name="Description2_SalesShipmentLine">
          <DataField>Description2_SalesShipmentLine</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesShipmentLine">
          <DataField>Cross_ReferenceNo_SalesShipmentLine</DataField>
        </Field>
        <Field Name="TariffNo_Item">
          <DataField>TariffNo_Item</DataField>
        </Field>
        <Field Name="Ursprungsland_ItemLedgerEntry">
          <DataField>Ursprungsland_ItemLedgerEntry</DataField>
        </Field>
        <Field Name="LotNo_ItemLedgerEntry">
          <DataField>LotNo_ItemLedgerEntry</DataField>
        </Field>
        <Field Name="ItemLedgerEntryQuantity_1">
          <DataField>ItemLedgerEntryQuantity_1</DataField>
        </Field>
        <Field Name="ItemLedgerEntryQuantity_1Format">
          <DataField>ItemLedgerEntryQuantity_1Format</DataField>
        </Field>
        <Field Name="SerialNo_ItemLedgerEntry">
          <DataField>SerialNo_ItemLedgerEntry</DataField>
        </Field>
        <Field Name="ProductKey_ItemLedgerEntry">
          <DataField>ProductKey_ItemLedgerEntry</DataField>
        </Field>
        <Field Name="SerialNo2_ItemLedgerEntry">
          <DataField>SerialNo2_ItemLedgerEntry</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesShipmentHeader">
          <DataField>Bill_toCustomerNo_SalesShipmentHeader</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

