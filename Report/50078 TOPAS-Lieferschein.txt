OBJECT Report 50078 TOPAS-Lieferschein
{
  OBJECT-PROPERTIES
  {
    Date=16.11.21;
    Time=10:41:27;
    Modified=Yes;
    Version List=Beleg,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;Sales Shipment Header;
               DataItemTable=Table110;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufslieferung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  //TOPAS 25.04.12 ST
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  FormatAdr.SalesShptShipTo(LieferAnAdr,"Sales Shipment Header");
                                  FormatAdr.SalesShptBillTo(DebAdr,"Sales Shipment Header");
                                  DebAdrZeigen := "Bill-to Customer No." <>  "Sell-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(DebAdr) DO
                                    IF DebAdr[i] <> LieferAnAdr[i] THEN
                                      DebAdrZeigen := TRUE;
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  lief:= '';
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table291;
               OnAfterGetRecord=BEGIN
                                  spedition:="Shipping Agent";
                                END;

               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table10;
               DataItemLink=Code=FIELD(Shipment Method Code) }

    { 4   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  Verk_debitor := Customer;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF "Sales Shipment Header"."Location Code" = 'MUST' THEN
                                      titel := 'Musterlieferschein'
                                    ELSE
                                      titel := 'Lieferschein';
                                    IF "Sales Shipment Header"."Payment Terms Code" = 'BBL' THEN
                                      lief := 'Lieferung per Nachnahme'
                                  END ELSE BEGIN
                                    IF "Sales Shipment Header"."Location Code" = 'MUST' THEN
                                      titel := 'Sample Delivery Note'
                                    ELSE
                                      titel := 'Delivery Note';
                                    IF "Sales Shipment Header"."Payment Terms Code" = 'BBL' THEN
                                      lief := 'Cash on delivery'
                                  END;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 5   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    tel := "Salesperson/Purchaser"."Phone No.";
                                    fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    tel := "Salesperson/Purchaser".Tel_international;
                                    fax := "Salesperson/Purchaser".Fax_international;
                                    ansp := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 6   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := 1 + ABS(AnzKopien);
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               ReportForNav.PrinterSettings.PaperSource(3);
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  IF Number > 1 THEN
                                    KopieText := 'KOPIE';
                                  ReportForNav.PageNo := 1;
                                  IF (Number > 1) AND (titel = 'Musterlieferschein') THEN ReportForNav.PrinterSettings.PaperSource(2);
                                  IF (("Sales Shipment Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Shipment Header"."Shipment Method Code" = 'ACC-ENG')) THEN
                                    Account := "Shipping Agent".Name + ' / ' + "Sales Shipment Header".Spediteuraccount
                                  ELSE
                                    Account := "Shipping Agent".Name;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  LiefDruckZ„hler.RUN("Sales Shipment Header");
                              END;
                               }

    { 7   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 8   ;3   ;Column  ;Picture_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 9   ;3   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000014;3;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000004;3;Column;CompanyAddress     ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000003;3;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 10  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 11  ;3   ;Column  ;tel                 ;
               IncludeCaption=No;
               SourceExpr=tel }

    { 12  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 13  ;3   ;Column  ;ansp                ;
               IncludeCaption=No;
               SourceExpr=ansp }

    { 14  ;3   ;Column  ;fax                 ;
               IncludeCaption=No;
               SourceExpr=fax }

    { 15  ;3   ;Column  ;titel               ;
               IncludeCaption=No;
               SourceExpr=titel }

    { 16  ;3   ;Column  ;No_SalesShipmentHeader;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Header"."No." }

    { 17  ;3   ;Column  ;VATRegistrationNo_Verk_debitor;
               IncludeCaption=No;
               SourceExpr=Verk_debitor."VAT Registration No." }

    { 18  ;3   ;Column  ;Sell_toCustomerNo_SalesShipmentHeader;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Header"."Sell-to Customer No." }

    { 19  ;3   ;Column  ;OurAccountNo_Verk_debitor;
               IncludeCaption=No;
               SourceExpr=Verk_debitor."Our Account No." }

    { 20  ;3   ;Column  ;SalesShipmentHeaderExternalDocumentNo__SalesShipmentHeaderYo;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Header"."External Document No."+' '+"Sales Shipment Header"."Your Reference" }

    { 1000000000;3;Column;SalesShipmentHeaderExternalDocumentNo;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Header"."External Document No." }

    { 21  ;3   ;Column  ;LieferAnAdr8        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[8] }

    { 22  ;3   ;Column  ;LieferAnAdr7        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[7] }

    { 25  ;3   ;Column  ;LieferAnAdr6        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[6] }

    { 26  ;3   ;Column  ;LieferAnAdr5        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[5] }

    { 27  ;3   ;Column  ;LieferAnAdr4        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[4] }

    { 28  ;3   ;Column  ;LieferAnAdr3        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[3] }

    { 29  ;3   ;Column  ;LieferAnAdr2        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[2] }

    { 30  ;3   ;Column  ;LieferAnAdr1        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[1] }

    { 23  ;3   ;Column  ;OrderNo_SalesShipmentHeader;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Header"."Order No." }

    { 24  ;3   ;Column  ;PostingDate_SalesShipmentHeader;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Shipment Header"."Posting Date",0,1) }

    { 31  ;3   ;Column  ;seite               ;
               IncludeCaption=No;
               SourceExpr=seite }

    { 36  ;3   ;DataItem;                    ;
               DataItemTable=Table111;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                                 IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE <> 1031 THEN BEGIN
                                    IF "Sales Shipment Line"."Unit of Measure Code" = 'STšCK' THEN
                                      einheiten_text := 'pcs.'
                                    ELSE
                                      einheiten_text := "Sales Shipment Line"."Unit of Measure Code";
                                  END ELSE BEGIN
                                    einheiten_text := "Sales Shipment Line"."Unit of Measure Code";
                                  END;

                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Shipment Line".Type = "Sales Shipment Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Shipment Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND ("Sales Shipment Line".Quantity > 0)THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Shipment Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 37  ;4   ;Column  ;Description_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr=Description }

    { 38  ;4   ;Column  ;OrderLineNo_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr="Order Line No." }

    { 39  ;4   ;Column  ;Quantity_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr=FORMAT(Quantity) }

    { 40  ;4   ;Column  ;No_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr="No." }

    { 41  ;4   ;Column  ;lead_free_text0     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text0 }

    { 42  ;4   ;Column  ;lead_free_text1     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text1 }

    { 43  ;4   ;Column  ;lead_free_text2     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text2 }

    { 44  ;4   ;Column  ;lead_text           ;
               IncludeCaption=No;
               SourceExpr=lead_text }

    { 45  ;4   ;Column  ;lief                ;
               IncludeCaption=No;
               SourceExpr=lief }

    { 46  ;4   ;Column  ;Account             ;
               IncludeCaption=No;
               SourceExpr=Account }

    { 47  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemLink=No.=FIELD(No.) }

    { 48  ;5   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 49  ;6   ;Column  ;lead_symbol         ;
               IncludeCaption=No;
               SourceExpr=lead_symbol }

    { 50  ;6   ;Column  ;Quantity_SalesShipmentLine2;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Shipment Line".Quantity) }

    { 1000000015;6;Column;BarcodeQty_SalesShipmentLine2;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Shipment Line".Quantity,0,1) }

    { 51  ;6   ;Column  ;Herstellerkurzname_Item;
               IncludeCaption=No;
               SourceExpr=Item.Herstellerkurzname }

    { 52  ;6   ;Column  ;Description_SalesShipmentLine5;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Line".Description }

    { 53  ;6   ;Column  ;Artikelnr2_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Line"."Artikelnr. 2" }

    { 54  ;6   ;Column  ;einheiten_text      ;
               IncludeCaption=No;
               SourceExpr=einheiten_text }

    { 55  ;6   ;Column  ;OrderLineNo_SalesShipmentLine2;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Line"."Order Line No." }

    { 57  ;6   ;Column  ;Description2_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Line"."Description 2" }

    { 58  ;6   ;Column  ;Cross_ReferenceNo_SalesShipmentLine;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Line"."Cross-Reference No." }

    { 59  ;6   ;Column  ;TariffNo_Item       ;
               IncludeCaption=No;
               SourceExpr=Item."Tariff No." }

    { 61  ;4   ;DataItem;                    ;
               DataItemTable=Table32;
               DataItemTableView=WHERE(Item Tracking=FILTER(<>None));
               OnPreDataItem=BEGIN
                               posten_durchlauf := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  //TOPAS 21.12.18 ST - verhindert den Andruck von berflssigen und identischen Product Keys fr Software Artikel +
                                  posten_menge := FORMAT("Item Ledger Entry".Quantity * (-1),0,1);
                                  IF (Item.Serviceklassifizierung = 'SOFTWARE') AND ((Item."Item Tracking Code" = 'SN-ODER-PK') OR (Item."Item Tracking Code" = 'PRODUCTKEY')
                                  OR (Item."Item Tracking Code" = 'SERIENNR')) AND (STRPOS(Item."No. 2",'OVOC') = 0) AND ("Sales Shipment Line".Quantity > 1) THEN BEGIN
                                  //AND (STRPOS("Item Ledger Entry"."Serial No.",'VT') <> 0) OR (STRPOS("Item Ledger Entry"."Serial No.",'NODATA') <> 0) THEN BEGIN
                                    posten_menge := '';
                                    IF posten_durchlauf > 0 THEN
                                      CurrReport.BREAK;
                                  END;

                                  posten_durchlauf += 1;
                                  //TOPAS -
                                END;

               DataItemLink=Document No.=FIELD(Document No.),
                            Item No.=FIELD(No.),
                            Document Line No.=FIELD(Line No.) }

    { 62  ;5   ;Column  ;Ursprungsland_ItemLedgerEntry;
               IncludeCaption=No;
               SourceExpr=Ursprungsland }

    { 63  ;5   ;Column  ;LotNo_ItemLedgerEntry;
               IncludeCaption=No;
               SourceExpr="Lot No." }

    { 66  ;5   ;Column  ;ItemLedgerEntryQuantity_1;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=posten_menge }

    { 1000000017;5;Column;BarcodeQty_ItemLedgerEntryQuantity_1;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=posten_menge }

    { 67  ;5   ;Column  ;SerialNo_ItemLedgerEntry;
               IncludeCaption=No;
               SourceExpr="Serial No." }

    { 1000000001;5;Column;ProductKey_ItemLedgerEntry;
               IncludeCaption=No;
               SourceExpr="Product Key" }

    { 1000000002;5;Column;SerialNo2_ItemLedgerEntry;
               IncludeCaption=No;
               SourceExpr="Serial No. 2" }

    { 68  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Shipment Header;
               DataItemLink=No.=FIELD(No.) }

    { 69  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 70  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT DebAdrZeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 71  ;4   ;Column  ;Bill_toCustomerNo_SalesShipmentHeader;
               IncludeCaption=No;
               SourceExpr="Sales Shipment Header"."Bill-to Customer No." }

    { 73  ;4   ;Column  ;DebAdr8             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[8] }

    { 74  ;4   ;Column  ;DebAdr7             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[7] }

    { 75  ;4   ;Column  ;DebAdr6             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[6] }

    { 76  ;4   ;Column  ;DebAdr5             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[5] }

    { 77  ;4   ;Column  ;DebAdr4             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[4] }

    { 78  ;4   ;Column  ;DebAdr3             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[3] }

    { 79  ;4   ;Column  ;DebAdr2             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[2] }

    { 72  ;4   ;Column  ;DebAdr1             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[1] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      vk_zeile@1140003 : Record 37;
      spedition@1140004 : Record 291;
      art1@1140005 : Record 27;
      Verk_debitor@1140006 : Record 18;
      VerkEinkPerson@1140007 : Record 13;
      SalesShipLine@1140045 : Record 111;
      Firmendaten@1140008 : Record 79;
      language@1140002 : Record 8;
      PrinterSelection@1140046 : Record 78;
      LiefDruckZ„hler@1140009 : Codeunit 314;
      FormatAdr@1000000002 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140011 : ARRAY [8] OF Text[50];
      FirmaAdr@1140012 : ARRAY [8] OF Text[50];
      Verk„uferText@1140013 : Text[20];
      ReferenzText@1140014 : Text[30];
      titel@1000000004 : Text[30];
      lief@1000000003 : Text[30];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      DebAdrZeigen@1140019 : Boolean;
      i@1140020 : Integer;
      lead_free_text0@1140022 : Text[80];
      lead_free_text1@1140023 : Text[80];
      leadfree_symbol@1140024 : Text[3];
      leadfree_artikel@1140025 : Record 27;
      lead_artikel@1140042 : Record 27;
      lead_text@1140043 : Text[120];
      lead_symbol@1140044 : Text[3];
      lead_free_text2@1140026 : Text[80];
      ansp@1140030 : Text[40];
      tel@1140031 : Text[40];
      fax@1140032 : Text[40];
      seite@1140033 : Text[30];
      einheiten_text@1140034 : Text[30];
      Account@1140041 : Text[90];
      posten_menge@1000000006 : Text;
      posten_durchlauf@1000000005 : Integer;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header1@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //TOPAS 29.06.15 ST - rendert das Firmenlogo fr Batch L„ufe, da das Logo beim normalen Druck vom Briefpapier bezogen wird
        IF PrinterSelection.GET(USERID,50078) THEN BEGIN
          IF (PrinterSelection."Printer Name" = 'PDFCreator')
          OR (PrinterSelection."Printer Name" = 'Bullzip PDF Printer') THEN
            Firmendaten.CALCFIELDS(Picture);
        END;
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS -
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header2@5011(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput(Customer.Barcode_Lieferschein_erw = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body5@5012(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput((((Type = 0) AND ("No." = 'LIEF_DRUCK')) OR ((Type = 0) AND ("No." = 'LIEF_DRU_A'))
        OR ((Type = 0) AND ("No." = 'S-AU-SPARE')) OR ((Type = 0) AND ("No." = 'S-AN-SPARE'))) AND ("No." <> 'AB_DRUCK'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body6@5013(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput((Type = 0) AND ("Sales Shipment Header"."Location Code" = 'MUST'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body7@5014(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(("No." ='BECHTLE') OR ("No." = 'IP_DYNAM') OR ("No." = 'IP DYNAM'));
        SalesShipLine.RESET;
        SalesShipLine.SETFILTER("Document No.",'%1',"Document No.");
        SalesShipLine.SETFILTER("Line No.",'%1',"Sales Shipment Line"."Attached to Line No.");
        SalesShipLine.SETFILTER("No.",'%1|%2|%3','BECHTLE','IP_DYNAM','IP DYNAM');
        IF SalesShipLine.FINDFIRST THEN
          ReportForNav.ShowOutput(TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body8@5015(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer9@5016(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer10@5017(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer11@5018(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer12@5019(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer14@5020(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput("Sales Shipment Line"."Location Code" = 'MUST');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body16@5021(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item) AND ("Sales Shipment Line".Quantity <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body17@5022(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item) AND ("Sales Shipment Line".Quantity <> 0)
        AND (Customer.Barcode_Lieferschein_erw = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body18@5023(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item)
         AND ("Sales Shipment Line"."Description 2" > '')
         AND ("Sales Shipment Line".Quantity <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body19@5024(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line"."Cross-Reference No." <> '') AND ("Sales Shipment Line".Quantity > 0)
        AND (Item."Tariff No." = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body20@5025(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Quantity > 0) AND
        ("Sales Shipment Line"."Cross-Reference No." = '') AND (Item."Tariff No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body21@5026(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item)
         AND ("Sales Shipment Line".Quantity > 0) AND (Item."Tariff No." <> '')
         AND ("Sales Shipment Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body22@5027(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item)
        AND ("Sales Shipment Line"."Cross-Reference No." <> '') AND ("Sales Shipment Line".Quantity <> 0)
        AND (Customer.Barcode_Lieferschein_erw = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body23@5028(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput((Item."C of C" = TRUE) AND ("Sales Shipment Line".Quantity <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body24@5029(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput((Item.Abzugstest = TRUE) AND ("Sales Shipment Line".Quantity <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItemLedgerEntry_Body26@5030(VAR "Item Ledger Entry"@1000000000 : Record 32);
    BEGIN
      WITH "Item Ledger Entry" DO BEGIN
        ReportForNav.ShowOutput(("Item Ledger Entry".Quantity <> 0) AND ("Item Ledger Entry"."Lot No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItemLedgerEntry_Body27@5031(VAR "Item Ledger Entry"@1000000000 : Record 32);
    BEGIN
      WITH "Item Ledger Entry" DO BEGIN
        IF Item.GET("Item Ledger Entry"."Item No.") THEN
          ReportForNav.ShowOutput(("Item Ledger Entry".Quantity <> 0) AND ("Item Ledger Entry"."Serial No." <> '')
          AND ((STRPOS(Item."Item Tracking Code",'SERIEN') <> 0) OR ((Item."Item Tracking Code" = 'SN-ODER-PK') AND ("Item Ledger Entry"."Product Key" = '')))
          AND ("Item Ledger Entry"."Lot No." = ''))
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItemLedgerEntry_Body31@1000000001(VAR "Item Ledger Entry"@1000000000 : Record 32);
    BEGIN
      WITH "Item Ledger Entry" DO BEGIN
        IF Item.GET("Item Ledger Entry"."Item No.") THEN
          ReportForNav.ShowOutput(("Item Ledger Entry".Quantity <> 0) AND ("Item Ledger Entry"."Product Key" <> '')
          AND ((Item."Item Tracking Code" = 'PRODUCTKEY') OR (Item."Item Tracking Code" = 'SERIENNR+P')
          OR ((Item."Item Tracking Code" = 'SN-ODER-PK') AND ((STRPOS("Item Ledger Entry"."Serial No.",'NODATA') <> 0) OR (STRPOS("Item Ledger Entry"."Serial No.",'VT') = 1)))))
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body28@5032(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput("Sales Shipment Header"."Location Code" <> 'MUST');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body29@5033(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Shipment Header"."Bill-to Customer No." <> "Sales Shipment Header"."Sell-to Customer No.";
        ReportForNav.ShowOutput("Sales Shipment Header"."Location Code" <> 'MUST');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body30@5034(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput("Sales Shipment Header"."Location Code" <> 'MUST');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header1': OnPreSectionSeiteSchleife_Header1(SeiteSchleife);
          'Header2': OnPreSectionSeiteSchleife_Header2(SeiteSchleife);
        END;
        'SalesShipmentLine': CASE SectionId OF
          'Body5': OnPreSectionSalesShipmentLine_Body5("Sales Shipment Line");
          'Body6': OnPreSectionSalesShipmentLine_Body6("Sales Shipment Line");
          'Body7': OnPreSectionSalesShipmentLine_Body7("Sales Shipment Line");
          'Body8': OnPreSectionSalesShipmentLine_Body8("Sales Shipment Line");
          'Footer9': OnPreSectionSalesShipmentLine_Footer9("Sales Shipment Line");
          'Footer10': OnPreSectionSalesShipmentLine_Footer10("Sales Shipment Line");
          'Footer11': OnPreSectionSalesShipmentLine_Footer11("Sales Shipment Line");
          'Footer12': OnPreSectionSalesShipmentLine_Footer12("Sales Shipment Line");
          'Footer14': OnPreSectionSalesShipmentLine_Footer14("Sales Shipment Line");
        END;
        'Country_Region': CASE SectionId OF
          'Body16': OnPreSectionCountry_Region_Body16("Country/Region");
          'Body17': OnPreSectionCountry_Region_Body17("Country/Region");
          'Body18': OnPreSectionCountry_Region_Body18("Country/Region");
          'Body19': OnPreSectionCountry_Region_Body19("Country/Region");
          'Body20': OnPreSectionCountry_Region_Body20("Country/Region");
          'Body21': OnPreSectionCountry_Region_Body21("Country/Region");
          'Body22': OnPreSectionCountry_Region_Body22("Country/Region");
          'Body23': OnPreSectionCountry_Region_Body23("Country/Region");
          'Body24': OnPreSectionCountry_Region_Body24("Country/Region");
        END;
        'ItemLedgerEntry': CASE SectionId OF
          'Body26': OnPreSectionItemLedgerEntry_Body26("Item Ledger Entry");
          'Body27': OnPreSectionItemLedgerEntry_Body27("Item Ledger Entry");
          'Body31': OnPreSectionItemLedgerEntry_Body31("Item Ledger Entry");
        END;
        'Total2': CASE SectionId OF
          'Body28': OnPreSectionTotal2_Body28(Total2);
          'Body29': OnPreSectionTotal2_Body29(Total2);
          'Body30': OnPreSectionTotal2_Body30(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  Verkaufsrechnungszeile, Body(5) eingefgt.
           Bezeichnung 2 ausdrucken.
      10.07.2017 Body(5) UB   ((Type = 0) AND ("No." = 'S-AU-SPARE') und  ((Type = 0) AND ("No." = 'S-AN-SPARE') hinzugefgt
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

