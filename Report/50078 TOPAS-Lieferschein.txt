OBJECT Report 50078 TOPAS-Lieferschein
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=09:35:59;
    Modified=Yes;
    Version List=Beleg,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;Sales Shipment Header;
               DataItemTable=Table110;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufslieferung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  //TOPAS 25.04.12 ST
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  FormatAdr.SalesShptShipTo(LieferAnAdr,"Sales Shipment Header");
                                  FormatAdr.SalesShptBillTo(DebAdr,"Sales Shipment Header");
                                  DebAdrZeigen := "Bill-to Customer No." <>  "Sell-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(DebAdr) DO
                                    IF DebAdr[i] <> LieferAnAdr[i] THEN
                                      DebAdrZeigen := TRUE;
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  lief:= '';
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table291;
               OnAfterGetRecord=BEGIN
                                  spedition:="Shipping Agent";
                                END;

               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table10;
               DataItemLink=Code=FIELD(Shipment Method Code) }

    { 4   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  Verk_debitor := Customer;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF "Sales Shipment Header"."Location Code" = 'MUST' THEN
                                      titel := 'Musterlieferschein'
                                    ELSE
                                      titel := 'Lieferschein';
                                    IF "Sales Shipment Header"."Payment Terms Code" = 'BBL' THEN
                                      lief := 'Lieferung per Nachnahme'
                                  END ELSE BEGIN
                                    IF "Sales Shipment Header"."Location Code" = 'MUST' THEN
                                      titel := 'Sample Delivery Note'
                                    ELSE
                                      titel := 'Delivery Note';
                                    IF "Sales Shipment Header"."Payment Terms Code" = 'BBL' THEN
                                      lief := 'Cash on delivery'
                                  END;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 5   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    tel := "Salesperson/Purchaser"."Phone No.";
                                    fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    tel := "Salesperson/Purchaser".Tel_international;
                                    fax := "Salesperson/Purchaser".Fax_international;
                                    ansp := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 6   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               AnzSchleifen := 1 + ABS(AnzKopien);
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               ReportForNav.PrinterSettings.PaperSource(3);
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  IF Number > 1 THEN
                                    KopieText := 'KOPIE';
                                  ReportForNav.PageNo := 1;
                                  IF (Number > 1) AND (titel = 'Musterlieferschein') THEN ReportForNav.PrinterSettings.PaperSource(2);
                                  IF (("Sales Shipment Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Shipment Header"."Shipment Method Code" = 'ACC-ENG')) THEN
                                    Account := "Shipping Agent".Name + ' / ' + "Sales Shipment Header".Spediteuraccount
                                  ELSE
                                    Account := "Shipping Agent".Name;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  LiefDruckZ„hler.RUN("Sales Shipment Header");
                              END;
                               }

    { 7   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 8   ;3   ;Column  ;Picture_Firmendaten ;
               SourceExpr=Firmendaten.Picture }

    { 9   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000014;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000004;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000003;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 10  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 11  ;3   ;Column  ;tel                 ;
               SourceExpr=tel }

    { 12  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 13  ;3   ;Column  ;ansp                ;
               SourceExpr=ansp }

    { 14  ;3   ;Column  ;fax                 ;
               SourceExpr=fax }

    { 15  ;3   ;Column  ;titel               ;
               SourceExpr=titel }

    { 16  ;3   ;Column  ;No_SalesShipmentHeader;
               SourceExpr="Sales Shipment Header"."No." }

    { 17  ;3   ;Column  ;VATRegistrationNo_Verk_debitor;
               SourceExpr=Verk_debitor."VAT Registration No." }

    { 18  ;3   ;Column  ;Sell_toCustomerNo_SalesShipmentHeader;
               SourceExpr="Sales Shipment Header"."Sell-to Customer No." }

    { 19  ;3   ;Column  ;OurAccountNo_Verk_debitor;
               SourceExpr=Verk_debitor."Our Account No." }

    { 20  ;3   ;Column  ;SalesShipmentHeaderExternalDocumentNo__SalesShipmentHeaderYo;
               SourceExpr="Sales Shipment Header"."External Document No."+' '+"Sales Shipment Header"."Your Reference" }

    { 1000000000;3;Column;SalesShipmentHeaderExternalDocumentNo;
               SourceExpr="Sales Shipment Header"."External Document No." }

    { 21  ;3   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 22  ;3   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 25  ;3   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 26  ;3   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 27  ;3   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 28  ;3   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 29  ;3   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 30  ;3   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 23  ;3   ;Column  ;OrderNo_SalesShipmentHeader;
               SourceExpr="Sales Shipment Header"."Order No." }

    { 24  ;3   ;Column  ;PostingDate_SalesShipmentHeader;
               SourceExpr=FORMAT("Sales Shipment Header"."Posting Date",0,1) }

    { 31  ;3   ;Column  ;seite               ;
               SourceExpr=seite }

    { 36  ;3   ;DataItem;                    ;
               DataItemTable=Table111;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                                 IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE <> 1031 THEN BEGIN
                                    IF "Sales Shipment Line"."Unit of Measure Code" = 'STšCK' THEN
                                      einheiten_text := 'pcs.'
                                    ELSE
                                      einheiten_text := "Sales Shipment Line"."Unit of Measure Code";
                                  END ELSE BEGIN
                                    einheiten_text := "Sales Shipment Line"."Unit of Measure Code";
                                  END;

                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Shipment Line".Type = "Sales Shipment Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Shipment Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE')
                                      AND ("Sales Shipment Line".Quantity > 0)THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Shipment Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 37  ;4   ;Column  ;Description_SalesShipmentLine;
               SourceExpr=Description }

    { 38  ;4   ;Column  ;OrderLineNo_SalesShipmentLine;
               SourceExpr="Order Line No." }

    { 39  ;4   ;Column  ;Quantity_SalesShipmentLine;
               SourceExpr=FORMAT(Quantity) }

    { 40  ;4   ;Column  ;No_SalesShipmentLine;
               SourceExpr="No." }

    { 41  ;4   ;Column  ;lead_free_text0     ;
               SourceExpr=lead_free_text0 }

    { 42  ;4   ;Column  ;lead_free_text1     ;
               SourceExpr=lead_free_text1 }

    { 43  ;4   ;Column  ;lead_free_text2     ;
               SourceExpr=lead_free_text2 }

    { 44  ;4   ;Column  ;lead_text           ;
               SourceExpr=lead_text }

    { 45  ;4   ;Column  ;lief                ;
               SourceExpr=lief }

    { 46  ;4   ;Column  ;Account             ;
               SourceExpr=Account }

    { 47  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemLink=No.=FIELD(No.) }

    { 48  ;5   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 49  ;6   ;Column  ;lead_symbol         ;
               SourceExpr=lead_symbol }

    { 50  ;6   ;Column  ;Quantity_SalesShipmentLine2;
               SourceExpr=FORMAT("Sales Shipment Line".Quantity) }

    { 1000000015;6;Column;BarcodeQty_SalesShipmentLine2;
               SourceExpr=FORMAT("Sales Shipment Line".Quantity,0,1) }

    { 51  ;6   ;Column  ;Herstellerkurzname_Item;
               SourceExpr=Item.Herstellerkurzname }

    { 52  ;6   ;Column  ;Description_SalesShipmentLine5;
               SourceExpr="Sales Shipment Line".Description }

    { 53  ;6   ;Column  ;Artikelnr2_SalesShipmentLine;
               SourceExpr="Sales Shipment Line"."Artikelnr. 2" }

    { 54  ;6   ;Column  ;einheiten_text      ;
               SourceExpr=einheiten_text }

    { 55  ;6   ;Column  ;OrderLineNo_SalesShipmentLine2;
               SourceExpr="Sales Shipment Line"."Order Line No." }

    { 57  ;6   ;Column  ;Description2_SalesShipmentLine;
               SourceExpr="Sales Shipment Line"."Description 2" }

    { 58  ;6   ;Column  ;Cross_ReferenceNo_SalesShipmentLine;
               SourceExpr="Sales Shipment Line"."Cross-Reference No." }

    { 59  ;6   ;Column  ;TariffNo_Item       ;
               SourceExpr=Item."Tariff No." }

    { 61  ;4   ;DataItem;                    ;
               DataItemTable=Table32;
               DataItemTableView=WHERE(Item Tracking=FILTER(<>None));
               OnPreDataItem=BEGIN
                               posten_durchlauf := 0;
                             END;

               OnAfterGetRecord=BEGIN
                                  //TOPAS 21.12.18 ST - verhindert den Andruck von berflssigen und identischen Product Keys fr Software Artikel +
                                  posten_menge := FORMAT("Item Ledger Entry".Quantity * (-1),0,1);
                                  IF (Item.Serviceklassifizierung = 'SOFTWARE') AND ((Item."Item Tracking Code" = 'SN-ODER-PK') OR (Item."Item Tracking Code" = 'PRODUCTKEY')
                                  OR (Item."Item Tracking Code" = 'SERIENNR')) AND (STRPOS(Item."No. 2",'OVOC') = 0) AND ("Sales Shipment Line".Quantity > 1) THEN BEGIN
                                  //AND (STRPOS("Item Ledger Entry"."Serial No.",'VT') <> 0) OR (STRPOS("Item Ledger Entry"."Serial No.",'NODATA') <> 0) THEN BEGIN
                                    posten_menge := '';
                                    IF posten_durchlauf > 0 THEN
                                      CurrReport.BREAK;
                                  END;

                                  posten_durchlauf += 1;
                                  //TOPAS -
                                END;

               DataItemLink=Document No.=FIELD(Document No.),
                            Item No.=FIELD(No.),
                            Document Line No.=FIELD(Line No.) }

    { 62  ;5   ;Column  ;Ursprungsland_ItemLedgerEntry;
               SourceExpr=Ursprungsland }

    { 63  ;5   ;Column  ;LotNo_ItemLedgerEntry;
               SourceExpr="Lot No." }

    { 66  ;5   ;Column  ;ItemLedgerEntryQuantity_1;
               DecimalPlaces=0:0;
               SourceExpr=posten_menge }

    { 1000000017;5;Column;BarcodeQty_ItemLedgerEntryQuantity_1;
               DecimalPlaces=0:0;
               SourceExpr=posten_menge }

    { 67  ;5   ;Column  ;SerialNo_ItemLedgerEntry;
               SourceExpr="Serial No." }

    { 1000000001;5;Column;ProductKey_ItemLedgerEntry;
               SourceExpr="Product Key" }

    { 1000000002;5;Column;SerialNo2_ItemLedgerEntry;
               SourceExpr="Serial No. 2" }

    { 68  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Shipment Header;
               DataItemLink=No.=FIELD(No.) }

    { 69  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 70  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT DebAdrZeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 71  ;4   ;Column  ;Bill_toCustomerNo_SalesShipmentHeader;
               SourceExpr="Sales Shipment Header"."Bill-to Customer No." }

    { 73  ;4   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 74  ;4   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 75  ;4   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 76  ;4   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 77  ;4   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 78  ;4   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 79  ;4   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 72  ;4   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      vk_zeile@1140003 : Record 37;
      spedition@1140004 : Record 291;
      art1@1140005 : Record 27;
      Verk_debitor@1140006 : Record 18;
      VerkEinkPerson@1140007 : Record 13;
      SalesShipLine@1140045 : Record 111;
      Firmendaten@1140008 : Record 79;
      language@1140002 : Record 8;
      PrinterSelection@1140046 : Record 78;
      LiefDruckZ„hler@1140009 : Codeunit 314;
      FormatAdr@1000000002 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140011 : ARRAY [8] OF Text[50];
      FirmaAdr@1140012 : ARRAY [8] OF Text[50];
      Verk„uferText@1140013 : Text[20];
      ReferenzText@1140014 : Text[30];
      titel@1000000004 : Text[30];
      lief@1000000003 : Text[30];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      DebAdrZeigen@1140019 : Boolean;
      i@1140020 : Integer;
      lead_free_text0@1140022 : Text[80];
      lead_free_text1@1140023 : Text[80];
      leadfree_symbol@1140024 : Text[3];
      leadfree_artikel@1140025 : Record 27;
      lead_artikel@1140042 : Record 27;
      lead_text@1140043 : Text[120];
      lead_symbol@1140044 : Text[3];
      lead_free_text2@1140026 : Text[80];
      ansp@1140030 : Text[40];
      tel@1140031 : Text[40];
      fax@1140032 : Text[40];
      seite@1140033 : Text[30];
      einheiten_text@1140034 : Text[30];
      Account@1140041 : Text[90];
      posten_menge@1000000006 : Text;
      posten_durchlauf@1000000005 : Integer;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header1@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //TOPAS 29.06.15 ST - rendert das Firmenlogo fr Batch L„ufe, da das Logo beim normalen Druck vom Briefpapier bezogen wird
        IF PrinterSelection.GET(USERID,50078) THEN BEGIN
          IF (PrinterSelection."Printer Name" = 'PDFCreator')
          OR (PrinterSelection."Printer Name" = 'Bullzip PDF Printer') THEN
            Firmendaten.CALCFIELDS(Picture);
        END;
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS -
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header2@5011(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput(Customer.Barcode_Lieferschein_erw = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body5@5012(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput((((Type = 0) AND ("No." = 'LIEF_DRUCK')) OR ((Type = 0) AND ("No." = 'LIEF_DRU_A'))
        OR ((Type = 0) AND ("No." = 'S-AU-SPARE')) OR ((Type = 0) AND ("No." = 'S-AN-SPARE'))) AND ("No." <> 'AB_DRUCK'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body6@5013(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput((Type = 0) AND ("Sales Shipment Header"."Location Code" = 'MUST'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body7@5014(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(("No." ='BECHTLE') OR ("No." = 'IP_DYNAM') OR ("No." = 'IP DYNAM'));
        SalesShipLine.RESET;
        SalesShipLine.SETFILTER("Document No.",'%1',"Document No.");
        SalesShipLine.SETFILTER("Line No.",'%1',"Sales Shipment Line"."Attached to Line No.");
        SalesShipLine.SETFILTER("No.",'%1|%2|%3','BECHTLE','IP_DYNAM','IP DYNAM');
        IF SalesShipLine.FINDFIRST THEN
          ReportForNav.ShowOutput(TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body8@5015(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer9@5016(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer10@5017(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer11@5018(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer12@5019(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer14@5020(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput("Sales Shipment Line"."Location Code" = 'MUST');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body16@5021(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item) AND ("Sales Shipment Line".Quantity <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body17@5022(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item) AND ("Sales Shipment Line".Quantity <> 0)
        AND (Customer.Barcode_Lieferschein_erw = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body18@5023(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item)
         AND ("Sales Shipment Line"."Description 2" > '')
         AND ("Sales Shipment Line".Quantity <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body19@5024(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line"."Cross-Reference No." <> '') AND ("Sales Shipment Line".Quantity > 0)
        AND (Item."Tariff No." = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body20@5025(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Quantity > 0) AND
        ("Sales Shipment Line"."Cross-Reference No." = '') AND (Item."Tariff No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body21@5026(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item)
         AND ("Sales Shipment Line".Quantity > 0) AND (Item."Tariff No." <> '')
         AND ("Sales Shipment Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body22@5027(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput(("Sales Shipment Line".Type = "Sales Shipment Line".Type::Item)
        AND ("Sales Shipment Line"."Cross-Reference No." <> '') AND ("Sales Shipment Line".Quantity <> 0)
        AND (Customer.Barcode_Lieferschein_erw = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body23@5028(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput((Item."C of C" = TRUE) AND ("Sales Shipment Line".Quantity <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionCountry_Region_Body24@5029(VAR "Country/Region"@1000000000 : Record 9);
    BEGIN
      WITH "Country/Region" DO BEGIN
        ReportForNav.ShowOutput((Item.Abzugstest = TRUE) AND ("Sales Shipment Line".Quantity <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItemLedgerEntry_Body26@5030(VAR "Item Ledger Entry"@1000000000 : Record 32);
    BEGIN
      WITH "Item Ledger Entry" DO BEGIN
        ReportForNav.ShowOutput(("Item Ledger Entry".Quantity <> 0) AND ("Item Ledger Entry"."Lot No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItemLedgerEntry_Body27@5031(VAR "Item Ledger Entry"@1000000000 : Record 32);
    BEGIN
      WITH "Item Ledger Entry" DO BEGIN
        IF Item.GET("Item Ledger Entry"."Item No.") THEN
          ReportForNav.ShowOutput(("Item Ledger Entry".Quantity <> 0) AND ("Item Ledger Entry"."Serial No." <> '')
          AND ((STRPOS(Item."Item Tracking Code",'SERIEN') <> 0) OR ((Item."Item Tracking Code" = 'SN-ODER-PK') AND ("Item Ledger Entry"."Product Key" = '')))
          AND ("Item Ledger Entry"."Lot No." = ''))
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItemLedgerEntry_Body31@1000000001(VAR "Item Ledger Entry"@1000000000 : Record 32);
    BEGIN
      WITH "Item Ledger Entry" DO BEGIN
        IF Item.GET("Item Ledger Entry"."Item No.") THEN
          ReportForNav.ShowOutput(("Item Ledger Entry".Quantity <> 0) AND ("Item Ledger Entry"."Product Key" <> '')
          AND ((Item."Item Tracking Code" = 'PRODUCTKEY') OR (Item."Item Tracking Code" = 'SERIENNR+P')
          OR ((Item."Item Tracking Code" = 'SN-ODER-PK') AND ((STRPOS("Item Ledger Entry"."Serial No.",'NODATA') <> 0) OR (STRPOS("Item Ledger Entry"."Serial No.",'VT') = 1)))))
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body28@5032(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput("Sales Shipment Header"."Location Code" <> 'MUST');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body29@5033(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Shipment Header"."Bill-to Customer No." <> "Sales Shipment Header"."Sell-to Customer No.";
        ReportForNav.ShowOutput("Sales Shipment Header"."Location Code" <> 'MUST');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body30@5034(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput("Sales Shipment Header"."Location Code" <> 'MUST');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header1': OnPreSectionSeiteSchleife_Header1(SeiteSchleife);
          'Header2': OnPreSectionSeiteSchleife_Header2(SeiteSchleife);
        END;
        'SalesShipmentLine': CASE SectionId OF
          'Body5': OnPreSectionSalesShipmentLine_Body5("Sales Shipment Line");
          'Body6': OnPreSectionSalesShipmentLine_Body6("Sales Shipment Line");
          'Body7': OnPreSectionSalesShipmentLine_Body7("Sales Shipment Line");
          'Body8': OnPreSectionSalesShipmentLine_Body8("Sales Shipment Line");
          'Footer9': OnPreSectionSalesShipmentLine_Footer9("Sales Shipment Line");
          'Footer10': OnPreSectionSalesShipmentLine_Footer10("Sales Shipment Line");
          'Footer11': OnPreSectionSalesShipmentLine_Footer11("Sales Shipment Line");
          'Footer12': OnPreSectionSalesShipmentLine_Footer12("Sales Shipment Line");
          'Footer14': OnPreSectionSalesShipmentLine_Footer14("Sales Shipment Line");
        END;
        'Country_Region': CASE SectionId OF
          'Body16': OnPreSectionCountry_Region_Body16("Country/Region");
          'Body17': OnPreSectionCountry_Region_Body17("Country/Region");
          'Body18': OnPreSectionCountry_Region_Body18("Country/Region");
          'Body19': OnPreSectionCountry_Region_Body19("Country/Region");
          'Body20': OnPreSectionCountry_Region_Body20("Country/Region");
          'Body21': OnPreSectionCountry_Region_Body21("Country/Region");
          'Body22': OnPreSectionCountry_Region_Body22("Country/Region");
          'Body23': OnPreSectionCountry_Region_Body23("Country/Region");
          'Body24': OnPreSectionCountry_Region_Body24("Country/Region");
        END;
        'ItemLedgerEntry': CASE SectionId OF
          'Body26': OnPreSectionItemLedgerEntry_Body26("Item Ledger Entry");
          'Body27': OnPreSectionItemLedgerEntry_Body27("Item Ledger Entry");
          'Body31': OnPreSectionItemLedgerEntry_Body31("Item Ledger Entry");
        END;
        'Total2': CASE SectionId OF
          'Body28': OnPreSectionTotal2_Body28(Total2);
          'Body29': OnPreSectionTotal2_Body29(Total2);
          'Body30': OnPreSectionTotal2_Body30(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  Verkaufsrechnungszeile, Body(5) eingefgt.
           Bezeichnung 2 ausdrucken.
      10.07.2017 Body(5) UB   ((Type = 0) AND ("No." = 'S-AU-SPARE') und  ((Type = 0) AND ("No." = 'S-AN-SPARE') hinzugefgt
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

