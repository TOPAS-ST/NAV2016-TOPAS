OBJECT Report 50179 TOPAS Service Ordering
{
  OBJECT-PROPERTIES
  {
    Date=19.08.24;
    Time=14:16:49;
    Modified=Yes;
    Version List=fertig,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table50024;
               DataItemTableView=SORTING(Wartungsvertragsnr.,Service Artikelnr.)
                                 WHERE(Art=FILTER(Service),
                                       Inaktiv=FILTER(No));
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo","Systeme Logo");
                               Nummer := 0;
                               TotalText := '';
                               //CREATETOTALS(champ_price_total);
                             END;

               OnAfterGetRecord=BEGIN
                                  PurchHeader.RESET;
                                  PurchHeader.SETRANGE("No.","Serviceleist. & Leihstellungen"."BET-Nr.");
                                  IF PurchHeader.FINDFIRST THEN BEGIN
                                    w„hcode  := PurchHeader."Currency Code";
                                    termcode := PurchHeader."Payment Terms Code";
                                    shipcode := PurchHeader."Shipment Method Code";
                                    orderno  := PurchHeader."No.";
                                    vendorno := PurchHeader."Buy-from Vendor No.";
                                    docdate  := PurchHeader."Document Date";
                                    FormatAdr.PurchHeaderBuyFrom(EinkVonAdr,PurchHeader);
                                    CurrReport.LANGUAGE := Language.GetLanguageID(PurchHeader."Language Code");
                                  END ELSE BEGIN
                                    PurchShipHeader.RESET;
                                    PurchShipHeader.SETRANGE("Order No.","Serviceleist. & Leihstellungen"."BET-Nr.");
                                    IF PurchShipHeader.FINDLAST THEN BEGIN
                                      w„hcode  := PurchShipHeader."Currency Code";
                                      termcode := PurchShipHeader."Payment Terms Code";
                                      shipcode := PurchShipHeader."Shipment Method Code";
                                      orderno  := PurchShipHeader."Order No.";
                                      vendorno := PurchShipHeader."Buy-from Vendor No.";
                                      docdate  := PurchShipHeader."Document Date";
                                      FormatAdr.PurchRcptBuyFrom(EinkVonAdr,PurchShipHeader);
                                      CurrReport.LANGUAGE := Language.GetLanguageID(PurchShipHeader."Language Code");
                                    END ELSE
                                      ERROR('Bestellung konnte nicht gefunden werden.');
                                  END;

                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  service_price_total := service_price_total + (Menge * "Service DC");
                                  IF termcode = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET(termcode);
                                  IF shipcode = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET(shipcode);
                                  IF w„hcode = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',w„hcode);
                                  END;
                                  Artikel.GET("SUP Artikelnr.");
                                  IF Artikel.Artikelgruppe = 'CHAMPS' THEN
                                    header_zusatz := 'Champs'
                                  ELSE
                                    IF (Artikel.Artikelgruppe = 'ACTS') OR (Artikel.Artikelgruppe = 'ACTS_AHR') OR (Artikel.Artikelgruppe = 'ACTS/ACHAT')
                                    OR (Artikel.Artikelgruppe = 'ACTS_SCHAEFFLER') OR (Artikel.Artikelgruppe = 'ACTS_MSS_SCHAEFFLER')
                                    OR (Artikel.Artikelgruppe = 'ACTS_MSS') OR (Artikel.Artikelgruppe = 'ACHAT') THEN
                                      header_zusatz := 'ACTS'
                                    ELSE
                                      header_zusatz := '';

                                  seriennr := "Seriennr.";

                                  IF Artikel.GET("Artikelnr.") THEN BEGIN
                                    IF "Seriennr." <> '' THEN BEGIN
                                      IF (Artikel."Item Tracking Code" = 'PRODUCTKEY') OR ((Artikel."Item Tracking Code" = 'SN-ODER-PK') AND ((STRPOS("Seriennr.",'NODATA') <> 0) OR (STRPOS("Seriennr.",'VT') = 1))) THEN
                                        seriennr := "Product Key";
                                    END ELSE BEGIN
                                      IF Artikel."Item Tracking Code" = 'PRODUCTKEY' THEN
                                        seriennr := "Product Key";
                                      IF (Artikel.Serviceklassifizierung = 'SOFTWARE') OR (Artikel.Serviceklassifizierung = 'KEINE') THEN BEGIN
                                        ServiceOrderPos.RESET;
                                        ServiceOrderPos.SETRANGE("Wartungsvertragsnr.","Wartungsvertragsnr.");
                                        ServiceOrderPos.SETRANGE(Basisger„t,TRUE);
                                        ServiceOrderPos.SETRANGE("Geh”rt zu Lfd. Nr.","Geh”rt zu Lfd. Nr.");
                                        IF ServiceOrderPos.FINDFIRST THEN BEGIN
                                          IF Artikel.GET(ServiceOrderPos."Artikelnr.") THEN BEGIN
                                            IF Artikel."Item Tracking Code" = 'PRODUCTKEY' THEN
                                              seriennr := ServiceOrderPos."Product Key"
                                            ELSE
                                              seriennr := ServiceOrderPos."Seriennr.";
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;

                                  IF STRPOS(seriennr,'S/N: ') = 1 THEN
                                    seriennr := COPYSTR(seriennr,STRLEN('S/N: ')+1);
                                  IF STRPOS(seriennr,'S/N:') = 1 THEN
                                    seriennr := COPYSTR(seriennr,STRLEN('S/N:')+1);
                                  IF Fremderwerb THEN
                                    seriennr := seriennr + '*';
                                END;

               ReqFilterFields=BET-Nr. }

    { 3   ;2   ;Column  ;SystemeLogo_Firmendaten;
               SourceExpr=Firmendaten."Systeme Logo" }

    { 4   ;2   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;2;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000004;2;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2] }

    { 1000000003;2;Column;CompanyPostCodeCity;
               SourceExpr=CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;2;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;2;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;2;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;2;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;2;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;2;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;2;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;2;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;2;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;2;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 1000000001;2;Column;CompanyEORINr      ;
               SourceExpr=CompanyInfo[16] }

    { 5   ;2   ;Column  ;header_zusatz_PurchaseOrder;
               SourceExpr=header_zusatz + ' Purchase Order' }

    { 6   ;2   ;Column  ;EinkVonAdr8         ;
               SourceExpr=EinkVonAdr[8] }

    { 7   ;2   ;Column  ;EinkVonAdr7         ;
               SourceExpr=EinkVonAdr[7] }

    { 8   ;2   ;Column  ;EinkVonAdr6         ;
               SourceExpr=EinkVonAdr[6] }

    { 9   ;2   ;Column  ;EinkVonAdr5         ;
               SourceExpr=EinkVonAdr[5] }

    { 10  ;2   ;Column  ;EinkVonAdr4         ;
               SourceExpr=EinkVonAdr[4] }

    { 11  ;2   ;Column  ;EinkVonAdr3         ;
               SourceExpr=EinkVonAdr[3] }

    { 12  ;2   ;Column  ;EinkVonAdr2         ;
               SourceExpr=EinkVonAdr[2] }

    { 13  ;2   ;Column  ;EinkVonAdr1         ;
               SourceExpr=EinkVonAdr[1] }

    { 14  ;2   ;Column  ;vendorno            ;
               SourceExpr=vendorno }

    { 15  ;2   ;Column  ;orderno             ;
               SourceExpr=orderno }

    { 16  ;2   ;Column  ;docdate             ;
               SourceExpr=docdate }

    { 17  ;2   ;Column  ;STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_;
               SourceExpr=STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo)) }

    { 18  ;2   ;Column  ;service_price_total ;
               SourceExpr=service_price_total }

    { 19  ;2   ;Column  ;endkunde            ;
               SourceExpr=endkunde }

    { 20  ;2   ;Column  ;Debitorname_Serviceleist_Leihstellungen;
               SourceExpr=Debitorname }

    { 21  ;2   ;Column  ;Nummer              ;
               SourceExpr=Nummer }

    { 22  ;2   ;Column  ;ServiceArtikelnr_Serviceleist_Leihstellungen;
               SourceExpr="Service Artikelnr." }

    { 23  ;2   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 24  ;2   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(No.);
               DataItemLink=No.=FIELD(Artikelnr.) }

    { 25  ;3   ;Column  ;Menge_Serviceleist_Leihstellungen;
               DecimalPlaces=0:0;
               SourceExpr="Serviceleist. & Leihstellungen".Menge }

    { 26  ;3   ;Column  ;Serviceleist_LeihstellungenLizenzdatum__FORMAT_Serviceleist_;
               DecimalPlaces=0:0;
               SourceExpr=FORMAT("Serviceleist. & Leihstellungen".Lizenzdatum,0,'<Day>.<Month Text,3> <YEAR4>') + '-' + FORMAT("Serviceleist. & Leihstellungen"."Ablaufdatum Serviceleistung",0,'<Day>.<Month Text,3> <YEAR4>') }

    { 27  ;3   ;Column  ;Serviceleist_LeihstellungenMenge_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen".Menge*"Serviceleist. & Leihstellungen"."Service DC" }

    { 28  ;3   ;Column  ;ServiceDC_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Service DC" }

    { 29  ;3   ;Column  ;Artikelnr2_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Artikelnr. 2" }

    { 30  ;3   ;Column  ;seriennr            ;
               SourceExpr=seriennr }

    { 31  ;3   ;Column  ;quotenr             ;
               DecimalPlaces=0:0;
               SourceExpr=quotenr }

    { 32  ;2   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=BEGIN
                                  //IF (STRPOS("Serviceleist. & Leihstellungen"."SUP Artikelnr.",'ACTS')=0) THEN CurrReport.SKIP;
                                END;
                                 }

    { 33  ;1   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 34  ;2   ;DataItem;TOPAS Bemerkungen unten;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Wartungsvertrag),
                                       Andruck=FILTER(Text unten)) }

    { 35  ;2   ;DataItem;Bemerkung           ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Wartungs_Bemerkung.SETRANGE("Nr.","Serviceleist. & Leihstellungen"."Wartungsvertragsnr.");
                               Wartungs_Bemerkung.SETRANGE(Art,Wartungs_Bemerkung.Art :: Wartungsvertrag);
                               Wartungs_Bemerkung.SETRANGE(Andruck,Wartungs_Bemerkung.Andruck :: "Text unten");
                               SETRANGE(Number,1,Wartungs_Bemerkung.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    Wartungs_Bemerkung.FINDFIRST
                                  ELSE
                                    Wartungs_Bemerkung.NEXT;
                                  "TOPAS Bemerkungen unten" := Wartungs_Bemerkung;
                                END;
                                 }

    { 36  ;3   ;Column  ;Bemerkung_TOPASBemerkungenunten;
               SourceExpr="TOPAS Bemerkungen unten".Bemerkung }

    { 37  ;2   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 38  ;2   ;DataItem;                    ;
               DataItemTable=Table50011;
               DataItemTableView=SORTING(Wartungsvertragsnr.);
               DataItemLinkReference=Serviceleist. & Leihstellungen;
               DataItemLink=Wartungsvertragsnr.=FIELD(Wartungsvertragsnr.) }

    { 39  ;3   ;Column  ;EndkundeE_Mail_Wartungsvertrag;
               SourceExpr=Wartungsvertrag."Endkunde E-Mail" }

    { 40  ;3   ;Column  ;EndkundeTelefonnr_Wartungsvertrag;
               SourceExpr="Endkunde Telefonnr." }

    { 41  ;3   ;Column  ;EndkundeKontakt_Wartungsvertrag;
               SourceExpr="Endkunde Kontakt" }

    { 42  ;3   ;Column  ;EndkundeLand_Wartungsvertrag;
               SourceExpr="Endkunde Land" }

    { 44  ;3   ;Column  ;EndkundePLZ_Code_Ort_Wartungsvertrag;
               SourceExpr=Wartungsvertrag."Endkunde PLZ-Code" + ' ' + "Endkunde Ort" }

    { 45  ;3   ;Column  ;EndkundeAdresse_Wartungsvertrag;
               SourceExpr="Endkunde Adresse" }

    { 46  ;3   ;Column  ;Endkunde_Wartungsvertrag;
               SourceExpr=Endkunde }

    { 47  ;3   ;Column  ;Description_ZlgBed  ;
               SourceExpr=ZlgBed.Description }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Debitor@1140007 : Record 18;
      Artikel@1140008 : Record 27;
      Firmendaten@1140009 : Record 79;
      FIBUEinrichtung@1140006 : Record 98;
      Wartung@1140032 : Record 50011;
      LieferBed@1140003 : Record 10;
      ZlgBed@1140002 : Record 3;
      SalesHeader@1140018 : Record 36;
      PurchHeader@1140014 : Record 38;
      PurchShipHeader@1140022 : Record 120;
      ServiceOrderPos@1140030 : Record 50024;
      Opt@1140027 : Record 50001;
      Wartungs_Bemerkung@1140033 : Record 50023;
      Quote@1140036 : Record 50014;
      Language@1000000003 : Record 8;
      FormatAdr@1140020 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [20] OF Text;
      TotalText@1140004 : Text[50];
      EinkVonAdr@1000000002 : ARRAY [8] OF Text[50];
      service_price_total@1140013 : Decimal;
      Nummer@1140005 : Integer;
      w„hcode@1140015 : Code[20];
      termcode@1140021 : Code[20];
      shipcode@1140023 : Code[20];
      orderno@1140025 : Code[20];
      vendorno@1140024 : Code[20];
      laufzeit@1140028 : Code[10];
      seriennr@1140029 : Code[40];
      docdate@1140026 : Date;
      ansp_name@1140016 : Text[100];
      ansp_anrede@1140012 : Text[50];
      ansp_telefon@1140011 : Text[50];
      ansp_fax@1140010 : Text[50];
      ansp_email@1140017 : Text[80];
      header_zusatz@1140031 : Text[30];
      endkunde@1140034 : Text[50];
      quotenr@1140035 : Code[10];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_GroupHeader5@5010(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        Nummer += 1;
        endkunde := '';
        Wartung.GET("Wartungsvertragsnr.");
        endkunde := Wartung.Endkunde;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body9@5011(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        IF Quote.GET("Serviceleist. & Leihstellungen"."Quotenr.") THEN
          quotenr := Quote."Quotenr. Hersteller"
        ELSE
          quotenr := '';
        ReportForNav.ShowOutput(quotenr <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionWartungsvertrag_Footer11@5012(VAR Wartungsvertrag@1000000000 : Record 50011);
    BEGIN
      WITH Wartungsvertrag DO BEGIN
        ReportForNav.ShowOutput(Wartungsvertrag.Endkunde <> '');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': CASE SectionId OF
          'GroupHeader5': OnPreSectionServiceleist_Leihstellungen_GroupHeader5("Serviceleist. & Leihstellungen");
        END;
        'Item': CASE SectionId OF
          'Body9': OnPreSectionItem_Body9(Item);
        END;
        'Wartungsvertrag': CASE SectionId OF
          'Footer11': OnPreSectionWartungsvertrag_Footer11(Wartungsvertrag);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': WITH "Serviceleist. & Leihstellungen" DO CASE ForNavOperation OF
        END;  'SeiteSchleife': WITH SeiteSchleife DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,service_price_total);
              END;
           'Restore': BEGIN
                 service_price_total := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
ysUIo+xP/wc=</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="SystemeLogo_Firmendaten">
          <DataField>SystemeLogo_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPostCodeCity">
          <DataField>CompanyPostCodeCity</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="CompanyEORINr">
          <DataField>CompanyEORINr</DataField>
        </Field>
        <Field Name="header_zusatz_PurchaseOrder">
          <DataField>header_zusatz_PurchaseOrder</DataField>
        </Field>
        <Field Name="EinkVonAdr8">
          <DataField>EinkVonAdr8</DataField>
        </Field>
        <Field Name="EinkVonAdr7">
          <DataField>EinkVonAdr7</DataField>
        </Field>
        <Field Name="EinkVonAdr6">
          <DataField>EinkVonAdr6</DataField>
        </Field>
        <Field Name="EinkVonAdr5">
          <DataField>EinkVonAdr5</DataField>
        </Field>
        <Field Name="EinkVonAdr4">
          <DataField>EinkVonAdr4</DataField>
        </Field>
        <Field Name="EinkVonAdr3">
          <DataField>EinkVonAdr3</DataField>
        </Field>
        <Field Name="EinkVonAdr2">
          <DataField>EinkVonAdr2</DataField>
        </Field>
        <Field Name="EinkVonAdr1">
          <DataField>EinkVonAdr1</DataField>
        </Field>
        <Field Name="vendorno">
          <DataField>vendorno</DataField>
        </Field>
        <Field Name="orderno">
          <DataField>orderno</DataField>
        </Field>
        <Field Name="docdate">
          <DataField>docdate</DataField>
        </Field>
        <Field Name="STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_">
          <DataField>STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_</DataField>
        </Field>
        <Field Name="service_price_total">
          <DataField>service_price_total</DataField>
        </Field>
        <Field Name="service_price_totalFormat">
          <DataField>service_price_totalFormat</DataField>
        </Field>
        <Field Name="endkunde">
          <DataField>endkunde</DataField>
        </Field>
        <Field Name="Debitorname_Serviceleist_Leihstellungen">
          <DataField>Debitorname_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Nummer">
          <DataField>Nummer</DataField>
        </Field>
        <Field Name="ServiceArtikelnr_Serviceleist_Leihstellungen">
          <DataField>ServiceArtikelnr_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="Menge_Serviceleist_Leihstellungen">
          <DataField>Menge_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Menge_Serviceleist_LeihstellungenFormat">
          <DataField>Menge_Serviceleist_LeihstellungenFormat</DataField>
        </Field>
        <Field Name="Serviceleist_LeihstellungenLizenzdatum__FORMAT_Serviceleist_">
          <DataField>Serviceleist_LeihstellungenLizenzdatum__FORMAT_Serviceleist_</DataField>
        </Field>
        <Field Name="Serviceleist_LeihstellungenMenge_Serviceleist_Leihstellungen">
          <DataField>Serviceleist_LeihstellungenMenge_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Serviceleist_LeihstellungenMenge_Serviceleist_LeihstellungenFormat">
          <DataField>Serviceleist_LeihstellungenMenge_Serviceleist_LeihstellungenFormat</DataField>
        </Field>
        <Field Name="ServiceDC_Serviceleist_Leihstellungen">
          <DataField>ServiceDC_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="ServiceDC_Serviceleist_LeihstellungenFormat">
          <DataField>ServiceDC_Serviceleist_LeihstellungenFormat</DataField>
        </Field>
        <Field Name="Artikelnr2_Serviceleist_Leihstellungen">
          <DataField>Artikelnr2_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="seriennr">
          <DataField>seriennr</DataField>
        </Field>
        <Field Name="quotenr">
          <DataField>quotenr</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungenunten">
          <DataField>Bemerkung_TOPASBemerkungenunten</DataField>
        </Field>
        <Field Name="EndkundeE_Mail_Wartungsvertrag">
          <DataField>EndkundeE_Mail_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundeTelefonnr_Wartungsvertrag">
          <DataField>EndkundeTelefonnr_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundeKontakt_Wartungsvertrag">
          <DataField>EndkundeKontakt_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundeLand_Wartungsvertrag">
          <DataField>EndkundeLand_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundePLZ_Code_Ort_Wartungsvertrag">
          <DataField>EndkundePLZ_Code_Ort_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundeAdresse_Wartungsvertrag">
          <DataField>EndkundeAdresse_Wartungsvertrag</DataField>
        </Field>
        <Field Name="Endkunde_Wartungsvertrag">
          <DataField>Endkunde_Wartungsvertrag</DataField>
        </Field>
        <Field Name="Description_ZlgBed">
          <DataField>Description_ZlgBed</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

