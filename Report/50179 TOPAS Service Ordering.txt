OBJECT Report 50179 TOPAS Service Ordering
{
  OBJECT-PROPERTIES
  {
    Date=01.03.23;
    Time=16:02:35;
    Modified=Yes;
    Version List=fertig,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table50024;
               DataItemTableView=SORTING(Wartungsvertragsnr.,Service Artikelnr.)
                                 WHERE(Art=FILTER(Service),
                                       Inaktiv=FILTER(No));
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo","Systeme Logo");
                               Nummer := 0;
                               TotalText := '';
                               //CREATETOTALS(champ_price_total);
                             END;

               OnAfterGetRecord=BEGIN
                                  PurchHeader.RESET;
                                  PurchHeader.SETRANGE("No.","Serviceleist. & Leihstellungen"."BET-Nr.");
                                  IF PurchHeader.FINDFIRST THEN BEGIN
                                    w„hcode  := PurchHeader."Currency Code";
                                    termcode := PurchHeader."Payment Terms Code";
                                    shipcode := PurchHeader."Shipment Method Code";
                                    orderno  := PurchHeader."No.";
                                    vendorno := PurchHeader."Buy-from Vendor No.";
                                    docdate  := PurchHeader."Document Date";
                                    FormatAdr.PurchHeaderBuyFrom(EinkVonAdr,PurchHeader);
                                    CurrReport.LANGUAGE := Language.GetLanguageID(PurchHeader."Language Code");
                                  END ELSE BEGIN
                                    PurchShipHeader.RESET;
                                    PurchShipHeader.SETRANGE("Order No.","Serviceleist. & Leihstellungen"."BET-Nr.");
                                    IF PurchShipHeader.FINDLAST THEN BEGIN
                                      w„hcode  := PurchShipHeader."Currency Code";
                                      termcode := PurchShipHeader."Payment Terms Code";
                                      shipcode := PurchShipHeader."Shipment Method Code";
                                      orderno  := PurchShipHeader."Order No.";
                                      vendorno := PurchShipHeader."Buy-from Vendor No.";
                                      docdate  := PurchShipHeader."Document Date";
                                      FormatAdr.PurchRcptBuyFrom(EinkVonAdr,PurchShipHeader);
                                      CurrReport.LANGUAGE := Language.GetLanguageID(PurchShipHeader."Language Code");
                                    END ELSE
                                      ERROR('Bestellung konnte nicht gefunden werden.');
                                  END;

                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  service_price_total := service_price_total + (Menge * "Service DC");
                                  IF termcode = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET(termcode);
                                  IF shipcode = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET(shipcode);
                                  IF w„hcode = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',w„hcode);
                                  END;
                                  Artikel.GET("SUP Artikelnr.");
                                  IF Artikel.Artikelgruppe = 'CHAMPS' THEN
                                    header_zusatz := 'Champs'
                                  ELSE
                                    IF (Artikel.Artikelgruppe = 'ACTS') OR (Artikel.Artikelgruppe = 'ACTS_AHR') OR (Artikel.Artikelgruppe = 'ACTS/ACHAT')
                                    OR (Artikel.Artikelgruppe = 'ACTS_SCHAEFFLER') OR (Artikel.Artikelgruppe = 'ACTS_MSS_SCHAEFFLER')
                                    OR (Artikel.Artikelgruppe = 'ACTS_MSS') OR (Artikel.Artikelgruppe = 'ACHAT') THEN
                                      header_zusatz := 'ACTS'
                                    ELSE
                                      header_zusatz := '';

                                  seriennr := "Seriennr.";

                                  IF Artikel.GET("Artikelnr.") THEN BEGIN
                                    IF "Seriennr." <> '' THEN BEGIN
                                      IF (Artikel."Item Tracking Code" = 'PRODUCTKEY') OR ((Artikel."Item Tracking Code" = 'SN-ODER-PK') AND ((STRPOS("Seriennr.",'NODATA') <> 0) OR (STRPOS("Seriennr.",'VT') = 1))) THEN
                                        seriennr := "Product Key";
                                    END ELSE BEGIN
                                      IF Artikel."Item Tracking Code" = 'PRODUCTKEY' THEN
                                        seriennr := "Product Key";
                                      IF (Artikel.Serviceklassifizierung = 'SOFTWARE') OR (Artikel.Serviceklassifizierung = 'KEINE') THEN BEGIN
                                        ServiceOrderPos.RESET;
                                        ServiceOrderPos.SETRANGE("Wartungsvertragsnr.","Wartungsvertragsnr.");
                                        ServiceOrderPos.SETRANGE(Basisger„t,TRUE);
                                        ServiceOrderPos.SETRANGE("Geh”rt zu Lfd. Nr.","Geh”rt zu Lfd. Nr.");
                                        IF ServiceOrderPos.FINDFIRST THEN BEGIN
                                          IF Artikel.GET(ServiceOrderPos."Artikelnr.") THEN BEGIN
                                            IF Artikel."Item Tracking Code" = 'PRODUCTKEY' THEN
                                              seriennr := ServiceOrderPos."Product Key"
                                            ELSE
                                              seriennr := ServiceOrderPos."Seriennr.";
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;

                                  IF STRPOS(seriennr,'S/N: ') = 1 THEN
                                    seriennr := COPYSTR(seriennr,STRLEN('S/N: ')+1);
                                  IF STRPOS(seriennr,'S/N:') = 1 THEN
                                    seriennr := COPYSTR(seriennr,STRLEN('S/N:')+1);
                                  IF Fremderwerb THEN
                                    seriennr := seriennr + '*';
                                END;

               ReqFilterFields=BET-Nr. }

    { 3   ;2   ;Column  ;SystemeLogo_Firmendaten;
               SourceExpr=Firmendaten."Systeme Logo" }

    { 4   ;2   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;2;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000004;2;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2] }

    { 1000000003;2;Column;CompanyPostCodeCity;
               SourceExpr=CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;2;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;2;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;2;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;2;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;2;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;2;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;2;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;2;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;2;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;2;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 1000000001;2;Column;CompanyEORINr      ;
               SourceExpr=CompanyInfo[16] }

    { 5   ;2   ;Column  ;header_zusatz_PurchaseOrder;
               SourceExpr=header_zusatz + ' Purchase Order' }

    { 6   ;2   ;Column  ;EinkVonAdr8         ;
               SourceExpr=EinkVonAdr[8] }

    { 7   ;2   ;Column  ;EinkVonAdr7         ;
               SourceExpr=EinkVonAdr[7] }

    { 8   ;2   ;Column  ;EinkVonAdr6         ;
               SourceExpr=EinkVonAdr[6] }

    { 9   ;2   ;Column  ;EinkVonAdr5         ;
               SourceExpr=EinkVonAdr[5] }

    { 10  ;2   ;Column  ;EinkVonAdr4         ;
               SourceExpr=EinkVonAdr[4] }

    { 11  ;2   ;Column  ;EinkVonAdr3         ;
               SourceExpr=EinkVonAdr[3] }

    { 12  ;2   ;Column  ;EinkVonAdr2         ;
               SourceExpr=EinkVonAdr[2] }

    { 13  ;2   ;Column  ;EinkVonAdr1         ;
               SourceExpr=EinkVonAdr[1] }

    { 14  ;2   ;Column  ;vendorno            ;
               SourceExpr=vendorno }

    { 15  ;2   ;Column  ;orderno             ;
               SourceExpr=orderno }

    { 16  ;2   ;Column  ;docdate             ;
               SourceExpr=docdate }

    { 17  ;2   ;Column  ;STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_;
               SourceExpr=STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo)) }

    { 18  ;2   ;Column  ;service_price_total ;
               SourceExpr=service_price_total }

    { 19  ;2   ;Column  ;endkunde            ;
               SourceExpr=endkunde }

    { 20  ;2   ;Column  ;Debitorname_Serviceleist_Leihstellungen;
               SourceExpr=Debitorname }

    { 21  ;2   ;Column  ;Nummer              ;
               SourceExpr=Nummer }

    { 22  ;2   ;Column  ;ServiceArtikelnr_Serviceleist_Leihstellungen;
               SourceExpr="Service Artikelnr." }

    { 23  ;2   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 24  ;2   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(No.);
               DataItemLink=No.=FIELD(Artikelnr.) }

    { 25  ;3   ;Column  ;Menge_Serviceleist_Leihstellungen;
               DecimalPlaces=0:0;
               SourceExpr="Serviceleist. & Leihstellungen".Menge }

    { 26  ;3   ;Column  ;Serviceleist_LeihstellungenLizenzdatum__FORMAT_Serviceleist_;
               DecimalPlaces=0:0;
               SourceExpr=FORMAT("Serviceleist. & Leihstellungen".Lizenzdatum)+'...'+FORMAT("Serviceleist. & Leihstellungen"."Ablaufdatum Serviceleistung") }

    { 27  ;3   ;Column  ;Serviceleist_LeihstellungenMenge_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen".Menge*"Serviceleist. & Leihstellungen"."Service DC" }

    { 28  ;3   ;Column  ;ServiceDC_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Service DC" }

    { 29  ;3   ;Column  ;Artikelnr2_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Artikelnr. 2" }

    { 30  ;3   ;Column  ;seriennr            ;
               SourceExpr=seriennr }

    { 31  ;3   ;Column  ;quotenr             ;
               DecimalPlaces=0:0;
               SourceExpr=quotenr }

    { 32  ;2   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=BEGIN
                                  //IF (STRPOS("Serviceleist. & Leihstellungen"."SUP Artikelnr.",'ACTS')=0) THEN CurrReport.SKIP;
                                END;
                                 }

    { 33  ;1   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 34  ;2   ;DataItem;TOPAS Bemerkungen unten;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Wartungsvertrag),
                                       Andruck=FILTER(Text unten)) }

    { 35  ;2   ;DataItem;Bemerkung           ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Wartungs_Bemerkung.SETRANGE("Nr.","Serviceleist. & Leihstellungen"."Wartungsvertragsnr.");
                               Wartungs_Bemerkung.SETRANGE(Art,Wartungs_Bemerkung.Art :: Wartungsvertrag);
                               Wartungs_Bemerkung.SETRANGE(Andruck,Wartungs_Bemerkung.Andruck :: "Text unten");
                               SETRANGE(Number,1,Wartungs_Bemerkung.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    Wartungs_Bemerkung.FINDFIRST
                                  ELSE
                                    Wartungs_Bemerkung.NEXT;
                                  "TOPAS Bemerkungen unten" := Wartungs_Bemerkung;
                                END;
                                 }

    { 36  ;3   ;Column  ;Bemerkung_TOPASBemerkungenunten;
               SourceExpr="TOPAS Bemerkungen unten".Bemerkung }

    { 37  ;2   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 38  ;2   ;DataItem;                    ;
               DataItemTable=Table50011;
               DataItemTableView=SORTING(Wartungsvertragsnr.);
               DataItemLinkReference=Serviceleist. & Leihstellungen;
               DataItemLink=Wartungsvertragsnr.=FIELD(Wartungsvertragsnr.) }

    { 39  ;3   ;Column  ;EndkundeE_Mail_Wartungsvertrag;
               SourceExpr=Wartungsvertrag."Endkunde E-Mail" }

    { 40  ;3   ;Column  ;EndkundeTelefonnr_Wartungsvertrag;
               SourceExpr="Endkunde Telefonnr." }

    { 41  ;3   ;Column  ;EndkundeKontakt_Wartungsvertrag;
               SourceExpr="Endkunde Kontakt" }

    { 42  ;3   ;Column  ;EndkundeLand_Wartungsvertrag;
               SourceExpr="Endkunde Land" }

    { 44  ;3   ;Column  ;EndkundePLZ_Code_Ort_Wartungsvertrag;
               SourceExpr=Wartungsvertrag."Endkunde PLZ-Code" + ' ' + "Endkunde Ort" }

    { 45  ;3   ;Column  ;EndkundeAdresse_Wartungsvertrag;
               SourceExpr="Endkunde Adresse" }

    { 46  ;3   ;Column  ;Endkunde_Wartungsvertrag;
               SourceExpr=Endkunde }

    { 47  ;3   ;Column  ;Description_ZlgBed  ;
               SourceExpr=ZlgBed.Description }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Debitor@1140007 : Record 18;
      Artikel@1140008 : Record 27;
      Firmendaten@1140009 : Record 79;
      FIBUEinrichtung@1140006 : Record 98;
      Wartung@1140032 : Record 50011;
      LieferBed@1140003 : Record 10;
      ZlgBed@1140002 : Record 3;
      SalesHeader@1140018 : Record 36;
      PurchHeader@1140014 : Record 38;
      PurchShipHeader@1140022 : Record 120;
      ServiceOrderPos@1140030 : Record 50024;
      Opt@1140027 : Record 50001;
      Wartungs_Bemerkung@1140033 : Record 50023;
      Quote@1140036 : Record 50014;
      Language@1000000003 : Record 8;
      FormatAdr@1140020 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [20] OF Text;
      TotalText@1140004 : Text[50];
      EinkVonAdr@1000000002 : ARRAY [8] OF Text[50];
      service_price_total@1140013 : Decimal;
      Nummer@1140005 : Integer;
      w„hcode@1140015 : Code[20];
      termcode@1140021 : Code[20];
      shipcode@1140023 : Code[20];
      orderno@1140025 : Code[20];
      vendorno@1140024 : Code[20];
      laufzeit@1140028 : Code[10];
      seriennr@1140029 : Code[40];
      docdate@1140026 : Date;
      ansp_name@1140016 : Text[100];
      ansp_anrede@1140012 : Text[50];
      ansp_telefon@1140011 : Text[50];
      ansp_fax@1140010 : Text[50];
      ansp_email@1140017 : Text[80];
      header_zusatz@1140031 : Text[30];
      endkunde@1140034 : Text[50];
      quotenr@1140035 : Code[10];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_GroupHeader5@5010(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        Nummer += 1;
        endkunde := '';
        Wartung.GET("Wartungsvertragsnr.");
        endkunde := Wartung.Endkunde;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body9@5011(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        IF Quote.GET("Serviceleist. & Leihstellungen"."Quotenr.") THEN
          quotenr := Quote."Quotenr. Hersteller"
        ELSE
          quotenr := '';
        ReportForNav.ShowOutput(quotenr <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionWartungsvertrag_Footer11@5012(VAR Wartungsvertrag@1000000000 : Record 50011);
    BEGIN
      WITH Wartungsvertrag DO BEGIN
        ReportForNav.ShowOutput(Wartungsvertrag.Endkunde <> '');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': CASE SectionId OF
          'GroupHeader5': OnPreSectionServiceleist_Leihstellungen_GroupHeader5("Serviceleist. & Leihstellungen");
        END;
        'Item': CASE SectionId OF
          'Body9': OnPreSectionItem_Body9(Item);
        END;
        'Wartungsvertrag': CASE SectionId OF
          'Footer11': OnPreSectionWartungsvertrag_Footer11(Wartungsvertrag);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': WITH "Serviceleist. & Leihstellungen" DO CASE ForNavOperation OF
        END;  'SeiteSchleife': WITH SeiteSchleife DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,service_price_total);
              END;
           'Restore': BEGIN
                 service_price_total := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
39c6OQ2f01UuRhhlf/o/</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="SystemeLogo_Firmendaten">
          <DataField>SystemeLogo_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPostCodeCity">
          <DataField>CompanyPostCodeCity</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="header_zusatz_PurchaseOrder">
          <DataField>header_zusatz_PurchaseOrder</DataField>
        </Field>
        <Field Name="EinkVonAdr8">
          <DataField>EinkVonAdr8</DataField>
        </Field>
        <Field Name="EinkVonAdr7">
          <DataField>EinkVonAdr7</DataField>
        </Field>
        <Field Name="EinkVonAdr6">
          <DataField>EinkVonAdr6</DataField>
        </Field>
        <Field Name="EinkVonAdr5">
          <DataField>EinkVonAdr5</DataField>
        </Field>
        <Field Name="EinkVonAdr4">
          <DataField>EinkVonAdr4</DataField>
        </Field>
        <Field Name="EinkVonAdr3">
          <DataField>EinkVonAdr3</DataField>
        </Field>
        <Field Name="EinkVonAdr2">
          <DataField>EinkVonAdr2</DataField>
        </Field>
        <Field Name="EinkVonAdr1">
          <DataField>EinkVonAdr1</DataField>
        </Field>
        <Field Name="vendorno">
          <DataField>vendorno</DataField>
        </Field>
        <Field Name="orderno">
          <DataField>orderno</DataField>
        </Field>
        <Field Name="docdate">
          <DataField>docdate</DataField>
        </Field>
        <Field Name="STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_">
          <DataField>STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_</DataField>
        </Field>
        <Field Name="service_price_total">
          <DataField>service_price_total</DataField>
        </Field>
        <Field Name="service_price_totalFormat">
          <DataField>service_price_totalFormat</DataField>
        </Field>
        <Field Name="endkunde">
          <DataField>endkunde</DataField>
        </Field>
        <Field Name="Debitorname_Serviceleist_Leihstellungen">
          <DataField>Debitorname_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Nummer">
          <DataField>Nummer</DataField>
        </Field>
        <Field Name="ServiceArtikelnr_Serviceleist_Leihstellungen">
          <DataField>ServiceArtikelnr_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="Menge_Serviceleist_Leihstellungen">
          <DataField>Menge_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Menge_Serviceleist_LeihstellungenFormat">
          <DataField>Menge_Serviceleist_LeihstellungenFormat</DataField>
        </Field>
        <Field Name="Serviceleist_LeihstellungenLizenzdatum__FORMAT_Serviceleist_">
          <DataField>Serviceleist_LeihstellungenLizenzdatum__FORMAT_Serviceleist_</DataField>
        </Field>
        <Field Name="Serviceleist_LeihstellungenMenge_Serviceleist_Leihstellungen">
          <DataField>Serviceleist_LeihstellungenMenge_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Serviceleist_LeihstellungenMenge_Serviceleist_LeihstellungenFormat">
          <DataField>Serviceleist_LeihstellungenMenge_Serviceleist_LeihstellungenFormat</DataField>
        </Field>
        <Field Name="ServiceDC_Serviceleist_Leihstellungen">
          <DataField>ServiceDC_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="ServiceDC_Serviceleist_LeihstellungenFormat">
          <DataField>ServiceDC_Serviceleist_LeihstellungenFormat</DataField>
        </Field>
        <Field Name="Artikelnr2_Serviceleist_Leihstellungen">
          <DataField>Artikelnr2_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="seriennr">
          <DataField>seriennr</DataField>
        </Field>
        <Field Name="quotenr">
          <DataField>quotenr</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungenunten">
          <DataField>Bemerkung_TOPASBemerkungenunten</DataField>
        </Field>
        <Field Name="EndkundeE_Mail_Wartungsvertrag">
          <DataField>EndkundeE_Mail_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundeTelefonnr_Wartungsvertrag">
          <DataField>EndkundeTelefonnr_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundeKontakt_Wartungsvertrag">
          <DataField>EndkundeKontakt_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundeLand_Wartungsvertrag">
          <DataField>EndkundeLand_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundePLZ_Code_Ort_Wartungsvertrag">
          <DataField>EndkundePLZ_Code_Ort_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundeAdresse_Wartungsvertrag">
          <DataField>EndkundeAdresse_Wartungsvertrag</DataField>
        </Field>
        <Field Name="Endkunde_Wartungsvertrag">
          <DataField>Endkunde_Wartungsvertrag</DataField>
        </Field>
        <Field Name="Description_ZlgBed">
          <DataField>Description_ZlgBed</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

