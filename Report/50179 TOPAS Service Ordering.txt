OBJECT Report 50179 TOPAS Service Ordering
{
  OBJECT-PROPERTIES
  {
    Date=17.10.18;
    Time=14:02:08;
    Modified=Yes;
    Version List=fertig,FORNAV3.1.0.1460/1460;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                                                                                                                               ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table50024;
               DataItemTableView=SORTING(Wartungsvertragsnr.,Service Artikelnr.)
                                 WHERE(Art=FILTER(Service),
                                       Inaktiv=FILTER(No));
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo","Systeme Logo");
                               Nummer := 0;
                               TotalText := '';
                               //CREATETOTALS(champ_price_total);
                             END;

               OnAfterGetRecord=BEGIN
                                  PurchHeader.RESET;
                                  PurchHeader.SETRANGE("No.","Serviceleist. & Leihstellungen"."BET-Nr.");
                                  IF PurchHeader.FINDFIRST THEN BEGIN
                                    w„hcode  := PurchHeader."Currency Code";
                                    termcode := PurchHeader."Payment Terms Code";
                                    shipcode := PurchHeader."Shipment Method Code";
                                    orderno  := PurchHeader."No.";
                                    vendorno := PurchHeader."Buy-from Vendor No.";
                                    docdate  := PurchHeader."Document Date";
                                    FormatAdr.PurchHeaderBuyFrom(EinkVonAdr,PurchHeader);
                                    CurrReport.LANGUAGE := Language.GetLanguageID(PurchHeader."Language Code");
                                  END ELSE BEGIN
                                    PurchShipHeader.RESET;
                                    PurchShipHeader.SETRANGE("Order No.","Serviceleist. & Leihstellungen"."BET-Nr.");
                                    IF PurchShipHeader.FINDLAST THEN BEGIN
                                      w„hcode  := PurchShipHeader."Currency Code";
                                      termcode := PurchShipHeader."Payment Terms Code";
                                      shipcode := PurchShipHeader."Shipment Method Code";
                                      orderno  := PurchShipHeader."Order No.";
                                      vendorno := PurchShipHeader."Buy-from Vendor No.";
                                      docdate  := PurchShipHeader."Document Date";
                                      FormatAdr.PurchRcptBuyFrom(EinkVonAdr,PurchShipHeader);
                                      CurrReport.LANGUAGE := Language.GetLanguageID(PurchShipHeader."Language Code");
                                    END ELSE
                                      ERROR('Bestellung konnte nicht gefunden werden.');
                                  END;

                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  service_price_total := service_price_total + (Menge * "Service DC");
                                  IF termcode = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET(termcode);
                                  IF shipcode = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET(shipcode);
                                  IF w„hcode = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',w„hcode);
                                  END;
                                  Artikel.GET("SUP Artikelnr.");
                                  IF Artikel.Artikelgruppe = 'CHAMPS' THEN
                                    header_zusatz := 'Champs'
                                  ELSE
                                    IF (Artikel.Artikelgruppe = 'ACTS') OR (Artikel.Artikelgruppe = 'ACTS_AHR') OR (Artikel.Artikelgruppe = 'ACTS/ACHAT')
                                    OR (Artikel.Artikelgruppe = 'ACTS_SCHAEFFLER') OR (Artikel.Artikelgruppe = 'ACTS_MSS_SCHAEFFLER')
                                    OR (Artikel.Artikelgruppe = 'ACTS_MSS') OR (Artikel.Artikelgruppe = 'ACHAT') THEN
                                      header_zusatz := 'ACTS'
                                    ELSE
                                      header_zusatz := '';

                                  seriennr := "Seriennr.";

                                  IF Artikel.GET("Artikelnr.") THEN BEGIN
                                    IF "Seriennr." <> '' THEN BEGIN
                                      IF (Artikel."Item Tracking Code" = 'PRODUCTKEY') OR ((Artikel."Item Tracking Code" = 'SN-ODER-PK') AND ((STRPOS("Seriennr.",'NODATA') <> 0) OR (STRPOS("Seriennr.",'VT') = 1))) THEN
                                        seriennr := "Product Key";
                                    END ELSE BEGIN
                                      IF Artikel."Item Tracking Code" = 'PRODUCTKEY' THEN
                                        seriennr := "Product Key";
                                      IF (Artikel.Serviceklassifizierung = 'SOFTWARE') OR (Artikel.Serviceklassifizierung = 'KEINE') THEN BEGIN
                                        ServiceOrderPos.RESET;
                                        ServiceOrderPos.SETRANGE("Wartungsvertragsnr.","Wartungsvertragsnr.");
                                        ServiceOrderPos.SETRANGE(Basisger„t,TRUE);
                                        ServiceOrderPos.SETRANGE("Geh”rt zu Lfd. Nr.","Geh”rt zu Lfd. Nr.");
                                        IF ServiceOrderPos.FINDFIRST THEN BEGIN
                                          IF Artikel.GET(ServiceOrderPos."Artikelnr.") THEN BEGIN
                                            IF Artikel."Item Tracking Code" = 'PRODUCTKEY' THEN
                                              seriennr := ServiceOrderPos."Product Key"
                                            ELSE
                                              seriennr := ServiceOrderPos."Seriennr.";
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;

                                  IF STRPOS(seriennr,'S/N: ') = 1 THEN
                                    seriennr := COPYSTR(seriennr,STRLEN('S/N: ')+1);
                                  IF STRPOS(seriennr,'S/N:') = 1 THEN
                                    seriennr := COPYSTR(seriennr,STRLEN('S/N:')+1);
                                  IF Fremderwerb THEN
                                    seriennr := seriennr + '*';
                                END;

               ReqFilterFields=BET-Nr. }

    { 3   ;2   ;Column  ;SystemeLogo_Firmendaten;
               SourceExpr=Firmendaten."Systeme Logo" }

    { 4   ;2   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;2;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000004;2;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2] }

    { 1000000003;2;Column;CompanyPostCodeCity;
               SourceExpr=CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;2;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;2;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;2;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;2;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;2;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;2;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;2;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;2;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;2;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;2;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 5   ;2   ;Column  ;header_zusatz_PurchaseOrder;
               SourceExpr=header_zusatz + ' Purchase Order' }

    { 6   ;2   ;Column  ;EinkVonAdr8         ;
               SourceExpr=EinkVonAdr[8] }

    { 7   ;2   ;Column  ;EinkVonAdr7         ;
               SourceExpr=EinkVonAdr[7] }

    { 8   ;2   ;Column  ;EinkVonAdr6         ;
               SourceExpr=EinkVonAdr[6] }

    { 9   ;2   ;Column  ;EinkVonAdr5         ;
               SourceExpr=EinkVonAdr[5] }

    { 10  ;2   ;Column  ;EinkVonAdr4         ;
               SourceExpr=EinkVonAdr[4] }

    { 11  ;2   ;Column  ;EinkVonAdr3         ;
               SourceExpr=EinkVonAdr[3] }

    { 12  ;2   ;Column  ;EinkVonAdr2         ;
               SourceExpr=EinkVonAdr[2] }

    { 13  ;2   ;Column  ;EinkVonAdr1         ;
               SourceExpr=EinkVonAdr[1] }

    { 14  ;2   ;Column  ;vendorno            ;
               SourceExpr=vendorno }

    { 15  ;2   ;Column  ;orderno             ;
               SourceExpr=orderno }

    { 16  ;2   ;Column  ;docdate             ;
               SourceExpr=docdate }

    { 17  ;2   ;Column  ;STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_;
               SourceExpr=STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo)) }

    { 18  ;2   ;Column  ;service_price_total ;
               SourceExpr=service_price_total }

    { 19  ;2   ;Column  ;endkunde            ;
               SourceExpr=endkunde }

    { 20  ;2   ;Column  ;Debitorname_Serviceleist_Leihstellungen;
               SourceExpr=Debitorname }

    { 21  ;2   ;Column  ;Nummer              ;
               SourceExpr=Nummer }

    { 22  ;2   ;Column  ;ServiceArtikelnr_Serviceleist_Leihstellungen;
               SourceExpr="Service Artikelnr." }

    { 23  ;2   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 24  ;2   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(No.);
               DataItemLink=No.=FIELD(Artikelnr.) }

    { 25  ;3   ;Column  ;Menge_Serviceleist_Leihstellungen;
               DecimalPlaces=0:0;
               SourceExpr="Serviceleist. & Leihstellungen".Menge }

    { 26  ;3   ;Column  ;Serviceleist_LeihstellungenLizenzdatum__FORMAT_Serviceleist_;
               DecimalPlaces=0:0;
               SourceExpr=FORMAT("Serviceleist. & Leihstellungen".Lizenzdatum)+'...'+FORMAT("Serviceleist. & Leihstellungen"."Ablaufdatum Serviceleistung") }

    { 27  ;3   ;Column  ;Serviceleist_LeihstellungenMenge_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen".Menge*"Serviceleist. & Leihstellungen"."Service DC" }

    { 28  ;3   ;Column  ;ServiceDC_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Service DC" }

    { 29  ;3   ;Column  ;Artikelnr2_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Artikelnr. 2" }

    { 30  ;3   ;Column  ;seriennr            ;
               SourceExpr=seriennr }

    { 31  ;3   ;Column  ;quotenr             ;
               DecimalPlaces=0:0;
               SourceExpr=quotenr }

    { 32  ;2   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnAfterGetRecord=BEGIN
                                  //IF (STRPOS("Serviceleist. & Leihstellungen"."SUP Artikelnr.",'ACTS')=0) THEN CurrReport.SKIP;
                                END;
                                 }

    { 33  ;1   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 34  ;2   ;DataItem;TOPAS Bemerkungen unten;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Wartungsvertrag),
                                       Andruck=FILTER(Text unten)) }

    { 35  ;2   ;DataItem;Bemerkung           ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Wartungs_Bemerkung.SETRANGE("Nr.","Serviceleist. & Leihstellungen"."Wartungsvertragsnr.");
                               Wartungs_Bemerkung.SETRANGE(Art,Wartungs_Bemerkung.Art :: Wartungsvertrag);
                               Wartungs_Bemerkung.SETRANGE(Andruck,Wartungs_Bemerkung.Andruck :: "Text unten");
                               SETRANGE(Number,1,Wartungs_Bemerkung.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    Wartungs_Bemerkung.FINDFIRST
                                  ELSE
                                    Wartungs_Bemerkung.NEXT;
                                  "TOPAS Bemerkungen unten" := Wartungs_Bemerkung;
                                END;
                                 }

    { 36  ;3   ;Column  ;Bemerkung_TOPASBemerkungenunten;
               SourceExpr="TOPAS Bemerkungen unten".Bemerkung }

    { 37  ;2   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 38  ;2   ;DataItem;                    ;
               DataItemTable=Table50011;
               DataItemTableView=SORTING(Wartungsvertragsnr.);
               DataItemLinkReference=Serviceleist. & Leihstellungen;
               DataItemLink=Wartungsvertragsnr.=FIELD(Wartungsvertragsnr.) }

    { 39  ;3   ;Column  ;EndkundeE_Mail_Wartungsvertrag;
               SourceExpr=Wartungsvertrag."Endkunde E-Mail" }

    { 40  ;3   ;Column  ;EndkundeTelefonnr_Wartungsvertrag;
               SourceExpr="Endkunde Telefonnr." }

    { 41  ;3   ;Column  ;EndkundeKontakt_Wartungsvertrag;
               SourceExpr="Endkunde Kontakt" }

    { 42  ;3   ;Column  ;EndkundeLand_Wartungsvertrag;
               SourceExpr="Endkunde Land" }

    { 44  ;3   ;Column  ;EndkundePLZ_Code_Ort_Wartungsvertrag;
               SourceExpr=Wartungsvertrag."Endkunde PLZ-Code" + ' ' + "Endkunde Ort" }

    { 45  ;3   ;Column  ;EndkundeAdresse_Wartungsvertrag;
               SourceExpr="Endkunde Adresse" }

    { 46  ;3   ;Column  ;Endkunde_Wartungsvertrag;
               SourceExpr=Endkunde }

    { 47  ;3   ;Column  ;Description_ZlgBed  ;
               SourceExpr=ZlgBed.Description }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Debitor@1140007 : Record 18;
      Artikel@1140008 : Record 27;
      Firmendaten@1140009 : Record 79;
      FIBUEinrichtung@1140006 : Record 98;
      Wartung@1140032 : Record 50011;
      LieferBed@1140003 : Record 10;
      ZlgBed@1140002 : Record 3;
      SalesHeader@1140018 : Record 36;
      PurchHeader@1140014 : Record 38;
      PurchShipHeader@1140022 : Record 120;
      ServiceOrderPos@1140030 : Record 50024;
      Opt@1140027 : Record 50001;
      Wartungs_Bemerkung@1140033 : Record 50023;
      Quote@1140036 : Record 50014;
      Language@1000000003 : Record 8;
      FormatAdr@1140020 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      TotalText@1140004 : Text[50];
      EinkVonAdr@1000000002 : ARRAY [8] OF Text[50];
      service_price_total@1140013 : Decimal;
      Nummer@1140005 : Integer;
      w„hcode@1140015 : Code[20];
      termcode@1140021 : Code[20];
      shipcode@1140023 : Code[20];
      orderno@1140025 : Code[20];
      vendorno@1140024 : Code[20];
      laufzeit@1140028 : Code[10];
      seriennr@1140029 : Code[40];
      docdate@1140026 : Date;
      ansp_name@1140016 : Text[100];
      ansp_anrede@1140012 : Text[50];
      ansp_telefon@1140011 : Text[50];
      ansp_fax@1140010 : Text[50];
      ansp_email@1140017 : Text[80];
      header_zusatz@1140031 : Text[30];
      endkunde@1140034 : Text[50];
      quotenr@1140035 : Code[10];
      ReportForNav@5000 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_GroupHeader5@5010(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        Nummer += 1;
        endkunde := '';
        Wartung.GET("Wartungsvertragsnr.");
        endkunde := Wartung.Endkunde;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body9@5011(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        IF Quote.GET("Serviceleist. & Leihstellungen"."Quotenr.") THEN
          quotenr := Quote."Quotenr. Hersteller"
        ELSE
          quotenr := '';
        ReportForNav.ShowOutput(quotenr <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionWartungsvertrag_Footer11@5012(VAR Wartungsvertrag@1000000000 : Record 50011);
    BEGIN
      WITH Wartungsvertrag DO BEGIN
        ReportForNav.ShowOutput(Wartungsvertrag.Endkunde <> '');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': CASE SectionId OF
          'GroupHeader5': OnPreSectionServiceleist_Leihstellungen_GroupHeader5("Serviceleist. & Leihstellungen");
        END;
        'Item': CASE SectionId OF
          'Body9': OnPreSectionItem_Body9(Item);
        END;
        'Wartungsvertrag': CASE SectionId OF
          'Footer11': OnPreSectionWartungsvertrag_Footer11(Wartungsvertrag);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5014(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5015();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': WITH "Serviceleist. & Leihstellungen" DO CASE Operation OF
        END;  'SeiteSchleife': WITH SeiteSchleife DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,service_price_total);
              END;
           'Restore': BEGIN
                 service_price_total := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="SystemeLogo_Firmendaten">
          <DataField>SystemeLogo_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPostCodeCity">
          <DataField>CompanyPostCodeCity</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="header_zusatz_PurchaseOrder">
          <DataField>header_zusatz_PurchaseOrder</DataField>
        </Field>
        <Field Name="EinkVonAdr8">
          <DataField>EinkVonAdr8</DataField>
        </Field>
        <Field Name="EinkVonAdr7">
          <DataField>EinkVonAdr7</DataField>
        </Field>
        <Field Name="EinkVonAdr6">
          <DataField>EinkVonAdr6</DataField>
        </Field>
        <Field Name="EinkVonAdr5">
          <DataField>EinkVonAdr5</DataField>
        </Field>
        <Field Name="EinkVonAdr4">
          <DataField>EinkVonAdr4</DataField>
        </Field>
        <Field Name="EinkVonAdr3">
          <DataField>EinkVonAdr3</DataField>
        </Field>
        <Field Name="EinkVonAdr2">
          <DataField>EinkVonAdr2</DataField>
        </Field>
        <Field Name="EinkVonAdr1">
          <DataField>EinkVonAdr1</DataField>
        </Field>
        <Field Name="vendorno">
          <DataField>vendorno</DataField>
        </Field>
        <Field Name="orderno">
          <DataField>orderno</DataField>
        </Field>
        <Field Name="docdate">
          <DataField>docdate</DataField>
        </Field>
        <Field Name="STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_">
          <DataField>STRSUBSTNO_PagePct1_FORMAT_ReportForNavPageNo_</DataField>
        </Field>
        <Field Name="service_price_total">
          <DataField>service_price_total</DataField>
        </Field>
        <Field Name="service_price_totalFormat">
          <DataField>service_price_totalFormat</DataField>
        </Field>
        <Field Name="endkunde">
          <DataField>endkunde</DataField>
        </Field>
        <Field Name="Debitorname_Serviceleist_Leihstellungen">
          <DataField>Debitorname_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Nummer">
          <DataField>Nummer</DataField>
        </Field>
        <Field Name="ServiceArtikelnr_Serviceleist_Leihstellungen">
          <DataField>ServiceArtikelnr_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="Menge_Serviceleist_Leihstellungen">
          <DataField>Menge_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Menge_Serviceleist_LeihstellungenFormat">
          <DataField>Menge_Serviceleist_LeihstellungenFormat</DataField>
        </Field>
        <Field Name="Serviceleist_LeihstellungenLizenzdatum__FORMAT_Serviceleist_">
          <DataField>Serviceleist_LeihstellungenLizenzdatum__FORMAT_Serviceleist_</DataField>
        </Field>
        <Field Name="Serviceleist_LeihstellungenMenge_Serviceleist_Leihstellungen">
          <DataField>Serviceleist_LeihstellungenMenge_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Serviceleist_LeihstellungenMenge_Serviceleist_LeihstellungenFormat">
          <DataField>Serviceleist_LeihstellungenMenge_Serviceleist_LeihstellungenFormat</DataField>
        </Field>
        <Field Name="ServiceDC_Serviceleist_Leihstellungen">
          <DataField>ServiceDC_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="ServiceDC_Serviceleist_LeihstellungenFormat">
          <DataField>ServiceDC_Serviceleist_LeihstellungenFormat</DataField>
        </Field>
        <Field Name="Artikelnr2_Serviceleist_Leihstellungen">
          <DataField>Artikelnr2_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="seriennr">
          <DataField>seriennr</DataField>
        </Field>
        <Field Name="quotenr">
          <DataField>quotenr</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungenunten">
          <DataField>Bemerkung_TOPASBemerkungenunten</DataField>
        </Field>
        <Field Name="EndkundeE_Mail_Wartungsvertrag">
          <DataField>EndkundeE_Mail_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundeTelefonnr_Wartungsvertrag">
          <DataField>EndkundeTelefonnr_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundeKontakt_Wartungsvertrag">
          <DataField>EndkundeKontakt_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundeLand_Wartungsvertrag">
          <DataField>EndkundeLand_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundePLZ_Code_Ort_Wartungsvertrag">
          <DataField>EndkundePLZ_Code_Ort_Wartungsvertrag</DataField>
        </Field>
        <Field Name="EndkundeAdresse_Wartungsvertrag">
          <DataField>EndkundeAdresse_Wartungsvertrag</DataField>
        </Field>
        <Field Name="Endkunde_Wartungsvertrag">
          <DataField>Endkunde_Wartungsvertrag</DataField>
        </Field>
        <Field Name="Description_ZlgBed">
          <DataField>Description_ZlgBed</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

