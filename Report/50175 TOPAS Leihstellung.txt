OBJECT Report 50175 TOPAS Leihstellung
{
  OBJECT-PROPERTIES
  {
    Date=22.03.18;
    Time=16:27:36;
    Modified=Yes;
    Version List=fertig,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav := ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner := ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50024;
               DataItemTableView=WHERE(Art=FILTER(Leihstellung));
               OnPreDataItem=BEGIN
                               Nummer := 0;
                               vkkopf_text := '';
                               status_text := '';
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo",Picture);
                             END;

               OnAfterGetRecord=BEGIN
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF (Art = Art :: Leihstellung) THEN
                                    vkkopf_text := 'Leihstellung';
                                  IF "Serviceleist. & Leihstellungen"."Leihstellung zurck" = TRUE THEN
                                    status_text := 'Abgeschlossen!!!';
                                END;

               ReqFilterFields=Geh”rt zu Lfd. Nr. }

    { 1000000003;1;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 2   ;1   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;1;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;1;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;1;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;1;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;1;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;1;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;1;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;1;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;1;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;1;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;1;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;1;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 3   ;1   ;Column  ;status_text         ;
               SourceExpr=status_text }

    { 4   ;1   ;Column  ;vkkopf_text         ;
               SourceExpr=vkkopf_text }

    { 5   ;1   ;Column  ;Debitornr_Serviceleist_Leihstellungen;
               SourceExpr="Debitornr." }

    { 6   ;1   ;Column  ;Belegdatum          ;
               SourceExpr=Belegdatum }

    { 7   ;1   ;Column  ;GehortzuLfdNr_Serviceleist_Leihstellungen;
               SourceExpr="Geh”rt zu Lfd. Nr." }

    { 8   ;1   ;Column  ;Zeile4              ;
               SourceExpr=Zeile4 }

    { 9   ;1   ;Column  ;Ort_Serviceleist_Leihstellungen;
               SourceExpr=Ort }

    { 10  ;1   ;Column  ;PLZ_Code_Serviceleist_Leihstellungen;
               SourceExpr="PLZ-Code" }

    { 11  ;1   ;Column  ;Zeile3              ;
               SourceExpr=Zeile3 }

    { 12  ;1   ;Column  ;Zeile2              ;
               SourceExpr=Zeile2 }

    { 13  ;1   ;Column  ;Zeile1              ;
               SourceExpr=Zeile1 }

    { 14  ;1   ;Column  ;Text1_Serviceleist_Leihstellungen;
               SourceExpr=Text1 }

    { 15  ;1   ;Column  ;Text2_Serviceleist_Leihstellungen;
               SourceExpr=Text2 }

    { 16  ;1   ;DataItem;TOPAS Bemerkungen oben;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Leihstellung),
                                       Andruck=FILTER(Text oben));
               DataItemLink=Nr.=FIELD(Lfd. Nr.) }

    { 17  ;2   ;Column  ;Bemerkung_TOPASBemerkungenoben;
               SourceExpr=Bemerkung }

    { 18  ;1   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(No.);
               DataItemLink=No.=FIELD(Artikelnr.) }

    { 19  ;2   ;Column  ;Menge_Serviceleist_Leihstellungen;
               DecimalPlaces=0:0;
               SourceExpr="Serviceleist. & Leihstellungen".Menge }

    { 20  ;2   ;Column  ;Seriennr_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Seriennr." }

    { 21  ;2   ;Column  ;Nummer              ;
               SourceExpr=Nummer }

    { 22  ;2   ;Column  ;Artikelnr2_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Artikelnr. 2" }

    { 23  ;1   ;DataItem;TOPAS Bemerkungen unten;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Leihstellung),
                                       Andruck=FILTER(Text unten));
               DataItemLink=Nr.=FIELD(Lfd. Nr.) }

    { 24  ;2   ;Column  ;Bemerkung_TOPASBemerkungenunten;
               SourceExpr=Bemerkung }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Firmendaten@1000000002 : Record 79;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      vkkopf_text@1140000 : Text[50];
      Zeile1@1140001 : Text[50];
      Zeile2@1140002 : Text[50];
      Zeile3@1140003 : Text[50];
      Zeile4@1140004 : Text[50];
      Nummer@1140005 : Integer;
      status_text@1140006 : Text[50];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header1@5102(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        IF ((Debitorname <> '') AND ("Name 2" <> '') AND (Adresse <> '') AND ("Adresse 2" <> '')) THEN BEGIN
          Zeile1 := Debitorname;
          Zeile2 := "Name 2";
          Zeile3 := Adresse;
          Zeile4 := "Adresse 2";
        END;
        IF (("Name 2" = '') AND (Debitorname <> '') AND (Adresse <> '') AND ("Adresse 2" <> ''))  THEN BEGIN
          Zeile1 := '';
          Zeile2 := Debitorname;
          Zeile3 := Adresse;
          Zeile4 := "Adresse 2";
        END;
        IF (("Adresse 2" = '') AND (Debitorname <> '') AND ("Name 2" <> '') AND (Adresse <> '')) THEN BEGIN
          Zeile1 := '';
          Zeile2 := Debitorname;
          Zeile3 := "Name 2";
          Zeile4 := Adresse;
        END;
        IF (("Name 2" = '') AND ("Adresse 2" = '') AND (Debitorname <> '') AND (Adresse <> '')) THEN BEGIN
          Zeile1 := '';
          Zeile2 := '';
          Zeile3 := Debitorname;
          Zeile4 := Adresse;
        END;
        IF ((Adresse = '') AND ("Adresse 2" <> '') AND (Debitorname <> '') AND ("Name 2" <> '')) THEN BEGIN
          Zeile1 := '';
          Zeile2 := Debitorname;
          Zeile3 := "Name 2";
          Zeile4 := "Adresse 2"
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header2@5103(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput(Text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header3@5104(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput(Text2 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body7@5105(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        Nummer += 1;
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': CASE SectionId OF
          'Header1': OnPreSectionServiceleist_Leihstellungen_Header1("Serviceleist. & Leihstellungen");
          'Header2': OnPreSectionServiceleist_Leihstellungen_Header2("Serviceleist. & Leihstellungen");
          'Header3': OnPreSectionServiceleist_Leihstellungen_Header3("Serviceleist. & Leihstellungen");
        END;
        'Item': CASE SectionId OF
          'Body7': OnPreSectionItem_Body7(Item);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>1e93d697-70d5-4e30-9b7b-397645d2bbd5</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>dfb28d6f-a18e-40de-a7d1-48841e4342d9</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="status_text">
          <DataField>status_text</DataField>
        </Field>
        <Field Name="vkkopf_text">
          <DataField>vkkopf_text</DataField>
        </Field>
        <Field Name="Debitornr_Serviceleist_Leihstellungen">
          <DataField>Debitornr_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Belegdatum">
          <DataField>Belegdatum</DataField>
        </Field>
        <Field Name="GehortzuLfdNr_Serviceleist_Leihstellungen">
          <DataField>GehortzuLfdNr_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Zeile4">
          <DataField>Zeile4</DataField>
        </Field>
        <Field Name="Ort_Serviceleist_Leihstellungen">
          <DataField>Ort_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="PLZ_Code_Serviceleist_Leihstellungen">
          <DataField>PLZ_Code_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Zeile3">
          <DataField>Zeile3</DataField>
        </Field>
        <Field Name="Zeile2">
          <DataField>Zeile2</DataField>
        </Field>
        <Field Name="Zeile1">
          <DataField>Zeile1</DataField>
        </Field>
        <Field Name="Text1_Serviceleist_Leihstellungen">
          <DataField>Text1_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Text2_Serviceleist_Leihstellungen">
          <DataField>Text2_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungenoben">
          <DataField>Bemerkung_TOPASBemerkungenoben</DataField>
        </Field>
        <Field Name="Menge_Serviceleist_Leihstellungen">
          <DataField>Menge_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Menge_Serviceleist_LeihstellungenFormat">
          <DataField>Menge_Serviceleist_LeihstellungenFormat</DataField>
        </Field>
        <Field Name="Seriennr_Serviceleist_Leihstellungen">
          <DataField>Seriennr_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Nummer">
          <DataField>Nummer</DataField>
        </Field>
        <Field Name="Artikelnr2_Serviceleist_Leihstellungen">
          <DataField>Artikelnr2_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungenunten">
          <DataField>Bemerkung_TOPASBemerkungenunten</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

