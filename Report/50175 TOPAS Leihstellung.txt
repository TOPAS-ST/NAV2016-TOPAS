OBJECT Report 50175 TOPAS Leihstellung
{
  OBJECT-PROPERTIES
  {
    Date=07.02.18;
    Time=11:34:20;
    Modified=Yes;
    Version List=fertig,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav := ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner := ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50024;
               DataItemTableView=WHERE(Art=FILTER(Leihstellung));
               OnPreDataItem=BEGIN
                               Nummer := 0;
                               vkkopf_text := '';
                               status_text := '';
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                             END;

               OnAfterGetRecord=BEGIN
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF (Art = Art :: Leihstellung) THEN
                                    vkkopf_text := 'Leihstellung';
                                  IF "Serviceleist. & Leihstellungen"."Leihstellung zurck" = TRUE THEN
                                    status_text := 'Abgeschlossen!!!';
                                END;

               ReqFilterFields=Geh”rt zu Lfd. Nr. }

    { 2   ;1   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;1;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;1;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ', ' + CompanyInfo[5] }

    { 1000000005;1;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;1;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;1;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;1;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;1;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;1;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;1;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;1;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;1;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;1;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 3   ;1   ;Column  ;status_text         ;
               SourceExpr=status_text }

    { 4   ;1   ;Column  ;vkkopf_text         ;
               SourceExpr=vkkopf_text }

    { 5   ;1   ;Column  ;Debitornr_Serviceleist_Leihstellungen;
               SourceExpr="Debitornr." }

    { 6   ;1   ;Column  ;Belegdatum          ;
               SourceExpr=Belegdatum }

    { 7   ;1   ;Column  ;GehortzuLfdNr_Serviceleist_Leihstellungen;
               SourceExpr="Geh”rt zu Lfd. Nr." }

    { 8   ;1   ;Column  ;Zeile4              ;
               SourceExpr=Zeile4 }

    { 9   ;1   ;Column  ;Ort_Serviceleist_Leihstellungen;
               SourceExpr=Ort }

    { 10  ;1   ;Column  ;PLZ_Code_Serviceleist_Leihstellungen;
               SourceExpr="PLZ-Code" }

    { 11  ;1   ;Column  ;Zeile3              ;
               SourceExpr=Zeile3 }

    { 12  ;1   ;Column  ;Zeile2              ;
               SourceExpr=Zeile2 }

    { 13  ;1   ;Column  ;Zeile1              ;
               SourceExpr=Zeile1 }

    { 14  ;1   ;Column  ;Text1_Serviceleist_Leihstellungen;
               SourceExpr=Text1 }

    { 15  ;1   ;Column  ;Text2_Serviceleist_Leihstellungen;
               SourceExpr=Text2 }

    { 16  ;1   ;DataItem;TOPAS Bemerkungen oben;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Leihstellung),
                                       Andruck=FILTER(Text oben));
               DataItemLink=Nr.=FIELD(Lfd. Nr.) }

    { 17  ;2   ;Column  ;Bemerkung_TOPASBemerkungenoben;
               SourceExpr=Bemerkung }

    { 18  ;1   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(No.);
               DataItemLink=No.=FIELD(Artikelnr.) }

    { 19  ;2   ;Column  ;Menge_Serviceleist_Leihstellungen;
               DecimalPlaces=0:0;
               SourceExpr="Serviceleist. & Leihstellungen".Menge }

    { 20  ;2   ;Column  ;Seriennr_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Seriennr." }

    { 21  ;2   ;Column  ;Nummer              ;
               SourceExpr=Nummer }

    { 22  ;2   ;Column  ;Artikelnr2_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Artikelnr. 2" }

    { 23  ;1   ;DataItem;TOPAS Bemerkungen unten;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Leihstellung),
                                       Andruck=FILTER(Text unten));
               DataItemLink=Nr.=FIELD(Lfd. Nr.) }

    { 24  ;2   ;Column  ;Bemerkung_TOPASBemerkungenunten;
               SourceExpr=Bemerkung }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Firmendaten@1000000002 : Record 79;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      vkkopf_text@1140000 : Text[50];
      Zeile1@1140001 : Text[50];
      Zeile2@1140002 : Text[50];
      Zeile3@1140003 : Text[50];
      Zeile4@1140004 : Text[50];
      Nummer@1140005 : Integer;
      status_text@1140006 : Text[50];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header1@5102(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        IF ((Debitorname <> '') AND ("Name 2" <> '') AND (Adresse <> '') AND ("Adresse 2" <> '')) THEN BEGIN
          Zeile1 := Debitorname;
          Zeile2 := "Name 2";
          Zeile3 := Adresse;
          Zeile4 := "Adresse 2";
        END;
        IF (("Name 2" = '') AND (Debitorname <> '') AND (Adresse <> '') AND ("Adresse 2" <> ''))  THEN BEGIN
          Zeile1 := '';
          Zeile2 := Debitorname;
          Zeile3 := Adresse;
          Zeile4 := "Adresse 2";
        END;
        IF (("Adresse 2" = '') AND (Debitorname <> '') AND ("Name 2" <> '') AND (Adresse <> '')) THEN BEGIN
          Zeile1 := '';
          Zeile2 := Debitorname;
          Zeile3 := "Name 2";
          Zeile4 := Adresse;
        END;
        IF (("Name 2" = '') AND ("Adresse 2" = '') AND (Debitorname <> '') AND (Adresse <> '')) THEN BEGIN
          Zeile1 := '';
          Zeile2 := '';
          Zeile3 := Debitorname;
          Zeile4 := Adresse;
        END;
        IF ((Adresse = '') AND ("Adresse 2" <> '') AND (Debitorname <> '') AND ("Name 2" <> '')) THEN BEGIN
          Zeile1 := '';
          Zeile2 := Debitorname;
          Zeile3 := "Name 2";
          Zeile4 := "Adresse 2"
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header2@5103(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput(Text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header3@5104(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput(Text2 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body7@5105(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        Nummer += 1;
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': CASE SectionId OF
          'Header1': OnPreSectionServiceleist_Leihstellungen_Header1("Serviceleist. & Leihstellungen");
          'Header2': OnPreSectionServiceleist_Leihstellungen_Header2("Serviceleist. & Leihstellungen");
          'Header3': OnPreSectionServiceleist_Leihstellungen_Header3("Serviceleist. & Leihstellungen");
        END;
        'Item': CASE SectionId OF
          'Body7': OnPreSectionItem_Body7(Item);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>1e93d697-70d5-4e30-9b7b-397645d2bbd5</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>dfb28d6f-a18e-40de-a7d1-48841e4342d9</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="status_text">
          <DataField>status_text</DataField>
        </Field>
        <Field Name="vkkopf_text">
          <DataField>vkkopf_text</DataField>
        </Field>
        <Field Name="Debitornr_Serviceleist_Leihstellungen">
          <DataField>Debitornr_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Belegdatum">
          <DataField>Belegdatum</DataField>
        </Field>
        <Field Name="GehortzuLfdNr_Serviceleist_Leihstellungen">
          <DataField>GehortzuLfdNr_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Zeile4">
          <DataField>Zeile4</DataField>
        </Field>
        <Field Name="Ort_Serviceleist_Leihstellungen">
          <DataField>Ort_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="PLZ_Code_Serviceleist_Leihstellungen">
          <DataField>PLZ_Code_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Zeile3">
          <DataField>Zeile3</DataField>
        </Field>
        <Field Name="Zeile2">
          <DataField>Zeile2</DataField>
        </Field>
        <Field Name="Zeile1">
          <DataField>Zeile1</DataField>
        </Field>
        <Field Name="Text1_Serviceleist_Leihstellungen">
          <DataField>Text1_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Text2_Serviceleist_Leihstellungen">
          <DataField>Text2_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungenoben">
          <DataField>Bemerkung_TOPASBemerkungenoben</DataField>
        </Field>
        <Field Name="Menge_Serviceleist_Leihstellungen">
          <DataField>Menge_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Menge_Serviceleist_LeihstellungenFormat">
          <DataField>Menge_Serviceleist_LeihstellungenFormat</DataField>
        </Field>
        <Field Name="Seriennr_Serviceleist_Leihstellungen">
          <DataField>Seriennr_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Nummer">
          <DataField>Nummer</DataField>
        </Field>
        <Field Name="Artikelnr2_Serviceleist_Leihstellungen">
          <DataField>Artikelnr2_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungenunten">
          <DataField>Bemerkung_TOPASBemerkungenunten</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

