OBJECT Report 50175 TOPAS Leihstellung
{
  OBJECT-PROPERTIES
  {
    Date=29.06.17;
    Time=12:05:47;
    Modified=Yes;
    Version List=fertig,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50024;
               DataItemTableView=WHERE(Art=FILTER(Leihstellung));
               OnPreDataItem=BEGIN
                               Nummer := 0;
                               vkkopf_text := '';
                               status_text := '';
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                             END;

               OnAfterGetRecord=BEGIN
                                  IF (Art = Art :: Leihstellung) THEN
                                    vkkopf_text := 'Leihstellung';
                                  IF "Serviceleist. & Leihstellungen"."Leihstellung zurck" = TRUE THEN
                                    status_text := 'Abgeschlossen!!!';
                                END;

               ReqFilterFields=Geh”rt zu Lfd. Nr. }

    { 2   ;1   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 3   ;1   ;Column  ;status_text         ;
               SourceExpr=status_text }

    { 4   ;1   ;Column  ;vkkopf_text         ;
               SourceExpr=vkkopf_text }

    { 5   ;1   ;Column  ;Debitornr_Serviceleist_Leihstellungen;
               SourceExpr="Debitornr." }

    { 6   ;1   ;Column  ;Belegdatum          ;
               SourceExpr=Belegdatum }

    { 7   ;1   ;Column  ;GehortzuLfdNr_Serviceleist_Leihstellungen;
               SourceExpr="Geh”rt zu Lfd. Nr." }

    { 8   ;1   ;Column  ;Zeile4              ;
               SourceExpr=Zeile4 }

    { 9   ;1   ;Column  ;Ort_Serviceleist_Leihstellungen;
               SourceExpr=Ort }

    { 10  ;1   ;Column  ;PLZ_Code_Serviceleist_Leihstellungen;
               SourceExpr="PLZ-Code" }

    { 11  ;1   ;Column  ;Zeile3              ;
               SourceExpr=Zeile3 }

    { 12  ;1   ;Column  ;Zeile2              ;
               SourceExpr=Zeile2 }

    { 13  ;1   ;Column  ;Zeile1              ;
               SourceExpr=Zeile1 }

    { 14  ;1   ;Column  ;Text1_Serviceleist_Leihstellungen;
               SourceExpr=Text1 }

    { 15  ;1   ;Column  ;Text2_Serviceleist_Leihstellungen;
               SourceExpr=Text2 }

    { 16  ;1   ;DataItem;TOPAS Bemerkungen oben;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Leihstellung),
                                       Andruck=FILTER(Text oben));
               DataItemLink=Nr.=FIELD(Lfd. Nr.) }

    { 17  ;2   ;Column  ;Bemerkung_TOPASBemerkungenoben;
               SourceExpr=Bemerkung }

    { 18  ;1   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemTableView=SORTING(No.);
               DataItemLink=No.=FIELD(Artikelnr.) }

    { 19  ;2   ;Column  ;Menge_Serviceleist_Leihstellungen;
               DecimalPlaces=0:0;
               SourceExpr="Serviceleist. & Leihstellungen".Menge }

    { 20  ;2   ;Column  ;Seriennr_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Seriennr." }

    { 21  ;2   ;Column  ;Nummer              ;
               SourceExpr=Nummer }

    { 22  ;2   ;Column  ;Artikelnr2_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Artikelnr. 2" }

    { 23  ;1   ;DataItem;TOPAS Bemerkungen unten;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Leihstellung),
                                       Andruck=FILTER(Text unten));
               DataItemLink=Nr.=FIELD(Lfd. Nr.) }

    { 24  ;2   ;Column  ;Bemerkung_TOPASBemerkungenunten;
               SourceExpr=Bemerkung }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      vkkopf_text@1140000 : Text[50];
      Zeile1@1140001 : Text[50];
      Zeile2@1140002 : Text[50];
      Zeile3@1140003 : Text[50];
      Zeile4@1140004 : Text[50];
      Nummer@1140005 : Integer;
      status_text@1140006 : Text[50];
      Firmendaten@1140007 : Record 79;
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header1@5102(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        IF ((Debitorname <> '') AND ("Name 2" <> '') AND (Adresse <> '') AND ("Adresse 2" <> ''))  THEN
          BEGIN
            Zeile1 := Debitorname;
            Zeile2 := "Name 2";
            Zeile3 := Adresse;
            Zeile4 := "Adresse 2";
          END;
        IF (("Name 2" = '') AND (Debitorname <> '') AND (Adresse <> '') AND ("Adresse 2" <> ''))  THEN
          BEGIN
            Zeile1 := '';
            Zeile2 := Debitorname;
            Zeile3 := Adresse;
            Zeile4 := "Adresse 2";
          END;
        IF (("Adresse 2" = '') AND (Debitorname <> '') AND ("Name 2" <> '') AND (Adresse <> '')) THEN
          BEGIN
            Zeile1 := '';
            Zeile2 := Debitorname;
            Zeile3 := "Name 2";
            Zeile4 := Adresse;
          END;
        IF (("Name 2" = '') AND ("Adresse 2" = '') AND (Debitorname <> '') AND (Adresse <> '')) THEN
          BEGIN
            Zeile1 := '';
            Zeile2 := '';
            Zeile3 := Debitorname;
            Zeile4 := Adresse;
          END;
        IF ((Adresse = '') AND ("Adresse 2" <> '') AND (Debitorname <> '') AND ("Name 2" <> '')) THEN
          BEGIN
            Zeile1 := '';
            Zeile2 := Debitorname;
            Zeile3 := "Name 2";
            Zeile4 := "Adresse 2"
          END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header2@5103(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput(Text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header3@5104(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput(Text2 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body7@5105(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        Nummer += 1;
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': CASE SectionId OF
          'Header1': OnPreSectionServiceleist_Leihstellungen_Header1("Serviceleist. & Leihstellungen");
          'Header2': OnPreSectionServiceleist_Leihstellungen_Header2("Serviceleist. & Leihstellungen");
          'Header3': OnPreSectionServiceleist_Leihstellungen_Header3("Serviceleist. & Leihstellungen");
        END;
        'Item': CASE SectionId OF
          'Body7': OnPreSectionItem_Body7(Item);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>1e93d697-70d5-4e30-9b7b-397645d2bbd5</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>dfb28d6f-a18e-40de-a7d1-48841e4342d9</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="status_text">
          <DataField>status_text</DataField>
        </Field>
        <Field Name="vkkopf_text">
          <DataField>vkkopf_text</DataField>
        </Field>
        <Field Name="Debitornr_Serviceleist_Leihstellungen">
          <DataField>Debitornr_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Belegdatum">
          <DataField>Belegdatum</DataField>
        </Field>
        <Field Name="GehortzuLfdNr_Serviceleist_Leihstellungen">
          <DataField>GehortzuLfdNr_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Zeile4">
          <DataField>Zeile4</DataField>
        </Field>
        <Field Name="Ort_Serviceleist_Leihstellungen">
          <DataField>Ort_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="PLZ_Code_Serviceleist_Leihstellungen">
          <DataField>PLZ_Code_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Zeile3">
          <DataField>Zeile3</DataField>
        </Field>
        <Field Name="Zeile2">
          <DataField>Zeile2</DataField>
        </Field>
        <Field Name="Zeile1">
          <DataField>Zeile1</DataField>
        </Field>
        <Field Name="Text1_Serviceleist_Leihstellungen">
          <DataField>Text1_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Text2_Serviceleist_Leihstellungen">
          <DataField>Text2_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungenoben">
          <DataField>Bemerkung_TOPASBemerkungenoben</DataField>
        </Field>
        <Field Name="Menge_Serviceleist_Leihstellungen">
          <DataField>Menge_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Menge_Serviceleist_LeihstellungenFormat">
          <DataField>Menge_Serviceleist_LeihstellungenFormat</DataField>
        </Field>
        <Field Name="Seriennr_Serviceleist_Leihstellungen">
          <DataField>Seriennr_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Nummer">
          <DataField>Nummer</DataField>
        </Field>
        <Field Name="Artikelnr2_Serviceleist_Leihstellungen">
          <DataField>Artikelnr2_Serviceleist_Leihstellungen</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungenunten">
          <DataField>Bemerkung_TOPASBemerkungenunten</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

