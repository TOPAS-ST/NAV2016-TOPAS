OBJECT Report 50074 TOPAS-Gutschrift-Einkauf
{
  OBJECT-PROPERTIES
  {
    Date=25.01.22;
    Time=15:59:39;
    Modified=Yes;
    Version List=Beleg,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;Purch. Cr. Memo Hdr.;
               DataItemTable=Table124;
               DataItemTableView=SORTING(No.);
               PrintOnlyIfDetail=Yes;
               ReqFilterHeadingML=DEU=Geb. Einkaufsgutschrift;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                               Firmendaten.CALCFIELDS(Picture,"ISO Logo");
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Purchaser Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Eink„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Purchaser Code");
                                    Eink„uferText := 'Eink„ufer'
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.PurchCrMemoPayTo(KredAdr,"Purch. Cr. Memo Hdr.");
                                  IF "Applies-to Doc. No." = '' THEN
                                    AusgleichText := ''
                                  ELSE
                                    AusgleichText := STRSUBSTNO('(Ausgleich fr %1 %2)',"Applies-to Doc. Type","Applies-to Doc. No.");
                                  FormatAdr.PurchCrMemoShipTo(LieferAnAdr,"Purch. Cr. Memo Hdr.");
                                END;

               ReqFilterFields=No.,Buy-from Vendor No.,No. Printed }

    { 2   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number > 1 THEN
                                    IF CurrReport.LANGUAGE = 1031 THEN
                                      KopieText := 'nkopie'
                                    ELSE
                                      KopieText := ' Copy';
                                  ReportForNav.PageNo := 1;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  EinkGutDruckZ„hler.RUN("Purch. Cr. Memo Hdr.");
                              END;
                               }

    { 3   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               PrintOnlyIfDetail=Yes }

    { 1000000000;3;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 4   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000003;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 5   ;3   ;Column  ;KopieText           ;
               SourceExpr=KopieText }

    { 6   ;3   ;Column  ;Buy_fromVendorNo_PurchCrMemoHdr;
               SourceExpr="Purch. Cr. Memo Hdr."."Buy-from Vendor No." }

    { 7   ;3   ;Column  ;DocumentDate_PurchCrMemoHdr;
               SourceExpr="Purch. Cr. Memo Hdr."."Document Date" }

    { 8   ;3   ;Column  ;SeitenText          ;
               SourceExpr=SeitenText }

    { 9   ;3   ;Column  ;KredAdr8            ;
               SourceExpr=KredAdr[8] }

    { 10  ;3   ;Column  ;KredAdr7            ;
               SourceExpr=KredAdr[7] }

    { 11  ;3   ;Column  ;VendorCrMemoNo_PurchCrMemoHdr;
               SourceExpr="Purch. Cr. Memo Hdr."."Vendor Cr. Memo No." }

    { 12  ;3   ;Column  ;No_PurchCrMemoHdr   ;
               SourceExpr="Purch. Cr. Memo Hdr."."No." }

    { 13  ;3   ;Column  ;VATRegistrationNo_PurchCrMemoHdr;
               SourceExpr="Purch. Cr. Memo Hdr."."VAT Registration No." }

    { 14  ;3   ;Column  ;MWStNrText          ;
               SourceExpr=MWStNrText }

    { 15  ;3   ;Column  ;KredAdr6            ;
               SourceExpr=KredAdr[6] }

    { 16  ;3   ;Column  ;KredAdr5            ;
               SourceExpr=KredAdr[5] }

    { 17  ;3   ;Column  ;KredAdr4            ;
               SourceExpr=KredAdr[4] }

    { 18  ;3   ;Column  ;KredAdr3            ;
               SourceExpr=KredAdr[3] }

    { 19  ;3   ;Column  ;KredAdr2            ;
               SourceExpr=KredAdr[2] }

    { 20  ;3   ;Column  ;KredAdr1            ;
               SourceExpr=KredAdr[1] }

    { 21  ;3   ;DataItem;                    ;
               DataItemTable=Table125;
               DataItemTableView=SORTING(Document No.,Line No.);
               PrintOnlyIfDetail=No;
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                END;

               DataItemLinkReference=Purch. Cr. Memo Hdr.;
               DataItemLink=Document No.=FIELD(No.) }

    { 22  ;4   ;Column  ;Amount_InvDiscountAmount;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 23  ;4   ;Column  ;Description_PurchCrMemoLine;
               SourceExpr=Description }

    { 24  ;4   ;Column  ;DirectUnitCost_PurchCrMemoLine;
               SourceExpr="Direct Unit Cost";
               AutoFormatType=2;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 25  ;4   ;Column  ;Quantity_PurchCrMemoLine;
               SourceExpr=Quantity }

    { 26  ;4   ;Column  ;InvDiscountAmount_PurchCrMemoLine;
               SourceExpr=-"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 27  ;4   ;Column  ;TotalInklMWStText   ;
               SourceExpr=TotalInklMWStText }

    { 28  ;4   ;Column  ;TotalText           ;
               SourceExpr=TotalText }

    { 29  ;4   ;Column  ;MWSTBetragZeileVATAmountText;
               SourceExpr=MWSTBetragZeile.VATAmountText }

    { 30  ;4   ;Column  ;AmountIncludingVAT_PurchCrMemoLine;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 31  ;4   ;Column  ;AmountIncludingVAT_Amount;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 32  ;4   ;Column  ;Amount_PurchCrMemoLine;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 33  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemLink=No.=FIELD(No.) }

    { 34  ;5   ;Column  ;LineNo_PurchCrMemoLine;
               SourceExpr="Purch. Cr. Memo Line"."Line No." }

    { 35  ;5   ;Column  ;Description_PurchCrMemoLine3;
               SourceExpr="Purch. Cr. Memo Line".Description }

    { 36  ;5   ;Column  ;Quantity_PurchCrMemoLine2;
               SourceExpr="Purch. Cr. Memo Line".Quantity }

    { 37  ;5   ;Column  ;DirectUnitCost_PurchCrMemoLine2;
               SourceExpr="Purch. Cr. Memo Line"."Direct Unit Cost";
               AutoFormatType=2;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 38  ;5   ;Column  ;PurchCrMemoLineAmount_PurchCrMemoLineInvDiscountAmount;
               SourceExpr="Purch. Cr. Memo Line".Amount+"Purch. Cr. Memo Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Line".GetCurrencyCode }

    { 39  ;5   ;Column  ;No_PurchCrMemoLine  ;
               SourceExpr="Purch. Cr. Memo Line"."No." }

    { 40  ;5   ;Column  ;Description2_Item   ;
               SourceExpr="Description 2" }

    { 41  ;4   ;DataItem;                    ;
               DataItemTable=Table32;
               DataItemLink=Document No.=FIELD(Document No.),
                            Document Line No.=FIELD(Line No.) }

    { 42  ;5   ;Column  ;Ursprungsland_ItemLedgerEntry;
               SourceExpr=Ursprungsland }

    { 43  ;5   ;Column  ;SerialNo__LotNo     ;
               SourceExpr="Serial No."+' '+"Lot No." }

    { 44  ;5   ;Column  ;Quantity_1          ;
               DecimalPlaces=0:0;
               SourceExpr=Quantity*(-1) }

    { 45  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 46  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Hdr."."Currency Code" }

    { 47  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Purch. Cr. Memo Hdr."."Currency Code" }

    { 48  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 49  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               IF "Purch. Cr. Memo Hdr."."Buy-from Vendor No." = "Purch. Cr. Memo Hdr."."Pay-to Vendor No." THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 50  ;4   ;Column  ;Buy_fromVendorNo_PurchCrMemoHdr2_Lbl;
               SourceExpr="Purch. Cr. Memo Hdr.".FIELDCAPTION("Buy-from Vendor No.") }

    { 51  ;4   ;Column  ;Buy_fromVendorNo_PurchCrMemoHdr2;
               SourceExpr="Purch. Cr. Memo Hdr."."Buy-from Vendor No." }

    { 52  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               PrintOnlyIfDetail=Yes;
               OnPreDataItem=BEGIN
                               IF LieferAnAdr[1] = '' THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 53  ;4   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 54  ;4   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 55  ;4   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 56  ;4   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 57  ;4   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 58  ;4   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 59  ;4   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 60  ;4   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      Firmendaten@1140001 : Record 79;
      Language@1140019 : Record 8;
      VerkEinkPerson@1140002 : Record 13;
      MWSTBetragZeile@1140003 : TEMPORARY Record 290;
      EinkGutDruckZ„hler@1140004 : Codeunit 320;
      FormatAdr@1140005 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      KredAdr@1140006 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140007 : ARRAY [8] OF Text[50];
      FirmaAdr@1140008 : ARRAY [8] OF Text[50];
      Eink„uferText@1140009 : Text[30];
      MWStNrText@1140010 : Text[30];
      ReferenzText@1140011 : Text[30];
      AusgleichText@1140012 : Text[40];
      TotalText@1140013 : Text[50];
      TotalInklMWStText@1140014 : Text[50];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      SeitenText@1140020 : Text[30];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header2@5033(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          SeitenText := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE SeitenText := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionPurchCrMemoLine_Body5@5034(VAR "Purch. Cr. Memo Line"@1000000000 : Record 125);
    BEGIN
      WITH "Purch. Cr. Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionPurchCrMemoLine_Body6@5035(VAR "Purch. Cr. Memo Line"@1000000000 : Record 125);
    BEGIN
      WITH "Purch. Cr. Memo Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionPurchCrMemoLine_Body7@5036(VAR "Purch. Cr. Memo Line"@1000000000 : Record 125);
    BEGIN
      WITH "Purch. Cr. Memo Line" DO BEGIN
        ReportForNav.ShowOutput((Type = Type::Item) OR (Type = Type::"Fixed Asset"));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionPurchCrMemoLine_Body8@5037(VAR "Purch. Cr. Memo Line"@1000000000 : Record 125);
    BEGIN
      WITH "Purch. Cr. Memo Line" DO BEGIN
        ReportForNav.ShowOutput("Description 2" <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionPurchCrMemoLine_Footer11@5038(VAR "Purch. Cr. Memo Line"@1000000000 : Record 125);
    BEGIN
      WITH "Purch. Cr. Memo Line" DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body13@5039(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Purch. Cr. Memo Line".Type = "Purch. Cr. Memo Line".Type::Item)
         OR ("Purch. Cr. Memo Line".Type = "Purch. Cr. Memo Line".Type::"Fixed Asset"));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body14@5040(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Description 2" <> '');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header2': OnPreSectionSeiteSchleife_Header2(SeiteSchleife);
        END;
        'PurchCrMemoLine': CASE SectionId OF
          'Body5': OnPreSectionPurchCrMemoLine_Body5("Purch. Cr. Memo Line");
          'Body6': OnPreSectionPurchCrMemoLine_Body6("Purch. Cr. Memo Line");
          'Body7': OnPreSectionPurchCrMemoLine_Body7("Purch. Cr. Memo Line");
          'Body8': OnPreSectionPurchCrMemoLine_Body8("Purch. Cr. Memo Line");
          'Footer11': OnPreSectionPurchCrMemoLine_Footer11("Purch. Cr. Memo Line");
        END;
        'Item': CASE SectionId OF
          'Body13': OnPreSectionItem_Body13(Item);
          'Body14': OnPreSectionItem_Body14(Item);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'PurchCrMemoLine': WITH "Purch. Cr. Memo Line" DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      Žnderung am Standard 2.01 Lederer Systemhaus: Ulrich Gepp
      Erstellt am : 23.06.99
      -----------------------------------------------------------------------------------------
      Adressfeld auf Fensterkurvert-Norm gesetzt.

      25.01.22 st: šbertrag- und Fortsetzungsbetrag Sektionen ausgeblendet, da mit 6.1.0 mitunter fehlerhaft
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
RSlGSIrf/z8=</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="KopieText">
          <DataField>KopieText</DataField>
        </Field>
        <Field Name="Buy_fromVendorNo_PurchCrMemoHdr">
          <DataField>Buy_fromVendorNo_PurchCrMemoHdr</DataField>
        </Field>
        <Field Name="DocumentDate_PurchCrMemoHdr">
          <DataField>DocumentDate_PurchCrMemoHdr</DataField>
        </Field>
        <Field Name="SeitenText">
          <DataField>SeitenText</DataField>
        </Field>
        <Field Name="KredAdr8">
          <DataField>KredAdr8</DataField>
        </Field>
        <Field Name="KredAdr7">
          <DataField>KredAdr7</DataField>
        </Field>
        <Field Name="VendorCrMemoNo_PurchCrMemoHdr">
          <DataField>VendorCrMemoNo_PurchCrMemoHdr</DataField>
        </Field>
        <Field Name="No_PurchCrMemoHdr">
          <DataField>No_PurchCrMemoHdr</DataField>
        </Field>
        <Field Name="VATRegistrationNo_PurchCrMemoHdr">
          <DataField>VATRegistrationNo_PurchCrMemoHdr</DataField>
        </Field>
        <Field Name="MWStNrText">
          <DataField>MWStNrText</DataField>
        </Field>
        <Field Name="KredAdr6">
          <DataField>KredAdr6</DataField>
        </Field>
        <Field Name="KredAdr5">
          <DataField>KredAdr5</DataField>
        </Field>
        <Field Name="KredAdr4">
          <DataField>KredAdr4</DataField>
        </Field>
        <Field Name="KredAdr3">
          <DataField>KredAdr3</DataField>
        </Field>
        <Field Name="KredAdr2">
          <DataField>KredAdr2</DataField>
        </Field>
        <Field Name="KredAdr1">
          <DataField>KredAdr1</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmount">
          <DataField>Amount_InvDiscountAmount</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmountFormat">
          <DataField>Amount_InvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description_PurchCrMemoLine">
          <DataField>Description_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="DirectUnitCost_PurchCrMemoLine">
          <DataField>DirectUnitCost_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="DirectUnitCost_PurchCrMemoLineFormat">
          <DataField>DirectUnitCost_PurchCrMemoLineFormat</DataField>
        </Field>
        <Field Name="Quantity_PurchCrMemoLine">
          <DataField>Quantity_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="Quantity_PurchCrMemoLineFormat">
          <DataField>Quantity_PurchCrMemoLineFormat</DataField>
        </Field>
        <Field Name="InvDiscountAmount_PurchCrMemoLine">
          <DataField>InvDiscountAmount_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="InvDiscountAmount_PurchCrMemoLineFormat">
          <DataField>InvDiscountAmount_PurchCrMemoLineFormat</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="MWSTBetragZeileVATAmountText">
          <DataField>MWSTBetragZeileVATAmountText</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_PurchCrMemoLine">
          <DataField>AmountIncludingVAT_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_PurchCrMemoLineFormat">
          <DataField>AmountIncludingVAT_PurchCrMemoLineFormat</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_Amount">
          <DataField>AmountIncludingVAT_Amount</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_AmountFormat">
          <DataField>AmountIncludingVAT_AmountFormat</DataField>
        </Field>
        <Field Name="Amount_PurchCrMemoLine">
          <DataField>Amount_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="Amount_PurchCrMemoLineFormat">
          <DataField>Amount_PurchCrMemoLineFormat</DataField>
        </Field>
        <Field Name="LineNo_PurchCrMemoLine">
          <DataField>LineNo_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="Description_PurchCrMemoLine3">
          <DataField>Description_PurchCrMemoLine3</DataField>
        </Field>
        <Field Name="Quantity_PurchCrMemoLine2">
          <DataField>Quantity_PurchCrMemoLine2</DataField>
        </Field>
        <Field Name="Quantity_PurchCrMemoLine2Format">
          <DataField>Quantity_PurchCrMemoLine2Format</DataField>
        </Field>
        <Field Name="DirectUnitCost_PurchCrMemoLine2">
          <DataField>DirectUnitCost_PurchCrMemoLine2</DataField>
        </Field>
        <Field Name="DirectUnitCost_PurchCrMemoLine2Format">
          <DataField>DirectUnitCost_PurchCrMemoLine2Format</DataField>
        </Field>
        <Field Name="PurchCrMemoLineAmount_PurchCrMemoLineInvDiscountAmount">
          <DataField>PurchCrMemoLineAmount_PurchCrMemoLineInvDiscountAmount</DataField>
        </Field>
        <Field Name="PurchCrMemoLineAmount_PurchCrMemoLineInvDiscountAmountFormat">
          <DataField>PurchCrMemoLineAmount_PurchCrMemoLineInvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="No_PurchCrMemoLine">
          <DataField>No_PurchCrMemoLine</DataField>
        </Field>
        <Field Name="Description2_Item">
          <DataField>Description2_Item</DataField>
        </Field>
        <Field Name="Ursprungsland_ItemLedgerEntry">
          <DataField>Ursprungsland_ItemLedgerEntry</DataField>
        </Field>
        <Field Name="SerialNo__LotNo">
          <DataField>SerialNo__LotNo</DataField>
        </Field>
        <Field Name="Quantity_1">
          <DataField>Quantity_1</DataField>
        </Field>
        <Field Name="Quantity_1Format">
          <DataField>Quantity_1Format</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="Buy_fromVendorNo_PurchCrMemoHdr2_Lbl">
          <DataField>Buy_fromVendorNo_PurchCrMemoHdr2_Lbl</DataField>
        </Field>
        <Field Name="Buy_fromVendorNo_PurchCrMemoHdr2">
          <DataField>Buy_fromVendorNo_PurchCrMemoHdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

