OBJECT Report 50081 TOPAS-Lagerware
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=09:35:59;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  //ArtikelFilter := Item.GETFILTERS;
                  VerkZeileFilter := "Sales Line".GETFILTERS;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table18;
               DataItemTableView=SORTING(No.);
               PrintOnlyIfDetail=Yes;
               OnAfterGetRecord=BEGIN
                                  hinweis := '';
                                  adresse := '';
                                END;
                                 }

    { 2   ;1   ;Column  ;USERID              ;
               IncludeCaption=No;
               SourceExpr=USERID }

    { 3   ;1   ;Column  ;ReportForNavPageNo  ;
               IncludeCaption=No;
               SourceExpr=ReportForNav.PageNo }

    { 4   ;1   ;Column  ;COMPANYNAME         ;
               IncludeCaption=No;
               SourceExpr=COMPANYNAME }

    { 5   ;1   ;Column  ;TODAY_0_4           ;
               IncludeCaption=No;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 6   ;1   ;Column  ;STRSUBSTNO_Auftragszeile_Pct1_VerkZeileFilter;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO('Auftragszeile: %1',VerkZeileFilter) }

    { 7   ;1   ;Column  ;No_Customer         ;
               IncludeCaption=No;
               SourceExpr="No." }

    { 8   ;1   ;Column  ;Name_Customer       ;
               IncludeCaption=No;
               SourceExpr=Name }

    { 9   ;1   ;Column  ;OutstandingAmount_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Outstanding Amount" }

    { 10  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=WHERE(Document Type=CONST(Order),
                                       Type=CONST(Item),
                                       Outstanding Quantity=FILTER(<>0));
               ReqFilterHeadingML=DEU=Verkaufszeile;
               OnAfterGetRecord=BEGIN
                                  VerkKopf.GET("Document Type","Document No.");
                                  IF (adresse <> '') AND (VerkKopf."Ship-to Address" <> adresse) THEN
                                    hinweis := 'Achtung: Unterschiedliche Lief. an Adressen !!!';
                                  adresse := VerkKopf."Ship-to Address";
                                  belegdatum := VerkKopf."Document Date";
                                  IF VerkKopf."Currency Factor" <> 0 THEN
                                    "Outstanding Amount" :=
                                      ROUND(
                                        W・rungWechKurs.ExchangeAmtFCYToLCY(
                                          WORKDATE,VerkKopf."Currency Code","Outstanding Amount",
                                          VerkKopf."Currency Factor"));
                                  IF "Shipment Date" < WORKDATE THEN
                                    R…kstandMenge := "Outstanding Quantity"
                                  ELSE
                                    R…kstandMenge := 0;
                                  lagerbe.GET("No.");
                                  lagerbe.CALCFIELDS(Inventory);
                                END;

               ReqFilterFields=Manufacturer Code,Promised Delivery Date,Location Code;
               DataItemLink=Sell-to Customer No.=FIELD(No.) }

    { 11  ;2   ;Column  ;belegdatum          ;
               SourceExpr=belegdatum }

    { 12  ;2   ;Column  ;lagerbeInventory_OutstandingQuantity;
               IncludeCaption=No;
               SourceExpr=lagerbe.Inventory-"Outstanding Quantity" }

    { 13  ;2   ;Column  ;Inventory_lagerbe   ;
               IncludeCaption=No;
               SourceExpr=lagerbe.Inventory }

    { 14  ;2   ;Column  ;RequestedDeliveryDate_SalesLine;
               IncludeCaption=No;
               SourceExpr="Requested Delivery Date" }

    { 15  ;2   ;Column  ;DocumentNo_SalesLine;
               IncludeCaption=No;
               SourceExpr="Document No." }

    { 16  ;2   ;Column  ;No_SalesLine        ;
               IncludeCaption=No;
               SourceExpr="No." }

    { 17  ;2   ;Column  ;PromisedDeliveryDate_SalesLine;
               IncludeCaption=No;
               SourceExpr="Promised Delivery Date" }

    { 18  ;2   ;Column  ;Quantity_SalesLine  ;
               IncludeCaption=No;
               SourceExpr=Quantity }

    { 19  ;2   ;Column  ;OutstandingQuantity_SalesLine;
               IncludeCaption=No;
               SourceExpr="Outstanding Quantity" }

    { 20  ;2   ;Column  ;RuckstandMenge      ;
               DecimalPlaces=0:5;
               IncludeCaption=No;
               SourceExpr=R…kstandMenge }

    { 21  ;2   ;Column  ;UnitPrice_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Unit Price" }

    { 22  ;2   ;Column  ;OutstandingAmount_SalesLine2;
               IncludeCaption=No;
               SourceExpr="Outstanding Amount" }

    { 23  ;2   ;Column  ;PaymentTermsCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Payment Terms Code" }

    { 24  ;2   ;Column  ;hinweis             ;
               IncludeCaption=No;
               SourceExpr=hinweis }

    { 25  ;2   ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.);
               DataItemLink=No.=FIELD(Document No.) }

    { 1000000000;3;DataItem;                 ;
               DataItemTable=Table44;
               DataItemTableView=WHERE(Line No.=FILTER(10000));
               DataItemLink=No.=FIELD(No.) }

    { 1000000001;4;Column;Comment_SalesCommentLine;
               IncludeCaption=No;
               SourceExpr=Comment }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      W・rungWechKurs@1140000 : Record 330;
      VerkKopf@1140001 : Record 36;
      R…kstandMenge@1140002 : Decimal;
      ArtikelFilter@1140003 : Text[250];
      VerkZeileFilter@1140004 : Text[250];
      lagerbe@1140005 : Record 27;
      adresse@1140007 : Text[50];
      hinweis@1140006 : Text[80];
      belegdatum@1140008 : Date;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionCustomer_Header2@5010(VAR Customer@1000000000 : Record 18);
    BEGIN
      WITH Customer DO BEGIN
        ReportForNav.ShowOutput((ReportForNav.PageNo = 1) AND (VerkZeileFilter <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Footer7@5011(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Sales Header"."Payment Terms Code"='BBL') OR
        ("Sales Header"."Payment Terms Code"='VORK') OR ("Sales Header"."Payment Terms Code"='ADV') OR
        ("Sales Header"."Payment Terms Code"='VORK-E') OR ("Sales Header"."Payment Terms Code"='TT') OR
        ("Sales Header"."Payment Terms Code"='VK-1%') OR ("Sales Header"."Payment Terms Code"='VK-2%'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body9@5012(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
          ReportForNav.ShowOutput(("Sales Header"."Payment Terms Code"='BBL') OR
          ("Sales Header"."Payment Terms Code"='VORK') OR ("Sales Header"."Payment Terms Code"='ADV') OR
          ("Sales Header"."Payment Terms Code"='VORK-E') OR ("Sales Header"."Payment Terms Code"='TT') OR
          ("Sales Header"."Payment Terms Code"='VK-1%') OR ("Sales Header"."Payment Terms Code"='VK-2%'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body10@1000000005(VAR "Sales Comment Line"@1000000000 : Record 44);
    BEGIN
      WITH "Sales Comment Line" DO BEGIN
          ReportForNav.ShowOutput("Sales Comment Line".Comment<>'')
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Customer': CASE SectionId OF
          'Header2': OnPreSectionCustomer_Header2(Customer);
        END;
        'SalesLine': CASE SectionId OF
          'Footer7': OnPreSectionSalesLine_Footer7("Sales Line");
        END;
        'SalesHeader': CASE SectionId OF
          'Body9': OnPreSectionSalesHeader_Body9("Sales Header");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'Customer': WITH Customer DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,"Sales Line"."Outstanding Amount");
              END;
           'Restore': BEGIN
                 "Sales Line"."Outstanding Amount" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
              END;
        END;  'SalesLine': WITH "Sales Line" DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,"Outstanding Amount");
                ReportForNav.AddTotal(DataItemId,1,R…kstandMenge);
                ReportForNav.AddTotal(DataItemId,2,"Outstanding Quantity");
              END;
           'Restore': BEGIN
                 "Outstanding Amount" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 R…kstandMenge := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Outstanding Quantity" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
5cNOZxmHz3t4tqXZB4OPZzX/QtBP/wM=</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

