OBJECT Report 50166 Projektartikel n. Linien Excel
{
  OBJECT-PROPERTIES
  {
    Date=08.12.17;
    Time=13:46:32;
    Modified=Yes;
    Version List=TOPAS,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  Filter := Item.GETFILTERS
                    + ' '
                    + Campaign.GETFILTERS
                    + ' '
                    + "Ansprechpartner Auswahl".GETFILTERS;

                  filter_herstellercode := Item.GETFILTER("Manufacturer Code");
                  l := STRLEN(DELCHR(filter_herstellercode,'=',DELCHR(filter_herstellercode,'=','|'))) + 1;
                  IF l > 0 THEN BEGIN
                    FOR i := 1 TO l DO BEGIN
                      IF STRPOS(filter_herstellercode,'|') > 0 THEN BEGIN
                        Herstellercode := COPYSTR(filter_herstellercode,1,STRPOS(filter_herstellercode,'|') - 1);
                        filter_herstellercode := COPYSTR(filter_herstellercode,STRPOS(filter_herstellercode,'|') + 1);
                      END ELSE
                        Herstellercode := filter_herstellercode;
                      Hersteller.SETRANGE(Hersteller.Code,Herstellercode);
                      IF Hersteller.FINDFIRST THEN
                        Herstellername += Hersteller.Herstellerkurzname + '|';
                    END;
                  END;
                  Herstellername := DELCHR(Herstellername,'>','|');

                  IF DoUpdateExistingWorksheet THEN BEGIN
                    IF ServerFileName = '' THEN
                      ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
                    IF ServerFileName = '' THEN
                      EXIT;
                    SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
                    IF SheetName = '' THEN
                      EXIT;
                  END;

                  //Window.OPEN(
                  //  Text000 +
                  //  '@1@@@@@@@@@@@@@@@@@@@@@\');

                  TempExcelBuffer.DELETEALL;
                  CLEAR(TempExcelBuffer);

                  //Header
                  RecNo := 0;
                  RowNo := 1;
                  ColumnNo := 1;
                  EnterCell(RowNo,ColumnNo,Text020,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text021,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text022,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text023,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text024,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text025,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text026,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text027,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text028,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text029,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text030,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text031,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text032,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text033,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text034,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text035,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text036,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text037,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text038,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text039,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text040,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text041,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text042,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Text043,TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
                  RowNo := 2;

                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   //Window.CLOSE;

                   IF DoUpdateExistingWorksheet THEN BEGIN
                     TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
                     TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
                     TempExcelBuffer.CloseBook;
                     IF NOT Testmode THEN
                       TempExcelBuffer.DownloadAndOpenExcel;
                   END ELSE BEGIN
                     TempExcelBuffer.CreateBook(ServerFileName,Text001);
                     TempExcelBuffer.WriteSheet(
                       PADSTR(STRSUBSTNO('%1 %2',Text001,''),30),COMPANYNAME,USERID);
                     TempExcelBuffer.CloseBook;
                     IF NOT Testmode THEN BEGIN
                       TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
                       //TempExcelBuffer.OpenExcelWithoutAutoFit(Text001,Text001 + ExcelFileExtensionTok,'',TRUE);
                     END;
                   END;
                   IF NOT Testmode THEN
                     TempExcelBuffer.GiveUserControl;

                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table5050;
               DataItemTableView=SORTING(Name)
                                 ORDER(Ascending)
                                 WHERE(Type=FILTER(Company)) }

    { 2   ;1   ;Column  ;Filter              ;
               SourceExpr=Filter }

    { 3   ;1   ;Column  ;Herstellername      ;
               SourceExpr=Herstellername }

    { 4   ;1   ;Column  ;ReportForNavPageNo  ;
               SourceExpr=ReportForNav.PageNo }

    { 5   ;1   ;Column  ;USERID              ;
               SourceExpr=USERID }

    { 6   ;1   ;Column  ;TODAY               ;
               SourceExpr=TODAY }

    { 7   ;1   ;DataItem;                    ;
               DataItemTable=Table50005;
               DataItemTableView=SORTING(Kontakt Mandantennr.,Kampagnennr.,Memonr.)
                                 ORDER(Ascending)
                                 WHERE(Typ=FILTER(Company),
                                       Fhrungsrolle=FILTER(Yes));
               DataItemLink=Kontaktnr.=FIELD(No.) }

    { 8   ;2   ;DataItem;                    ;
               DataItemTable=Table5071;
               DataItemTableView=SORTING(No.)
                                 ORDER(Ascending);
               ReqFilterFields=Salesperson Code,Betreuer Innendienst,Territory Code,Projektstatus,Projektklasse,Projektvolumen;
               DataItemLink=No.=FIELD(Kampagnennr.) }

    { 9   ;3   ;DataItem;                    ;
               DataItemTable=Table50006;
               DataItemTableView=SORTING(Artikelnr. 2,Zeilennr.)
                                 ORDER(Ascending)
                                 WHERE(Projektwert Option=FILTER(Berechnen),
                                       Artikelnr. 2=FILTER(<>''));
               OnAfterGetRecord=BEGIN
                                  IF "Menge pro System" <> 0 THEN
                                    Stckzahl := "Menge pro System" * Campaign.Projektvolumen
                                  ELSE
                                    Stckzahl := Campaign.Projektvolumen;
                                END;

               DataItemLink=Kampagnennr.=FIELD(No.) }

    { 10  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnAfterGetRecord=BEGIN
                                  ColumnNo := 1;
                                  EnterCell(RowNo,ColumnNo,Contact."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Contact.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign.Description,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign.Projektstatus,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign.Projektklasse,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Item."Manufacturer Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Item."Search Description",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Projektartikel."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(Stckzahl),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                                  ColumnNo := ColumnNo + 1;
                                  IF Campaign."REP-Projekt" = TRUE THEN
                                    EnterCell(RowNo,ColumnNo,FORMAT(Campaign."Kalk. Provision"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number)
                                  ELSE
                                    EnterCell(RowNo,ColumnNo,FORMAT(Campaign.Projektwert),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign.W„hrungscode,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign.Applikation,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign.Wettbewerb,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign.Prototyping,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign.Vorserienstart,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign."Serienstart (geplant)",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign."Hersteller Projektnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign."Salesperson Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign."Betreuer Innendienst",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,Campaign."Territory Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(Campaign."Last Date Modified"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(Campaign."REP-Projekt"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                  ColumnNo := ColumnNo + 1;
                                  EnterCell(RowNo,ColumnNo,FORMAT(Campaign."Ang. Provision %"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                                  RowNo := RowNo + 1;

                                  RecNo := RecNo + 1;
                                  //Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
                                END;

               ReqFilterFields=Manufacturer Code;
               DataItemLink=No. 2=FIELD(Artikelnr. 2) }

    { 11  ;5   ;Column  ;No_Campaign         ;
               SourceExpr=Campaign."No." }

    { 12  ;5   ;Column  ;Wert                ;
               SourceExpr=Wert }

    { 13  ;5   ;Column  ;BetreuerInnendienst_Campaign;
               SourceExpr=Campaign."Betreuer Innendienst" }

    { 14  ;5   ;Column  ;SalespersonCode_Campaign;
               SourceExpr=Campaign."Salesperson Code" }

    { 15  ;5   ;Column  ;Projektklasse_Campaign;
               SourceExpr=Campaign.Projektklasse }

    { 16  ;5   ;Column  ;Projektstatus_Campaign;
               SourceExpr=Campaign.Projektstatus }

    { 17  ;5   ;Column  ;Mandantenname_AnsprechpartnerAuswahl;
               SourceExpr="Ansprechpartner Auswahl".Mandantenname }

    { 18  ;5   ;Column  ;Description_Campaign;
               SourceExpr=Campaign.Description }

    { 19  ;5   ;Column  ;Artikelnr2_Projektartikel;
               SourceExpr=Projektartikel."Artikelnr. 2" }

    { 20  ;5   ;Column  ;Stuckzahl           ;
               DecimalPlaces=0:0;
               SourceExpr=Stckzahl }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=No;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Hersteller@1140001 : Record 5720;
      TempExcelBuffer@1000000013 : TEMPORARY Record 370;
      TOPAS_API@1000000034 : Codeunit 50001;
      FileMgt@1000000044 : Codeunit 419;
      ServerFileName@1000000012 : Text;
      SheetName@1000000011 : Text[250];
      DoUpdateExistingWorksheet@1000000010 : Boolean;
      Testmode@1000000009 : Boolean;
      Window@1000000008 : Dialog;
      RecNo@1000000007 : Integer;
      TotalRecNo@1000000006 : Integer;
      RowNo@1000000005 : Integer;
      ColumnNo@1000000004 : Integer;
      Filter@1140014 : Text[250];
      Herstellercode@1140015 : Code[120];
      Herstellername@1000000003 : Text;
      filter_herstellercode@1000000002 : Code[120];
      Wert@1140017 : Decimal;
      Stckzahl@1140018 : Decimal;
      l@1000000000 : Integer;
      i@1000000001 : Integer;
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;
      Text000@1000000038 : TextConst 'DEU=Daten werden analysiert ...\\;ENU=Analyzing Data...\\';
      Text001@1000000037 : TextConst 'DEU=Projektartikel';
      Text002@1000000036 : TextConst 'DEU=Arbeitsmappe aktualisieren;ENU=Update Workbook';
      Text003@1000000035 : TextConst 'DEU=Fehler beim Export nach Excel. Es konnte kein Filter gefunden werden. Der Report wird abgebrochen.';
      Text020@1000000033 : TextConst 'DEU=Kontaktnr.';
      Text021@1000000032 : TextConst 'DEU=Kunde';
      Text022@1000000031 : TextConst 'DEU=Projektnr.';
      Text023@1000000030 : TextConst 'DEU=Projektname';
      Text024@1000000029 : TextConst 'DEU=Projektstatus';
      Text025@1000000028 : TextConst 'DEU=Projektklasse';
      Text026@1000000027 : TextConst 'DEU=Herstellercode';
      Text027@1000000026 : TextConst 'DEU=Herstellername';
      Text028@1000000025 : TextConst 'DEU=Projektartikel';
      Text029@1000000024 : TextConst 'DEU=Stckzahlen';
      Text030@1000000023 : TextConst 'DEU=Wert';
      Text031@1000000022 : TextConst 'DEU=W„hrung';
      Text032@1000000021 : TextConst 'DEU=Applikation';
      Text033@1000000020 : TextConst 'DEU=Wettbewerb';
      Text034@1000000019 : TextConst 'DEU=Prototyping';
      Text035@1000000018 : TextConst 'DEU=Vorserienstart';
      Text036@1000000017 : TextConst 'DEU=Serienstart';
      Text037@1000000016 : TextConst 'DEU=Projektschutz';
      Text038@1000000015 : TextConst 'DEU=Verk„ufer';
      Text039@1000000039 : TextConst 'DEU=Betreuer';
      Text040@1000000040 : TextConst 'DEU=Gebiet';
      Text041@1000000041 : TextConst 'DEU=Letzte Žnderung';
      Text042@1000000042 : TextConst 'DEU=REP-Projekt';
      Text043@1000000043 : TextConst 'DEU=Kalk. Provision';
      ExcelFileExtensionTok@1000000014 : TextConst '@@@={Locked};DEU=.xlsx;ENU=.xlsx';

    LOCAL PROCEDURE OnPreSectionItem_Body3@5010(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        "Ansprechpartner Auswahl".CALCFIELDS(Mandantenname);
        IF Campaign."REP-Projekt" = TRUE THEN
          Wert := Campaign."Kalk. Provision"
        ELSE
          Wert := Campaign.Projektwert;
      END;
    END;

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;Italic@1004 : Boolean;UnderLine@1005 : Boolean;NumberFormat@1006 : Text[30];CellType@1007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Item': CASE SectionId OF
          'Body3': OnPreSectionItem_Body3(Item);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>33b27724-f7ba-4a49-b8b9-3c6cfad52116</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>c823d4bd-43f2-4c2c-8627-d20b5263038c</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Filter">
          <DataField>Filter</DataField>
        </Field>
        <Field Name="Herstellername">
          <DataField>Herstellername</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="TODAY">
          <DataField>TODAY</DataField>
        </Field>
        <Field Name="No_Campaign">
          <DataField>No_Campaign</DataField>
        </Field>
        <Field Name="Wert">
          <DataField>Wert</DataField>
        </Field>
        <Field Name="WertFormat">
          <DataField>WertFormat</DataField>
        </Field>
        <Field Name="BetreuerInnendienst_Campaign">
          <DataField>BetreuerInnendienst_Campaign</DataField>
        </Field>
        <Field Name="SalespersonCode_Campaign">
          <DataField>SalespersonCode_Campaign</DataField>
        </Field>
        <Field Name="Projektklasse_Campaign">
          <DataField>Projektklasse_Campaign</DataField>
        </Field>
        <Field Name="Projektstatus_Campaign">
          <DataField>Projektstatus_Campaign</DataField>
        </Field>
        <Field Name="Mandantenname_AnsprechpartnerAuswahl">
          <DataField>Mandantenname_AnsprechpartnerAuswahl</DataField>
        </Field>
        <Field Name="Description_Campaign">
          <DataField>Description_Campaign</DataField>
        </Field>
        <Field Name="Artikelnr2_Projektartikel">
          <DataField>Artikelnr2_Projektartikel</DataField>
        </Field>
        <Field Name="Stuckzahl">
          <DataField>Stuckzahl</DataField>
        </Field>
        <Field Name="StuckzahlFormat">
          <DataField>StuckzahlFormat</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

