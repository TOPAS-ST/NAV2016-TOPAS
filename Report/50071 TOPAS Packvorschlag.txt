OBJECT Report 50071 TOPAS Packvorschlag
{
  OBJECT-PROPERTIES
  {
    Date=02.09.22;
    Time=13:19:18;
    Modified=Yes;
    Version List=Beleg Packvorschlag,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=WHERE(Document Type=CONST(Order));
               OnAfterGetRecord=BEGIN
                                  IF "Posting Date" <> WORKDATE THEN CurrReport.QUIT;

                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  FormatAdr.SalesHeaderSellTo(DebAdr,"Sales Header");
                                  AndruckText[1] := '';
                                  AndruckText[2] := '';
                                  AndruckText[3] := '';
                                  LiefDeb.GET("Sell-to Customer No.");
                                  IF LiefDeb."besondere Versandbedingungen" = TRUE THEN BEGIN
                                    AndruckText[1] := 'Bitte die besonderen Versandbedingungen fr ' + "Sell-to Customer Name" + ' beachten:';
                                    AndruckText[2] := LiefDeb.Versandbedingungen;
                                  END;
                                  IF LiefDeb."MAT Label Spezifikation" = TRUE THEN
                                     AndruckText[3] := 'MAT Label!';
                                END;

               ReqFilterFields=No. }

    { 2   ;1   ;Column  ;Account2            ;
               IncludeCaption=No;
               SourceExpr=Account2 }

    { 3   ;1   ;Column  ;Account             ;
               IncludeCaption=No;
               SourceExpr=Account }

    { 4   ;1   ;Column  ;DebAdr1             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[1] }

    { 5   ;1   ;Column  ;DebAdr2             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[2] }

    { 6   ;1   ;Column  ;DebAdr3             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[3] }

    { 7   ;1   ;Column  ;DebAdr4             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[4] }

    { 8   ;1   ;Column  ;DebAdr5             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[5] }

    { 9   ;1   ;Column  ;DebAdr6             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[6] }

    { 10  ;1   ;Column  ;DebAdr8             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[8] }

    { 11  ;1   ;Column  ;DebAdr7             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[7] }

    { 12  ;1   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="No." }

    { 13  ;1   ;Column  ;Sell_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 14  ;1   ;Column  ;PostingDate_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Posting Date" }

    { 15  ;1   ;Column  ;AndruckText2        ;
               IncludeCaption=No;
               SourceExpr=AndruckText[2] }

    { 16  ;1   ;Column  ;AndruckText1        ;
               IncludeCaption=No;
               SourceExpr=AndruckText[1] }

    { 17  ;1   ;Column  ;AndruckText3        ;
               IncludeCaption=No;
               SourceExpr=AndruckText[3] }

    { 1000000000;1;DataItem;Bemerkung        ;
               DataItemTable=Table44;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 1000000002;2;Column;Comment_SalesCommentLine;
               IncludeCaption=No;
               SourceExpr=Comment }

    { 18  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=WHERE(Type=CONST(Item));
               OnAfterGetRecord=BEGIN
                                  hinweis_acs_projektinfo := '';
                                  Artikel.GET("No.");
                                  IF (Artikel.Serviceklassifizierung <> 'SYSTEM CHAMPS') AND (Artikel.Serviceklassifizierung <> 'SYSTEM FLAT')
                                  AND (Artikel."Manufacturer Code" = '59') AND ("Qty. to Ship" > 0) THEN BEGIN
                                    system_champs_verbindung := FALSE;
                                    //Prfe ob der Artikel ohne Champ Zuordnung gebucht wurde
                                    PrfeCHAMPZuordnung.RESET;
                                    PrfeCHAMPZuordnung.SETFILTER(Art,'%1',PrfeCHAMPZuordnung.Art::"SUP-AU");
                                    PrfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',"Document No.");
                                    PrfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',"Line No.");
                                    IF NOT PrfeCHAMPZuordnung.FINDFIRST THEN BEGIN
                                      //Prfe ob Systemartikel alleinstehend gebucht wurde
                                      PrfeSystemAUzeile.RESET;
                                      PrfeSystemAUzeile.SETFILTER("Document No.",'%1',"Document No.");
                                      PrfeSystemAUzeile.SETFILTER(Type,'%1',PrfeSystemAUzeile.Type::Item);
                                      PrfeSystemAUzeile.SETFILTER("Qty. to Ship",'>%1',0);
                                      IF PrfeSystemAUzeile.FINDFIRST THEN BEGIN
                                        REPEAT
                                          IF (Artikel.GET(PrfeSystemAUzeile."No.")) AND (PrfeSystemAUzeile."Line No." < "Line No.")
                                          AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS') OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                                            PrfeCHAMPZuordnung.RESET;
                                            PrfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',PrfeSystemAUzeile."Document No.");
                                            PrfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',PrfeSystemAUzeile."Line No.");
                                            IF NOT PrfeCHAMPZuordnung.FINDFIRST THEN BEGIN
                                              system_champs_verbindung := TRUE;
                                            END;
                                          END;
                                        UNTIL PrfeSystemAUzeile.NEXT = 0;
                                        IF system_champs_verbindung = FALSE THEN
                                          hinweis_acs_projektinfo := 'Achtung: Beim Buchen dieses Artikels werden Sie dazu ' +
                                          'aufgefordert einen Systemvertrag auszuw„hlen. Hilfestellung ACS Projektinfo: ' + "System Projektinfos";
                                      END;
                                    END;
                                  END;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

    { 19  ;2   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemLink=No.=FIELD(No.) }

    { 20  ;3   ;Column  ;Endkunde_SalesLine  ;
               IncludeCaption=No;
               SourceExpr="Sales Line".Endkunde }

    { 21  ;3   ;Column  ;LineNo_SalesLine    ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Line No." }

    { 22  ;3   ;Column  ;Herstellerkurzname  ;
               SourceExpr=Herstellerkurzname }

    { 23  ;3   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Description }

    { 24  ;3   ;Column  ;Artikelnr2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 25  ;3   ;Column  ;QtytoShip_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Qty. to Ship" }

    { 26  ;3   ;Column  ;UnitofMeasure_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit of Measure" }

    { 27  ;3   ;Column  ;hinweis_acs_projektinfo;
               IncludeCaption=No;
               SourceExpr=hinweis_acs_projektinfo }

    { 1000000003;3;Column;Nettogewicht       ;
               IncludeCaption=No;
               SourceExpr="Net Weight" }

    { 1000000004;3;Column;Bruttogewicht      ;
               IncludeCaption=No;
               SourceExpr="Gross Weight" }

    { 28  ;3   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 29  ;2   ;DataItem;                    ;
               DataItemTable=Table337;
               DataItemLink=Source ID=FIELD(Document No.),
                            Source Ref. No.=FIELD(Line No.) }

    { 30  ;3   ;Column  ;Ursprungsland_ReservationEntry;
               IncludeCaption=No;
               SourceExpr=Ursprungsland }

    { 31  ;3   ;Column  ;LotNo_ReservationEntry;
               IncludeCaption=No;
               SourceExpr="Lot No." }

    { 32  ;3   ;Column  ;ReservationEntryQuantity_Base__1;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr="Quantity (Base)"*-1 }

    { 33  ;3   ;Column  ;SerialNo_ReservationEntry;
               IncludeCaption=No;
               SourceExpr=seriennr }

    { 1000000001;3;Column;ProductKey_ReservationEntry;
               IncludeCaption=No;
               SourceExpr="Product Key" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      titel@1140000 : Text[30];
      lief@1140001 : Text[30];
      debart@1140002 : Text[80];
      vk_zeile@1140003 : Record 37;
      art1@1140005 : Record 27;
      Artikel@1140037 : Record 27;
      LiefDeb@1140006 : Record 18;
      VerkEinkPerson@1140007 : Record 13;
      Firmendaten@1140008 : Record 79;
      Reservierung@1140029 : Record 337;
      PrfeSystemAUzeile@1140035 : Record 37;
      PrfeCHAMPZuordnung@1140038 : Record 50027;
      LiefDruckZ„hler@1140009 : Codeunit 314;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140011 : ARRAY [8] OF Text[50];
      FirmaAdr@1140012 : ARRAY [8] OF Text[50];
      Verk„uferText@1140013 : Text[20];
      ReferenzText@1140014 : Text[30];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      DebAdrZeigen@1140019 : Boolean;
      i@1140020 : Integer;
      FormatAdr@1140021 : Codeunit 365;
      lead_free_text0@1140022 : Text[80];
      lead_free_text1@1140023 : Text[80];
      leadfree_symbol@1140024 : Text[3];
      leadfree_artikel@1140025 : Record 27;
      lead_free_text2@1140026 : Text[80];
      ansp@1140030 : Text[40];
      tel@1140031 : Text[40];
      fax@1140032 : Text[40];
      seite@1140033 : Text[30];
      einheiten_text@1140034 : Text[30];
      seriennr@1000000000 : Code[40];
      VerkAdr@1140041 : Text[50];
      Anschrift@1140042 : ARRAY [9] OF Text[50];
      Account@1140027 : Text[90];
      Account2@1140028 : Text[30];
      AndruckText@1140039 : ARRAY [5] OF Text[120];
      hinweis_acs_projektinfo@1140036 : Text[260];
      system_champs_verbindung@1140004 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        IF ("Sales Header".Spediteuraccount <> '') THEN BEGIN
          Account := "Sales Header".Spediteuraccount;
          Account2 := 'Account beachten!';
        END ELSE BEGIN
          Account := "Sales Header"."Shipping Agent Code";
          Account2 := '';
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Footer2@5011(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput((AndruckText[1] <> '') OR (AndruckText[2] <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Footer3@5012(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput(AndruckText[3] <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Header4@5013(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body3@5022(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Line"."Qty. to Ship" <> 0);
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body5@5014(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Line"."Qty. to Ship" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body6@5015(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        Reservierung.RESET;
        Reservierung.SETFILTER("Source ID",'%1',"Sales Line"."Document No.");
        Reservierung.SETFILTER("Source Ref. No.",'%1',"Sales Line"."Line No.");
        IF ((NOT Reservierung.FINDFIRST) AND ("Sales Line"."Qty. to Ship" <> 0)
           AND (Item."Item Tracking Code" <> 'KEINE')) THEN
          ReportForNav.ShowOutput(TRUE)
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body7@5016(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
      //  IF ("Sales Line"."Qty. to Ship" <> 0) AND ("Sales Line"."No." = 'TGSP-P034EFD15LFTR') THEN
      //    ReportForNav.ShowOutput(TRUE)
      //  ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body8@5017(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(hinweis_acs_projektinfo <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Header9@5018(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line"."Qty. to Ship" <> 0)
        AND ("Quantity (Base)" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body10@5019(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line"."Qty. to Ship" <> 0)
        AND ("Quantity (Base)" <> 0)
        AND ("Lot No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body11@5020(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
          seriennr := "Serial No.";
        IF Artikel.GET("Item No.") THEN BEGIN
          IF (Artikel."Item Tracking Code" = 'PRODUCTKEY') OR ((Artikel."Item Tracking Code" = 'SN-ODER-PK') AND (STRPOS("Serial No.",'VT') <> 0)) THEN
            seriennr := "Product Key";
        END;
        ReportForNav.ShowOutput (("Sales Line"."Qty. to Ship" <> 0)
        AND ("Quantity (Base)" <> 0)
        AND (seriennr <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body12@5021(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput(FALSE);
        IF Artikel.GET("Item No.") THEN
          IF Artikel."Item Tracking Code" = 'SERIENNR+P' THEN
            ReportForNav.ShowOutput(("Sales Line"."Qty. to Ship" <> 0)
                                     AND ("Product Key" <> '')
                                     AND ("Quantity (Base)" <> 0));
      END;// Autogenerated by ForNav;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Body1': OnPreSectionSalesHeader_Body1("Sales Header");
          'Footer2': OnPreSectionSalesHeader_Footer2("Sales Header");
          'Footer3': OnPreSectionSalesHeader_Footer3("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Header4': OnPreSectionSalesLine_Header4("Sales Line");
        END;
        'Item': CASE SectionId OF
          'Body5': OnPreSectionItem_Body5(Item);
          'Body3': OnPreSectionItem_Body3(Item);
          'Body6': OnPreSectionItem_Body6(Item);
          'Body7': OnPreSectionItem_Body7(Item);
          'Body8': OnPreSectionItem_Body8(Item);
        END;
        'ReservationEntry': CASE SectionId OF
          'Header9': OnPreSectionReservationEntry_Header9("Reservation Entry");
          'Body10': OnPreSectionReservationEntry_Body10("Reservation Entry");
          'Body11': OnPreSectionReservationEntry_Body11("Reservation Entry");
          'Body12': OnPreSectionReservationEntry_Body12("Reservation Entry");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>LXMAAOVd227cOJq+H2DfQV0DDDoLtyKKOnbbM4gPmQRxHI/tdBY7GBgqiVXWWJZqJFUS98U+zT7G
3s2LLSlRKh1+slilSi5mGgjaJbLInx9//mexjv/09SnRPpO8iLP0ZIZ0Y6aRNMyiOF2ezNbl4idv
9qc//sfvjv+rzIMbssrysrgMnrN1eUvyOEji30iubf78tR3I0k3dZqPdkAX9ONPOsrTMs+TueUVO
Zufk88XXVU6KQu8MrH982/l4pAl6fWaDH2nNXM1UR9rZOinXOTlJyZp2T4606/U8icN35PkueyTp
iT+3UWDOnYVlzhdzO5xpV8ETpeZrOzils7eEmXYdLMkbEi8fypOZ6btG/eRTHJUP9AEy6IP3Qb6M
04J+w6NE2EeaZbB/bOlszI9pTL97R9LyofiwePU+TpL4iZQkZ0OtSP4uTqOT2Strpp2vYjqmTf96
TcGizxisR5q7KmlbUAa32ToPKb2/p5j+ZDDqP59lT6ugjOdxEpfP53GxSoLnkxltMA1kNxQUr7Oc
PmpXNtM+zP9OwvIqO5nZhuHSVfOv1njcfbh+dUuJCx8/Z3kRPiTBckZ5QNOOT4M0Kqo/6Ye3JXlC
9f6ag/2tJ2Q0s07sWw3Wt0FCijckiNj6Nwu+Il8YrtckvyFhllNAynxNZtrbqGKeZqS7YJ4wAtn/
sMPW94/XcUKxfB2TJKJbcJXpM+2SfCbJycwYfO/XmHw5mX16c3Fz8eN5Fq6f6JZoFb1nH65u7378
kFOiXryY8fUNljtcMgaXfJpFz93lss+ou9BbijvdhF7rm6D4kF7nhLc1a6/Z7vXJzPWNWYcKSgef
ueg97dNnNSTUhN2Rr+Vp9hUhyzBMeLt4F0ojPcp0Wh8bRwhRFC+zMGCEvU6ygLKlb7m6d6SZlq0j
IdOa1oqe4KJ8pvt1miUR52BSVjtVU/YqDLN1WlJq2NTdz2+y/LdXSbykWFySRVl3qB6wTTuZvY+j
KCFV0wACCsItm/Q6j7OcnokaDHoUPhakJnARJAVF9+UQu5cVeBCiZj2II0F0KOD2QhRhVxeLgR0Q
HQB6eDxdVTxNCE9cD+KJ8URqeLqOcWSP4bQNhqWve0Is/e1QnpP5qyhHDZTtx0ND6atCiSEoLa5f
DQmWaqedYqk7QjR9YzqWZh/Lb3DMGduogWlBYNp8FFMCJiz2d2BM0zoAlLgPJf4GUGJVKG0ISoeP
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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Account2">
          <DataField>Account2</DataField>
        </Field>
        <Field Name="Account">
          <DataField>Account</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesHeader">
          <DataField>Sell_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="PostingDate_SalesHeader">
          <DataField>PostingDate_SalesHeader</DataField>
        </Field>
        <Field Name="AndruckText2">
          <DataField>AndruckText2</DataField>
        </Field>
        <Field Name="AndruckText1">
          <DataField>AndruckText1</DataField>
        </Field>
        <Field Name="AndruckText3">
          <DataField>AndruckText3</DataField>
        </Field>
        <Field Name="Comment_SalesCommentLine">
          <DataField>Comment_SalesCommentLine</DataField>
        </Field>
        <Field Name="Endkunde_SalesLine">
          <DataField>Endkunde_SalesLine</DataField>
        </Field>
        <Field Name="LineNo_SalesLine">
          <DataField>LineNo_SalesLine</DataField>
        </Field>
        <Field Name="Herstellerkurzname">
          <DataField>Herstellerkurzname</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesLine">
          <DataField>Artikelnr2_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLine">
          <DataField>QtytoShip_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLineFormat">
          <DataField>QtytoShip_SalesLineFormat</DataField>
        </Field>
        <Field Name="UnitofMeasure_SalesLine">
          <DataField>UnitofMeasure_SalesLine</DataField>
        </Field>
        <Field Name="hinweis_acs_projektinfo">
          <DataField>hinweis_acs_projektinfo</DataField>
        </Field>
        <Field Name="Nettogewicht">
          <DataField>Nettogewicht</DataField>
        </Field>
        <Field Name="NettogewichtFormat">
          <DataField>NettogewichtFormat</DataField>
        </Field>
        <Field Name="Bruttogewicht">
          <DataField>Bruttogewicht</DataField>
        </Field>
        <Field Name="BruttogewichtFormat">
          <DataField>BruttogewichtFormat</DataField>
        </Field>
        <Field Name="Ursprungsland_ReservationEntry">
          <DataField>Ursprungsland_ReservationEntry</DataField>
        </Field>
        <Field Name="LotNo_ReservationEntry">
          <DataField>LotNo_ReservationEntry</DataField>
        </Field>
        <Field Name="ReservationEntryQuantity_Base__1">
          <DataField>ReservationEntryQuantity_Base__1</DataField>
        </Field>
        <Field Name="ReservationEntryQuantity_Base__1Format">
          <DataField>ReservationEntryQuantity_Base__1Format</DataField>
        </Field>
        <Field Name="SerialNo_ReservationEntry">
          <DataField>SerialNo_ReservationEntry</DataField>
        </Field>
        <Field Name="ProductKey_ReservationEntry">
          <DataField>ProductKey_ReservationEntry</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

