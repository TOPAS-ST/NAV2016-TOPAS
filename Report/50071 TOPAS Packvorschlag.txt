OBJECT Report 50071 TOPAS Packvorschlag
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=09:35:58;
    Modified=Yes;
    Version List=Beleg Packvorschlag,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=WHERE(Document Type=CONST(Order));
               OnAfterGetRecord=BEGIN
                                  IF "Posting Date" <> WORKDATE THEN CurrReport.QUIT;

                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  FormatAdr.SalesHeaderSellTo(DebAdr,"Sales Header");
                                  AndruckText[1] := '';
                                  AndruckText[2] := '';
                                  AndruckText[3] := '';
                                  LiefDeb.GET("Sell-to Customer No.");
                                  IF LiefDeb."besondere Versandbedingungen" = TRUE THEN BEGIN
                                    AndruckText[1] := 'Bitte die besonderen Versandbedingungen fr ' + "Sell-to Customer Name" + ' beachten:';
                                    AndruckText[2] := LiefDeb.Versandbedingungen;
                                  END;
                                  IF LiefDeb."MAT Label Spezifikation" = TRUE THEN
                                     AndruckText[3] := 'MAT Label!';
                                END;

               ReqFilterFields=No. }

    { 2   ;1   ;Column  ;Account2            ;
               IncludeCaption=No;
               SourceExpr=Account2 }

    { 3   ;1   ;Column  ;Account             ;
               IncludeCaption=No;
               SourceExpr=Account }

    { 4   ;1   ;Column  ;DebAdr1             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[1] }

    { 5   ;1   ;Column  ;DebAdr2             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[2] }

    { 6   ;1   ;Column  ;DebAdr3             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[3] }

    { 7   ;1   ;Column  ;DebAdr4             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[4] }

    { 8   ;1   ;Column  ;DebAdr5             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[5] }

    { 9   ;1   ;Column  ;DebAdr6             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[6] }

    { 10  ;1   ;Column  ;DebAdr8             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[8] }

    { 11  ;1   ;Column  ;DebAdr7             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[7] }

    { 12  ;1   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="No." }

    { 13  ;1   ;Column  ;Sell_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 14  ;1   ;Column  ;PostingDate_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Posting Date" }

    { 15  ;1   ;Column  ;AndruckText2        ;
               IncludeCaption=No;
               SourceExpr=AndruckText[2] }

    { 16  ;1   ;Column  ;AndruckText1        ;
               IncludeCaption=No;
               SourceExpr=AndruckText[1] }

    { 17  ;1   ;Column  ;AndruckText3        ;
               IncludeCaption=No;
               SourceExpr=AndruckText[3] }

    { 1000000000;1;DataItem;Bemerkung        ;
               DataItemTable=Table44;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 1000000002;2;Column;Comment_SalesCommentLine;
               IncludeCaption=No;
               SourceExpr=Comment }

    { 18  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=WHERE(Type=CONST(Item));
               OnAfterGetRecord=BEGIN
                                  hinweis_acs_projektinfo := '';
                                  Artikel.GET("No.");
                                  IF (Artikel.Serviceklassifizierung <> 'SYSTEM CHAMPS') AND (Artikel.Serviceklassifizierung <> 'SYSTEM FLAT')
                                  AND (Artikel."Manufacturer Code" = '59') AND ("Qty. to Ship" > 0) THEN BEGIN
                                    system_champs_verbindung := FALSE;
                                    //Prfe ob der Artikel ohne Champ Zuordnung gebucht wurde
                                    PrfeCHAMPZuordnung.RESET;
                                    PrfeCHAMPZuordnung.SETFILTER(Art,'%1',PrfeCHAMPZuordnung.Art::"SUP-AU");
                                    PrfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',"Document No.");
                                    PrfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',"Line No.");
                                    IF NOT PrfeCHAMPZuordnung.FINDFIRST THEN BEGIN
                                      //Prfe ob Systemartikel alleinstehend gebucht wurde
                                      PrfeSystemAUzeile.RESET;
                                      PrfeSystemAUzeile.SETFILTER("Document No.",'%1',"Document No.");
                                      PrfeSystemAUzeile.SETFILTER(Type,'%1',PrfeSystemAUzeile.Type::Item);
                                      PrfeSystemAUzeile.SETFILTER("Qty. to Ship",'>%1',0);
                                      IF PrfeSystemAUzeile.FINDFIRST THEN BEGIN
                                        REPEAT
                                          IF (Artikel.GET(PrfeSystemAUzeile."No.")) AND (PrfeSystemAUzeile."Line No." < "Line No.")
                                          AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS') OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                                            PrfeCHAMPZuordnung.RESET;
                                            PrfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',PrfeSystemAUzeile."Document No.");
                                            PrfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',PrfeSystemAUzeile."Line No.");
                                            IF NOT PrfeCHAMPZuordnung.FINDFIRST THEN BEGIN
                                              system_champs_verbindung := TRUE;
                                            END;
                                          END;
                                        UNTIL PrfeSystemAUzeile.NEXT = 0;
                                        IF system_champs_verbindung = FALSE THEN
                                          hinweis_acs_projektinfo := 'Achtung: Beim Buchen dieses Artikels werden Sie dazu ' +
                                          'aufgefordert einen Systemvertrag auszuw„hlen. Hilfestellung ACS Projektinfo: ' + "System Projektinfos";
                                      END;
                                    END;
                                  END;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

    { 19  ;2   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemLink=No.=FIELD(No.) }

    { 20  ;3   ;Column  ;Endkunde_SalesLine  ;
               IncludeCaption=No;
               SourceExpr="Sales Line".Endkunde }

    { 21  ;3   ;Column  ;LineNo_SalesLine    ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Line No." }

    { 22  ;3   ;Column  ;SearchDescription_Item;
               IncludeCaption=No;
               SourceExpr="Search Description" }

    { 23  ;3   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Description }

    { 24  ;3   ;Column  ;Artikelnr2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 25  ;3   ;Column  ;QtytoShip_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Qty. to Ship" }

    { 26  ;3   ;Column  ;UnitofMeasure_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit of Measure" }

    { 27  ;3   ;Column  ;hinweis_acs_projektinfo;
               IncludeCaption=No;
               SourceExpr=hinweis_acs_projektinfo }

    { 28  ;3   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 29  ;2   ;DataItem;                    ;
               DataItemTable=Table337;
               DataItemLink=Source ID=FIELD(Document No.),
                            Source Ref. No.=FIELD(Line No.) }

    { 30  ;3   ;Column  ;Ursprungsland_ReservationEntry;
               IncludeCaption=No;
               SourceExpr=Ursprungsland }

    { 31  ;3   ;Column  ;LotNo_ReservationEntry;
               IncludeCaption=No;
               SourceExpr="Lot No." }

    { 32  ;3   ;Column  ;ReservationEntryQuantity_Base__1;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr="Quantity (Base)"*-1 }

    { 33  ;3   ;Column  ;SerialNo_ReservationEntry;
               SourceExpr=seriennr }

    { 1000000001;3;Column;ProductKey_ReservationEntry;
               IncludeCaption=No;
               SourceExpr="Product Key" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      titel@1140000 : Text[30];
      lief@1140001 : Text[30];
      debart@1140002 : Text[80];
      vk_zeile@1140003 : Record 37;
      art1@1140005 : Record 27;
      Artikel@1140037 : Record 27;
      LiefDeb@1140006 : Record 18;
      VerkEinkPerson@1140007 : Record 13;
      Firmendaten@1140008 : Record 79;
      Reservierung@1140029 : Record 337;
      PrfeSystemAUzeile@1140035 : Record 37;
      PrfeCHAMPZuordnung@1140038 : Record 50027;
      LiefDruckZ„hler@1140009 : Codeunit 314;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140011 : ARRAY [8] OF Text[50];
      FirmaAdr@1140012 : ARRAY [8] OF Text[50];
      Verk„uferText@1140013 : Text[20];
      ReferenzText@1140014 : Text[30];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      DebAdrZeigen@1140019 : Boolean;
      i@1140020 : Integer;
      FormatAdr@1140021 : Codeunit 365;
      lead_free_text0@1140022 : Text[80];
      lead_free_text1@1140023 : Text[80];
      leadfree_symbol@1140024 : Text[3];
      leadfree_artikel@1140025 : Record 27;
      lead_free_text2@1140026 : Text[80];
      ansp@1140030 : Text[40];
      tel@1140031 : Text[40];
      fax@1140032 : Text[40];
      seite@1140033 : Text[30];
      einheiten_text@1140034 : Text[30];
      seriennr@1000000000 : Code[40];
      VerkAdr@1140041 : Text[50];
      Anschrift@1140042 : ARRAY [9] OF Text[50];
      Account@1140027 : Text[90];
      Account2@1140028 : Text[30];
      AndruckText@1140039 : ARRAY [5] OF Text[120];
      hinweis_acs_projektinfo@1140036 : Text[260];
      system_champs_verbindung@1140004 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        IF ("Sales Header".Spediteuraccount <> '') THEN BEGIN
          Account := "Sales Header".Spediteuraccount;
          Account2 := 'Account beachten!';
        END ELSE BEGIN
          Account := "Sales Header"."Shipping Agent Code";
          Account2 := '';
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Footer2@5011(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput((AndruckText[1] <> '') OR (AndruckText[2] <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Footer3@5012(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput(AndruckText[3] <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Header4@5013(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body5@5014(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Line"."Qty. to Ship" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body6@5015(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        Reservierung.RESET;
        Reservierung.SETFILTER("Source ID",'%1',"Sales Line"."Document No.");
        Reservierung.SETFILTER("Source Ref. No.",'%1',"Sales Line"."Line No.");
        IF ((NOT Reservierung.FINDFIRST) AND ("Sales Line"."Qty. to Ship" <> 0)
           AND (Item."Item Tracking Code" <> 'KEINE')) THEN
          ReportForNav.ShowOutput(TRUE)
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body7@5016(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
      //  IF ("Sales Line"."Qty. to Ship" <> 0) AND ("Sales Line"."No." = 'TGSP-P034EFD15LFTR') THEN
      //    ReportForNav.ShowOutput(TRUE)
      //  ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body8@5017(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(hinweis_acs_projektinfo <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Header9@5018(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line"."Qty. to Ship" <> 0)
        AND ("Quantity (Base)" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body10@5019(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line"."Qty. to Ship" <> 0)
        AND ("Quantity (Base)" <> 0)
        AND ("Lot No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body11@5020(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
          seriennr := "Serial No.";
        IF Artikel.GET("Item No.") THEN BEGIN
          IF (Artikel."Item Tracking Code" = 'PRODUCTKEY') OR ((Artikel."Item Tracking Code" = 'SN-ODER-PK') AND (STRPOS("Serial No.",'VT') <> 0)) THEN
            seriennr := "Product Key";
        END;
        ReportForNav.ShowOutput (("Sales Line"."Qty. to Ship" <> 0)
        AND ("Quantity (Base)" <> 0)
        AND (seriennr <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body12@5021(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput(FALSE);
        IF Artikel.GET("Item No.") THEN
          IF Artikel."Item Tracking Code" = 'SERIENNR+P' THEN
            ReportForNav.ShowOutput(("Sales Line"."Qty. to Ship" <> 0)
                                     AND ("Product Key" <> '')
                                     AND ("Quantity (Base)" <> 0));
      END;// Autogenerated by ForNav;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Body1': OnPreSectionSalesHeader_Body1("Sales Header");
          'Footer2': OnPreSectionSalesHeader_Footer2("Sales Header");
          'Footer3': OnPreSectionSalesHeader_Footer3("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Header4': OnPreSectionSalesLine_Header4("Sales Line");
        END;
        'Item': CASE SectionId OF
          'Body5': OnPreSectionItem_Body5(Item);
          'Body6': OnPreSectionItem_Body6(Item);
          'Body7': OnPreSectionItem_Body7(Item);
          'Body8': OnPreSectionItem_Body8(Item);
        END;
        'ReservationEntry': CASE SectionId OF
          'Header9': OnPreSectionReservationEntry_Header9("Reservation Entry");
          'Body10': OnPreSectionReservationEntry_Body10("Reservation Entry");
          'Body11': OnPreSectionReservationEntry_Body11("Reservation Entry");
          'Body12': OnPreSectionReservationEntry_Body12("Reservation Entry");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

