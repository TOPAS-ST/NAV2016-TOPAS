OBJECT Report 50071 TOPAS Packvorschlag
{
  OBJECT-PROPERTIES
  {
    Date=09.05.18;
    Time=14:04:43;
    Modified=Yes;
    Version List=Beleg Packvorschlag,FORNAV3.1.0.1460/1460;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=WHERE(Document Type=CONST(Order));
               OnAfterGetRecord=BEGIN
                                  IF "Posting Date" <> WORKDATE THEN CurrReport.QUIT;

                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  FormatAdr.SalesHeaderSellTo(DebAdr,"Sales Header");
                                  AndruckText[1] := '';
                                  AndruckText[2] := '';
                                  AndruckText[3] := '';
                                  LiefDeb.GET("Sell-to Customer No.");
                                  IF LiefDeb."besondere Versandbedingungen" = TRUE THEN BEGIN
                                    AndruckText[1] := 'Bitte die besonderen Versandbedingungen fr ' + "Sell-to Customer Name" + ' beachten:';
                                    AndruckText[2] := LiefDeb."Text Versandbedingungen";
                                  END;
                                  IF LiefDeb."MAT Label Spezifikation" = TRUE THEN
                                     AndruckText[3] := 'MAT Label!';
                                END;
                                 }

    { 2   ;1   ;Column  ;Account2            ;
               SourceExpr=Account2 }

    { 3   ;1   ;Column  ;Account             ;
               SourceExpr=Account }

    { 4   ;1   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 5   ;1   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 6   ;1   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 7   ;1   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 8   ;1   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 9   ;1   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 10  ;1   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 11  ;1   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 12  ;1   ;Column  ;No_SalesHeader      ;
               SourceExpr="No." }

    { 13  ;1   ;Column  ;Sell_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 14  ;1   ;Column  ;PostingDate_SalesHeader;
               SourceExpr="Posting Date" }

    { 15  ;1   ;Column  ;AndruckText2        ;
               SourceExpr=AndruckText[2] }

    { 16  ;1   ;Column  ;AndruckText1        ;
               SourceExpr=AndruckText[1] }

    { 17  ;1   ;Column  ;AndruckText3        ;
               SourceExpr=AndruckText[3] }

    { 1000000000;1;DataItem;Bemerkung        ;
               DataItemTable=Table44;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 1000000002;2;Column;Comment_SalesCommentLine;
               SourceExpr=Comment }

    { 18  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=WHERE(Type=CONST(Item));
               OnAfterGetRecord=BEGIN
                                  hinweis_acs_projektinfo := '';
                                  Artikel.GET("No.");
                                  IF (Artikel.Serviceklassifizierung <> 'SYSTEM CHAMPS') AND (Artikel.Serviceklassifizierung <> 'SYSTEM FLAT')
                                  AND (Artikel."Manufacturer Code" = '59') AND ("Qty. to Ship" > 0) THEN BEGIN
                                    system_champs_verbindung := FALSE;
                                    //Prfe ob der Artikel ohne Champ Zuordnung gebucht wurde
                                    PrfeCHAMPZuordnung.RESET;
                                    PrfeCHAMPZuordnung.SETFILTER(Art,'%1',PrfeCHAMPZuordnung.Art::"SUP-AU");
                                    PrfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',"Document No.");
                                    PrfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',"Line No.");
                                    IF NOT PrfeCHAMPZuordnung.FINDFIRST THEN BEGIN
                                      //Prfe ob Systemartikel alleinstehend gebucht wurde
                                      PrfeSystemAUzeile.RESET;
                                      PrfeSystemAUzeile.SETFILTER("Document No.",'%1',"Document No.");
                                      PrfeSystemAUzeile.SETFILTER(Type,'%1',PrfeSystemAUzeile.Type::Item);
                                      PrfeSystemAUzeile.SETFILTER("Qty. to Ship",'>%1',0);
                                      IF PrfeSystemAUzeile.FINDFIRST THEN BEGIN
                                        REPEAT
                                          IF (Artikel.GET(PrfeSystemAUzeile."No.")) AND (PrfeSystemAUzeile."Line No." < "Line No.")
                                          AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS') OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                                            PrfeCHAMPZuordnung.RESET;
                                            PrfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',PrfeSystemAUzeile."Document No.");
                                            PrfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',PrfeSystemAUzeile."Line No.");
                                            IF NOT PrfeCHAMPZuordnung.FINDFIRST THEN BEGIN
                                              system_champs_verbindung := TRUE;
                                            END;
                                          END;
                                        UNTIL PrfeSystemAUzeile.NEXT = 0;
                                        IF system_champs_verbindung = FALSE THEN
                                          hinweis_acs_projektinfo := 'Achtung: Beim Buchen dieses Artikels werden Sie dazu ' +
                                          'aufgefordert einen Systemvertrag auszuw„hlen.'+
                                          ' Hilfestellung ACS Projektinfo: ' + "System Projektinfos";
                                      END;
                                    END;
                                  END;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

    { 19  ;2   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemLink=No.=FIELD(No.) }

    { 20  ;3   ;Column  ;Endkunde_SalesLine  ;
               SourceExpr="Sales Line".Endkunde }

    { 21  ;3   ;Column  ;LineNo_SalesLine    ;
               SourceExpr="Sales Line"."Line No." }

    { 22  ;3   ;Column  ;SearchDescription_Item;
               SourceExpr="Search Description" }

    { 23  ;3   ;Column  ;Description_SalesLine;
               SourceExpr="Sales Line".Description }

    { 24  ;3   ;Column  ;Artikelnr2_SalesLine;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 25  ;3   ;Column  ;QtytoShip_SalesLine ;
               SourceExpr="Sales Line"."Qty. to Ship" }

    { 26  ;3   ;Column  ;UnitofMeasure_SalesLine;
               SourceExpr="Sales Line"."Unit of Measure" }

    { 27  ;3   ;Column  ;hinweis_acs_projektinfo;
               SourceExpr=hinweis_acs_projektinfo }

    { 28  ;3   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 29  ;2   ;DataItem;                    ;
               DataItemTable=Table337;
               DataItemLink=Source ID=FIELD(Document No.),
                            Source Ref. No.=FIELD(Line No.) }

    { 30  ;3   ;Column  ;Ursprungsland_ReservationEntry;
               SourceExpr=Ursprungsland }

    { 31  ;3   ;Column  ;LotNo_ReservationEntry;
               SourceExpr="Lot No." }

    { 32  ;3   ;Column  ;ReservationEntryQuantity_Base__1;
               DecimalPlaces=0:0;
               SourceExpr="Reservation Entry"."Quantity (Base)"*-1 }

    { 33  ;3   ;Column  ;SerialNo_ReservationEntry;
               SourceExpr="Serial No." }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      titel@1140000 : Text[30];
      lief@1140001 : Text[30];
      debart@1140002 : Text[80];
      vk_zeile@1140003 : Record 37;
      art1@1140005 : Record 27;
      Artikel@1140037 : Record 27;
      LiefDeb@1140006 : Record 18;
      VerkEinkPerson@1140007 : Record 13;
      Firmendaten@1140008 : Record 79;
      Reservierung@1140029 : Record 337;
      PrfeSystemAUzeile@1140035 : Record 37;
      PrfeCHAMPZuordnung@1140038 : Record 50027;
      LiefDruckZ„hler@1140009 : Codeunit 314;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140011 : ARRAY [8] OF Text[50];
      FirmaAdr@1140012 : ARRAY [8] OF Text[50];
      Verk„uferText@1140013 : Text[20];
      ReferenzText@1140014 : Text[30];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      DebAdrZeigen@1140019 : Boolean;
      i@1140020 : Integer;
      FormatAdr@1140021 : Codeunit 365;
      lead_free_text0@1140022 : Text[80];
      lead_free_text1@1140023 : Text[80];
      leadfree_symbol@1140024 : Text[3];
      leadfree_artikel@1140025 : Record 27;
      lead_free_text2@1140026 : Text[80];
      ansp@1140030 : Text[40];
      tel@1140031 : Text[40];
      fax@1140032 : Text[40];
      seite@1140033 : Text[30];
      einheiten_text@1140034 : Text[30];
      VerkAdr@1140041 : Text[50];
      Anschrift@1140042 : ARRAY [9] OF Text[50];
      Account@1140027 : Text[90];
      Account2@1140028 : Text[30];
      AndruckText@1140039 : ARRAY [5] OF Text[120];
      hinweis_acs_projektinfo@1140036 : Text[260];
      system_champs_verbindung@1140004 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput ("Sales Header"."Posting Date" = WORKDATE);
        IF ("Sales Header".Spediteuraccount <> '') THEN BEGIN
          Account := "Sales Header".Spediteuraccount;
          Account2 := 'Account beachten!';
        END ELSE BEGIN
          Account := "Sales Header"."Shipping Agent Code";
          Account2 := '';
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Footer2@5011(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput(("Sales Header"."Posting Date" = WORKDATE) AND ((AndruckText[1] <> '') OR (AndruckText[2] <> '')));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Footer3@5012(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput(("Sales Header"."Posting Date" = WORKDATE) AND (AndruckText[3] <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Header4@5013(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput ("Sales Header"."Posting Date" = WORKDATE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body5@5014(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput (("Sales Line"."Qty. to Ship" <> 0)
        AND ("Sales Header"."Posting Date" = WORKDATE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body6@5015(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        Reservierung.RESET;
        Reservierung.SETFILTER("Source ID",'%1',"Sales Line"."Document No.");
        Reservierung.SETFILTER("Source Ref. No.",'%1',"Sales Line"."Line No.");
        IF ((NOT Reservierung.FINDFIRST) AND ("Sales Line"."Qty. to Ship" <> 0)
        AND ("Sales Header"."Posting Date" = WORKDATE)) AND (Item."Item Tracking Code" <> 'KEINE') THEN
          ReportForNav.ShowOutput(TRUE)
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body7@5016(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        IF ("Sales Line"."Qty. to Ship" <> 0) AND ("Sales Header"."Posting Date" = WORKDATE)
        AND ("Sales Line"."No." = 'TGSP-P034EFD15LFTR') THEN
          ReportForNav.ShowOutput(TRUE)
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body8@5017(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput((hinweis_acs_projektinfo <> '') AND ("Sales Header"."Posting Date" = WORKDATE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Header9@5018(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput (("Sales Line"."Qty. to Ship" <> 0)
        AND ("Reservation Entry"."Quantity (Base)" <> 0)
        AND ("Sales Header"."Posting Date"=WORKDATE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body10@5019(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput (("Sales Line"."Qty. to Ship" <> 0)
        AND ("Reservation Entry"."Quantity (Base)" <> 0)
        AND ("Reservation Entry"."Lot No." <> '')
        AND ("Sales Header"."Posting Date" = WORKDATE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body11@5020(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput (("Sales Line"."Qty. to Ship" <> 0)
        AND ("Reservation Entry"."Quantity (Base)" <> 0)
        AND ("Reservation Entry"."Serial No." <> '')
        AND ("Sales Header"."Posting Date" = WORKDATE));
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Body1': OnPreSectionSalesHeader_Body1("Sales Header");
          'Footer2': OnPreSectionSalesHeader_Footer2("Sales Header");
          'Footer3': OnPreSectionSalesHeader_Footer3("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Header4': OnPreSectionSalesLine_Header4("Sales Line");
        END;
        'Item': CASE SectionId OF
          'Body5': OnPreSectionItem_Body5(Item);
          'Body6': OnPreSectionItem_Body6(Item);
          'Body7': OnPreSectionItem_Body7(Item);
          'Body8': OnPreSectionItem_Body8(Item);
        END;
        'ReservationEntry': CASE SectionId OF
          'Header9': OnPreSectionReservationEntry_Header9("Reservation Entry");
          'Body10': OnPreSectionReservationEntry_Body10("Reservation Entry");
          'Body11': OnPreSectionReservationEntry_Body11("Reservation Entry");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5014(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5015();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

