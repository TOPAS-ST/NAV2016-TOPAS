OBJECT Report 50071 TOPAS Packvorschlag
{
  OBJECT-PROPERTIES
  {
    Date=11.06.19;
    Time=10:56:47;
    Modified=Yes;
    Version List=Beleg Packvorschlag,FORNAV3.1.0.1460/1460;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=WHERE(Document Type=CONST(Order));
               OnAfterGetRecord=BEGIN
                                  IF "Posting Date" <> WORKDATE THEN CurrReport.QUIT;

                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  FormatAdr.SalesHeaderSellTo(DebAdr,"Sales Header");
                                  AndruckText[1] := '';
                                  AndruckText[2] := '';
                                  AndruckText[3] := '';
                                  LiefDeb.GET("Sell-to Customer No.");
                                  IF LiefDeb."besondere Versandbedingungen" = TRUE THEN BEGIN
                                    AndruckText[1] := 'Bitte die besonderen Versandbedingungen fr ' + "Sell-to Customer Name" + ' beachten:';
                                    AndruckText[2] := LiefDeb."Text Versandbedingungen";
                                  END;
                                  IF LiefDeb."MAT Label Spezifikation" = TRUE THEN
                                     AndruckText[3] := 'MAT Label!';
                                END;

               ReqFilterFields=No. }

    { 2   ;1   ;Column  ;Account2            ;
               IncludeCaption=No;
               SourceExpr=Account2 }

    { 3   ;1   ;Column  ;Account             ;
               IncludeCaption=No;
               SourceExpr=Account }

    { 4   ;1   ;Column  ;DebAdr1             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[1] }

    { 5   ;1   ;Column  ;DebAdr2             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[2] }

    { 6   ;1   ;Column  ;DebAdr3             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[3] }

    { 7   ;1   ;Column  ;DebAdr4             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[4] }

    { 8   ;1   ;Column  ;DebAdr5             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[5] }

    { 9   ;1   ;Column  ;DebAdr6             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[6] }

    { 10  ;1   ;Column  ;DebAdr8             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[8] }

    { 11  ;1   ;Column  ;DebAdr7             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[7] }

    { 12  ;1   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="No." }

    { 13  ;1   ;Column  ;Sell_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 14  ;1   ;Column  ;PostingDate_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Posting Date" }

    { 15  ;1   ;Column  ;AndruckText2        ;
               IncludeCaption=No;
               SourceExpr=AndruckText[2] }

    { 16  ;1   ;Column  ;AndruckText1        ;
               IncludeCaption=No;
               SourceExpr=AndruckText[1] }

    { 17  ;1   ;Column  ;AndruckText3        ;
               IncludeCaption=No;
               SourceExpr=AndruckText[3] }

    { 1000000000;1;DataItem;Bemerkung        ;
               DataItemTable=Table44;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 1000000002;2;Column;Comment_SalesCommentLine;
               IncludeCaption=No;
               SourceExpr=Comment }

    { 18  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=WHERE(Type=CONST(Item));
               OnAfterGetRecord=BEGIN
                                  hinweis_acs_projektinfo := '';
                                  Artikel.GET("No.");
                                  IF (Artikel.Serviceklassifizierung <> 'SYSTEM CHAMPS') AND (Artikel.Serviceklassifizierung <> 'SYSTEM FLAT')
                                  AND (Artikel."Manufacturer Code" = '59') AND ("Qty. to Ship" > 0) THEN BEGIN
                                    system_champs_verbindung := FALSE;
                                    //Prfe ob der Artikel ohne Champ Zuordnung gebucht wurde
                                    PrfeCHAMPZuordnung.RESET;
                                    PrfeCHAMPZuordnung.SETFILTER(Art,'%1',PrfeCHAMPZuordnung.Art::"SUP-AU");
                                    PrfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',"Document No.");
                                    PrfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',"Line No.");
                                    IF NOT PrfeCHAMPZuordnung.FINDFIRST THEN BEGIN
                                      //Prfe ob Systemartikel alleinstehend gebucht wurde
                                      PrfeSystemAUzeile.RESET;
                                      PrfeSystemAUzeile.SETFILTER("Document No.",'%1',"Document No.");
                                      PrfeSystemAUzeile.SETFILTER(Type,'%1',PrfeSystemAUzeile.Type::Item);
                                      PrfeSystemAUzeile.SETFILTER("Qty. to Ship",'>%1',0);
                                      IF PrfeSystemAUzeile.FINDFIRST THEN BEGIN
                                        REPEAT
                                          IF (Artikel.GET(PrfeSystemAUzeile."No.")) AND (PrfeSystemAUzeile."Line No." < "Line No.")
                                          AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS') OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                                            PrfeCHAMPZuordnung.RESET;
                                            PrfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',PrfeSystemAUzeile."Document No.");
                                            PrfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',PrfeSystemAUzeile."Line No.");
                                            IF NOT PrfeCHAMPZuordnung.FINDFIRST THEN BEGIN
                                              system_champs_verbindung := TRUE;
                                            END;
                                          END;
                                        UNTIL PrfeSystemAUzeile.NEXT = 0;
                                        IF system_champs_verbindung = FALSE THEN
                                          hinweis_acs_projektinfo := 'Achtung: Beim Buchen dieses Artikels werden Sie dazu ' +
                                          'aufgefordert einen Systemvertrag auszuw„hlen. Hilfestellung ACS Projektinfo: ' + "System Projektinfos";
                                      END;
                                    END;
                                  END;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

    { 19  ;2   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemLink=No.=FIELD(No.) }

    { 20  ;3   ;Column  ;Endkunde_SalesLine  ;
               IncludeCaption=No;
               SourceExpr="Sales Line".Endkunde }

    { 21  ;3   ;Column  ;LineNo_SalesLine    ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Line No." }

    { 22  ;3   ;Column  ;SearchDescription_Item;
               IncludeCaption=No;
               SourceExpr="Search Description" }

    { 23  ;3   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Description }

    { 24  ;3   ;Column  ;Artikelnr2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 25  ;3   ;Column  ;QtytoShip_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Qty. to Ship" }

    { 26  ;3   ;Column  ;UnitofMeasure_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit of Measure" }

    { 27  ;3   ;Column  ;hinweis_acs_projektinfo;
               IncludeCaption=No;
               SourceExpr=hinweis_acs_projektinfo }

    { 28  ;3   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 29  ;2   ;DataItem;                    ;
               DataItemTable=Table337;
               DataItemLink=Source ID=FIELD(Document No.),
                            Source Ref. No.=FIELD(Line No.) }

    { 30  ;3   ;Column  ;Ursprungsland_ReservationEntry;
               IncludeCaption=No;
               SourceExpr=Ursprungsland }

    { 31  ;3   ;Column  ;LotNo_ReservationEntry;
               IncludeCaption=No;
               SourceExpr="Lot No." }

    { 32  ;3   ;Column  ;ReservationEntryQuantity_Base__1;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr="Quantity (Base)"*-1 }

    { 33  ;3   ;Column  ;SerialNo_ReservationEntry;
               SourceExpr=seriennr }

    { 1000000001;3;Column;ProductKey_ReservationEntry;
               IncludeCaption=No;
               SourceExpr="Product Key" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      titel@1140000 : Text[30];
      lief@1140001 : Text[30];
      debart@1140002 : Text[80];
      vk_zeile@1140003 : Record 37;
      art1@1140005 : Record 27;
      Artikel@1140037 : Record 27;
      LiefDeb@1140006 : Record 18;
      VerkEinkPerson@1140007 : Record 13;
      Firmendaten@1140008 : Record 79;
      Reservierung@1140029 : Record 337;
      PrfeSystemAUzeile@1140035 : Record 37;
      PrfeCHAMPZuordnung@1140038 : Record 50027;
      LiefDruckZ„hler@1140009 : Codeunit 314;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140011 : ARRAY [8] OF Text[50];
      FirmaAdr@1140012 : ARRAY [8] OF Text[50];
      Verk„uferText@1140013 : Text[20];
      ReferenzText@1140014 : Text[30];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      DebAdrZeigen@1140019 : Boolean;
      i@1140020 : Integer;
      FormatAdr@1140021 : Codeunit 365;
      lead_free_text0@1140022 : Text[80];
      lead_free_text1@1140023 : Text[80];
      leadfree_symbol@1140024 : Text[3];
      leadfree_artikel@1140025 : Record 27;
      lead_free_text2@1140026 : Text[80];
      ansp@1140030 : Text[40];
      tel@1140031 : Text[40];
      fax@1140032 : Text[40];
      seite@1140033 : Text[30];
      einheiten_text@1140034 : Text[30];
      seriennr@1000000000 : Code[40];
      VerkAdr@1140041 : Text[50];
      Anschrift@1140042 : ARRAY [9] OF Text[50];
      Account@1140027 : Text[90];
      Account2@1140028 : Text[30];
      AndruckText@1140039 : ARRAY [5] OF Text[120];
      hinweis_acs_projektinfo@1140036 : Text[260];
      system_champs_verbindung@1140004 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        IF ("Sales Header".Spediteuraccount <> '') THEN BEGIN
          Account := "Sales Header".Spediteuraccount;
          Account2 := 'Account beachten!';
        END ELSE BEGIN
          Account := "Sales Header"."Shipping Agent Code";
          Account2 := '';
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Footer2@5011(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput((AndruckText[1] <> '') OR (AndruckText[2] <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Footer3@5012(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput(AndruckText[3] <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Header4@5013(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body5@5014(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Line"."Qty. to Ship" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body6@5015(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        Reservierung.RESET;
        Reservierung.SETFILTER("Source ID",'%1',"Sales Line"."Document No.");
        Reservierung.SETFILTER("Source Ref. No.",'%1',"Sales Line"."Line No.");
        IF ((NOT Reservierung.FINDFIRST) AND ("Sales Line"."Qty. to Ship" <> 0)
           AND (Item."Item Tracking Code" <> 'KEINE')) THEN
          ReportForNav.ShowOutput(TRUE)
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body7@5016(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
      //  IF ("Sales Line"."Qty. to Ship" <> 0) AND ("Sales Line"."No." = 'TGSP-P034EFD15LFTR') THEN
      //    ReportForNav.ShowOutput(TRUE)
      //  ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body8@5017(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(hinweis_acs_projektinfo <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Header9@5018(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line"."Qty. to Ship" <> 0)
        AND ("Quantity (Base)" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body10@5019(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line"."Qty. to Ship" <> 0)
        AND ("Quantity (Base)" <> 0)
        AND ("Lot No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body11@5020(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
          seriennr := "Serial No.";
        IF Artikel.GET("Item No.") THEN BEGIN
          IF (Artikel."Item Tracking Code" = 'PRODUCTKEY') OR ((Artikel."Item Tracking Code" = 'SN-ODER-PK') AND (STRPOS("Serial No.",'NODATA') <> 0)) THEN
            seriennr := "Product Key";
        END;
        ReportForNav.ShowOutput (("Sales Line"."Qty. to Ship" <> 0)
        AND ("Quantity (Base)" <> 0)
        AND (seriennr <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body12@5021(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput(FALSE);
        IF Artikel.GET("Item No.") THEN
          IF Artikel."Item Tracking Code" = 'SERIENNR+P' THEN
            ReportForNav.ShowOutput(("Sales Line"."Qty. to Ship" <> 0)
                                     AND ("Product Key" <> '')
                                     AND ("Quantity (Base)" <> 0));
      END;// Autogenerated by ForNav;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Body1': OnPreSectionSalesHeader_Body1("Sales Header");
          'Footer2': OnPreSectionSalesHeader_Footer2("Sales Header");
          'Footer3': OnPreSectionSalesHeader_Footer3("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Header4': OnPreSectionSalesLine_Header4("Sales Line");
        END;
        'Item': CASE SectionId OF
          'Body5': OnPreSectionItem_Body5(Item);
          'Body6': OnPreSectionItem_Body6(Item);
          'Body7': OnPreSectionItem_Body7(Item);
          'Body8': OnPreSectionItem_Body8(Item);
        END;
        'ReservationEntry': CASE SectionId OF
          'Header9': OnPreSectionReservationEntry_Header9("Reservation Entry");
          'Body10': OnPreSectionReservationEntry_Body10("Reservation Entry");
          'Body11': OnPreSectionReservationEntry_Body11("Reservation Entry");
          'Body12': OnPreSectionReservationEntry_Body12("Reservation Entry");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5014(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5015();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Account2">
          <DataField>Account2</DataField>
        </Field>
        <Field Name="Account">
          <DataField>Account</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesHeader">
          <DataField>Sell_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="PostingDate_SalesHeader">
          <DataField>PostingDate_SalesHeader</DataField>
        </Field>
        <Field Name="AndruckText2">
          <DataField>AndruckText2</DataField>
        </Field>
        <Field Name="AndruckText1">
          <DataField>AndruckText1</DataField>
        </Field>
        <Field Name="AndruckText3">
          <DataField>AndruckText3</DataField>
        </Field>
        <Field Name="Comment_SalesCommentLine">
          <DataField>Comment_SalesCommentLine</DataField>
        </Field>
        <Field Name="Endkunde_SalesLine">
          <DataField>Endkunde_SalesLine</DataField>
        </Field>
        <Field Name="LineNo_SalesLine">
          <DataField>LineNo_SalesLine</DataField>
        </Field>
        <Field Name="SearchDescription_Item">
          <DataField>SearchDescription_Item</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesLine">
          <DataField>Artikelnr2_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLine">
          <DataField>QtytoShip_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLineFormat">
          <DataField>QtytoShip_SalesLineFormat</DataField>
        </Field>
        <Field Name="UnitofMeasure_SalesLine">
          <DataField>UnitofMeasure_SalesLine</DataField>
        </Field>
        <Field Name="hinweis_acs_projektinfo">
          <DataField>hinweis_acs_projektinfo</DataField>
        </Field>
        <Field Name="Ursprungsland_ReservationEntry">
          <DataField>Ursprungsland_ReservationEntry</DataField>
        </Field>
        <Field Name="LotNo_ReservationEntry">
          <DataField>LotNo_ReservationEntry</DataField>
        </Field>
        <Field Name="ReservationEntryQuantity_Base__1">
          <DataField>ReservationEntryQuantity_Base__1</DataField>
        </Field>
        <Field Name="ReservationEntryQuantity_Base__1Format">
          <DataField>ReservationEntryQuantity_Base__1Format</DataField>
        </Field>
        <Field Name="SerialNo_ReservationEntry">
          <DataField>SerialNo_ReservationEntry</DataField>
        </Field>
        <Field Name="ProductKey_ReservationEntry">
          <DataField>ProductKey_ReservationEntry</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

