OBJECT Report 50071 TOPAS Packvorschlag
{
  OBJECT-PROPERTIES
  {
    Date=19.05.22;
    Time=08:34:48;
    Modified=Yes;
    Version List=Beleg Packvorschlag,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=WHERE(Document Type=CONST(Order));
               OnAfterGetRecord=BEGIN
                                  IF "Posting Date" <> WORKDATE THEN CurrReport.QUIT;

                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  FormatAdr.SalesHeaderSellTo(DebAdr,"Sales Header");
                                  AndruckText[1] := '';
                                  AndruckText[2] := '';
                                  AndruckText[3] := '';
                                  LiefDeb.GET("Sell-to Customer No.");
                                  IF LiefDeb."besondere Versandbedingungen" = TRUE THEN BEGIN
                                    AndruckText[1] := 'Bitte die besonderen Versandbedingungen fr ' + "Sell-to Customer Name" + ' beachten:';
                                    AndruckText[2] := LiefDeb.Versandbedingungen;
                                  END;
                                  IF LiefDeb."MAT Label Spezifikation" = TRUE THEN
                                     AndruckText[3] := 'MAT Label!';
                                END;

               ReqFilterFields=No. }

    { 2   ;1   ;Column  ;Account2            ;
               IncludeCaption=No;
               SourceExpr=Account2 }

    { 3   ;1   ;Column  ;Account             ;
               IncludeCaption=No;
               SourceExpr=Account }

    { 4   ;1   ;Column  ;DebAdr1             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[1] }

    { 5   ;1   ;Column  ;DebAdr2             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[2] }

    { 6   ;1   ;Column  ;DebAdr3             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[3] }

    { 7   ;1   ;Column  ;DebAdr4             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[4] }

    { 8   ;1   ;Column  ;DebAdr5             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[5] }

    { 9   ;1   ;Column  ;DebAdr6             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[6] }

    { 10  ;1   ;Column  ;DebAdr8             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[8] }

    { 11  ;1   ;Column  ;DebAdr7             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[7] }

    { 12  ;1   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="No." }

    { 13  ;1   ;Column  ;Sell_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 14  ;1   ;Column  ;PostingDate_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Posting Date" }

    { 15  ;1   ;Column  ;AndruckText2        ;
               IncludeCaption=No;
               SourceExpr=AndruckText[2] }

    { 16  ;1   ;Column  ;AndruckText1        ;
               IncludeCaption=No;
               SourceExpr=AndruckText[1] }

    { 17  ;1   ;Column  ;AndruckText3        ;
               IncludeCaption=No;
               SourceExpr=AndruckText[3] }

    { 1000000000;1;DataItem;Bemerkung        ;
               DataItemTable=Table44;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 1000000002;2;Column;Comment_SalesCommentLine;
               IncludeCaption=No;
               SourceExpr=Comment }

    { 18  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=WHERE(Type=CONST(Item));
               OnAfterGetRecord=BEGIN
                                  hinweis_acs_projektinfo := '';
                                  Artikel.GET("No.");
                                  IF (Artikel.Serviceklassifizierung <> 'SYSTEM CHAMPS') AND (Artikel.Serviceklassifizierung <> 'SYSTEM FLAT')
                                  AND (Artikel."Manufacturer Code" = '59') AND ("Qty. to Ship" > 0) THEN BEGIN
                                    system_champs_verbindung := FALSE;
                                    //Prfe ob der Artikel ohne Champ Zuordnung gebucht wurde
                                    PrfeCHAMPZuordnung.RESET;
                                    PrfeCHAMPZuordnung.SETFILTER(Art,'%1',PrfeCHAMPZuordnung.Art::"SUP-AU");
                                    PrfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',"Document No.");
                                    PrfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',"Line No.");
                                    IF NOT PrfeCHAMPZuordnung.FINDFIRST THEN BEGIN
                                      //Prfe ob Systemartikel alleinstehend gebucht wurde
                                      PrfeSystemAUzeile.RESET;
                                      PrfeSystemAUzeile.SETFILTER("Document No.",'%1',"Document No.");
                                      PrfeSystemAUzeile.SETFILTER(Type,'%1',PrfeSystemAUzeile.Type::Item);
                                      PrfeSystemAUzeile.SETFILTER("Qty. to Ship",'>%1',0);
                                      IF PrfeSystemAUzeile.FINDFIRST THEN BEGIN
                                        REPEAT
                                          IF (Artikel.GET(PrfeSystemAUzeile."No.")) AND (PrfeSystemAUzeile."Line No." < "Line No.")
                                          AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS') OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                                            PrfeCHAMPZuordnung.RESET;
                                            PrfeCHAMPZuordnung.SETFILTER("Belegnr.",'%1',PrfeSystemAUzeile."Document No.");
                                            PrfeCHAMPZuordnung.SETFILTER("Belegzeilennr.",'%1',PrfeSystemAUzeile."Line No.");
                                            IF NOT PrfeCHAMPZuordnung.FINDFIRST THEN BEGIN
                                              system_champs_verbindung := TRUE;
                                            END;
                                          END;
                                        UNTIL PrfeSystemAUzeile.NEXT = 0;
                                        IF system_champs_verbindung = FALSE THEN
                                          hinweis_acs_projektinfo := 'Achtung: Beim Buchen dieses Artikels werden Sie dazu ' +
                                          'aufgefordert einen Systemvertrag auszuw„hlen. Hilfestellung ACS Projektinfo: ' + "System Projektinfos";
                                      END;
                                    END;
                                  END;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

    { 19  ;2   ;DataItem;                    ;
               DataItemTable=Table27;
               DataItemLink=No.=FIELD(No.) }

    { 20  ;3   ;Column  ;Endkunde_SalesLine  ;
               IncludeCaption=No;
               SourceExpr="Sales Line".Endkunde }

    { 21  ;3   ;Column  ;LineNo_SalesLine    ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Line No." }

    { 22  ;3   ;Column  ;SearchDescription_Item;
               IncludeCaption=No;
               SourceExpr="Search Description" }

    { 23  ;3   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Description }

    { 24  ;3   ;Column  ;Artikelnr2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 25  ;3   ;Column  ;QtytoShip_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Qty. to Ship" }

    { 26  ;3   ;Column  ;UnitofMeasure_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit of Measure" }

    { 27  ;3   ;Column  ;hinweis_acs_projektinfo;
               IncludeCaption=No;
               SourceExpr=hinweis_acs_projektinfo }

    { 1000000003;3;Column;Nettogewicht       ;
               IncludeCaption=No;
               SourceExpr="Net Weight" }

    { 1000000004;3;Column;Bruttogewicht      ;
               IncludeCaption=No;
               SourceExpr="Gross Weight" }

    { 28  ;3   ;DataItem;                    ;
               DataItemTable=Table9;
               DataItemLink=Code=FIELD(Country/Region of Origin Code) }

    { 29  ;2   ;DataItem;                    ;
               DataItemTable=Table337;
               DataItemLink=Source ID=FIELD(Document No.),
                            Source Ref. No.=FIELD(Line No.) }

    { 30  ;3   ;Column  ;Ursprungsland_ReservationEntry;
               IncludeCaption=No;
               SourceExpr=Ursprungsland }

    { 31  ;3   ;Column  ;LotNo_ReservationEntry;
               IncludeCaption=No;
               SourceExpr="Lot No." }

    { 32  ;3   ;Column  ;ReservationEntryQuantity_Base__1;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr="Quantity (Base)"*-1 }

    { 33  ;3   ;Column  ;SerialNo_ReservationEntry;
               IncludeCaption=No;
               SourceExpr=seriennr }

    { 1000000001;3;Column;ProductKey_ReservationEntry;
               IncludeCaption=No;
               SourceExpr="Product Key" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      titel@1140000 : Text[30];
      lief@1140001 : Text[30];
      debart@1140002 : Text[80];
      vk_zeile@1140003 : Record 37;
      art1@1140005 : Record 27;
      Artikel@1140037 : Record 27;
      LiefDeb@1140006 : Record 18;
      VerkEinkPerson@1140007 : Record 13;
      Firmendaten@1140008 : Record 79;
      Reservierung@1140029 : Record 337;
      PrfeSystemAUzeile@1140035 : Record 37;
      PrfeCHAMPZuordnung@1140038 : Record 50027;
      LiefDruckZ„hler@1140009 : Codeunit 314;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140011 : ARRAY [8] OF Text[50];
      FirmaAdr@1140012 : ARRAY [8] OF Text[50];
      Verk„uferText@1140013 : Text[20];
      ReferenzText@1140014 : Text[30];
      MehrZeilen@1140015 : Boolean;
      AnzKopien@1140016 : Integer;
      AnzSchleifen@1140017 : Integer;
      KopieText@1140018 : Text[30];
      DebAdrZeigen@1140019 : Boolean;
      i@1140020 : Integer;
      FormatAdr@1140021 : Codeunit 365;
      lead_free_text0@1140022 : Text[80];
      lead_free_text1@1140023 : Text[80];
      leadfree_symbol@1140024 : Text[3];
      leadfree_artikel@1140025 : Record 27;
      lead_free_text2@1140026 : Text[80];
      ansp@1140030 : Text[40];
      tel@1140031 : Text[40];
      fax@1140032 : Text[40];
      seite@1140033 : Text[30];
      einheiten_text@1140034 : Text[30];
      seriennr@1000000000 : Code[40];
      VerkAdr@1140041 : Text[50];
      Anschrift@1140042 : ARRAY [9] OF Text[50];
      Account@1140027 : Text[90];
      Account2@1140028 : Text[30];
      AndruckText@1140039 : ARRAY [5] OF Text[120];
      hinweis_acs_projektinfo@1140036 : Text[260];
      system_champs_verbindung@1140004 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        IF ("Sales Header".Spediteuraccount <> '') THEN BEGIN
          Account := "Sales Header".Spediteuraccount;
          Account2 := 'Account beachten!';
        END ELSE BEGIN
          Account := "Sales Header"."Shipping Agent Code";
          Account2 := '';
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Footer2@5011(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput((AndruckText[1] <> '') OR (AndruckText[2] <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Footer3@5012(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput(AndruckText[3] <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Header4@5013(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body3@5022(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Line"."Qty. to Ship" <> 0);
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body5@5014(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput("Sales Line"."Qty. to Ship" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body6@5015(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        Reservierung.RESET;
        Reservierung.SETFILTER("Source ID",'%1',"Sales Line"."Document No.");
        Reservierung.SETFILTER("Source Ref. No.",'%1',"Sales Line"."Line No.");
        IF ((NOT Reservierung.FINDFIRST) AND ("Sales Line"."Qty. to Ship" <> 0)
           AND (Item."Item Tracking Code" <> 'KEINE')) THEN
          ReportForNav.ShowOutput(TRUE)
        ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body7@5016(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
      //  IF ("Sales Line"."Qty. to Ship" <> 0) AND ("Sales Line"."No." = 'TGSP-P034EFD15LFTR') THEN
      //    ReportForNav.ShowOutput(TRUE)
      //  ELSE
          ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body8@5017(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(hinweis_acs_projektinfo <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Header9@5018(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line"."Qty. to Ship" <> 0)
        AND ("Quantity (Base)" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body10@5019(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line"."Qty. to Ship" <> 0)
        AND ("Quantity (Base)" <> 0)
        AND ("Lot No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body11@5020(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
          seriennr := "Serial No.";
        IF Artikel.GET("Item No.") THEN BEGIN
          IF (Artikel."Item Tracking Code" = 'PRODUCTKEY') OR ((Artikel."Item Tracking Code" = 'SN-ODER-PK') AND (STRPOS("Serial No.",'VT') <> 0)) THEN
            seriennr := "Product Key";
        END;
        ReportForNav.ShowOutput (("Sales Line"."Qty. to Ship" <> 0)
        AND ("Quantity (Base)" <> 0)
        AND (seriennr <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionReservationEntry_Body12@5021(VAR "Reservation Entry"@1000000000 : Record 337);
    BEGIN
      WITH "Reservation Entry" DO BEGIN
        ReportForNav.ShowOutput(FALSE);
        IF Artikel.GET("Item No.") THEN
          IF Artikel."Item Tracking Code" = 'SERIENNR+P' THEN
            ReportForNav.ShowOutput(("Sales Line"."Qty. to Ship" <> 0)
                                     AND ("Product Key" <> '')
                                     AND ("Quantity (Base)" <> 0));
      END;// Autogenerated by ForNav;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Body1': OnPreSectionSalesHeader_Body1("Sales Header");
          'Footer2': OnPreSectionSalesHeader_Footer2("Sales Header");
          'Footer3': OnPreSectionSalesHeader_Footer3("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Header4': OnPreSectionSalesLine_Header4("Sales Line");
        END;
        'Item': CASE SectionId OF
          'Body5': OnPreSectionItem_Body5(Item);
          'Body3': OnPreSectionItem_Body3(Item);
          'Body6': OnPreSectionItem_Body6(Item);
          'Body7': OnPreSectionItem_Body7(Item);
          'Body8': OnPreSectionItem_Body8(Item);
        END;
        'ReservationEntry': CASE SectionId OF
          'Header9': OnPreSectionReservationEntry_Header9("Reservation Entry");
          'Body10': OnPreSectionReservationEntry_Body10("Reservation Entry");
          'Body11': OnPreSectionReservationEntry_Body11("Reservation Entry");
          'Body12': OnPreSectionReservationEntry_Body12("Reservation Entry");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
uGs7NJMaG0vgzdHAH0P8w78A</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

