OBJECT Report 50130 TOPAS-Rechnung DW
{
  OBJECT-PROPERTIES
  {
    Date=26.01.22;
    Time=13:44:58;
    Modified=Yes;
    Version List=Beleg Rechnungskopie --> 50131 !!!,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table112;
               DataItemTableView=SORTING(No.);
               ReqFilterHeadingML=DEU=Geb. Verkaufsrechnung;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                             END;

               OnAfterGetRecord=BEGIN
                                  VkRK := "Sales Invoice Header";
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Location Code" = 'MUST' THEN CurrReport.SKIP;
                                  v_reverse1 := '';
                                  IF "Order No." = '' THEN
                                    AuftragNrText := ''
                                  ELSE
                                    AuftragNrText := FIELDNAME("Order No.");
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    Verk„uferText := 'Verk„ufer';
                                  END;
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  END ELSE BEGIN
                                    TotalText := 'Total';
                                    TotalInklMWStText := 'Total inkl. MWSt';
                                  //  TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                  //  TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  END;
                                  FormatAdr.SalesInvBillTo(DebAdr,"Sales Invoice Header");
                                  Deb.GET("Bill-to Customer No.");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  FormatAdr.SalesInvShipTo(LieferAnAdr,"Sales Invoice Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  IF "Currency Code" = '' THEN BEGIN
                                    waehrung := '[ ' + 'EUR' + ' ]';
                                    waehrung2 := 'EUR';
                                  END ELSE BEGIN
                                    waehrung := '[ ' + "Currency Code" + ' ]';
                                    waehrung2 := "Currency Code";
                                  END;
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  v_bonusdatum := 0D;
                                  v_FER_SPL := FALSE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table291;
               OnAfterGetRecord=BEGIN
                                  spedition := "Shipping Agent";
                                END;

               DataItemLink=Code=FIELD(Shipping Agent Code) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  verk_debitor := Customer;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF Steuernummer = '' THEN
                                      Var_Steuernr := ''
                                    ELSE
                                     Var_Steuernr := 'Ihre Steuernummer:';
                                    IF "VAT Registration No." = '' THEN
                                      Var_UST_ID := ''
                                    ELSE
                                      Var_UST_ID := FIELDNAME("VAT Registration No.");
                                  END ELSE BEGIN
                                    Var_Steuernr := '';
                                    IF "VAT Registration No." = '' THEN
                                      Var_UST_ID := ''
                                    ELSE
                                      Var_UST_ID := 'Tax Number';
                                  END;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    IF "Sales Invoice Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Sales Invoice Header"."Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Sales Invoice Header"."Currency Code");
                                    END;
                                  END ELSE BEGIN
                                    IF "Sales Invoice Header"."Currency Code" = '' THEN BEGIN
                                      FIBUEinrichtung.TESTFIELD("LCY Code");
                                      TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',FIBUEinrichtung."LCY Code");
                                    END ELSE BEGIN
                                      TotalText := STRSUBSTNO('Total %1',"Sales Invoice Header"."Currency Code");
                                      TotalInklMWStText := STRSUBSTNO('Total %1 incl. V.A.T.',"Sales Invoice Header"."Currency Code");
                                    END;
                                  END;
                                  //Bonusdatum fllen
                                  IF  Customer.Bonusregelung <> '' THEN
                                    v_bonusdatum := Customer.Bonusdatum;
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 4   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               Deb."Invoice Copies" := 2;
                               //AnzSchleifen := ABS(AnzKopien) + Deb."Anzahl Rechnungskopien" + 1;
                               AnzSchleifen := 1;
                               IF AnzSchleifen <= 0 THEN
                                 AnzSchleifen := 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                               IF (("Sales Invoice Header"."Shipment Method Code" = 'ACCOUNT') OR ("Sales Invoice Header"."Shipment Method Code" = 'ACC-ENG')) THEN BEGIN
                                 //Account := "Sales Invoice Header".Spediteuraccount;
                                 Account := "Shipping Agent".Name + ' / ' + "Sales Invoice Header".Spediteuraccount;
                               END ELSE BEGIN
                                 Account := "Shipping Agent".Name
                               END;
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.PrinterSettings.PaperSource(3);
                                  //IF Nummer > 2 THEN
                                  //  ReportForNav.PrinterSettings.PaperSource(3);

                                  ReportForNav.PageNo := 1;
                                END;

               OnPostDataItem=BEGIN
                                //Z„hler deaktiviert 23.11.21 ST
                                {
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkRechDruckZ„hler.RUN("Sales Invoice Header");
                                }
                              END;
                               }

    { 5   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 6   ;3   ;Column  ;Picture_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 7   ;3   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 8   ;3   ;Column  ;Lieferscheinnr      ;
               IncludeCaption=No;
               SourceExpr=Lieferscheinnr }

    { 9   ;3   ;Column  ;Belegdatum          ;
               IncludeCaption=No;
               SourceExpr=Belegdatum }

    { 10  ;3   ;Column  ;Var_UST_ID          ;
               IncludeCaption=No;
               SourceExpr=Var_UST_ID }

    { 11  ;3   ;Column  ;Steuernummer_verk_debitor;
               IncludeCaption=No;
               SourceExpr=verk_debitor.Steuernummer }

    { 12  ;3   ;Column  ;Var_Steuernr        ;
               IncludeCaption=No;
               SourceExpr=Var_Steuernr }

    { 13  ;3   ;Column  ;KopieText           ;
               IncludeCaption=No;
               SourceExpr=KopieText }

    { 14  ;3   ;Column  ;No_SalesInvoiceHeader;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header"."No." }

    { 15  ;3   ;Column  ;Bill_toCustomerNo_SalesInvoiceHeader;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header"."Bill-to Customer No." }

    { 16  ;3   ;Column  ;OrderNo_SalesInvoiceHeader;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header"."Order No." }

    { 17  ;3   ;Column  ;VATRegistrationNo_VkRK;
               IncludeCaption=No;
               SourceExpr=VkRK."VAT Registration No." }

    { 18  ;3   ;Column  ;OurAccountNo_verk_debitor;
               IncludeCaption=No;
               SourceExpr=verk_debitor."Our Account No." }

    { 19  ;3   ;Column  ;SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header"."External Document No."+' '+"Sales Invoice Header"."Your Reference" }

    { 20  ;3   ;Column  ;PostingDate_SalesInvoiceHeader;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Invoice Header"."Posting Date",0,1) }

    { 21  ;3   ;Column  ;DebAdr8             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[8] }

    { 22  ;3   ;Column  ;DebAdr7             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[7] }

    { 23  ;3   ;Column  ;DebAdr6             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[6] }

    { 24  ;3   ;Column  ;DebAdr5             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[5] }

    { 25  ;3   ;Column  ;DebAdr4             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[4] }

    { 26  ;3   ;Column  ;DebAdr3             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[3] }

    { 27  ;3   ;Column  ;DebAdr2             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[2] }

    { 28  ;3   ;Column  ;DebAdr1             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[1] }

    { 29  ;3   ;Column  ;seite               ;
               IncludeCaption=No;
               SourceExpr=seite }

    { 30  ;3   ;DataItem;Sales Invoice Line  ;
               DataItemTable=Table113;
               DataItemTableView=SORTING(Document No.,Line No.);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := FIND('+');
                               WHILE MehrZeilen AND (Description = '') AND ("No." = '') AND (Quantity = 0) AND (Amount = 0) DO
                                 MehrZeilen := NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SETRANGE("Line No.",0,"Line No.");
                               {lshanf c02}
                               grechrabbetr := 0;
                               {lshend}
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "VAT %";
                                  MWSTBetragZeile."VAT Base" := Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  {lshanf c02}
                                  IF "Inv. Discount Amount" <> 0 THEN BEGIN
                                    "grechrab%" := ("Inv. Discount Amount" * 100) / (Amount + "Inv. Discount Amount");
                                    grechrabbetr := grechrabbetr + Amount + "Inv. Discount Amount";
                                  END;
                                  {lshend}
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    steuer_text := MWSTBetragZeile.VATAmountText ;
                                    einheiten_text := "Sales Invoice Line"."Unit of Measure";
                                  END ELSE BEGIN
                                    steuer_text := MWSTBetragZeile.VATAmountText;
                                    IF "Sales Invoice Line"."Unit of Measure" <> 'STšCK' THEN
                                      einheiten_text := 'pcs.'
                                    ELSE
                                      einheiten_text := "Sales Invoice Line"."Unit of Measure";
                                  END;

                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Invoice Line".Type = "Sales Invoice Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Invoice Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE') AND ("Sales Invoice Line".Quantity > 0) THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                  IF v_FER_SPL = FALSE THEN BEGIN
                                    IF (("Sales Invoice Line"."Manufacturer Code" = '82') OR ("Sales Invoice Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL := TRUE;
                                    END;
                                  END;
                                END;

               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=Document No.=FIELD(No.) }

    { 31  ;4   ;Column  ;waehrungs_text      ;
               IncludeCaption=No;
               SourceExpr=waehrungs_text }

    { 32  ;4   ;Column  ;Amount_InvDiscountAmount;
               IncludeCaption=No;
               SourceExpr=Amount+"Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 33  ;4   ;Column  ;Description_SalesInvoiceLine;
               IncludeCaption=No;
               SourceExpr=Description }

    { 34  ;4   ;Column  ;UnitPrice_SalesInvoiceLine;
               IncludeCaption=No;
               SourceExpr="Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 35  ;4   ;Column  ;einheiten_text      ;
               IncludeCaption=No;
               SourceExpr=einheiten_text }

    { 36  ;4   ;Column  ;Quantity_SalesInvoiceLine;
               IncludeCaption=No;
               SourceExpr=Quantity }

    { 37  ;4   ;Column  ;InvDiscountAmount_SalesInvoiceLine;
               IncludeCaption=No;
               SourceExpr=-"Inv. Discount Amount" }

    { 38  ;4   ;Column  ;grechrabbetr        ;
               IncludeCaption=No;
               SourceExpr=grechrabbetr }

    { 39  ;4   ;Column  ;grechrabPct         ;
               IncludeCaption=No;
               SourceExpr="grechrab%" }

    { 40  ;4   ;Column  ;lead_free_text0     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text0 }

    { 41  ;4   ;Column  ;lead_free_text1     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text1 }

    { 42  ;4   ;Column  ;lead_free_text2     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text2 }

    { 43  ;4   ;Column  ;lead_text           ;
               IncludeCaption=No;
               SourceExpr=lead_text }

    { 44  ;4   ;Column  ;waehrung2           ;
               IncludeCaption=No;
               SourceExpr=waehrung2 }

    { 45  ;4   ;Column  ;TotalInklMWStText   ;
               IncludeCaption=No;
               SourceExpr=TotalInklMWStText }

    { 46  ;4   ;Column  ;TotalText           ;
               IncludeCaption=No;
               SourceExpr=TotalText }

    { 47  ;4   ;Column  ;steuer_text         ;
               IncludeCaption=No;
               SourceExpr=steuer_text }

    { 48  ;4   ;Column  ;AmountIncludingVAT_SalesInvoiceLine;
               IncludeCaption=No;
               SourceExpr="Amount Including VAT";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 49  ;4   ;Column  ;AmountIncludingVAT_Amount;
               IncludeCaption=No;
               SourceExpr="Amount Including VAT" - Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 50  ;4   ;Column  ;Amount_SalesInvoiceLine;
               IncludeCaption=No;
               SourceExpr=Amount;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 51  ;4   ;Column  ;SalesInvoiceLineGetCurrencyCode;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Line".GetCurrencyCode;
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 1000000003;4;Column;SalesInvoiceLineSWalsLeistung;
               IncludeCaption=No;
               SourceExpr="SW als Leistung" }

    { 52  ;4   ;DataItem;                    ;
               DataItemTable=Table27;
               OnPreDataItem=BEGIN
                               IF debart <> '' THEN
                               debart := 'Ihre Artikelnummer: ' + debart;
                             END;

               OnAfterGetRecord=BEGIN
                                  v_reverse := ' ';
                                  //IF Item."Global Dimension 2 Code" = 'WARTUNG' THEN BEGIN
                                  //  v_reverse := 'ø*';
                                  //  v_reverse1 := '1';
                                  //END;
                                  {
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" = 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '**';
                                      v_reverse1 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (Item."Gen. Prod. Posting Group" <> 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '***';
                                      v_reverse2 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group"='AUSLAND') AND (Item."Gen. Prod. Posting Group" = 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '**';
                                      v_reverse1 := '1';
                                    END;
                                    IF (("Sales Invoice Header"."Gen. Bus. Posting Group"='AUSLAND') AND (Item."Gen. Prod. Posting Group" <> 'SYSTEM')
                                    AND ("Sales Invoice Line".Quantity > 0)) THEN BEGIN
                                      v_reverse := '***';
                                      v_reverse2 := '1';
                                    END;
                                  END;
                                  }
                                  //// Ab hier fr 16%
                                  {
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = '16_SYSTEM') OR (Item."Gen. Prod. Posting Group" = '16_HANDEL')) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                        IF ((Item."Gen. Prod. Posting Group" = '16_SCHULUN') OR (Item."Gen. Prod. Posting Group" = '16_SERVICE') OR (Item."Gen. Prod. Posting Group" = '16_STD_POO')) THEN BEGIN
                                          IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = '16_SYSTEM') AND ("Sales Invoice Line"."SW als Leistung" = TRUE)) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '***';
                                          v_reverse1 := '';
                                          v_reverse2 := '1';
                                        END;
                                      END;
                                    END;
                                  END;
                                  }

                                  ////  Ab hier fr 19%
                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                    IF ((Item."Gen. Prod. Posting Group" = 'SYSTEM') OR (Item."Gen. Prod. Posting Group" = 'HANDEL')) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '**';
                                          v_reverse1 := '1';
                                        END;
                                      END ELSE BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = 'SCHULUNG') OR (Item."Gen. Prod. Posting Group" = 'SERVICE') OR (Item."Gen. Prod. Posting Group" = 'STD_POOL')) THEN BEGIN
                                          IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                            v_reverse := '***';
                                            v_reverse2 := '1';
                                          END;
                                        END;
                                      END;
                                    END;
                                  END;

                                  IF "Sales Invoice Header"."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
                                    IF "Sales Invoice Line".Quantity > 0 THEN BEGIN
                                      IF ((Item."Gen. Prod. Posting Group" = 'SYSTEM') AND ("Sales Invoice Line"."SW als Leistung" = TRUE)) THEN BEGIN
                                        IF (("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') OR ("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND')) THEN BEGIN
                                          v_reverse := '***';
                                          v_reverse1 := '';
                                          v_reverse2 := '1';
                                        END;
                                      END;
                                    END;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                debart := '';
                              END;

               DataItemLinkReference=Sales Invoice Line;
               DataItemLink=No.=FIELD(No.) }

    { 53  ;5   ;Column  ;v_reverse           ;
               IncludeCaption=No;
               SourceExpr=v_reverse }

    { 54  ;5   ;Column  ;lead_symbol         ;
               IncludeCaption=No;
               SourceExpr=lead_symbol }

    { 55  ;5   ;Column  ;vUrsprungsland      ;
               IncludeCaption=No;
               SourceExpr=vUrsprungsland }

    { 56  ;5   ;Column  ;Herstellerkurzname_Item;
               IncludeCaption=No;
               SourceExpr=Herstellerkurzname }

    { 57  ;5   ;Column  ;LineNo_SalesInvoiceLine;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Line"."Line No." }

    { 58  ;5   ;Column  ;Artikelnr2_SalesInvoiceLine;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Line"."Artikelnr. 2" }

    { 59  ;5   ;Column  ;Description_SalesInvoiceLine3;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Line".Description }

    { 60  ;5   ;Column  ;einheiten_text2     ;
               IncludeCaption=No;
               SourceExpr=einheiten_text }

    { 61  ;5   ;Column  ;Quantity_SalesInvoiceLine2;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Line".Quantity }

    { 62  ;5   ;Column  ;UnitPrice_SalesInvoiceLine2;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 63  ;5   ;Column  ;SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmount;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Line".Amount+"Sales Invoice Line"."Inv. Discount Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 64  ;5   ;Column  ;Description2_SalesInvoiceLine;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Line"."Description 2" }

    { 65  ;5   ;Column  ;TariffNo_Item       ;
               IncludeCaption=No;
               SourceExpr="Tariff No." }

    { 66  ;5   ;Column  ;Cross_ReferenceNo_SalesInvoiceLine;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Line"."Cross-Reference No." }

    { 67  ;5   ;Column  ;ECCN_Nr__ItemECCN_Nr;
               IncludeCaption=No;
               SourceExpr='ECCN-Nr.: '+ Item."ECCN-Nr." }

    { 69  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Invoice Header;
               DataItemLink=No.=FIELD(No.) }

    { 70  ;3   ;DataItem;MWStZ„hler          ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               IF MWSTBetragZeile.COUNT <= 1 THEN
                                 CurrReport.BREAK;
                               SETRANGE(Number,1,MWSTBetragZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  MWSTBetragZeile.GetLine(Number);
                                END;
                                 }

    { 71  ;4   ;Column  ;VATAmount_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Amount";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 72  ;4   ;Column  ;VATBase_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Line".GetCurrencyCode }

    { 73  ;4   ;Column  ;VATBase_MWSTBetragZeile2;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT Base";
               AutoFormatType=1;
               AutoFormatExpr="Sales Invoice Header"."Currency Code" }

    { 74  ;4   ;Column  ;VATPct_MWSTBetragZeile;
               IncludeCaption=No;
               SourceExpr=MWSTBetragZeile."VAT %" }

    { 75  ;3   ;DataItem;Total               ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 76  ;4   ;Column  ;v_bonusdatum        ;
               IncludeCaption=No;
               SourceExpr=v_bonusdatum }

    { 77  ;4   ;Column  ;Account             ;
               IncludeCaption=No;
               SourceExpr=Account }

    { 78  ;4   ;Column  ;Description_LieferBed;
               IncludeCaption=No;
               SourceExpr=LieferBed.Description }

    { 79  ;4   ;Column  ;gzbedtx             ;
               IncludeCaption=No;
               SourceExpr=gzbedtx }

    { 80  ;3   ;DataItem;Total2              ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               IF NOT LiefAdrAnzeigen THEN
                                 CurrReport.BREAK;
                             END;
                              }

    { 81  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header".FIELDCAPTION("Sell-to Customer No.") }

    { 82  ;4   ;Column  ;Sell_toCustomerNo_SalesInvoiceHeader;
               IncludeCaption=No;
               SourceExpr="Sales Invoice Header"."Sell-to Customer No." }

    { 83  ;4   ;Column  ;LieferAnAdr1        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[1] }

    { 84  ;4   ;Column  ;LieferAnAdr8        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[8] }

    { 85  ;4   ;Column  ;LieferAnAdr7        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[7] }

    { 86  ;4   ;Column  ;LieferAnAdr6        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[6] }

    { 87  ;4   ;Column  ;LieferAnAdr5        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[5] }

    { 88  ;4   ;Column  ;LieferAnAdr4        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[4] }

    { 89  ;4   ;Column  ;LieferAnAdr3        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[3] }

    { 90  ;4   ;Column  ;LieferAnAdr2        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[2] }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;;Container;
                  Name=UB;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      waehrung2@1140000 : Code[10];
      waehrung@1140001 : Code[10];
      debart@1140002 : Text[80];
      spedition@1140003 : Record 291;
      art1@1140004 : Record 27;
      verk_debitor@1140005 : Record 18;
      FIBUEinrichtung@1140006 : Record 98;
      LieferBed@1140007 : Record 10;
      ZlgBed@1140008 : Record 3;
      VerkEinkPerson@1140009 : Record 13;
      Firmendaten@1140010 : Record 79;
      Deb@1140011 : Record 18;
      MWSTBetragZeile@1140012 : TEMPORARY Record 290;
      language@1140061 : Record 8;
      PrinterSelection@1140065 : Record 78;
      VerkRechDruckZ„hler@1140013 : Codeunit 315;
      FormatAdr@1140014 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      DebAdr@1140015 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140016 : ARRAY [8] OF Text[50];
      FirmaAdr@1140017 : ARRAY [8] OF Text[50];
      AuftragNrText@1140018 : Text[30];
      Verk„uferText@1140019 : Text[30];
      MWStNrText@1140020 : Text[30];
      ReferenzText@1140021 : Text[30];
      TotalText@1140022 : Text[50];
      TotalInklMWStText@1140023 : Text[50];
      MehrZeilen@1140024 : Boolean;
      AnzKopien@1140025 : Integer;
      AnzSchleifen@1140026 : Integer;
      KopieText@1140027 : Text[30];
      LiefAdrAnzeigen@1140028 : Boolean;
      i@1140029 : Integer;
      "--------LSH--------"@1140030 : Integer;
      "grechrab%"@1140031 : Decimal;
      grechrabbetr@1140032 : Decimal;
      gzbedtx@1140033 : Text[100];
      lead_free_text0@1140034 : Text[80];
      lead_free_text1@1140035 : Text[80];
      leadfree_symbol@1140036 : Text[3];
      leadfree_artikel@1140037 : Record 27;
      lead_artikel@1140055 : Record 27;
      lead_symbol@1140057 : Text[3];
      lead_text@1140056 : Text[120];
      lead_free_text2@1140038 : Text[80];
      Var_UST_ID@1140039 : Text[20];
      Var_Steuernr@1140040 : Text[20];
      steuer_text@1140041 : Text[30];
      seite@1140042 : Text[30];
      waehrungs_text@1140043 : Text[15];
      einheiten_text@1140044 : Text[30];
      vk_rech_zeile@1140045 : Record 113;
      Account@1140046 : Text[90];
      vUrsprungsland@1140047 : Text[50];
      Lieferscheinnr@1140052 : Code[20];
      Belegdatum@1140054 : Date;
      InvoiceRowID@1140048 : Text[100];
      ValueEntryRelation@1140049 : Record 6508;
      ValueEntry@1140050 : Record 5802;
      ItemLedgerEntry@1140051 : Record 32;
      VkZeile@1140053 : Record 113;
      v_bonusdatum@1140058 : Date;
      v_reverse@1140059 : Text[3];
      v_reverse1@1140060 : Text[3];
      v_reverse2@1140063 : Text[3];
      v_FER_SPL@1140062 : Boolean;
      VkRK@1140064 : Record 112;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header1@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        IF CurrReport.LANGUAGE = 1031 THEN
          seite := STRSUBSTNO('Seite %1',FORMAT(ReportForNav.PageNo))
        ELSE
          seite := STRSUBSTNO('Page %1',FORMAT(ReportForNav.PageNo));
        //TOPAS 13.05.09 ST - Lieferscheinnr. auf Rechnung anzeigen
        Lieferscheinnr := '';
        Belegdatum := 0D;
        VkZeile.RESET;
        VkZeile.SETFILTER("Document No.","Sales Invoice Header"."No.");
        IF CurrReport.LANGUAGE = 1031 THEN
          VkZeile.SETFILTER(Type,'Artikel')
        ELSE
          VkZeile.SETFILTER(Type,'Item');
        VkZeile.SETFILTER(Quantity,'>%1',0);
        IF VkZeile.FINDFIRST THEN BEGIN
          InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,VkZeile."Document No.",'',0,VkZeile."Line No.");
          ValueEntryRelation.SETCURRENTKEY("Source RowId");
          ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
          IF ValueEntryRelation.FINDFIRST THEN BEGIN
            ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
            IF ValueEntry.FINDFIRST THEN BEGIN
              ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
              IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                Lieferscheinnr := ItemLedgerEntry."Document No.";
                Belegdatum := ItemLedgerEntry."Document Date";
              END;
            END;
          END;
        END;
        //TOPAS 29.06.15 ST - rendert das Firmenlogo fr Batch L„ufe, da das Logo beim normalen Druck vom Briefpapier bezogen wird
        IF PrinterSelection.GET(USERID,50076) THEN BEGIN
          IF (PrinterSelection."Printer Name" = 'PDFCreator')
          OR (PrinterSelection."Printer Name" = 'Bullzip PDF Printer') THEN
            Firmendaten.CALCFIELDS(Picture);
        END;
        //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
        Firmendaten.CALCFIELDS(Picture);
        //TOPAS Ende
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Header3@5011(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        IF "Sales Invoice Header"."Currency Code" = '' THEN
          waehrungs_text := 'EUR'
        ELSE
          waehrungs_text := "Sales Invoice Header"."Currency Code";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body5@5012(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        // ReportForNav.ShowOutput(Art = 0);
        // Unterdckt Artikeltexte wenn eine Artikelzeile nicht berechnet wird oder die Textzeilen aus Testkonserve 'Woche' oder leer ist
        vk_rech_zeile.SETFILTER("Document No.",'%1',"Sales Invoice Line"."Document No." );
        vk_rech_zeile.SETFILTER("Line No.",'%1',"Sales Invoice Line"."Attached to Line No." );
        IF vk_rech_zeile.FINDFIRST THEN BEGIN
          ReportForNav.ShowOutput(((vk_rech_zeile.Type = vk_rech_zeile.Type::Item) AND (vk_rech_zeile.Quantity > 0))
                                    OR (vk_rech_zeile.Type = 0) AND (vk_rech_zeile."No." <> 'WOCHE'));
        END ELSE BEGIN
          IF (("Sales Invoice Line"."Attached to Line No." = 0) AND ("Sales Invoice Line".Type = 0)
          AND ("Sales Invoice Line"."No." <> 'WOCHE') AND ("Sales Invoice Line".Description <> '')) THEN
            ReportForNav.ShowOutput(TRUE)
          ELSE
            ReportForNav.ShowOutput(FALSE);
        END;
        IF "Sales Invoice Line"."No." = 'LIEF_DRUCK' THEN
          ReportForNav.ShowOutput(FALSE);
        IF "Sales Invoice Line"."No." = 'LIEF_DRU_A' THEN
          ReportForNav.ShowOutput(TRUE);
        IF "Sales Invoice Line"."No." = 'BEIERSDORF' THEN
          ReportForNav.ShowOutput(TRUE);
        IF "Sales Invoice Line"."No." = 'AB_DRUCK' THEN
          ReportForNav.ShowOutput(FALSE);
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body6@5013(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput((Type = Type::"G/L Account")  AND ("Sales Invoice Line".Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body7@5014(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Type = Type::Item);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Body8@5015(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        {lshanf c03}
        ReportForNav.ShowOutput(("Description 2" <> '') AND ("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item));
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer10@5016(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput("Inv. Discount Amount" <> 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer11@5017(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer12@5018(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer13@5019(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer14@5020(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer16@5021(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
          ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer17@5022(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Customer."VAT Bus. Posting Group" <> 'HAN_AUSL' );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesInvoiceLine_Footer18@5023(VAR "Sales Invoice Line"@1000000000 : Record 113);
    BEGIN
      WITH "Sales Invoice Line" DO BEGIN
        ReportForNav.ShowOutput(Customer."VAT Bus. Posting Group" = 'HAN_AUSL' );
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body19@5024(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND ("Sales Invoice Line".Quantity > 0));
        //TOPAS 22.07.08 ST -Artikelposten / Wertposten holen , um Ursprungsland zu fllen
        vUrsprungsland := '';
        InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,"Sales Invoice Line"."Document No.",'',0,"Sales Invoice Line"."Line No.");
        ValueEntryRelation.SETCURRENTKEY("Source RowId");
        ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
        IF ValueEntryRelation.FINDFIRST THEN BEGIN
          REPEAT
            ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
            IF ValueEntry.FINDFIRST THEN BEGIN
              ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
              IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                IF vUrsprungsland <> '' THEN BEGIN
                  IF STRPOS(vUrsprungsland,ItemLedgerEntry.Ursprungsland) = 0 THEN
                  vUrsprungsland := vUrsprungsland + ',' + ItemLedgerEntry.Ursprungsland;
                END ELSE
                  vUrsprungsland := ItemLedgerEntry.Ursprungsland;
              END;
            END;
          UNTIL ValueEntryRelation.NEXT = 0;
        END;
        //
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body20@5025(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line"."Description 2" <> '')
         AND ("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND ("Sales Invoice Line".Quantity > 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body21@5026(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(((Item.NCNR = TRUE) AND ("Sales Invoice Line".Quantity > 0)) OR ((Item."Manufacturer Code" = '00')
         AND ("Sales Invoice Line".Quantity > 0)));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body22@5027(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        //debitor_artikel.SETFILTER(debitor_artikel."Artikelnr.",'%1',"Sales Invoice Line"."No.");
        //debitor_artikel.SETFILTER(debitor_artikel."Debitornr.",'%1',"Sales Invoice Line"."Sell-to Customer No.");
        //ReportForNav.ShowOutput((NOT debitor_artikel.FIND('-')) AND ("Sales Invoice Line".Quantity > 0) AND
        // ("Sales Invoice Line"."Cross-Reference No."='') AND (Item."Tariff No." <> ''));
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item)
         AND ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." <> '') AND ("Sales Invoice Line"."Cross-Reference No." = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body23@5028(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item)
         AND ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." <> '') AND ("Sales Invoice Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body24@5029(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND (Item."Tariff No." = '') AND ("Sales Invoice Line"."Cross-Reference No." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body25@5030(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type ="Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND (Item."ECCN-Nr." <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionItem_Body26@5031(VAR Item@1000000000 : Record 27);
    BEGIN
      WITH Item DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Line".Type = "Sales Invoice Line".Type::Item) AND
         ("Sales Invoice Line".Quantity > 0) AND ("Sales Invoice Line"."VAT Prod. Posting Group" = '13B2'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body32@5032(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(Customer.Bonusregelung <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body33@5033(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU') AND (v_reverse1 = '1'));
        //ReportForNav.ShowOutput(v_reverse1='1');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body34@5034(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse2 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body35@5035(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group" = 'AUSLAND') AND (v_reverse1 = '1'));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body36@5036(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        ReportForNav.ShowOutput(("Sales Invoice Header"."Gen. Bus. Posting Group"  = 'EU') AND (v_reverse2 = '1'));
        //ReportForNav.ShowOutput("Sales Invoice Header"."Gen. Bus. Posting Group" = 'EU');
        //ReportForNav.ShowOutput(v_reverse2 = '1');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal_Body37@5037(VAR Total@1000000000 : Record 2000000026);
    BEGIN
      WITH Total DO BEGIN
        {lshanf c01}
        IF ZlgBed."Discount %" <> 0 THEN BEGIN
        //  "Sales Invoice Header".CALCFIELDS(Skontobetrag);
          IF COPYSTR(ZlgBed.Description,1,1) <> '*' THEN
            gzbedtx := ZlgBed.Description;
        END ELSE BEGIN
            gzbedtx := ZlgBed.Description;
        END;
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTotal2_Body39@5038(VAR Total2@1000000000 : Record 2000000026);
    BEGIN
      WITH Total2 DO BEGIN
        ReportForNav.ShowOutput := "Sales Invoice Header"."Sell-to Customer No." <> "Sales Invoice Header"."Bill-to Customer No.";
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header1': OnPreSectionSeiteSchleife_Header1(SeiteSchleife);
        END;
        'SalesInvoiceLine': CASE SectionId OF
          'Header3': OnPreSectionSalesInvoiceLine_Header3("Sales Invoice Line");
          'Body5': OnPreSectionSalesInvoiceLine_Body5("Sales Invoice Line");
          'Body6': OnPreSectionSalesInvoiceLine_Body6("Sales Invoice Line");
          'Footer10': OnPreSectionSalesInvoiceLine_Footer10("Sales Invoice Line");
          'Footer11': OnPreSectionSalesInvoiceLine_Footer11("Sales Invoice Line");
          'Footer12': OnPreSectionSalesInvoiceLine_Footer12("Sales Invoice Line");
          'Footer13': OnPreSectionSalesInvoiceLine_Footer13("Sales Invoice Line");
          'Footer14': OnPreSectionSalesInvoiceLine_Footer14("Sales Invoice Line");
          'Footer16': OnPreSectionSalesInvoiceLine_Footer16("Sales Invoice Line");
          'Footer17': OnPreSectionSalesInvoiceLine_Footer17("Sales Invoice Line");
          'Footer18': OnPreSectionSalesInvoiceLine_Footer18("Sales Invoice Line");
        END;
        'Item': CASE SectionId OF
          'Body19': OnPreSectionItem_Body19(Item);
          'Body20': OnPreSectionItem_Body20(Item);
          'Body21': OnPreSectionItem_Body21(Item);
          'Body22': OnPreSectionItem_Body22(Item);
          'Body23': OnPreSectionItem_Body23(Item);
          'Body24': OnPreSectionItem_Body24(Item);
          'Body25': OnPreSectionItem_Body25(Item);
          'Body26': OnPreSectionItem_Body26(Item);
        END;
        'Total': CASE SectionId OF
          'Body32': OnPreSectionTotal_Body32(Total);
          'Body33': OnPreSectionTotal_Body33(Total);
          'Body34': OnPreSectionTotal_Body34(Total);
          'Body35': OnPreSectionTotal_Body35(Total);
          'Body36': OnPreSectionTotal_Body36(Total);
          'Body37': OnPreSectionTotal_Body37(Total);
        END;
        'Total2': CASE SectionId OF
          'Body39': OnPreSectionTotal2_Body39(Total2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'SalesInvoiceLine': WITH "Sales Invoice Line" DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,Amount);
                ReportForNav.AddTotal(DataItemId,1,"Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,"Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 "Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 "Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;  'MWStZahler': WITH MWStZ„hler DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,MWSTBetragZeile."VAT Base");
                ReportForNav.AddTotal(DataItemId,1,MWSTBetragZeile."VAT Amount");
              END;
           'Restore': BEGIN
                 MWSTBetragZeile."VAT Base" := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 MWSTBetragZeile."VAT Amount" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      030299 pl
      c01  Total, Body(1) und Globals
           Zahlungsbedingung vom Skonto abh„nging ausdrucken.
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      c02  Verkaufsrechnungszeile, C/AL und Globals
           Rechnungsrabatt %-Satz und Rabattgrundlage in Rechnungsrabattzeile mit ausdrucken.
      131099 al
      c03  Verkaufsrechnungszeile, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
      Papersource 3 --> Fach IV HP 4050NT
      Papersource 2 --> Fach II HP 4050NT
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="Lieferscheinnr">
          <DataField>Lieferscheinnr</DataField>
        </Field>
        <Field Name="Belegdatum">
          <DataField>Belegdatum</DataField>
        </Field>
        <Field Name="Var_UST_ID">
          <DataField>Var_UST_ID</DataField>
        </Field>
        <Field Name="Steuernummer_verk_debitor">
          <DataField>Steuernummer_verk_debitor</DataField>
        </Field>
        <Field Name="Var_Steuernr">
          <DataField>Var_Steuernr</DataField>
        </Field>
        <Field Name="KopieText">
          <DataField>KopieText</DataField>
        </Field>
        <Field Name="No_SalesInvoiceHeader">
          <DataField>No_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesInvoiceHeader">
          <DataField>Bill_toCustomerNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="OrderNo_SalesInvoiceHeader">
          <DataField>OrderNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="VATRegistrationNo_VkRK">
          <DataField>VATRegistrationNo_VkRK</DataField>
        </Field>
        <Field Name="OurAccountNo_verk_debitor">
          <DataField>OurAccountNo_verk_debitor</DataField>
        </Field>
        <Field Name="SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour">
          <DataField>SalesInvoiceHeaderExternalDocumentNo__SalesInvoiceHeaderYour</DataField>
        </Field>
        <Field Name="PostingDate_SalesInvoiceHeader">
          <DataField>PostingDate_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="seite">
          <DataField>seite</DataField>
        </Field>
        <Field Name="waehrungs_text">
          <DataField>waehrungs_text</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmount">
          <DataField>Amount_InvDiscountAmount</DataField>
        </Field>
        <Field Name="Amount_InvDiscountAmountFormat">
          <DataField>Amount_InvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description_SalesInvoiceLine">
          <DataField>Description_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLine">
          <DataField>UnitPrice_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLineFormat">
          <DataField>UnitPrice_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="einheiten_text">
          <DataField>einheiten_text</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine">
          <DataField>Quantity_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLineFormat">
          <DataField>Quantity_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="InvDiscountAmount_SalesInvoiceLine">
          <DataField>InvDiscountAmount_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="InvDiscountAmount_SalesInvoiceLineFormat">
          <DataField>InvDiscountAmount_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="grechrabbetr">
          <DataField>grechrabbetr</DataField>
        </Field>
        <Field Name="grechrabbetrFormat">
          <DataField>grechrabbetrFormat</DataField>
        </Field>
        <Field Name="grechrabPct">
          <DataField>grechrabPct</DataField>
        </Field>
        <Field Name="grechrabPctFormat">
          <DataField>grechrabPctFormat</DataField>
        </Field>
        <Field Name="lead_free_text0">
          <DataField>lead_free_text0</DataField>
        </Field>
        <Field Name="lead_free_text1">
          <DataField>lead_free_text1</DataField>
        </Field>
        <Field Name="lead_free_text2">
          <DataField>lead_free_text2</DataField>
        </Field>
        <Field Name="lead_text">
          <DataField>lead_text</DataField>
        </Field>
        <Field Name="waehrung2">
          <DataField>waehrung2</DataField>
        </Field>
        <Field Name="TotalInklMWStText">
          <DataField>TotalInklMWStText</DataField>
        </Field>
        <Field Name="TotalText">
          <DataField>TotalText</DataField>
        </Field>
        <Field Name="steuer_text">
          <DataField>steuer_text</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_SalesInvoiceLine">
          <DataField>AmountIncludingVAT_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_SalesInvoiceLineFormat">
          <DataField>AmountIncludingVAT_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_Amount">
          <DataField>AmountIncludingVAT_Amount</DataField>
        </Field>
        <Field Name="AmountIncludingVAT_AmountFormat">
          <DataField>AmountIncludingVAT_AmountFormat</DataField>
        </Field>
        <Field Name="Amount_SalesInvoiceLine">
          <DataField>Amount_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Amount_SalesInvoiceLineFormat">
          <DataField>Amount_SalesInvoiceLineFormat</DataField>
        </Field>
        <Field Name="SalesInvoiceLineGetCurrencyCode">
          <DataField>SalesInvoiceLineGetCurrencyCode</DataField>
        </Field>
        <Field Name="SalesInvoiceLineSWalsLeistung">
          <DataField>SalesInvoiceLineSWalsLeistung</DataField>
        </Field>
        <Field Name="v_reverse">
          <DataField>v_reverse</DataField>
        </Field>
        <Field Name="lead_symbol">
          <DataField>lead_symbol</DataField>
        </Field>
        <Field Name="vUrsprungsland">
          <DataField>vUrsprungsland</DataField>
        </Field>
        <Field Name="Herstellerkurzname_Item">
          <DataField>Herstellerkurzname_Item</DataField>
        </Field>
        <Field Name="LineNo_SalesInvoiceLine">
          <DataField>LineNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesInvoiceLine">
          <DataField>Artikelnr2_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="Description_SalesInvoiceLine3">
          <DataField>Description_SalesInvoiceLine3</DataField>
        </Field>
        <Field Name="einheiten_text2">
          <DataField>einheiten_text2</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine2">
          <DataField>Quantity_SalesInvoiceLine2</DataField>
        </Field>
        <Field Name="Quantity_SalesInvoiceLine2Format">
          <DataField>Quantity_SalesInvoiceLine2Format</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLine2">
          <DataField>UnitPrice_SalesInvoiceLine2</DataField>
        </Field>
        <Field Name="UnitPrice_SalesInvoiceLine2Format">
          <DataField>UnitPrice_SalesInvoiceLine2Format</DataField>
        </Field>
        <Field Name="SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmount">
          <DataField>SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmount</DataField>
        </Field>
        <Field Name="SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmountFormat">
          <DataField>SalesInvoiceLineAmount_SalesInvoiceLineInvDiscountAmountFormat</DataField>
        </Field>
        <Field Name="Description2_SalesInvoiceLine">
          <DataField>Description2_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="TariffNo_Item">
          <DataField>TariffNo_Item</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesInvoiceLine">
          <DataField>Cross_ReferenceNo_SalesInvoiceLine</DataField>
        </Field>
        <Field Name="ECCN_Nr__ItemECCN_Nr">
          <DataField>ECCN_Nr__ItemECCN_Nr</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeile">
          <DataField>VATAmount_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATAmount_MWSTBetragZeileFormat">
          <DataField>VATAmount_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile">
          <DataField>VATBase_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeileFormat">
          <DataField>VATBase_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile2">
          <DataField>VATBase_MWSTBetragZeile2</DataField>
        </Field>
        <Field Name="VATBase_MWSTBetragZeile2Format">
          <DataField>VATBase_MWSTBetragZeile2Format</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeile">
          <DataField>VATPct_MWSTBetragZeile</DataField>
        </Field>
        <Field Name="VATPct_MWSTBetragZeileFormat">
          <DataField>VATPct_MWSTBetragZeileFormat</DataField>
        </Field>
        <Field Name="v_bonusdatum">
          <DataField>v_bonusdatum</DataField>
        </Field>
        <Field Name="Account">
          <DataField>Account</DataField>
        </Field>
        <Field Name="Description_LieferBed">
          <DataField>Description_LieferBed</DataField>
        </Field>
        <Field Name="gzbedtx">
          <DataField>gzbedtx</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesInvoiceHeader_Lbl">
          <DataField>Sell_toCustomerNo_SalesInvoiceHeader_Lbl</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesInvoiceHeader">
          <DataField>Sell_toCustomerNo_SalesInvoiceHeader</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

