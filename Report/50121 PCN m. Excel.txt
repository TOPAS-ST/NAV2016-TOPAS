OBJECT Report 50121 PCN m. Excel
{
  OBJECT-PROPERTIES
  {
    Date=20.12.17;
    Time=16:09:14;
    Modified=Yes;
    Version List=TOPAS, ohne ForNAV;
  }
  PROPERTIES
  {
    ProcessingOnly=Yes;
    OnPreReport=BEGIN
                  //IF Speicherort = '' THEN
                  //  ERROR('Report kann noch nicht ohne Liste gefahren werden. Versuchen Sie es sp„ter erneut.');

                  IF Speicherort <> '' THEN BEGIN

                    IF such_algorith = such_algorith::" " THEN
                      ERROR('Bitte geben Sie den Such Algorithmus an.');

                    // Definiert die zu importierende Datei
                    CREATE(Excel,FALSE,TRUE);
                    Book := Excel.Workbooks._Open(Speicherort,0,TRUE);
                    Sheet := Excel.ActiveSheet;
                    j := '1';
                    Window.OPEN(Text003);

                    REPEAT
                      IF FORMAT(Sheet.Range(Spalte_Artikel+j).Value) <> '' THEN BEGIN
                        PCN_Abgleich.INIT;
                        PCN_Abgleich.Tabelle := 'PCN';
                        //PCN_Abgleich.Index := Sheet.Range(Spalte_Artikel+j).Value;
                        PCN_Abgleich.Index := j;
                        artikel_temp := Sheet.Range(Spalte_Artikel + j).Value;
                        Artikel.RESET;
                        Artikel.SETRANGE("No. 2",'IDT' + artikel_temp);
                        IF Artikel.FINDFIRST THEN
                          PCN_Abgleich."Feld 3" := Artikel."No. 2"
                        ELSE
                          Artikel.SETRANGE("No. 2",'ICS' + artikel_temp);
                          IF Artikel.FINDFIRST THEN
                            PCN_Abgleich."Feld 3" := Artikel."No. 2"
                          ELSE
                            PCN_Abgleich."Feld 3" := Sheet.Range(Spalte_Artikel+j).Value;
                        PCN_Abgleich.Uhrzeit := CURRENTDATETIME;
                        PCN_Abgleich.User := USERID;
                        Window.UPDATE(1,PCN_Abgleich."Feld 3");
                        PCN_Abgleich.INSERT;
                      END;

                      //*********************************************************************************************
                      // Abbruchbedingung
                      // Wenn in der Quelldatei 2 Leere Zeilen hintereinander kommen, ist das Dateiende erreicht
                      IF FORMAT(Sheet.Range(Spalte_Artikel+j).Value) = '' THEN      // erkennt das Ende der Excel Datei
                        anzahl_zeilen += 1
                      ELSE
                        anzahl_zeilen := 0;

                      j := INCSTR(j);                                                 // n„chste Zeile Importdatei

                    UNTIL (anzahl_zeilen = 2);                                        // Nach 2 Zeilen ohne Artikel ist Schluss

                    //COMMIT;

                    //Excel.Quit;
                    CLEAR(Excel);
                    Window.CLOSE;
                  END;


                  CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
                  Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
                  Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

                  Sheet.Range('A1').Value := 'Kunden-Nr';                      // definiert die beschriftung der berschriftszeile
                  Sheet.Range('B1').Value := 'Debitor';
                  Sheet.Range('C1').Value := 'Debitor2';
                  Sheet.Range('D1').Value := 'Strasse';
                  Sheet.Range('E1').Value := 'Strasse2';
                  Sheet.Range('F1').Value := 'PLZ';
                  Sheet.Range('G1').Value := 'Ort';
                  Sheet.Range('H1').Value := 'Betreuer Innendienst';
                  Sheet.Range('I1').Value := 'Artikel';
                  Sheet.Range('J1').Value := 'Debitor Artikelnr.';
                  Sheet.Range('K1').Value := 'Belegnr';
                  Sheet.Range('L1').Value := 'Belegdatum';
                  Sheet.Range('M1').Value := 'Lieferdatum';
                  Sheet.Range('N1').Value := 'Email-Adresse';
                  Sheet.Range('O1').Value := 'User1';
                  Sheet.Range('P1').Value := 'User2';
                  Sheet.Range('Q1').Value := 'User5';
                  Sheet.Range('S1').Value := 'Mail Text';
                  Sheet.Range('S:S').ColumnWidth := 50;

                  j := '1';                                                    // <- Import in excel ab Zeile 2
                END;

    OnPostReport=BEGIN
                   Excel.Visible(TRUE);

                   IF Speicherort = '' THEN
                     PCN_Ausgabe_ohne_Liste
                   ELSE
                     PCN_Ausgabe_mit_Liste;
                 END;

  }
  DATASET
  {
  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1000000018;0;Container;
                  ContainerType=ContentArea }

      { 1000000017;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1000000016;2;Field  ;
                  CaptionML=DEU=Herstellercode;
                  SourceExpr=Herstellercode;
                  TableRelation=Manufacturer }

      { 1000000015;2;Field  ;
                  CaptionML=DEU=Artikelnr;
                  SourceExpr=Artikelnr;
                  TableRelation=Item }

      { 1000000014;2;Field  ;
                  CaptionML=DEU=Buchungsdatum von;
                  SourceExpr=PstDateFrom }

      { 1000000013;2;Field  ;
                  CaptionML=DEU=bis;
                  SourceExpr=PstDateTo }

      { 1000000012;2;Field  ;
                  CaptionML=DEU=Betreuer Innendienst;
                  SourceExpr=Betreuer;
                  TableRelation=Salesperson/Purchaser }

      { 1000000011;2;Field  ;
                  CaptionML=DEU=Verk„ufercode;
                  SourceExpr=Verkcode;
                  TableRelation=Salesperson/Purchaser }

      { 1000000010;2;Field  ;
                  CaptionML=DEU=Gebietscode;
                  SourceExpr=Gebcode;
                  TableRelation=Territory }

      { 1000000009;2;Field  ;
                  CaptionML=DEU=Verk. an Deb.-Nr.;
                  SourceExpr="Deb-Nr";
                  TableRelation=Customer }

      { 1000000008;2;Field  ;
                  CaptionML=DEU=Keine Muster;
                  SourceExpr=keine_muster }

      { 1000000000;2;Group  ;
                  CaptionML=DEU=Reine Text Ausgabe fr das Excel Ergebnis (user1 und user2), ist dann fr alle Datens„tze gleich.;
                  GroupType=Group }

      { 1000000007;3;Field  ;
                  CaptionML=DEU=Linie;
                  SourceExpr=Linie }

      { 1000000006;3;Field  ;
                  CaptionML=DEU=PCN;
                  SourceExpr=PCN_text }

      { 1000000019;2;Group  ;
                  CaptionML=DEU=Zum Abgleich einer Artikelliste im Excel Format, bitte hier die entsprechende Tabelle angeben.;
                  GroupType=Group }

      { 1000000020;2;Group  ;
                  CaptionML=DEU=Ganz wichtig:Syntax beachten, d.h. keine šberschrift, Spalte A mit Artikelnr., ansonsten keine weiteren Angaben notwendig.\Artikelnr. mit Endung xx, hier Endung entfernen,da sonst keine Treffer erzielt werden k”nnen.;
                  GroupType=Group }

      { 1000000021;3;Field  ;
                  CaptionML=DEU=Hinweis: Mit Abgleich dieser Artikelliste wird der Artikelfilter (siehe oben) hinf„llig, sofern angegeben.;
                  Editable=FALSE;
                  ShowCaption=No }

      { 1000000005;3;Field  ;
                  CaptionML=DEU=Datei;
                  SourceExpr=Speicherort;
                  OnLookup=BEGIN
                             Open_WinApplct(Speicherort);
                           END;

                  OnAssistEdit=BEGIN
                                 Speicherort := Save_FileDialog;
                               END;
                                }

      { 1000000004;3;Field  ;
                  CaptionML=DEU=Such Algorithmus;
                  SourceExpr=such_algorith }

      { 1000000022;2;Group  ;
                  CaptionML=DEU=Bitte kein * verwenden. Funktioniert sowohl fr die normale Suche als auch fr die Suche mit Excelliste.;
                  GroupType=Group }

      { 1000000003;3;Field  ;
                  CaptionML=DEU=Artikel auschlieáen mit;
                  SourceExpr=artikel_ausschluss }

      { 1000000002;3;Field  ;
                  CaptionML=DEU=Artikel auschlieáen mit;
                  SourceExpr=artikel_ausschluss2 }

      { 1000000001;3;Field  ;
                  CaptionML=DEU=Artikel auschlieáen mit;
                  SourceExpr=artikel_ausschluss3 }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Excel@1000000045 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Book@1000000044 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Range@1000000043 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Sheet@1000000042 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      j@1000000041 : Text[30];
      Word@1000000039 : Integer;
      betragmw@1000000038 : Decimal;
      waehrung@1000000037 : Text[30];
      waecode@1000000036 : Text[30];
      betragmw2@1000000035 : Decimal;
      waehrung2@1000000034 : Text[30];
      claimbetrag1@1000000033 : Decimal;
      claimbetraggesamt@1000000032 : Decimal;
      vkrk@1000000031 : Text[90];
      pcn@1000000030 : Record 5067;
      email@1000000029 : Text[200];
      verkaufsgutschriftskopf@1000000028 : Record 114;
      ContRela@1000000027 : Record 5054;
      Cont@1000000026 : Record 5050;
      Hersteller@1000000025 : Record 5720;
      Artikel@1000000024 : Record 27;
      PCN_Abgleich@1000000023 : Record 50037;
      ArtRef@1000000022 : Record 5717;
      Debitor@1000000021 : Record 18;
      Herstellercode@1000000020 : Code[40];
      Artikelnr@1000000019 : Code[20];
      "Deb-Nr"@1000000018 : Code[20];
      PstDateFrom@1000000017 : Date;
      PstDateTo@1000000016 : Date;
      Betreuer@1000000015 : Code[10];
      Verkcode@1000000014 : Code[10];
      Gebcode@1000000013 : Code[40];
      Window@1000000012 : Dialog;
      Linie@1000000011 : Code[20];
      PCN_text@1000000010 : Text[50];
      artikel_ausschluss@1000000009 : Code[10];
      artikel_ausschluss2@1000000008 : Code[10];
      artikel_ausschluss3@1000000007 : Code[10];
      artikel_temp@1000000006 : Code[40];
      deb_artnr@1000000005 : Code[40];
      Speicherort@1000000004 : Text;
      anzahl_zeilen@1000000003 : Integer;
      Bonusregel@1000000002 : Boolean;
      such_algorith@1000000001 : ' ,enthalten in,exakt';
      keine_muster@1000000000 : Boolean;
      Text001@1000000049 : TextConst 'DEU=Die Datei oder der Pfad %1 konnte nicht gefunden werden.';
      Text002@1000000048 : TextConst 'DEU=Fr Debitor %1 %2 musste aufgrund einer techn. Hrde eine Splittung der Ergebnisse vorgenommen werden. Bitte fgen Sie fr diesen Kunden die Ergebnisse aus Spalte AC der Spalte AB hinzu. Gehen Sie dazu in Zelle AC, in Zeile %3, kopieren deren Inhalt und fgen diesen am Ende von Zelle AB wieder ein.';
      Text003@1000000047 : TextConst 'DEU=PCN Artikel Import #1##########';
      Spalte_Artikel@1000000046 : TextConst 'DEU=A';

    PROCEDURE PCN_Ausgabe_ohne_Liste@1140001();
    VAR
      InvHeader@1140000 : Record 112;
      InvLine@1140001 : Record 113;
      SalesHeader@1140007 : Record 36;
      SalesLine@1140008 : Record 37;
      Artikel@1140004 : Record 27;
      user5@1140005 : ARRAY [5] OF Text[1000];
      test_user5@1140002 : Text[1000];
      debnr@1140003 : Code[20];
      hilfs_debnr@1140011 : Code[20];
      convert_test_user5@1140012 : Text[1000];
      zeile_gefunden@1140010 : Boolean;
      hilfs_artikelnr@1140015 : Text[40];
      mail_text@1140014 : Text[1000];
      k@1140006 : Integer;
      t@1140009 : Text[30];
      chr@1140013 : Char;
    BEGIN
      InvHeader.RESET;
      InvHeader.SETCURRENTKEY("Sell-to Customer No.","No.");
      InvHeader.SETFILTER("Sell-to Customer No.","Deb-Nr");
      //InvHeader.SETFILTER("Sell-to Customer No.",'%1|%2|%3','921102','921360','921361');
      InvHeader.SETFILTER("Betreuer Innendienst",Betreuer);
      InvHeader.SETFILTER("Salesperson Code",Verkcode);
      InvHeader.SETFILTER("Territory Code",Gebcode);
      IF (PstDateFrom <> 0D) AND (PstDateTo = 0D) THEN
        InvHeader.SETFILTER("Posting Date",'>=%1',PstDateFrom);
      IF (PstDateFrom = 0D) AND (PstDateTo <> 0D) THEN
        InvHeader.SETFILTER("Posting Date",'<=%1',PstDateTo);
      IF (PstDateFrom <> 0D) AND (PstDateTo <> 0D) THEN
        InvHeader.SETFILTER("Posting Date",'>=%1&<=%2',PstDateFrom,PstDateTo);
      IF InvHeader.FINDFIRST THEN BEGIN
        REPEAT
          InvLine.RESET;
          InvLine.SETFILTER(Type,'%1',InvLine.Type::Item);
          IF keine_muster THEN
            InvLine.SETFILTER("Location Code",'<>%1','MUST');
          InvLine.SETFILTER("Document No.",'%1',InvHeader."No.");
          InvLine.SETFILTER("Manufacturer Code",Herstellercode);
          InvLine.SETFILTER("No.",Artikelnr);
          InvLine.SETFILTER(Quantity,'>%1',0);
          IF InvLine.FINDFIRST THEN BEGIN
            REPEAT
              IF (InvLine.Quantity > 0)
              AND (STRPOS(InvLine."Artikelnr. 2",artikel_ausschluss) = 0)
              AND (STRPOS(InvLine."Artikelnr. 2",artikel_ausschluss2) = 0)
              AND (STRPOS(InvLine."Artikelnr. 2",artikel_ausschluss3) = 0) THEN BEGIN
                IF debnr <> InvHeader."Sell-to Customer No." THEN BEGIN

                  j := INCSTR (j);

                  //***************************************************************************
                  //     Feld fr Artikelnr. und Deb. Artikelnr. Andruck im HTML Schreiben
                  //***************************************************************************

                  deb_artnr := '';
                  ArtRef.RESET;
                  ArtRef.SETFILTER("Item No.",'%1',InvLine."No.");
                  ArtRef.SETFILTER("Cross-Reference Type",'%1',ArtRef."Cross-Reference Type"::Customer);
                  ArtRef.SETFILTER("Cross-Reference Type No.",'%1',InvHeader."Sell-to Customer No.");
                  IF ArtRef.FINDFIRST THEN
                    REPEAT
                      IF ArtRef."Cross-Reference No." <> '' THEN BEGIN
                        IF (deb_artnr <> '') AND (deb_artnr <> ArtRef."Cross-Reference No.") THEN
                          deb_artnr := 'DIVERSE'
                        ELSE
                          deb_artnr := ArtRef."Cross-Reference No.";
                      END;
                    UNTIL (ArtRef.NEXT = 0) OR (deb_artnr = 'DIVERSE');

                  test_user5 := InvLine."No.";

                  Sheet.Range('A'+j).Value := InvHeader."Sell-to Customer No.";
                  Sheet.Range('B'+j).Value := InvHeader."Sell-to Customer Name";
                  Sheet.Range('C'+j).Value := InvHeader."Sell-to Customer Name 2";
                  Sheet.Range('D'+j).Value := InvHeader."Sell-to Address";
                  Sheet.Range('E'+j).Value := InvHeader."Sell-to Address 2";
                  Sheet.Range('F'+j).Value := InvHeader."Sell-to Post Code";
                  Sheet.Range('G'+j).Value := InvHeader."Sell-to City";
                  Sheet.Range('H'+j).Value := InvHeader."Betreuer Innendienst";
                  Sheet.Range('I'+j).Value := InvLine."Artikelnr. 2";
                  Sheet.Range('J'+j).Value := deb_artnr;
                  Sheet.Range('K'+j).Value := InvLine."Document No.";
                  IF (InvLine."Posting Date" <> 0D)  AND (InvLine."Posting Date" > 010100D)
                      THEN Sheet.Range('L'+j).Value := InvLine."Posting Date";
                  IF (InvLine."Shipment Date" <> 0D) AND (InvLine."Shipment Date" > 010100D) THEN
                    Sheet.Range('M'+j).Value := InvLine."Shipment Date";

                  email:='';
                  ContRela.SETRANGE("No.",InvLine."Sell-to Customer No.");
                  IF ContRela.FINDFIRST THEN BEGIN
                    Cont.SETRANGE("Company No.",ContRela."Contact No.");
                    Cont.SETRANGE("Unternehmen verlassen",FALSE);
                    IF Cont.FINDFIRST THEN BEGIN
                      REPEAT
                        pcn.RESET;
                        pcn.SETRANGE("Contact No.",Cont."No.");
                        pcn.SETRANGE("Job Responsibility Code",'PCN-EOL');
                        IF pcn.FINDFIRST THEN
                          REPEAT
                            IF email = '' THEN
                              email := Cont."E-Mail"
                            ELSE
                              IF STRPOS(email,Cont."E-Mail") = 0 THEN
                                email := email + '; ' + Cont."E-Mail";
                          UNTIL pcn.NEXT = 0;
                          IF email <> '' THEN
                            Sheet.Range('N'+j).Value := email;
                      UNTIL (Cont.NEXT = 0) OR (email <> '');
                    END;
                  END;
                  Sheet.Range('O'+j).Value := PCN_text;
                  Sheet.Range('P'+j).Value := Linie;
                  Sheet.Range('Q'+j).Value := user5[1];
                  debnr := InvHeader."Sell-to Customer No.";
                END ELSE BEGIN
                  IF STRPOS(test_user5,InvLine."Artikelnr. 2") = 0 THEN BEGIN

                    deb_artnr := '';
                    ArtRef.RESET;
                    ArtRef.SETFILTER("Item No.",'%1',InvLine."No.");
                    ArtRef.SETFILTER("Cross-Reference Type",'%1',ArtRef."Cross-Reference Type"::Customer);
                    ArtRef.SETFILTER("Cross-Reference Type No.",'%1',InvHeader."Sell-to Customer No.");
                    IF ArtRef.FINDFIRST THEN
                      REPEAT
                        IF ArtRef."Cross-Reference No." <> '' THEN BEGIN
                          IF (deb_artnr <> '') AND (deb_artnr <> ArtRef."Cross-Reference No.") THEN
                            deb_artnr := 'DIVERSE'
                          ELSE
                            deb_artnr := ArtRef."Cross-Reference No."
                        END;
                      UNTIL (ArtRef.NEXT = 0) OR (deb_artnr = 'DIVERSE');

                    test_user5 := test_user5 + InvLine."Artikelnr. 2";
                    Sheet.Range('I'+j).Value := FORMAT(Sheet.Range('I'+j).Value) + ',' + InvLine."Artikelnr. 2";
                    Sheet.Range('J'+j).Value := FORMAT(Sheet.Range('J'+j).Value) + ',' + deb_artnr;
                  END;
                END;
              END;
            UNTIL InvLine.NEXT = 0;
          END;
        UNTIL InvHeader.NEXT = 0;
      END;

      debnr := '';

      SalesHeader.RESET;
      SalesHeader.SETCURRENTKEY("Sell-to Customer No.","Order Date");
      SalesHeader.SETFILTER("Document Type",'%1|%2',SalesHeader."Document Type"::Order,
                            SalesHeader."Document Type"::"Blanket Order");
      SalesHeader.SETFILTER("Sell-to Customer No.","Deb-Nr");
      //SalesHeader.SETFILTER("Sell-to Customer No.",'%1|%2|%3','100367','100760','710760');
      SalesHeader.SETFILTER("Betreuer Innendienst",Betreuer);
      SalesHeader.SETFILTER("Salesperson Code",Verkcode);
      SalesHeader.SETFILTER("Territory Code",Gebcode);
      IF (PstDateFrom <> 0D) AND (PstDateTo = 0D) THEN
        SalesHeader.SETFILTER("Order Date",'>=%1',PstDateFrom);
      IF (PstDateFrom = 0D) AND (PstDateTo <> 0D) THEN
        SalesHeader.SETFILTER("Order Date",'<=%1',PstDateTo);
      IF (PstDateFrom <> 0D) AND (PstDateTo <> 0D) THEN
        SalesHeader.SETFILTER("Order Date",'>=%1&<=%2',PstDateFrom,PstDateTo);
      IF SalesHeader.FINDFIRST THEN BEGIN
        REPEAT
          SalesLine.RESET;
          SalesLine.SETFILTER(Type,'%1',SalesLine.Type::Item);
          IF keine_muster THEN
            SalesLine.SETFILTER("Location Code",'<>%1','MUST');
          SalesLine.SETFILTER("Document No.",'%1',SalesHeader."No.");
          SalesLine.SETFILTER("Manufacturer Code",Herstellercode);
          SalesLine.SETFILTER("No.",Artikelnr);
          SalesLine.SETFILTER(Quantity,'>%1',0);
          IF SalesLine.FINDFIRST THEN BEGIN
            REPEAT
              IF (STRPOS(SalesLine."Artikelnr. 2",artikel_ausschluss) = 0)
              AND (STRPOS(SalesLine."Artikelnr. 2",artikel_ausschluss2) = 0)
              AND (STRPOS(SalesLine."Artikelnr. 2",artikel_ausschluss3) = 0) THEN BEGIN
                IF debnr <> SalesHeader."Sell-to Customer No." THEN BEGIN
                  t := '1';
                  zeile_gefunden := FALSE;
                  REPEAT
                    hilfs_debnr := DELCHR(FORMAT(Sheet.Range('A'+t).Value),'=','.');
                    IF hilfs_debnr = SalesHeader."Sell-to Customer No." THEN BEGIN
                      test_user5 := DELCHR(FORMAT(Sheet.Range('I'+t).Value),'=',',');
                      zeile_gefunden := TRUE;
                    END ELSE
                      t := INCSTR(t);
                  UNTIL (FORMAT(Sheet.Range('A'+t).Value) = '') OR (zeile_gefunden = TRUE);

                  IF zeile_gefunden = FALSE THEN BEGIN

                    j := INCSTR (j);

                    //***************************************************************************
                    //     Feld fr Artikelnr. und Deb. Artikelnr. Andruck im HTML Schreiben
                    //***************************************************************************

                    deb_artnr := '';
                    ArtRef.RESET;
                    ArtRef.SETFILTER("Item No.",'%1',SalesLine."No.");
                    ArtRef.SETFILTER("Cross-Reference Type",'%1',ArtRef."Cross-Reference Type"::Customer);
                    ArtRef.SETFILTER("Cross-Reference Type No.",'%1',SalesHeader."Sell-to Customer No.");
                    IF ArtRef.FINDFIRST THEN
                      REPEAT
                        IF ArtRef."Cross-Reference No." <> '' THEN BEGIN
                          IF (deb_artnr <> '') AND (deb_artnr <> ArtRef."Cross-Reference No.") THEN
                            deb_artnr := 'DIVERSE'
                          ELSE
                            deb_artnr := ArtRef."Cross-Reference No."
                        END;
                      UNTIL (ArtRef.NEXT = 0) OR (deb_artnr = 'DIVERSE');

                    test_user5 := SalesLine."Artikelnr. 2";

                    Sheet.Range('A'+j).Value := SalesHeader."Sell-to Customer No.";
                    Sheet.Range('B'+j).Value := SalesHeader."Sell-to Customer Name";
                    Sheet.Range('C'+j).Value := SalesHeader."Sell-to Customer Name 2";
                    Sheet.Range('D'+j).Value := SalesHeader."Sell-to Address";
                    Sheet.Range('E'+j).Value := SalesHeader."Sell-to Address 2";
                    Sheet.Range('F'+j).Value := SalesHeader."Sell-to Post Code";
                    Sheet.Range('G'+j).Value := SalesHeader."Sell-to City";
                    Sheet.Range('H'+j).Value := SalesHeader."Betreuer Innendienst";
                    Sheet.Range('I'+j).Value := SalesLine."Artikelnr. 2";
                    Sheet.Range('J'+j).Value := deb_artnr;
                    Sheet.Range('K'+j).Value := SalesLine."Document No.";
                    //IF (SalesLine."Posting Date" <> 0D)  AND (SalesLine."Posting Date" > 010100D)
                    //   THEN Sheet.Range('L'+j).Value := SalesLine."Posting Date";
                    //IF (SalesLine."Shipment Date" <> 0D) AND (SalesLine."Shipment Date" > 010100D) THEN
                    //  Sheet.Range('M'+j).Value := SalesLine."Shipment Date";

                    email:='';
                    ContRela.SETRANGE("No.",SalesLine."Sell-to Customer No.");
                    IF ContRela.FINDFIRST THEN BEGIN
                      Cont.SETRANGE("Company No.",ContRela."Contact No.");
                      Cont.SETRANGE("Unternehmen verlassen",FALSE);
                      IF Cont.FINDFIRST THEN BEGIN
                        REPEAT
                          pcn.RESET;
                          pcn.SETRANGE("Contact No.",Cont."No.");
                          pcn.SETRANGE("Job Responsibility Code",'PCN-EOL');
                          IF pcn.FINDFIRST THEN
                            REPEAT
                              IF email = '' THEN
                                email := Cont."E-Mail"
                              ELSE
                                IF STRPOS(email,Cont."E-Mail") = 0 THEN
                                  email := email + '; ' + Cont."E-Mail";
                            UNTIL pcn.NEXT = 0;
                            IF email <> '' THEN
                              Sheet.Range('N'+j).Value := email;
                        UNTIL (Cont.NEXT = 0) OR (email <> '');
                      END;
                    END;
                    Sheet.Range('O'+j).Value := PCN_text;
                    Sheet.Range('P'+j).Value := Linie;
                  END ELSE BEGIN
                    IF STRPOS(test_user5,SalesLine."Artikelnr. 2") = 0 THEN BEGIN
                      deb_artnr := '';
                      ArtRef.RESET;
                      ArtRef.SETFILTER("Item No.",'%1',SalesLine."No.");
                      ArtRef.SETFILTER("Cross-Reference Type",'%1',ArtRef."Cross-Reference Type"::Customer);
                      ArtRef.SETFILTER("Cross-Reference Type No.",'%1',SalesHeader."Sell-to Customer No.");
                      IF ArtRef.FINDFIRST THEN
                        REPEAT
                          IF ArtRef."Cross-Reference No." <> '' THEN BEGIN
                            IF (deb_artnr <> '') AND (deb_artnr <> ArtRef."Cross-Reference No.") THEN
                              deb_artnr := 'DIVERSE'
                            ELSE
                              deb_artnr := ArtRef."Cross-Reference No."
                          END;
                        UNTIL (ArtRef.NEXT = 0) OR (deb_artnr = 'DIVERSE');

                      test_user5 := test_user5 + SalesLine."Artikelnr. 2";
                      Sheet.Range('I'+t).Value := FORMAT(Sheet.Range('I'+t).Value) + ',' + SalesLine."Artikelnr. 2";
                      Sheet.Range('J'+t).Value := FORMAT(Sheet.Range('J'+t).Value) + ',' + deb_artnr;
                    END;
                  END;
                  debnr := SalesHeader."Sell-to Customer No.";
                END ELSE BEGIN
                  IF STRPOS(test_user5,SalesLine."Artikelnr. 2") = 0 THEN BEGIN
                    deb_artnr := '';
                    ArtRef.RESET;
                    ArtRef.SETFILTER("Item No.",'%1',SalesLine."No.");
                    ArtRef.SETFILTER("Cross-Reference Type",'%1',ArtRef."Cross-Reference Type"::Customer);
                    ArtRef.SETFILTER("Cross-Reference Type No.",'%1',SalesHeader."Sell-to Customer No.");
                    IF ArtRef.FINDFIRST THEN
                      REPEAT
                        IF ArtRef."Cross-Reference No." <> '' THEN BEGIN
                          IF (deb_artnr <> '') AND (deb_artnr <> ArtRef."Cross-Reference No.") THEN
                            deb_artnr := 'DIVERSE'
                          ELSE
                            deb_artnr := ArtRef."Cross-Reference No."
                        END;
                      UNTIL (ArtRef.NEXT = 0) OR (deb_artnr = 'DIVERSE');

                    test_user5 := test_user5 + SalesLine."Artikelnr. 2";
                    IF zeile_gefunden = FALSE THEN BEGIN
                      Sheet.Range('I'+j).Value := FORMAT(Sheet.Range('I'+j).Value) + ',' + SalesLine."Artikelnr. 2";
                      Sheet.Range('J'+j).Value := FORMAT(Sheet.Range('J'+j).Value) + ',' + deb_artnr;
                      convert_test_user5 := FORMAT(Sheet.Range('I'+j).Value);
                    END ELSE BEGIN
                      Sheet.Range('I'+t).Value := FORMAT(Sheet.Range('I'+t).Value) + ',' + SalesLine."Artikelnr. 2";
                      Sheet.Range('J'+t).Value := FORMAT(Sheet.Range('J'+t).Value) + ',' + deb_artnr;
                      convert_test_user5 := FORMAT(Sheet.Range('I'+t).Value);
                    END;
                  END;
                END;
              END;
            UNTIL SalesLine.NEXT = 0;
          END;
        UNTIL SalesHeader.NEXT = 0;
      END;

      t := '1';
      chr := 10; //Line feed
      REPEAT
        convert_test_user5 := FORMAT(Sheet.Range('I'+t).Value);
        debnr := DELCHR(FORMAT(Sheet.Range('A'+t).Value),'=','.');
        IF (convert_test_user5 <> '') AND (convert_test_user5 <> 'Artikel') THEN BEGIN
          FOR k := 1 TO 4 DO
            user5[k] := '';

          k := 1;
          mail_text := '';

          REPEAT
            IF STRPOS(convert_test_user5,',') <> 0 THEN
              hilfs_artikelnr := COPYSTR(convert_test_user5,1,STRPOS(convert_test_user5,',')-1)
            ELSE BEGIN
              hilfs_artikelnr := COPYSTR(convert_test_user5,1);
              convert_test_user5 := '';
            END;
            deb_artnr := '';

            Artikel.RESET;
            Artikel.SETFILTER("No. 2",'%1',hilfs_artikelnr);
            IF Artikel.FINDFIRST THEN BEGIN
              ArtRef.RESET;
              ArtRef.SETFILTER("Item No.",'%1',Artikel."No.");
              ArtRef.SETFILTER("Cross-Reference Type",'%1',ArtRef."Cross-Reference Type"::Customer);
              ArtRef.SETFILTER("Cross-Reference Type No.",'%1',debnr);
              IF ArtRef.FINDFIRST THEN
                REPEAT
                  IF ArtRef."Cross-Reference No." <> '' THEN BEGIN
                    IF (deb_artnr <> '') AND (deb_artnr <> ArtRef."Cross-Reference No.") THEN
                      deb_artnr := 'DIVERSE'
                    ELSE
                      deb_artnr := ArtRef."Cross-Reference No."
                  END;
                UNTIL (ArtRef.NEXT = 0) OR (deb_artnr = 'DIVERSE');
            END;

            IF (STRLEN(user5[k] + '<tr><td>' + hilfs_artikelnr + '</td><td>' + deb_artnr + '</td></tr>') > 1000) THEN
              k += 1;
            user5[k] := user5[k] + '<tr><td>' + hilfs_artikelnr + '</td><td>' + deb_artnr + '</td></tr>';

            IF mail_text = '' THEN
              mail_text := hilfs_artikelnr + ' - ' + deb_artnr
            ELSE
              mail_text := mail_text + FORMAT(chr) + hilfs_artikelnr + ' - ' + deb_artnr;

            IF STRPOS(convert_test_user5,',') <> 0 THEN
              convert_test_user5 := COPYSTR(convert_test_user5,STRPOS(convert_test_user5,',')+1)

          UNTIL convert_test_user5 = '';
          Sheet.Range('Q'+t).Value := user5[1] + user5[2];
          Sheet.Range('R'+t).Value := user5[3] + user5[4];
          Sheet.Range('S'+t).Value := mail_text;
        END;
        t := INCSTR(t);
      UNTIL FORMAT(Sheet.Range('A'+t).Value) = '';

      CLEARALL;
    END;

    PROCEDURE PCN_Ausgabe_mit_Liste@1140015();
    VAR
      InvHeader@1140005 : Record 112;
      InvLine@1140004 : Record 113;
      SalesHeader@1140008 : Record 36;
      SalesLine@1140007 : Record 37;
      Artikel@1140003 : Record 27;
      user5@1140002 : ARRAY [5] OF Text[1000];
      test_user5@1140001 : Text[1000];
      convert_test_user5@1140013 : Text[1000];
      debnr@1140000 : Code[20];
      zeile_gefunden@1140010 : Boolean;
      hilfs_debnr@1140011 : Code[20];
      hilfs_user5@1140012 : Text[1000];
      hilfs_artikelnr@1140014 : Text[40];
      mail_text@1140015 : Text[1000];
      chr@1140016 : Char;
      k@1140006 : Integer;
      t@1140009 : Text[5];
    BEGIN
      InvHeader.RESET;
      InvHeader.SETCURRENTKEY("Sell-to Customer No.","No.");
      InvHeader.SETFILTER("Sell-to Customer No.","Deb-Nr");
      //InvHeader.SETFILTER("Sell-to Customer No.",'%1|%2|%3','100367','100760','710760');
      InvHeader.SETFILTER("Betreuer Innendienst",Betreuer);
      InvHeader.SETFILTER("Salesperson Code",Verkcode);
      InvHeader.SETFILTER("Territory Code",Gebcode);
      IF (PstDateFrom <> 0D) AND (PstDateTo = 0D) THEN
        InvHeader.SETFILTER("Posting Date",'>=%1',PstDateFrom);
      IF (PstDateFrom = 0D) AND (PstDateTo <> 0D) THEN
        InvHeader.SETFILTER("Posting Date",'<=%1',PstDateTo);
      IF (PstDateFrom <> 0D) AND (PstDateTo <> 0D) THEN
        InvHeader.SETFILTER("Posting Date",'>=%1&<=%2',PstDateFrom,PstDateTo);
      IF InvHeader.FINDFIRST THEN BEGIN
        REPEAT
          InvLine.RESET;
          InvLine.SETFILTER(Type,'%1',InvLine.Type::Item);
          IF keine_muster THEN
            InvLine.SETFILTER("Location Code",'<>%1','MUST');
          InvLine.SETFILTER("Document No.",'%1',InvHeader."No.");
          InvLine.SETFILTER("Manufacturer Code",Herstellercode);
          InvLine.SETFILTER(Quantity,'>%1',0);
          IF InvLine.FINDFIRST THEN BEGIN
            REPEAT
              PCN_Abgleich.RESET;
              PCN_Abgleich.SETFILTER(Tabelle,'%1','PCN');
              IF such_algorith = such_algorith::exakt THEN
                PCN_Abgleich.SETFILTER("Feld 3",'%1',InvLine."Artikelnr. 2");
              IF PCN_Abgleich.FINDFIRST THEN
                REPEAT
                IF (InvLine.Quantity > 0) AND (STRPOS(InvLine."Artikelnr. 2",PCN_Abgleich."Feld 3") <> 0)
                AND (STRPOS(InvLine."Artikelnr. 2",artikel_ausschluss) = 0)
                AND (STRPOS(InvLine."Artikelnr. 2",artikel_ausschluss2) = 0)
                AND (STRPOS(InvLine."Artikelnr. 2",artikel_ausschluss3) = 0) THEN BEGIN
                  IF debnr <> InvHeader."Sell-to Customer No." THEN BEGIN

                    j := INCSTR (j);

                    //***************************************************************************
                    //     Feld fr Artikelnr. und Deb. Artikelnr. Andruck im HTML Schreiben
                    //***************************************************************************

                    deb_artnr := '';
                    ArtRef.RESET;
                    ArtRef.SETFILTER("Item No.",'%1',InvLine."No.");
                    ArtRef.SETFILTER("Cross-Reference Type",'%1',ArtRef."Cross-Reference Type"::Customer);
                    ArtRef.SETFILTER("Cross-Reference Type No.",'%1',InvHeader."Sell-to Customer No.");
                    IF ArtRef.FINDFIRST THEN
                      REPEAT
                        IF ArtRef."Cross-Reference No." <> '' THEN BEGIN
                          IF (deb_artnr <> '') AND (deb_artnr <> ArtRef."Cross-Reference No.") THEN
                            deb_artnr := 'DIVERSE'
                          ELSE
                            deb_artnr := ArtRef."Cross-Reference No."
                        END;
                      UNTIL (ArtRef.NEXT = 0) OR (deb_artnr = 'DIVERSE');

                    test_user5 := InvLine."Artikelnr. 2";

                    Sheet.Range('A'+j).Value := InvHeader."Sell-to Customer No.";
                    Sheet.Range('B'+j).Value := InvHeader."Sell-to Customer Name";
                    Sheet.Range('C'+j).Value := InvHeader."Sell-to Customer Name 2";
                    Sheet.Range('D'+j).Value := InvHeader."Sell-to Address";
                    Sheet.Range('E'+j).Value := InvHeader."Sell-to Address 2";
                    Sheet.Range('F'+j).Value := InvHeader."Sell-to Post Code";
                    Sheet.Range('G'+j).Value := InvHeader."Sell-to City";
                    Sheet.Range('H'+j).Value := InvHeader."Betreuer Innendienst";
                    Sheet.Range('I'+j).Value := InvLine."Artikelnr. 2";
                    Sheet.Range('J'+j).Value := deb_artnr;
                    Sheet.Range('K'+j).Value := InvLine."Document No.";
                    IF (InvLine."Posting Date" <> 0D) AND (InvLine."Posting Date" > 010100D)
                        THEN Sheet.Range('L'+j).Value := InvLine."Posting Date";
                    IF (InvLine."Shipment Date" <> 0D) AND (InvLine."Shipment Date" > 010100D) THEN
                      Sheet.Range('M'+j).Value := InvLine."Shipment Date";

                    email := '';
                    ContRela.SETRANGE("No.",InvLine."Sell-to Customer No.");
                    IF ContRela.FINDFIRST THEN BEGIN
                      Cont.SETRANGE("Company No.",ContRela."Contact No.");
                      Cont.SETRANGE("Unternehmen verlassen",FALSE);
                      IF Cont.FINDFIRST THEN BEGIN
                        REPEAT
                          pcn.RESET;
                          pcn.SETRANGE("Contact No.",Cont."No.");
                          pcn.SETRANGE("Job Responsibility Code",'PCN-EOL');
                          IF pcn.FINDFIRST THEN
                            REPEAT
                              IF email = '' THEN
                                email := Cont."E-Mail"
                              ELSE
                                IF STRPOS(email,Cont."E-Mail") = 0 THEN
                                  email := email + '; ' + Cont."E-Mail";
                            UNTIL pcn.NEXT = 0;
                            IF email <> '' THEN
                              Sheet.Range('N'+j).Value := email;
                        UNTIL (Cont.NEXT = 0) OR (email <> '');
                      END;
                    END;
                    Sheet.Range('O'+j).Value := PCN_text;
                    Sheet.Range('P'+j).Value := Linie;
                    debnr := InvHeader."Sell-to Customer No.";
                  END ELSE BEGIN
                    IF STRPOS(test_user5,InvLine."Artikelnr. 2") = 0 THEN BEGIN
                      deb_artnr := '';
                      ArtRef.RESET;
                      ArtRef.SETFILTER("Item No.",'%1',InvLine."No.");
                      ArtRef.SETFILTER("Cross-Reference Type",'%1',ArtRef."Cross-Reference Type"::Customer);
                      ArtRef.SETFILTER("Cross-Reference Type No.",'%1',InvHeader."Sell-to Customer No.");
                      IF ArtRef.FINDFIRST THEN
                        REPEAT
                          IF ArtRef."Cross-Reference No." <> '' THEN BEGIN
                            IF (deb_artnr <> '') AND (deb_artnr <> ArtRef."Cross-Reference No.") THEN
                              deb_artnr := 'DIVERSE'
                            ELSE
                              deb_artnr := ArtRef."Cross-Reference No."
                          END;
                        UNTIL (ArtRef.NEXT = 0) OR (deb_artnr = 'DIVERSE');

                      test_user5 := test_user5 + InvLine."Artikelnr. 2";
                      Sheet.Range('I'+j).Value := FORMAT(Sheet.Range('I'+j).Value) + ',' + InvLine."Artikelnr. 2";
                      Sheet.Range('J'+j).Value := FORMAT(Sheet.Range('J'+j).Value) + ',' + deb_artnr;
                    END;
                  END;
                END;
              UNTIL PCN_Abgleich.NEXT = 0;
            UNTIL InvLine.NEXT = 0;
          END
        UNTIL InvHeader.NEXT = 0;
      END;

      debnr := '';

      SalesHeader.RESET;
      SalesHeader.SETCURRENTKEY("Sell-to Customer No.","Order Date");
      SalesHeader.SETFILTER("Document Type",'%1|%2',SalesHeader."Document Type"::Order,
                            SalesHeader."Document Type"::"Blanket Order");
      SalesHeader.SETFILTER("Sell-to Customer No.","Deb-Nr");
      //SalesHeader.SETFILTER("Sell-to Customer No.",'%1|%2|%3','100367','100760','710760');
      SalesHeader.SETFILTER("Betreuer Innendienst",Betreuer);
      SalesHeader.SETFILTER("Salesperson Code",Verkcode);
      SalesHeader.SETFILTER("Territory Code",Gebcode);
      IF (PstDateFrom <> 0D) AND (PstDateTo = 0D) THEN
        SalesHeader.SETFILTER("Order Date",'>=%1',PstDateFrom);
      IF (PstDateFrom = 0D) AND (PstDateTo <> 0D) THEN
        SalesHeader.SETFILTER("Order Date",'<=%1',PstDateTo);
      IF (PstDateFrom <> 0D) AND (PstDateTo <> 0D) THEN
        SalesHeader.SETFILTER("Order Date",'>=%1&<=%2',PstDateFrom,PstDateTo);
      IF SalesHeader.FINDFIRST THEN BEGIN
        REPEAT
          SalesLine.RESET;
          SalesLine.SETFILTER(Type,'%1',SalesLine.Type::Item);
          IF keine_muster THEN
            SalesLine.SETFILTER("Location Code",'<>%1','MUST');
          SalesLine.SETFILTER("Document No.",'%1',SalesHeader."No.");
          SalesLine.SETFILTER("Manufacturer Code",Herstellercode);
          SalesLine.SETFILTER(Quantity,'>%1',0);
          IF SalesLine.FINDFIRST THEN BEGIN
            REPEAT
              PCN_Abgleich.RESET;
              PCN_Abgleich.SETFILTER(Tabelle,'%1','PCN');
              IF such_algorith = such_algorith::exakt THEN
                PCN_Abgleich.SETFILTER(PCN_Abgleich."Feld 3",'%1',SalesLine."Artikelnr. 2");
              IF PCN_Abgleich.FINDFIRST THEN
                REPEAT
                  IF (SalesLine.Quantity > 0) AND (STRPOS(SalesLine."Artikelnr. 2",PCN_Abgleich."Feld 3") <> 0)
                  AND (STRPOS(SalesLine."Artikelnr. 2",artikel_ausschluss) = 0)
                  AND (STRPOS(SalesLine."Artikelnr. 2",artikel_ausschluss2) = 0)
                  AND (STRPOS(SalesLine."Artikelnr. 2",artikel_ausschluss3) = 0) THEN BEGIN
                    IF debnr <> SalesHeader."Sell-to Customer No." THEN BEGIN
                      t := '1';
                      zeile_gefunden := FALSE;
                      REPEAT
                        hilfs_debnr := DELCHR(FORMAT(Sheet.Range('A'+t).Value),'=','.');
                        IF hilfs_debnr = SalesHeader."Sell-to Customer No." THEN BEGIN
                          test_user5 := DELCHR(FORMAT(Sheet.Range('I'+t).Value),'=',',');
                          zeile_gefunden := TRUE;
                        END ELSE
                          t := INCSTR(t);
                      UNTIL (FORMAT(Sheet.Range('A'+t).Value) = '') OR (zeile_gefunden = TRUE);

                      IF zeile_gefunden = FALSE THEN BEGIN

                        j := INCSTR (j);

                        //***************************************************************************
                        //     Feld fr Artikelnr. und Deb. Artikelnr. Andruck im HTML Schreiben
                        //***************************************************************************

                        deb_artnr := '';
                        ArtRef.RESET;
                        ArtRef.SETFILTER("Item No.",'%1',SalesLine."No.");
                        ArtRef.SETFILTER("Cross-Reference Type",'%1',ArtRef."Cross-Reference Type"::Customer);
                        ArtRef.SETFILTER("Cross-Reference Type No.",'%1',SalesHeader."Sell-to Customer No.");
                        IF ArtRef.FINDFIRST THEN
                          REPEAT
                            IF ArtRef."Cross-Reference No." <> '' THEN BEGIN
                              IF (deb_artnr <> '') AND (deb_artnr <> ArtRef."Cross-Reference No.") THEN
                                deb_artnr := 'DIVERSE'
                              ELSE
                                deb_artnr := ArtRef."Cross-Reference No."
                            END;
                          UNTIL (ArtRef.NEXT = 0) OR (deb_artnr = 'DIVERSE');

                        test_user5 := SalesLine."Artikelnr. 2";

                        Sheet.Range('A'+j).Value := SalesHeader."Sell-to Customer No.";
                        Sheet.Range('B'+j).Value := SalesHeader."Sell-to Customer Name";
                        Sheet.Range('C'+j).Value := SalesHeader."Sell-to Customer Name 2";
                        Sheet.Range('D'+j).Value := SalesHeader."Sell-to Address";
                        Sheet.Range('E'+j).Value := SalesHeader."Sell-to Address 2";
                        Sheet.Range('F'+j).Value := SalesHeader."Sell-to Post Code";
                        Sheet.Range('G'+j).Value := SalesHeader."Sell-to City";
                        Sheet.Range('H'+j).Value := SalesHeader."Betreuer Innendienst";
                        Sheet.Range('I'+j).Value := SalesLine."Artikelnr. 2";
                        Sheet.Range('J'+j).Value := deb_artnr;
                        Sheet.Range('K'+j).Value := SalesLine."Document No.";
                        //IF (SalesLine."Posting Date" <> 0D)  AND (SalesLine."Posting Date" > 010100D)
                        //   THEN Sheet.Range('L'+j).Value := SalesLine."Posting Date";
                        //IF (SalesLine."Shipment Date" <> 0D) AND (SalesLine."Shipment Date" > 010100D) THEN
                        //  Sheet.Range('M'+j).Value := SalesLine."Shipment Date";

                        email:='';
                        ContRela.SETRANGE("No.",SalesLine."Sell-to Customer No.");
                        IF ContRela.FINDFIRST THEN BEGIN
                          Cont.SETRANGE("Company No.",ContRela."Contact No.");
                          Cont.SETRANGE("Unternehmen verlassen",FALSE);
                          IF Cont.FINDFIRST THEN BEGIN
                            REPEAT
                              pcn.RESET;
                              pcn.SETRANGE("Contact No.",Cont."No.");
                              pcn.SETRANGE("Job Responsibility Code",'PCN-EOL');
                              IF pcn.FINDFIRST THEN
                                REPEAT
                                  IF email = '' THEN
                                    email := Cont."E-Mail"
                                  ELSE
                                    IF STRPOS(email,Cont."E-Mail") = 0 THEN
                                      email := email + '; ' + Cont."E-Mail";
                                UNTIL pcn.NEXT = 0;
                                IF email <> '' THEN
                                  Sheet.Range('N'+j).Value := email;
                            UNTIL (Cont.NEXT = 0) OR (email <> '');
                          END;
                        END;
                        Sheet.Range('O'+j).Value := PCN_text;
                        Sheet.Range('P'+j).Value := Linie;
                      END ELSE BEGIN
                        IF STRPOS(test_user5,SalesLine."Artikelnr. 2") = 0 THEN BEGIN
                          deb_artnr := '';
                          ArtRef.RESET;
                          ArtRef.SETFILTER("Item No.",'%1',SalesLine."No.");
                          ArtRef.SETFILTER("Cross-Reference Type",'%1',ArtRef."Cross-Reference Type"::Customer);
                          ArtRef.SETFILTER("Cross-Reference Type No.",'%1',SalesHeader."Sell-to Customer No.");
                          IF ArtRef.FINDFIRST THEN
                            REPEAT
                              IF ArtRef."Cross-Reference No." <> '' THEN BEGIN
                                IF (deb_artnr <> '') AND (deb_artnr <> ArtRef."Cross-Reference No.") THEN
                                  deb_artnr := 'DIVERSE'
                                ELSE
                                  deb_artnr := ArtRef."Cross-Reference No."
                              END;
                            UNTIL (ArtRef.NEXT = 0) OR (deb_artnr = 'DIVERSE');

                          test_user5 := test_user5 + SalesLine."Artikelnr. 2";
                          Sheet.Range('I'+t).Value := FORMAT(Sheet.Range('I'+t).Value) + ',' + SalesLine."Artikelnr. 2";
                          Sheet.Range('J'+t).Value := FORMAT(Sheet.Range('J'+t).Value) + ',' + deb_artnr;
                        END;
                      END;
                      debnr := SalesHeader."Sell-to Customer No.";
                    END ELSE BEGIN
                      IF STRPOS(test_user5,SalesLine."Artikelnr. 2") = 0 THEN BEGIN
                        deb_artnr := '';
                        ArtRef.RESET;
                        ArtRef.SETFILTER("Item No.",'%1',SalesLine."No.");
                        ArtRef.SETFILTER("Cross-Reference Type",'%1',ArtRef."Cross-Reference Type"::Customer);
                        ArtRef.SETFILTER("Cross-Reference Type No.",'%1',SalesHeader."Sell-to Customer No.");
                        IF ArtRef.FINDFIRST THEN
                          REPEAT
                            IF ArtRef."Cross-Reference No." <> '' THEN BEGIN
                              IF (deb_artnr <> '') AND (deb_artnr <> ArtRef."Cross-Reference No.") THEN
                                deb_artnr := 'DIVERSE'
                              ELSE
                                deb_artnr := ArtRef."Cross-Reference No."
                            END;
                          UNTIL (ArtRef.NEXT = 0) OR (deb_artnr = 'DIVERSE');

                        test_user5 := test_user5 + SalesLine."Artikelnr. 2";
                        IF zeile_gefunden = FALSE THEN BEGIN
                          Sheet.Range('I'+j).Value := FORMAT(Sheet.Range('I'+j).Value) + ',' + SalesLine."Artikelnr. 2";
                          Sheet.Range('J'+j).Value := FORMAT(Sheet.Range('J'+j).Value) + ',' + deb_artnr;
                          convert_test_user5 := FORMAT(Sheet.Range('I'+j).Value);
                        END ELSE BEGIN
                          Sheet.Range('I'+t).Value := FORMAT(Sheet.Range('I'+t).Value) + ',' + SalesLine."Artikelnr. 2";
                          Sheet.Range('J'+t).Value := FORMAT(Sheet.Range('J'+t).Value) + ',' + deb_artnr;
                          convert_test_user5 := FORMAT(Sheet.Range('I'+t).Value);
                        END;
                      END;
                    END;
                  END;
                UNTIL PCN_Abgleich.NEXT = 0;
            UNTIL SalesLine.NEXT = 0;
          END;
        UNTIL SalesHeader.NEXT = 0;
      END;

      t := '1';
      chr := 10; //Line feed
      REPEAT
        convert_test_user5 := FORMAT(Sheet.Range('I'+t).Value);
        debnr := DELCHR(FORMAT(Sheet.Range('A'+t).Value),'=','.');
        IF (convert_test_user5 <> '') AND (convert_test_user5 <> 'Artikel') THEN BEGIN
          FOR k:= 1 TO 4 DO
            user5[k] := '';

          k := 1;
          mail_text := '';

          REPEAT
            IF STRPOS(convert_test_user5,',') <> 0 THEN
              hilfs_artikelnr := COPYSTR(convert_test_user5,1,STRPOS(convert_test_user5,',')-1)
            ELSE BEGIN
              hilfs_artikelnr := COPYSTR(convert_test_user5,1);
              convert_test_user5 := '';
            END;
            deb_artnr := '';

            Artikel.RESET;
            Artikel.SETFILTER("No. 2",'%1',hilfs_artikelnr);
            Artikel.FINDFIRST;

            ArtRef.RESET;
            ArtRef.SETFILTER("Item No.",'%1',Artikel."No.");
            ArtRef.SETFILTER("Cross-Reference Type",'%1',ArtRef."Cross-Reference Type"::Customer);
            ArtRef.SETFILTER("Cross-Reference Type No.",'%1',debnr);
            IF ArtRef.FINDFIRST THEN
              REPEAT
                IF ArtRef."Cross-Reference No." <> '' THEN BEGIN
                  IF (deb_artnr <> '') AND (deb_artnr <> ArtRef."Cross-Reference No.") THEN
                    deb_artnr := 'DIVERSE'
                  ELSE
                    deb_artnr := ArtRef."Cross-Reference No."
                END;
              UNTIL (ArtRef.NEXT = 0) OR (deb_artnr = 'DIVERSE');

            IF (STRLEN(user5[k] + '<tr><td>' + hilfs_artikelnr + '</td><td>' + deb_artnr +
            '</td></tr>') > 1000) THEN
              k += 1;
            user5[k] := user5[k] + '<tr><td>' + hilfs_artikelnr + '</td><td>' + deb_artnr +
            '</td></tr>';

            IF mail_text = '' THEN
              mail_text := hilfs_artikelnr + ' - ' + deb_artnr
            ELSE
              mail_text := mail_text + FORMAT(chr) + hilfs_artikelnr + ' - ' + deb_artnr;

            IF STRPOS(convert_test_user5,',') <> 0 THEN
              convert_test_user5 := COPYSTR(convert_test_user5,STRPOS(convert_test_user5,',')+1)

          UNTIL convert_test_user5 = '';
          Sheet.Range('Q'+t).Value := user5[1] + user5[2];
          Sheet.Range('R'+t).Value := user5[3] + user5[4];
          Sheet.Range('S'+t).Value := mail_text;
        END;
        t := INCSTR(t);
      UNTIL FORMAT(Sheet.Range('A'+t).Value) = '';

      CLEARALL;

      IF PCN_Abgleich.TABLECAPTION = 'Berichtstabelle' THEN BEGIN
        PCN_Abgleich.RESET;
        PCN_Abgleich.SETFILTER(User,'%1',USERID);
        PCN_Abgleich.DELETEALL;
      END ELSE
        MESSAGE('Sicherheitssperre:\Die Tabelle %1 konnte nicht geleert werden,'+
        ' stellen Sie sicher, dass die Tabellenbeschriftung richtig ist.',
        PCN_Abgleich.TABLECAPTION);
    END;

    PROCEDURE Open_WinApplct@1140003(VAR field@1140002 : Text[180]);
    VAR
      WinApplct@1140000 : Automation "{50A7E9B0-70EF-11D1-B75A-00A0C90564FE} 1.0:{13709620-C279-11CE-A49E-444553540000}:'Microsoft Shell Controls And Automation'.Shell";
      Filename@1140001 : Text[260];
    BEGIN
      CREATE(WinApplct,FALSE,TRUE);
      Filename := field;
      IF NOT EXISTS(Filename) THEN
        ERROR(Text001,Filename);

      WinApplct.Open(Filename);
    END;

    PROCEDURE Save_FileDialog@1000000001() : Text[250];
    VAR
      FileMgt@1000000000 : Codeunit 419;
    BEGIN
      EXIT(FileMgt.OpenFileDialog('Dokument ausw„hlen', '',''));
    END;

    EVENT Sheet@1000000042::SelectionChange@1543(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Sheet@1000000042::BeforeDoubleClick@1537(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000042::BeforeRightClick@1534(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000042::Activate@304();
    BEGIN
    END;

    EVENT Sheet@1000000042::Deactivate@1530();
    BEGIN
    END;

    EVENT Sheet@1000000042::Calculate@279();
    BEGIN
    END;

    EVENT Sheet@1000000042::Change@1545(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Sheet@1000000042::FollowHyperlink@1470(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Sheet@1000000042::PivotTableUpdate@2156(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Sheet@1000000042::PivotTableAfterValueChange@2886(TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Sheet@1000000042::PivotTableBeforeAllocateChanges@2889(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000042::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000042::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Sheet@1000000042::PivotTableChangeSync@2894(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000044::Open@1923();
    BEGIN
    END;

    EVENT Book@1000000044::Activate@304();
    BEGIN
    END;

    EVENT Book@1000000044::Deactivate@1530();
    BEGIN
    END;

    EVENT Book@1000000044::BeforeClose@1546(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000044::BeforeSave@1547(SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000044::BeforePrint@1549(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000044::NewSheet@1550(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000044::AddinInstall@1552();
    BEGIN
    END;

    EVENT Book@1000000044::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Book@1000000044::WindowResize@1554(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Book@1000000044::WindowActivate@1556(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Book@1000000044::WindowDeactivate@1557(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Book@1000000044::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Book@1000000044::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000044::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000044::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000044::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000044::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000044::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Book@1000000044::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Book@1000000044::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000044::PivotTableCloseConnection@2158(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000044::PivotTableOpenConnection@2159(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000044::Sync@2266(SyncEventType@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000044::BeforeXmlImport@2283(Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000044::AfterXmlImport@2285(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000044::BeforeXmlExport@2287(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000044::AfterXmlExport@2288(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000044::RowsetComplete@2610(Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000044::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Book@1000000044::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000044::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000044::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000044::SheetPivotTableChangeSync@2899(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000044::AfterSave@2900(Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000044::NewChart@2901(Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    EVENT Excel@1000000045::NewWorkbook@1565(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000045::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Excel@1000000045::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000045::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000045::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000045::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookOpen@1567(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookActivate@1568(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookDeactivate@1569(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookBeforeClose@1570(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookBeforeSave@1571(Wb@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookBeforePrint@1572(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookNewSheet@1573(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookAddinInstall@1574(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookAddinUninstall@1575(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000045::WindowResize@1554(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Excel@1000000045::WindowActivate@1556(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Excel@1000000045::WindowDeactivate@1557(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Excel@1000000045::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Excel@1000000045::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookPivotTableCloseConnection@2160(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookPivotTableOpenConnection@2161(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookSync@2289(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SyncEventType@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookBeforeXmlImport@2290(Wb@1000000004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookAfterXmlImport@2291(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookBeforeXmlExport@2292(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookAfterXmlExport@2293(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookRowsetComplete@2611(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::AfterCalculate@2612();
    BEGIN
    END;

    EVENT Excel@1000000045::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Excel@1000000045::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000045::ProtectedViewWindowOpen@2903(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000045::ProtectedViewWindowBeforeEdit@2905(Pvw@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::ProtectedViewWindowBeforeClose@2906(Pvw@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";Reason@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::ProtectedViewWindowResize@2908(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000045::ProtectedViewWindowActivate@2909(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000045::ProtectedViewWindowDeactivate@2910(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookAfterSave@2911(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000045::WorkbookNewChart@2912(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    BEGIN
    {
      ####TOPAS 10.07.2012-ST
      PCN Datenaufbereitung

      Schnittstelle zum BulkMailer
      Feld [User1] = PCN Betreff (Excel User1)
      Feld [User2] = Linie (Excel User2)
      Feld [User5] = Artikelnr. + Deb. Artikelnr. im HTML Format (Excel User5) ca. 30.000 Zeichen m”glich im BulkMailer
    }
    END.
  }
  RDLDATA
  {
  }
}

