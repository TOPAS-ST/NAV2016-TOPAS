OBJECT Report 50016 RMA-Lieferschein Kunde
{
  OBJECT-PROPERTIES
  {
    Date=28.08.24;
    Time=09:14:22;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS(Picture,"ISO Logo");
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50020;
               OnAfterGetRecord=BEGIN
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                END;

               ReqFilterFields=RMA-Nr. }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table50022;
               DataItemTableView=WHERE(Art=FILTER(Kunde));
               OnAfterGetRecord=BEGIN
                                  IF Land.GET("L„nder-/Regionscode") THEN ;
                                END;

               DataItemLink=RMA-Nr.=FIELD(RMA-Nr.) }

    { 1000000000;2;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 3   ;2   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000020;2;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000019;2;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2] }

    { 1000000018;2;Column;CompanyPostCode_City;
               SourceExpr=CompanyInfo[4] + ' ' + CompanyInfo[5] }

    { 1000000017;2;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000016;2;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000015;2;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000014;2;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;2;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;2;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;2;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;2;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;2;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000021;2;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 1000000022;2;Column;CompanyEORINr      ;
               SourceExpr=CompanyInfo[16] }

    { 1000000006;2;Column;Andruck1           ;
               SourceExpr=Andruck[1] }

    { 1000000005;2;Column;Andruck2           ;
               SourceExpr=Andruck[2] }

    { 1000000004;2;Column;Andruck3           ;
               SourceExpr=Andruck[3] }

    { 1000000003;2;Column;Andruck4           ;
               SourceExpr=Andruck[4] }

    { 1000000002;2;Column;Andruck5           ;
               SourceExpr=Andruck[5] }

    { 1000000001;2;Column;Andruck6           ;
               SourceExpr=Andruck[6] }

    { 1000000008;2;Column;Andruck7           ;
               SourceExpr=Andruck[7] }

    { 1000000007;2;Column;Andruck8           ;
               SourceExpr=Andruck[8] }

    { 8   ;2   ;Column  ;Debitornr_RMA_Beteiligte;
               SourceExpr="Debitornr." }

    { 12  ;2   ;Column  ;WORKDATE            ;
               SourceExpr=WORKDATE }

    { 13  ;2   ;Column  ;RMA_Nr_RMA_Beteiligte;
               SourceExpr="RMA-Nr." }

    { 14  ;1   ;DataItem;                    ;
               DataItemTable=Table50023;
               DataItemTableView=WHERE(Art=FILTER(an Kunden),
                                       Andruck=FILTER(Text oben));
               DataItemLink=Nr.=FIELD(RMA-Nr.) }

    { 15  ;2   ;Column  ;Bemerkung_TOPASBemerkungen;
               SourceExpr=Bemerkung }

    { 16  ;1   ;DataItem;                    ;
               DataItemTable=Table50021;
               DataItemTableView=WHERE(Belegart=FILTER(an Kunden),
                                       Ausblenden=FILTER(No));
               OnAfterGetRecord=BEGIN
                                  TariffNo := '';
                                  Text_Abweichung_SN_DC := '';

                                  Artikel.RESET;
                                  Artikel.SETFILTER("No.",'%1',"Artikelnr.");
                                  IF Artikel.FINDFIRST THEN BEGIN
                                    TariffNo := Artikel."Tariff No.";
                                    Artikelnr := Artikel."No. 2";
                                  END ELSE
                                    Artikelnr := "Artikelnr.";

                                  r_rma_zeile.RESET;
                                  r_rma_zeile.SETRANGE(Belegart,r_rma_zeile.Belegart::"vom Kunden");
                                  r_rma_zeile.SETRANGE("RMA-Nr.","RMA-Zeile"."RMA-Nr.");
                                  r_rma_zeile.SETRANGE("Belegnr.","RMA-Zeile"."Belegnr.");
                                  r_rma_zeile.SETRANGE("Belegzeilennr.","RMA-Zeile"."Belegzeilennr.");
                                  r_rma_zeile.SETRANGE("Datecode Pos.","RMA-Zeile"."Datecode Pos.");
                                  IF (r_rma_zeile.FINDFIRST) AND (r_rma_zeile."SN-Nr. / DC" <> "RMA-Zeile"."SN-Nr. / DC") THEN
                                    Text_Abweichung_SN_DC := 'Ersatzlieferung: alte Seriennr. ' + r_rma_zeile."SN-Nr. / DC";
                                END;

               DataItemLink=RMA-Nr.=FIELD(RMA-Nr.) }

    { 17  ;2   ;Column  ;MasnahmeHersteller_RMA_Zeile;
               DecimalPlaces=0:0;
               SourceExpr="RMA-Zeile"."Maánahme Hersteller" }

    { 18  ;2   ;Column  ;SN_Nr_DC_RMA_Zeile  ;
               SourceExpr="SN-Nr. / DC" }

    { 19  ;2   ;Column  ;Ursprungsland_RMA_Zeile;
               SourceExpr=Ursprungsland }

    { 20  ;2   ;Column  ;MengeSN_Nr_DC_RMA_Zeile;
               DecimalPlaces=0:0;
               SourceExpr="Menge SN-Nr. / DC" }

    { 21  ;2   ;Column  ;Artikelnr           ;
               SourceExpr=Artikelnr }

    { 22  ;2   ;Column  ;Anzahl_Zeile        ;
               SourceExpr=Anzahl_Zeile }

    { 23  ;2   ;Column  ;TariffNo            ;
               SourceExpr=TariffNo }

    { 24  ;2   ;Column  ;ExterneBelegnummmer_RMA_Zeile;
               SourceExpr="Externe Belegnummmer" }

    { 25  ;2   ;Column  ;Text_Abweichung_SN_DC;
               SourceExpr=Text_Abweichung_SN_DC }

    { 26  ;1   ;DataItem;Textunten           ;
               DataItemTable=Table50023;
               DataItemTableView=WHERE(Art=FILTER(an Kunden),
                                       Andruck=FILTER(Text unten));
               DataItemLink=Nr.=FIELD(RMA-Nr.) }

    { 27  ;2   ;Column  ;Bemerkung_Textunten ;
               SourceExpr=Bemerkung }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Land@1140000 : Record 9;
      Firmendaten@1000000000 : Record 79;
      r_rma_zeile@1140012 : Record 50021;
      Artikel@1000000005 : Record 27;
      FormatAddr@1000000001 : Codeunit 365;
      TOPAS_Funktionen@1000000004 : Codeunit 50006;
      CompanyInfo@1000000003 : ARRAY [20] OF Text;
      Amount@1140001 : Decimal;
      Totalamount@1140002 : Decimal;
      Anzahl_Zeile@1140004 : Integer;
      Andruck@1000000002 : ARRAY [8] OF Text;
      Zeile1@1140005 : Text[60];
      Zeile2@1140006 : Text[60];
      Zeile3@1140007 : Text[60];
      Zeile4@1140008 : Text[60];
      TariffNo@1140011 : Code[20];
      Artikelnr@1140013 : Code[40];
      Text_Abweichung_SN_DC@1140014 : Text[80];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Beteiligte_Body2@5025(VAR "RMA-Beteiligte"@1000000000 : Record 50022);
    BEGIN
      WITH "RMA-Beteiligte" DO BEGIN
        ReportForNav.ShowOutput((Art = Art::Kunde) AND (Fhrungsrolle = TRUE));
        FormatAddr.FormatAddr(Andruck,Name,"Name 2",Bemerkung,Adresse,"Adresse 2",Ort,"PLZ-Code",'',"L„nder-/Regionscode");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body5@5026(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        ReportForNav.ShowOutput(Belegart = Belegart::"an Kunden");
        IF  Belegart = Belegart::"an Kunden" THEN BEGIN
          //  Amount := ROUND(( "RMA-Zeile"."Menge SN-Nr. / DC") * ("RMA-Zeile"."urspr. DC-Preis EK-Lieferung"),0.01);
          //  Totalamount += Amount;
          Anzahl_Zeile += 1;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body6@5027(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        ReportForNav.ShowOutput(TariffNo <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body7@5028(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        ReportForNav.ShowOutput("RMA-Zeile"."Externe Belegnummmer" <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body8@5029(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        ReportForNav.ShowOutput(Text_Abweichung_SN_DC <> '');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RMA_Beteiligte': CASE SectionId OF
          'Body2': OnPreSectionRMA_Beteiligte_Body2("RMA-Beteiligte");
        END;
        'RMA_Zeile': CASE SectionId OF
          'Body5': OnPreSectionRMA_Zeile_Body5("RMA-Zeile");
          'Body6': OnPreSectionRMA_Zeile_Body6("RMA-Zeile");
          'Body7': OnPreSectionRMA_Zeile_Body7("RMA-Zeile");
          'Body8': OnPreSectionRMA_Zeile_Body8("RMA-Zeile");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
4t+9ab3kPHpO13lFIcn++P8=</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPostCode_City">
          <DataField>CompanyPostCode_City</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="CompanyEORINr">
          <DataField>CompanyEORINr</DataField>
        </Field>
        <Field Name="Andruck1">
          <DataField>Andruck1</DataField>
        </Field>
        <Field Name="Andruck2">
          <DataField>Andruck2</DataField>
        </Field>
        <Field Name="Andruck3">
          <DataField>Andruck3</DataField>
        </Field>
        <Field Name="Andruck4">
          <DataField>Andruck4</DataField>
        </Field>
        <Field Name="Andruck5">
          <DataField>Andruck5</DataField>
        </Field>
        <Field Name="Andruck6">
          <DataField>Andruck6</DataField>
        </Field>
        <Field Name="Andruck7">
          <DataField>Andruck7</DataField>
        </Field>
        <Field Name="Andruck8">
          <DataField>Andruck8</DataField>
        </Field>
        <Field Name="Debitornr_RMA_Beteiligte">
          <DataField>Debitornr_RMA_Beteiligte</DataField>
        </Field>
        <Field Name="WORKDATE">
          <DataField>WORKDATE</DataField>
        </Field>
        <Field Name="RMA_Nr_RMA_Beteiligte">
          <DataField>RMA_Nr_RMA_Beteiligte</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungen">
          <DataField>Bemerkung_TOPASBemerkungen</DataField>
        </Field>
        <Field Name="MasnahmeHersteller_RMA_Zeile">
          <DataField>MasnahmeHersteller_RMA_Zeile</DataField>
        </Field>
        <Field Name="SN_Nr_DC_RMA_Zeile">
          <DataField>SN_Nr_DC_RMA_Zeile</DataField>
        </Field>
        <Field Name="Ursprungsland_RMA_Zeile">
          <DataField>Ursprungsland_RMA_Zeile</DataField>
        </Field>
        <Field Name="MengeSN_Nr_DC_RMA_Zeile">
          <DataField>MengeSN_Nr_DC_RMA_Zeile</DataField>
        </Field>
        <Field Name="MengeSN_Nr_DC_RMA_ZeileFormat">
          <DataField>MengeSN_Nr_DC_RMA_ZeileFormat</DataField>
        </Field>
        <Field Name="Artikelnr">
          <DataField>Artikelnr</DataField>
        </Field>
        <Field Name="Anzahl_Zeile">
          <DataField>Anzahl_Zeile</DataField>
        </Field>
        <Field Name="TariffNo">
          <DataField>TariffNo</DataField>
        </Field>
        <Field Name="ExterneBelegnummmer_RMA_Zeile">
          <DataField>ExterneBelegnummmer_RMA_Zeile</DataField>
        </Field>
        <Field Name="Text_Abweichung_SN_DC">
          <DataField>Text_Abweichung_SN_DC</DataField>
        </Field>
        <Field Name="Bemerkung_Textunten">
          <DataField>Bemerkung_Textunten</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

