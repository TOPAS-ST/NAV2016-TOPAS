OBJECT Report 50016 RMA-Lieferschein Kunde
{
  OBJECT-PROPERTIES
  {
    Date=02.02.18;
    Time=10:51:13;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS(Picture,"ISO Logo");
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50020;
               OnAfterGetRecord=BEGIN
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                END;

               ReqFilterFields=RMA-Nr. }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table50022;
               DataItemTableView=WHERE(Art=FILTER(Kunde));
               OnAfterGetRecord=BEGIN
                                  IF Land.GET("L„nder-/Regionscode") THEN ;
                                END;

               DataItemLink=RMA-Nr.=FIELD(RMA-Nr.) }

    { 1000000000;2;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 3   ;2   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000020;2;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000019;2;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2] }

    { 1000000018;2;Column;CompanyPostCode_City;
               SourceExpr=CompanyInfo[4] + ' ' + CompanyInfo[5] }

    { 1000000017;2;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000016;2;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000015;2;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000014;2;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;2;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;2;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;2;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;2;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;2;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000021;2;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 1000000006;2;Column;Andruck1           ;
               SourceExpr=Andruck[1] }

    { 1000000005;2;Column;Andruck2           ;
               SourceExpr=Andruck[2] }

    { 1000000004;2;Column;Andruck3           ;
               SourceExpr=Andruck[3] }

    { 1000000003;2;Column;Andruck4           ;
               SourceExpr=Andruck[4] }

    { 1000000002;2;Column;Andruck5           ;
               SourceExpr=Andruck[5] }

    { 1000000001;2;Column;Andruck6           ;
               SourceExpr=Andruck[6] }

    { 1000000008;2;Column;Andruck7           ;
               SourceExpr=Andruck[7] }

    { 1000000007;2;Column;Andruck8           ;
               SourceExpr=Andruck[8] }

    { 8   ;2   ;Column  ;Debitornr_RMA_Beteiligte;
               SourceExpr="Debitornr." }

    { 12  ;2   ;Column  ;WORKDATE            ;
               SourceExpr=WORKDATE }

    { 13  ;2   ;Column  ;RMA_Nr_RMA_Beteiligte;
               SourceExpr="RMA-Nr." }

    { 14  ;1   ;DataItem;                    ;
               DataItemTable=Table50023;
               DataItemTableView=WHERE(Art=FILTER(an Kunden),
                                       Andruck=FILTER(Text oben));
               DataItemLink=Nr.=FIELD(RMA-Nr.) }

    { 15  ;2   ;Column  ;Bemerkung_TOPASBemerkungen;
               SourceExpr=Bemerkung }

    { 16  ;1   ;DataItem;                    ;
               DataItemTable=Table50021;
               DataItemTableView=WHERE(Belegart=FILTER(an Kunden),
                                       Ausblenden=FILTER(No));
               OnAfterGetRecord=BEGIN
                                  TariffNo := '';
                                  Text_Abweichung_SN_DC := '';

                                  Artikel.RESET;
                                  Artikel.SETFILTER("No.",'%1',"Artikelnr.");
                                  IF Artikel.FINDFIRST THEN BEGIN
                                    TariffNo := Artikel."Tariff No.";
                                    Artikelnr := Artikel."No. 2";
                                  END ELSE
                                    Artikelnr := "Artikelnr.";

                                  r_rma_zeile.RESET;
                                  r_rma_zeile.SETRANGE(Belegart,r_rma_zeile.Belegart::"vom Kunden");
                                  r_rma_zeile.SETRANGE("RMA-Nr.","RMA-Zeile"."RMA-Nr.");
                                  r_rma_zeile.SETRANGE("Belegnr.","RMA-Zeile"."Belegnr.");
                                  r_rma_zeile.SETRANGE("Belegzeilennr.","RMA-Zeile"."Belegzeilennr.");
                                  r_rma_zeile.SETRANGE("Datecode Pos.","RMA-Zeile"."Datecode Pos.");
                                  IF (r_rma_zeile.FINDFIRST) AND (r_rma_zeile."SN-Nr. / DC" <> "RMA-Zeile"."SN-Nr. / DC") THEN
                                    Text_Abweichung_SN_DC := 'Ersatzlieferung: alte Seriennr. ' + r_rma_zeile."SN-Nr. / DC";
                                END;

               DataItemLink=RMA-Nr.=FIELD(RMA-Nr.) }

    { 17  ;2   ;Column  ;MasnahmeHersteller_RMA_Zeile;
               DecimalPlaces=0:0;
               SourceExpr="RMA-Zeile"."Maánahme Hersteller" }

    { 18  ;2   ;Column  ;SN_Nr_DC_RMA_Zeile  ;
               SourceExpr="SN-Nr. / DC" }

    { 19  ;2   ;Column  ;Ursprungsland_RMA_Zeile;
               SourceExpr=Ursprungsland }

    { 20  ;2   ;Column  ;MengeSN_Nr_DC_RMA_Zeile;
               DecimalPlaces=0:0;
               SourceExpr="Menge SN-Nr. / DC" }

    { 21  ;2   ;Column  ;Artikelnr           ;
               SourceExpr=Artikelnr }

    { 22  ;2   ;Column  ;Anzahl_Zeile        ;
               SourceExpr=Anzahl_Zeile }

    { 23  ;2   ;Column  ;TariffNo            ;
               SourceExpr=TariffNo }

    { 24  ;2   ;Column  ;ExterneBelegnummmer_RMA_Zeile;
               SourceExpr="Externe Belegnummmer" }

    { 25  ;2   ;Column  ;Text_Abweichung_SN_DC;
               SourceExpr=Text_Abweichung_SN_DC }

    { 26  ;1   ;DataItem;Textunten           ;
               DataItemTable=Table50023;
               DataItemTableView=WHERE(Art=FILTER(an Kunden),
                                       Andruck=FILTER(Text unten));
               DataItemLink=Nr.=FIELD(RMA-Nr.) }

    { 27  ;2   ;Column  ;Bemerkung_Textunten ;
               SourceExpr=Bemerkung }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Land@1140000 : Record 9;
      Firmendaten@1000000000 : Record 79;
      r_rma_zeile@1140012 : Record 50021;
      Artikel@1000000005 : Record 27;
      FormatAddr@1000000001 : Codeunit 365;
      TOPAS_Funktionen@1000000004 : Codeunit 50006;
      CompanyInfo@1000000003 : ARRAY [15] OF Text;
      Amount@1140001 : Decimal;
      Totalamount@1140002 : Decimal;
      Anzahl_Zeile@1140004 : Integer;
      Andruck@1000000002 : ARRAY [8] OF Text;
      Zeile1@1140005 : Text[60];
      Zeile2@1140006 : Text[60];
      Zeile3@1140007 : Text[60];
      Zeile4@1140008 : Text[60];
      TariffNo@1140011 : Code[10];
      Artikelnr@1140013 : Code[40];
      Text_Abweichung_SN_DC@1140014 : Text[80];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionRMA_Beteiligte_Body2@5025(VAR "RMA-Beteiligte"@1000000000 : Record 50022);
    BEGIN
      WITH "RMA-Beteiligte" DO BEGIN
        ReportForNav.ShowOutput((Art = Art::Kunde) AND (Fhrungsrolle = TRUE));
        FormatAddr.FormatAddr(Andruck,Name,"Name 2",'',Adresse,"Adresse 2",Ort,"PLZ-Code",'',"L„nder-/Regionscode");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body5@5026(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        ReportForNav.ShowOutput(Belegart = Belegart::"an Kunden");
        IF  Belegart = Belegart::"an Kunden" THEN BEGIN
          //  Amount := ROUND(( "RMA-Zeile"."Menge SN-Nr. / DC") * ("RMA-Zeile"."urspr. DC-Preis EK-Lieferung"),0.01);
          //  Totalamount += Amount;
          Anzahl_Zeile += 1;
        END;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body6@5027(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        ReportForNav.ShowOutput(TariffNo <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body7@5028(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        ReportForNav.ShowOutput("RMA-Zeile"."Externe Belegnummmer" <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body8@5029(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        ReportForNav.ShowOutput(Text_Abweichung_SN_DC <> '');
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RMA_Beteiligte': CASE SectionId OF
          'Body2': OnPreSectionRMA_Beteiligte_Body2("RMA-Beteiligte");
        END;
        'RMA_Zeile': CASE SectionId OF
          'Body5': OnPreSectionRMA_Zeile_Body5("RMA-Zeile");
          'Body6': OnPreSectionRMA_Zeile_Body6("RMA-Zeile");
          'Body7': OnPreSectionRMA_Zeile_Body7("RMA-Zeile");
          'Body8': OnPreSectionRMA_Zeile_Body8("RMA-Zeile");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>YnoAAL1d3XLjuJW+36q8A0upSmYqMpsASZDsaSUr23Lsaf/Fsrs7uemiJdhiWiIdiuppz8W+yj7IXuzFPtC+QgAQFP8ACqDUM1PVlgCQAL5zcH6Ag6P//5//ffeXb6ul8RWn6yiJRwNgWgMDx7NkHsXPo8EmezryB3/58+/+492nLA3v8EuSZuvL8DXZZFOcRuEy+hWnRvnxw/ZFjglNl77tDj+RrwPjOlzh0YC/4ixJr8OvA+MkibM0Wd6/vpC6U/x18u0lxeu1WenNfLiofB0aklZfaY9DoxhA0f/QONkss02KRzHekObLoXG7eVxGs/f49T75guNR8OiCED6iJwc+Pj26s4FxFabPUbweDaBFnneHBqB/HTKX2vQGxm34jM9x9LzISNvAs/KSj9E8W5AC8hQteMHp+yiejwZjZ2CckfmSTxSuoeG9ZAPj9CUibV1Sdxpm4TTZpDMCxe8JakcMPDq7hzgiT93jOFusb57GV9FyGa1whlPyULR+WYavHNyr8dFlhJ/IKGcLHMXG+008xwPj5vGfeJZdJ6OBa1kAFa/lVNhOCpoW+R8APxgQihvGu+Mwnq/ZR/LlIsMrkFMTNgiXv4eOnzaiT23JfTX+/D55eWrOk7a7Dx+X+EOEfxkNGoVkrvQPGSwkGFzMGf/c4X+dRUsy6bMIL+frfLbXqTkwLvFXvBwNrAEfamPkzdHbwtGfJQl5d3XseQmoDn1KYCRQNepPwni6SKP4y2jwFC7XBPBb8i27Cr/dxDN8i1PKFfW6m3hC1txrXpGlG1q+DGf4Ij5OsixZFYU5d52NBh407UFlQmRKfBLrWml9qo5wqvf4W3acfCvmyb8CQtUpWcOkM+C71hAR6C+TWUgnfLZMQsKBZBVYVThq3By8kMU5W4TpFGcj0oy+dryMnuMVpq2uovl8iU/IZ8q250n6K6scDYoi2p58S1YvYfx6nqzwCwGHrwqcMaLn4202acyfIDDNXpeY4JykUfaaI+EOjIc1zgfMCUG+N8bIK940EX3DIBXhDPO3Ix2cwRZnAuLQ9U0HtpAGLrBNByBkU+ljur5N/qtC3xojHY2dj8YrOZgOY7ogMggAx7KohBKMkzWoE9+h7CYgv12j/3GSzonwICywXJLn6Wvy91LyXkYxLqhafp9mKc5mi4K/x/EzXe6BJaIifV8+I5+/PZ9W/iYxlez6GnkjWCRtclZJGWjJtmMihSPCQBneIeE+nk/uJj+M02x0dnF5P7n7gYnmH3+USz6YSz5YtrhkIoaLPfKeyeXpD/zbjyIpKJSETREBxDxxnMxfq5Ol32F1jufh+ia+TTEXiVsp1iH52nKyJk95F1uRB6AtYguJ2GvNCwjndRk+4mV9fbAitj4cVFkFgRkEge/5Q7stCIHtE1VJdCmxOJDrmY7rWyiQikaPisY1FUqj42Q5p0i80LddXRKjZ/IwmmZ4g1NKx7dkFj9Nrh9G9+NPxnXCvheLqFokmLxY7lGp3hR8zZUjXhSixQHEurMbVE8Mao4fBN3g+gxc2Bvah2lmHl2cmjm4DNoP43sym2eTYVmAWy9Uh9fRgRfK4OWCG7g94PVLeAOLwuu5aBfPeoDBCnrD+nEymRxRvCq4VsqqyDaL1bFFOtjaMmwd/jZPQ0eXcgDatkncABt4nGUtJOBY12PI+/6WY6XIItNz6+Dutpou8VNWs5nygprFRBiYgHyddFhM2ybqJPD3MJtK2jgy2ri8G7HSFdPG608bzva/OW3oEthFnLKNMnWoc3QA6rgy6iDejViTSqxbqx95PFRoUi+gGuM3ptAu6uhSRqB1e1AGySjj8W7E6lhMmWBLmMAKTA8GQiXhmD5CnuMMDcfzzcByoI2q1OiNMB2L8Sfjj0Pjj+QPL7xN1tlTOFt0IN/9nDpFnF4U8GQU8PlrFTR2rqu36HuuCQisYGgzYyjwKbsLyUC8v2BoQAuagDiAXqe2rmloqo3Pwm+m8RPV1exTQY38izpsWjrYl6EV8LeJdXAbLdhACyCH4eURuAIkcJdLtgUoh0sPrdtFEuMcrnu8LOHKyzXwEihMOV6B1Iex+Ot0FKNdGoIQ2Fzn5UzmB7YMtJzJiCFOUXN89/st9vF8TndtDd3Fvn1OmQq21WuxA0tKj2LrUEcVwoomdAjr0jU8dNoylzpFnuUhB5bc6x9G6DL27cA7r1fHFfbDVepWAu5X2jqKzOmBq1iI9saVSNEOVGmtOqb9FBOQ+pKAO5O2WDWJMXUrxoHL7LEu9WQTacFEh1Q99UZ2fPehsvJX2foZp9FskXXALX1EnQaoHw2kPifgTqet43T6TRr4qjQACJhkGbDNlAPQ4EOSrjO29yd3JYsm6hj7/TCW+o6AO4+2jo4szTBEd7llBnCuFD3E3EW768ijgG4cz9PN7IsnwmxbpwyWI/DsOjCSenCAu3COkt6qFeabS7YOXr6ljZffgZevgZfeLqfUrwLcsXKU9JEAL6iDlwvzzU1Xvr3ZRgx0IAY0ENPauARSPwhwR8hR0jZtxOxACzHUAzHYgRjUQEzLFQJSXwhwZ8hR0g0CxHwdxJDVAzG7AzFbAzEtZwhIvSHIvSFHSdILEPO0EHMYYo4GXk4HXo46Xq6W1IdSbwVyb8XtKfVtpIXXriOaNl5uB16uBl5aUh/KD7e4F+L2lPq2q2VVQG0tiTrwQhp46R1WST0MyD0MVyzzb6MZDbhqQVaWM9REJ38wCEzPItKKRj0wm9aGte16DrNLAHUA8hx/CCBiNnIAt3s2eT+fz6KUGJnzMMOxCD9hMyEcbM7confFoR6Kc6YrqzHnAFkmmS70XBMGwEWuYLo2sIbQsooJXkxvLpPnZNcEhc3kE+TmtKuwR9c8g7RLs8eB1q7DRxeJNpY7t+jovtzF8fj6rXE6sS0DupZv0OAww/I8i7wQBUYFnp0N1VeMlgaDUjsccjvcFWuwbnBBBVxo7jzbdW0Gr/r+J4tA+Hhxdn90fHFiEuTuJtPTydkZdLeQyqqVgUR6qk1qoENuoKMe0R22pcWlVg6j52oBOXm4OxoaD9PTI2MTz42fb/9+9J48k7wtoJQ3UAdTT+9JbXfIbXfUI6oDBjpgis+StCIOTpLVCqe/PobxF2P816FxHsZx8rUWOCiuV4dVTz1KDXzIDXzUI5oD+jqw2n7Oo47cWO2SpIgYPq7lUeFokX9syzUQcC2jJUnlDdXB1fKeoNQXsLkvgHqoKehpgevuK0cnD/enE3j+6dMnoRytVKvDqKWQbKmLYHMXAfVQSBBpwQh7y1EmIKmkbEvQZpUygJ6WIrKlPoPNfQavhyKCrg6AMFBZ5J2y8xRvMnojwDiWSc+OFurQaqklWx4MV4Qx992EK2UoRGJ3zLYt4mEAVx7N7hdOmN4O+il+jLIkjdPPrejgln0ubauOuJbGsqXHFTZ3bryem3jVuFkJ4sj5Toh/vLl7fzq+n4gQ3tapI6oXcyg9nLC5N+X1UFNOKR6A5YpD8TmeVrADz6YgCLPNigVrkk/b6Hz2WR0iPRUk9Yls7hN5fVSQoyBBia9EJCiRjlSA2t36p1N8Hm9mi0W4zDbx81sG3ng2SzZxFpHv252aSpEylL6eMpJ6RTb3ivw+ysjWgNKHDErH7h/rfo7T1Pg5CWeLaGVcheF6zSC9Ss16aQFsu0IdXj2FJPWTbO4n+X38JJWtkS28bg5vb3BZ7JLlAmAEBvIN5BwB+FMZ3/QnJzDqlfU4J0G9Oth6ukjqPdnce/L7eE9AB2x/T7HAQulqYLscbVbTBNMt0ZbWq6Otp6ek7pTD3Sm/jzulsp9SoB2AvSUHXoXR8q3xz9V/ZslLuDbnWwUmqFFHUkudOVKPyuEeld9DnYGGxSrU+LnNqqvxLxYpzq8Bx/SqBmPPvyeb1OAKi94oKmBslSuDGGgpMkfqVTnFJbyeJ1egEhsmOYmxgLIhml/xu1ax5cUN1fHT0lSO1HVyuOsU9NBUwK5jJ2TCHD1dJqSXFD8k6XMYPzMGZJcWS74rvqrDpaVrHPnVIO73BK7sxiwQX3Wv35j1iS0OBLwWBAwsT35nVjLj8uJrgGo3X+/wLAvpldnO+Uq9Eod7JUEPaW9VAjWgZSLXgcOgPWfHD0yL3+fYqWEBEjBLNYEB45bpInp5IYY1EUmFzyK9V8632epPtC+bq3PagS5Atb0g4dVkXnW1WWbRSbLcrGI+jEDtVvq7N+3rvu/yF3XfAeZpFoSBH8JzxDxRBU3EQVilrDD/8K9Nkv1EHjHoM/k38u54ttzMMaf0FjDaV86Ax5c3x5JL7cXVUwvkYxQGW/yDiFzs1IdVlO3snFKz+0Y9sPhtbGHkAuvIFnRu79d5cXPRsvPOhWEArCMo6Bzu13lxNc9y8s6FkY2sIyDoHOzXOSo6d/POhWGC8r226nByFty2NZVZ8iSZi7IMVK5fAQvlwwtEw6P/fr5kYbTV8dASk9bth5BfDMHjCVIs0Rhu0qwTHFK/3zCCYhg+H4YwPPH28h+fKZwKhCJNj2jTQ5CpuEUDqO5ioxOGApY7iNXhlKU7h/BArOunKMZz2Ti2KQmKbDZCOSsxNtsY8ZwPe0FE1U9TLbQvqddkoCSjgig1xv3N7Xh6jFc4/bKJn1l4ilZyjJCnLop/HPKR8GinogFlSSN5JA06MmhwsQkqneYpNDrSZzRCaHenz5BYiKL8GbWQrz0TZdiVRBnOXmkyep6yoNLVAr4t9LV2pQsqzLUto3wW8E1rmXS0VjbrgF7ehra/qmW9AZrX4Xuab4DrISA0T7rgrQqXbUVPlSAXKXZTpBSWjSQpgyzbDjMtlGTJMV7i57BToGzW5BlaVLS5TrqECbc+AdLMxwO1BYovxOQch/N6frK8xDmQUNm+rcy/4yJTcKNAXbL02AlDjWwmQ1ewhQM8QEMmvU7hUt9KZGuS5o0q8hQ1nM6r8P/+Ow4XK8zPd7LoKxEWLOFfxl3H++Sl5XySsjuKVnkKVDxY8TnzFuqySZTWYY+UPZL0Dd1kKPeCAktIA+uw+N8m63xvko5cBfafN+ssenrdRirRxzQg1ougk55VFK/rsd2GKleFPCjE2DswyMTAir7gZX4gRISjcb1ZPdJdE224q09roK53RCTdxSpe1+OECJUnRMAWcnZgAdM7sHDBRNky1P+2CeOsj2ApH9xHsGgdGu1M2qOSzaGJvxtUTjo8EwVB4AJCBpYeBriCHWfXdkx6yyS/Cdt5y0SPKg/p+iUl1s56SXQqo84JPfhIX43kybhJo+coViFTM31l6xV77D4CvXQSuxL5ABq0K97nllx9aWaGJEvGF9r5aI89bsACszU3uduxEFKTfHf6TiDJ6yBy4mq72Vun8TulQ3Rr6RB9U3AlVtkcs8WO6m5Hr5IMzaI5lkWnahAEpk0Dkk35vabKudpVuGbW1jnhkgwvlzjf9ijs+5YL09lefTnRNBOHTIbo9BCAlfxYgSPEkqp9n9Ja54iNpuDGcZyaxhuKH54lc5wHK+XJuel5brVqe1QirtXAVJBZdw9TylZKpdvmUqsS+uEJdyPoyRRQQVY/BnF6TTfuTk+6mVjQSgNm76C2ky12MnfDXEkyZEkiPfObCab82K8iCGpKuBs+WVMNDIOD2j+OOHPu7mhZr2aDijLXUBGgCiGzLtU4UNZUHUJ6HeKABonTUydZVedJzIY6EHLHKE6F92y3lRowaSmaXWn+WOh/L5hKZQOAECaojJKeRBzHv4aLpZwTa/UauGopm3ZAp962LQ1rF2/bNtVYTYVJEjuIjEkkMCbh9zIm0aGODByx8ugOaq84fgE0Xema1Yssug/T6OmJpcXepsmuFGlwlpZu2Gkauj11g4UUzRil8LUcCnFi022dOkaulvBvm3p6q49md1DJ8d+wbCSerGj1eYLVZ3+v1ecdavW5fbyOig8X2IR/DrP6WHApD+xbE9/jbRleekeDuDCB6m0turRSrMF3WlJ/99rs6WK47uHWpp42nXzLcBpjdqgVb1b0onO3odf9gAbyWl7H3ivel634pi1es8MlSRVEK94XrHjne614v7LiRbkSlFc86qlM3MpmN+FeydaNx4JUldQJ+ffz+PEXHM0W9DiZeBKnJ0LdImyoznZIS9HsezqPpIqm7r/0PZ1HRRyKMISueytMHPzDKvOvPApoe35plO/ZFR+EZ9EqXLKfnVqPBtZbq3rAf8Ma7wjJRDw2EAjj80Q+aXs+02t6Xk43n04OEfNVGOGIRw4CYWyedNuhOr5ao/1GVRgniAdqQGG0ntSTb6PGmhoa2HUSm9fuiARFPNQQilMQlj50dbiV4n0ALDYMEI8zhJKkflWvszaMWs3OkVzEGX6mpzqd4Z+IhxVCYThfaXxXB1KW7gNHEf3p8YBCKAyK3mE2tLmKP2BUnzjEoiyiRD0eRAOFcUoS9VJDT9zkwOFKVWujtgI89R8+pD1u4ux7hT6yV++IfSyqPoRpa0yMCq1Qpo4wpuaPD+4MY5Jkb5CFMdWuBe4dxhRUTC9qPXVqMU/sUInsx7qdVJ7+7Wkp0tcexjnsm8EBuYNd0ZywRzhnZRF0hSVum6mbiHqJGvY1EWkaB5WdwL4moleoNaGJKAT0t4ncLC3g+tTqsNaX0zbIIEte8p/SpU82T9jvq5VVtioPvK3Kyq0ZdzQGIe/ikf1aqryX40a9sCNn2091ku9O8Zp44jjNTeF10Td1qhbJL2zJR/HzxzCNyZ91ubpJJSFLkmatKt5J/nO80yxJiZyozg/wX+rt/Dnk4seW2do0a++6iJ+S7h9I5j/HzB1Ktv/wX7TR768fLi/JAmYdT1+JB7EyKc+YnBtLgJqDf/em45eh//xv</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>9ba19be1-00fd-4799-9209-ac3d687313f2</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>f6adbbde-0aaf-4f07-a7ca-172350b153de</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPostCode_City">
          <DataField>CompanyPostCode_City</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="Andruck1">
          <DataField>Andruck1</DataField>
        </Field>
        <Field Name="Andruck2">
          <DataField>Andruck2</DataField>
        </Field>
        <Field Name="Andruck3">
          <DataField>Andruck3</DataField>
        </Field>
        <Field Name="Andruck4">
          <DataField>Andruck4</DataField>
        </Field>
        <Field Name="Andruck5">
          <DataField>Andruck5</DataField>
        </Field>
        <Field Name="Andruck6">
          <DataField>Andruck6</DataField>
        </Field>
        <Field Name="Andruck7">
          <DataField>Andruck7</DataField>
        </Field>
        <Field Name="Andruck8">
          <DataField>Andruck8</DataField>
        </Field>
        <Field Name="Debitornr_RMA_Beteiligte">
          <DataField>Debitornr_RMA_Beteiligte</DataField>
        </Field>
        <Field Name="WORKDATE">
          <DataField>WORKDATE</DataField>
        </Field>
        <Field Name="RMA_Nr_RMA_Beteiligte">
          <DataField>RMA_Nr_RMA_Beteiligte</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungen">
          <DataField>Bemerkung_TOPASBemerkungen</DataField>
        </Field>
        <Field Name="MasnahmeHersteller_RMA_Zeile">
          <DataField>MasnahmeHersteller_RMA_Zeile</DataField>
        </Field>
        <Field Name="SN_Nr_DC_RMA_Zeile">
          <DataField>SN_Nr_DC_RMA_Zeile</DataField>
        </Field>
        <Field Name="Ursprungsland_RMA_Zeile">
          <DataField>Ursprungsland_RMA_Zeile</DataField>
        </Field>
        <Field Name="MengeSN_Nr_DC_RMA_Zeile">
          <DataField>MengeSN_Nr_DC_RMA_Zeile</DataField>
        </Field>
        <Field Name="MengeSN_Nr_DC_RMA_ZeileFormat">
          <DataField>MengeSN_Nr_DC_RMA_ZeileFormat</DataField>
        </Field>
        <Field Name="Artikelnr">
          <DataField>Artikelnr</DataField>
        </Field>
        <Field Name="Anzahl_Zeile">
          <DataField>Anzahl_Zeile</DataField>
        </Field>
        <Field Name="TariffNo">
          <DataField>TariffNo</DataField>
        </Field>
        <Field Name="ExterneBelegnummmer_RMA_Zeile">
          <DataField>ExterneBelegnummmer_RMA_Zeile</DataField>
        </Field>
        <Field Name="Text_Abweichung_SN_DC">
          <DataField>Text_Abweichung_SN_DC</DataField>
        </Field>
        <Field Name="Bemerkung_Textunten">
          <DataField>Bemerkung_Textunten</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

