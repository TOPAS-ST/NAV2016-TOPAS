OBJECT Report 50108 ProForma Inv Lief.Adr div AU
{
  OBJECT-PROPERTIES
  {
    Date=09.06.17;
    Time=16:22:01;
    Modified=Yes;
    Version List=FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.);
               OnPreDataItem=BEGIN
                               MESSAGE('Sicherheitshinweise:'+'\'+
                                       ' '+'\'+
                                       '  - alle Auftr„ge mssen auf die gleiche W„hrung lauten' +'\' +
                                       '  - der Debitor muá in allen Auftr„gen gleich sein' +'\' +
                                       '  - es muá die gleiche Lieferadresse hinterlegt sein'+ '\' +
                                       ' '+'\'+
                                       ' Wer Sicherheitshinweise nicht beachtet oder ungelesen wegklickt'+
                                       ' wird mit Ablage nicht unter 3 Monaten bestraft.');
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               SETFILTER("No.",'%1|%2|%3|%4|%5',aunr1,aunr2,aunr3,aunr4,aunr5);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF sprachcode = 1 THEN BEGIN
                                    CurrReport.LANGUAGE(1031); // Englischer L„ndercode  (ENU Englisch(USA))
                                  END ELSE BEGIN
                                    IF (("Sell-to Country/Region Code" <> 'DE') AND ("Sell-to Country/Region Code" <> 'AT')
                                    AND ("Sell-to Country/Region Code" <> 'CH')) THEN BEGIN
                                      CurrReport.LANGUAGE(1033); // Englischer L„ndercode
                                      sprachcode:=1;
                                    END ELSE BEGIN
                                      CurrReport.LANGUAGE(1031); // Deutscher L„ndercode  (ENU Englisch(USA))
                                    END;
                                  END;
                                  IF sprachcode = 1 THEN BEGIN
                                    CurrReport.LANGUAGE(1033); // Englischer L„ndercode  (ENU Englisch(USA))
                                  END;
                                  IF aunr1 = "No." THEN
                                   w„ := "Currency Code";
                                  IF w„ = '' THEN
                                   w„ := 'EUR';
                                  FormatAdr.SalesHeaderBillTo(DebAdr,"Sales Header");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                END;
                                 }

    { 2   ;1   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 3   ;1   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 4   ;1   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 5   ;1   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 6   ;1   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 7   ;1   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 8   ;1   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 9   ;1   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 10  ;1   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 11  ;1   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 12  ;1   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 13  ;1   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 14  ;1   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 15  ;1   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 17  ;1   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 16  ;1   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 18  ;1   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 19  ;1   ;Column  ;wa                  ;
               SourceExpr=w„ }

    { 20  ;1   ;Column  ;Bill_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Bill-to Customer No." }

    { 21  ;1   ;Column  ;SalesHeaderDocumentDate_0_1;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 22  ;1   ;Column  ;SalesHeaderExternalDocumentNo__SalesHeaderYourReference;
               SourceExpr="Sales Header"."External Document No."+' '+"Sales Header"."Your Reference" }

    { 23  ;1   ;Column  ;No_SalesHeader      ;
               SourceExpr="No." }

    { 24  ;1   ;Column  ;betrag              ;
               SourceExpr=betrag }

    { 25  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnAfterGetRecord=BEGIN
                                  IF artikel.GET("Sales Line"."No.") THEN BEGIN
                                    zollpos := artikel."Tariff No.";
                                    ursprung := artikel."Country/Region of Origin Code";
                                  END;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

    { 26  ;2   ;Column  ;UnitPrice_QtytoShip ;
               SourceExpr="Unit Price"*"Qty. to Ship" }

    { 27  ;2   ;Column  ;ursprung            ;
               SourceExpr=ursprung }

    { 28  ;2   ;Column  ;zollpos             ;
               SourceExpr=zollpos }

    { 29  ;2   ;Column  ;UnitPrice_SalesLine ;
               SourceExpr="Unit Price" }

    { 30  ;2   ;Column  ;LineNo_SalesLine    ;
               SourceExpr="Line No." }

    { 31  ;2   ;Column  ;QtytoShip_SalesLine ;
               SourceExpr="Qty. to Ship" }

    { 32  ;2   ;Column  ;No_SalesLine        ;
               SourceExpr="No." }

    { 33  ;2   ;Column  ;Description_SalesLine;
               SourceExpr=Description }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1000000000;2;Field  ;
                  CaptionML=DEU=Hier die Auftragtragsnummern angeben die zusammengefasst werden sollen (mindestens zwei). In den AU-Zeilen muá in der Spalte "zu liefern" die zu berechnende Menge eingetragen sein. Alle AUs mssen die gleiche W„hrung und Lief-Adr. haben. }

      { 1140000;2;Field     ;
                  CaptionML=DEU=1.);
                  SourceExpr=aunr1 }

      { 1140002;2;Field     ;
                  CaptionML=DEU=2.);
                  SourceExpr=aunr2 }

      { 1140001;2;Field     ;
                  CaptionML=DEU=3.);
                  SourceExpr=aunr3 }

      { 1140004;2;Field     ;
                  CaptionML=DEU=4.);
                  SourceExpr=aunr4 }

      { 1140003;2;Field     ;
                  CaptionML=DEU=5.);
                  SourceExpr=aunr5 }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      aunr1@1140002 : Code[20];
      aunr2@1140003 : Code[20];
      aunr3@1140004 : Code[20];
      aunr4@1140018 : Code[20];
      aunr5@1140019 : Code[20];
      w„@1140010 : Code[10];
      betrag@1140011 : Decimal;
      artikel@1140020 : Record 27;
      zollpos@1140021 : Code[10];
      ursprung@1140022 : Code[10];
      sprachcode@1140023 : Decimal;
      Firmendaten@1140024 : Record 79;
      FormatAdr@1140025 : Codeunit 365;
      DebAdr@1140026 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140027 : ARRAY [8] OF Text[50];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        //ReportForNav.ShowOutput(aunr1 = "Sales Header"."No.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body2@5011(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        //ReportForNav.ShowOutput(KZ = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body5@5012(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Qty. to Ship" > 0) AND (Type = Type::Item));
        IF ("Qty. to Ship" > 0) AND (Type = Type::Item) THEN
          betrag := betrag + ("Unit Price" * "Qty. to Ship");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body6@5013(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Qty. to Ship" > 0) AND (Type = Type::"G/L Account"));
        IF ("Qty. to Ship" > 0) AND (Type = Type::"G/L Account") THEN
           betrag := betrag + ("Unit Price" * "Qty. to Ship");
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Header1': OnPreSectionSalesHeader_Header1("Sales Header");
          'Body2': OnPreSectionSalesHeader_Body2("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Body5': OnPreSectionSalesLine_Body5("Sales Line");
          'Body6': OnPreSectionSalesLine_Body6("Sales Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>cb012663-0222-41f0-8ef6-a760fdf1fb54</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>ee488637-c716-4d08-b361-5c49fea194c5</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="wa">
          <DataField>wa</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesHeader">
          <DataField>Bill_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="SalesHeaderDocumentDate_0_1">
          <DataField>SalesHeaderDocumentDate_0_1</DataField>
        </Field>
        <Field Name="SalesHeaderExternalDocumentNo__SalesHeaderYourReference">
          <DataField>SalesHeaderExternalDocumentNo__SalesHeaderYourReference</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="betrag">
          <DataField>betrag</DataField>
        </Field>
        <Field Name="betragFormat">
          <DataField>betragFormat</DataField>
        </Field>
        <Field Name="UnitPrice_QtytoShip">
          <DataField>UnitPrice_QtytoShip</DataField>
        </Field>
        <Field Name="UnitPrice_QtytoShipFormat">
          <DataField>UnitPrice_QtytoShipFormat</DataField>
        </Field>
        <Field Name="ursprung">
          <DataField>ursprung</DataField>
        </Field>
        <Field Name="zollpos">
          <DataField>zollpos</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine">
          <DataField>UnitPrice_SalesLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLineFormat">
          <DataField>UnitPrice_SalesLineFormat</DataField>
        </Field>
        <Field Name="LineNo_SalesLine">
          <DataField>LineNo_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLine">
          <DataField>QtytoShip_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLineFormat">
          <DataField>QtytoShip_SalesLineFormat</DataField>
        </Field>
        <Field Name="No_SalesLine">
          <DataField>No_SalesLine</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

