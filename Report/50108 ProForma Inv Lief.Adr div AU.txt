OBJECT Report 50108 ProForma Inv Lief.Adr div AU
{
  OBJECT-PROPERTIES
  {
    Date=29.08.24;
    Time=16:25:44;
    Modified=Yes;
    Version List=FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.);
               OnPreDataItem=BEGIN
                               IF aunr = '' THEN ERROR('Der Filter Auftragsnummer ist leer.');
                               MESSAGE('Sicherheitshinweise: '+'\'+
                                       ' '+'\'+
                                       '  - alle Auftr„ge mssen auf die gleiche W„hrung lauten' +'\' +
                                       '  - der Debitor muá in allen Auftr„gen gleich sein' +'\' +
                                       '  - es muá die gleiche Lieferadresse hinterlegt sein'+ '\' +
                                       ' '+'\'+
                                       ' Wer Sicherheitshinweise nicht beachtet oder ungelesen wegklickt'+
                                       ' wird mit Ablage nicht unter 3 Monaten bestraft.');

                               SETFILTER("No.",aunr);
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo",Picture,"Event Logo");
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  FormatAdr.SalesHeaderBillTo(DebAdr,"Sales Header");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  IF w„  = '' THEN  BEGIN
                                    w„ := "Currency Code";
                                    IF w„ = '' THEN
                                      w„ := 'EUR';
                                  END;
                                END;
                                 }

    { 1000000003;1;Column;Picture_Firmendaten;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 18  ;1   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000014;1;Column;EventLogo_Firmendaten;
               SourceExpr=Firmendaten."Event Logo" }

    { 1000000000;1;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;1;Column;CompanyAddress     ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;1;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;1;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;1;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;1;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;1;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;1;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;1;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;1;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;1;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;1;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 1000000004;1;Column;CompanyEORINo      ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[16] }

    { 2   ;1   ;Column  ;DebAdr8             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[8] }

    { 3   ;1   ;Column  ;DebAdr7             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[7] }

    { 4   ;1   ;Column  ;DebAdr6             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[6] }

    { 5   ;1   ;Column  ;DebAdr5             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[5] }

    { 6   ;1   ;Column  ;DebAdr4             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[4] }

    { 7   ;1   ;Column  ;DebAdr3             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[3] }

    { 8   ;1   ;Column  ;DebAdr2             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[2] }

    { 9   ;1   ;Column  ;DebAdr1             ;
               IncludeCaption=No;
               SourceExpr=DebAdr[1] }

    { 10  ;1   ;Column  ;LieferAnAdr8        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[8] }

    { 11  ;1   ;Column  ;LieferAnAdr7        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[7] }

    { 12  ;1   ;Column  ;LieferAnAdr6        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[6] }

    { 13  ;1   ;Column  ;LieferAnAdr5        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[5] }

    { 14  ;1   ;Column  ;LieferAnAdr4        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[4] }

    { 15  ;1   ;Column  ;LieferAnAdr3        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[3] }

    { 17  ;1   ;Column  ;LieferAnAdr2        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[2] }

    { 16  ;1   ;Column  ;LieferAnAdr1        ;
               IncludeCaption=No;
               SourceExpr=LieferAnAdr[1] }

    { 19  ;1   ;Column  ;wa                  ;
               IncludeCaption=No;
               SourceExpr=w„ }

    { 20  ;1   ;Column  ;Bill_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Bill-to Customer No." }

    { 21  ;1   ;Column  ;SalesHeaderDocumentDate_0_1;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 22  ;1   ;Column  ;SalesHeaderExternalDocumentNo__SalesHeaderYourReference;
               IncludeCaption=No;
               SourceExpr="Sales Header"."External Document No."+' '+"Sales Header"."Your Reference" }

    { 23  ;1   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="No." }

    { 24  ;1   ;Column  ;betrag              ;
               IncludeCaption=No;
               SourceExpr=betrag }

    { 25  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnAfterGetRecord=BEGIN
                                  IF artikel.GET("Sales Line"."No.") THEN BEGIN
                                    zollpos := artikel."Tariff No.";
                                    ursprung := artikel."Country/Region of Origin Code";
                                  END;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

    { 26  ;2   ;Column  ;UnitPrice_QtytoShip ;
               IncludeCaption=No;
               SourceExpr="Unit Price"*"Qty. to Ship" }

    { 27  ;2   ;Column  ;ursprung            ;
               IncludeCaption=No;
               SourceExpr=ursprung }

    { 28  ;2   ;Column  ;zollpos             ;
               IncludeCaption=No;
               SourceExpr=zollpos }

    { 29  ;2   ;Column  ;UnitPrice_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Unit Price" }

    { 30  ;2   ;Column  ;LineNo_SalesLine    ;
               IncludeCaption=No;
               SourceExpr="Line No." }

    { 31  ;2   ;Column  ;QtytoShip_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Qty. to Ship" }

    { 32  ;2   ;Column  ;No_SalesLine        ;
               IncludeCaption=No;
               SourceExpr="No." }

    { 33  ;2   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr=Description }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1000000000;2;Field  ;
                  CaptionML=DEU=Hier die Auftragtragsnummern mit Trennstrich "|" angeben die zusammengefasst werden sollen (mindestens zwei). In den AU-Zeilen muá in der Spalte "zu liefern" die zu berechnende Menge eingetragen sein. Alle AUs mssen die gleiche W„hrung und Lief-Adr. haben. }

      { 1140000;2;Field     ;
                  CaptionML=DEU=1.);
                  SourceExpr=aunr }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Firmendaten@1000000003 : Record 79;
      Language@1000000002 : Record 8;
      artikel@1000000005 : Record 27;
      FormatAdr@1000000004 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [20] OF Text;
      aunr@1140002 : Code[100];
      w„@1140010 : Code[10];
      betrag@1140011 : Decimal;
      zollpos@1140021 : Code[20];
      ursprung@1140022 : Code[20];
      sprachcode@1140023 : Decimal;
      DebAdr@1140026 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140027 : ARRAY [8] OF Text[50];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body7@5014(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput((Type = Type::" ") AND ("No." = 'PROFORMA'));
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        //ReportForNav.ShowOutput(aunr1 = "Sales Header"."No.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body2@5011(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        //ReportForNav.ShowOutput(KZ = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body5@5012(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Qty. to Ship" > 0) AND (Type = Type::Item));
        IF ("Qty. to Ship" > 0) AND (Type = Type::Item) THEN
          betrag := betrag + ("Unit Price" * "Qty. to Ship");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body6@5013(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Qty. to Ship" > 0) AND (Type = Type::"G/L Account"));
        IF ("Qty. to Ship" > 0) AND (Type = Type::"G/L Account") THEN
          betrag := betrag + ("Unit Price" * "Qty. to Ship");
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Header1': OnPreSectionSalesHeader_Header1("Sales Header");
          'Body2': OnPreSectionSalesHeader_Body2("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Body5': OnPreSectionSalesLine_Body5("Sales Line");
          'Body6': OnPreSectionSalesLine_Body6("Sales Line");
          'Body7': OnPreSectionSalesLine_Body7("Sales Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
HEdP6bzQEorsT/8L</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="CompanyEORINo">
          <DataField>CompanyEORINo</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="wa">
          <DataField>wa</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesHeader">
          <DataField>Bill_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="SalesHeaderDocumentDate_0_1">
          <DataField>SalesHeaderDocumentDate_0_1</DataField>
        </Field>
        <Field Name="SalesHeaderExternalDocumentNo__SalesHeaderYourReference">
          <DataField>SalesHeaderExternalDocumentNo__SalesHeaderYourReference</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="betrag">
          <DataField>betrag</DataField>
        </Field>
        <Field Name="betragFormat">
          <DataField>betragFormat</DataField>
        </Field>
        <Field Name="UnitPrice_QtytoShip">
          <DataField>UnitPrice_QtytoShip</DataField>
        </Field>
        <Field Name="UnitPrice_QtytoShipFormat">
          <DataField>UnitPrice_QtytoShipFormat</DataField>
        </Field>
        <Field Name="ursprung">
          <DataField>ursprung</DataField>
        </Field>
        <Field Name="zollpos">
          <DataField>zollpos</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine">
          <DataField>UnitPrice_SalesLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLineFormat">
          <DataField>UnitPrice_SalesLineFormat</DataField>
        </Field>
        <Field Name="LineNo_SalesLine">
          <DataField>LineNo_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLine">
          <DataField>QtytoShip_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLineFormat">
          <DataField>QtytoShip_SalesLineFormat</DataField>
        </Field>
        <Field Name="No_SalesLine">
          <DataField>No_SalesLine</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

