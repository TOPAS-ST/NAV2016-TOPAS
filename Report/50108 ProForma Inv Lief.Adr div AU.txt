OBJECT Report 50108 ProForma Inv Lief.Adr div AU
{
  OBJECT-PROPERTIES
  {
    Date=22.03.18;
    Time=15:22:59;
    Modified=Yes;
    Version List=FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav := ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner := ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.);
               OnPreDataItem=BEGIN
                               MESSAGE('Sicherheitshinweise: '+'\'+
                                       ' '+'\'+
                                       '  - alle Auftr„ge mssen auf die gleiche W„hrung lauten' +'\' +
                                       '  - der Debitor muá in allen Auftr„gen gleich sein' +'\' +
                                       '  - es muá die gleiche Lieferadresse hinterlegt sein'+ '\' +
                                       ' '+'\'+
                                       ' Wer Sicherheitshinweise nicht beachtet oder ungelesen wegklickt'+
                                       ' wird mit Ablage nicht unter 3 Monaten bestraft.');
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               SETFILTER("No.",'%1|%2|%3|%4|%5',aunr1,aunr2,aunr3,aunr4,aunr5);
                               //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
                               Firmendaten.CALCFIELDS(Picture);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  FormatAdr.SalesHeaderBillTo(DebAdr,"Sales Header");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  IF aunr1 = "No." THEN
                                   w„ := "Currency Code";
                                  IF w„ = '' THEN
                                   w„ := 'EUR';
                                END;
                                 }

    { 1000000003;1;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 18  ;1   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;1;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;1;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;1;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;1;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;1;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;1;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;1;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;1;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;1;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;1;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;1;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;1;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 2   ;1   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 3   ;1   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 4   ;1   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 5   ;1   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 6   ;1   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 7   ;1   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 8   ;1   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 9   ;1   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 10  ;1   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 11  ;1   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 12  ;1   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 13  ;1   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 14  ;1   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 15  ;1   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 17  ;1   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 16  ;1   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 19  ;1   ;Column  ;wa                  ;
               SourceExpr=w„ }

    { 20  ;1   ;Column  ;Bill_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Bill-to Customer No." }

    { 21  ;1   ;Column  ;SalesHeaderDocumentDate_0_1;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 22  ;1   ;Column  ;SalesHeaderExternalDocumentNo__SalesHeaderYourReference;
               SourceExpr="Sales Header"."External Document No."+' '+"Sales Header"."Your Reference" }

    { 23  ;1   ;Column  ;No_SalesHeader      ;
               SourceExpr="No." }

    { 24  ;1   ;Column  ;betrag              ;
               SourceExpr=betrag }

    { 25  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnAfterGetRecord=BEGIN
                                  IF artikel.GET("Sales Line"."No.") THEN BEGIN
                                    zollpos := artikel."Tariff No.";
                                    ursprung := artikel."Country/Region of Origin Code";
                                  END;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

    { 26  ;2   ;Column  ;UnitPrice_QtytoShip ;
               SourceExpr="Unit Price"*"Qty. to Ship" }

    { 27  ;2   ;Column  ;ursprung            ;
               SourceExpr=ursprung }

    { 28  ;2   ;Column  ;zollpos             ;
               SourceExpr=zollpos }

    { 29  ;2   ;Column  ;UnitPrice_SalesLine ;
               SourceExpr="Unit Price" }

    { 30  ;2   ;Column  ;LineNo_SalesLine    ;
               SourceExpr="Line No." }

    { 31  ;2   ;Column  ;QtytoShip_SalesLine ;
               SourceExpr="Qty. to Ship" }

    { 32  ;2   ;Column  ;No_SalesLine        ;
               SourceExpr="No." }

    { 33  ;2   ;Column  ;Description_SalesLine;
               SourceExpr=Description }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1000000000;2;Field  ;
                  CaptionML=DEU=Hier die Auftragtragsnummern angeben die zusammengefasst werden sollen (mindestens zwei). In den AU-Zeilen muá in der Spalte "zu liefern" die zu berechnende Menge eingetragen sein. Alle AUs mssen die gleiche W„hrung und Lief-Adr. haben. }

      { 1140000;2;Field     ;
                  CaptionML=DEU=1.);
                  SourceExpr=aunr1 }

      { 1140002;2;Field     ;
                  CaptionML=DEU=2.);
                  SourceExpr=aunr2 }

      { 1140001;2;Field     ;
                  CaptionML=DEU=3.);
                  SourceExpr=aunr3 }

      { 1140004;2;Field     ;
                  CaptionML=DEU=4.);
                  SourceExpr=aunr4 }

      { 1140003;2;Field     ;
                  CaptionML=DEU=5.);
                  SourceExpr=aunr5 }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Firmendaten@1000000003 : Record 79;
      Language@1000000002 : Record 8;
      FormatAdr@1000000004 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      aunr1@1140002 : Code[20];
      aunr2@1140003 : Code[20];
      aunr3@1140004 : Code[20];
      aunr4@1140018 : Code[20];
      aunr5@1140019 : Code[20];
      w„@1140010 : Code[10];
      betrag@1140011 : Decimal;
      artikel@1140020 : Record 27;
      zollpos@1140021 : Code[10];
      ursprung@1140022 : Code[10];
      sprachcode@1140023 : Decimal;
      DebAdr@1140026 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140027 : ARRAY [8] OF Text[50];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        //ReportForNav.ShowOutput(aunr1 = "Sales Header"."No.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body2@5011(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        //ReportForNav.ShowOutput(KZ = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body5@5012(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Qty. to Ship" > 0) AND (Type = Type::Item));
        IF ("Qty. to Ship" > 0) AND (Type = Type::Item) THEN
          betrag := betrag + ("Unit Price" * "Qty. to Ship");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body6@5013(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Qty. to Ship" > 0) AND (Type = Type::"G/L Account"));
        IF ("Qty. to Ship" > 0) AND (Type = Type::"G/L Account") THEN
          betrag := betrag + ("Unit Price" * "Qty. to Ship");
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Header1': OnPreSectionSalesHeader_Header1("Sales Header");
          'Body2': OnPreSectionSalesHeader_Body2("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Body5': OnPreSectionSalesLine_Body5("Sales Line");
          'Body6': OnPreSectionSalesLine_Body6("Sales Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>cb012663-0222-41f0-8ef6-a760fdf1fb54</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>ee488637-c716-4d08-b361-5c49fea194c5</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="wa">
          <DataField>wa</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesHeader">
          <DataField>Bill_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="SalesHeaderDocumentDate_0_1">
          <DataField>SalesHeaderDocumentDate_0_1</DataField>
        </Field>
        <Field Name="SalesHeaderExternalDocumentNo__SalesHeaderYourReference">
          <DataField>SalesHeaderExternalDocumentNo__SalesHeaderYourReference</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="betrag">
          <DataField>betrag</DataField>
        </Field>
        <Field Name="betragFormat">
          <DataField>betragFormat</DataField>
        </Field>
        <Field Name="UnitPrice_QtytoShip">
          <DataField>UnitPrice_QtytoShip</DataField>
        </Field>
        <Field Name="UnitPrice_QtytoShipFormat">
          <DataField>UnitPrice_QtytoShipFormat</DataField>
        </Field>
        <Field Name="ursprung">
          <DataField>ursprung</DataField>
        </Field>
        <Field Name="zollpos">
          <DataField>zollpos</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine">
          <DataField>UnitPrice_SalesLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLineFormat">
          <DataField>UnitPrice_SalesLineFormat</DataField>
        </Field>
        <Field Name="LineNo_SalesLine">
          <DataField>LineNo_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLine">
          <DataField>QtytoShip_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLineFormat">
          <DataField>QtytoShip_SalesLineFormat</DataField>
        </Field>
        <Field Name="No_SalesLine">
          <DataField>No_SalesLine</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

