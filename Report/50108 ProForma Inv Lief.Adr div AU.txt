OBJECT Report 50108 ProForma Inv Lief.Adr div AU
{
  OBJECT-PROPERTIES
  {
    Date=07.02.18;
    Time=10:22:07;
    Modified=Yes;
    Version List=FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav := ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner :=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.);
               OnPreDataItem=BEGIN
                               MESSAGE('Sicherheitshinweise: '+'\'+
                                       ' '+'\'+
                                       '  - alle Auftr„ge mssen auf die gleiche W„hrung lauten' +'\' +
                                       '  - der Debitor muá in allen Auftr„gen gleich sein' +'\' +
                                       '  - es muá die gleiche Lieferadresse hinterlegt sein'+ '\' +
                                       ' '+'\'+
                                       ' Wer Sicherheitshinweise nicht beachtet oder ungelesen wegklickt'+
                                       ' wird mit Ablage nicht unter 3 Monaten bestraft.');
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               SETFILTER("No.",'%1|%2|%3|%4|%5',aunr1,aunr2,aunr3,aunr4,aunr5);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  FormatAdr.SalesHeaderBillTo(DebAdr,"Sales Header");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  IF aunr1 = "No." THEN
                                   w„ := "Currency Code";
                                  IF w„ = '' THEN
                                   w„ := 'EUR';
                                END;
                                 }

    { 18  ;1   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;1;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;1;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ', ' + CompanyInfo[5] }

    { 1000000005;1;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;1;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;1;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;1;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;1;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;1;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;1;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;1;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;1;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;1;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 2   ;1   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 3   ;1   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 4   ;1   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 5   ;1   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 6   ;1   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 7   ;1   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 8   ;1   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 9   ;1   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 10  ;1   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 11  ;1   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 12  ;1   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 13  ;1   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 14  ;1   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 15  ;1   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 17  ;1   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 16  ;1   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 19  ;1   ;Column  ;wa                  ;
               SourceExpr=w„ }

    { 20  ;1   ;Column  ;Bill_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Bill-to Customer No." }

    { 21  ;1   ;Column  ;SalesHeaderDocumentDate_0_1;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 22  ;1   ;Column  ;SalesHeaderExternalDocumentNo__SalesHeaderYourReference;
               SourceExpr="Sales Header"."External Document No."+' '+"Sales Header"."Your Reference" }

    { 23  ;1   ;Column  ;No_SalesHeader      ;
               SourceExpr="No." }

    { 24  ;1   ;Column  ;betrag              ;
               SourceExpr=betrag }

    { 25  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnAfterGetRecord=BEGIN
                                  IF artikel.GET("Sales Line"."No.") THEN BEGIN
                                    zollpos := artikel."Tariff No.";
                                    ursprung := artikel."Country/Region of Origin Code";
                                  END;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

    { 26  ;2   ;Column  ;UnitPrice_QtytoShip ;
               SourceExpr="Unit Price"*"Qty. to Ship" }

    { 27  ;2   ;Column  ;ursprung            ;
               SourceExpr=ursprung }

    { 28  ;2   ;Column  ;zollpos             ;
               SourceExpr=zollpos }

    { 29  ;2   ;Column  ;UnitPrice_SalesLine ;
               SourceExpr="Unit Price" }

    { 30  ;2   ;Column  ;LineNo_SalesLine    ;
               SourceExpr="Line No." }

    { 31  ;2   ;Column  ;QtytoShip_SalesLine ;
               SourceExpr="Qty. to Ship" }

    { 32  ;2   ;Column  ;No_SalesLine        ;
               SourceExpr="No." }

    { 33  ;2   ;Column  ;Description_SalesLine;
               SourceExpr=Description }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1000000000;2;Field  ;
                  CaptionML=DEU=Hier die Auftragtragsnummern angeben die zusammengefasst werden sollen (mindestens zwei). In den AU-Zeilen muá in der Spalte "zu liefern" die zu berechnende Menge eingetragen sein. Alle AUs mssen die gleiche W„hrung und Lief-Adr. haben. }

      { 1140000;2;Field     ;
                  CaptionML=DEU=1.);
                  SourceExpr=aunr1 }

      { 1140002;2;Field     ;
                  CaptionML=DEU=2.);
                  SourceExpr=aunr2 }

      { 1140001;2;Field     ;
                  CaptionML=DEU=3.);
                  SourceExpr=aunr3 }

      { 1140004;2;Field     ;
                  CaptionML=DEU=4.);
                  SourceExpr=aunr4 }

      { 1140003;2;Field     ;
                  CaptionML=DEU=5.);
                  SourceExpr=aunr5 }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Firmendaten@1000000003 : Record 79;
      Language@1000000002 : Record 8;
      FormatAdr@1000000004 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      aunr1@1140002 : Code[20];
      aunr2@1140003 : Code[20];
      aunr3@1140004 : Code[20];
      aunr4@1140018 : Code[20];
      aunr5@1140019 : Code[20];
      w„@1140010 : Code[10];
      betrag@1140011 : Decimal;
      artikel@1140020 : Record 27;
      zollpos@1140021 : Code[10];
      ursprung@1140022 : Code[10];
      sprachcode@1140023 : Decimal;
      DebAdr@1140026 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140027 : ARRAY [8] OF Text[50];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        //ReportForNav.ShowOutput(aunr1 = "Sales Header"."No.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body2@5011(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        //ReportForNav.ShowOutput(KZ = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body5@5012(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Qty. to Ship" > 0) AND (Type = Type::Item));
        IF ("Qty. to Ship" > 0) AND (Type = Type::Item) THEN
          betrag := betrag + ("Unit Price" * "Qty. to Ship");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body6@5013(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Qty. to Ship" > 0) AND (Type = Type::"G/L Account"));
        IF ("Qty. to Ship" > 0) AND (Type = Type::"G/L Account") THEN
           betrag := betrag + ("Unit Price" * "Qty. to Ship");
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Header1': OnPreSectionSalesHeader_Header1("Sales Header");
          'Body2': OnPreSectionSalesHeader_Body2("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Body5': OnPreSectionSalesLine_Body5("Sales Line");
          'Body6': OnPreSectionSalesLine_Body6("Sales Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>cb012663-0222-41f0-8ef6-a760fdf1fb54</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>ee488637-c716-4d08-b361-5c49fea194c5</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="wa">
          <DataField>wa</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesHeader">
          <DataField>Bill_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="SalesHeaderDocumentDate_0_1">
          <DataField>SalesHeaderDocumentDate_0_1</DataField>
        </Field>
        <Field Name="SalesHeaderExternalDocumentNo__SalesHeaderYourReference">
          <DataField>SalesHeaderExternalDocumentNo__SalesHeaderYourReference</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="betrag">
          <DataField>betrag</DataField>
        </Field>
        <Field Name="betragFormat">
          <DataField>betragFormat</DataField>
        </Field>
        <Field Name="UnitPrice_QtytoShip">
          <DataField>UnitPrice_QtytoShip</DataField>
        </Field>
        <Field Name="UnitPrice_QtytoShipFormat">
          <DataField>UnitPrice_QtytoShipFormat</DataField>
        </Field>
        <Field Name="ursprung">
          <DataField>ursprung</DataField>
        </Field>
        <Field Name="zollpos">
          <DataField>zollpos</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine">
          <DataField>UnitPrice_SalesLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLineFormat">
          <DataField>UnitPrice_SalesLineFormat</DataField>
        </Field>
        <Field Name="LineNo_SalesLine">
          <DataField>LineNo_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLine">
          <DataField>QtytoShip_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLineFormat">
          <DataField>QtytoShip_SalesLineFormat</DataField>
        </Field>
        <Field Name="No_SalesLine">
          <DataField>No_SalesLine</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

