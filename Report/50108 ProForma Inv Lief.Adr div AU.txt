OBJECT Report 50108 ProForma Inv Lief.Adr div AU
{
  OBJECT-PROPERTIES
  {
    Date=01.03.23;
    Time=15:52:17;
    Modified=Yes;
    Version List=FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.);
               OnPreDataItem=BEGIN
                               IF aunr = '' THEN ERROR('Der Filter Auftragsnummer ist leer.');
                               MESSAGE('Sicherheitshinweise: '+'\'+
                                       ' '+'\'+
                                       '  - alle Auftr„ge mssen auf die gleiche W„hrung lauten' +'\' +
                                       '  - der Debitor muá in allen Auftr„gen gleich sein' +'\' +
                                       '  - es muá die gleiche Lieferadresse hinterlegt sein'+ '\' +
                                       ' '+'\'+
                                       ' Wer Sicherheitshinweise nicht beachtet oder ungelesen wegklickt'+
                                       ' wird mit Ablage nicht unter 3 Monaten bestraft.');

                               SETFILTER("No.",aunr);
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo");
                               //20.03.18 ST - šbergangsweise fr Formwandlung AG wird das TOPAS Logo generell gerendert, da das "alte" Briefpapier mit Logo nicht mehr verwendet werden soll
                               Firmendaten.CALCFIELDS(Picture);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := Language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  FormatAdr.SalesHeaderBillTo(DebAdr,"Sales Header");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  IF w„  = '' THEN  BEGIN
                                    w„ := "Currency Code";
                                    IF w„ = '' THEN
                                      w„ := 'EUR';
                                  END;
                                END;
                                 }

    { 1000000003;1;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 18  ;1   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;1;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;1;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;1;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;1;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;1;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;1;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;1;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;1;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;1;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;1;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;1;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;1;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 1000000004;1;Column;CompanyEORINo      ;
               SourceExpr=CompanyInfo[16] }

    { 2   ;1   ;Column  ;DebAdr8             ;
               SourceExpr=DebAdr[8] }

    { 3   ;1   ;Column  ;DebAdr7             ;
               SourceExpr=DebAdr[7] }

    { 4   ;1   ;Column  ;DebAdr6             ;
               SourceExpr=DebAdr[6] }

    { 5   ;1   ;Column  ;DebAdr5             ;
               SourceExpr=DebAdr[5] }

    { 6   ;1   ;Column  ;DebAdr4             ;
               SourceExpr=DebAdr[4] }

    { 7   ;1   ;Column  ;DebAdr3             ;
               SourceExpr=DebAdr[3] }

    { 8   ;1   ;Column  ;DebAdr2             ;
               SourceExpr=DebAdr[2] }

    { 9   ;1   ;Column  ;DebAdr1             ;
               SourceExpr=DebAdr[1] }

    { 10  ;1   ;Column  ;LieferAnAdr8        ;
               SourceExpr=LieferAnAdr[8] }

    { 11  ;1   ;Column  ;LieferAnAdr7        ;
               SourceExpr=LieferAnAdr[7] }

    { 12  ;1   ;Column  ;LieferAnAdr6        ;
               SourceExpr=LieferAnAdr[6] }

    { 13  ;1   ;Column  ;LieferAnAdr5        ;
               SourceExpr=LieferAnAdr[5] }

    { 14  ;1   ;Column  ;LieferAnAdr4        ;
               SourceExpr=LieferAnAdr[4] }

    { 15  ;1   ;Column  ;LieferAnAdr3        ;
               SourceExpr=LieferAnAdr[3] }

    { 17  ;1   ;Column  ;LieferAnAdr2        ;
               SourceExpr=LieferAnAdr[2] }

    { 16  ;1   ;Column  ;LieferAnAdr1        ;
               SourceExpr=LieferAnAdr[1] }

    { 19  ;1   ;Column  ;wa                  ;
               SourceExpr=w„ }

    { 20  ;1   ;Column  ;Bill_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Bill-to Customer No." }

    { 21  ;1   ;Column  ;SalesHeaderDocumentDate_0_1;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 22  ;1   ;Column  ;SalesHeaderExternalDocumentNo__SalesHeaderYourReference;
               SourceExpr="Sales Header"."External Document No."+' '+"Sales Header"."Your Reference" }

    { 23  ;1   ;Column  ;No_SalesHeader      ;
               SourceExpr="No." }

    { 24  ;1   ;Column  ;betrag              ;
               SourceExpr=betrag }

    { 25  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnAfterGetRecord=BEGIN
                                  IF artikel.GET("Sales Line"."No.") THEN BEGIN
                                    zollpos := artikel."Tariff No.";
                                    ursprung := artikel."Country/Region of Origin Code";
                                  END;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

    { 26  ;2   ;Column  ;UnitPrice_QtytoShip ;
               SourceExpr="Unit Price"*"Qty. to Ship" }

    { 27  ;2   ;Column  ;ursprung            ;
               SourceExpr=ursprung }

    { 28  ;2   ;Column  ;zollpos             ;
               SourceExpr=zollpos }

    { 29  ;2   ;Column  ;UnitPrice_SalesLine ;
               SourceExpr="Unit Price" }

    { 30  ;2   ;Column  ;LineNo_SalesLine    ;
               SourceExpr="Line No." }

    { 31  ;2   ;Column  ;QtytoShip_SalesLine ;
               SourceExpr="Qty. to Ship" }

    { 32  ;2   ;Column  ;No_SalesLine        ;
               SourceExpr="No." }

    { 33  ;2   ;Column  ;Description_SalesLine;
               SourceExpr=Description }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1000000000;2;Field  ;
                  CaptionML=DEU=Hier die Auftragtragsnummern mit Trennstrich "|" angeben die zusammengefasst werden sollen (mindestens zwei). In den AU-Zeilen muá in der Spalte "zu liefern" die zu berechnende Menge eingetragen sein. Alle AUs mssen die gleiche W„hrung und Lief-Adr. haben. }

      { 1140000;2;Field     ;
                  CaptionML=DEU=1.);
                  SourceExpr=aunr }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Firmendaten@1000000003 : Record 79;
      Language@1000000002 : Record 8;
      artikel@1000000005 : Record 27;
      FormatAdr@1000000004 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [20] OF Text;
      aunr@1140002 : Code[100];
      w„@1140010 : Code[10];
      betrag@1140011 : Decimal;
      zollpos@1140021 : Code[20];
      ursprung@1140022 : Code[20];
      sprachcode@1140023 : Decimal;
      DebAdr@1140026 : ARRAY [8] OF Text[50];
      LieferAnAdr@1140027 : ARRAY [8] OF Text[50];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        //ReportForNav.ShowOutput(aunr1 = "Sales Header"."No.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Body2@5011(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        //ReportForNav.ShowOutput(KZ = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body5@5012(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Qty. to Ship" > 0) AND (Type = Type::Item));
        IF ("Qty. to Ship" > 0) AND (Type = Type::Item) THEN
          betrag := betrag + ("Unit Price" * "Qty. to Ship");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body6@5013(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Qty. to Ship" > 0) AND (Type = Type::"G/L Account"));
        IF ("Qty. to Ship" > 0) AND (Type = Type::"G/L Account") THEN
          betrag := betrag + ("Unit Price" * "Qty. to Ship");
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Header1': OnPreSectionSalesHeader_Header1("Sales Header");
          'Body2': OnPreSectionSalesHeader_Body2("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Body5': OnPreSectionSalesLine_Body5("Sales Line");
          'Body6': OnPreSectionSalesLine_Body6("Sales Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
4/8C</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="CompanyEORINo">
          <DataField>CompanyEORINo</DataField>
        </Field>
        <Field Name="DebAdr8">
          <DataField>DebAdr8</DataField>
        </Field>
        <Field Name="DebAdr7">
          <DataField>DebAdr7</DataField>
        </Field>
        <Field Name="DebAdr6">
          <DataField>DebAdr6</DataField>
        </Field>
        <Field Name="DebAdr5">
          <DataField>DebAdr5</DataField>
        </Field>
        <Field Name="DebAdr4">
          <DataField>DebAdr4</DataField>
        </Field>
        <Field Name="DebAdr3">
          <DataField>DebAdr3</DataField>
        </Field>
        <Field Name="DebAdr2">
          <DataField>DebAdr2</DataField>
        </Field>
        <Field Name="DebAdr1">
          <DataField>DebAdr1</DataField>
        </Field>
        <Field Name="LieferAnAdr8">
          <DataField>LieferAnAdr8</DataField>
        </Field>
        <Field Name="LieferAnAdr7">
          <DataField>LieferAnAdr7</DataField>
        </Field>
        <Field Name="LieferAnAdr6">
          <DataField>LieferAnAdr6</DataField>
        </Field>
        <Field Name="LieferAnAdr5">
          <DataField>LieferAnAdr5</DataField>
        </Field>
        <Field Name="LieferAnAdr4">
          <DataField>LieferAnAdr4</DataField>
        </Field>
        <Field Name="LieferAnAdr3">
          <DataField>LieferAnAdr3</DataField>
        </Field>
        <Field Name="LieferAnAdr2">
          <DataField>LieferAnAdr2</DataField>
        </Field>
        <Field Name="LieferAnAdr1">
          <DataField>LieferAnAdr1</DataField>
        </Field>
        <Field Name="wa">
          <DataField>wa</DataField>
        </Field>
        <Field Name="Bill_toCustomerNo_SalesHeader">
          <DataField>Bill_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="SalesHeaderDocumentDate_0_1">
          <DataField>SalesHeaderDocumentDate_0_1</DataField>
        </Field>
        <Field Name="SalesHeaderExternalDocumentNo__SalesHeaderYourReference">
          <DataField>SalesHeaderExternalDocumentNo__SalesHeaderYourReference</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="betrag">
          <DataField>betrag</DataField>
        </Field>
        <Field Name="betragFormat">
          <DataField>betragFormat</DataField>
        </Field>
        <Field Name="UnitPrice_QtytoShip">
          <DataField>UnitPrice_QtytoShip</DataField>
        </Field>
        <Field Name="UnitPrice_QtytoShipFormat">
          <DataField>UnitPrice_QtytoShipFormat</DataField>
        </Field>
        <Field Name="ursprung">
          <DataField>ursprung</DataField>
        </Field>
        <Field Name="zollpos">
          <DataField>zollpos</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine">
          <DataField>UnitPrice_SalesLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLineFormat">
          <DataField>UnitPrice_SalesLineFormat</DataField>
        </Field>
        <Field Name="LineNo_SalesLine">
          <DataField>LineNo_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLine">
          <DataField>QtytoShip_SalesLine</DataField>
        </Field>
        <Field Name="QtytoShip_SalesLineFormat">
          <DataField>QtytoShip_SalesLineFormat</DataField>
        </Field>
        <Field Name="No_SalesLine">
          <DataField>No_SalesLine</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

