OBJECT Report 50178 TOPAS Servicevertrag PDF
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=09:36:01;
    Modified=Yes;
    Version List=fertig,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50011;
               DataItemTableView=WHERE(Status=FILTER(<>ACTS&<>Champs Partner));
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo","Systeme Logo");
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.NewPageWithoutTransportTotals;
                                END;

               ReqFilterFields=Wartungsvertragsnr. }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table50024;
               DataItemTableView=SORTING(Gruppierung,Basisger„t)
                                 ORDER(Descending)
                                 WHERE(Art=FILTER(Service),
                                       Inaktiv=FILTER(No),
                                       SUP Artikelnr.=FILTER(<>CHAMPS-RE_INSTATE#01&<>RE_INSTATEMENT_FEE));
               OnPreDataItem=BEGIN
                               ReportForNav.PrinterSettings.PaperSource(3);
                               Nummer := 0;
                               kopf_text := '';
                               status_text := '';
                               //Blendet nun abgelaufene Servicepositionen aus
                               IF alles_drucken = FALSE THEN
                                 "Serviceleist. & Leihstellungen".SETFILTER("Ablaufdatum Serviceleistung",'>=%1',WORKDATE);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Shipment.GET("Serviceleist. & Leihstellungen"."Nr.") THEN BEGIN
                                    IF (Shipment."Sell-to Country/Region Code" <> 'DE') THEN BEGIN
                                    //AND(Shipment."Sell-to Country/Region Code" <>'AT')
                                    //AND (Shipment."Sell-to Country/Region Code" <>'CH')) THEN
                                      CurrReport.LANGUAGE(1033); // Englischer L„ndercode  (ENU Englisch(USA))
                                    END ELSE BEGIN
                                      CurrReport.LANGUAGE(1031); // Deutscher L„ndercode
                                    END;
                                  END;
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  //Suche nach 1. Basisger„t zum Andruck des Benuters + PW
                                  ZugangsdatenAndruck.RESET;
                                  ZugangsdatenAndruck.SETRANGE(Art,ZugangsdatenAndruck.Art :: Service);
                                  ZugangsdatenAndruck.SETRANGE(Inaktiv,FALSE);
                                  ZugangsdatenAndruck.SETRANGE(Basisger„t,TRUE);
                                  ZugangsdatenAndruck.SETRANGE("Zu exportieren",TRUE);
                                  ZugangsdatenAndruck.SETRANGE("Wartungsvertragsnr.","Serviceleist. & Leihstellungen"."Wartungsvertragsnr.");
                                  ZugangsdatenAndruck.SETFILTER("Ablaufdatum Serviceleistung",'>=%1',WORKDATE);
                                  IF ZugangsdatenAndruck.FINDFIRST THEN BEGIN
                                    benutzer := ZugangsdatenAndruck.Benutzername;
                                    pw := ZugangsdatenAndruck.Passwort;
                                  END ELSE BEGIN
                                    //Wartungsvertrag verfgt ber kein Basisger„t
                                    ZugangsdatenAndruck.RESET;
                                    ZugangsdatenAndruck.SETRANGE(Art,ZugangsdatenAndruck.Art :: Service);
                                    ZugangsdatenAndruck.SETRANGE(Inaktiv,FALSE);
                                    ZugangsdatenAndruck.SETRANGE("Zu exportieren",TRUE);
                                    ZugangsdatenAndruck.SETRANGE("Wartungsvertragsnr.","Serviceleist. & Leihstellungen"."Wartungsvertragsnr.");
                                    ZugangsdatenAndruck.SETFILTER("Ablaufdatum Serviceleistung",'>=%1',WORKDATE);
                                    IF ZugangsdatenAndruck.FINDFIRST THEN BEGIN
                                      benutzer := ZugangsdatenAndruck.Benutzername;
                                      pw := ZugangsdatenAndruck.Passwort;
                                    END
                                  END;
                                  sup_artikelnr := "Serviceleist. & Leihstellungen"."SUP Artikelnr.";
                                  Artikel.GET("SUP Artikelnr.");
                                  sup_artikelnr_lang := Artikel."No. 2";
                                  IF ((STRPOS(sup_artikelnr_lang,'HW') <> 0) OR (STRPOS(sup_artikelnr_lang,'AHR') <> 0)
                                  OR (STRPOS(sup_artikelnr_lang,'RPLC') <> 0) OR (sup_artikelnr_lang = 'CHAMPS-SUPP-8X5/YR')
                                  OR (STRPOS(sup_artikelnr_lang,'ENH-SUPP-PROG') <> 0))
                                  AND ((STRPOS(sup_artikelnr_lang,'SW') = 0) AND (STRPOS(sup_artikelnr_lang,'SOFTWARE') = 0)) THEN BEGIN
                                    benutzer := '-';
                                    pw := '-';
                                  END;
                                END;

               DataItemLink=Wartungsvertragsnr.=FIELD(Wartungsvertragsnr.) }

    { 3   ;2   ;Column  ;SystemeLogo_Firmendaten;
               SourceExpr=Firmendaten."Systeme Logo" }

    { 1000000003;2;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;2;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;2;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;2;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;2;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;2;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;2;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;2;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;2;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;2;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;2;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;2;Column;CompanyHomepage    ;
               SourceExpr='www.topas-systems.de' }

    { 1000000004;2;Column;ReportForNavPageNo ;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 4   ;2   ;Column  ;datum               ;
               SourceExpr=datum }

    { 5   ;2   ;Column  ;debitornr           ;
               SourceExpr=debitornr }

    { 6   ;2   ;Column  ;Nr_Serviceleist_Leihstellungen;
               SourceExpr="Nr." }

    { 7   ;2   ;Column  ;auftragsnr          ;
               SourceExpr=auftragsnr }

    { 8   ;2   ;Column  ;Wartungsvertragsnr_Wartungsvertrag;
               SourceExpr=Wartungsvertrag."Wartungsvertragsnr." }

    { 9   ;2   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 10  ;2   ;Column  ;AndruckFeld8        ;
               SourceExpr=AndruckFeld[8] }

    { 11  ;2   ;Column  ;AndruckFeld7        ;
               SourceExpr=AndruckFeld[7] }

    { 12  ;2   ;Column  ;AndruckFeld6        ;
               SourceExpr=AndruckFeld[6] }

    { 13  ;2   ;Column  ;AndruckFeld5        ;
               SourceExpr=AndruckFeld[5] }

    { 14  ;2   ;Column  ;AndruckFeld4        ;
               SourceExpr=AndruckFeld[4] }

    { 15  ;2   ;Column  ;AndruckFeld3        ;
               SourceExpr=AndruckFeld[3] }

    { 16  ;2   ;Column  ;AndruckFeld2        ;
               SourceExpr=AndruckFeld[2] }

    { 17  ;2   ;Column  ;AndruckFeld1        ;
               SourceExpr=AndruckFeld[1] }

    { 18  ;2   ;Column  ;ansp_email          ;
               SourceExpr=ansp_email }

    { 19  ;2   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 20  ;2   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 21  ;2   ;Column  ;ansp_name           ;
               SourceExpr=ansp_name }

    { 22  ;2   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 23  ;2   ;Column  ;ihre_ref            ;
               SourceExpr=ihre_ref }

    { 24  ;2   ;Column  ;kopf_text           ;
               SourceExpr=kopf_text }

    { 25  ;2   ;Column  ;SystemProjektinfos_Serviceleist_Leihstellungen;
               SourceExpr="System Projektinfos" }

    { 26  ;2   ;Column  ;pw                  ;
               SourceExpr=pw }

    { 27  ;2   ;Column  ;benutzer            ;
               SourceExpr=benutzer }

    { 28  ;2   ;Column  ;AblaufdatumServiceleistung_Serviceleist_Leihstellungen;
               SourceExpr="Ablaufdatum Serviceleistung" }

    { 29  ;2   ;Column  ;Lizenzdatum_Serviceleist_Leihstellungen;
               SourceExpr=Lizenzdatum }

    { 30  ;2   ;Column  ;Auftragsnr_Serviceleist_Leihstellungen;
               SourceExpr="Auftragsnr." }

    { 31  ;2   ;Column  ;Nummer              ;
               SourceExpr=Nummer }

    { 32  ;2   ;Column  ;sup_artikelnr_lang  ;
               SourceExpr=sup_artikelnr_lang }

    { 33  ;2   ;DataItem;                    ;
               DataItemTable=Table111;
               DataItemTableView=SORTING(Document No.,Line No.)
                                 WHERE(Type=FILTER(' '));
               DataItemLink=Document No.=FIELD(Nr.),
                            Attached to Line No.=FIELD(Belegzeilennr.) }

    { 34  ;3   ;Column  ;Description_SalesShipmentLine;
               SourceExpr=Description }

    { 35  ;2   ;DataItem;TOPAS Bemerkungen oben;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Leihstellung),
                                       Andruck=FILTER(Text oben));
               DataItemLink=Nr.=FIELD(Lfd. Nr.) }

    { 36  ;2   ;DataItem;Servicepositionen   ;
               DataItemTable=Table50024;
               DataItemTableView=SORTING(Lfd. Nr.,Art,Nr.);
               DataItemLink=Lfd. Nr.=FIELD(Lfd. Nr.) }

    { 37  ;3   ;Column  ;board_ini_text      ;
               SourceExpr=board_ini_text }

    { 38  ;3   ;Column  ;Menge_Serviceleist_Leihstellungen;
               DecimalPlaces=0:0;
               SourceExpr="Serviceleist. & Leihstellungen".Menge }

    { 39  ;3   ;Column  ;seriennr            ;
               SourceExpr=seriennr }

    { 40  ;3   ;Column  ;Artikelnr2_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Artikelnr. 2" }

    { 1000000000;3;Column;ProductKey         ;
               SourceExpr="Serviceleist. & Leihstellungen"."Product Key" }

    { 41  ;2   ;DataItem;TOPAS Bemerkungen unten;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Leihstellung),
                                       Andruck=FILTER(Text unten));
               DataItemLink=Nr.=FIELD(Lfd. Nr.) }

    { 42  ;3   ;Column  ;Bemerkung_TOPASBemerkungenunten;
               SourceExpr=Bemerkung }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140001;2;Field     ;
                  CaptionML=DEU=Alles drucken;
                  SourceExpr=alles_drucken }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Debitor@1140007 : Record 18;
      Artikel@1140008 : Record 27;
      ZugangsdatenAndruck@1140027 : Record 50024;
      KopfdatenAndruck@1140029 : Record 50024;
      LetzteServicePos@1140001 : Record 50024;
      Systempositionen@1140024 : Record 50024;
      Shipment@1140023 : Record 110;
      SalesHeader@1140018 : Record 36;
      ArchHeader@1140014 : Record 5107;
      Beleghistorie@1000000000 : Record 50008;
      Verk„ufer@1140015 : Record 13;
      Land_Region@1140025 : Record 9;
      Firmendaten@1000000003 : Record 79;
      FormatAddr@1140033 : Codeunit 365;
      TOPAS_Funktionen@1000000002 : Codeunit 50006;
      CompanyInfo@1000000001 : ARRAY [15] OF Text;
      kopf_text@1140000 : Text;
      SUP_Art_Beschr@1140009 : Text;
      AndruckFeld@1140028 : ARRAY [8] OF Text[50];
      Nummer@1140005 : Integer;
      status_text@1140006 : Text[100];
      ihre_ref@1140013 : Text[100];
      ansp_name@1140016 : Text[100];
      ansp_anrede@1140012 : Text[50];
      ansp_telefon@1140011 : Text[50];
      ansp_fax@1140010 : Text[50];
      ansp_email@1140017 : Text[80];
      sup_artikelnr@1140019 : Code[20];
      sup_artikelnr_lang@1140022 : Code[40];
      andruck_champs@1140026 : Boolean;
      auftragsnr@1140032 : Code[20];
      debitornr@1140031 : Code[20];
      datum@1140030 : Date;
      benutzer@1140020 : Text;
      pw@1140021 : Text;
      seriennr@1140002 : Code[60];
      board_ini_text@1140004 : Text;
      alles_drucken@1140034 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header1@5010(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        LetzteServicePos.RESET;
        LetzteServicePos.SETRANGE("Wartungsvertragsnr.","Wartungsvertragsnr.");
        LetzteServicePos.SETRANGE(Art,LetzteServicePos.Art::Service);
        IF LetzteServicePos.FINDFIRST THEN BEGIN
          REPEAT
            IF (STRPOS(LetzteServicePos."SUP Artikelnr.",'CHAMPS') <> 0)
            OR (STRPOS(LetzteServicePos."SUP Artikelnr.",'ACTS') <> 0) THEN BEGIN
              andruck_champs := TRUE;
              IF CurrReport.LANGUAGE = 1031 THEN
                kopf_text := 'Champs Servicevertrag'
              ELSE
                kopf_text := 'Champs Service Agreement';
            END ELSE BEGIN
              IF STRPOS(LetzteServicePos."SUP Artikelnr.",'ACHAT') <> 0 THEN BEGIN
                andruck_champs := TRUE;
                IF CurrReport.LANGUAGE = 1031 THEN
                  kopf_text := 'ACHAT Servicevertrag'
                ELSE
                  kopf_text := 'ACHAT Service Agreement';
              END;
            END;
          UNTIL LetzteServicePos.NEXT = 0;
        END;
        IF andruck_champs = FALSE THEN
          kopf_text := 'Software Upgrade Protection';
        KopfdatenAndruck.RESET;
        KopfdatenAndruck.SETRANGE(Art,KopfdatenAndruck.Art::Service);
        KopfdatenAndruck.SETRANGE("Wartungsvertragsnr.","Wartungsvertragsnr.");
        KopfdatenAndruck.SETRANGE(Inaktiv,FALSE);
        IF KopfdatenAndruck.FINDLAST THEN ;
        auftragsnr := KopfdatenAndruck."Auftragsnr.";
        debitornr := KopfdatenAndruck."Debitornr.";
        datum := KopfdatenAndruck.Belegdatum;
        ihre_ref := '';
        ansp_telefon := '';
        ansp_fax:= '';
        ansp_anrede := '';
        ansp_name := '';
        ansp_email := '';
        ArchHeader.RESET;
        ArchHeader.SETRANGE("No.",KopfdatenAndruck."Auftragsnr.");
        IF ArchHeader.FINDLAST THEN BEGIN
          IF ArchHeader."External Document No." <> '' THEN ihre_ref := ArchHeader."External Document No."+' ';
          IF ArchHeader."Your Reference"  <> '' THEN ihre_ref := ihre_ref + ArchHeader."Your Reference";
          Land_Region.GET(ArchHeader."Sell-to Country/Region Code");
          IF Verk„ufer.GET(ArchHeader."Betreuer Innendienst") THEN BEGIN
            IF  CurrReport.LANGUAGE = 1031 THEN BEGIN
              ansp_fax := Verk„ufer."Fax No.";
              ansp_anrede := Verk„ufer.Ansprech;
              ansp_telefon := Verk„ufer."Phone No.";
            END ELSE BEGIN
              ansp_fax := Verk„ufer.Fax_international;
              ansp_anrede := Verk„ufer.Ansprech_eng;
              ansp_telefon := Verk„ufer.Tel_international;
            END;
            ansp_name := Verk„ufer."First name" + ' ' + Verk„ufer.Name;
            ansp_email := Verk„ufer."E-Mail";
          END;
        END ELSE BEGIN
          SalesHeader.RESET;
          SalesHeader.SETRANGE("No.",KopfdatenAndruck."Auftragsnr.");
          IF SalesHeader.FINDLAST THEN BEGIN
            IF SalesHeader."External Document No." <> '' THEN ihre_ref := SalesHeader."External Document No."+' ';
            IF SalesHeader."Your Reference"  <> '' THEN ihre_ref := ihre_ref + SalesHeader."Your Reference";
            Land_Region.GET(SalesHeader."Sell-to Country/Region Code");
            IF Verk„ufer.GET(SalesHeader."Betreuer Innendienst") THEN BEGIN
              IF  CurrReport.LANGUAGE = 1031 THEN BEGIN
                ansp_fax := Verk„ufer."Fax No.";
                ansp_anrede := Verk„ufer.Ansprech;
                ansp_telefon := Verk„ufer."Phone No.";
              END ELSE BEGIN
                ansp_fax := Verk„ufer.Fax_international;
                ansp_anrede := Verk„ufer.Ansprech_eng;
                ansp_telefon := Verk„ufer.Tel_international;
              END;
              ansp_name := Verk„ufer."First name" + ' ' + Verk„ufer.Name;
              ansp_email := Verk„ufer."E-Mail";
            END;
          END ELSE BEGIN
            //Daten aus „lteren NAV Versionen
            Beleghistorie.RESET;
            Beleghistorie.SETRANGE("Auftragsnr.",KopfdatenAndruck."Auftragsnr.");
            IF Beleghistorie.FINDLAST THEN BEGIN
              //Noch berarbeiten, da es das Feld nicht in der Beleghistorie gibt
              //IF Beleghistorie."Externe Belegnr." <> '' THEN ihre_ref := SalesHeader."External Document No."+' ';
              IF Beleghistorie.Referenz  <> '' THEN ihre_ref := ihre_ref + Beleghistorie.Referenz;
              //Noch berarbeiten, da es das Feld nicht in der Beleghistorie gibt
              //Land_Region.GET(Beleghistorie."Sell-to Country/Region Code");
              Land_Region.GET('DE');
              IF Verk„ufer.GET(Beleghistorie."Betreuer Innendienst") THEN BEGIN
                IF  CurrReport.LANGUAGE = 1031 THEN BEGIN
                  ansp_fax := Verk„ufer."Fax No.";
                  ansp_anrede := Verk„ufer.Ansprech;
                  ansp_telefon := Verk„ufer."Phone No.";
                END ELSE BEGIN
                  ansp_fax := Verk„ufer.Fax_international;
                  ansp_anrede := Verk„ufer.Ansprech_eng;
                  ansp_telefon := Verk„ufer.Tel_international;
                END;
                ansp_name := Verk„ufer."First name" + ' ' + Verk„ufer.Name;
                ansp_email := Verk„ufer."E-Mail";
              END;
            END;
          END;
        END;
        FormatAddr.FormatAddr(AndruckFeld,KopfdatenAndruck.Debitorname,KopfdatenAndruck."Name 2",KopfdatenAndruck.Kontakt,
        KopfdatenAndruck.Adresse,KopfdatenAndruck."Adresse 2",KopfdatenAndruck.Ort,KopfdatenAndruck."PLZ-Code",'',Land_Region.Code);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header2@5011(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput(andruck_champs = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header3@5012(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
         ReportForNav.ShowOutput(andruck_champs = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_GroupHeader5@5013(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        Nummer += 1;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_GroupHeader6@5014(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput((STRPOS(sup_artikelnr_lang,'SW') <> 0) AND (STRPOS(sup_artikelnr_lang,'CHAMPS') <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body8@5015(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(sup_artikelnr <> Servicepositionen."SUP Artikelnr.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer9@5016(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(sup_artikelnr <> Servicepositionen."SUP Artikelnr.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServicepositionen_Body10@5017(VAR Servicepositionen@1000000000 : Record 50024);
    BEGIN
      WITH Servicepositionen DO BEGIN
        seriennr := "Seriennr.";
        IF Artikel.GET("Artikelnr.") THEN BEGIN
          IF (Artikel."Item Tracking Code" = 'PRODUCTKEY') OR ((Artikel."Item Tracking Code" = 'SN-ODER-PK') AND ((STRPOS("Seriennr.",'NODATA') <> 0) OR (STRPOS("Seriennr.",'VT') = 1))) THEN
            seriennr := "Product Key";
        END;
        IF STRPOS(seriennr,'S/N: ') = 1 THEN
          seriennr := COPYSTR(seriennr,STRLEN('S/N: ')+1);
        IF STRPOS(seriennr,'S/N:') = 1 THEN
          seriennr := COPYSTR(seriennr,STRLEN('S/N:')+1);
        board_ini_text := '';
        IF Basisger„t = TRUE THEN BEGIN
          Systempositionen.SETRANGE(Art,Systempositionen.Art :: System);
          Systempositionen.SETRANGE("Wartungsvertragsnr.","Wartungsvertragsnr.");
          Systempositionen.SETRANGE("Artikelnr.","Artikelnr.");
          Systempositionen.SETRANGE("Seriennr.","Seriennr.");
          IF Systempositionen.FINDFIRST THEN
            board_ini_text := 'Board ini: ' + Systempositionen."Board ini";
        END
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServicepositionen_Body12@1000000003(VAR Servicepositionen@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        IF Artikel.GET("Artikelnr.") THEN
          IF Artikel."Item Tracking Code" = 'SERIENNR+P' THEN
            ReportForNav.ShowOutput("Product Key" <> '')
          ELSE
            ReportForNav.ShowOutput(FALSE);
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': CASE SectionId OF
          'Header1': OnPreSectionServiceleist_Leihstellungen_Header1("Serviceleist. & Leihstellungen");
          'Header2': OnPreSectionServiceleist_Leihstellungen_Header2("Serviceleist. & Leihstellungen");
          'Header3': OnPreSectionServiceleist_Leihstellungen_Header3("Serviceleist. & Leihstellungen");
          'GroupHeader5': OnPreSectionServiceleist_Leihstellungen_GroupHeader5("Serviceleist. & Leihstellungen");
          'GroupHeader6': OnPreSectionServiceleist_Leihstellungen_GroupHeader6("Serviceleist. & Leihstellungen");
        END;
        'SalesShipmentLine': CASE SectionId OF
          'Body8': OnPreSectionSalesShipmentLine_Body8("Sales Shipment Line");
          'Footer9': OnPreSectionSalesShipmentLine_Footer9("Sales Shipment Line");
        END;
        'Servicepositionen': CASE SectionId OF
          'Body10': OnPreSectionServicepositionen_Body10(Servicepositionen);
          'Body12': OnPreSectionServicepositionen_Body12(Servicepositionen);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': WITH "Serviceleist. & Leihstellungen" DO CASE ForNavOperation OF
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

