OBJECT Report 50178 TOPAS Servicevertrag PDF
{
  OBJECT-PROPERTIES
  {
    Date=04.06.18;
    Time=17:04:41;
    Modified=Yes;
    Version List=fertig,FORNAV3.1.0.1460/1460;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                                                                                                                              ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50011;
               DataItemTableView=WHERE(Status=FILTER(<>ACTS&<>Champs Partner));
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               Firmendaten.CALCFIELDS("ISO Logo","Systeme Logo");
                             END;

               OnAfterGetRecord=BEGIN
                                  ReportForNav.NewPageWithoutTransportTotals;
                                END;

               ReqFilterFields=Wartungsvertragsnr. }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table50024;
               DataItemTableView=SORTING(Gruppierung,Basisger„t)
                                 ORDER(Descending)
                                 WHERE(Art=FILTER(Service),
                                       Inaktiv=FILTER(No),
                                       SUP Artikelnr.=FILTER(<>CHAMPS-RE_INSTATE#01&<>RE_INSTATEMENT_FEE));
               OnPreDataItem=BEGIN
                               ReportForNav.PrinterSettings.PaperSource(3);
                               Nummer := 0;
                               kopf_text := '';
                               status_text := '';
                               //Blendet nun abgelaufene Servicepositionen aus
                               IF alles_drucken = FALSE THEN
                                 "Serviceleist. & Leihstellungen".SETFILTER("Ablaufdatum Serviceleistung",'>=%1',WORKDATE);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Shipment.GET("Serviceleist. & Leihstellungen"."Nr.") THEN BEGIN
                                    IF (Shipment."Sell-to Country/Region Code" <> 'DE') THEN BEGIN
                                    //AND(Shipment."Sell-to Country/Region Code" <>'AT')
                                    //AND (Shipment."Sell-to Country/Region Code" <>'CH')) THEN
                                      CurrReport.LANGUAGE(1033); // Englischer L„ndercode  (ENU Englisch(USA))
                                    END ELSE BEGIN
                                      CurrReport.LANGUAGE(1031); // Deutscher L„ndercode
                                    END;
                                  END;
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  //Suche nach 1. Basisger„t zum Andruck des Benuters + PW
                                  ZugangsdatenAndruck.RESET;
                                  ZugangsdatenAndruck.SETRANGE(Art,ZugangsdatenAndruck.Art :: Service);
                                  ZugangsdatenAndruck.SETRANGE(Inaktiv,FALSE);
                                  ZugangsdatenAndruck.SETRANGE(Basisger„t,TRUE);
                                  ZugangsdatenAndruck.SETRANGE("Zu exportieren",TRUE);
                                  ZugangsdatenAndruck.SETRANGE("Wartungsvertragsnr.","Serviceleist. & Leihstellungen"."Wartungsvertragsnr.");
                                  IF ZugangsdatenAndruck.FINDFIRST THEN BEGIN
                                    benutzer := ZugangsdatenAndruck.Benutzername;
                                    pw := ZugangsdatenAndruck.Passwort;
                                  END ELSE BEGIN
                                    //Wartungsvertrag verfgt ber kein Basisger„t
                                    ZugangsdatenAndruck.RESET;
                                    ZugangsdatenAndruck.SETRANGE(Art,ZugangsdatenAndruck.Art :: Service);
                                    ZugangsdatenAndruck.SETRANGE(Inaktiv,FALSE);
                                    ZugangsdatenAndruck.SETRANGE("Zu exportieren",TRUE);
                                    ZugangsdatenAndruck.SETRANGE("Wartungsvertragsnr.","Serviceleist. & Leihstellungen"."Wartungsvertragsnr.");
                                    IF ZugangsdatenAndruck.FINDFIRST THEN BEGIN
                                      benutzer := ZugangsdatenAndruck.Benutzername;
                                      pw := ZugangsdatenAndruck.Passwort;
                                    END
                                  END;
                                  sup_artikelnr := "Serviceleist. & Leihstellungen"."SUP Artikelnr.";
                                  Artikel.GET("SUP Artikelnr.");
                                  sup_artikelnr_lang := Artikel."No. 2";
                                  IF ((STRPOS(sup_artikelnr_lang,'HW') <> 0) OR (STRPOS(sup_artikelnr_lang,'AHR') <> 0)
                                  OR (STRPOS(sup_artikelnr_lang,'RPLC') <> 0) OR (sup_artikelnr_lang = 'CHAMPS-SUPP-8X5/YR')
                                  OR (STRPOS(sup_artikelnr_lang,'ENH-SUPP-PROG') <> 0))
                                  AND ((STRPOS(sup_artikelnr_lang,'SW') = 0) AND (STRPOS(sup_artikelnr_lang,'SOFTWARE') = 0)) THEN BEGIN
                                    benutzer := '-';
                                    pw := '-';
                                  END;
                                END;

               DataItemLink=Wartungsvertragsnr.=FIELD(Wartungsvertragsnr.) }

    { 3   ;2   ;Column  ;SystemeLogo_Firmendaten;
               SourceExpr=Firmendaten."Systeme Logo" }

    { 1000000003;2;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;2;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;2;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;2;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;2;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;2;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;2;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;2;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;2;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;2;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;2;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;2;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 1000000004;2;Column;ReportForNavPageNo ;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 4   ;2   ;Column  ;datum               ;
               SourceExpr=datum }

    { 5   ;2   ;Column  ;debitornr           ;
               SourceExpr=debitornr }

    { 6   ;2   ;Column  ;Nr_Serviceleist_Leihstellungen;
               SourceExpr="Nr." }

    { 7   ;2   ;Column  ;auftragsnr          ;
               SourceExpr=auftragsnr }

    { 8   ;2   ;Column  ;Wartungsvertragsnr_Wartungsvertrag;
               SourceExpr=Wartungsvertrag."Wartungsvertragsnr." }

    { 9   ;2   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 10  ;2   ;Column  ;AndruckFeld8        ;
               SourceExpr=AndruckFeld[8] }

    { 11  ;2   ;Column  ;AndruckFeld7        ;
               SourceExpr=AndruckFeld[7] }

    { 12  ;2   ;Column  ;AndruckFeld6        ;
               SourceExpr=AndruckFeld[6] }

    { 13  ;2   ;Column  ;AndruckFeld5        ;
               SourceExpr=AndruckFeld[5] }

    { 14  ;2   ;Column  ;AndruckFeld4        ;
               SourceExpr=AndruckFeld[4] }

    { 15  ;2   ;Column  ;AndruckFeld3        ;
               SourceExpr=AndruckFeld[3] }

    { 16  ;2   ;Column  ;AndruckFeld2        ;
               SourceExpr=AndruckFeld[2] }

    { 17  ;2   ;Column  ;AndruckFeld1        ;
               SourceExpr=AndruckFeld[1] }

    { 18  ;2   ;Column  ;ansp_email          ;
               SourceExpr=ansp_email }

    { 19  ;2   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 20  ;2   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 21  ;2   ;Column  ;ansp_name           ;
               SourceExpr=ansp_name }

    { 22  ;2   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 23  ;2   ;Column  ;ihre_ref            ;
               SourceExpr=ihre_ref }

    { 24  ;2   ;Column  ;kopf_text           ;
               SourceExpr=kopf_text }

    { 25  ;2   ;Column  ;SystemProjektinfos_Serviceleist_Leihstellungen;
               SourceExpr="System Projektinfos" }

    { 26  ;2   ;Column  ;pw                  ;
               SourceExpr=pw }

    { 27  ;2   ;Column  ;benutzer            ;
               SourceExpr=benutzer }

    { 28  ;2   ;Column  ;AblaufdatumServiceleistung_Serviceleist_Leihstellungen;
               SourceExpr="Ablaufdatum Serviceleistung" }

    { 29  ;2   ;Column  ;Lizenzdatum_Serviceleist_Leihstellungen;
               SourceExpr=Lizenzdatum }

    { 30  ;2   ;Column  ;Auftragsnr_Serviceleist_Leihstellungen;
               SourceExpr="Auftragsnr." }

    { 31  ;2   ;Column  ;Nummer              ;
               SourceExpr=Nummer }

    { 32  ;2   ;Column  ;sup_artikelnr_lang  ;
               SourceExpr=sup_artikelnr_lang }

    { 33  ;2   ;DataItem;                    ;
               DataItemTable=Table111;
               DataItemTableView=SORTING(Document No.,Line No.)
                                 WHERE(Type=FILTER(' '));
               DataItemLink=Document No.=FIELD(Nr.),
                            Attached to Line No.=FIELD(Belegzeilennr.) }

    { 34  ;3   ;Column  ;Description_SalesShipmentLine;
               SourceExpr=Description }

    { 35  ;2   ;DataItem;TOPAS Bemerkungen oben;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Leihstellung),
                                       Andruck=FILTER(Text oben));
               DataItemLink=Nr.=FIELD(Lfd. Nr.) }

    { 36  ;2   ;DataItem;Servicepositionen   ;
               DataItemTable=Table50024;
               DataItemTableView=SORTING(Lfd. Nr.,Art,Nr.);
               DataItemLink=Lfd. Nr.=FIELD(Lfd. Nr.) }

    { 37  ;3   ;Column  ;board_ini_text      ;
               SourceExpr=board_ini_text }

    { 38  ;3   ;Column  ;Menge_Serviceleist_Leihstellungen;
               DecimalPlaces=0:0;
               SourceExpr="Serviceleist. & Leihstellungen".Menge }

    { 39  ;3   ;Column  ;seriennr            ;
               SourceExpr=seriennr }

    { 40  ;3   ;Column  ;Artikelnr2_Serviceleist_Leihstellungen;
               SourceExpr="Serviceleist. & Leihstellungen"."Artikelnr. 2" }

    { 41  ;2   ;DataItem;TOPAS Bemerkungen unten;
               DataItemTable=Table50023;
               DataItemTableView=SORTING(Nr.,Art,Artikelnr.,Zeilennr.)
                                 WHERE(Art=FILTER(Leihstellung),
                                       Andruck=FILTER(Text unten));
               DataItemLink=Nr.=FIELD(Lfd. Nr.) }

    { 42  ;3   ;Column  ;Bemerkung_TOPASBemerkungenunten;
               SourceExpr=Bemerkung }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140001;2;Field     ;
                  CaptionML=DEU=Alles drucken;
                  SourceExpr=alles_drucken }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Debitor@1140007 : Record 18;
      Artikel@1140008 : Record 27;
      ZugangsdatenAndruck@1140027 : Record 50024;
      KopfdatenAndruck@1140029 : Record 50024;
      LetzteServicePos@1140001 : Record 50024;
      Systempositionen@1140024 : Record 50024;
      Shipment@1140023 : Record 110;
      SalesHeader@1140018 : Record 36;
      ArchHeader@1140014 : Record 5107;
      Beleghistorie@1000000000 : Record 50008;
      Verk„ufer@1140015 : Record 13;
      Land_Region@1140025 : Record 9;
      Firmendaten@1000000003 : Record 79;
      FormatAddr@1140033 : Codeunit 365;
      TOPAS_Funktionen@1000000002 : Codeunit 50006;
      CompanyInfo@1000000001 : ARRAY [15] OF Text;
      kopf_text@1140000 : Text;
      SUP_Art_Beschr@1140009 : Text;
      AndruckFeld@1140028 : ARRAY [8] OF Text[50];
      Nummer@1140005 : Integer;
      status_text@1140006 : Text[100];
      ihre_ref@1140013 : Text[100];
      ansp_name@1140016 : Text[100];
      ansp_anrede@1140012 : Text[50];
      ansp_telefon@1140011 : Text[50];
      ansp_fax@1140010 : Text[50];
      ansp_email@1140017 : Text[80];
      sup_artikelnr@1140019 : Code[20];
      sup_artikelnr_lang@1140022 : Code[40];
      andruck_champs@1140026 : Boolean;
      auftragsnr@1140032 : Code[20];
      debitornr@1140031 : Code[20];
      datum@1140030 : Date;
      benutzer@1140020 : Text;
      pw@1140021 : Text;
      seriennr@1140002 : Code[60];
      board_ini_text@1140004 : Text;
      alles_drucken@1140034 : Boolean;
      ReportForNav@5000 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header1@5010(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        LetzteServicePos.RESET;
        LetzteServicePos.SETRANGE("Wartungsvertragsnr.","Wartungsvertragsnr.");
        LetzteServicePos.SETRANGE(Art,LetzteServicePos.Art::Service);
        IF LetzteServicePos.FINDFIRST THEN BEGIN
          REPEAT
            IF (STRPOS(LetzteServicePos."SUP Artikelnr.",'CHAMPS') <> 0)
            OR (STRPOS(LetzteServicePos."SUP Artikelnr.",'ACTS') <> 0) THEN BEGIN
              andruck_champs := TRUE;
              IF CurrReport.LANGUAGE = 1031 THEN
                kopf_text := 'Champs Servicevertrag'
              ELSE
                kopf_text := 'Champs Service Agreement';
            END ELSE BEGIN
              IF STRPOS(LetzteServicePos."SUP Artikelnr.",'ACHAT') <> 0 THEN BEGIN
                andruck_champs := TRUE;
                IF CurrReport.LANGUAGE = 1031 THEN
                  kopf_text := 'ACHAT Servicevertrag'
                ELSE
                  kopf_text := 'ACHAT Service Agreement';
              END;
            END;
          UNTIL LetzteServicePos.NEXT = 0;
        END;
        IF andruck_champs = FALSE THEN
          kopf_text := 'Software Upgrade Protection';
        KopfdatenAndruck.RESET;
        KopfdatenAndruck.SETRANGE(Art,KopfdatenAndruck.Art::Service);
        KopfdatenAndruck.SETRANGE("Wartungsvertragsnr.","Wartungsvertragsnr.");
        KopfdatenAndruck.SETRANGE(Inaktiv,FALSE);
        IF KopfdatenAndruck.FINDLAST THEN ;
        auftragsnr := KopfdatenAndruck."Auftragsnr.";
        debitornr := KopfdatenAndruck."Debitornr.";
        datum := KopfdatenAndruck.Belegdatum;
        ihre_ref := '';
        ansp_telefon := '';
        ansp_fax:= '';
        ansp_anrede := '';
        ansp_name := '';
        ansp_email := '';
        ArchHeader.RESET;
        ArchHeader.SETRANGE("No.",KopfdatenAndruck."Auftragsnr.");
        IF ArchHeader.FINDLAST THEN BEGIN
          IF ArchHeader."External Document No." <> '' THEN ihre_ref := ArchHeader."External Document No."+' ';
          IF ArchHeader."Your Reference"  <> '' THEN ihre_ref := ihre_ref + ArchHeader."Your Reference";
          Land_Region.GET(ArchHeader."Sell-to Country/Region Code");
          IF Verk„ufer.GET(ArchHeader."Betreuer Innendienst") THEN BEGIN
            IF  CurrReport.LANGUAGE = 1031 THEN BEGIN
              ansp_fax := Verk„ufer."Fax No.";
              ansp_anrede := Verk„ufer.Ansprech;
              ansp_telefon := Verk„ufer."Phone No.";
            END ELSE BEGIN
              ansp_fax := Verk„ufer.Fax_international;
              ansp_anrede := Verk„ufer.Ansprech_eng;
              ansp_telefon := Verk„ufer.Tel_international;
            END;
            ansp_name := Verk„ufer."First name" + ' ' + Verk„ufer.Name;
            ansp_email := Verk„ufer."E-Mail";
          END;
        END ELSE BEGIN
          SalesHeader.RESET;
          SalesHeader.SETRANGE("No.",KopfdatenAndruck."Auftragsnr.");
          IF SalesHeader.FINDLAST THEN BEGIN
            IF SalesHeader."External Document No." <> '' THEN ihre_ref := SalesHeader."External Document No."+' ';
            IF SalesHeader."Your Reference"  <> '' THEN ihre_ref := ihre_ref + SalesHeader."Your Reference";
            Land_Region.GET(SalesHeader."Sell-to Country/Region Code");
            IF Verk„ufer.GET(SalesHeader."Betreuer Innendienst") THEN BEGIN
              IF  CurrReport.LANGUAGE = 1031 THEN BEGIN
                ansp_fax := Verk„ufer."Fax No.";
                ansp_anrede := Verk„ufer.Ansprech;
                ansp_telefon := Verk„ufer."Phone No.";
              END ELSE BEGIN
                ansp_fax := Verk„ufer.Fax_international;
                ansp_anrede := Verk„ufer.Ansprech_eng;
                ansp_telefon := Verk„ufer.Tel_international;
              END;
              ansp_name := Verk„ufer."First name" + ' ' + Verk„ufer.Name;
              ansp_email := Verk„ufer."E-Mail";
            END;
          END ELSE BEGIN
            //Daten aus „lteren NAV Versionen
            Beleghistorie.RESET;
            Beleghistorie.SETRANGE("Auftragsnr.",KopfdatenAndruck."Auftragsnr.");
            IF Beleghistorie.FINDLAST THEN BEGIN
              //Noch berarbeiten, da es das Feld nicht in der Beleghistorie gibt
              //IF Beleghistorie."Externe Belegnr." <> '' THEN ihre_ref := SalesHeader."External Document No."+' ';
              IF Beleghistorie.Referenz  <> '' THEN ihre_ref := ihre_ref + Beleghistorie.Referenz;
              //Noch berarbeiten, da es das Feld nicht in der Beleghistorie gibt
              //Land_Region.GET(Beleghistorie."Sell-to Country/Region Code");
              Land_Region.GET('DE');
              IF Verk„ufer.GET(Beleghistorie."Betreuer Innendienst") THEN BEGIN
                IF  CurrReport.LANGUAGE = 1031 THEN BEGIN
                  ansp_fax := Verk„ufer."Fax No.";
                  ansp_anrede := Verk„ufer.Ansprech;
                  ansp_telefon := Verk„ufer."Phone No.";
                END ELSE BEGIN
                  ansp_fax := Verk„ufer.Fax_international;
                  ansp_anrede := Verk„ufer.Ansprech_eng;
                  ansp_telefon := Verk„ufer.Tel_international;
                END;
                ansp_name := Verk„ufer."First name" + ' ' + Verk„ufer.Name;
                ansp_email := Verk„ufer."E-Mail";
              END;
            END;
          END;
        END;
        FormatAddr.FormatAddr(AndruckFeld,KopfdatenAndruck.Debitorname,KopfdatenAndruck."Name 2",KopfdatenAndruck.Kontakt,
        KopfdatenAndruck.Adresse,KopfdatenAndruck."Adresse 2",KopfdatenAndruck.Ort,KopfdatenAndruck."PLZ-Code",'',Land_Region.Code);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header2@5011(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput(andruck_champs = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_Header3@5012(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
         ReportForNav.ShowOutput(andruck_champs = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_GroupHeader5@5013(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        Nummer += 1;
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServiceleist_Leihstellungen_GroupFooter6@5014(VAR "Serviceleist. & Leihstellungen"@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        ReportForNav.ShowOutput((STRPOS(sup_artikelnr_lang,'SW') <> 0) AND (STRPOS(sup_artikelnr_lang,'CHAMPS') <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Body8@5015(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(sup_artikelnr <> Servicepositionen."SUP Artikelnr.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesShipmentLine_Footer9@5016(VAR "Sales Shipment Line"@1000000000 : Record 111);
    BEGIN
      WITH "Sales Shipment Line" DO BEGIN
        ReportForNav.ShowOutput(sup_artikelnr <> Servicepositionen."SUP Artikelnr.");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServicepositionen_Body10@5017(VAR Servicepositionen@1000000000 : Record 50024);
    BEGIN
      WITH Servicepositionen DO BEGIN
        seriennr := "Seriennr.";
        IF Artikel.GET("Artikelnr.") THEN BEGIN
          IF (Artikel."Item Tracking Code" = 'PRODUCTKEY') OR ((Artikel."Item Tracking Code" = 'SN-ODER-PK') AND (STRPOS("Seriennr.",'NODATA') <> 0)) THEN
            seriennr := "Product Key";
        END;
        IF STRPOS(seriennr,'S/N: ') = 1 THEN
          seriennr := COPYSTR(seriennr,STRLEN('S/N: ')+1);
        IF STRPOS(seriennr,'S/N:') = 1 THEN
          seriennr := COPYSTR(seriennr,STRLEN('S/N:')+1);
        board_ini_text := '';
        IF Basisger„t = TRUE THEN BEGIN
          Systempositionen.SETRANGE(Art,Systempositionen.Art :: System);
          Systempositionen.SETRANGE("Wartungsvertragsnr.","Wartungsvertragsnr.");
          Systempositionen.SETRANGE("Artikelnr.","Artikelnr.");
          Systempositionen.SETRANGE("Seriennr.","Seriennr.");
          IF Systempositionen.FINDFIRST THEN
            board_ini_text := 'Board ini: ' + Systempositionen."Board ini";
        END
      END;
    END;

    LOCAL PROCEDURE OnPreSectionServicepositionen_Body12@1000000003(VAR Servicepositionen@1000000000 : Record 50024);
    BEGIN
      WITH "Serviceleist. & Leihstellungen" DO BEGIN
        IF Artikel.GET("Artikelnr.") THEN
          IF Artikel."Item Tracking Code" = 'SERIENNR+P' THEN
            ReportForNav.ShowOutput("Product Key" <> '')
          ELSE
            ReportForNav.ShowOutput(FALSE);
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': CASE SectionId OF
          'Header1': OnPreSectionServiceleist_Leihstellungen_Header1("Serviceleist. & Leihstellungen");
          'Header2': OnPreSectionServiceleist_Leihstellungen_Header2("Serviceleist. & Leihstellungen");
          'Header3': OnPreSectionServiceleist_Leihstellungen_Header3("Serviceleist. & Leihstellungen");
          'GroupHeader5': OnPreSectionServiceleist_Leihstellungen_GroupHeader5("Serviceleist. & Leihstellungen");
          'GroupFooter6': OnPreSectionServiceleist_Leihstellungen_GroupFooter6("Serviceleist. & Leihstellungen");
        END;
        'SalesShipmentLine': CASE SectionId OF
          'Body8': OnPreSectionSalesShipmentLine_Body8("Sales Shipment Line");
          'Footer9': OnPreSectionSalesShipmentLine_Footer9("Sales Shipment Line");
        END;
        'Servicepositionen': CASE SectionId OF
          'Body10': OnPreSectionServicepositionen_Body10(Servicepositionen);
          'Body12': OnPreSectionServicepositionen_Body12(Servicepositionen);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5014(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5015();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      CASE DataItemId OF
        'Serviceleist_Leihstellungen': WITH "Serviceleist. & Leihstellungen" DO CASE Operation OF
        END;
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>raIAAO1dW3PjNrJ+P1XnP6B0qpJMrYbDO6lJvFu+Zrzx2C7LM5Pdky0XLUEWY4rUkpQ9nt+zv2Gf9i1/7AAgeG9IAO3J2YdN1cQiAeLyAehGd6MbP/zp8ypCDzjNwiTeGxmaPkI4niXzML7bG23yxWt/9Kc//vd//fBzngZXeJ2keXYWPCWbfIrTMIjCLzhF9c+PVUG2ZmoOLa31aoTOgxXeG/GSTpL0PHgYocMkztMkun5ak7Qj/HD8eZ3iLNMalWofThuP5hgJsj3QasZlrWgPlS0Zo8NNlG9STN7FeEM+icbocnMbhbOf8NN1co9p7rk3C3zsm7q3sLGtk/Yfhdk6Cp6Kdl9fXO5PaX8fwhkmqJFS7tDl0ckItXpU9dnSCKKaYbukoIvbX/EsP0/2Ro5ueP4InYQ4mn/Ct7y4D2m0N1rm+frtmzfn+x+nx1cfX5u64WqP5r2WJ+sg0+b4rafb/pujpzhYhbOMZJvoby6Ogjx4c5is1kH89N23rI3fvhqh90F6F8YZQd4nvTfIP5v9G6HL4A6/w+HdMt8bmROPv/kUzvMleWHo7MUapz+F8XxvtG+TtpIRIr/oOI+Rt84JLuuQ5HXssusf4pDkuMZxvswuFvvvwygKVzjH6YhMH4R+OAjiecZ+kofTHK8MPhc+BWm+ie8yDmdnNhSA0h7Sb2ghpGr+dB3cRnRQ6B9H1w2jk/QxxI+k/HfHV8ffTfMg32R7J6dn18dX330T5d9/c5d/v394Pf0mWK2/L18cLslTRnqf5jFOX72ivfv7SRiRfrDhynrtzeJUG6FTgpMx4t3r9LbXYz7gEQ6z/OYMh8ssx1FEysSxQu9JGwnYtOIegj+myWZ9neRBVDaajakAN9MGcZteXF2fnv/43Y/pZr0OcUpqGB8EWZjd4fS3f+Sv0MXVEYHyCGczHFN68QoVUO+neYkz7+mrMYfhNA7u8/ChTD5PqpTph0tEPgzvcUQA7Y7T4bv995fT11fHN6fn0+v96+P/0Y3WuNUp74/Pr29Ojo/p2JW9Ogvje3DgSD3HZ0ffASmvijE1R41BBMa1MbZXeLE3ssEBfIeDOU6L4SumQPHGaC6jd0F2EV+meEqoBCMeebrBZCGmYZxfxMekbU90lZbvf8J4/SnMl+f4M1l3iyDKyszvg88X8Qxf4rTIz9MOg3i6TBkS/A2vqdOigjCckDlDKMGo01fSW96/LgpdJBwQiWvS2oPkcwlD66VhEILrkO+mhJXQ+nVLH09MzR2hs2QW0KaeREmQMxI1Rr7taV4TwBaNMk1KpGjJ+1F4F68wTXsfzucRPiS/CVlC75L0C0vcG5WvrhmY98l6cZOTn8UMmuKcLaOiyXUiAACBYJo/RZiMQ5KG+VMBBenAhwwXzePQv4HQe8PgE+FqFoV5MrjyR7PC0jb1saX3gCSIE3wJ6SRE3dE135wYriXE1NU8Z52PUUa7uHeQRPMxmi2DlAC0p5fgBXG2vgniFM8xBF8zWRpAXwVAUwSgVRQ2GTYxXSUw/QLMJpQNeAj3FoNTJIL9o72wi16QpTmsG1bVDcsWdMNn3bBsssYM1g/dFvWEMC68SGJhZ6p0YX8c3h8D7M9ZcIujdm/Yq6IvdtUXf9eIwD05DNY0+/uzvdHx+Ye9y2US47dlB69xpKG3W5ru8qabA4fCURoKG1qfjaFYBJ+Fw8DShP3weD+sAUPgKgwB2IPOEJwEn1E1AvxB2HCfNxzmursHwFNY0r63dUnjVRBGQvx5qrAjE96RgUxTb4yCo4/tfkfoxt+YaL7uW46Qvk9KlknexPN0M7s/Id0woF610qXpuKHECSfCHYbOi1PhhVYTIs0VgeQMA8ncAZKpAJIStzN0IUp8I2YMZHi+0ULMFiE2KRCj1ShBZu2AzJKHzNSVIBNusQy+xzJhZrQbMlNqkjlWAZkiYPYOwGwFwEwlwIRbKoPvqUyYdewGrLEq7YlwjjneRPOkAOtt9s/wIm9t9YsXPXCdHeA6CuDaSuBaQnD5Vs8cyBV8uwWuNZlMXEuAsGvqGh0OustVmpTuDtxcBdzU5CRbiBvfUppS7AHAzZHgpq6ra476GvZ2wOUpwKXGJxwhXHwbaw7lEzKbD3fiapY6XP4OuHx5uCw1HuEK4eK7ZWuAwOLYChtOy/A007csxxWC5rWl8d5m+ghv8my2xOggiO/R/o9j9C6I4+ShVnVsySGPrBoz8YTI8u28NUAOcXwVZG2GrL0N1x6Wxx+uXqNNPEcfpkevfyK5k0pMgZLk0VPjFr4QPS5DWDC32C7FKaHnFfPSFO+RIfymn05Prl8fnB5qb9HR8Yfro2Pz3c8//1xiKEqWx1GNewiFC5MLFxbMPbbjOFHA0dZl1ncPx9OD/XMKkWsi09E9pOueTv5n6chxCefTK0Xc7ozy2Kop4IQiiclFEgtmNVuxpVaqndhaGhFHfJ+A6zmaS8EdTDsPk9UKp19uRZRTmC6Nqq3EkUyxYphLLbYER2IPMprMCklHL5BUJpZjRg4ZXfzz5V8AkglnkIdPie2YQhnG5DKMLcF22IOlBJ/F4FPjNS1ieHU8PTo+OSFrGKSVjWR56JR4jimUUEwuodgDeI4vw3NqGF2J9SyklYTmEXx8QvMIddc9j5JAdwLQSnFGeWyV+JAplGJMLsXYMB+6DGf0MENvZ16/ZyhTnW4H1onjaNYYmT7500STD4bp62PDrZGZXpwld8nNSZgSsXoe5NRGTbKy8yF/TZLV6Sq4A40Z4JdCDajJpRDbV9Dp1VNoQqgUkW/9sTWhfyc+ha3TcSJ/EBmXsl6DLEo6segpjLY2V01/wM9cfEzSLK9s820Uulnk59GEzaNOo3ZPKKHgYnLBxZGyHPFHp4uwJ4kw4b8e+Wl6L4Lw/tVH9AdUPqxyegYhnC1BA+2uT6RHwDGGjYBQwDG5gONIGYz4Y2NlWrbmTRzf8iAhmwBu6PbLQ38Cm5UaqfKAWsMAFco8Jpd5HCkDEH90lQG1CkDtnuVtEKDMyLgF0iJdHlRnGKhCAcjiAhCVS6RBrS1phmlYjBSXtNifUAVBXyU0YagazouAShtDlvu3Y/RtY9XP5/R8INoC9vbv5AfBGzQIllBSsspTNDA73LqzMmuizeewS6YxGQyPDoYLDAYj2q5h+75vu8WEd6m2WE0yZRMXfU+k9z1mOi+HqHivAOZEZQdlCeUii8tFLszwtmNodzA0jW2MTxeR3Z2gEQKqFZixXw3Lt6YAmWsoQSY+IsNlIVeFQ00aewQyycwJtJnXqeJI12zdN1376y35yyTLF8Fsqbrkq+/kIR/GzCyhMGVxYcpVYWZGrRUxTZOuY8t1QWHK1Q2653UMauyhfM9Q0CsPHqQrfHeebBmMIl0edKc/z4cMglDqsrjU5aowP8OAB4GRVZMak7cNhs8GYyvVeKHB+HR8fLxrQOo88oPivcygCC1UFpcNXRXZ0DCfMyhOMSi2/zsMy8f9612jUmWRHxSAiQ4ZFKE4aXFx0hvAXe1acDf1nbof9RXS4LGUs9I5/Zrgp70+T7W36HvKdxvvEvKuHJLua2m8PTUOLJQRLS4jejAH7msj7Q6U4vndhHTA/O6A+mGaa69Pj5qYklmKKHYtRNsv5fG0lPAUiogWFxE9mKv28XSUpqYyJ+2gOM3xBqcFhqhA8Xr/Z8TAQhWGzVfyCAK8cguCQnnQ5vKgB7NE8UKv94UuVbc5ru44Y9vULDJDnT6snmFrjm47JhENfU8zvPZZy607aQYlDnPMELxkGkkufNDf8pgBrEyMmS0U32wuvnlSHKt9psJsmGfI7GKWVnMbbj5b86YtixvIqK6o00eLU/E3BYyFjxdXMRNIYW4F5JKH/mUYli0UB20uDvoww5JUqFt9hbph6U5BdWGlBh9Mx3TGBpUOuRHnKSONwn0VeR9WYVaxkwCX4/yBBxmteg6SbRGbfMB+yaNir2F4mpiL+MMO5pH+bVYQFEWCvOOIko3QFspmNpfN/AFHUyy9oRtzNXMrmrqzE80O2TuiiDCyR35VZI/9lodJyR5oC6Unm0tP/sATi+akoZsVTTtqLfxa0w7fhnmSxik49apEeVyVbIG2UACyuQDkDziTYvrSmKpPvtNlitFPm3iOY7qHYdPwL8kmRfuzWbKJc7prKcHtvZeHUen4iS0UWWwusvgDTzqatZabeiDCUBoThem5NzpPb7a6A/fn4Y4vpFGdKB0/sYUSi80llsmAA5GmK42o+uQ8C/ECp/R0YxjHfHIe4SiknrRkAjaIZeulPIBqzEUoothcRJkMPERvtkUWEMSJCq/eGwWbBXeEBl2a6lR5sNRYjFAacbg0MhnKYuzdYHmOElh97/Gbnkd+H0SJr+TBVeIzjlBscbjYMhnCZyzZWai+kverCVes4ot0jtMmb6lfyGOmxFQcoVjhcLFiMuBMY0PU2zEZ1TH7WMcyKDAj3PeKEkQczyrK134p76KmK/EOR2hvcqyyQKON0XQZrHGBEcxWWIZ6Y20Q7mFARnyLoUdTauwOEjpdMgJfFIk6TYsv20ZHiT6XQu4sD+K7aHuXhaKEUzlwD3G3bchlos0co12Wp8kfOaTThc+CL2/ZZKnmxNtaAVC9UZgmSkTfEcoVTukkrg+k+m5toXF80T7DdDSHiPG6zwGkDlMvLWGEZMN8k+IFxBGqNAWA1Qi/UMBwSld2fcip91rAtRx3y6TUdaUpyYSL/fiOVBSzWXm4yfJkhRnJqkh/+6UCdGr0vy9U/PBGEAkFjuPRjOFh6DCzEMWJaTnlneEHHNFoQ/8eEWPMZsQY9xkBYwxBSIvtliSvSRD5ydX+3AMm3vtwliZZssjRNIgzFsNswd3Q3m+iPDwL4wq5nqZ5maI7TP6fY7KOyeJnh9jf4ZRQyPEv6JfbMCcphCbEeElTpyFGdINC9jGlpEa+yEnKnKQQ8eQLjmLydJlkIa2I/KSTP0W/NCU9Jt+hLHmkpZF/tMk4jjfUDyFm5c+DL5s7vPztn2lIs/7IAjXhgv9fJ+hxmaxQmKNV8IRmCRnwlLX2iQrmWVFRhoKUtpUJRHiOFkmK8iV5s0kZpChZsOfgLsWYUj3tFzZkwSxHa9KeZI7I7EXBeh2FMxpLihZMVjgizbwlPJcVH5HOkLLJGCaP1Tr+921fnyrsWPrd7Q6PPsOVuUGEs+kyXNPW0Uk2KOTXTp1BN86XIYiOVkb5OkpmG9oiuoke02bRH2VEL9YyHpLrW/RtP7RW82seU+s81V6N0X6eB0QAn6M8QWWpPMMBaf3dFxxGmErnr1ARcMsC3P7BqFt98gFbTA+S+VOTotLn1k56GxUdRhh5FRVZZBwR5kxbaGO/gwP1A96ksU+2hVqWLpksdSPZLA0Z+bsBpm5/F7PjA4jFbllQPJlR5MMk2qziEgz7OUG0DEGklZMkydsMuHjT2ge2xrpK78+JbTNIMOkavL2cPDS2BUSB4DXxQwHSlsUyJdR0hmnozNZY8dUHxphQHlI6nFAzuKkZIo92eXqHRq88IKQ7vWfULLkdGBRRikJ+DNJmYM9GvaioWBQy0dpKTAntG++n+bgOaDj+a03oelESm62rAiJyL/cyD12NrE194ntexTE8W8w1dF4FL7SAoBUFLe2NGVe7QSPjtKNWrqs9yu8wLECdw4JYlsiwYSkQaoNYZhAgCYSxkORK8E4f4kqG/vXZEq2jxZdo8CjCIJ7PncyBAen8hvToiZgTjb01cXzDArfyfZVstfBMVeuK5JcCRASypil5OKxeiRADqyAvmZg5MPCcYzZO5nia4zdPmNDZ0MXf8U3NNlxXCn01hUhWCDGgnaFKU0Rb8uhYjTakn6zQLlWUptS5bCA4W+MIiE1DHIFaXnaGh3rOSc3v95jMQtWpvfsjRZwlD5jVOENK0QrnUi9qSh297uNs1GYwas4W6fgczfdsenZPCujbJEjnN2EcCuPBdnIoQih53qyGENKRDtk/02MBz9g/C4IFgWzNfHm2RshIQE9lEfh9d+Lj+WI2WwS3rh/4wcRy8MyezX331p8s5pO5Z2Cmwu/xQvNr8UJLQpNV6LBqyYzzvudS4K5PVprMN7Mc/YSf3m4lz/y0ZCt7l2SrzW0LYHpKB/q2T8felLRUfJYasQ3NwktxG/qe89X4H0ecAA4Rl0aqIvgADxwIPswc1SmOtVVi79fyMiJul4Cz3TwYha2bUxyqAB3hWbgKossomOFsb6S/pXvYRqXf/H2T5N83Oa2GWLh61Ga4RT6NMWbeNDDimQS7F7bWarWs3m6x2iZbt13bglA/o7vFn1o2RmbxpmiTrT9jW66si+haxHhcZ1gXwVT2/y/KCF7zv5c2gjVKQR1hA5GC5YRoG+an4G6jdfj9udKy8fJaXEGUpt1Cm9vQ4vqOJjC09vW4oq1tNb9uBPO8vwp3faLGo2QDONWrFd4HqLMiGslBZfP7MqyogosvBzBm9M5RUaVwXcN1K+K7IHCTyA7dCoDBddWush362SZnq6ket59jcrZVfZqoOaVjcjbhiKe/s8mZmpjvf/tnTG3HZKqQibfIHwn/ef1hTZ1FMrT47V8pKo5UbOZhcpjMyct3ZMtDc6Hf/nVL7cekkE/4NgtJJY+Pj8WtU68z5n5Cb59CS3oNUI7TiAxDrBXF/XVzR/qxyEgBeLbMwztq3Wa1kTzo/dM1LYTmCsj7tk28sJNTy/Wv+JGwJGa1Lo3g/zFb/85m6+4J7/YVC/DBIBGlsAFK4X1FkmA3T6FAofDkScKAiCtezZs9QhEcwGnUoB4W5lbG3HYU3UUR2gsrYx5hbMWUCfubfEnY7ZegMO/R86Bc/iTpPVGVvGtfgiQopn9pkvyRK1spsMtOHZQgkNl2Zyy7rXGBAmWwy6WMXcdtd43PZZBlj0mac49U9jCXGYaWdqD6TkoXA6LuKHmm77o9yRAEL9se67FWt9CbbiDU2fp4PuoHZJ+UfyEUmLSDIU96zh5kkP/zJsvDxVMJfvWpAtZqXuti8ZoXJ+G03qNFjej1BGqGaPcYPr0P0pdXJFJgb8OM4ZknJTy5gnOv4Sg5o4sPApfFDdm31Uvfd2BgPFcdmIek8L5cpMmqhIb9VgBHyetceIi3PMM7JGaY0zgjNAE5mE8XqPWCDOws2Cy+4LAgkFdkWxkOWqXllwpwK7EhoTdhKUMNCS/m6A39s2aAO4YXhptsq4sdNW37AJzZZ/Igq0UkEzoXlttPQUCy7WeDG3PaF+zKXhjkWsXG2X6av2ZuSspwV58qQK7EfITuiOVdZDQOGeySI7j6ouOS41v6mJ0KASZ2+6iLoj8OuzdP0R+n70+4QxjqwtOGBmY/7NrdvkTUeN2OC9EUY9qZXvIwYfMkKh2P4aKRO/BCHa92QXdFXr42dfL1pBSXRTiMyzT5Fd/nYbxIMtWTEIolKCxBtTt5dkk47kBHdV3CF5OQ1J0S6RCD5voRQpy8lUfRU7sYYZfE4g3UuOv1MSlHiKKEXF+dJeGyCWh8LNMUUFJyP98pa3hDT5dbDYmaRpaHPX8HT7adtzXv30ZkJ8kCw3S8ZZTP/g0rSWHI1Jzgd0lB3kBvSM+QGTLP/mpDdkYqj78woFXHSPZThUFR86HcJX15A5mkbrR2q2LjnhyTrF3mlVeB3JcKACsxxZ3yljeUKdaKEVd4DtPYPucH3jN5znz0wGAuRYo8mL4Sb9wpVw0NEKbXAqwrChDmSXPGbLO+CUrR6SYKYjBiBpBLATclbtkXjnaIC135on1PsSBsGNvz912OGq/d7fJClekl5YVJS15wNdvxLRfyf5AVG/whWsxmADoykQy9aMiWg9Nm8QsIEwvbXaX0ydy4ici+gFlHg/t8Q0hgRn13YRMrzUXoYxAz/96GrZWd5bunfsHpMohybgLtG15/gSyvGjpgttJbHMyW/NsxmgdZxr7dJ2LMQ0iNs3fMKFuZhdBtmKEvG2TaaJqzOF3kow31F74nLdTQKXkmM4U0mCad/PaPKCJ/H4tH2r4snC25nZbQfrxI4jAjbwJqf840dJyRzkalJ3OjtxU4BcNGBzjLw9WK8Y5CObI/m9FLFlr2JURau8kKd9EgipJHFBS5yPM8eYzJmM+ZobRRU8ZrQhs+DEEOG6+TOHpCj2G+RHfhA/WkXuMZtaFuuJ4/YzbWNTe5ZNrWOsjvWVIYcymsKQrQQxCF8zprRDhnnJGRu4xwkGEUJxTDJWkds/SSpfdQ2X6ZrTjgsdGoHTkP7mlltN9k6JYkOWODtUnvqJvtjBSYoXVR8IwgRTpRmaT/A+yLA6tsS+9dy96+kl0QIFHkfuoJ2UCVrsYBhHZ4eqL1ND5I8jxZdZ1Sm65jE+BCe3mG4Io0iwLje1ez6IhD31hizWKhNCzKpRu1wnu1WDP18zRPcT5blp3fp5pFFixvt2KShmdsKCbFDs+S6h9fKd691QZIOhBGvbUdo9kySMmma08fKtnxePXvkhVeC+6F62ZR2MO9TIhg6Kj59sXcHinoNKDgJCBwCrARwJefhObhfRGN79s8CW09KxYwn0nNqjnyp/Ei+V/jb0Ulhs7/A2trXJkiqMES1mD+rXvJCntt/428IG+7751ug4wtDeI3NAnaZAvb5HYrcXZexAVX4Qir8LpVuFuqYJergRW4wgr8bgWgN0PvbgmwFk9Yy6RbC+iY0L7lBazCF09BvVsH6I7Qu2QRrGYirqY71Q3Qw6C+NlBQA5HmhFWY3Sq2Tt7m/YVwVYa4KqtbFXiMuH/jC1zRFgJhdyvaRiHqe5fgesRkwugt/G0dqhkLXE976Z9cXL3fv/6uGZZeK+LSv+rUCca9gILew9W2yQGPXs4OeYuDmAuKai/8RkRqWhxIrhp54CI9wFvnPNWavAYkUrtiE8O1tRd8M5IsrQgkVs1McKHt5d0JlMp70o+o2uoiSMBkYrfCnFXfwdVPpxc9jg7SN6l7csvr05t1cp+cE1JSgymAKt06J+D2W14iLiq74mggUWvk9ERlW8KyK4YMLvpGTldUti0suyIsIOFq5HREZTvCsiviCC7wRk7A6bG871hUdkXhwdXeyAl4sZQ3/YrKrhgVuOAbOU1R2b6w7IrPgmu8kdMQld1e5UGcrW/wKggjXi64gpu54B2q3i91QfddrExwSdZ54BKNfolcOVaUaoKrsJ0PLtnsl1ycXmXFgguwkQku0+qXGcQpnpelgkuvlQ0ut73y6simrFBwzdV54BLb6+0+WS8aXrsmuNQameAyXYD5FUIUah4AaZJpE1x4qsdO4Oa0lyY9LMFqBJcjTYVLaS/C+mABKwv2bq7ywCVOAJga9nDUMYi34ALX5VCzPCzRtddwwwjMmwAuY2kzM1ynAUFSRyJvieow25W0wcLVt0lBaUJktYF0oMwBl9ZxAwcMbqxkkBZAudu1QC6IXSVXW23STK1TfnjzM0Gs2HdnZ8FTssmnzNGJjGT6x/8D</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

