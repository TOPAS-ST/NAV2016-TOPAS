OBJECT Report 50063 TOPAS Support Kontingente
{
  OBJECT-PROPERTIES
  {
    Date=02.02.18;
    Time=11:45:31;
    Modified=Yes;
    Version List=fertig,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50012;
               OnPreDataItem=BEGIN
                               CompanyInformation.GET;
                               CompanyInformation.CALCFIELDS("Systeme Logo");
                             END;

               OnAfterGetRecord=BEGIN
                                  header_text := 'Support Kontingente';
                                END;

               ReqFilterFields=Nr. }

    { 1000000000;1;Column;SystemLogo_Firmendaten;
               SourceExpr=CompanyInformation."Systeme Logo" }

    { 1000000001;1;Column;CompanyHomepage    ;
               SourceExpr=CompanyInformation."Home Page" }

    { 2   ;1   ;Column  ;header_text         ;
               SourceExpr=header_text }

    { 3   ;1   ;Column  ;Kunde_Support       ;
               SourceExpr=Kunde }

    { 4   ;1   ;Column  ;OffenesKontingent_Support;
               SourceExpr="Offenes Kontingent";
               AutoCalcField=Yes }

    { 5   ;1   ;DataItem;                    ;
               DataItemTable=Table50013;
               DataItemTableView=WHERE(Art=FILTER(Support));
               DataItemLink=Gruppen-Nr.=FIELD(Nr.) }

    { 6   ;2   ;Column  ;Endkunde_AP_SupportKontingente;
               SourceExpr="Endkunde/AP" }

    { 7   ;2   ;Column  ;Zeitraum_SupportKontingente;
               SourceExpr=Zeitraum }

    { 8   ;2   ;Column  ;Durchgefuhrtvon_SupportKontingente;
               SourceExpr="Durchgef¬Åhrt von" }

    { 9   ;2   ;Column  ;Aktion_SupportKontingente;
               SourceExpr=Aktion }

    { 10  ;2   ;Column  ;Menge_SupportKontingente;
               SourceExpr=Menge }

    { 11  ;2   ;Column  ;Auftragvon_SupportKontingente;
               SourceExpr="Auftrag von" }

    { 12  ;2   ;Column  ;Datum_SupportKontingente;
               SourceExpr=Datum }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInformation@1000000000 : Record 79;
      header_text@1140000 : Text[50];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>6d1cce7d-46ba-46d9-ae0f-012dd4a16c13</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>e0676873-a0a6-4f01-94d5-c0a79f3c44e6</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="SystemLogo_Firmendaten">
          <DataField>SystemLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="header_text">
          <DataField>header_text</DataField>
        </Field>
        <Field Name="Kunde_Support">
          <DataField>Kunde_Support</DataField>
        </Field>
        <Field Name="OffenesKontingent_Support">
          <DataField>OffenesKontingent_Support</DataField>
        </Field>
        <Field Name="OffenesKontingent_SupportFormat">
          <DataField>OffenesKontingent_SupportFormat</DataField>
        </Field>
        <Field Name="Endkunde_AP_SupportKontingente">
          <DataField>Endkunde_AP_SupportKontingente</DataField>
        </Field>
        <Field Name="Zeitraum_SupportKontingente">
          <DataField>Zeitraum_SupportKontingente</DataField>
        </Field>
        <Field Name="Durchgefuhrtvon_SupportKontingente">
          <DataField>Durchgefuhrtvon_SupportKontingente</DataField>
        </Field>
        <Field Name="Aktion_SupportKontingente">
          <DataField>Aktion_SupportKontingente</DataField>
        </Field>
        <Field Name="Menge_SupportKontingente">
          <DataField>Menge_SupportKontingente</DataField>
        </Field>
        <Field Name="Menge_SupportKontingenteFormat">
          <DataField>Menge_SupportKontingenteFormat</DataField>
        </Field>
        <Field Name="Auftragvon_SupportKontingente">
          <DataField>Auftragvon_SupportKontingente</DataField>
        </Field>
        <Field Name="Datum_SupportKontingente">
          <DataField>Datum_SupportKontingente</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

