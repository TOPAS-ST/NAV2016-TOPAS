OBJECT Report 50063 TOPAS Support Kontingente
{
  OBJECT-PROPERTIES
  {
    Date=12.10.17;
    Time=11:19:17;
    Modified=Yes;
    Version List=fertig,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50012;
               OnPreDataItem=BEGIN
                               CompanyInformation.GET;
                               CompanyInformation.CALCFIELDS("Systeme Logo");
                             END;

               OnAfterGetRecord=BEGIN
                                  header_text := 'Support Kontingente';
                                END;

               ReqFilterFields=Nr. }

    { 1000000000;1;Column;SystemLogo_Firmendaten;
               SourceExpr=CompanyInformation."Systeme Logo" }

    { 2   ;1   ;Column  ;header_text         ;
               SourceExpr=header_text }

    { 3   ;1   ;Column  ;Kunde_Support       ;
               SourceExpr=Kunde }

    { 4   ;1   ;Column  ;OffenesKontingent_Support;
               SourceExpr="Offenes Kontingent";
               AutoCalcField=Yes }

    { 5   ;1   ;DataItem;                    ;
               DataItemTable=Table50013;
               DataItemTableView=WHERE(Art=FILTER(Support));
               DataItemLink=Gruppen-Nr.=FIELD(Nr.) }

    { 6   ;2   ;Column  ;Endkunde_AP_SupportKontingente;
               SourceExpr="Endkunde/AP" }

    { 7   ;2   ;Column  ;Zeitraum_SupportKontingente;
               SourceExpr=Zeitraum }

    { 8   ;2   ;Column  ;Durchgefuhrtvon_SupportKontingente;
               SourceExpr="Durchgef¬Åhrt von" }

    { 9   ;2   ;Column  ;Aktion_SupportKontingente;
               SourceExpr=Aktion }

    { 10  ;2   ;Column  ;Menge_SupportKontingente;
               SourceExpr=Menge }

    { 11  ;2   ;Column  ;Auftragvon_SupportKontingente;
               SourceExpr="Auftrag von" }

    { 12  ;2   ;Column  ;Datum_SupportKontingente;
               SourceExpr=Datum }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      CompanyInformation@1000000000 : Record 79;
      header_text@1140000 : Text[50];
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>6d1cce7d-46ba-46d9-ae0f-012dd4a16c13</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>e0676873-a0a6-4f01-94d5-c0a79f3c44e6</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="SystemLogo_Firmendaten">
          <DataField>SystemLogo_Firmendaten</DataField>
        </Field>
        <Field Name="header_text">
          <DataField>header_text</DataField>
        </Field>
        <Field Name="Kunde_Support">
          <DataField>Kunde_Support</DataField>
        </Field>
        <Field Name="OffenesKontingent_Support">
          <DataField>OffenesKontingent_Support</DataField>
        </Field>
        <Field Name="OffenesKontingent_SupportFormat">
          <DataField>OffenesKontingent_SupportFormat</DataField>
        </Field>
        <Field Name="Endkunde_AP_SupportKontingente">
          <DataField>Endkunde_AP_SupportKontingente</DataField>
        </Field>
        <Field Name="Zeitraum_SupportKontingente">
          <DataField>Zeitraum_SupportKontingente</DataField>
        </Field>
        <Field Name="Durchgefuhrtvon_SupportKontingente">
          <DataField>Durchgefuhrtvon_SupportKontingente</DataField>
        </Field>
        <Field Name="Aktion_SupportKontingente">
          <DataField>Aktion_SupportKontingente</DataField>
        </Field>
        <Field Name="Menge_SupportKontingente">
          <DataField>Menge_SupportKontingente</DataField>
        </Field>
        <Field Name="Menge_SupportKontingenteFormat">
          <DataField>Menge_SupportKontingenteFormat</DataField>
        </Field>
        <Field Name="Auftragvon_SupportKontingente">
          <DataField>Auftragvon_SupportKontingente</DataField>
        </Field>
        <Field Name="Datum_SupportKontingente">
          <DataField>Datum_SupportKontingente</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

