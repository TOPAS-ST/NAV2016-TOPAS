OBJECT Report 50018 RMA-ProForma
{
  OBJECT-PROPERTIES
  {
    Date=07.03.22;
    Time=10:58:50;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   selected := STRMENU(Text000,1);
                   CASE selected OF
                     0: opt_invoice := opt_invoice::Hersteller;
                     1: opt_invoice := opt_invoice::Hersteller;
                     2: opt_invoice := opt_invoice::Kunde;
                   END
                   {;ReportForNav};ReportsForNavInit();
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS("ISO Logo",Picture);
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50020;
               OnAfterGetRecord=BEGIN
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);

                                  Anschrift.RESET;
                                    Anschrift.SETRANGE("RMA-Nr.","RMA-Nr.");
                                    IF opt_invoice = opt_invoice::Kunde THEN
                                      Anschrift.SETRANGE(Art,Anschrift.Art::Kunde)
                                    ELSE
                                      Anschrift.SETRANGE(Art,Anschrift.Art::Hersteller);
                                    Anschrift.SETRANGE(Fhrungsrolle,TRUE);
                                    IF Anschrift.FINDFIRST THEN BEGIN
                                      Kontakt.GET(Anschrift."Kontakt Mandantennr.");
                                      CurrReport.LANGUAGE := Language.GetLanguageID(Kontakt."Language Code");
                                      Ansprechpartner.RESET;
                                      Ansprechpartner.SETRANGE("RMA-Nr.","RMA-Nr.");
                                      Ansprechpartner.SETRANGE(Art,Ansprechpartner.Art::"Ansprechpartner Kunde");
                                      Ansprechpartner.SETRANGE("Kontakt Mandantennr.",Anschrift."Kontakt Mandantennr.");
                                      IF Ansprechpartner.FINDFIRST THEN BEGIN
                                        Ansprechpartner.CALCFIELDS("Telefonnr.");
                                        kontaktname := Ansprechpartner.Name + ' (' + Ansprechpartner."Telefonnr." + ')';
                                      END ELSE
                                        kontaktname := '';
                                      FormatAddr.FormatAddr(Andruck,Anschrift.Name,Anschrift."Name 2",kontaktname,
                                      Anschrift.Adresse,Anschrift."Adresse 2",Anschrift.Ort,Anschrift."PLZ-Code",'',Anschrift."L„nder-/Regionscode");
                                    END ELSE
                                      ERROR(Text001);
                                END;

               ReqFilterFields=RMA-Nr. }

    { 1000000000;1;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 10  ;1   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000003;1;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;1;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;1;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;1;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;1;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;1;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;1;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;1;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;1;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;1;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;1;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;1;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 2   ;1   ;Column  ;Andruck7            ;
               SourceExpr=Andruck[7] }

    { 3   ;1   ;Column  ;Andruck8            ;
               SourceExpr=Andruck[8] }

    { 4   ;1   ;Column  ;Andruck1            ;
               SourceExpr=Andruck[1] }

    { 5   ;1   ;Column  ;Andruck2            ;
               SourceExpr=Andruck[2] }

    { 6   ;1   ;Column  ;Andruck3            ;
               SourceExpr=Andruck[3] }

    { 7   ;1   ;Column  ;Andruck4            ;
               SourceExpr=Andruck[4] }

    { 8   ;1   ;Column  ;Andruck5            ;
               SourceExpr=Andruck[5] }

    { 9   ;1   ;Column  ;Andruck6            ;
               SourceExpr=Andruck[6] }

    { 1000000004;1;Column;PageNo             ;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 12  ;1   ;Column  ;WORKDATE            ;
               SourceExpr=WORKDATE }

    { 13  ;1   ;Column  ;RMA_Nr_RMA_Kopf     ;
               SourceExpr="RMA-Nr." }

    { 14  ;1   ;DataItem;                    ;
               DataItemTable=Table50023;
               DataItemTableView=WHERE(Art=FILTER(an Hersteller),
                                       Andruck=FILTER(Text oben));
               DataItemLink=Nr.=FIELD(RMA-Nr.) }

    { 15  ;2   ;Column  ;Bemerkung_TOPASBemerkungen;
               SourceExpr=Bemerkung }

    { 16  ;1   ;DataItem;                    ;
               DataItemTable=Table50021;
               DataItemTableView=WHERE(Ausblenden=FILTER(No));
               OnPreDataItem=BEGIN
                               IF opt_invoice = opt_invoice::Hersteller THEN
                                 "RMA-Zeile".SETRANGE("RMA-Zeile".Belegart,"RMA-Zeile".Belegart::"an Hersteller");
                               IF opt_invoice = opt_invoice::Kunde THEN
                                 "RMA-Zeile".SETRANGE("RMA-Zeile".Belegart,"RMA-Zeile".Belegart::"an Kunden");
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Artikel.GET("Artikelnr.") THEN BEGIN
                                    TariffNo := Artikel."Tariff No.";
                                    Artikelnr :=  Artikel."No. 2";
                                  END ELSE BEGIN
                                    Artikelnr := "Artikelnr.";
                                    TariffNo := '';
                                  END;
                                  /////W„hrungscode 0 durch Euro ersetzen\\\\\
                                  IF opt_invoice = opt_invoice::Hersteller THEN
                                    W„hrung := "RMA-Zeile"."EK-W„hrung"
                                  ELSE
                                    W„hrung := "RMA-Zeile".W„hrung;
                                  IF W„hrung = '' THEN
                                    W„hrung := 'EUR';
                                END;

               DataItemLink=RMA-Nr.=FIELD(RMA-Nr.) }

    { 17  ;2   ;Column  ;Manufac             ;
               SourceExpr=Manufac }

    { 18  ;2   ;Column  ;Description_Artikel ;
               SourceExpr=Artikel.Description }

    { 19  ;2   ;Column  ;SN_Nr_DC_RMA_Zeile  ;
               SourceExpr="SN-Nr. / DC" }

    { 20  ;2   ;Column  ;RMA_NrHersteller_RMA_Zeile;
               SourceExpr="RMA-Nr. Hersteller" }

    { 21  ;2   ;Column  ;TariffNo            ;
               SourceExpr=TariffNo }

    { 22  ;2   ;Column  ;Wahrung_RMA_Zeile   ;
               SourceExpr=W„hrung }

    { 23  ;2   ;Column  ;Ursprungsland_RMA_Zeile;
               SourceExpr=Ursprungsland }

    { 24  ;2   ;Column  ;Amount              ;
               SourceExpr=Amount }

    { 25  ;2   ;Column  ;Price               ;
               SourceExpr=Price }

    { 26  ;2   ;Column  ;MengeSN_Nr_DC_RMA_Zeile;
               DecimalPlaces=0:0;
               SourceExpr="Menge SN-Nr. / DC" }

    { 27  ;2   ;Column  ;Artikelnr           ;
               SourceExpr=Artikelnr }

    { 28  ;2   ;Column  ;Anzahl_Zeile        ;
               SourceExpr=Anzahl_Zeile }

    { 29  ;2   ;Column  ;Totalamount         ;
               SourceExpr=Totalamount }

    { 30  ;1   ;DataItem;Textunten           ;
               DataItemTable=Table50023;
               DataItemTableView=WHERE(Art=FILTER(an Hersteller),
                                       Andruck=FILTER(Text unten));
               DataItemLink=Nr.=FIELD(RMA-Nr.) }

    { 31  ;2   ;Column  ;Bemerkung_Textunten ;
               SourceExpr=Bemerkung }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Artikel@1140003 : Record 27;
      Manufacturer@1140012 : Record 5720;
      Firmendaten@1000000002 : Record 79;
      RMA_Zeile@1140020 : Record 50021;
      Anschrift@1140015 : Record 50022;
      Kontakt@1140017 : Record 5050;
      Language@1140016 : Record 8;
      Ansprechpartner@1140030 : Record 50022;
      FormatAddr@1140029 : Codeunit 365;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      CompanyInfo@1000000000 : ARRAY [15] OF Text;
      w„hrung@1140009 : Text[30];
      Price@1000000006 : Decimal;
      Amount@1000000005 : Decimal;
      Totalamount@1000000004 : Decimal;
      TariffNo@1140010 : Code[20];
      Artikelnr@1140011 : Code[40];
      Manufac@1140013 : Text[50];
      opt_invoice@1140022 : 'Hersteller,Kunde';
      selected@1140023 : Integer;
      Text000@1140024 : TextConst 'DEU=Hersteller,Kunde';
      Text001@1140026 : TextConst 'DEU=Bitte hinterlegen Sie den Hersteller bzw. Kunden und achten Sie darauf, dass die Fhrungsrolle vergeben ist.';
      Anzahl_Zeile@1000000003 : Integer;
      Andruck@1140028 : ARRAY [8] OF Text[90];
      kontaktname@1140031 : Text[50];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Kopf_Header1@5052(VAR "RMA-Kopf"@1000000000 : Record 50020);
    BEGIN
      WITH "RMA-Kopf" DO BEGIN
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTOPASBemerkungen_Body2@5053(VAR "TOPAS Bemerkungen"@1000000000 : Record 50023);
    BEGIN
      WITH "TOPAS Bemerkungen" DO BEGIN
        ReportForNav.ShowOutput(Andruck=Andruck::"Text oben");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRMA_Zeile_Body4@5054(VAR "RMA-Zeile"@1000000000 : Record 50021);
    BEGIN
      WITH "RMA-Zeile" DO BEGIN
        //ReportForNav.ShowOutput(Belegart=Belegart::"an Hersteller");
        IF  opt_invoice = opt_invoice::Hersteller THEN BEGIN
          Amount := ROUND(("RMA-Zeile"."Menge SN-Nr. / DC") * ("RMA-Zeile"."urspr. DC-Preis EK-Lieferung"),0.01);
          Price := "RMA-Zeile"."urspr. DC-Preis EK-Lieferung";
        END ELSE BEGIN
          Amount := ROUND(("RMA-Zeile"."Menge SN-Nr. / DC") * ("RMA-Zeile"."VK-Preis"),0.01);
          Price := "RMA-Zeile"."VK-Preis";
        END;
        Totalamount += Amount;
        Anzahl_Zeile += 1;
        IF Manufacturer.GET("RMA-Zeile".Herstellercode) THEN
          Manufac := Manufacturer.Name
        ELSE
          Manufac := '';
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RMA_Kopf': CASE SectionId OF
          'Header1': OnPreSectionRMA_Kopf_Header1("RMA-Kopf");
        END;
        'TOPASBemerkungen': CASE SectionId OF
          'Body2': OnPreSectionTOPASBemerkungen_Body2("TOPAS Bemerkungen");
        END;
        'RMA_Zeile': CASE SectionId OF
          'Body4': OnPreSectionRMA_Zeile_Body4("RMA-Zeile");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
zeaOzSdQi4Hc+JfPOpUcJ/f5phQtJMUf/w8=</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="Andruck7">
          <DataField>Andruck7</DataField>
        </Field>
        <Field Name="Andruck8">
          <DataField>Andruck8</DataField>
        </Field>
        <Field Name="Andruck1">
          <DataField>Andruck1</DataField>
        </Field>
        <Field Name="Andruck2">
          <DataField>Andruck2</DataField>
        </Field>
        <Field Name="Andruck3">
          <DataField>Andruck3</DataField>
        </Field>
        <Field Name="Andruck4">
          <DataField>Andruck4</DataField>
        </Field>
        <Field Name="Andruck5">
          <DataField>Andruck5</DataField>
        </Field>
        <Field Name="Andruck6">
          <DataField>Andruck6</DataField>
        </Field>
        <Field Name="PageNo">
          <DataField>PageNo</DataField>
        </Field>
        <Field Name="WORKDATE">
          <DataField>WORKDATE</DataField>
        </Field>
        <Field Name="RMA_Nr_RMA_Kopf">
          <DataField>RMA_Nr_RMA_Kopf</DataField>
        </Field>
        <Field Name="Bemerkung_TOPASBemerkungen">
          <DataField>Bemerkung_TOPASBemerkungen</DataField>
        </Field>
        <Field Name="Manufac">
          <DataField>Manufac</DataField>
        </Field>
        <Field Name="Description_Artikel">
          <DataField>Description_Artikel</DataField>
        </Field>
        <Field Name="SN_Nr_DC_RMA_Zeile">
          <DataField>SN_Nr_DC_RMA_Zeile</DataField>
        </Field>
        <Field Name="RMA_NrHersteller_RMA_Zeile">
          <DataField>RMA_NrHersteller_RMA_Zeile</DataField>
        </Field>
        <Field Name="TariffNo">
          <DataField>TariffNo</DataField>
        </Field>
        <Field Name="Wahrung_RMA_Zeile">
          <DataField>Wahrung_RMA_Zeile</DataField>
        </Field>
        <Field Name="Ursprungsland_RMA_Zeile">
          <DataField>Ursprungsland_RMA_Zeile</DataField>
        </Field>
        <Field Name="Amount">
          <DataField>Amount</DataField>
        </Field>
        <Field Name="AmountFormat">
          <DataField>AmountFormat</DataField>
        </Field>
        <Field Name="Price">
          <DataField>Price</DataField>
        </Field>
        <Field Name="PriceFormat">
          <DataField>PriceFormat</DataField>
        </Field>
        <Field Name="MengeSN_Nr_DC_RMA_Zeile">
          <DataField>MengeSN_Nr_DC_RMA_Zeile</DataField>
        </Field>
        <Field Name="MengeSN_Nr_DC_RMA_ZeileFormat">
          <DataField>MengeSN_Nr_DC_RMA_ZeileFormat</DataField>
        </Field>
        <Field Name="Artikelnr">
          <DataField>Artikelnr</DataField>
        </Field>
        <Field Name="Anzahl_Zeile">
          <DataField>Anzahl_Zeile</DataField>
        </Field>
        <Field Name="Totalamount">
          <DataField>Totalamount</DataField>
        </Field>
        <Field Name="TotalamountFormat">
          <DataField>TotalamountFormat</DataField>
        </Field>
        <Field Name="Bemerkung_Textunten">
          <DataField>Bemerkung_Textunten</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

