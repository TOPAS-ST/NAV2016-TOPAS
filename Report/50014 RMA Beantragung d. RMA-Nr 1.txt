OBJECT Report 50014 RMA Beantragung d. RMA-Nr 1
{
  OBJECT-PROPERTIES
  {
    Date=07.06.17;
    Time=13:47:55;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS(Picture);
                 END;

    OnPreReport=BEGIN
                  Selection := STRMENU(Text000,1);
                  IF Selection = 0 THEN
                    CurrReport.QUIT;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50020;
               OnAfterGetRecord=BEGIN
                                  Anredetext := '';
                                  Name := '';
                                  Adresse := '';
                                  Telefonnr := '';
                                  Faxnr := '';
                                  Email := '';
                                  Ort := '';
                                  PLZ := '';

                                  Beteiligte.RESET;
                                  Beteiligte.SETRANGE("RMA-Nr.","RMA-Nr.");
                                  Beteiligte.SETRANGE(Art,Beteiligte.Art::Kunde);
                                  Beteiligte.SETRANGE(F¬Åhrungsrolle,TRUE);
                                  IF Beteiligte.FINDFIRST THEN BEGIN
                                    Name := Beteiligte.Name + ' ' + Beteiligte."Name 2";
                                    Adresse := Beteiligte.Adresse + ' ' + Beteiligte."Adresse 2";
                                    Beteiligte2.RESET;
                                    Beteiligte2.SETRANGE("RMA-Nr.",Beteiligte."RMA-Nr.");
                                    Beteiligte2.SETRANGE(Art,Beteiligte2.Art::"Ansprechpartner Kunde");
                                    Beteiligte2.SETRANGE("Kontakt Mandantennr.",Beteiligte."Kontakt Mandantennr.");
                                    IF Beteiligte2.FINDFIRST THEN BEGIN
                                      IF Contact.GET(Beteiligte2."Nr.") THEN BEGIN
                                        IF Contact."Salutation Code" = 'HERR' THEN Anredetext := 'Sehr geehrter Herr ' + Contact.Surname + ',';
                                        IF Contact."Salutation Code" = 'FRAU' THEN Anredetext := 'Sehr geehrte Frau ' + Contact.Surname + ',';
                                        Beteiligte2.CALCFIELDS("Telefonnr.","E-Mail","Faxnr.");
                                        Telefonnr := Beteiligte2."Telefonnr.";
                                        Faxnr := Beteiligte2."Faxnr.";
                                        Email := Beteiligte2."E-Mail";
                                        Ort := Beteiligte.Ort;
                                        PLZ := Beteiligte."PLZ-Code";
                                      END ELSE BEGIN
                                        Anredetext := 'Sehr geehrter Kunde,';
                                      END;
                                    END ELSE BEGIN
                                      Beteiligte.CALCFIELDS("Telefonnr.","E-Mail","Faxnr.");
                                      Anredetext := 'Sehr geehrter Kunde,';
                                      Telefonnr := Beteiligte."Telefonnr.";
                                      Faxnr := Beteiligte."Faxnr.";
                                      Email := Beteiligte."E-Mail";
                                      Ort := Beteiligte.Ort;
                                      PLZ := Beteiligte."PLZ-Code";
                                    END;
                                  END ELSE
                                    Anredetext := 'Sehr geehrter Kunde,';
                                END;

               ReqFilterFields=RMA-Nr. }

    { 1000000000;1;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 2   ;1   ;Column  ;Email               ;
               SourceExpr=Email }

    { 3   ;1   ;Column  ;Telefonnr           ;
               SourceExpr=Telefonnr }

    { 4   ;1   ;Column  ;Faxnr               ;
               SourceExpr=Faxnr }

    { 5   ;1   ;Column  ;Ort                 ;
               SourceExpr=Ort }

    { 6   ;1   ;Column  ;PLZ                 ;
               SourceExpr=PLZ }

    { 7   ;1   ;Column  ;Adresse             ;
               SourceExpr=Adresse }

    { 8   ;1   ;Column  ;Name                ;
               SourceExpr=Name }

    { 9   ;1   ;Column  ;Beteiligte2Name__Beteiligte2Name2;
               SourceExpr=Beteiligte2.Name+ ' ' + Beteiligte2."Name 2" }

    { 10  ;1   ;Column  ;Debitornr_Beteiligte;
               SourceExpr=Beteiligte."Debitornr." }

    { 11  ;1   ;Column  ;Anredetext          ;
               SourceExpr=Anredetext }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Firmendaten@1000000000 : Record 79;
      Beteiligte@1140010 : Record 50022;
      Beteiligte2@1140009 : Record 50022;
      Contact@1140008 : Record 5050;
      Anredetext@1140007 : Text[80];
      Name@1140006 : Text[100];
      Adresse@1140005 : Text[100];
      PLZ@1140004 : Code[20];
      Ort@1140003 : Text[30];
      Telefonnr@1140002 : Text[30];
      Faxnr@1140001 : Text[30];
      Email@1140000 : Text[80];
      Selection@1140011 : Integer;
      Text000@1140013 : TextConst 'DEU=Systeme,Chips';
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionRMA_Kopf_Header3@5066(VAR "RMA-Kopf"@1000000000 : Record 50020);
    BEGIN
      WITH "RMA-Kopf" DO BEGIN
        ReportForNav.ShowOutput(Selection = 1);
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RMA_Kopf': CASE SectionId OF
          'Header3': OnPreSectionRMA_Kopf_Header3("RMA-Kopf");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>f3374e73-429d-404e-a261-072471d99ec9</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>d12881bd-0f2d-4d9e-be49-f3ec4cd59bb5</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="Email">
          <DataField>Email</DataField>
        </Field>
        <Field Name="Telefonnr">
          <DataField>Telefonnr</DataField>
        </Field>
        <Field Name="Faxnr">
          <DataField>Faxnr</DataField>
        </Field>
        <Field Name="Ort">
          <DataField>Ort</DataField>
        </Field>
        <Field Name="PLZ">
          <DataField>PLZ</DataField>
        </Field>
        <Field Name="Adresse">
          <DataField>Adresse</DataField>
        </Field>
        <Field Name="Name">
          <DataField>Name</DataField>
        </Field>
        <Field Name="Beteiligte2Name__Beteiligte2Name2">
          <DataField>Beteiligte2Name__Beteiligte2Name2</DataField>
        </Field>
        <Field Name="Debitornr_Beteiligte">
          <DataField>Debitornr_Beteiligte</DataField>
        </Field>
        <Field Name="Anredetext">
          <DataField>Anredetext</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

