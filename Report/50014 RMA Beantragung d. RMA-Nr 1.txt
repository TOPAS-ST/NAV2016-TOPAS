OBJECT Report 50014 RMA Beantragung d. RMA-Nr 1
{
  OBJECT-PROPERTIES
  {
    Date=02.02.18;
    Time=09:54:01;
    Modified=Yes;
    Version List=Topas Bericht,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS(Picture);
                 END;

    OnPreReport=BEGIN
                  Selection := STRMENU(Text000,1);
                  IF Selection = 0 THEN
                    CurrReport.QUIT;
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table50020;
               OnAfterGetRecord=BEGIN
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);

                                  Anredetext := '';
                                  Name := '';
                                  Adresse := '';
                                  Telefonnr := '';
                                  Faxnr := '';
                                  Email := '';
                                  Ort := '';
                                  PLZ := '';

                                  Beteiligte.RESET;
                                  Beteiligte.SETRANGE("RMA-Nr.","RMA-Nr.");
                                  Beteiligte.SETRANGE(Art,Beteiligte.Art::Kunde);
                                  Beteiligte.SETRANGE(F¬Åhrungsrolle,TRUE);
                                  IF Beteiligte.FINDFIRST THEN BEGIN
                                    Name := Beteiligte.Name + ' ' + Beteiligte."Name 2";
                                    Adresse := Beteiligte.Adresse + ' ' + Beteiligte."Adresse 2";
                                    Beteiligte2.RESET;
                                    Beteiligte2.SETRANGE("RMA-Nr.",Beteiligte."RMA-Nr.");
                                    Beteiligte2.SETRANGE(Art,Beteiligte2.Art::"Ansprechpartner Kunde");
                                    Beteiligte2.SETRANGE("Kontakt Mandantennr.",Beteiligte."Kontakt Mandantennr.");
                                    IF Beteiligte2.FINDFIRST THEN BEGIN
                                      IF Contact.GET(Beteiligte2."Nr.") THEN BEGIN
                                        IF Contact."Salutation Code" = 'HERR' THEN Anredetext := 'Sehr geehrter Herr ' + Contact.Surname + ',';
                                        IF Contact."Salutation Code" = 'FRAU' THEN Anredetext := 'Sehr geehrte Frau ' + Contact.Surname + ',';
                                        Beteiligte2.CALCFIELDS("Telefonnr.","E-Mail","Faxnr.");
                                        Telefonnr := Beteiligte2."Telefonnr.";
                                        Faxnr := Beteiligte2."Faxnr.";
                                        Email := Beteiligte2."E-Mail";
                                        Ort := Beteiligte.Ort;
                                        PLZ := Beteiligte."PLZ-Code";
                                      END ELSE BEGIN
                                        Anredetext := 'Sehr geehrter Kunde,';
                                      END;
                                    END ELSE BEGIN
                                      Beteiligte.CALCFIELDS("Telefonnr.","E-Mail","Faxnr.");
                                      Anredetext := 'Sehr geehrter Kunde,';
                                      Telefonnr := Beteiligte."Telefonnr.";
                                      Faxnr := Beteiligte."Faxnr.";
                                      Email := Beteiligte."E-Mail";
                                      Ort := Beteiligte.Ort;
                                      PLZ := Beteiligte."PLZ-Code";
                                    END;
                                  END ELSE
                                    Anredetext := 'Sehr geehrter Kunde,';
                                END;

               ReqFilterFields=RMA-Nr. }

    { 1000000000;1;Column;Picture_Firmendaten;
               SourceExpr=Firmendaten.Picture }

    { 1000000002;1;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;1;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2] }

    { 1000000003;1;Column;CompanyPostCode_City;
               SourceExpr=CompanyInfo[4] + ' ' + CompanyInfo[5] }

    { 1000000005;1;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;1;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;1;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;1;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;1;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;1;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;1;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;1;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;1;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000004;1;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 2   ;1   ;Column  ;Email               ;
               SourceExpr=Email }

    { 3   ;1   ;Column  ;Telefonnr           ;
               SourceExpr=Telefonnr }

    { 4   ;1   ;Column  ;Faxnr               ;
               SourceExpr=Faxnr }

    { 5   ;1   ;Column  ;Ort                 ;
               SourceExpr=Ort }

    { 6   ;1   ;Column  ;PLZ                 ;
               SourceExpr=PLZ }

    { 7   ;1   ;Column  ;Adresse             ;
               SourceExpr=Adresse }

    { 8   ;1   ;Column  ;Name                ;
               SourceExpr=Name }

    { 9   ;1   ;Column  ;Beteiligte2Name__Beteiligte2Name2;
               SourceExpr=Beteiligte2.Name+ ' ' + Beteiligte2."Name 2" }

    { 10  ;1   ;Column  ;Debitornr_Beteiligte;
               SourceExpr=Beteiligte."Debitornr." }

    { 11  ;1   ;Column  ;Anredetext          ;
               SourceExpr=Anredetext }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Firmendaten@1000000000 : Record 79;
      Beteiligte@1140010 : Record 50022;
      Beteiligte2@1140009 : Record 50022;
      Contact@1140008 : Record 5050;
      TOPAS_Funktionen@1000000002 : Codeunit 50006;
      CompanyInfo@1000000001 : ARRAY [15] OF Text;
      Anredetext@1140007 : Text[80];
      Name@1140006 : Text[100];
      Adresse@1140005 : Text[100];
      PLZ@1140004 : Code[20];
      Ort@1140003 : Text[30];
      Telefonnr@1140002 : Text[30];
      Faxnr@1140001 : Text[30];
      Email@1140000 : Text[80];
      Selection@1140011 : Integer;
      Text000@1140013 : TextConst 'DEU=Systeme,Chips';
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionRMA_Kopf_Header3@5066(VAR "RMA-Kopf"@1000000000 : Record 50020);
    BEGIN
      WITH "RMA-Kopf" DO BEGIN
        ReportForNav.ShowOutput(Selection = 1);
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'RMA_Kopf': CASE SectionId OF
          'Header3': OnPreSectionRMA_Kopf_Header3("RMA-Kopf");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>f3374e73-429d-404e-a261-072471d99ec9</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>d12881bd-0f2d-4d9e-be49-f3ec4cd59bb5</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPostCode_City">
          <DataField>CompanyPostCode_City</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="Email">
          <DataField>Email</DataField>
        </Field>
        <Field Name="Telefonnr">
          <DataField>Telefonnr</DataField>
        </Field>
        <Field Name="Faxnr">
          <DataField>Faxnr</DataField>
        </Field>
        <Field Name="Ort">
          <DataField>Ort</DataField>
        </Field>
        <Field Name="PLZ">
          <DataField>PLZ</DataField>
        </Field>
        <Field Name="Adresse">
          <DataField>Adresse</DataField>
        </Field>
        <Field Name="Name">
          <DataField>Name</DataField>
        </Field>
        <Field Name="Beteiligte2Name__Beteiligte2Name2">
          <DataField>Beteiligte2Name__Beteiligte2Name2</DataField>
        </Field>
        <Field Name="Debitornr_Beteiligte">
          <DataField>Debitornr_Beteiligte</DataField>
        </Field>
        <Field Name="Anredetext">
          <DataField>Anredetext</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

