OBJECT Report 50052 TOPAS Verkauf - Angebot
{
  OBJECT-PROPERTIES
  {
    Date=04.07.18;
    Time=11:53:19;
    Modified=Yes;
    Version List=Beleg - manuell --> 50152,FORNAV3.1.0.1460/1460;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Quote));
               ReqFilterHeadingML=DEU=Verkaufsangebot;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                               Firmendaten.CALCFIELDS("ISO Logo",Picture);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    IF VerkEinkPerson."Fax No." = '' THEN BEGIN
                                      Verk„uferText := STRSUBSTNO ('i.A. %1', VerkEinkPerson.Name);
                                      Verk„uferText1 := '';
                                      Verk„uferText2 := STRSUBSTNO ('(Tel. %1)', VerkEinkPerson."First name");
                                    END ELSE BEGIN
                                      Verk„uferText := STRSUBSTNO ('i.A. %1', VerkEinkPerson.Name);
                                      Verk„uferText1 := STRSUBSTNO ('%1',VerkEinkPerson."Fax No.");
                                      Verk„uferText2 := STRSUBSTNO ('(Tel. %1)', VerkEinkPerson."First name");
                                    END;
                                  END;
                                  // -002.1
                                  IF "Sales Header"."Betreuer Innendienst" = '' THEN BEGIN
                                    VerkEinkPersonInnen.INIT;
                                    Verk„uferTextInnen := '';
                                  END ELSE BEGIN
                                    VerkEinkPersonInnen.GET("Sales Header"."Betreuer Innendienst");
                                    IF VerkEinkPersonInnen."Fax No." ='' THEN BEGIN
                                      Verk„uferTextInnen := STRSUBSTNO ('i.A. %1', VerkEinkPersonInnen.Name);
                                      Verk„uferText1Innen := '';
                                      Verk„uferText2Innen := STRSUBSTNO ('(Tel. %1)', VerkEinkPersonInnen."First name");
                                    END ELSE BEGIN
                                      Verk„uferTextInnen := STRSUBSTNO ('i.A. %1', VerkEinkPersonInnen.Name);
                                      Verk„uferText1Innen := STRSUBSTNO ('%1', VerkEinkPersonInnen."Fax No.");
                                      Verk„uferText2Innen := STRSUBSTNO ('(Tel. %1)', VerkEinkPersonInnen."First name");
                                    END;
                                  END;
                                  IF ("Salesperson Code" = '') AND
                                     ("Sales Header"."Betreuer Innendienst" = '') THEN
                                    AngebotsText := STRSUBSTNO('Angebot Nr. %1',"Sales Header"."No.")
                                  ELSE
                                    IF ("Salesperson Code" = '') THEN
                                      AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2',"Sales Header"."No.",
                                        "Sales Header"."Betreuer Innendienst")
                                    ELSE
                                      IF ("Sales Header"."Betreuer Innendienst" = '') THEN
                                        AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2',"Sales Header"."No.",
                                          "Sales Header"."Salesperson Code")
                                      ELSE
                                        AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2 / %3',"Sales Header"."No.",
                                          "Sales Header"."Betreuer Innendienst", "Sales Header"."Salesperson Code");
                                  // +002.1
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  //Auskommentiert am 27.03.08
                                  // -002.2
                                  //  Fracht := LieferBed."Frachtwert (netto MW)";
                                  // +002.2
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  // -002.3
                                    PreisText := FIBUEinrichtung."LCY Code";
                                  // +002.3
                                  // -004.4
                                    IF PreisText = 'EUR' THEN
                                      PreisText += 'O';
                                  // +004.4
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  //Auskommentiert am 27.03.08 A
                                  // -002.4
                                    PreisText := "Currency Code";
                                  //  Fracht := ROUND (W„hrungsWechKurs.ExchangeAmtLCYToFCY ("Sales Header"."Document Date",
                                  //    "Sales Header"."Currency Code", LieferBed."Frachtwert (netto MW)",
                                  //    "Sales Header"."Currency Factor"));
                                  //Auskommentiert am 27.03.08 E
                                  // +002.4
                                  END;
                                  // -002.5
                                  //FormatAdr.VerkKopfRechAn(DebAdr,Verkaufskopf);
                                  FrachtText := 'zzgl. ' + PreisText + '  ' + FORMAT(Fracht,0,'<Precision,2:><Standard Format,0>');
                                  FormatAdr.SalesHeaderSellTo(DebAdr,"Sales Header");
                                  // +002.5
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  //Auskommentiert am 27.03.08
                                  // -001.1
                                  Verkaufsw„hrungskurs := WechKursBetrag (WORKDATE,"Currency Code", "Currency Factor");
                                  //Einkaufsw„hrungskurs := WechKursBetrag (WORKDATE, Einkaufsw„hrungscode, Einkaufsw„hrungsfaktor);
                                  IF NOT Deb.GET("Sales Header"."Sell-to Customer No.") THEN
                                    Deb.INIT
                                  // +001.1
                                  //TOPAS + 1.01 ST - System Preisbindungstext
                                  ELSE
                                    //muss noch auf neues Feld im Debitor umgestellt werden, erst wenn dieser gesetzt ist, soll der Text gesetzt werden
                                    IF Deb."System Preisbindung" THEN
                                      system_preisbindung := SysPreisbindungsText
                                    ELSE
                                      system_preisbindung := '';
                                  //-1.01

                                  IF "Currency Code" = '' THEN
                                    w„hrung := '°'
                                  ELSE
                                    w„hrung := "Currency Code";
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  v_FER_SPL := FALSE;
                                  adv_andruck_notwendig := FALSE;
                                  v_sum_system := 0;
                                  VerkZeile1.RESET;
                                  VerkZeile1.SETRANGE("Document No.","Sales Header"."No.");
                                  VerkZeile1.SETRANGE(Type,VerkZeile1.Type::Item);
                                  VerkZeile1.SETFILTER("Manufacturer Code",'20|57|5710|5720|59|82|85|96|9610|9620');
                                  IF VerkZeile1.FINDFIRST THEN
                                    v_system := TRUE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN
                                    preisstellung := STRSUBSTNO('in %1 zzgl. MwSt',PreisText)
                                  ELSE
                                    preisstellung := STRSUBSTNO('in %1 plus V.A.T. if applicable',PreisText);
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table5050;
               DataItemLink=No.=FIELD(Kontaktnr.) }

    { 4   ;1   ;DataItem;                    ;
               DataItemTable=Table5069;
               DataItemTableView=SORTING(Salutation Code,Language Code,Salutation Type)
                                 WHERE(Salutation Type=FILTER(Formal));
               OnPreDataItem=BEGIN
                               "Salutation Formula".SETFILTER("Salutation Formula"."Salutation Code",Contact."Salutation Code");
                               IF "Salutation Formula".FINDFIRST THEN ;
                             END;

               DataItemLink=Language Code=FIELD(Language Code) }

    { 5   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               DataItemTableView=SORTING(Code);
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 6   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=VAR
                                  NamePart@1140001 : ARRAY [5] OF Text[50];
                                  SubStr@1140002 : Text[30];
                                  i@1140003 : Integer;
                                BEGIN
                                  CLEAR(VerkZeile);
                                  CLEAR(VerkBuchen);
                                  VerkBuchen.GetSalesLines("Sales Header",VerkZeile,0);
                                  KopieText := '';
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    Preis_info := 'Einzelpreis je Stck in ' + w„hrung;
                                    IF Number > 1 THEN KopieText := 'skopie';
                                    ReportForNav.PageNo := 1;
                                  END ELSE BEGIN
                                    Preis_info := 'Price per piece in ' + w„hrung;
                                    IF Number > 1 THEN KopieText := ' Copy';
                                    ReportForNav.PageNo := 1;
                                  END;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    //*** Versandbedingungen
                                    versand := '';
                                    IF "Sales Header"."Shipment Method Code" <> 'AB_HAN' THEN BEGIN
                                      versand := LieferBed.Description;
                                    END;
                                    IF "Sales Header"."Shipment Method Code" ='AB_HAN' THEN BEGIN
                                      IF "Sales Header"."Currency Code" = 'USD' THEN versand := 'Lieferungen ab 2.500,-- USD frei Haus';
                                      IF "Sales Header"."Currency Code" = '' THEN versand := 'Lieferungen ab 2.500,-- EURO frei Haus';
                                      IF "Sales Header"."Currency Code" = 'YEN' THEN versand := 'Lieferungen ab 250.000,-- JPY frei Haus';
                                    END;
                                    IF "Sales Header"."Currency Code" = 'USD' THEN
                                      IF "Sales Header"."Territory Code" <> 'SYSTEM' THEN
                                        minbestellwert := '500,-- USD'
                                      ELSE
                                        minbestellwert := '50,-- USD';
                                    IF "Sales Header"."Currency Code" = '' THEN minbestellwert := '50,-- EURO';
                                    IF "Sales Header"."Currency Code" = 'YEN' THEN minbestellwert := '50.000,-- JPY';
                                    //**********************
                                  END ELSE BEGIN
                                    //*** Versandbedingungen
                                    versand := '';
                                    IF "Sales Header"."Shipment Method Code" = 'FOB' THEN BEGIN
                                      versand := 'FOB';
                                    END ELSE BEGIN
                                      IF "Sales Header"."Shipment Method Code" = 'FHAUS' THEN
                                        versand := 'ex works'
                                      ELSE
                                        versand := LieferBed.Description;
                                    END;
                                    IF "Sales Header"."Currency Code" = 'USD' THEN
                                      IF "Sales Header"."Territory Code" <> 'SYSTEM' THEN
                                        minbestellwert := '500,-- USD'
                                      ELSE
                                        minbestellwert := '50,-- USD';
                                    IF "Sales Header"."Currency Code" = '' THEN BEGIN
                                      IF "Sales Header"."Sell-to Country/Region Code" = 'DE' THEN
                                        minbestellwert := '50,-- EURO'
                                      ELSE
                                        minbestellwert := '250,-- EURO';
                                    END;
                                    IF "Sales Header"."Currency Code" = 'YEN' THEN minbestellwert := '50.000,-- JPY';
                                    //**********************
                                  END;

                                  ende := FALSE;
                                  x := 1;
                                  text2 := "Sales Header".Kontaktperson;
                                  REPEAT
                                    IF DebAdr[x] = "Sales Header"."Sell-to Customer Name" THEN BEGIN
                                      IF DebAdr[x+1] = "Sales Header"."Sell-to Customer Name 2" THEN BEGIN
                                        Anschrift[x] := DebAdr[x];
                                        Anschrift[x+1] := DebAdr[x+1];
                                        Anschrift[x+2] := text2;
                                        Anschrift[x+3] := DebAdr[x+2];
                                        Anschrift[x+4] := DebAdr[x+3];
                                        Anschrift[x+5] := DebAdr[x+4];
                                        Anschrift[x+6] := DebAdr[x+5];
                                        Anschrift[x+7] := DebAdr[x+6];
                                        Anschrift[x+8] := DebAdr[x+7];
                                        ende := TRUE;
                                      END ELSE BEGIN
                                        Anschrift[x] := DebAdr[x];
                                        Anschrift[x+1] := text2;
                                        Anschrift[x+2] := DebAdr[x+1];
                                        Anschrift[x+3] := DebAdr[x+2];
                                        Anschrift[x+4] := DebAdr[x+3];
                                        Anschrift[x+5] := DebAdr[x+4];
                                        Anschrift[x+6] := DebAdr[x+5];
                                        Anschrift[x+7] := DebAdr[x+6];
                                        Anschrift[x+8] := DebAdr[x+7];
                                        ende := TRUE;
                                      END;
                                    END;
                                    i := i + 1;
                                  UNTIL (i = 9) OR (ende);
                                  //*** Kontaktperson NEU
                                  IF (Contact."Salutation Code" = 'MANDANT') OR (Contact."Salutation Code" = '') THEN
                                    Text1 := "Salutation Formula".Salutation
                                  ELSE
                                    IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                      Anrede.Salutation := DELSTR("Salutation Formula".Salutation,19);
                                      Text1 := Anrede.Salutation + ' ' + Contact.Surname + ',';
                                    END ELSE BEGIN
                                      Anrede.Salutation := DELSTR("Salutation Formula".Salutation,9);
                                      Text1 := Anrede.Salutation + ' ' + Contact.Surname + ',';
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkDruckZ„hler.RUN("Sales Header");
                              END;
                               }

    { 7   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 8   ;3   ;Column  ;Picture_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 9   ;3   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 10  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 12  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 13  ;3   ;Column  ;ansp_anrede         ;
               IncludeCaption=No;
               SourceExpr=ansp_anrede }

    { 11  ;3   ;Column  ;ansp_telefon        ;
               IncludeCaption=No;
               SourceExpr=ansp_telefon }

    { 14  ;3   ;Column  ;ansp_fax            ;
               IncludeCaption=No;
               SourceExpr=ansp_fax }

    { 15  ;3   ;Column  ;E_Mail_Contact      ;
               IncludeCaption=No;
               SourceExpr=Contact."E-Mail" }

    { 16  ;3   ;Column  ;FaxNo_Contact       ;
               IncludeCaption=No;
               SourceExpr=Contact."Fax No." }

    { 17  ;3   ;Column  ;PhoneNo_Contact     ;
               IncludeCaption=No;
               SourceExpr=Contact."Phone No." }

    { 18  ;3   ;Column  ;Anschrift2          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[2] }

    { 19  ;3   ;Column  ;Sell_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 20  ;3   ;Column  ;DocumentDate_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Document Date" }

    { 21  ;3   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="Sales Header"."No." }

    { 22  ;3   ;Column  ;ReportForNavPageNo  ;
               IncludeCaption=No;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 23  ;3   ;Column  ;KopieText           ;
               IncludeCaption=No;
               SourceExpr=KopieText }

    { 24  ;3   ;Column  ;Anschrift9          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[9] }

    { 25  ;3   ;Column  ;Anschrift8          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[8] }

    { 26  ;3   ;Column  ;Anschrift7          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[7] }

    { 27  ;3   ;Column  ;Anschrift6          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[6] }

    { 28  ;3   ;Column  ;Anschrift5          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[5] }

    { 29  ;3   ;Column  ;Anschrift4          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[4] }

    { 30  ;3   ;Column  ;Anschrift3          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[3] }

    { 31  ;3   ;Column  ;Anschrift1          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[1] }

    { 32  ;3   ;Column  ;ihre_ref            ;
               IncludeCaption=No;
               SourceExpr=ihre_ref }

    { 33  ;3   ;Column  ;SalesHeaderStatus   ;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Header".Status) }

    { 34  ;3   ;Column  ;CurrencyFactor_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Currency Factor" }

    { 35  ;3   ;Column  ;Einkaufswahrungsfaktor_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Einkaufsw„hrungsfaktor }

    { 36  ;3   ;Column  ;Einkaufswahrungscode_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Einkaufsw„hrungscode }

    { 37  ;3   ;Column  ;CurrencyCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Currency Code" }

    { 1000000003;3;Column;system_preisbindung;
               IncludeCaption=No;
               SourceExpr=system_preisbindung }

    { 38  ;3   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  Einkaufsw„hrungskurs := WechKursBetrag (WORKDATE, Einkaufsw„hrungscode, Einkaufsw„hrungsfaktor);
                                END;

               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 39  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := VerkZeile.FIND('+');
                               WHILE MehrZeilen AND (VerkZeile.Description = '') AND
                                     (VerkZeile."No." = '') AND (VerkZeile.Quantity = 0) AND
                                     (VerkZeile.Amount = 0)
                               DO
                                 MehrZeilen := VerkZeile.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               VerkZeile.SETRANGE("Line No.",0,VerkZeile."Line No.");
                               SETRANGE(Number,1,VerkZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    VerkZeile.FIND('-')
                                  ELSE
                                    VerkZeile.NEXT;
                                  "Sales Line" := VerkZeile;
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "Sales Line"."VAT %";
                                  MWSTBetragZeile."VAT Base" := "Sales Line".Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Sales Line"."Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  // -001.2
                                  IF NOT Artikel.GET ("Sales Line"."No.") THEN
                                    Artikel.INIT;
                                  // +001.2
                                  LieferText := "Sales Line".LZ_Text;

                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Line".Type = "Sales Line".Type::Item THEN BEGIN
                                    lead_symbol := '';
                                    IF lead_artikel.GET("Sales Line"."No.") THEN BEGIN
                                      IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE') THEN BEGIN
                                        lead_symbol := 'ø';
                                        IF CurrReport.LANGUAGE = 1031 THEN
                                          lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.'
                                        ELSE
                                          lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                      END;
                                    END;
                                  END;
                                  IF v_FER_SPL = FALSE THEN BEGIN
                                    IF (("Sales Line"."Manufacturer Code" = '82') OR ("Sales Line"."Manufacturer Code" = '85')) THEN BEGIN
                                    v_FER_SPL := TRUE;
                                    END;
                                  END;

                                  //10.07.15 ST - MSRP Andruck fr Systeme, anstatt VPE
                                  msrp := 0;
                                  msrp_w„h := 'USD';
                                  IF v_system = TRUE THEN BEGIN
                                    WITH FindSalesPrice DO BEGIN
                                      SETRANGE("Item No.","Sales Line"."No.");
                                      SETFILTER("Ending Date",'%1|>=%2',0D,WORKDATE);
                                      //SETFILTER("Currency Code",'%1',"Sales Header"."Currency Code");
                                      SETFILTER("Currency Code",'%1',msrp_w„h);
                                      IF "Sales Line"."Unit of Measure" <> '' THEN
                                        SETFILTER("Unit of Measure Code",'%1|%2',"Sales Line"."Unit of Measure",'');
                                      SETRANGE("Starting Date",0D,WORKDATE);
                                      SETRANGE("Sales Type","Sales Type"::"All Customers");
                                      SETRANGE("Sales Code");
                                      IF FINDLAST THEN
                                        msrp := FindSalesPrice."Unit Price";
                                    END;
                                  END;

                                  //03.07.2018 ST - Andruck des Hinweises, dass noch keine ADV vorliegt, diese aber fr CHAMPS erforderlich ist
                                  IF ("Sales Line".Type = "Sales Line".Type::Item) AND (Artikel.GET("Sales Line"."No.") AND (Artikel."Software Upgrade Protection")) THEN
                                    TroubleshootingSetup.SETRANGE(Type,TroubleshootingSetup.Type::Item);
                                    TroubleshootingSetup.SETRANGE("No.",Artikel."No.");
                                    TroubleshootingSetup.SETRANGE("Troubleshooting No.",'CHAMPS');
                                    IF TroubleshootingSetup.FINDFIRST THEN
                                      IF (Customer.ADV = FALSE) AND (Customer."Territory Code" = 'SYSTEM') THEN
                                        adv_andruck_notwendig := TRUE;
                                END;

               OnPostDataItem=BEGIN
                                VerkZeile.DELETEALL;
                              END;
                               }

    { 40  ;4   ;Column  ;Kontaktperson_kopie_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Kontaktperson (kopie)" }

    { 41  ;4   ;Column  ;Text1               ;
               IncludeCaption=No;
               SourceExpr=Text1 }

    { 42  ;4   ;Column  ;Text1_SalesHeader   ;
               IncludeCaption=No;
               SourceExpr="Sales Header".Text1 }

    { 43  ;4   ;Column  ;Text2_SalesHeader   ;
               IncludeCaption=No;
               SourceExpr="Sales Header".Text2 }

    { 44  ;4   ;Column  ;Preis_info          ;
               IncludeCaption=No;
               SourceExpr=Preis_info }

    { 45  ;4   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Description }

    { 46  ;4   ;Column  ;lead_symbol         ;
               IncludeCaption=No;
               SourceExpr=lead_symbol }

    { 47  ;4   ;Column  ;LineNo_VerkZeile    ;
               IncludeCaption=No;
               SourceExpr=VerkZeile."Line No." }

    { 48  ;4   ;Column  ;Verpackungsmenge_Artikel;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Artikel.Verpackungsmenge }

    { 49  ;4   ;Column  ;UnitPrice_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 50  ;4   ;Column  ;LieferText          ;
               IncludeCaption=No;
               SourceExpr=LieferText }

    { 51  ;4   ;Column  ;Quantity_SalesLine  ;
               IncludeCaption=No;
               SourceExpr="Sales Line".Quantity }

    { 52  ;4   ;Column  ;Artikelnr2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 53  ;4   ;Column  ;SalesLineQuantity_SalesLineUnitPrice;
               IncludeCaption=No;
               SourceExpr=("Sales Line".Quantity*"Sales Line"."Unit Price") }

    { 54  ;4   ;Column  ;msrp                ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=msrp }

    { 55  ;4   ;Column  ;Description2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Description 2" }

    { 56  ;4   ;Column  ;WEEE_Reg_Nr__ArtikelWEEE_Reg_Nr;
               IncludeCaption=No;
               SourceExpr='WEEE-Reg.-Nr.: '+ Artikel."WEEE-Reg.-Nr." }

    { 57  ;4   ;Column  ;Cross_ReferenceNo_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Cross-Reference No." }

    { 58  ;4   ;Column  ;Quotenr_SalesLine   ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Quotenr." }

    { 59  ;4   ;Column  ;ProfitPct_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Profit %" }

    { 60  ;4   ;Column  ;VK_Preis_MW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."VK-Preis (MW)" }

    { 61  ;4   ;Column  ;DC_Preis_Wahrung_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."DC-Preis (W„hrung)" }

    { 62  ;4   ;Column  ;DC_Preis_MW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."DC-Preis (MW)" }

    { 63  ;4   ;Column  ;ZollsatzPct_Artikel ;
               IncludeCaption=No;
               SourceExpr=Artikel."Zollsatz %" }

    { 64  ;4   ;Column  ;DC_Preis_EKW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."DC-Preis (EKW)" }

    { 65  ;4   ;Column  ;VK_Preis_EKW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."VK-Preis (EKW)" }

    { 66  ;4   ;Column  ;HandlingskostenPct_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Handlingskosten %" }

    { 67  ;4   ;Column  ;lead_free_text0     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text0 }

    { 68  ;4   ;Column  ;lead_free_text1     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text1 }

    { 69  ;4   ;Column  ;lead_free_text2     ;
               IncludeCaption=No;
               SourceExpr=lead_free_text2 }

    { 70  ;4   ;Column  ;lead_text           ;
               IncludeCaption=No;
               SourceExpr=lead_text }

    { 71  ;4   ;Column  ;wahrung             ;
               IncludeCaption=No;
               SourceExpr=w„hrung }

    { 72  ;4   ;Column  ;v_sum_system        ;
               IncludeCaption=No;
               SourceExpr=v_sum_system }

    { 73  ;4   ;Column  ;minbestellwert      ;
               IncludeCaption=No;
               SourceExpr=minbestellwert }

    { 74  ;4   ;Column  ;preisstellung       ;
               IncludeCaption=No;
               SourceExpr=preisstellung }

    { 75  ;4   ;Column  ;versand             ;
               IncludeCaption=No;
               SourceExpr=versand }

    { 76  ;4   ;Column  ;STRSUBSTNO__Pct1_ZlgBedDescription;
               SourceExpr=STRSUBSTNO('%1',ZlgBed.Description) }

    { 77  ;4   ;Column  ;STRSUBSTNO__inEURzumTageskursderLieferung;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO(':   in EUR zum Tageskurs der Lieferung') }

    { 78  ;4   ;Column  ;STRSUBSTNO__1EUR_Pct1Pct2Rechnungsstellungerfolgt_SalesHeade;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO(':   1 EUR=%1 %2 Rechnungsstellung erfolgt', "Sales Header"."Euro-Parit„tsw„hrungscode", "Sales Header"."Euro-Parit„tsw„hrungsfaktor") }

    { 79  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 80  ;3   ;DataItem;Unterschrift2       ;
               DataItemTable=Table18;
               DataItemLinkReference=Sales Header;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 81  ;4   ;Column  ;VerkauferTextInnen  ;
               IncludeCaption=No;
               SourceExpr=Verk„uferTextInnen }

    { 82  ;4   ;Column  ;VerkauferText       ;
               IncludeCaption=No;
               SourceExpr=Verk„uferText }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   v_total_drucken:=FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 2   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=Unterzeichner2 }

      { 1140002;2;Field     ;
                  CaptionML=DEU=Totalbetrag drucken;
                  SourceExpr=v_total_drucken }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      LieferBed@1140001 : Record 10;
      ZlgBed@1140002 : Record 3;
      VerkEinkPerson@1140003 : Record 13;
      Firmendaten@1140004 : Record 79;
      MWSTBetragZeile@1140005 : TEMPORARY Record 290;
      VerkZeile@1140006 : TEMPORARY Record 37;
      W„hrungsWechKurs@1000000005 : Record 330;
      Artikel@1000000004 : Record 27;
      Deb@1000000003 : Record 18;
      VerkEinkPersonInnen@1000000002 : Record 13;
      VerkZeile1@1000000011 : Record 37;
      FindSalesPrice@1000000010 : Record 7002;
      Anrede@1000000009 : Record 5069;
      Salutation@1000000008 : Record 5068;
      Kontakt@1000000007 : Record 5050;
      language@1000000006 : Record 8;
      Benutzer@1000000012 : Record 2000000120;
      TroubleshootingSetup@1000000017 : Record 5945;
      VerkDruckZ„hler@1140007 : Codeunit 313;
      FormatAdr@1140008 : Codeunit 365;
      VerkBuchen@1140009 : Codeunit 80;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      Anschrift@1140011 : ARRAY [9] OF Text[50];
      LieferAnAdr@1140012 : ARRAY [8] OF Text[50];
      FirmaAdr@1140013 : ARRAY [8] OF Text[50];
      CompanyInfo@1000000013 : ARRAY [15] OF Text;
      Verk„uferText@1140014 : Text[100];
      MWStNrText@1140015 : Text[30];
      ReferenzText@1140016 : Text[30];
      TotalText@1140017 : Text[50];
      TotalInklMWStText@1140018 : Text[50];
      MehrZeilen@1140019 : Boolean;
      AnzKopien@1140020 : Integer;
      AnzSchleifen@1140021 : Integer;
      KopieText@1140022 : Text[30];
      LiefAdrAnzeigen@1140023 : Boolean;
      i@1140024 : Integer;
      "** Scantec **"@1140025 : Integer;
      Einkaufsw„hrungskurs@1140030 : Decimal;
      Verkaufsw„hrungskurs@1140031 : Decimal;
      Fracht@1140032 : Decimal;
      PreisText@1140033 : Text[30];
      LieferText@1140034 : Text[30];
      FrachtText@1140035 : Text[100];
      AngebotsText@1140036 : Text[100];
      Verk„uferTextInnen@1140037 : Text[100];
      Verk„uferText1@1140038 : Text[100];
      Verk„uferText2@1140039 : Text[100];
      Verk„uferText1Innen@1140040 : Text[100];
      Verk„uferText2Innen@1140041 : Text[100];
      Text1@1140042 : Text[90];
      text2@1140043 : Text[90];
      Text3@1140070 : Text[90];
      w„hrung@1140044 : Text[10];
      Unterzeichner1@1140045 : Text[10];
      Unterzeichner2@1140046 : Text[10];
      versand@1140048 : Text[100];
      minbestellwert@1140049 : Text[30];
      lead_free_text0@1140050 : Text[80];
      lead_free_text1@1140051 : Text[120];
      leadfree_symbol@1140052 : Text[3];
      leadfree_artikel@1140053 : Record 27;
      lead_artikel@1140077 : Record 27;
      lead_symbol@1140079 : Text[3];
      lead_text@1140078 : Text[120];
      lead_free_text2@1140054 : Text[120];
      Faxnummer@1140055 : TextConst 'DEU=@@NMR +49 5119686464@@';
      Faxpriorit„t@1140056 : TextConst 'DEU=@@PRI 0@@';
      Faxaufl”sung@1140057 : TextConst 'DEU=@@AFL HOCH@@';
      Faxzustellbest„tigung@1140058 : TextConst 'DEU=@@ZSB 1@@';
      Faxparameter@1140059 : Text[210];
      Faxbetreff@1140060 : Text[100];
      ansp_fax@1140061 : Text[30];
      ansp_telefon@1140062 : Text[30];
      ansp_anrede@1140063 : Text[40];
      ihre_ref@1140064 : Text[90];
      preisstellung@1140065 : Text[60];
      Preis_info@1140066 : Text[45];
      NamePart@1140072 : ARRAY [5] OF Text[50];
      Text000@1000000000 : TextConst 'DEU=Fehlende Zuordnung zwischen %1 (%2) und %3 in der Tabelle %4. Bitte wenden Sie sich an Ihren Systemadministrator.';
      Text021@1140073 : TextConst 'DEU=Sie mssen formelle und informelle Anredeformeln in der Sprache %1 fr den Kontakt %2 einrichten.;ENU=You have to set up formal and informal salutation formulas in %1  language for the %2 contact.';
      Zusatz@1140074 : Text[30];
      x@1140075 : Integer;
      ende@1140076 : Boolean;
      v_FER_SPL@1140080 : Boolean;
      v_system@1140081 : Boolean;
      v_sum_system@1140083 : Decimal;
      v_total_drucken@1140084 : Boolean;
      msrp@1140086 : Decimal;
      msrp_w„h@1000000014 : Code[10];
      system_preisbindung@1000000015 : Text;
      adv_andruck_notwendig@1000000018 : Boolean;
      SysPreisbindungsText@1000000016 : TextConst 'DEU=Die Konditionen basieren auf Basis der aktuellen Preisliste und sind gltig bis\    zur n„chsten Žnderung durch den Hersteller - gilt nur fr USD.;ENU=:    USD Conditions/Offers are based on current pricebook and valid to\   next change due to the manufacturer.';
      ReportForNav@5000 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer2@5037(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(adv_andruck_notwendig);
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer1@5036(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         ReportForNav.ShowOutput(system_preisbindung <> '');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header2@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ihre_ref := '';
        IF "Sales Header"."External Document No." <> '' THEN ihre_ref := "Sales Header"."External Document No." + ' ';
        IF "Sales Header"."Your Reference" <> '' THEN ihre_ref := ihre_ref + "Sales Header"."Your Reference";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header3@5011(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput ("Sales Header".Status <> "Sales Header".Status::Released);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header4@5012(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        // -004.2
        ReportForNav.ShowOutput ("Sales Header".Status <> "Sales Header".Status::Released);
        //ReportForNav.ShowOutput (Verkaufskopf.Angebotsstatus = Verkaufskopf.Angebotsstatus::Kalkulation);
        //WITH Verkaufskopf DO
        //  ReportForNav.ShowOutput((Angebotsstatus = Angebotsstatus::Kalkulation) OR
        //                        ((Angebotsstatus = Angebotsstatus::Gltig) AND
        //                         (Einkaufsw„hrungscode <> W„hrungscode)));
        // +004.2
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header6@5013(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Sales Header"."Kontaktperson (kopie)" <> '') AND (ReportForNav.PageNo = 1));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header7@5014(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((ReportForNav.PageNo = 1) AND ("Sales Header".Text1 = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header8@5015(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Sales Header".Text1 <> '') AND (ReportForNav.PageNo = 1));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header9@5016(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(v_system = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header10@5017(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
          ReportForNav.ShowOutput(v_system = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body11@5018(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile.Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body12@5019(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile.Type = VerkZeile.Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body13@5020(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((VerkZeile.Type = VerkZeile.Type::Item) AND (v_system = FALSE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body14@5021(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile.Type = VerkZeile.Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body15@5022(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //   ReportForNav.ShowOutput(v_system = TRUE);
        ReportForNav.ShowOutput((VerkZeile.Type = VerkZeile.Type::Item) AND (v_system = TRUE));
         IF ((VerkZeile.Type = VerkZeile.Type::Item) AND (v_system = TRUE))
         THEN v_sum_system := v_sum_system + ("Sales Line".Quantity * "Sales Line"."Unit Price");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body16@5023(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        {lshanf c01}
        ReportForNav.ShowOutput(VerkZeile."Description 2" <> '');
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body17@5024(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Artikel."WEEE-Reg.-Nr." <>'');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body18@5025(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput("Sales Line"."Cross-Reference No."<> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body19@5026(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //MUSS IN NAVISION 5.0 ANGEPASST WERDEN!!
        ReportForNav.ShowOutput((Artikel.NCNR = TRUE) AND (VerkZeile."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body20@5027(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //Das Feld Angebotsstatus gibt es nicht mehr in NAV 2016
        //ReportForNav.ShowOutput (("Sales Header".Angebotsstatus <> '') AND
        //  (VerkZeile.Type = VerkZeile.Type::Item));
        ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer21@5028(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer22@5029(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer23@5030(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <> '')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer24@5031(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer26@5032(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((v_system = TRUE) AND (v_total_drucken = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer28@5033(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer32@5034(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        // -004.3
        ReportForNav.ShowOutput("Sales Header"."Euro-Parit„tsw„hrungscode" <> '')
        // +004.3
      END;
    END;

    LOCAL PROCEDURE OnPreSectionUnterschrift2_Body33@5035(VAR Unterschrift2@1000000000 : Record 18);
    BEGIN
      Benutzer.RESET;
      Benutzer.SETRANGE("User Name",USERID);
      Benutzer.FINDFIRST;
      IF (Benutzer."Salesperson Code" = '') THEN
        ERROR(Text000,Benutzer.FIELDCAPTION("User Name"),USERID,Benutzer.FIELDCAPTION("Salesperson Code"),Benutzer.TABLECAPTION);
      WITH Unterschrift2 DO BEGIN
        Verk„uferText1 := '';
        Verk„uferText2 := '';
        IF Unterzeichner2 = '' THEN BEGIN
          IF VerkEinkPerson.GET(Benutzer."Salesperson Code") THEN
          CASE VerkEinkPerson."Commercial procuration" OF
              VerkEinkPerson."Commercial procuration"::Nein: Zusatz := 'i.A.';
              VerkEinkPerson."Commercial procuration"::Prokura: Zusatz := 'ppa.';
              VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz := '';
          END;
          Verk„uferText := Zusatz + ' ' + VerkEinkPerson."First name" + ' ' + VerkEinkPerson.Name;
          Verk„uferTextInnen := '';
        END ELSE BEGIN
          IF VerkEinkPerson.GET(Benutzer."Salesperson Code") THEN
            CASE VerkEinkPerson."Commercial procuration" OF
                VerkEinkPerson."Commercial procuration"::Nein: Zusatz := 'i.A.';
                VerkEinkPerson."Commercial procuration"::Prokura: Zusatz := 'ppa.';
                VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz := '';
            END;
        Verk„uferTextInnen := Zusatz + ' ' + VerkEinkPerson."First name"+' '+VerkEinkPerson.Name;
        IF VerkEinkPerson.GET(Unterzeichner2) THEN
          CASE VerkEinkPerson."Commercial procuration" OF
              VerkEinkPerson."Commercial procuration"::Nein: Zusatz := 'i.A.';
              VerkEinkPerson."Commercial procuration"::Prokura: Zusatz := 'ppa.';
              VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz := '';
          END;
        Verk„uferText := Zusatz + ' ' + VerkEinkPerson."First name" + ' ' + VerkEinkPerson.Name;
        END;
      END;
    END;

    PROCEDURE "*** Scantec ***"@1();
    BEGIN
    END;

    PROCEDURE WechKursBetrag@2(Datum@1140000 : Date;W„hrungCode@1140001 : Code[10];W„hrungFaktor@1140002 : Decimal) : Decimal;
    VAR
      BezugAufWechselkursbetr@1140003 : Decimal;
      WechselkursBetr@1140004 : Decimal;
      BezugAufW„hrungscode@1140005 : Code[10];
      FesterWechselkursBetr@1140006 : Option;
    BEGIN
      IF W„hrungCode = '' THEN
        EXIT(1);
      W„hrungsWechKurs.FindCurrency(Datum,W„hrungCode,1);
      W„hrungsWechKurs.TESTFIELD("Exchange Rate Amount");
      W„hrungsWechKurs.TESTFIELD("Relational Exch. Rate Amount");
      BezugAufWechselkursbetr := W„hrungsWechKurs."Relational Exch. Rate Amount";
      WechselkursBetr := W„hrungsWechKurs."Exchange Rate Amount";
      BezugAufW„hrungscode := W„hrungsWechKurs."Relational Currency Code";
      IF W„hrungsWechKurs."Relational Currency Code" = '' THEN
        W„hrungsWechKurs."Exchange Rate Amount" := W„hrungFaktor * W„hrungsWechKurs."Relational Exch. Rate Amount"
      ELSE BEGIN
        W„hrungsWechKurs.FindCurrency(Datum,BezugAufW„hrungscode,2);
        W„hrungsWechKurs.TESTFIELD("Exchange Rate Amount");
        W„hrungsWechKurs.TESTFIELD("Relational Exch. Rate Amount");
        W„hrungsWechKurs."Exchange Rate Amount" := (W„hrungFaktor *
          (BezugAufWechselkursbetr * W„hrungsWechKurs."Relational Exch. Rate Amount"));
      END;
      EXIT(W„hrungsWechKurs."Exchange Rate Amount");
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header2': OnPreSectionSeiteSchleife_Header2(SeiteSchleife);
          'Header3': OnPreSectionSeiteSchleife_Header3(SeiteSchleife);
          'Header4': OnPreSectionSeiteSchleife_Header4(SeiteSchleife);
        END;
        'RundungsRahmen': CASE SectionId OF
          'Header6': OnPreSectionRundungsRahmen_Header6(RundungsRahmen);
          'Header7': OnPreSectionRundungsRahmen_Header7(RundungsRahmen);
          'Header8': OnPreSectionRundungsRahmen_Header8(RundungsRahmen);
          'Header9': OnPreSectionRundungsRahmen_Header9(RundungsRahmen);
          'Header10': OnPreSectionRundungsRahmen_Header10(RundungsRahmen);
          'Body11': OnPreSectionRundungsRahmen_Body11(RundungsRahmen);
          'Body12': OnPreSectionRundungsRahmen_Body12(RundungsRahmen);
          'Body13': OnPreSectionRundungsRahmen_Body13(RundungsRahmen);
          'Body14': OnPreSectionRundungsRahmen_Body14(RundungsRahmen);
          'Body15': OnPreSectionRundungsRahmen_Body15(RundungsRahmen);
          'Body16': OnPreSectionRundungsRahmen_Body16(RundungsRahmen);
          'Body17': OnPreSectionRundungsRahmen_Body17(RundungsRahmen);
          'Body18': OnPreSectionRundungsRahmen_Body18(RundungsRahmen);
          'Body19': OnPreSectionRundungsRahmen_Body19(RundungsRahmen);
          'Body20': OnPreSectionRundungsRahmen_Body20(RundungsRahmen);
          'Footer21': OnPreSectionRundungsRahmen_Footer21(RundungsRahmen);
          'Footer22': OnPreSectionRundungsRahmen_Footer22(RundungsRahmen);
          'Footer23': OnPreSectionRundungsRahmen_Footer23(RundungsRahmen);
          'Footer24': OnPreSectionRundungsRahmen_Footer24(RundungsRahmen);
          'Footer26': OnPreSectionRundungsRahmen_Footer26(RundungsRahmen);
          'Footer28': OnPreSectionRundungsRahmen_Footer28(RundungsRahmen);
          'Footer1': OnPreSectionRundungsRahmen_Footer1(RundungsRahmen);
          'Footer2': OnPreSectionRundungsRahmen_Footer2(RundungsRahmen);
          'Footer32': OnPreSectionRundungsRahmen_Footer32(RundungsRahmen);
        END;
        'Unterschrift2': CASE SectionId OF
          'Body33': OnPreSectionUnterschrift2_Body33(Unterschrift2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5014(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5015();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,VerkZeile.Amount);
                ReportForNav.AddTotal(DataItemId,1,VerkZeile."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,VerkZeile."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 VerkZeile.Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 VerkZeile."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 VerkZeile."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  RundungsRahmen, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
      -#DOCU#
      001 28.01.02 kn SC1.01: # Kap. C 2.1.2
          - Status, Lieferzeit (KW) drucken
          - bei Status Kalkulation Kalkulationsdaten drucken
      002 06.03.02 kn SC1.02 kn SC1.02: #01661
          Beleg nach Vorlage anpassen
      003 27.05.02 kn SC1.04: #02012
          - Textboxen im Kalkulation-Body vergr”ssert
          - Sachkonten-Zeilen nicht drucken
      004 20.06.02 wr SC1.07: #02035
          - Fax und Tel. werden in der Kontaktperson mit dem Schlssel
            Verkaufskopf."Interessent Nr.", Verkaufskopf."Kontaktperson Nr." nachgeschlagen
          - W„hrungskurs wird auch bei Angebotsstatus = gltig gedruckt,
            wenn EK- und VK-W„hrung unterschiedlich
          - Europarit„tstext gem Vorlage, falls "Euro-Parit„tsw„hrungscode" eingetragen
          - 'Einzelpreis EUR' in Einzelpreis EURO' ge„ndert
          - Wenn "Lieferzeit KW" und Lieferdatum unbestimmt, dann Liefertext = 'ab Lager'
      +#DOCU#
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="E_Mail_Salesperson_Purchaser">
          <DataField>E_Mail_Salesperson_Purchaser</DataField>
        </Field>
        <Field Name="Salesperson_Purchaserfirstname__Salesperson_PurchaserName">
          <DataField>Salesperson_Purchaserfirstname__Salesperson_PurchaserName</DataField>
        </Field>
        <Field Name="ansp_anrede">
          <DataField>ansp_anrede</DataField>
        </Field>
        <Field Name="ansp_telefon">
          <DataField>ansp_telefon</DataField>
        </Field>
        <Field Name="ansp_fax">
          <DataField>ansp_fax</DataField>
        </Field>
        <Field Name="E_Mail_Contact">
          <DataField>E_Mail_Contact</DataField>
        </Field>
        <Field Name="FaxNo_Contact">
          <DataField>FaxNo_Contact</DataField>
        </Field>
        <Field Name="PhoneNo_Contact">
          <DataField>PhoneNo_Contact</DataField>
        </Field>
        <Field Name="Anschrift2">
          <DataField>Anschrift2</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesHeader">
          <DataField>Sell_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="DocumentDate_SalesHeader">
          <DataField>DocumentDate_SalesHeader</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="KopieText">
          <DataField>KopieText</DataField>
        </Field>
        <Field Name="Anschrift9">
          <DataField>Anschrift9</DataField>
        </Field>
        <Field Name="Anschrift8">
          <DataField>Anschrift8</DataField>
        </Field>
        <Field Name="Anschrift7">
          <DataField>Anschrift7</DataField>
        </Field>
        <Field Name="Anschrift6">
          <DataField>Anschrift6</DataField>
        </Field>
        <Field Name="Anschrift5">
          <DataField>Anschrift5</DataField>
        </Field>
        <Field Name="Anschrift4">
          <DataField>Anschrift4</DataField>
        </Field>
        <Field Name="Anschrift3">
          <DataField>Anschrift3</DataField>
        </Field>
        <Field Name="Anschrift1">
          <DataField>Anschrift1</DataField>
        </Field>
        <Field Name="ihre_ref">
          <DataField>ihre_ref</DataField>
        </Field>
        <Field Name="SalesHeaderStatus">
          <DataField>SalesHeaderStatus</DataField>
        </Field>
        <Field Name="CurrencyFactor_SalesHeader">
          <DataField>CurrencyFactor_SalesHeader</DataField>
        </Field>
        <Field Name="CurrencyFactor_SalesHeaderFormat">
          <DataField>CurrencyFactor_SalesHeaderFormat</DataField>
        </Field>
        <Field Name="Einkaufswahrungsfaktor_SalesLine">
          <DataField>Einkaufswahrungsfaktor_SalesLine</DataField>
        </Field>
        <Field Name="Einkaufswahrungsfaktor_SalesLineFormat">
          <DataField>Einkaufswahrungsfaktor_SalesLineFormat</DataField>
        </Field>
        <Field Name="Einkaufswahrungscode_SalesLine">
          <DataField>Einkaufswahrungscode_SalesLine</DataField>
        </Field>
        <Field Name="CurrencyCode_SalesHeader">
          <DataField>CurrencyCode_SalesHeader</DataField>
        </Field>
        <Field Name="system_preisbindung">
          <DataField>system_preisbindung</DataField>
        </Field>
        <Field Name="Kontaktperson_kopie_SalesHeader">
          <DataField>Kontaktperson_kopie_SalesHeader</DataField>
        </Field>
        <Field Name="Text1">
          <DataField>Text1</DataField>
        </Field>
        <Field Name="Text1_SalesHeader">
          <DataField>Text1_SalesHeader</DataField>
        </Field>
        <Field Name="Text2_SalesHeader">
          <DataField>Text2_SalesHeader</DataField>
        </Field>
        <Field Name="Preis_info">
          <DataField>Preis_info</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
        <Field Name="lead_symbol">
          <DataField>lead_symbol</DataField>
        </Field>
        <Field Name="LineNo_VerkZeile">
          <DataField>LineNo_VerkZeile</DataField>
        </Field>
        <Field Name="Verpackungsmenge_Artikel">
          <DataField>Verpackungsmenge_Artikel</DataField>
        </Field>
        <Field Name="Verpackungsmenge_ArtikelFormat">
          <DataField>Verpackungsmenge_ArtikelFormat</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine">
          <DataField>UnitPrice_SalesLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLineFormat">
          <DataField>UnitPrice_SalesLineFormat</DataField>
        </Field>
        <Field Name="LieferText">
          <DataField>LieferText</DataField>
        </Field>
        <Field Name="Quantity_SalesLine">
          <DataField>Quantity_SalesLine</DataField>
        </Field>
        <Field Name="Quantity_SalesLineFormat">
          <DataField>Quantity_SalesLineFormat</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesLine">
          <DataField>Artikelnr2_SalesLine</DataField>
        </Field>
        <Field Name="SalesLineQuantity_SalesLineUnitPrice">
          <DataField>SalesLineQuantity_SalesLineUnitPrice</DataField>
        </Field>
        <Field Name="SalesLineQuantity_SalesLineUnitPriceFormat">
          <DataField>SalesLineQuantity_SalesLineUnitPriceFormat</DataField>
        </Field>
        <Field Name="msrp">
          <DataField>msrp</DataField>
        </Field>
        <Field Name="msrpFormat">
          <DataField>msrpFormat</DataField>
        </Field>
        <Field Name="Description2_SalesLine">
          <DataField>Description2_SalesLine</DataField>
        </Field>
        <Field Name="WEEE_Reg_Nr__ArtikelWEEE_Reg_Nr">
          <DataField>WEEE_Reg_Nr__ArtikelWEEE_Reg_Nr</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesLine">
          <DataField>Cross_ReferenceNo_SalesLine</DataField>
        </Field>
        <Field Name="Quotenr_SalesLine">
          <DataField>Quotenr_SalesLine</DataField>
        </Field>
        <Field Name="ProfitPct_SalesLine">
          <DataField>ProfitPct_SalesLine</DataField>
        </Field>
        <Field Name="ProfitPct_SalesLineFormat">
          <DataField>ProfitPct_SalesLineFormat</DataField>
        </Field>
        <Field Name="VK_Preis_MW_SalesLine">
          <DataField>VK_Preis_MW_SalesLine</DataField>
        </Field>
        <Field Name="VK_Preis_MW_SalesLineFormat">
          <DataField>VK_Preis_MW_SalesLineFormat</DataField>
        </Field>
        <Field Name="DC_Preis_Wahrung_SalesLine">
          <DataField>DC_Preis_Wahrung_SalesLine</DataField>
        </Field>
        <Field Name="DC_Preis_Wahrung_SalesLineFormat">
          <DataField>DC_Preis_Wahrung_SalesLineFormat</DataField>
        </Field>
        <Field Name="DC_Preis_MW_SalesLine">
          <DataField>DC_Preis_MW_SalesLine</DataField>
        </Field>
        <Field Name="DC_Preis_MW_SalesLineFormat">
          <DataField>DC_Preis_MW_SalesLineFormat</DataField>
        </Field>
        <Field Name="ZollsatzPct_Artikel">
          <DataField>ZollsatzPct_Artikel</DataField>
        </Field>
        <Field Name="ZollsatzPct_ArtikelFormat">
          <DataField>ZollsatzPct_ArtikelFormat</DataField>
        </Field>
        <Field Name="DC_Preis_EKW_SalesLine">
          <DataField>DC_Preis_EKW_SalesLine</DataField>
        </Field>
        <Field Name="DC_Preis_EKW_SalesLineFormat">
          <DataField>DC_Preis_EKW_SalesLineFormat</DataField>
        </Field>
        <Field Name="VK_Preis_EKW_SalesLine">
          <DataField>VK_Preis_EKW_SalesLine</DataField>
        </Field>
        <Field Name="VK_Preis_EKW_SalesLineFormat">
          <DataField>VK_Preis_EKW_SalesLineFormat</DataField>
        </Field>
        <Field Name="HandlingskostenPct_SalesLine">
          <DataField>HandlingskostenPct_SalesLine</DataField>
        </Field>
        <Field Name="HandlingskostenPct_SalesLineFormat">
          <DataField>HandlingskostenPct_SalesLineFormat</DataField>
        </Field>
        <Field Name="lead_free_text0">
          <DataField>lead_free_text0</DataField>
        </Field>
        <Field Name="lead_free_text1">
          <DataField>lead_free_text1</DataField>
        </Field>
        <Field Name="lead_free_text2">
          <DataField>lead_free_text2</DataField>
        </Field>
        <Field Name="lead_text">
          <DataField>lead_text</DataField>
        </Field>
        <Field Name="wahrung">
          <DataField>wahrung</DataField>
        </Field>
        <Field Name="v_sum_system">
          <DataField>v_sum_system</DataField>
        </Field>
        <Field Name="v_sum_systemFormat">
          <DataField>v_sum_systemFormat</DataField>
        </Field>
        <Field Name="minbestellwert">
          <DataField>minbestellwert</DataField>
        </Field>
        <Field Name="preisstellung">
          <DataField>preisstellung</DataField>
        </Field>
        <Field Name="versand">
          <DataField>versand</DataField>
        </Field>
        <Field Name="STRSUBSTNO__Pct1_ZlgBedDescription">
          <DataField>STRSUBSTNO__Pct1_ZlgBedDescription</DataField>
        </Field>
        <Field Name="STRSUBSTNO__inEURzumTageskursderLieferung">
          <DataField>STRSUBSTNO__inEURzumTageskursderLieferung</DataField>
        </Field>
        <Field Name="STRSUBSTNO__1EUR_Pct1Pct2Rechnungsstellungerfolgt_SalesHeade">
          <DataField>STRSUBSTNO__1EUR_Pct1Pct2Rechnungsstellungerfolgt_SalesHeade</DataField>
        </Field>
        <Field Name="VerkauferTextInnen">
          <DataField>VerkauferTextInnen</DataField>
        </Field>
        <Field Name="VerkauferText">
          <DataField>VerkauferText</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

