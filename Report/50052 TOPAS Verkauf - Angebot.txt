OBJECT Report 50052 TOPAS Verkauf - Angebot
{
  OBJECT-PROPERTIES
  {
    Date=09.02.18;
    Time=14:17:26;
    Modified=Yes;
    Version List=Beleg - manuell --> 50152,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   ;ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Quote));
               ReqFilterHeadingML=DEU=Verkaufsangebot;
               OnPreDataItem=BEGIN
                               Firmendaten.GET;
                               FormatAdr.Company(FirmaAdr,Firmendaten);
                               Firmendaten.CALCFIELDS("ISO Logo",Picture);
                             END;

               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    IF VerkEinkPerson."Fax No." = '' THEN BEGIN
                                      Verk„uferText := STRSUBSTNO ('i.A. %1', VerkEinkPerson.Name);
                                      Verk„uferText1 := '';
                                      Verk„uferText2 := STRSUBSTNO ('(Tel. %1)', VerkEinkPerson."First name");
                                    END ELSE BEGIN
                                      Verk„uferText := STRSUBSTNO ('i.A. %1', VerkEinkPerson.Name);
                                      Verk„uferText1 := STRSUBSTNO ('%1',VerkEinkPerson."Fax No.");
                                      Verk„uferText2 := STRSUBSTNO ('(Tel. %1)', VerkEinkPerson."First name");
                                    END;
                                  END;
                                  // -002.1
                                  IF "Sales Header"."Betreuer Innendienst" = '' THEN BEGIN
                                    VerkEinkPersonInnen.INIT;
                                    Verk„uferTextInnen := '';
                                  END ELSE BEGIN
                                    VerkEinkPersonInnen.GET("Sales Header"."Betreuer Innendienst");
                                    IF VerkEinkPersonInnen."Fax No." ='' THEN BEGIN
                                      Verk„uferTextInnen := STRSUBSTNO ('i.A. %1', VerkEinkPersonInnen.Name);
                                      Verk„uferText1Innen := '';
                                      Verk„uferText2Innen := STRSUBSTNO ('(Tel. %1)', VerkEinkPersonInnen."First name");
                                    END ELSE BEGIN
                                      Verk„uferTextInnen := STRSUBSTNO ('i.A. %1', VerkEinkPersonInnen.Name);
                                      Verk„uferText1Innen := STRSUBSTNO ('%1', VerkEinkPersonInnen."Fax No.");
                                      Verk„uferText2Innen := STRSUBSTNO ('(Tel. %1)', VerkEinkPersonInnen."First name");
                                    END;
                                  END;
                                  IF ("Salesperson Code" = '') AND
                                     ("Sales Header"."Betreuer Innendienst" = '') THEN
                                    AngebotsText := STRSUBSTNO('Angebot Nr. %1',"Sales Header"."No.")
                                  ELSE
                                    IF ("Salesperson Code" = '') THEN
                                      AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2',"Sales Header"."No.",
                                        "Sales Header"."Betreuer Innendienst")
                                    ELSE
                                      IF ("Sales Header"."Betreuer Innendienst" = '') THEN
                                        AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2',"Sales Header"."No.",
                                          "Sales Header"."Salesperson Code")
                                      ELSE
                                        AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2 / %3',"Sales Header"."No.",
                                          "Sales Header"."Betreuer Innendienst", "Sales Header"."Salesperson Code");
                                  // +002.1
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  //Auskommentiert am 27.03.08
                                  // -002.2
                                  //  Fracht := LieferBed."Frachtwert (netto MW)";
                                  // +002.2
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                  // -002.3
                                    PreisText := FIBUEinrichtung."LCY Code";
                                  // +002.3
                                  // -004.4
                                    IF PreisText = 'EUR' THEN
                                      PreisText += 'O';
                                  // +004.4
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                  //Auskommentiert am 27.03.08 A
                                  // -002.4
                                    PreisText := "Currency Code";
                                  //  Fracht := ROUND (W„hrungsWechKurs.ExchangeAmtLCYToFCY ("Sales Header"."Document Date",
                                  //    "Sales Header"."Currency Code", LieferBed."Frachtwert (netto MW)",
                                  //    "Sales Header"."Currency Factor"));
                                  //Auskommentiert am 27.03.08 E
                                  // +002.4
                                  END;
                                  // -002.5
                                  //FormatAdr.VerkKopfRechAn(DebAdr,Verkaufskopf);
                                  FrachtText := 'zzgl. ' + PreisText +'  ' + FORMAT (Fracht,0,'<Precision,2:><Standard Format,0>');
                                  FormatAdr.SalesHeaderSellTo(DebAdr,"Sales Header");
                                  // +002.5
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");
                                  FormatAdr.SalesHeaderShipTo(LieferAnAdr,"Sales Header");
                                  LiefAdrAnzeigen := "Sell-to Customer No." <> "Bill-to Customer No.";
                                  FOR i := 1 TO ARRAYLEN(LieferAnAdr) DO
                                    IF LieferAnAdr[i] <> DebAdr[i] THEN
                                      LiefAdrAnzeigen := TRUE;
                                  //Auskommentiert am 27.03.08
                                  // -001.1
                                  Verkaufsw„hrungskurs := WechKursBetrag (WORKDATE,"Currency Code", "Currency Factor");
                                  //Einkaufsw„hrungskurs := WechKursBetrag (WORKDATE, Einkaufsw„hrungscode, Einkaufsw„hrungsfaktor);
                                  IF NOT Deb.GET ("Sales Header"."Sell-to Customer No.") THEN
                                    Deb.INIT;
                                  // +001.1
                                  IF "Currency Code" = '' THEN
                                    w„hrung := '°'
                                  ELSE
                                    w„hrung := "Currency Code";
                                  lead_free_text0 := '';
                                  lead_free_text1 := '';
                                  lead_free_text2 := '';
                                  lead_text := '';
                                  v_FER_SPL := FALSE;
                                  v_sum_system := 0;
                                  VerkZeile1.RESET;
                                  VerkZeile1.SETRANGE("Document No.","Sales Header"."No.");
                                  VerkZeile1.SETRANGE(Type,VerkZeile1.Type::Item);
                                  VerkZeile1.SETFILTER("Manufacturer Code",'20|57|5710|5720|59|82|85|96');
                                  IF VerkZeile1.FINDFIRST THEN
                                    v_system := TRUE;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN
                                    preisstellung := STRSUBSTNO(':    in %1 zzgl. MwSt',PreisText)
                                  ELSE
                                    preisstellung := STRSUBSTNO(':    in %1 plus V.A.T. if applicable',PreisText);
                                END;

               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table5050;
               DataItemLink=No.=FIELD(Kontaktnr.) }

    { 4   ;1   ;DataItem;                    ;
               DataItemTable=Table5069;
               DataItemTableView=SORTING(Salutation Code,Language Code,Salutation Type)
                                 WHERE(Salutation Type=FILTER(Formal));
               OnPreDataItem=BEGIN
                               "Salutation Formula".SETFILTER("Salutation Formula"."Salutation Code",Contact."Salutation Code");
                               IF "Salutation Formula".FINDFIRST THEN ;
                             END;

               DataItemLink=Language Code=FIELD(Language Code) }

    { 5   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               DataItemTableView=SORTING(Code);
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 6   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=VAR
                                  NamePart@1140001 : ARRAY [5] OF Text[50];
                                  SubStr@1140002 : Text[30];
                                  i@1140003 : Integer;
                                BEGIN
                                  CLEAR(VerkZeile);
                                  CLEAR(VerkBuchen);
                                  VerkBuchen.GetSalesLines("Sales Header",VerkZeile,0);
                                  KopieText := '';
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    Preis_info := 'Einzelpreis je Stck in ' + w„hrung;
                                    IF Number > 1 THEN KopieText := 'skopie';
                                    ReportForNav.PageNo := 1;
                                  END ELSE BEGIN
                                    Preis_info := 'Price per piece in ' + w„hrung;
                                    IF Number > 1 THEN KopieText := ' Copy';
                                    ReportForNav.PageNo := 1;
                                  END;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    //*** Versandbedingungen
                                    versand := '';
                                    IF "Sales Header"."Shipment Method Code" <> 'AB_HAN' THEN BEGIN
                                      versand := ':    '+LieferBed.Description;
                                    END;
                                    IF "Sales Header"."Shipment Method Code" ='AB_HAN' THEN BEGIN
                                      IF "Sales Header"."Currency Code" = 'USD' THEN versand := ':    Lieferungen ab 2.500,-- USD frei Haus';
                                      IF "Sales Header"."Currency Code" = '' THEN versand := ':    Lieferungen ab 2.500,-- EURO frei Haus';
                                      IF "Sales Header"."Currency Code" = 'YEN' THEN versand := ':    Lieferungen ab 250.000,-- JPY frei Haus';
                                    END;
                                    IF "Sales Header"."Currency Code" = 'USD' THEN minbestellwert := ':    500,-- USD';
                                    IF "Sales Header"."Currency Code" = '' THEN minbestellwert := ':    50,-- EURO';
                                    IF "Sales Header"."Currency Code" = 'YEN' THEN minbestellwert := ':    50.000,-- JPY';
                                    //**********************
                                  END ELSE BEGIN
                                    //*** Versandbedingungen
                                    versand := '';
                                    IF "Sales Header"."Shipment Method Code" = 'FOB' THEN BEGIN
                                      versand := ':    FOB';
                                    END ELSE BEGIN
                                      IF "Sales Header"."Shipment Method Code" = 'FHAUS' THEN
                                        versand := ':    ex works'
                                      ELSE
                                        versand := ':    ' + LieferBed.Description;
                                    END;
                                    IF "Sales Header"."Currency Code" = 'USD' THEN minbestellwert := ':    500,-- USD';
                                    IF "Sales Header"."Currency Code" = '' THEN BEGIN
                                      IF "Sales Header"."Sell-to Country/Region Code" = 'DE' THEN
                                        minbestellwert := ':    50,-- EURO'
                                      ELSE
                                        minbestellwert := ':    250,-- EURO';
                                    END;
                                    IF "Sales Header"."Currency Code" = 'YEN' THEN minbestellwert := ':    50.000,-- JPY';
                                    //**********************
                                  END;

                                  ende := FALSE;
                                  x := 1;
                                  text2 := "Sales Header".Kontaktperson;
                                    REPEAT
                                      IF DebAdr[x] = "Sales Header"."Sell-to Customer Name" THEN BEGIN
                                        IF DebAdr[x+1] = "Sales Header"."Sell-to Customer Name 2" THEN BEGIN
                                          Anschrift[x] := DebAdr[x];
                                          Anschrift[x+1] := DebAdr[x+1];
                                          Anschrift[x+2] := text2;
                                          Anschrift[x+3] := DebAdr[x+2];
                                          Anschrift[x+4] := DebAdr[x+3];
                                          Anschrift[x+5] := DebAdr[x+4];
                                          Anschrift[x+6] := DebAdr[x+5];
                                          Anschrift[x+7] := DebAdr[x+6];
                                          Anschrift[x+8] := DebAdr[x+7];
                                          ende := TRUE;
                                        END ELSE BEGIN
                                          Anschrift[x] := DebAdr[x];
                                          Anschrift[x+1] := text2;
                                          Anschrift[x+2] := DebAdr[x+1];
                                          Anschrift[x+3] := DebAdr[x+2];
                                          Anschrift[x+4] := DebAdr[x+3];
                                          Anschrift[x+5] := DebAdr[x+4];
                                          Anschrift[x+6] := DebAdr[x+5];
                                          Anschrift[x+7] := DebAdr[x+6];
                                          Anschrift[x+8] := DebAdr[x+7];
                                          ende := TRUE;
                                        END;
                                      END;
                                      i := i + 1;
                                    UNTIL (i = 9) OR (ende);
                                  //*** Kontaktperson NEU
                                  IF (Contact."Salutation Code" = 'MANDANT') OR (Contact."Salutation Code" = '') THEN
                                    Text1 := "Salutation Formula".Salutation
                                  ELSE
                                    IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                      Anrede.Salutation := DELSTR("Salutation Formula".Salutation,19);
                                      Text1 := Anrede.Salutation + ' ' + Contact.Surname + ',';
                                    END ELSE BEGIN
                                      Anrede.Salutation := DELSTR("Salutation Formula".Salutation,9);
                                      Text1 := Anrede.Salutation + ' ' + Contact.Surname + ',';
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkDruckZ„hler.RUN("Sales Header");
                              END;
                               }

    { 7   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 8   ;3   ;Column  ;Picture_Firmendaten ;
               SourceExpr=Firmendaten.Picture }

    { 9   ;3   ;Column  ;ISOLogo_Firmendaten ;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ', ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               SourceExpr=CompanyInfo[15] }

    { 10  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 12  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 13  ;3   ;Column  ;ansp_anrede         ;
               SourceExpr=ansp_anrede }

    { 11  ;3   ;Column  ;ansp_telefon        ;
               SourceExpr=ansp_telefon }

    { 14  ;3   ;Column  ;ansp_fax            ;
               SourceExpr=ansp_fax }

    { 15  ;3   ;Column  ;E_Mail_Contact      ;
               SourceExpr=Contact."E-Mail" }

    { 16  ;3   ;Column  ;FaxNo_Contact       ;
               SourceExpr=Contact."Fax No." }

    { 17  ;3   ;Column  ;PhoneNo_Contact     ;
               SourceExpr=Contact."Phone No." }

    { 18  ;3   ;Column  ;Anschrift2          ;
               SourceExpr=Anschrift[2] }

    { 19  ;3   ;Column  ;Sell_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 20  ;3   ;Column  ;DocumentDate_SalesHeader;
               SourceExpr="Sales Header"."Document Date" }

    { 21  ;3   ;Column  ;No_SalesHeader      ;
               SourceExpr="Sales Header"."No." }

    { 22  ;3   ;Column  ;ReportForNavPageNo  ;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 23  ;3   ;Column  ;KopieText           ;
               SourceExpr=KopieText }

    { 24  ;3   ;Column  ;Anschrift9          ;
               SourceExpr=Anschrift[9] }

    { 25  ;3   ;Column  ;Anschrift8          ;
               SourceExpr=Anschrift[8] }

    { 26  ;3   ;Column  ;Anschrift7          ;
               SourceExpr=Anschrift[7] }

    { 27  ;3   ;Column  ;Anschrift6          ;
               SourceExpr=Anschrift[6] }

    { 28  ;3   ;Column  ;Anschrift5          ;
               SourceExpr=Anschrift[5] }

    { 29  ;3   ;Column  ;Anschrift4          ;
               SourceExpr=Anschrift[4] }

    { 30  ;3   ;Column  ;Anschrift3          ;
               SourceExpr=Anschrift[3] }

    { 31  ;3   ;Column  ;Anschrift1          ;
               SourceExpr=Anschrift[1] }

    { 32  ;3   ;Column  ;ihre_ref            ;
               SourceExpr=ihre_ref }

    { 33  ;3   ;Column  ;SalesHeaderStatus   ;
               SourceExpr=FORMAT("Sales Header".Status) }

    { 34  ;3   ;Column  ;CurrencyFactor_SalesHeader;
               SourceExpr="Sales Header"."Currency Factor" }

    { 35  ;3   ;Column  ;Einkaufswahrungsfaktor_SalesLine;
               SourceExpr="Sales Line".Einkaufsw„hrungsfaktor }

    { 36  ;3   ;Column  ;Einkaufswahrungscode_SalesLine;
               SourceExpr="Sales Line".Einkaufsw„hrungscode }

    { 37  ;3   ;Column  ;CurrencyCode_SalesHeader;
               SourceExpr="Sales Header"."Currency Code" }

    { 38  ;3   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  Einkaufsw„hrungskurs := WechKursBetrag (WORKDATE, Einkaufsw„hrungscode, Einkaufsw„hrungsfaktor);
                                END;

               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 39  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := VerkZeile.FIND('+');
                               WHILE MehrZeilen AND (VerkZeile.Description = '') AND
                                     (VerkZeile."No." = '') AND (VerkZeile.Quantity = 0) AND
                                     (VerkZeile.Amount = 0)
                               DO
                                 MehrZeilen :=VerkZeile.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               VerkZeile.SETRANGE("Line No.",0,VerkZeile."Line No.");
                               SETRANGE(Number,1,VerkZeile.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    VerkZeile.FIND('-')
                                  ELSE
                                    VerkZeile.NEXT;
                                  "Sales Line" := VerkZeile;
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "Sales Line"."VAT %";
                                  MWSTBetragZeile."VAT Base" := "Sales Line".Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Sales Line"."Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;
                                  // -001.2
                                  IF NOT Artikel.GET ("Sales Line"."No.") THEN
                                    Artikel.INIT;
                                  // +001.2
                                   LieferText:="Sales Line".LZ_Text;
                                  {
                                  // Lead Free
                                  IF "Sales Line".Type="Sales Line".Type::Item THEN
                                  BEGIN
                                  leadfree_symbol:='';
                                  leadfree_artikel.SETFILTER(leadfree_artikel."No.",'%1',"Sales Line"."No.");
                                  IF leadfree_artikel.FIND('-') THEN
                                     BEGIN
                                       IF (leadfree_artikel."Lead Free" = TRUE) AND
                                          (NOT(leadfree_artikel.Herstellerkurzname = 'HAL') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'SYN') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'IDT') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'PLX') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'TDK') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'TSC') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'JEL') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'SIM') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'NEX') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'LSI') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'WML') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'SIW') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'ACL') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'ICP') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'RIC') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'ICSA') AND
                                           NOT(leadfree_artikel.Herstellerkurzname = 'ICS'))
                                          THEN
                                          BEGIN
                                             leadfree_symbol:='ø';
                                             IF CurrReport.LANGUAGE = 1031 THEN
                                                BEGIN
                                                  lead_free_text1 := ' ø Diese Bauteile sind nach Angabe des Herstellers bleifrei.';
                                                  lead_free_text2 := 'Bitte beachten Sie gegebenenfalls die neue Bestellbezeichnung.';
                                                END
                                             ELSE
                                                BEGIN
                                                  lead_free_text1 := ' ø According to manufacturer these parts are leadfree.';
                                                  lead_free_text2 := 'Please note the new part number where applicable.';
                                               END;
                                          END;
                                       IF (leadfree_artikel."Lead Free" = TRUE) AND
                                          ((leadfree_artikel.Herstellerkurzname = 'HAL') OR
                                          (leadfree_artikel.Herstellerkurzname = 'SYN') OR
                                          (leadfree_artikel.Herstellerkurzname = 'IDT') OR
                                          (leadfree_artikel.Herstellerkurzname = 'PLX') OR
                                          (leadfree_artikel.Herstellerkurzname = 'TDK') OR
                                          (leadfree_artikel.Herstellerkurzname = 'TSC') OR
                                          (leadfree_artikel.Herstellerkurzname = 'JEL') OR
                                          (leadfree_artikel.Herstellerkurzname = 'SIM') OR
                                          (leadfree_artikel.Herstellerkurzname = 'NEX') OR
                                          (leadfree_artikel.Herstellerkurzname = 'LSI') OR
                                          (leadfree_artikel.Herstellerkurzname = 'WML') OR
                                          (leadfree_artikel.Herstellerkurzname = 'SIW') OR
                                          (leadfree_artikel.Herstellerkurzname = 'ACL') OR
                                          (leadfree_artikel.Herstellerkurzname = 'ICP') OR
                                          (leadfree_artikel.Herstellerkurzname = 'RIC') OR
                                          (leadfree_artikel.Herstellerkurzname = 'ICSA') OR
                                          (leadfree_artikel.Herstellerkurzname = 'ICS'))
                                          THEN
                                          BEGIN
                                             leadfree_symbol:='øø';
                                             IF CurrReport.LANGUAGE = 1031 THEN
                                                BEGIN
                                                   lead_free_text0 := 'øø Diese Bauteile sind nach Angabe des Herstellers RoHS konform.';
                                                   lead_free_text2 := 'Bitte beachten Sie gegebenenfalls die neue Bestellbezeichnung.';
                                                END
                                                ELSE
                                                BEGIN
                                                   lead_free_text0 := 'øø  According to manufacturer these parts are RoHS compliant.';
                                                   lead_free_text2 := 'Please note the new part number where applicable.';
                                                END;
                                          END;
                                     END;
                                   END;
                                  }
                                  //20.08.09-ST Andruck, wenn Artikel bleihaltig ist
                                  IF "Sales Line".Type="Sales Line".Type::Item THEN
                                    BEGIN
                                      lead_symbol:='';
                                      lead_artikel.SETFILTER(lead_artikel."No.",'%1',"Sales Line"."No.");
                                      IF lead_artikel.FINDFIRST THEN
                                        BEGIN
                                          IF (lead_artikel."Lead Free" = FALSE) AND (lead_artikel."Item Tracking Code" = 'DATECODE') THEN
                                            BEGIN
                                              lead_symbol := 'ø';
                                              IF CurrReport.LANGUAGE = 1031 THEN
                                                BEGIN
                                                  lead_text := 'ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.';
                                                END
                                              ELSE
                                                BEGIN
                                                  lead_text := 'ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
                                                END;
                                            END;
                                        END;
                                    END;
                                   IF v_FER_SPL=FALSE THEN BEGIN
                                     IF (("Sales Line"."Manufacturer Code" ='82') OR ("Sales Line"."Manufacturer Code" = '85')) THEN BEGIN
                                      v_FER_SPL:=TRUE;
                                     END;
                                   END;
                                  //2015-07-10 ST MSRP Andruck fr Systeme, anstatt VPE
                                  msrp := 0;
                                  IF v_system = TRUE THEN
                                    BEGIN
                                      WITH FindSalesPrice DO BEGIN
                                        SETRANGE("Item No.","Sales Line"."No.");
                                        SETFILTER("Ending Date",'%1|>=%2',0D,WORKDATE);
                                        SETFILTER("Currency Code",'%1',"Sales Header"."Currency Code");
                                        IF "Sales Line"."Unit of Measure" <> '' THEN
                                          SETFILTER("Unit of Measure Code",'%1|%2',"Sales Line"."Unit of Measure",'');
                                        SETRANGE("Starting Date",0D,WORKDATE);
                                        SETRANGE("Sales Type","Sales Type"::"All Customers");
                                        SETRANGE("Sales Code");
                                        IF FINDLAST THEN
                                          msrp := FindSalesPrice."Unit Price";
                                      END;
                                    END;
                                END;

               OnPostDataItem=BEGIN
                                VerkZeile.DELETEALL;
                              END;
                               }

    { 40  ;4   ;Column  ;Kontaktperson_kopie_SalesHeader;
               SourceExpr="Sales Header"."Kontaktperson (kopie)" }

    { 41  ;4   ;Column  ;Text1               ;
               SourceExpr=Text1 }

    { 42  ;4   ;Column  ;Text1_SalesHeader   ;
               SourceExpr="Sales Header".Text1 }

    { 43  ;4   ;Column  ;Text2_SalesHeader   ;
               SourceExpr="Sales Header".Text2 }

    { 44  ;4   ;Column  ;Preis_info          ;
               SourceExpr=Preis_info }

    { 45  ;4   ;Column  ;Description_SalesLine;
               SourceExpr="Sales Line".Description }

    { 46  ;4   ;Column  ;lead_symbol         ;
               SourceExpr=lead_symbol }

    { 47  ;4   ;Column  ;LineNo_VerkZeile    ;
               SourceExpr=VerkZeile."Line No." }

    { 48  ;4   ;Column  ;Verpackungsmenge_Artikel;
               DecimalPlaces=0:0;
               SourceExpr=Artikel.Verpackungsmenge }

    { 49  ;4   ;Column  ;UnitPrice_SalesLine ;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 50  ;4   ;Column  ;LieferText          ;
               SourceExpr=LieferText }

    { 51  ;4   ;Column  ;Quantity_SalesLine  ;
               SourceExpr="Sales Line".Quantity }

    { 52  ;4   ;Column  ;Artikelnr2_SalesLine;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 53  ;4   ;Column  ;SalesLineQuantity_SalesLineUnitPrice;
               SourceExpr=("Sales Line".Quantity*"Sales Line"."Unit Price") }

    { 54  ;4   ;Column  ;msrp                ;
               DecimalPlaces=0:0;
               SourceExpr=msrp }

    { 55  ;4   ;Column  ;Description2_SalesLine;
               SourceExpr="Sales Line"."Description 2" }

    { 56  ;4   ;Column  ;WEEE_Reg_Nr__ArtikelWEEE_Reg_Nr;
               SourceExpr='WEEE-Reg.-Nr.: '+ Artikel."WEEE-Reg.-Nr." }

    { 57  ;4   ;Column  ;Cross_ReferenceNo_SalesLine;
               SourceExpr="Sales Line"."Cross-Reference No." }

    { 58  ;4   ;Column  ;Quotenr_SalesLine   ;
               SourceExpr="Sales Line"."Quotenr." }

    { 59  ;4   ;Column  ;ProfitPct_SalesLine ;
               SourceExpr="Sales Line"."Profit %" }

    { 60  ;4   ;Column  ;VK_Preis_MW_SalesLine;
               SourceExpr="Sales Line"."VK-Preis (MW)" }

    { 61  ;4   ;Column  ;DC_Preis_Wahrung_SalesLine;
               SourceExpr="Sales Line"."DC-Preis (W„hrung)" }

    { 62  ;4   ;Column  ;DC_Preis_MW_SalesLine;
               SourceExpr="Sales Line"."DC-Preis (MW)" }

    { 63  ;4   ;Column  ;ZollsatzPct_Artikel ;
               SourceExpr=Artikel."Zollsatz %" }

    { 64  ;4   ;Column  ;DC_Preis_EKW_SalesLine;
               SourceExpr="Sales Line"."DC-Preis (EKW)" }

    { 65  ;4   ;Column  ;VK_Preis_EKW_SalesLine;
               SourceExpr="Sales Line"."VK-Preis (EKW)" }

    { 66  ;4   ;Column  ;HandlingskostenPct_SalesLine;
               SourceExpr="Sales Line"."Handlingskosten %" }

    { 67  ;4   ;Column  ;lead_free_text0     ;
               SourceExpr=lead_free_text0 }

    { 68  ;4   ;Column  ;lead_free_text1     ;
               SourceExpr=lead_free_text1 }

    { 69  ;4   ;Column  ;lead_free_text2     ;
               SourceExpr=lead_free_text2 }

    { 70  ;4   ;Column  ;lead_text           ;
               SourceExpr=lead_text }

    { 71  ;4   ;Column  ;wahrung             ;
               SourceExpr=w„hrung }

    { 72  ;4   ;Column  ;v_sum_system        ;
               SourceExpr=v_sum_system }

    { 73  ;4   ;Column  ;minbestellwert      ;
               SourceExpr=minbestellwert }

    { 74  ;4   ;Column  ;preisstellung       ;
               SourceExpr=preisstellung }

    { 75  ;4   ;Column  ;versand             ;
               SourceExpr=versand }

    { 76  ;4   ;Column  ;STRSUBSTNO__Pct1_ZlgBedDescription;
               SourceExpr=STRSUBSTNO(':    %1',ZlgBed.Description) }

    { 77  ;4   ;Column  ;STRSUBSTNO__inEURzumTageskursderLieferung;
               SourceExpr=STRSUBSTNO(':    in EUR zum Tageskurs der Lieferung') }

    { 78  ;4   ;Column  ;STRSUBSTNO__1EUR_Pct1Pct2Rechnungsstellungerfolgt_SalesHeade;
               SourceExpr=STRSUBSTNO(':    1 EUR=%1 %2 Rechnungsstellung erfolgt', "Sales Header"."Euro-Parit„tsw„hrungscode", "Sales Header"."Euro-Parit„tsw„hrungsfaktor") }

    { 79  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 80  ;3   ;DataItem;Unterschrift2       ;
               DataItemTable=Table18;
               DataItemLinkReference=Sales Header;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 81  ;4   ;Column  ;VerkauferTextInnen  ;
               SourceExpr=Verk„uferTextInnen }

    { 82  ;4   ;Column  ;VerkauferText       ;
               SourceExpr=Verk„uferText }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   v_total_drucken:=FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 2   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=Unterzeichner2 }

      { 1140002;2;Field     ;
                  CaptionML=DEU=Totalbetrag drucken;
                  SourceExpr=v_total_drucken }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      LieferBed@1140001 : Record 10;
      ZlgBed@1140002 : Record 3;
      VerkEinkPerson@1140003 : Record 13;
      Firmendaten@1140004 : Record 79;
      MWSTBetragZeile@1140005 : TEMPORARY Record 290;
      VerkZeile@1140006 : TEMPORARY Record 37;
      W„hrungsWechKurs@1000000005 : Record 330;
      Artikel@1000000004 : Record 27;
      Deb@1000000003 : Record 18;
      VerkEinkPersonInnen@1000000002 : Record 13;
      VerkZeile1@1000000011 : Record 37;
      FindSalesPrice@1000000010 : Record 7002;
      Anrede@1000000009 : Record 5069;
      Salutation@1000000008 : Record 5068;
      Kontakt@1000000007 : Record 5050;
      language@1000000006 : Record 8;
      Benutzer@1000000012 : Record 2000000120;
      VerkDruckZ„hler@1140007 : Codeunit 313;
      FormatAdr@1140008 : Codeunit 365;
      VerkBuchen@1140009 : Codeunit 80;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      Anschrift@1140011 : ARRAY [9] OF Text[50];
      LieferAnAdr@1140012 : ARRAY [8] OF Text[50];
      FirmaAdr@1140013 : ARRAY [8] OF Text[50];
      CompanyInfo@1000000013 : ARRAY [15] OF Text;
      Verk„uferText@1140014 : Text[100];
      MWStNrText@1140015 : Text[30];
      ReferenzText@1140016 : Text[30];
      TotalText@1140017 : Text[50];
      TotalInklMWStText@1140018 : Text[50];
      MehrZeilen@1140019 : Boolean;
      AnzKopien@1140020 : Integer;
      AnzSchleifen@1140021 : Integer;
      KopieText@1140022 : Text[30];
      LiefAdrAnzeigen@1140023 : Boolean;
      i@1140024 : Integer;
      "** Scantec **"@1140025 : Integer;
      Einkaufsw„hrungskurs@1140030 : Decimal;
      Verkaufsw„hrungskurs@1140031 : Decimal;
      Fracht@1140032 : Decimal;
      PreisText@1140033 : Text[30];
      LieferText@1140034 : Text[30];
      FrachtText@1140035 : Text[100];
      AngebotsText@1140036 : Text[100];
      Verk„uferTextInnen@1140037 : Text[100];
      Verk„uferText1@1140038 : Text[100];
      Verk„uferText2@1140039 : Text[100];
      Verk„uferText1Innen@1140040 : Text[100];
      Verk„uferText2Innen@1140041 : Text[100];
      Text1@1140042 : Text[90];
      text2@1140043 : Text[90];
      Text3@1140070 : Text[90];
      w„hrung@1140044 : Text[10];
      Unterzeichner1@1140045 : Text[10];
      Unterzeichner2@1140046 : Text[10];
      versand@1140048 : Text[100];
      minbestellwert@1140049 : Text[30];
      lead_free_text0@1140050 : Text[80];
      lead_free_text1@1140051 : Text[120];
      leadfree_symbol@1140052 : Text[3];
      leadfree_artikel@1140053 : Record 27;
      lead_artikel@1140077 : Record 27;
      lead_symbol@1140079 : Text[3];
      lead_text@1140078 : Text[120];
      lead_free_text2@1140054 : Text[120];
      Faxnummer@1140055 : TextConst 'DEU=@@NMR +49 5119686464@@';
      Faxpriorit„t@1140056 : TextConst 'DEU=@@PRI 0@@';
      Faxaufl”sung@1140057 : TextConst 'DEU=@@AFL HOCH@@';
      Faxzustellbest„tigung@1140058 : TextConst 'DEU=@@ZSB 1@@';
      Faxparameter@1140059 : Text[210];
      Faxbetreff@1140060 : Text[100];
      ansp_fax@1140061 : Text[30];
      ansp_telefon@1140062 : Text[30];
      ansp_anrede@1140063 : Text[40];
      ihre_ref@1140064 : Text[90];
      preisstellung@1140065 : Text[60];
      Preis_info@1140066 : Text[45];
      NamePart@1140072 : ARRAY [5] OF Text[50];
      Text000@1000000000 : TextConst 'DEU=Fehlende Zuordnung zwischen %1 (%2) und %3 in der Tabelle %4. Bitte wenden Sie sich an Ihren Systemadministrator.';
      Text021@1140073 : TextConst 'DEU=Sie mssen formelle und informelle Anredeformeln in der Sprache %1 fr den Kontakt %2 einrichten.;ENU=You have to set up formal and informal salutation formulas in %1  language for the %2 contact.';
      Zusatz@1140074 : Text[30];
      x@1140075 : Integer;
      ende@1140076 : Boolean;
      v_FER_SPL@1140080 : Boolean;
      v_system@1140081 : Boolean;
      v_sum_system@1140083 : Decimal;
      v_total_drucken@1140084 : Boolean;
      msrp@1140086 : Decimal;
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header2@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ihre_ref:='';
        IF "Sales Header"."External Document No." <> '' THEN ihre_ref:="Sales Header"."External Document No."+' ';
        IF "Sales Header"."Your Reference"  <> '' THEN ihre_ref:=ihre_ref + "Sales Header"."Your Reference";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header3@5011(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput ("Sales Header".Status <> "Sales Header".Status::Released);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header4@5012(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        // -004.2
        ReportForNav.ShowOutput ("Sales Header".Status <> "Sales Header".Status::Released);
        //ReportForNav.ShowOutput (Verkaufskopf.Angebotsstatus = Verkaufskopf.Angebotsstatus::Kalkulation);
        //WITH Verkaufskopf DO
        //  ReportForNav.ShowOutput((Angebotsstatus = Angebotsstatus::Kalkulation) OR
        //                        ((Angebotsstatus = Angebotsstatus::Gltig) AND
        //                         (Einkaufsw„hrungscode <> W„hrungscode)));
        // +004.2
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header6@5013(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput (("Sales Header"."Kontaktperson (kopie)" <> '') AND (ReportForNav.PageNo = 1));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header7@5014(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((ReportForNav.PageNo =1) AND ("Sales Header".Text1=''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header8@5015(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Sales Header".Text1<>'') AND (ReportForNav.PageNo = 1));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header9@5016(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(v_system = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header10@5017(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
          ReportForNav.ShowOutput(v_system = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body11@5018(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile.Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body12@5019(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile.Type =VerkZeile.Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body13@5020(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((VerkZeile.Type = VerkZeile.Type::Item) AND (v_system = FALSE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body14@5021(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(VerkZeile.Type = VerkZeile.Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body15@5022(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //   ReportForNav.ShowOutput(v_system = TRUE);
        ReportForNav.ShowOutput((VerkZeile.Type = VerkZeile.Type::Item) AND (v_system = TRUE));
         IF ((VerkZeile.Type = VerkZeile.Type::Item) AND (v_system = TRUE))
         THEN v_sum_system:=v_sum_system+("Sales Line".Quantity*"Sales Line"."Unit Price");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body16@5023(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        {lshanf c01}
        ReportForNav.ShowOutput(VerkZeile."Description 2" <> '');
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body17@5024(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Artikel."WEEE-Reg.-Nr." <>'');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body18@5025(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput("Sales Line"."Cross-Reference No."<> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body19@5026(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //MUSS IN NAVISION 5.0 ANGEPASST WERDEN!!
        ReportForNav.ShowOutput((Artikel.NCNR=TRUE) AND (VerkZeile."Outstanding Quantity"<>0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body20@5027(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //Das Feld Angebotsstatus gibt es nicht mehr in NAV 2016
        //ReportForNav.ShowOutput (("Sales Header".Angebotsstatus<>'') AND
        //  (VerkZeile.Type = VerkZeile.Type::Item));
        ReportForNav.ShowOutput (FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer21@5028(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_free_text0 <>'');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer22@5029(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_free_text1 <>'');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer23@5030(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((lead_free_text1 <>'')OR (lead_free_text0 <> ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer24@5031(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_text <>'');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer26@5032(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((v_system = TRUE) AND (v_total_drucken=TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer28@5033(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(v_FER_SPL=FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer32@5034(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        // -004.3
        ReportForNav.ShowOutput("Sales Header"."Euro-Parit„tsw„hrungscode" <> '')
        // +004.3
      END;
    END;

    LOCAL PROCEDURE OnPreSectionUnterschrift2_Body33@5035(VAR Unterschrift2@1000000000 : Record 18);
    BEGIN
      Benutzer.RESET;
      Benutzer.SETRANGE("User Name",USERID);
      Benutzer.FINDFIRST;
      IF (Benutzer."Salesperson Code" = '') THEN
        ERROR(Text000,Benutzer.FIELDCAPTION("User Name"),USERID,Benutzer.FIELDCAPTION("Salesperson Code"),Benutzer.TABLECAPTION);
      WITH Unterschrift2 DO BEGIN
        Verk„uferText1:='';
        Verk„uferText2:='';
        IF Unterzeichner2 = '' THEN
        BEGIN
          IF VerkEinkPerson.GET(Benutzer."Salesperson Code") THEN
          CASE VerkEinkPerson."Commercial procuration" OF
              VerkEinkPerson."Commercial procuration"::Nein: Zusatz:='i.A.';
              VerkEinkPerson."Commercial procuration"::Prokura: Zusatz:='ppa.';
              VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz:='';
          END;
          Verk„uferText:=Zusatz+' '+ VerkEinkPerson."First name"+' '+VerkEinkPerson.Name;
          Verk„uferTextInnen:='';
        END
        ELSE
        BEGIN
        IF VerkEinkPerson.GET(Benutzer."Salesperson Code") THEN
          CASE VerkEinkPerson."Commercial procuration" OF
              VerkEinkPerson."Commercial procuration"::Nein: Zusatz:='i.A.';
              VerkEinkPerson."Commercial procuration"::Prokura: Zusatz:='ppa.';
              VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz:='';
          END;
        Verk„uferTextInnen:=Zusatz+' ' +VerkEinkPerson."First name"+' '+VerkEinkPerson.Name;
        IF VerkEinkPerson.GET(Unterzeichner2) THEN
          CASE VerkEinkPerson."Commercial procuration" OF
              VerkEinkPerson."Commercial procuration"::Nein: Zusatz:='i.A.';
              VerkEinkPerson."Commercial procuration"::Prokura: Zusatz:='ppa.';
              VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz:='';
          END;
        Verk„uferText:=Zusatz+' '+VerkEinkPerson."First name"+' '+VerkEinkPerson.Name;
        END;
      END;
    END;

    PROCEDURE "*** Scantec ***"@1();
    BEGIN
    END;

    PROCEDURE WechKursBetrag@2(Datum@1140000 : Date;W„hrungCode@1140001 : Code[10];W„hrungFaktor@1140002 : Decimal) : Decimal;
    VAR
      BezugAufWechselkursbetr@1140003 : Decimal;
      WechselkursBetr@1140004 : Decimal;
      BezugAufW„hrungscode@1140005 : Code[10];
      FesterWechselkursBetr@1140006 : Option;
    BEGIN
      IF W„hrungCode = '' THEN
        EXIT(1);
      W„hrungsWechKurs.FindCurrency(Datum,W„hrungCode,1);
      W„hrungsWechKurs.TESTFIELD("Exchange Rate Amount");
      W„hrungsWechKurs.TESTFIELD("Relational Exch. Rate Amount");
      BezugAufWechselkursbetr := W„hrungsWechKurs."Relational Exch. Rate Amount";
      WechselkursBetr := W„hrungsWechKurs."Exchange Rate Amount";
      BezugAufW„hrungscode := W„hrungsWechKurs."Relational Currency Code";
      IF W„hrungsWechKurs."Relational Currency Code" = '' THEN
        W„hrungsWechKurs."Exchange Rate Amount" := W„hrungFaktor * W„hrungsWechKurs."Relational Exch. Rate Amount"
      ELSE BEGIN
        W„hrungsWechKurs.FindCurrency(Datum,BezugAufW„hrungscode,2);
        W„hrungsWechKurs.TESTFIELD("Exchange Rate Amount");
        W„hrungsWechKurs.TESTFIELD("Relational Exch. Rate Amount");
        W„hrungsWechKurs."Exchange Rate Amount" := (W„hrungFaktor *
          (BezugAufWechselkursbetr * W„hrungsWechKurs."Relational Exch. Rate Amount"));
      END;
      EXIT(W„hrungsWechKurs."Exchange Rate Amount");
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header2': OnPreSectionSeiteSchleife_Header2(SeiteSchleife);
          'Header3': OnPreSectionSeiteSchleife_Header3(SeiteSchleife);
          'Header4': OnPreSectionSeiteSchleife_Header4(SeiteSchleife);
        END;
        'RundungsRahmen': CASE SectionId OF
          'Header6': OnPreSectionRundungsRahmen_Header6(RundungsRahmen);
          'Header7': OnPreSectionRundungsRahmen_Header7(RundungsRahmen);
          'Header8': OnPreSectionRundungsRahmen_Header8(RundungsRahmen);
          'Header9': OnPreSectionRundungsRahmen_Header9(RundungsRahmen);
          'Header10': OnPreSectionRundungsRahmen_Header10(RundungsRahmen);
          'Body11': OnPreSectionRundungsRahmen_Body11(RundungsRahmen);
          'Body12': OnPreSectionRundungsRahmen_Body12(RundungsRahmen);
          'Body13': OnPreSectionRundungsRahmen_Body13(RundungsRahmen);
          'Body14': OnPreSectionRundungsRahmen_Body14(RundungsRahmen);
          'Body15': OnPreSectionRundungsRahmen_Body15(RundungsRahmen);
          'Body16': OnPreSectionRundungsRahmen_Body16(RundungsRahmen);
          'Body17': OnPreSectionRundungsRahmen_Body17(RundungsRahmen);
          'Body18': OnPreSectionRundungsRahmen_Body18(RundungsRahmen);
          'Body19': OnPreSectionRundungsRahmen_Body19(RundungsRahmen);
          'Body20': OnPreSectionRundungsRahmen_Body20(RundungsRahmen);
          'Footer21': OnPreSectionRundungsRahmen_Footer21(RundungsRahmen);
          'Footer22': OnPreSectionRundungsRahmen_Footer22(RundungsRahmen);
          'Footer23': OnPreSectionRundungsRahmen_Footer23(RundungsRahmen);
          'Footer24': OnPreSectionRundungsRahmen_Footer24(RundungsRahmen);
          'Footer26': OnPreSectionRundungsRahmen_Footer26(RundungsRahmen);
          'Footer28': OnPreSectionRundungsRahmen_Footer28(RundungsRahmen);
          'Footer32': OnPreSectionRundungsRahmen_Footer32(RundungsRahmen);
        END;
        'Unterschrift2': CASE SectionId OF
          'Body33': OnPreSectionUnterschrift2_Body33(Unterschrift2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
    BEGIN
      // Do not change (Autogenerated by Reports ForNAV) - Instead change the Create Totals, Total Fields or Group Total Fields properties on the Data item in the ForNAV designer
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE Operation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,VerkZeile.Amount);
                ReportForNav.AddTotal(DataItemId,1,VerkZeile."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,VerkZeile."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 VerkZeile.Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 VerkZeile."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 VerkZeile."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  RundungsRahmen, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
      -#DOCU#
      001 28.01.02 kn SC1.01: # Kap. C 2.1.2
          - Status, Lieferzeit (KW) drucken
          - bei Status Kalkulation Kalkulationsdaten drucken
      002 06.03.02 kn SC1.02 kn SC1.02: #01661
          Beleg nach Vorlage anpassen
      003 27.05.02 kn SC1.04: #02012
          - Textboxen im Kalkulation-Body vergr”ssert
          - Sachkonten-Zeilen nicht drucken
      004 20.06.02 wr SC1.07: #02035
          - Fax und Tel. werden in der Kontaktperson mit dem Schlssel
            Verkaufskopf."Interessent Nr.", Verkaufskopf."Kontaktperson Nr." nachgeschlagen
          - W„hrungskurs wird auch bei Angebotsstatus = gltig gedruckt,
            wenn EK- und VK-W„hrung unterschiedlich
          - Europarit„tstext gem Vorlage, falls "Euro-Parit„tsw„hrungscode" eingetragen
          - 'Einzelpreis EUR' in Einzelpreis EURO' ge„ndert
          - Wenn "Lieferzeit KW" und Lieferdatum unbestimmt, dann Liefertext = 'ab Lager'
      +#DOCU#
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>136eec95-cad7-478a-8980-4117ee174d69</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>d1f02159-e1fd-4c2f-9905-fcf699a486bf</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="E_Mail_Salesperson_Purchaser">
          <DataField>E_Mail_Salesperson_Purchaser</DataField>
        </Field>
        <Field Name="Salesperson_Purchaserfirstname__Salesperson_PurchaserName">
          <DataField>Salesperson_Purchaserfirstname__Salesperson_PurchaserName</DataField>
        </Field>
        <Field Name="ansp_anrede">
          <DataField>ansp_anrede</DataField>
        </Field>
        <Field Name="ansp_telefon">
          <DataField>ansp_telefon</DataField>
        </Field>
        <Field Name="ansp_fax">
          <DataField>ansp_fax</DataField>
        </Field>
        <Field Name="E_Mail_Contact">
          <DataField>E_Mail_Contact</DataField>
        </Field>
        <Field Name="FaxNo_Contact">
          <DataField>FaxNo_Contact</DataField>
        </Field>
        <Field Name="PhoneNo_Contact">
          <DataField>PhoneNo_Contact</DataField>
        </Field>
        <Field Name="Anschrift2">
          <DataField>Anschrift2</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesHeader">
          <DataField>Sell_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="DocumentDate_SalesHeader">
          <DataField>DocumentDate_SalesHeader</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="KopieText">
          <DataField>KopieText</DataField>
        </Field>
        <Field Name="Anschrift9">
          <DataField>Anschrift9</DataField>
        </Field>
        <Field Name="Anschrift8">
          <DataField>Anschrift8</DataField>
        </Field>
        <Field Name="Anschrift7">
          <DataField>Anschrift7</DataField>
        </Field>
        <Field Name="Anschrift6">
          <DataField>Anschrift6</DataField>
        </Field>
        <Field Name="Anschrift5">
          <DataField>Anschrift5</DataField>
        </Field>
        <Field Name="Anschrift4">
          <DataField>Anschrift4</DataField>
        </Field>
        <Field Name="Anschrift3">
          <DataField>Anschrift3</DataField>
        </Field>
        <Field Name="Anschrift1">
          <DataField>Anschrift1</DataField>
        </Field>
        <Field Name="ihre_ref">
          <DataField>ihre_ref</DataField>
        </Field>
        <Field Name="SalesHeaderStatus">
          <DataField>SalesHeaderStatus</DataField>
        </Field>
        <Field Name="CurrencyFactor_SalesHeader">
          <DataField>CurrencyFactor_SalesHeader</DataField>
        </Field>
        <Field Name="CurrencyFactor_SalesHeaderFormat">
          <DataField>CurrencyFactor_SalesHeaderFormat</DataField>
        </Field>
        <Field Name="Einkaufswahrungsfaktor_SalesLine">
          <DataField>Einkaufswahrungsfaktor_SalesLine</DataField>
        </Field>
        <Field Name="Einkaufswahrungsfaktor_SalesLineFormat">
          <DataField>Einkaufswahrungsfaktor_SalesLineFormat</DataField>
        </Field>
        <Field Name="Einkaufswahrungscode_SalesLine">
          <DataField>Einkaufswahrungscode_SalesLine</DataField>
        </Field>
        <Field Name="CurrencyCode_SalesHeader">
          <DataField>CurrencyCode_SalesHeader</DataField>
        </Field>
        <Field Name="Kontaktperson_kopie_SalesHeader">
          <DataField>Kontaktperson_kopie_SalesHeader</DataField>
        </Field>
        <Field Name="Text1">
          <DataField>Text1</DataField>
        </Field>
        <Field Name="Text1_SalesHeader">
          <DataField>Text1_SalesHeader</DataField>
        </Field>
        <Field Name="Text2_SalesHeader">
          <DataField>Text2_SalesHeader</DataField>
        </Field>
        <Field Name="Preis_info">
          <DataField>Preis_info</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
        <Field Name="lead_symbol">
          <DataField>lead_symbol</DataField>
        </Field>
        <Field Name="LineNo_VerkZeile">
          <DataField>LineNo_VerkZeile</DataField>
        </Field>
        <Field Name="Verpackungsmenge_Artikel">
          <DataField>Verpackungsmenge_Artikel</DataField>
        </Field>
        <Field Name="Verpackungsmenge_ArtikelFormat">
          <DataField>Verpackungsmenge_ArtikelFormat</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine">
          <DataField>UnitPrice_SalesLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLineFormat">
          <DataField>UnitPrice_SalesLineFormat</DataField>
        </Field>
        <Field Name="LieferText">
          <DataField>LieferText</DataField>
        </Field>
        <Field Name="Quantity_SalesLine">
          <DataField>Quantity_SalesLine</DataField>
        </Field>
        <Field Name="Quantity_SalesLineFormat">
          <DataField>Quantity_SalesLineFormat</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesLine">
          <DataField>Artikelnr2_SalesLine</DataField>
        </Field>
        <Field Name="SalesLineQuantity_SalesLineUnitPrice">
          <DataField>SalesLineQuantity_SalesLineUnitPrice</DataField>
        </Field>
        <Field Name="SalesLineQuantity_SalesLineUnitPriceFormat">
          <DataField>SalesLineQuantity_SalesLineUnitPriceFormat</DataField>
        </Field>
        <Field Name="msrp">
          <DataField>msrp</DataField>
        </Field>
        <Field Name="msrpFormat">
          <DataField>msrpFormat</DataField>
        </Field>
        <Field Name="Description2_SalesLine">
          <DataField>Description2_SalesLine</DataField>
        </Field>
        <Field Name="WEEE_Reg_Nr__ArtikelWEEE_Reg_Nr">
          <DataField>WEEE_Reg_Nr__ArtikelWEEE_Reg_Nr</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesLine">
          <DataField>Cross_ReferenceNo_SalesLine</DataField>
        </Field>
        <Field Name="Quotenr_SalesLine">
          <DataField>Quotenr_SalesLine</DataField>
        </Field>
        <Field Name="ProfitPct_SalesLine">
          <DataField>ProfitPct_SalesLine</DataField>
        </Field>
        <Field Name="ProfitPct_SalesLineFormat">
          <DataField>ProfitPct_SalesLineFormat</DataField>
        </Field>
        <Field Name="VK_Preis_MW_SalesLine">
          <DataField>VK_Preis_MW_SalesLine</DataField>
        </Field>
        <Field Name="VK_Preis_MW_SalesLineFormat">
          <DataField>VK_Preis_MW_SalesLineFormat</DataField>
        </Field>
        <Field Name="DC_Preis_Wahrung_SalesLine">
          <DataField>DC_Preis_Wahrung_SalesLine</DataField>
        </Field>
        <Field Name="DC_Preis_Wahrung_SalesLineFormat">
          <DataField>DC_Preis_Wahrung_SalesLineFormat</DataField>
        </Field>
        <Field Name="DC_Preis_MW_SalesLine">
          <DataField>DC_Preis_MW_SalesLine</DataField>
        </Field>
        <Field Name="DC_Preis_MW_SalesLineFormat">
          <DataField>DC_Preis_MW_SalesLineFormat</DataField>
        </Field>
        <Field Name="ZollsatzPct_Artikel">
          <DataField>ZollsatzPct_Artikel</DataField>
        </Field>
        <Field Name="ZollsatzPct_ArtikelFormat">
          <DataField>ZollsatzPct_ArtikelFormat</DataField>
        </Field>
        <Field Name="DC_Preis_EKW_SalesLine">
          <DataField>DC_Preis_EKW_SalesLine</DataField>
        </Field>
        <Field Name="DC_Preis_EKW_SalesLineFormat">
          <DataField>DC_Preis_EKW_SalesLineFormat</DataField>
        </Field>
        <Field Name="VK_Preis_EKW_SalesLine">
          <DataField>VK_Preis_EKW_SalesLine</DataField>
        </Field>
        <Field Name="VK_Preis_EKW_SalesLineFormat">
          <DataField>VK_Preis_EKW_SalesLineFormat</DataField>
        </Field>
        <Field Name="HandlingskostenPct_SalesLine">
          <DataField>HandlingskostenPct_SalesLine</DataField>
        </Field>
        <Field Name="HandlingskostenPct_SalesLineFormat">
          <DataField>HandlingskostenPct_SalesLineFormat</DataField>
        </Field>
        <Field Name="lead_free_text0">
          <DataField>lead_free_text0</DataField>
        </Field>
        <Field Name="lead_free_text1">
          <DataField>lead_free_text1</DataField>
        </Field>
        <Field Name="lead_free_text2">
          <DataField>lead_free_text2</DataField>
        </Field>
        <Field Name="lead_text">
          <DataField>lead_text</DataField>
        </Field>
        <Field Name="wahrung">
          <DataField>wahrung</DataField>
        </Field>
        <Field Name="v_sum_system">
          <DataField>v_sum_system</DataField>
        </Field>
        <Field Name="v_sum_systemFormat">
          <DataField>v_sum_systemFormat</DataField>
        </Field>
        <Field Name="minbestellwert">
          <DataField>minbestellwert</DataField>
        </Field>
        <Field Name="preisstellung">
          <DataField>preisstellung</DataField>
        </Field>
        <Field Name="versand">
          <DataField>versand</DataField>
        </Field>
        <Field Name="STRSUBSTNO__Pct1_ZlgBedDescription">
          <DataField>STRSUBSTNO__Pct1_ZlgBedDescription</DataField>
        </Field>
        <Field Name="STRSUBSTNO__inEURzumTageskursderLieferung">
          <DataField>STRSUBSTNO__inEURzumTageskursderLieferung</DataField>
        </Field>
        <Field Name="STRSUBSTNO__1EUR_Pct1Pct2Rechnungsstellungerfolgt_SalesHeade">
          <DataField>STRSUBSTNO__1EUR_Pct1Pct2Rechnungsstellungerfolgt_SalesHeade</DataField>
        </Field>
        <Field Name="VerkauferTextInnen">
          <DataField>VerkauferTextInnen</DataField>
        </Field>
        <Field Name="VerkauferText">
          <DataField>VerkauferText</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

