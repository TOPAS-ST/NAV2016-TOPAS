OBJECT Report 50052 TOPAS Verkauf - Angebot
{
  OBJECT-PROPERTIES
  {
    Date=06.06.23;
    Time=14:44:44;
    Modified=Yes;
    Version List=Beleg - manuell --> 50152,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    ShowPrintStatus=No;
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS("ISO Logo",Picture);

                   Benutzer.RESET;
                   Benutzer.SETRANGE("User Name",USERID);
                   Benutzer.FINDFIRST;
                   IF (Benutzer."Salesperson Code" = '') AND (UPPERCASE(USERID) <> 'W2K\NAV2016_SRV') THEN
                     ERROR(Text000,Benutzer.FIELDCAPTION("User Name"),USERID,Benutzer.FIELDCAPTION("Salesperson Code"),Benutzer.TABLECAPTION);

                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Quote));
               ReqFilterHeadingML=DEU=Verkaufsangebot;
               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    IF VerkEinkPerson."Fax No." = '' THEN BEGIN
                                      Verk„uferText := STRSUBSTNO ('i.A. %1', VerkEinkPerson.Name);
                                      Verk„uferText1 := '';
                                      Verk„uferText2 := STRSUBSTNO ('(Tel. %1)', VerkEinkPerson."First name");
                                    END ELSE BEGIN
                                      Verk„uferText := STRSUBSTNO ('i.A. %1', VerkEinkPerson.Name);
                                      Verk„uferText1 := STRSUBSTNO ('%1',VerkEinkPerson."Fax No.");
                                      Verk„uferText2 := STRSUBSTNO ('(Tel. %1)', VerkEinkPerson."First name");
                                    END;
                                  END;
                                  IF "Sales Header"."Betreuer Innendienst" = '' THEN BEGIN
                                    VerkEinkPersonInnen.INIT;
                                    Verk„uferTextInnen := '';
                                  END ELSE BEGIN
                                    VerkEinkPersonInnen.GET("Sales Header"."Betreuer Innendienst");
                                    IF VerkEinkPersonInnen."Fax No." ='' THEN BEGIN
                                      Verk„uferTextInnen := STRSUBSTNO ('i.A. %1', VerkEinkPersonInnen.Name);
                                      Verk„uferText1Innen := '';
                                      Verk„uferText2Innen := STRSUBSTNO ('(Tel. %1)', VerkEinkPersonInnen."First name");
                                    END ELSE BEGIN
                                      Verk„uferTextInnen := STRSUBSTNO ('i.A. %1', VerkEinkPersonInnen.Name);
                                      Verk„uferText1Innen := STRSUBSTNO ('%1', VerkEinkPersonInnen."Fax No.");
                                      Verk„uferText2Innen := STRSUBSTNO ('(Tel. %1)', VerkEinkPersonInnen."First name");
                                    END;
                                  END;
                                  IF ("Salesperson Code" = '') AND
                                     ("Sales Header"."Betreuer Innendienst" = '') THEN
                                    AngebotsText := STRSUBSTNO('Angebot Nr. %1',"Sales Header"."No.")
                                  ELSE
                                    IF ("Salesperson Code" = '') THEN
                                      AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2',"Sales Header"."No.",
                                        "Sales Header"."Betreuer Innendienst")
                                    ELSE
                                      IF ("Sales Header"."Betreuer Innendienst" = '') THEN
                                        AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2',"Sales Header"."No.",
                                          "Sales Header"."Salesperson Code")
                                      ELSE
                                        AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2 / %3',"Sales Header"."No.",
                                          "Sales Header"."Betreuer Innendienst", "Sales Header"."Salesperson Code");
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    PreisText := FIBUEinrichtung."LCY Code";
                                    IF PreisText = 'EUR' THEN
                                      PreisText += 'O';
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                    PreisText := "Currency Code";
                                  END;
                                  preisstellung := STRSUBSTNO(Text002,PreisText);

                                  FormatAdr.SalesHeaderSellTo(DebAdr,"Sales Header");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");

                                  Verkaufsw„hrungskurs := WechKursBetrag (WORKDATE,"Currency Code", "Currency Factor");

                                  IF NOT Deb.GET("Sales Header"."Sell-to Customer No.") THEN
                                    Deb.INIT
                                  ELSE
                                    IF Deb."System Preisbindung" THEN
                                      system_preisbindung := SysPreisbindungsText
                                    ELSE
                                      system_preisbindung := '';

                                  IF "Currency Code" = '' THEN
                                    w„hrung := '°'
                                  ELSE
                                    w„hrung := "Currency Code";

                                  v_FER_SPL := FALSE;
                                  adv_andruck_notwendig := FALSE;
                                  v_sum_system := 0;
                                  SalesLine.RESET;
                                  SalesLine.SETRANGE("Document No.","Sales Header"."No.");
                                  SalesLine.SETRANGE(Type,SalesLine.Type::Item);
                                  SalesLine.SETFILTER("Manufacturer Code",'20|52|57|5710|5720|5730|59|82|85|96|9610|9620');
                                  IF SalesLine.FINDFIRST THEN
                                    v_system := TRUE;

                                  IF "Sales Header"."Territory Code" = 'SYSTEM' THEN BEGIN
                                    IF "Currency Code" = '' THEN
                                      msrp_text := 'MSRP EUR'
                                    ELSE
                                      msrp_text := 'MSRP ' + "Currency Code";
                                  END;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table5050;
               DataItemLink=No.=FIELD(Kontaktnr.) }

    { 5   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               DataItemTableView=SORTING(Code);
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 6   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=VAR
                                  NamePart@1140001 : ARRAY [5] OF Text[50];
                                  SubStr@1140002 : Text[30];
                                  i@1140003 : Integer;
                                BEGIN
                                  CLEAR(SalesLineTemp);
                                  CLEAR(VerkBuchen);
                                  VerkBuchen.GetSalesLines("Sales Header",SalesLineTemp,0);
                                  KopieText := '';
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    Preis_info := 'Einzelpreis je Stck in ' + w„hrung;
                                    IF Number > 1 THEN KopieText := 'skopie';
                                    ReportForNav.PageNo := 1;
                                  END ELSE BEGIN
                                    Preis_info := 'Price per piece in ' + w„hrung;
                                    IF Number > 1 THEN KopieText := ' Copy';
                                    ReportForNav.PageNo := 1;
                                  END;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    //*** Versandbedingungen
                                    versand := '';
                                    IF "Sales Header"."Shipment Method Code" <> 'AB_HAN' THEN BEGIN
                                      versand := LieferBed.Description;
                                    END;
                                    IF "Sales Header"."Shipment Method Code" ='AB_HAN' THEN BEGIN
                                      IF "Sales Header"."Currency Code" = 'USD' THEN versand := 'Lieferungen ab 2.500,-- USD frei Haus';
                                      IF "Sales Header"."Currency Code" = '' THEN versand := 'Lieferungen ab 2.500,-- EURO frei Haus';
                                      IF "Sales Header"."Currency Code" = 'YEN' THEN versand := 'Lieferungen ab 250.000,-- JPY frei Haus';
                                    END;
                                    IF "Sales Header"."Currency Code" = 'USD' THEN
                                      IF "Sales Header"."Territory Code" <> 'SYSTEM' THEN
                                        minbestellwert := '500,-- USD'
                                      ELSE
                                        minbestellwert := '50,-- USD';
                                    IF "Sales Header"."Currency Code" = '' THEN minbestellwert := '50,-- EURO';
                                    IF "Sales Header"."Currency Code" = 'YEN' THEN minbestellwert := '50.000,-- JPY';
                                    //**********************
                                  END ELSE BEGIN
                                    //*** Versandbedingungen
                                    versand := '';
                                    IF "Sales Header"."Shipment Method Code" = 'FOB' THEN BEGIN
                                      versand := 'FOB';
                                    END ELSE BEGIN
                                      IF "Sales Header"."Shipment Method Code" = 'FHAUS' THEN
                                        versand := 'ex works'
                                      ELSE
                                        versand := LieferBed.Description;
                                    END;
                                    IF "Sales Header"."Currency Code" = 'USD' THEN
                                      IF "Sales Header"."Territory Code" <> 'SYSTEM' THEN
                                        minbestellwert := '500,-- USD'
                                      ELSE
                                        minbestellwert := '50,-- USD';
                                    IF "Sales Header"."Currency Code" = '' THEN BEGIN
                                      IF "Sales Header"."Sell-to Country/Region Code" = 'DE' THEN
                                        minbestellwert := '50,-- EURO'
                                      ELSE
                                        minbestellwert := '250,-- EURO';
                                    END;
                                    IF "Sales Header"."Currency Code" = 'YEN' THEN minbestellwert := '50.000,-- JPY';
                                    //**********************
                                  END;

                                  ende := FALSE;
                                  x := 1;
                                  text2 := "Sales Header".Kontaktperson;
                                  REPEAT
                                    IF DebAdr[x] = "Sales Header"."Sell-to Customer Name" THEN BEGIN
                                      IF DebAdr[x+1] = "Sales Header"."Sell-to Customer Name 2" THEN BEGIN
                                        Anschrift[x] := DebAdr[x];
                                        Anschrift[x+1] := DebAdr[x+1];
                                        Anschrift[x+2] := text2;
                                        Anschrift[x+3] := DebAdr[x+2];
                                        Anschrift[x+4] := DebAdr[x+3];
                                        Anschrift[x+5] := DebAdr[x+4];
                                        Anschrift[x+6] := DebAdr[x+5];
                                        Anschrift[x+7] := DebAdr[x+6];
                                        Anschrift[x+8] := DebAdr[x+7];
                                        ende := TRUE;
                                      END ELSE BEGIN
                                        Anschrift[x] := DebAdr[x];
                                        Anschrift[x+1] := text2;
                                        Anschrift[x+2] := DebAdr[x+1];
                                        Anschrift[x+3] := DebAdr[x+2];
                                        Anschrift[x+4] := DebAdr[x+3];
                                        Anschrift[x+5] := DebAdr[x+4];
                                        Anschrift[x+6] := DebAdr[x+5];
                                        Anschrift[x+7] := DebAdr[x+6];
                                        Anschrift[x+8] := DebAdr[x+7];
                                        ende := TRUE;
                                      END;
                                    END;
                                    i := i + 1;
                                  UNTIL (i = 9) OR (ende);

                                  SalutationFormula.SETRANGE("Salutation Code",Contact."Salutation Code");
                                  SalutationFormula.SETRANGE("Language Code","Sales Header"."Language Code");
                                  IF SalutationFormula.FINDFIRST THEN
                                  IF (Contact."Salutation Code" = 'MANDANT') OR (Contact."Salutation Code" = '') THEN
                                    Text1 := SalutationFormula.Salutation
                                  ELSE
                                    Text1 := STRSUBSTNO(SalutationFormula.Salutation,Contact.Surname);
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkDruckZ„hler.RUN("Sales Header");
                              END;
                               }

    { 7   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 8   ;3   ;Column  ;Picture_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 9   ;3   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 1000000014;3;Column;CompanyEORINr      ;
               SourceExpr=CompanyInfo[16] }

    { 10  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 12  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 13  ;3   ;Column  ;ansp_anrede         ;
               IncludeCaption=No;
               SourceExpr=ansp_anrede }

    { 11  ;3   ;Column  ;ansp_telefon        ;
               IncludeCaption=No;
               SourceExpr=ansp_telefon }

    { 14  ;3   ;Column  ;ansp_fax            ;
               IncludeCaption=No;
               SourceExpr=ansp_fax }

    { 15  ;3   ;Column  ;E_Mail_Contact      ;
               IncludeCaption=No;
               SourceExpr=Contact."E-Mail" }

    { 16  ;3   ;Column  ;FaxNo_Contact       ;
               IncludeCaption=No;
               SourceExpr=Contact."Fax No." }

    { 17  ;3   ;Column  ;PhoneNo_Contact     ;
               IncludeCaption=No;
               SourceExpr=Contact."Phone No." }

    { 18  ;3   ;Column  ;Anschrift2          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[2] }

    { 19  ;3   ;Column  ;Sell_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 20  ;3   ;Column  ;DocumentDate_SalesHeader;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 21  ;3   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="Sales Header"."No." }

    { 22  ;3   ;Column  ;ReportForNavPageNo  ;
               IncludeCaption=No;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 23  ;3   ;Column  ;KopieText           ;
               IncludeCaption=No;
               SourceExpr=KopieText }

    { 24  ;3   ;Column  ;Anschrift9          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[9] }

    { 25  ;3   ;Column  ;Anschrift8          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[8] }

    { 26  ;3   ;Column  ;Anschrift7          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[7] }

    { 27  ;3   ;Column  ;Anschrift6          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[6] }

    { 28  ;3   ;Column  ;Anschrift5          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[5] }

    { 29  ;3   ;Column  ;Anschrift4          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[4] }

    { 30  ;3   ;Column  ;Anschrift3          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[3] }

    { 31  ;3   ;Column  ;Anschrift1          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[1] }

    { 32  ;3   ;Column  ;ihre_ref            ;
               IncludeCaption=No;
               SourceExpr=ihre_ref }

    { 33  ;3   ;Column  ;SalesHeaderStatus   ;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Header".Status) }

    { 34  ;3   ;Column  ;CurrencyFactor_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Currency Factor" }

    { 35  ;3   ;Column  ;Einkaufswahrungsfaktor_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Einkaufsw„hrungsfaktor }

    { 36  ;3   ;Column  ;Einkaufswahrungscode_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Einkaufsw„hrungscode }

    { 37  ;3   ;Column  ;CurrencyCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Currency Code" }

    { 1000000003;3;Column;system_preisbindung;
               IncludeCaption=No;
               SourceExpr=system_preisbindung }

    { 38  ;3   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  Einkaufsw„hrungskurs := WechKursBetrag (WORKDATE, Einkaufsw„hrungscode, Einkaufsw„hrungsfaktor);
                                END;

               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 39  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := SalesLineTemp.FIND('+');
                               WHILE MehrZeilen AND (SalesLineTemp.Description = '') AND
                                     (SalesLineTemp."No." = '') AND (SalesLineTemp.Quantity = 0) AND
                                     (SalesLineTemp.Amount = 0)
                               DO
                                 MehrZeilen := SalesLineTemp.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SalesLineTemp.SETRANGE("Line No.",0,SalesLineTemp."Line No.");
                               SETRANGE(Number,1,SalesLineTemp.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    SalesLineTemp.FIND('-')
                                  ELSE
                                    SalesLineTemp.NEXT;
                                  "Sales Line" := SalesLineTemp;
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "Sales Line"."VAT %";
                                  MWSTBetragZeile."VAT Base" := "Sales Line".Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Sales Line"."Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;

                                  lead_symbol := '';
                                  lead_text := '';
                                  IF NOT Artikel.GET ("Sales Line"."No.") THEN
                                    Artikel.INIT
                                  ELSE BEGIN
                                    //20.08.09 ST - Andruck, wenn Artikel bleihaltig ist
                                    IF (Artikel."Lead Free" = FALSE) AND (Artikel."Item Tracking Code" = 'DATECODE') THEN BEGIN
                                      lead_symbol := 'ø';
                                      lead_text := BleifreiText;
                                    END;
                                  END;

                                  LieferText := "Sales Line".LZ_Text;

                                  IF v_FER_SPL = FALSE THEN BEGIN
                                    IF (("Sales Line"."Manufacturer Code" = '82') OR ("Sales Line"."Manufacturer Code" = '85')) THEN BEGIN
                                    v_FER_SPL := TRUE;
                                    END;
                                  END;

                                  //10.07.15 ST - MSRP Andruck fr Systeme, anstatt VPE
                                  msrp := 0;
                                  IF v_system = TRUE THEN BEGIN
                                    msrp := TOPAS_Funktionen.FindItemSalesPrice("Sales Line"."No.",WORKDATE,"Sales Header"."Currency Code","Sales Line"."Unit of Measure","Sales Line".Quantity,"Sales Header"."Preislisten Kalkulation");
                                    {
                                    WITH FindSalesPrice DO BEGIN
                                      SETRANGE("Item No.","Sales Line"."No.");
                                      SETFILTER("Starting Date",'<>%1',0D); //Spezialpreise unterdrcken, die eigentlich zu 0 verkauft werden, aber der MSRP fr CHAMPS Berechnung ben”tigt wird
                                      SETFILTER("Ending Date",'%1|>=%2',0D,WORKDATE);
                                      SETFILTER("Currency Code",'%1',"Sales Header"."Currency Code");
                                      IF "Sales Line"."Unit of Measure" <> '' THEN
                                        SETFILTER("Unit of Measure Code",'%1|%2',"Sales Line"."Unit of Measure",'');
                                      SETRANGE("Starting Date",0D,WORKDATE);
                                      SETRANGE("Sales Type","Sales Type"::"All Customers");
                                      SETRANGE("Sales Code");
                                      IF FINDLAST THEN
                                        msrp := FindSalesPrice."Unit Price";
                                    END;
                                    }
                                  END;

                                  //03.07.2018 ST - Andruck des Hinweises, dass noch keine ADV vorliegt, diese aber fr CHAMPS erforderlich ist
                                  IF (Customer.ADV = FALSE) AND (Customer."Territory Code" = 'SYSTEM') THEN BEGIN
                                    IF ("Sales Line".Type = "Sales Line".Type::Item) AND (Artikel.GET("Sales Line"."No.") AND (Artikel."Software Upgrade Protection")) THEN
                                      TroubleshootingSetup.SETRANGE(Type,TroubleshootingSetup.Type::Item);
                                      TroubleshootingSetup.SETRANGE("No.",Artikel."No.");
                                      TroubleshootingSetup.SETRANGE("Troubleshooting No.",'CHAMPS');
                                      IF TroubleshootingSetup.FINDFIRST THEN
                                        adv_andruck_notwendig := TRUE;
                                    IF (STRPOS("Sales Line"."Artikelnr. 2",'STUNDENSATZ') <> 0) OR (STRPOS("Sales Line"."Artikelnr. 2",'TAGESSATZ') <> 0) THEN
                                      adv_andruck_notwendig := TRUE;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                SalesLineTemp.DELETEALL;
                              END;
                               }

    { 40  ;4   ;Column  ;Kontaktperson_kopie_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Kontaktperson (kopie)" }

    { 41  ;4   ;Column  ;Text1               ;
               IncludeCaption=No;
               SourceExpr=Text1 }

    { 42  ;4   ;Column  ;Text1_SalesHeader   ;
               IncludeCaption=No;
               SourceExpr="Sales Header".Text1 }

    { 43  ;4   ;Column  ;Text2_SalesHeader   ;
               IncludeCaption=No;
               SourceExpr="Sales Header".Text2 }

    { 44  ;4   ;Column  ;Preis_info          ;
               IncludeCaption=No;
               SourceExpr=Preis_info }

    { 45  ;4   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Description }

    { 47  ;4   ;Column  ;LineNo_SalesLineTemp;
               IncludeCaption=No;
               SourceExpr=SalesLineTemp."Line No." }

    { 48  ;4   ;Column  ;Verpackungsmenge_Artikel;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Artikel.Verpackungsmenge }

    { 49  ;4   ;Column  ;UnitPrice_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 51  ;4   ;Column  ;Quantity_SalesLine  ;
               IncludeCaption=No;
               SourceExpr="Sales Line".Quantity }

    { 52  ;4   ;Column  ;Artikelnr2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 53  ;4   ;Column  ;SalesLineQuantity_SalesLineUnitPrice;
               IncludeCaption=No;
               SourceExpr=("Sales Line".Quantity*"Sales Line"."Unit Price") }

    { 54  ;4   ;Column  ;msrp                ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=msrp }

    { 1000000004;4;Column;msrp_text          ;
               IncludeCaption=No;
               SourceExpr=msrp_text }

    { 55  ;4   ;Column  ;Description2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Description 2" }

    { 56  ;4   ;Column  ;WEEE_Reg_Nr__ArtikelWEEE_Reg_Nr;
               IncludeCaption=No;
               SourceExpr='WEEE-Reg.-Nr.: '+ Artikel."WEEE-Reg.-Nr." }

    { 57  ;4   ;Column  ;Cross_ReferenceNo_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Cross-Reference No." }

    { 58  ;4   ;Column  ;Quotenr_SalesLine   ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Quotenr." }

    { 59  ;4   ;Column  ;ProfitPct_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Profit %" }

    { 60  ;4   ;Column  ;VK_Preis_MW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."VK-Preis (MW)" }

    { 61  ;4   ;Column  ;DC_Preis_Wahrung_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."DC-Preis (W„hrung)" }

    { 62  ;4   ;Column  ;DC_Preis_MW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."DC-Preis (MW)" }

    { 63  ;4   ;Column  ;ZollsatzPct_Artikel ;
               IncludeCaption=No;
               SourceExpr=Artikel."Zollsatz %" }

    { 64  ;4   ;Column  ;DC_Preis_EKW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."DC-Preis (EKW)" }

    { 65  ;4   ;Column  ;VK_Preis_EKW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."VK-Preis (EKW)" }

    { 66  ;4   ;Column  ;HandlingskostenPct_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Handlingskosten %" }

    { 46  ;4   ;Column  ;lead_symbol         ;
               IncludeCaption=No;
               SourceExpr=lead_symbol }

    { 70  ;4   ;Column  ;lead_text           ;
               IncludeCaption=No;
               SourceExpr=lead_text }

    { 71  ;4   ;Column  ;wahrung             ;
               IncludeCaption=No;
               SourceExpr=w„hrung }

    { 72  ;4   ;Column  ;v_sum_system        ;
               IncludeCaption=No;
               SourceExpr=v_sum_system }

    { 73  ;4   ;Column  ;minbestellwert      ;
               IncludeCaption=No;
               SourceExpr=minbestellwert }

    { 74  ;4   ;Column  ;preisstellung       ;
               IncludeCaption=No;
               SourceExpr=preisstellung }

    { 75  ;4   ;Column  ;versand             ;
               IncludeCaption=No;
               SourceExpr=versand }

    { 50  ;4   ;Column  ;LieferText          ;
               IncludeCaption=No;
               SourceExpr=LieferText }

    { 76  ;4   ;Column  ;STRSUBSTNO__Pct1_ZlgBedDescription;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO('%1',ZlgBed.Description) }

    { 77  ;4   ;Column  ;STRSUBSTNO__inEURzumTageskursderLieferung;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO(':   in EUR zum Tageskurs der Lieferung') }

    { 78  ;4   ;Column  ;STRSUBSTNO__1EUR_Pct1Pct2Rechnungsstellungerfolgt_SalesHeade;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO(':   1 EUR=%1 %2 Rechnungsstellung erfolgt', "Sales Header"."Euro-Parit„tsw„hrungscode", "Sales Header"."Euro-Parit„tsw„hrungsfaktor") }

    { 79  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 80  ;3   ;DataItem;Unterschrift2       ;
               DataItemTable=Table18;
               DataItemLinkReference=Sales Header;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 81  ;4   ;Column  ;VerkauferTextInnen  ;
               IncludeCaption=No;
               SourceExpr=Verk„uferTextInnen }

    { 82  ;4   ;Column  ;VerkauferText       ;
               IncludeCaption=No;
               SourceExpr=Verk„uferText }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   v_total_drucken:=FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 2   ;2   ;Field     ;
                  CaptionML=DEU=2. Unterschrift;
                  SourceExpr=Unterzeichner2 }

      { 1140002;2;Field     ;
                  CaptionML=DEU=Totalbetrag drucken;
                  SourceExpr=v_total_drucken }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      LieferBed@1140001 : Record 10;
      ZlgBed@1140002 : Record 3;
      VerkEinkPerson@1140003 : Record 13;
      Firmendaten@1140004 : Record 79;
      MWSTBetragZeile@1140005 : TEMPORARY Record 290;
      SalesLineTemp@1140006 : TEMPORARY Record 37;
      W„hrungsWechKurs@1000000005 : Record 330;
      Artikel@1000000004 : Record 27;
      Deb@1000000003 : Record 18;
      VerkEinkPersonInnen@1000000002 : Record 13;
      SalesLine@1000000011 : Record 37;
      FindSalesPrice@1000000010 : Record 7002;
      Anrede@1000000009 : Record 5069;
      Salutation@1000000008 : Record 5068;
      Kontakt@1000000007 : Record 5050;
      language@1000000006 : Record 8;
      Benutzer@1000000012 : Record 2000000120;
      TroubleshootingSetup@1000000017 : Record 5945;
      SalutationFormula@1000000020 : Record 5069;
      leadfree_artikel@1000000024 : Record 27;
      lead_artikel@1000000023 : Record 27;
      VerkDruckZ„hler@1140007 : Codeunit 313;
      FormatAdr@1140008 : Codeunit 365;
      VerkBuchen@1140009 : Codeunit 80;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      Anschrift@1140011 : ARRAY [9] OF Text[50];
      FirmaAdr@1140013 : ARRAY [8] OF Text[50];
      CompanyInfo@1000000013 : ARRAY [20] OF Text;
      Verk„uferText@1140014 : Text[100];
      MWStNrText@1140015 : Text[30];
      ReferenzText@1140016 : Text[30];
      TotalText@1140017 : Text[50];
      TotalInklMWStText@1140018 : Text[50];
      MehrZeilen@1140019 : Boolean;
      AnzKopien@1140020 : Integer;
      AnzSchleifen@1140021 : Integer;
      KopieText@1140022 : Text[30];
      i@1140024 : Integer;
      Einkaufsw„hrungskurs@1140030 : Decimal;
      Verkaufsw„hrungskurs@1140031 : Decimal;
      PreisText@1140033 : Text[30];
      LieferText@1140034 : Text[30];
      AngebotsText@1140036 : Text[100];
      Verk„uferTextInnen@1140037 : Text[100];
      Verk„uferText1@1140038 : Text[100];
      Verk„uferText2@1140039 : Text[100];
      Verk„uferText1Innen@1140040 : Text[100];
      Verk„uferText2Innen@1140041 : Text[100];
      SalesPerson@1000000014 : Code[20];
      Text1@1140042 : Text[90];
      text2@1140043 : Text[90];
      Text3@1140070 : Text[90];
      w„hrung@1140044 : Text[10];
      Unterzeichner1@1140045 : Text[10];
      Unterzeichner2@1140046 : Text[10];
      versand@1140048 : Text[100];
      minbestellwert@1140049 : Text[30];
      lead_free_text0@1140050 : Text[80];
      lead_free_text1@1140051 : Text[120];
      leadfree_symbol@1140052 : Text[3];
      lead_symbol@1140079 : Text[3];
      lead_text@1140078 : Text[120];
      lead_free_text2@1140054 : Text[120];
      Faxnummer@1140055 : TextConst 'DEU=@@NMR +49 5119686464@@';
      Faxpriorit„t@1140056 : TextConst 'DEU=@@PRI 0@@';
      Faxaufl”sung@1140057 : TextConst 'DEU=@@AFL HOCH@@';
      Faxzustellbest„tigung@1140058 : TextConst 'DEU=@@ZSB 1@@';
      Faxparameter@1140059 : Text[210];
      Faxbetreff@1140060 : Text[100];
      ansp_fax@1140061 : Text[30];
      ansp_telefon@1140062 : Text[30];
      ansp_anrede@1140063 : Text[40];
      ihre_ref@1140064 : Text[90];
      preisstellung@1140065 : Text[60];
      Preis_info@1140066 : Text[45];
      NamePart@1140072 : ARRAY [5] OF Text[50];
      Text000@1000000000 : TextConst 'DEU=Fehlende Zuordnung zwischen %1 (%2) und %3 in der Tabelle %4. Bitte wenden Sie sich an Ihren Systemadministrator.';
      Text002@1000000019 : TextConst 'DEU=in %1 zzgl. MwSt;ENU=in %1 plus V.A.T. if applicable';
      Text021@1140073 : TextConst 'DEU=Sie mssen formelle und informelle Anredeformeln in der Sprache %1 fr den Kontakt %2 einrichten.;ENU=You have to set up formal and informal salutation formulas in %1  language for the %2 contact.';
      Zusatz@1140074 : Text[30];
      x@1140075 : Integer;
      ende@1140076 : Boolean;
      v_FER_SPL@1140080 : Boolean;
      v_system@1140081 : Boolean;
      v_sum_system@1140083 : Decimal;
      v_total_drucken@1140084 : Boolean;
      msrp@1140086 : Decimal;
      msrp_text@1000000022 : Text;
      system_preisbindung@1000000015 : Text;
      adv_andruck_notwendig@1000000018 : Boolean;
      BleifreiText@1000000021 : TextConst 'DEU=ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.;ENU=ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
      SysPreisbindungsText@1000000016 : TextConst 'DEU=Die Konditionen basieren auf Basis der aktuellen Preisliste und sind gltig bis\    zur n„chsten Žnderung durch den Hersteller - gilt nur fr USD.;ENU=:    USD Conditions/Offers are based on current pricebook and valid to\   next change due to the manufacturer.';
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer2@5037(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(adv_andruck_notwendig);
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer1@5036(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         ReportForNav.ShowOutput(system_preisbindung <> '');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header2@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ihre_ref := '';
        IF "Sales Header"."External Document No." <> '' THEN ihre_ref := "Sales Header"."External Document No." + ' ';
        IF "Sales Header"."Your Reference" <> '' THEN ihre_ref := ihre_ref + "Sales Header"."Your Reference";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header3@5011(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput ("Sales Header".Status <> "Sales Header".Status::Released);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header4@5012(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput ("Sales Header".Status <> "Sales Header".Status::Released);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header6@5013(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Sales Header"."Kontaktperson (kopie)" <> '') AND (ReportForNav.PageNo = 1));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header7@5014(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((ReportForNav.PageNo = 1) AND ("Sales Header".Text1 = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header8@5015(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Sales Header".Text1 <> '') AND (ReportForNav.PageNo = 1));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header9@5016(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(v_system = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header10@5017(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
          ReportForNav.ShowOutput(v_system = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body11@5018(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(SalesLineTemp.Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body12@5019(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(SalesLineTemp.Type = SalesLineTemp.Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body13@5020(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((SalesLineTemp.Type = SalesLineTemp.Type::Item) AND (v_system = FALSE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body14@5021(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(SalesLineTemp.Type = SalesLineTemp.Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body15@5022(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((SalesLineTemp.Type = SalesLineTemp.Type::Item) AND (v_system = TRUE));
         IF ((SalesLineTemp.Type = SalesLineTemp.Type::Item) AND (v_system = TRUE)) THEN
           v_sum_system := v_sum_system + ("Sales Line".Quantity * "Sales Line"."Unit Price");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body16@5023(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        {lshanf c01}
        ReportForNav.ShowOutput(SalesLineTemp."Description 2" <> '');
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body17@5024(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Artikel."WEEE-Reg.-Nr." <>'');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body18@5025(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput("Sales Line"."Cross-Reference No."<> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body19@5026(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((Artikel.NCNR = TRUE) AND (SalesLineTemp."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body20@5027(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //Das Feld Angebotsstatus gibt es nicht mehr in NAV 2016
        //ReportForNav.ShowOutput (("Sales Header".Angebotsstatus <> '') AND
        //  (SalesLineTemp.Type = SalesLineTemp.Type::Item));
        ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer24@5031(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer26@5032(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((v_system = TRUE) AND (v_total_drucken = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer28@5033(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer32@5034(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput("Sales Header"."Euro-Parit„tsw„hrungscode" <> '')
      END;
    END;

    LOCAL PROCEDURE OnPreSectionUnterschrift2_Body33@5035(VAR Unterschrift2@1000000000 : Record 18);
    BEGIN
      Benutzer.RESET;
      Benutzer.SETRANGE("User Name",USERID);
      Benutzer.FINDFIRST;
      SalesPerson := Benutzer."Salesperson Code";
      IF UPPERCASE(USERID) = 'W2K\NAV2016_SRV' THEN
        SalesPerson := "Sales Header"."Salesperson Code";

      WITH Unterschrift2 DO BEGIN
        Verk„uferText1 := '';
        Verk„uferText2 := '';
        IF Unterzeichner2 = '' THEN BEGIN
          IF VerkEinkPerson.GET(SalesPerson) THEN
          CASE VerkEinkPerson."Commercial procuration" OF
              VerkEinkPerson."Commercial procuration"::Nein: Zusatz := 'i.A.';
              VerkEinkPerson."Commercial procuration"::Prokura: Zusatz := 'ppa.';
              VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz := '';
          END;
          Verk„uferText := Zusatz + ' ' + VerkEinkPerson."First name" + ' ' + VerkEinkPerson.Name;
          Verk„uferTextInnen := '';
        END ELSE BEGIN
          IF VerkEinkPerson.GET(SalesPerson) THEN
            CASE VerkEinkPerson."Commercial procuration" OF
                VerkEinkPerson."Commercial procuration"::Nein: Zusatz := 'i.A.';
                VerkEinkPerson."Commercial procuration"::Prokura: Zusatz := 'ppa.';
                VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz := '';
            END;
        Verk„uferTextInnen := Zusatz + ' ' + VerkEinkPerson."First name" + ' ' + VerkEinkPerson.Name;
        IF VerkEinkPerson.GET(Unterzeichner2) THEN
          CASE VerkEinkPerson."Commercial procuration" OF
              VerkEinkPerson."Commercial procuration"::Nein: Zusatz := 'i.A.';
              VerkEinkPerson."Commercial procuration"::Prokura: Zusatz := 'ppa.';
              VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz := '';
          END;
        Verk„uferText := Zusatz + ' ' + VerkEinkPerson."First name" + ' ' + VerkEinkPerson.Name;
        END;
      END;
    END;

    PROCEDURE WechKursBetrag@2(Datum@1140000 : Date;W„hrungCode@1140001 : Code[10];W„hrungFaktor@1140002 : Decimal) : Decimal;
    VAR
      BezugAufWechselkursbetr@1140003 : Decimal;
      WechselkursBetr@1140004 : Decimal;
      BezugAufW„hrungscode@1140005 : Code[10];
      FesterWechselkursBetr@1140006 : Option;
    BEGIN
      IF W„hrungCode = '' THEN
        EXIT(1);
      W„hrungsWechKurs.FindCurrency(Datum,W„hrungCode,1);
      W„hrungsWechKurs.TESTFIELD("Exchange Rate Amount");
      W„hrungsWechKurs.TESTFIELD("Relational Exch. Rate Amount");
      BezugAufWechselkursbetr := W„hrungsWechKurs."Relational Exch. Rate Amount";
      WechselkursBetr := W„hrungsWechKurs."Exchange Rate Amount";
      BezugAufW„hrungscode := W„hrungsWechKurs."Relational Currency Code";
      IF W„hrungsWechKurs."Relational Currency Code" = '' THEN
        W„hrungsWechKurs."Exchange Rate Amount" := W„hrungFaktor * W„hrungsWechKurs."Relational Exch. Rate Amount"
      ELSE BEGIN
        W„hrungsWechKurs.FindCurrency(Datum,BezugAufW„hrungscode,2);
        W„hrungsWechKurs.TESTFIELD("Exchange Rate Amount");
        W„hrungsWechKurs.TESTFIELD("Relational Exch. Rate Amount");
        W„hrungsWechKurs."Exchange Rate Amount" := (W„hrungFaktor *
          (BezugAufWechselkursbetr * W„hrungsWechKurs."Relational Exch. Rate Amount"));
      END;
      EXIT(W„hrungsWechKurs."Exchange Rate Amount");
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header2': OnPreSectionSeiteSchleife_Header2(SeiteSchleife);
          'Header3': OnPreSectionSeiteSchleife_Header3(SeiteSchleife);
          'Header4': OnPreSectionSeiteSchleife_Header4(SeiteSchleife);
        END;
        'RundungsRahmen': CASE SectionId OF
          'Header6': OnPreSectionRundungsRahmen_Header6(RundungsRahmen);
          'Header7': OnPreSectionRundungsRahmen_Header7(RundungsRahmen);
          'Header8': OnPreSectionRundungsRahmen_Header8(RundungsRahmen);
          'Header9': OnPreSectionRundungsRahmen_Header9(RundungsRahmen);
          'Header10': OnPreSectionRundungsRahmen_Header10(RundungsRahmen);
          'Body11': OnPreSectionRundungsRahmen_Body11(RundungsRahmen);
          'Body12': OnPreSectionRundungsRahmen_Body12(RundungsRahmen);
          'Body13': OnPreSectionRundungsRahmen_Body13(RundungsRahmen);
          'Body14': OnPreSectionRundungsRahmen_Body14(RundungsRahmen);
          'Body15': OnPreSectionRundungsRahmen_Body15(RundungsRahmen);
          'Body16': OnPreSectionRundungsRahmen_Body16(RundungsRahmen);
          'Body17': OnPreSectionRundungsRahmen_Body17(RundungsRahmen);
          'Body18': OnPreSectionRundungsRahmen_Body18(RundungsRahmen);
          'Body19': OnPreSectionRundungsRahmen_Body19(RundungsRahmen);
          'Body20': OnPreSectionRundungsRahmen_Body20(RundungsRahmen);
          'Footer24': OnPreSectionRundungsRahmen_Footer24(RundungsRahmen);
          'Footer26': OnPreSectionRundungsRahmen_Footer26(RundungsRahmen);
          'Footer28': OnPreSectionRundungsRahmen_Footer28(RundungsRahmen);
          'Footer1': OnPreSectionRundungsRahmen_Footer1(RundungsRahmen);
          'Footer2': OnPreSectionRundungsRahmen_Footer2(RundungsRahmen);
          'Footer32': OnPreSectionRundungsRahmen_Footer32(RundungsRahmen);
        END;
        'Unterschrift2': CASE SectionId OF
          'Body33': OnPreSectionUnterschrift2_Body33(Unterschrift2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,SalesLineTemp.Amount);
                ReportForNav.AddTotal(DataItemId,1,SalesLineTemp."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,SalesLineTemp."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 SalesLineTemp.Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 SalesLineTemp."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 SalesLineTemp."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  RundungsRahmen, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
      -#DOCU#
      001 28.01.02 kn SC1.01: # Kap. C 2.1.2
          - Status, Lieferzeit (KW) drucken
          - bei Status Kalkulation Kalkulationsdaten drucken
      002 06.03.02 kn SC1.02 kn SC1.02: #01661
          Beleg nach Vorlage anpassen
      003 27.05.02 kn SC1.04: #02012
          - Textboxen im Kalkulation-Body vergr”ssert
          - Sachkonten-Zeilen nicht drucken
      004 20.06.02 wr SC1.07: #02035
          - Fax und Tel. werden in der Kontaktperson mit dem Schlssel
            Verkaufskopf."Interessent Nr.", Verkaufskopf."Kontaktperson Nr." nachgeschlagen
          - W„hrungskurs wird auch bei Angebotsstatus = gltig gedruckt,
            wenn EK- und VK-W„hrung unterschiedlich
          - Europarit„tstext gem Vorlage, falls "Euro-Parit„tsw„hrungscode" eingetragen
          - 'Einzelpreis EUR' in Einzelpreis EURO' ge„ndert
          - Wenn "Lieferzeit KW" und Lieferdatum unbestimmt, dann Liefertext = 'ab Lager'
      +#DOCU#
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
333T+MjL6CHdFLyGOPvX/wc=</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Picture_Firmendaten">
          <DataField>Picture_Firmendaten</DataField>
        </Field>
        <Field Name="ISOLogo_Firmendaten">
          <DataField>ISOLogo_Firmendaten</DataField>
        </Field>
        <Field Name="CompanyName">
          <DataField>CompanyName</DataField>
        </Field>
        <Field Name="CompanyAddress">
          <DataField>CompanyAddress</DataField>
        </Field>
        <Field Name="CompanyPhone">
          <DataField>CompanyPhone</DataField>
        </Field>
        <Field Name="CompanyFax">
          <DataField>CompanyFax</DataField>
        </Field>
        <Field Name="CompanyVATRegNo">
          <DataField>CompanyVATRegNo</DataField>
        </Field>
        <Field Name="CompanyRegNo">
          <DataField>CompanyRegNo</DataField>
        </Field>
        <Field Name="CompanyVorstand">
          <DataField>CompanyVorstand</DataField>
        </Field>
        <Field Name="CompanyARV">
          <DataField>CompanyARV</DataField>
        </Field>
        <Field Name="CompanyAmtsgericht">
          <DataField>CompanyAmtsgericht</DataField>
        </Field>
        <Field Name="CompanyWEEERegNo">
          <DataField>CompanyWEEERegNo</DataField>
        </Field>
        <Field Name="CompanyPostfach">
          <DataField>CompanyPostfach</DataField>
        </Field>
        <Field Name="CompanyHomepage">
          <DataField>CompanyHomepage</DataField>
        </Field>
        <Field Name="CompanyEORINr">
          <DataField>CompanyEORINr</DataField>
        </Field>
        <Field Name="E_Mail_Salesperson_Purchaser">
          <DataField>E_Mail_Salesperson_Purchaser</DataField>
        </Field>
        <Field Name="Salesperson_Purchaserfirstname__Salesperson_PurchaserName">
          <DataField>Salesperson_Purchaserfirstname__Salesperson_PurchaserName</DataField>
        </Field>
        <Field Name="ansp_anrede">
          <DataField>ansp_anrede</DataField>
        </Field>
        <Field Name="ansp_telefon">
          <DataField>ansp_telefon</DataField>
        </Field>
        <Field Name="ansp_fax">
          <DataField>ansp_fax</DataField>
        </Field>
        <Field Name="E_Mail_Contact">
          <DataField>E_Mail_Contact</DataField>
        </Field>
        <Field Name="FaxNo_Contact">
          <DataField>FaxNo_Contact</DataField>
        </Field>
        <Field Name="PhoneNo_Contact">
          <DataField>PhoneNo_Contact</DataField>
        </Field>
        <Field Name="Anschrift2">
          <DataField>Anschrift2</DataField>
        </Field>
        <Field Name="Sell_toCustomerNo_SalesHeader">
          <DataField>Sell_toCustomerNo_SalesHeader</DataField>
        </Field>
        <Field Name="DocumentDate_SalesHeader">
          <DataField>DocumentDate_SalesHeader</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="KopieText">
          <DataField>KopieText</DataField>
        </Field>
        <Field Name="Anschrift9">
          <DataField>Anschrift9</DataField>
        </Field>
        <Field Name="Anschrift8">
          <DataField>Anschrift8</DataField>
        </Field>
        <Field Name="Anschrift7">
          <DataField>Anschrift7</DataField>
        </Field>
        <Field Name="Anschrift6">
          <DataField>Anschrift6</DataField>
        </Field>
        <Field Name="Anschrift5">
          <DataField>Anschrift5</DataField>
        </Field>
        <Field Name="Anschrift4">
          <DataField>Anschrift4</DataField>
        </Field>
        <Field Name="Anschrift3">
          <DataField>Anschrift3</DataField>
        </Field>
        <Field Name="Anschrift1">
          <DataField>Anschrift1</DataField>
        </Field>
        <Field Name="ihre_ref">
          <DataField>ihre_ref</DataField>
        </Field>
        <Field Name="SalesHeaderStatus">
          <DataField>SalesHeaderStatus</DataField>
        </Field>
        <Field Name="CurrencyFactor_SalesHeader">
          <DataField>CurrencyFactor_SalesHeader</DataField>
        </Field>
        <Field Name="CurrencyFactor_SalesHeaderFormat">
          <DataField>CurrencyFactor_SalesHeaderFormat</DataField>
        </Field>
        <Field Name="Einkaufswahrungsfaktor_SalesLine">
          <DataField>Einkaufswahrungsfaktor_SalesLine</DataField>
        </Field>
        <Field Name="Einkaufswahrungsfaktor_SalesLineFormat">
          <DataField>Einkaufswahrungsfaktor_SalesLineFormat</DataField>
        </Field>
        <Field Name="Einkaufswahrungscode_SalesLine">
          <DataField>Einkaufswahrungscode_SalesLine</DataField>
        </Field>
        <Field Name="CurrencyCode_SalesHeader">
          <DataField>CurrencyCode_SalesHeader</DataField>
        </Field>
        <Field Name="system_preisbindung">
          <DataField>system_preisbindung</DataField>
        </Field>
        <Field Name="Kontaktperson_kopie_SalesHeader">
          <DataField>Kontaktperson_kopie_SalesHeader</DataField>
        </Field>
        <Field Name="Text1">
          <DataField>Text1</DataField>
        </Field>
        <Field Name="Text1_SalesHeader">
          <DataField>Text1_SalesHeader</DataField>
        </Field>
        <Field Name="Text2_SalesHeader">
          <DataField>Text2_SalesHeader</DataField>
        </Field>
        <Field Name="Preis_info">
          <DataField>Preis_info</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
        <Field Name="LineNo_SalesLineTemp">
          <DataField>LineNo_SalesLineTemp</DataField>
        </Field>
        <Field Name="Verpackungsmenge_Artikel">
          <DataField>Verpackungsmenge_Artikel</DataField>
        </Field>
        <Field Name="Verpackungsmenge_ArtikelFormat">
          <DataField>Verpackungsmenge_ArtikelFormat</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLine">
          <DataField>UnitPrice_SalesLine</DataField>
        </Field>
        <Field Name="UnitPrice_SalesLineFormat">
          <DataField>UnitPrice_SalesLineFormat</DataField>
        </Field>
        <Field Name="Quantity_SalesLine">
          <DataField>Quantity_SalesLine</DataField>
        </Field>
        <Field Name="Quantity_SalesLineFormat">
          <DataField>Quantity_SalesLineFormat</DataField>
        </Field>
        <Field Name="Artikelnr2_SalesLine">
          <DataField>Artikelnr2_SalesLine</DataField>
        </Field>
        <Field Name="SalesLineQuantity_SalesLineUnitPrice">
          <DataField>SalesLineQuantity_SalesLineUnitPrice</DataField>
        </Field>
        <Field Name="SalesLineQuantity_SalesLineUnitPriceFormat">
          <DataField>SalesLineQuantity_SalesLineUnitPriceFormat</DataField>
        </Field>
        <Field Name="msrp">
          <DataField>msrp</DataField>
        </Field>
        <Field Name="msrpFormat">
          <DataField>msrpFormat</DataField>
        </Field>
        <Field Name="msrp_text">
          <DataField>msrp_text</DataField>
        </Field>
        <Field Name="Description2_SalesLine">
          <DataField>Description2_SalesLine</DataField>
        </Field>
        <Field Name="WEEE_Reg_Nr__ArtikelWEEE_Reg_Nr">
          <DataField>WEEE_Reg_Nr__ArtikelWEEE_Reg_Nr</DataField>
        </Field>
        <Field Name="Cross_ReferenceNo_SalesLine">
          <DataField>Cross_ReferenceNo_SalesLine</DataField>
        </Field>
        <Field Name="Quotenr_SalesLine">
          <DataField>Quotenr_SalesLine</DataField>
        </Field>
        <Field Name="ProfitPct_SalesLine">
          <DataField>ProfitPct_SalesLine</DataField>
        </Field>
        <Field Name="ProfitPct_SalesLineFormat">
          <DataField>ProfitPct_SalesLineFormat</DataField>
        </Field>
        <Field Name="VK_Preis_MW_SalesLine">
          <DataField>VK_Preis_MW_SalesLine</DataField>
        </Field>
        <Field Name="VK_Preis_MW_SalesLineFormat">
          <DataField>VK_Preis_MW_SalesLineFormat</DataField>
        </Field>
        <Field Name="DC_Preis_Wahrung_SalesLine">
          <DataField>DC_Preis_Wahrung_SalesLine</DataField>
        </Field>
        <Field Name="DC_Preis_Wahrung_SalesLineFormat">
          <DataField>DC_Preis_Wahrung_SalesLineFormat</DataField>
        </Field>
        <Field Name="DC_Preis_MW_SalesLine">
          <DataField>DC_Preis_MW_SalesLine</DataField>
        </Field>
        <Field Name="DC_Preis_MW_SalesLineFormat">
          <DataField>DC_Preis_MW_SalesLineFormat</DataField>
        </Field>
        <Field Name="ZollsatzPct_Artikel">
          <DataField>ZollsatzPct_Artikel</DataField>
        </Field>
        <Field Name="ZollsatzPct_ArtikelFormat">
          <DataField>ZollsatzPct_ArtikelFormat</DataField>
        </Field>
        <Field Name="DC_Preis_EKW_SalesLine">
          <DataField>DC_Preis_EKW_SalesLine</DataField>
        </Field>
        <Field Name="DC_Preis_EKW_SalesLineFormat">
          <DataField>DC_Preis_EKW_SalesLineFormat</DataField>
        </Field>
        <Field Name="VK_Preis_EKW_SalesLine">
          <DataField>VK_Preis_EKW_SalesLine</DataField>
        </Field>
        <Field Name="VK_Preis_EKW_SalesLineFormat">
          <DataField>VK_Preis_EKW_SalesLineFormat</DataField>
        </Field>
        <Field Name="HandlingskostenPct_SalesLine">
          <DataField>HandlingskostenPct_SalesLine</DataField>
        </Field>
        <Field Name="HandlingskostenPct_SalesLineFormat">
          <DataField>HandlingskostenPct_SalesLineFormat</DataField>
        </Field>
        <Field Name="lead_symbol">
          <DataField>lead_symbol</DataField>
        </Field>
        <Field Name="lead_text">
          <DataField>lead_text</DataField>
        </Field>
        <Field Name="wahrung">
          <DataField>wahrung</DataField>
        </Field>
        <Field Name="v_sum_system">
          <DataField>v_sum_system</DataField>
        </Field>
        <Field Name="v_sum_systemFormat">
          <DataField>v_sum_systemFormat</DataField>
        </Field>
        <Field Name="minbestellwert">
          <DataField>minbestellwert</DataField>
        </Field>
        <Field Name="preisstellung">
          <DataField>preisstellung</DataField>
        </Field>
        <Field Name="versand">
          <DataField>versand</DataField>
        </Field>
        <Field Name="LieferText">
          <DataField>LieferText</DataField>
        </Field>
        <Field Name="STRSUBSTNO__Pct1_ZlgBedDescription">
          <DataField>STRSUBSTNO__Pct1_ZlgBedDescription</DataField>
        </Field>
        <Field Name="STRSUBSTNO__inEURzumTageskursderLieferung">
          <DataField>STRSUBSTNO__inEURzumTageskursderLieferung</DataField>
        </Field>
        <Field Name="STRSUBSTNO__1EUR_Pct1Pct2Rechnungsstellungerfolgt_SalesHeade">
          <DataField>STRSUBSTNO__1EUR_Pct1Pct2Rechnungsstellungerfolgt_SalesHeade</DataField>
        </Field>
        <Field Name="VerkauferTextInnen">
          <DataField>VerkauferTextInnen</DataField>
        </Field>
        <Field Name="VerkauferText">
          <DataField>VerkauferText</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

