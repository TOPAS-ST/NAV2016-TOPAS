OBJECT Report 50052 TOPAS Verkauf - Angebot
{
  OBJECT-PROPERTIES
  {
    Date=21.10.21;
    Time=08:15:48;
    Modified=Yes;
    Version List=Beleg - manuell --> 50152,FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    ShowPrintStatus=No;
    OnInitReport=BEGIN
                   FIBUEinrichtung.GET;
                   Firmendaten.GET;
                   Firmendaten.CALCFIELDS("ISO Logo",Picture);

                   Benutzer.RESET;
                   Benutzer.SETRANGE("User Name",USERID);
                   Benutzer.FINDFIRST;
                   IF (Benutzer."Salesperson Code" = '') AND (UPPERCASE(USERID) <> 'W2K\NAV2016_SRV') THEN
                     ERROR(Text000,Benutzer.FIELDCAPTION("User Name"),USERID,Benutzer.FIELDCAPTION("Salesperson Code"),Benutzer.TABLECAPTION);

                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=CONST(Quote));
               ReqFilterHeadingML=DEU=Verkaufsangebot;
               OnAfterGetRecord=BEGIN
                                  CurrReport.LANGUAGE := language.GetLanguageID("Language Code");
                                  TOPAS_Funktionen.GetCompanyInformation(CompanyInfo,Firmendaten);
                                  IF "Salesperson Code" = '' THEN BEGIN
                                    VerkEinkPerson.INIT;
                                    Verk„uferText := '';
                                  END ELSE BEGIN
                                    VerkEinkPerson.GET("Salesperson Code");
                                    IF VerkEinkPerson."Fax No." = '' THEN BEGIN
                                      Verk„uferText := STRSUBSTNO ('i.A. %1', VerkEinkPerson.Name);
                                      Verk„uferText1 := '';
                                      Verk„uferText2 := STRSUBSTNO ('(Tel. %1)', VerkEinkPerson."First name");
                                    END ELSE BEGIN
                                      Verk„uferText := STRSUBSTNO ('i.A. %1', VerkEinkPerson.Name);
                                      Verk„uferText1 := STRSUBSTNO ('%1',VerkEinkPerson."Fax No.");
                                      Verk„uferText2 := STRSUBSTNO ('(Tel. %1)', VerkEinkPerson."First name");
                                    END;
                                  END;
                                  IF "Sales Header"."Betreuer Innendienst" = '' THEN BEGIN
                                    VerkEinkPersonInnen.INIT;
                                    Verk„uferTextInnen := '';
                                  END ELSE BEGIN
                                    VerkEinkPersonInnen.GET("Sales Header"."Betreuer Innendienst");
                                    IF VerkEinkPersonInnen."Fax No." ='' THEN BEGIN
                                      Verk„uferTextInnen := STRSUBSTNO ('i.A. %1', VerkEinkPersonInnen.Name);
                                      Verk„uferText1Innen := '';
                                      Verk„uferText2Innen := STRSUBSTNO ('(Tel. %1)', VerkEinkPersonInnen."First name");
                                    END ELSE BEGIN
                                      Verk„uferTextInnen := STRSUBSTNO ('i.A. %1', VerkEinkPersonInnen.Name);
                                      Verk„uferText1Innen := STRSUBSTNO ('%1', VerkEinkPersonInnen."Fax No.");
                                      Verk„uferText2Innen := STRSUBSTNO ('(Tel. %1)', VerkEinkPersonInnen."First name");
                                    END;
                                  END;
                                  IF ("Salesperson Code" = '') AND
                                     ("Sales Header"."Betreuer Innendienst" = '') THEN
                                    AngebotsText := STRSUBSTNO('Angebot Nr. %1',"Sales Header"."No.")
                                  ELSE
                                    IF ("Salesperson Code" = '') THEN
                                      AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2',"Sales Header"."No.",
                                        "Sales Header"."Betreuer Innendienst")
                                    ELSE
                                      IF ("Sales Header"."Betreuer Innendienst" = '') THEN
                                        AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2',"Sales Header"."No.",
                                          "Sales Header"."Salesperson Code")
                                      ELSE
                                        AngebotsText := STRSUBSTNO('Angebot Nr. %1  / %2 / %3',"Sales Header"."No.",
                                          "Sales Header"."Betreuer Innendienst", "Sales Header"."Salesperson Code");
                                  IF "Your Reference" = '' THEN
                                    ReferenzText := ''
                                  ELSE
                                    ReferenzText := FIELDNAME("Your Reference");
                                  IF "VAT Registration No." = '' THEN
                                    MWStNrText := ''
                                  ELSE
                                    MWStNrText := FIELDNAME("VAT Registration No.");
                                  IF "Shipment Method Code" = '' THEN
                                    LieferBed.INIT
                                  ELSE
                                    LieferBed.GET("Shipment Method Code");
                                  IF "Currency Code" = '' THEN BEGIN
                                    FIBUEinrichtung.TESTFIELD("LCY Code");
                                    TotalText := STRSUBSTNO('Total %1',FIBUEinrichtung."LCY Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',FIBUEinrichtung."LCY Code");
                                    PreisText := FIBUEinrichtung."LCY Code";
                                    IF PreisText = 'EUR' THEN
                                      PreisText += 'O';
                                  END ELSE BEGIN
                                    TotalText := STRSUBSTNO('Total %1',"Currency Code");
                                    TotalInklMWStText := STRSUBSTNO('Total %1 inkl. MWSt',"Currency Code");
                                    PreisText := "Currency Code";
                                  END;
                                  preisstellung := STRSUBSTNO(Text002,PreisText);

                                  FormatAdr.SalesHeaderSellTo(DebAdr,"Sales Header");
                                  IF "Payment Terms Code" = '' THEN
                                    ZlgBed.INIT
                                  ELSE
                                    ZlgBed.GET("Payment Terms Code");

                                  Verkaufsw„hrungskurs := WechKursBetrag (WORKDATE,"Currency Code", "Currency Factor");

                                  IF NOT Deb.GET("Sales Header"."Sell-to Customer No.") THEN
                                    Deb.INIT
                                  ELSE
                                    IF Deb."System Preisbindung" THEN
                                      system_preisbindung := SysPreisbindungsText
                                    ELSE
                                      system_preisbindung := '';

                                  IF "Currency Code" = '' THEN
                                    w„hrung := '°'
                                  ELSE
                                    w„hrung := "Currency Code";

                                  v_FER_SPL := FALSE;
                                  adv_andruck_notwendig := FALSE;
                                  v_sum_system := 0;
                                  SalesLine.RESET;
                                  SalesLine.SETRANGE("Document No.","Sales Header"."No.");
                                  SalesLine.SETRANGE(Type,SalesLine.Type::Item);
                                  SalesLine.SETFILTER("Manufacturer Code",'20|52|57|5710|5720|5730|59|82|85|96|9610|9620');
                                  IF SalesLine.FINDFIRST THEN
                                    v_system := TRUE;

                                  IF "Sales Header"."Territory Code" = 'SYSTEM' THEN BEGIN
                                    IF "Currency Code" = '' THEN
                                      msrp_text := 'MSRP EUR'
                                    ELSE
                                      msrp_text := 'MSRP ' + "Currency Code";
                                  END;
                                END;

               ReqFilterFields=No.,Sell-to Customer No.,No. Printed }

    { 2   ;1   ;DataItem;                    ;
               DataItemTable=Table18;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 3   ;1   ;DataItem;                    ;
               DataItemTable=Table5050;
               DataItemLink=No.=FIELD(Kontaktnr.) }

    { 5   ;1   ;DataItem;                    ;
               DataItemTable=Table13;
               DataItemTableView=SORTING(Code);
               OnAfterGetRecord=BEGIN
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    ansp_telefon := "Salesperson/Purchaser"."Phone No.";
                                    ansp_fax := "Salesperson/Purchaser"."Fax No.";
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech;
                                  END ELSE BEGIN
                                    ansp_telefon := "Salesperson/Purchaser".Tel_international;
                                    ansp_fax := "Salesperson/Purchaser".Fax_international;
                                    ansp_anrede := "Salesperson/Purchaser".Ansprech_eng;
                                  END;
                                END;

               DataItemLink=Code=FIELD(Betreuer Innendienst) }

    { 6   ;1   ;DataItem;KopieSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1));
               OnPreDataItem=BEGIN
                               AnzSchleifen := ABS(AnzKopien) + 1;
                               KopieText := '';
                               SETRANGE(Number,1,AnzSchleifen);
                             END;

               OnAfterGetRecord=VAR
                                  NamePart@1140001 : ARRAY [5] OF Text[50];
                                  SubStr@1140002 : Text[30];
                                  i@1140003 : Integer;
                                BEGIN
                                  CLEAR(SalesLineTemp);
                                  CLEAR(VerkBuchen);
                                  VerkBuchen.GetSalesLines("Sales Header",SalesLineTemp,0);
                                  KopieText := '';
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    Preis_info := 'Einzelpreis je Stck in ' + w„hrung;
                                    IF Number > 1 THEN KopieText := 'skopie';
                                    ReportForNav.PageNo := 1;
                                  END ELSE BEGIN
                                    Preis_info := 'Price per piece in ' + w„hrung;
                                    IF Number > 1 THEN KopieText := ' Copy';
                                    ReportForNav.PageNo := 1;
                                  END;
                                  IF CurrReport.LANGUAGE = 1031 THEN BEGIN
                                    //*** Versandbedingungen
                                    versand := '';
                                    IF "Sales Header"."Shipment Method Code" <> 'AB_HAN' THEN BEGIN
                                      versand := LieferBed.Description;
                                    END;
                                    IF "Sales Header"."Shipment Method Code" ='AB_HAN' THEN BEGIN
                                      IF "Sales Header"."Currency Code" = 'USD' THEN versand := 'Lieferungen ab 2.500,-- USD frei Haus';
                                      IF "Sales Header"."Currency Code" = '' THEN versand := 'Lieferungen ab 2.500,-- EURO frei Haus';
                                      IF "Sales Header"."Currency Code" = 'YEN' THEN versand := 'Lieferungen ab 250.000,-- JPY frei Haus';
                                    END;
                                    IF "Sales Header"."Currency Code" = 'USD' THEN
                                      IF "Sales Header"."Territory Code" <> 'SYSTEM' THEN
                                        minbestellwert := '500,-- USD'
                                      ELSE
                                        minbestellwert := '50,-- USD';
                                    IF "Sales Header"."Currency Code" = '' THEN minbestellwert := '50,-- EURO';
                                    IF "Sales Header"."Currency Code" = 'YEN' THEN minbestellwert := '50.000,-- JPY';
                                    //**********************
                                  END ELSE BEGIN
                                    //*** Versandbedingungen
                                    versand := '';
                                    IF "Sales Header"."Shipment Method Code" = 'FOB' THEN BEGIN
                                      versand := 'FOB';
                                    END ELSE BEGIN
                                      IF "Sales Header"."Shipment Method Code" = 'FHAUS' THEN
                                        versand := 'ex works'
                                      ELSE
                                        versand := LieferBed.Description;
                                    END;
                                    IF "Sales Header"."Currency Code" = 'USD' THEN
                                      IF "Sales Header"."Territory Code" <> 'SYSTEM' THEN
                                        minbestellwert := '500,-- USD'
                                      ELSE
                                        minbestellwert := '50,-- USD';
                                    IF "Sales Header"."Currency Code" = '' THEN BEGIN
                                      IF "Sales Header"."Sell-to Country/Region Code" = 'DE' THEN
                                        minbestellwert := '50,-- EURO'
                                      ELSE
                                        minbestellwert := '250,-- EURO';
                                    END;
                                    IF "Sales Header"."Currency Code" = 'YEN' THEN minbestellwert := '50.000,-- JPY';
                                    //**********************
                                  END;

                                  ende := FALSE;
                                  x := 1;
                                  text2 := "Sales Header".Kontaktperson;
                                  REPEAT
                                    IF DebAdr[x] = "Sales Header"."Sell-to Customer Name" THEN BEGIN
                                      IF DebAdr[x+1] = "Sales Header"."Sell-to Customer Name 2" THEN BEGIN
                                        Anschrift[x] := DebAdr[x];
                                        Anschrift[x+1] := DebAdr[x+1];
                                        Anschrift[x+2] := text2;
                                        Anschrift[x+3] := DebAdr[x+2];
                                        Anschrift[x+4] := DebAdr[x+3];
                                        Anschrift[x+5] := DebAdr[x+4];
                                        Anschrift[x+6] := DebAdr[x+5];
                                        Anschrift[x+7] := DebAdr[x+6];
                                        Anschrift[x+8] := DebAdr[x+7];
                                        ende := TRUE;
                                      END ELSE BEGIN
                                        Anschrift[x] := DebAdr[x];
                                        Anschrift[x+1] := text2;
                                        Anschrift[x+2] := DebAdr[x+1];
                                        Anschrift[x+3] := DebAdr[x+2];
                                        Anschrift[x+4] := DebAdr[x+3];
                                        Anschrift[x+5] := DebAdr[x+4];
                                        Anschrift[x+6] := DebAdr[x+5];
                                        Anschrift[x+7] := DebAdr[x+6];
                                        Anschrift[x+8] := DebAdr[x+7];
                                        ende := TRUE;
                                      END;
                                    END;
                                    i := i + 1;
                                  UNTIL (i = 9) OR (ende);

                                  SalutationFormula.SETRANGE("Salutation Code",Contact."Salutation Code");
                                  SalutationFormula.SETRANGE("Language Code","Sales Header"."Language Code");
                                  IF SalutationFormula.FINDFIRST THEN
                                  IF (Contact."Salutation Code" = 'MANDANT') OR (Contact."Salutation Code" = '') THEN
                                    Text1 := SalutationFormula.Salutation
                                  ELSE
                                    Text1 := STRSUBSTNO(SalutationFormula.Salutation,Contact.Surname);
                                END;

               OnPostDataItem=BEGIN
                                IF NOT CurrReport.PREVIEW THEN
                                  VerkDruckZ„hler.RUN("Sales Header");
                              END;
                               }

    { 7   ;2   ;DataItem;SeiteSchleife       ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number)
                                 WHERE(Number=CONST(1)) }

    { 8   ;3   ;Column  ;Picture_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten.Picture }

    { 9   ;3   ;Column  ;ISOLogo_Firmendaten ;
               IncludeCaption=No;
               SourceExpr=Firmendaten."ISO Logo" }

    { 1000000000;3;Column;CompanyName        ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[1] }

    { 1000000001;3;Column;CompanyAddress     ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[2]+ ', ' + CompanyInfo[4] +  ' ' + CompanyInfo[5] }

    { 1000000005;3;Column;CompanyPhone       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[6] }

    { 1000000006;3;Column;CompanyFax         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[7] }

    { 1000000007;3;Column;CompanyVATRegNo    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[8] }

    { 1000000008;3;Column;CompanyRegNo       ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[9] }

    { 1000000009;3;Column;CompanyVorstand    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[10] }

    { 1000000010;3;Column;CompanyARV         ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[11] }

    { 1000000011;3;Column;CompanyAmtsgericht ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[12] }

    { 1000000012;3;Column;CompanyWEEERegNo   ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[13] }

    { 1000000013;3;Column;CompanyPostfach    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[14] }

    { 1000000002;3;Column;CompanyHomepage    ;
               IncludeCaption=No;
               SourceExpr=CompanyInfo[15] }

    { 10  ;3   ;Column  ;E_Mail_Salesperson_Purchaser;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."E-Mail" }

    { 12  ;3   ;Column  ;Salesperson_Purchaserfirstname__Salesperson_PurchaserName;
               IncludeCaption=No;
               SourceExpr="Salesperson/Purchaser"."First name" +' ' + "Salesperson/Purchaser".Name }

    { 13  ;3   ;Column  ;ansp_anrede         ;
               IncludeCaption=No;
               SourceExpr=ansp_anrede }

    { 11  ;3   ;Column  ;ansp_telefon        ;
               IncludeCaption=No;
               SourceExpr=ansp_telefon }

    { 14  ;3   ;Column  ;ansp_fax            ;
               IncludeCaption=No;
               SourceExpr=ansp_fax }

    { 15  ;3   ;Column  ;E_Mail_Contact      ;
               IncludeCaption=No;
               SourceExpr=Contact."E-Mail" }

    { 16  ;3   ;Column  ;FaxNo_Contact       ;
               IncludeCaption=No;
               SourceExpr=Contact."Fax No." }

    { 17  ;3   ;Column  ;PhoneNo_Contact     ;
               IncludeCaption=No;
               SourceExpr=Contact."Phone No." }

    { 18  ;3   ;Column  ;Anschrift2          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[2] }

    { 19  ;3   ;Column  ;Sell_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 20  ;3   ;Column  ;DocumentDate_SalesHeader;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Header"."Document Date",0,1) }

    { 21  ;3   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="Sales Header"."No." }

    { 22  ;3   ;Column  ;ReportForNavPageNo  ;
               IncludeCaption=No;
               SourceExpr=FORMAT(ReportForNav.PageNo) }

    { 23  ;3   ;Column  ;KopieText           ;
               IncludeCaption=No;
               SourceExpr=KopieText }

    { 24  ;3   ;Column  ;Anschrift9          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[9] }

    { 25  ;3   ;Column  ;Anschrift8          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[8] }

    { 26  ;3   ;Column  ;Anschrift7          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[7] }

    { 27  ;3   ;Column  ;Anschrift6          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[6] }

    { 28  ;3   ;Column  ;Anschrift5          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[5] }

    { 29  ;3   ;Column  ;Anschrift4          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[4] }

    { 30  ;3   ;Column  ;Anschrift3          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[3] }

    { 31  ;3   ;Column  ;Anschrift1          ;
               IncludeCaption=No;
               SourceExpr=Anschrift[1] }

    { 32  ;3   ;Column  ;ihre_ref            ;
               IncludeCaption=No;
               SourceExpr=ihre_ref }

    { 33  ;3   ;Column  ;SalesHeaderStatus   ;
               IncludeCaption=No;
               SourceExpr=FORMAT("Sales Header".Status) }

    { 34  ;3   ;Column  ;CurrencyFactor_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Currency Factor" }

    { 35  ;3   ;Column  ;Einkaufswahrungsfaktor_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Einkaufsw„hrungsfaktor }

    { 36  ;3   ;Column  ;Einkaufswahrungscode_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Einkaufsw„hrungscode }

    { 37  ;3   ;Column  ;CurrencyCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Currency Code" }

    { 1000000003;3;Column;system_preisbindung;
               IncludeCaption=No;
               SourceExpr=system_preisbindung }

    { 38  ;3   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.);
               OnPreDataItem=BEGIN
                               CurrReport.BREAK;
                             END;

               OnAfterGetRecord=BEGIN
                                  Einkaufsw„hrungskurs := WechKursBetrag (WORKDATE, Einkaufsw„hrungscode, Einkaufsw„hrungsfaktor);
                                END;

               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.) }

    { 39  ;3   ;DataItem;RundungsRahmen      ;
               DataItemTable=Table2000000026;
               DataItemTableView=SORTING(Number);
               OnPreDataItem=BEGIN
                               MWSTBetragZeile.DELETEALL;
                               MehrZeilen := SalesLineTemp.FIND('+');
                               WHILE MehrZeilen AND (SalesLineTemp.Description = '') AND
                                     (SalesLineTemp."No." = '') AND (SalesLineTemp.Quantity = 0) AND
                                     (SalesLineTemp.Amount = 0)
                               DO
                                 MehrZeilen := SalesLineTemp.NEXT(-1) <> 0;
                               IF NOT MehrZeilen THEN
                                 CurrReport.BREAK;
                               SalesLineTemp.SETRANGE("Line No.",0,SalesLineTemp."Line No.");
                               SETRANGE(Number,1,SalesLineTemp.COUNT);
                             END;

               OnAfterGetRecord=BEGIN
                                  IF Number = 1 THEN
                                    SalesLineTemp.FIND('-')
                                  ELSE
                                    SalesLineTemp.NEXT;
                                  "Sales Line" := SalesLineTemp;
                                  MWSTBetragZeile.INIT;
                                  MWSTBetragZeile."VAT %" := "Sales Line"."VAT %";
                                  MWSTBetragZeile."VAT Base" := "Sales Line".Amount;
                                  MWSTBetragZeile."Amount Including VAT" := "Sales Line"."Amount Including VAT";
                                  MWSTBetragZeile.InsertLine;

                                  lead_symbol := '';
                                  lead_text := '';
                                  IF NOT Artikel.GET ("Sales Line"."No.") THEN
                                    Artikel.INIT
                                  ELSE BEGIN
                                    //20.08.09 ST - Andruck, wenn Artikel bleihaltig ist
                                    IF (Artikel."Lead Free" = FALSE) AND (Artikel."Item Tracking Code" = 'DATECODE') THEN BEGIN
                                      lead_symbol := 'ø';
                                      lead_text := BleifreiText;
                                    END;
                                  END;

                                  LieferText := "Sales Line".LZ_Text;

                                  IF v_FER_SPL = FALSE THEN BEGIN
                                    IF (("Sales Line"."Manufacturer Code" = '82') OR ("Sales Line"."Manufacturer Code" = '85')) THEN BEGIN
                                    v_FER_SPL := TRUE;
                                    END;
                                  END;

                                  //10.07.15 ST - MSRP Andruck fr Systeme, anstatt VPE
                                  msrp := 0;
                                  IF v_system = TRUE THEN BEGIN
                                    msrp := TOPAS_Funktionen.FindItemSalesPrice("Sales Line"."No.",WORKDATE,"Sales Header"."Currency Code","Sales Line"."Unit of Measure","Sales Line".Quantity,"Sales Header"."Preislisten Kalkulation");
                                    {
                                    WITH FindSalesPrice DO BEGIN
                                      SETRANGE("Item No.","Sales Line"."No.");
                                      SETFILTER("Starting Date",'<>%1',0D); //Spezialpreise unterdrcken, die eigentlich zu 0 verkauft werden, aber der MSRP fr CHAMPS Berechnung ben”tigt wird
                                      SETFILTER("Ending Date",'%1|>=%2',0D,WORKDATE);
                                      SETFILTER("Currency Code",'%1',"Sales Header"."Currency Code");
                                      IF "Sales Line"."Unit of Measure" <> '' THEN
                                        SETFILTER("Unit of Measure Code",'%1|%2',"Sales Line"."Unit of Measure",'');
                                      SETRANGE("Starting Date",0D,WORKDATE);
                                      SETRANGE("Sales Type","Sales Type"::"All Customers");
                                      SETRANGE("Sales Code");
                                      IF FINDLAST THEN
                                        msrp := FindSalesPrice."Unit Price";
                                    END;
                                    }
                                  END;

                                  //03.07.2018 ST - Andruck des Hinweises, dass noch keine ADV vorliegt, diese aber fr CHAMPS erforderlich ist
                                  IF (Customer.ADV = FALSE) AND (Customer."Territory Code" = 'SYSTEM') THEN BEGIN
                                    IF ("Sales Line".Type = "Sales Line".Type::Item) AND (Artikel.GET("Sales Line"."No.") AND (Artikel."Software Upgrade Protection")) THEN
                                      TroubleshootingSetup.SETRANGE(Type,TroubleshootingSetup.Type::Item);
                                      TroubleshootingSetup.SETRANGE("No.",Artikel."No.");
                                      TroubleshootingSetup.SETRANGE("Troubleshooting No.",'CHAMPS');
                                      IF TroubleshootingSetup.FINDFIRST THEN
                                        adv_andruck_notwendig := TRUE;
                                    IF (STRPOS("Sales Line"."Artikelnr. 2",'STUNDENSATZ') <> 0) OR (STRPOS("Sales Line"."Artikelnr. 2",'TAGESSATZ') <> 0) THEN
                                      adv_andruck_notwendig := TRUE;
                                  END;
                                END;

               OnPostDataItem=BEGIN
                                SalesLineTemp.DELETEALL;
                              END;
                               }

    { 40  ;4   ;Column  ;Kontaktperson_kopie_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Kontaktperson (kopie)" }

    { 41  ;4   ;Column  ;Text1               ;
               IncludeCaption=No;
               SourceExpr=Text1 }

    { 42  ;4   ;Column  ;Text1_SalesHeader   ;
               IncludeCaption=No;
               SourceExpr="Sales Header".Text1 }

    { 43  ;4   ;Column  ;Text2_SalesHeader   ;
               IncludeCaption=No;
               SourceExpr="Sales Header".Text2 }

    { 44  ;4   ;Column  ;Preis_info          ;
               IncludeCaption=No;
               SourceExpr=Preis_info }

    { 45  ;4   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line".Description }

    { 47  ;4   ;Column  ;LineNo_SalesLineTemp;
               IncludeCaption=No;
               SourceExpr=SalesLineTemp."Line No." }

    { 48  ;4   ;Column  ;Verpackungsmenge_Artikel;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=Artikel.Verpackungsmenge }

    { 49  ;4   ;Column  ;UnitPrice_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Unit Price";
               AutoFormatType=2;
               AutoFormatExpr="Sales Header"."Currency Code" }

    { 51  ;4   ;Column  ;Quantity_SalesLine  ;
               IncludeCaption=No;
               SourceExpr="Sales Line".Quantity }

    { 52  ;4   ;Column  ;Artikelnr2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Artikelnr. 2" }

    { 53  ;4   ;Column  ;SalesLineQuantity_SalesLineUnitPrice;
               IncludeCaption=No;
               SourceExpr=("Sales Line".Quantity*"Sales Line"."Unit Price") }

    { 54  ;4   ;Column  ;msrp                ;
               DecimalPlaces=0:0;
               IncludeCaption=No;
               SourceExpr=msrp }

    { 1000000004;4;Column;msrp_text          ;
               IncludeCaption=No;
               SourceExpr=msrp_text }

    { 55  ;4   ;Column  ;Description2_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Description 2" }

    { 56  ;4   ;Column  ;WEEE_Reg_Nr__ArtikelWEEE_Reg_Nr;
               IncludeCaption=No;
               SourceExpr='WEEE-Reg.-Nr.: '+ Artikel."WEEE-Reg.-Nr." }

    { 57  ;4   ;Column  ;Cross_ReferenceNo_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Cross-Reference No." }

    { 58  ;4   ;Column  ;Quotenr_SalesLine   ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Quotenr." }

    { 59  ;4   ;Column  ;ProfitPct_SalesLine ;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Profit %" }

    { 60  ;4   ;Column  ;VK_Preis_MW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."VK-Preis (MW)" }

    { 61  ;4   ;Column  ;DC_Preis_Wahrung_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."DC-Preis (W„hrung)" }

    { 62  ;4   ;Column  ;DC_Preis_MW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."DC-Preis (MW)" }

    { 63  ;4   ;Column  ;ZollsatzPct_Artikel ;
               IncludeCaption=No;
               SourceExpr=Artikel."Zollsatz %" }

    { 64  ;4   ;Column  ;DC_Preis_EKW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."DC-Preis (EKW)" }

    { 65  ;4   ;Column  ;VK_Preis_EKW_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."VK-Preis (EKW)" }

    { 66  ;4   ;Column  ;HandlingskostenPct_SalesLine;
               IncludeCaption=No;
               SourceExpr="Sales Line"."Handlingskosten %" }

    { 46  ;4   ;Column  ;lead_symbol         ;
               IncludeCaption=No;
               SourceExpr=lead_symbol }

    { 70  ;4   ;Column  ;lead_text           ;
               IncludeCaption=No;
               SourceExpr=lead_text }

    { 71  ;4   ;Column  ;wahrung             ;
               IncludeCaption=No;
               SourceExpr=w„hrung }

    { 72  ;4   ;Column  ;v_sum_system        ;
               IncludeCaption=No;
               SourceExpr=v_sum_system }

    { 73  ;4   ;Column  ;minbestellwert      ;
               IncludeCaption=No;
               SourceExpr=minbestellwert }

    { 74  ;4   ;Column  ;preisstellung       ;
               IncludeCaption=No;
               SourceExpr=preisstellung }

    { 75  ;4   ;Column  ;versand             ;
               IncludeCaption=No;
               SourceExpr=versand }

    { 50  ;4   ;Column  ;LieferText          ;
               IncludeCaption=No;
               SourceExpr=LieferText }

    { 76  ;4   ;Column  ;STRSUBSTNO__Pct1_ZlgBedDescription;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO('%1',ZlgBed.Description) }

    { 77  ;4   ;Column  ;STRSUBSTNO__inEURzumTageskursderLieferung;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO(':   in EUR zum Tageskurs der Lieferung') }

    { 78  ;4   ;Column  ;STRSUBSTNO__1EUR_Pct1Pct2Rechnungsstellungerfolgt_SalesHeade;
               IncludeCaption=No;
               SourceExpr=STRSUBSTNO(':   1 EUR=%1 %2 Rechnungsstellung erfolgt', "Sales Header"."Euro-Parit„tsw„hrungscode", "Sales Header"."Euro-Parit„tsw„hrungsfaktor") }

    { 79  ;3   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLinkReference=Sales Header;
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 80  ;3   ;DataItem;Unterschrift2       ;
               DataItemTable=Table18;
               DataItemLinkReference=Sales Header;
               DataItemLink=No.=FIELD(Sell-to Customer No.) }

    { 81  ;4   ;Column  ;VerkauferTextInnen  ;
               IncludeCaption=No;
               SourceExpr=Verk„uferTextInnen }

    { 82  ;4   ;Column  ;VerkauferText       ;
               IncludeCaption=No;
               SourceExpr=Verk„uferText }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
      OnOpenPage=BEGIN
                   v_total_drucken:=FALSE;
                 END;

    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 1   ;2   ;Field     ;
                  CaptionML=DEU=Anzahl Kopien;
                  SourceExpr=AnzKopien }

      { 2   ;2   ;Field     ;
                  CaptionML=DEU=2. Unterschrift;
                  SourceExpr=Unterzeichner2 }

      { 1140002;2;Field     ;
                  CaptionML=DEU=Totalbetrag drucken;
                  SourceExpr=v_total_drucken }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      FIBUEinrichtung@1140000 : Record 98;
      LieferBed@1140001 : Record 10;
      ZlgBed@1140002 : Record 3;
      VerkEinkPerson@1140003 : Record 13;
      Firmendaten@1140004 : Record 79;
      MWSTBetragZeile@1140005 : TEMPORARY Record 290;
      SalesLineTemp@1140006 : TEMPORARY Record 37;
      W„hrungsWechKurs@1000000005 : Record 330;
      Artikel@1000000004 : Record 27;
      Deb@1000000003 : Record 18;
      VerkEinkPersonInnen@1000000002 : Record 13;
      SalesLine@1000000011 : Record 37;
      FindSalesPrice@1000000010 : Record 7002;
      Anrede@1000000009 : Record 5069;
      Salutation@1000000008 : Record 5068;
      Kontakt@1000000007 : Record 5050;
      language@1000000006 : Record 8;
      Benutzer@1000000012 : Record 2000000120;
      TroubleshootingSetup@1000000017 : Record 5945;
      SalutationFormula@1000000020 : Record 5069;
      VerkDruckZ„hler@1140007 : Codeunit 313;
      FormatAdr@1140008 : Codeunit 365;
      VerkBuchen@1140009 : Codeunit 80;
      TOPAS_Funktionen@1000000001 : Codeunit 50006;
      DebAdr@1140010 : ARRAY [8] OF Text[50];
      Anschrift@1140011 : ARRAY [9] OF Text[50];
      FirmaAdr@1140013 : ARRAY [8] OF Text[50];
      CompanyInfo@1000000013 : ARRAY [15] OF Text;
      Verk„uferText@1140014 : Text[100];
      MWStNrText@1140015 : Text[30];
      ReferenzText@1140016 : Text[30];
      TotalText@1140017 : Text[50];
      TotalInklMWStText@1140018 : Text[50];
      MehrZeilen@1140019 : Boolean;
      AnzKopien@1140020 : Integer;
      AnzSchleifen@1140021 : Integer;
      KopieText@1140022 : Text[30];
      i@1140024 : Integer;
      Einkaufsw„hrungskurs@1140030 : Decimal;
      Verkaufsw„hrungskurs@1140031 : Decimal;
      PreisText@1140033 : Text[30];
      LieferText@1140034 : Text[30];
      AngebotsText@1140036 : Text[100];
      Verk„uferTextInnen@1140037 : Text[100];
      Verk„uferText1@1140038 : Text[100];
      Verk„uferText2@1140039 : Text[100];
      Verk„uferText1Innen@1140040 : Text[100];
      Verk„uferText2Innen@1140041 : Text[100];
      SalesPerson@1000000014 : Code[20];
      Text1@1140042 : Text[90];
      text2@1140043 : Text[90];
      Text3@1140070 : Text[90];
      w„hrung@1140044 : Text[10];
      Unterzeichner1@1140045 : Text[10];
      Unterzeichner2@1140046 : Text[10];
      versand@1140048 : Text[100];
      minbestellwert@1140049 : Text[30];
      lead_free_text0@1140050 : Text[80];
      lead_free_text1@1140051 : Text[120];
      leadfree_symbol@1140052 : Text[3];
      leadfree_artikel@1140053 : Record 27;
      lead_artikel@1140077 : Record 27;
      lead_symbol@1140079 : Text[3];
      lead_text@1140078 : Text[120];
      lead_free_text2@1140054 : Text[120];
      Faxnummer@1140055 : TextConst 'DEU=@@NMR +49 5119686464@@';
      Faxpriorit„t@1140056 : TextConst 'DEU=@@PRI 0@@';
      Faxaufl”sung@1140057 : TextConst 'DEU=@@AFL HOCH@@';
      Faxzustellbest„tigung@1140058 : TextConst 'DEU=@@ZSB 1@@';
      Faxparameter@1140059 : Text[210];
      Faxbetreff@1140060 : Text[100];
      ansp_fax@1140061 : Text[30];
      ansp_telefon@1140062 : Text[30];
      ansp_anrede@1140063 : Text[40];
      ihre_ref@1140064 : Text[90];
      preisstellung@1140065 : Text[60];
      Preis_info@1140066 : Text[45];
      NamePart@1140072 : ARRAY [5] OF Text[50];
      Text000@1000000000 : TextConst 'DEU=Fehlende Zuordnung zwischen %1 (%2) und %3 in der Tabelle %4. Bitte wenden Sie sich an Ihren Systemadministrator.';
      Text002@1000000019 : TextConst 'DEU=in %1 zzgl. MwSt;ENU=in %1 plus V.A.T. if applicable';
      Text021@1140073 : TextConst 'DEU=Sie mssen formelle und informelle Anredeformeln in der Sprache %1 fr den Kontakt %2 einrichten.;ENU=You have to set up formal and informal salutation formulas in %1  language for the %2 contact.';
      Zusatz@1140074 : Text[30];
      x@1140075 : Integer;
      ende@1140076 : Boolean;
      v_FER_SPL@1140080 : Boolean;
      v_system@1140081 : Boolean;
      v_sum_system@1140083 : Decimal;
      v_total_drucken@1140084 : Boolean;
      msrp@1140086 : Decimal;
      msrp_text@1000000022 : Text;
      system_preisbindung@1000000015 : Text;
      adv_andruck_notwendig@1000000018 : Boolean;
      BleifreiText@1000000021 : TextConst 'DEU=ø Diese Bauteile sind nach Angabe des Herstellers nicht RoHS konform bzw. nicht bleifrei.;ENU=ø According to manufacturer these parts are non-RoHS compliant respectively not leadfree.';
      SysPreisbindungsText@1000000016 : TextConst 'DEU=Die Konditionen basieren auf Basis der aktuellen Preisliste und sind gltig bis\    zur n„chsten Žnderung durch den Hersteller - gilt nur fr USD.;ENU=:    USD Conditions/Offers are based on current pricebook and valid to\   next change due to the manufacturer.';
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer2@5037(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(adv_andruck_notwendig);
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer1@5036(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
         ReportForNav.ShowOutput(system_preisbindung <> '');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header2@5010(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ihre_ref := '';
        IF "Sales Header"."External Document No." <> '' THEN ihre_ref := "Sales Header"."External Document No." + ' ';
        IF "Sales Header"."Your Reference" <> '' THEN ihre_ref := ihre_ref + "Sales Header"."Your Reference";
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header3@5011(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput ("Sales Header".Status <> "Sales Header".Status::Released);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSeiteSchleife_Header4@5012(VAR SeiteSchleife@1000000000 : Record 2000000026);
    BEGIN
      WITH SeiteSchleife DO BEGIN
        ReportForNav.ShowOutput ("Sales Header".Status <> "Sales Header".Status::Released);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header6@5013(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Sales Header"."Kontaktperson (kopie)" <> '') AND (ReportForNav.PageNo = 1));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header7@5014(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((ReportForNav.PageNo = 1) AND ("Sales Header".Text1 = ''));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header8@5015(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(("Sales Header".Text1 <> '') AND (ReportForNav.PageNo = 1));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header9@5016(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(v_system = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Header10@5017(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
          ReportForNav.ShowOutput(v_system = TRUE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body11@5018(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(SalesLineTemp.Type = 0);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body12@5019(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(SalesLineTemp.Type = SalesLineTemp.Type::"G/L Account");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body13@5020(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((SalesLineTemp.Type = SalesLineTemp.Type::Item) AND (v_system = FALSE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body14@5021(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(SalesLineTemp.Type = SalesLineTemp.Type::Resource);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body15@5022(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((SalesLineTemp.Type = SalesLineTemp.Type::Item) AND (v_system = TRUE));
         IF ((SalesLineTemp.Type = SalesLineTemp.Type::Item) AND (v_system = TRUE)) THEN
           v_sum_system := v_sum_system + ("Sales Line".Quantity * "Sales Line"."Unit Price");
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body16@5023(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        {lshanf c01}
        ReportForNav.ShowOutput(SalesLineTemp."Description 2" <> '');
        {lshend}
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body17@5024(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(Artikel."WEEE-Reg.-Nr." <>'');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body18@5025(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput("Sales Line"."Cross-Reference No."<> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body19@5026(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((Artikel.NCNR = TRUE) AND (SalesLineTemp."Outstanding Quantity" <> 0));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Body20@5027(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        //Das Feld Angebotsstatus gibt es nicht mehr in NAV 2016
        //ReportForNav.ShowOutput (("Sales Header".Angebotsstatus <> '') AND
        //  (SalesLineTemp.Type = SalesLineTemp.Type::Item));
        ReportForNav.ShowOutput(FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer24@5031(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(lead_text <> '');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer26@5032(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput((v_system = TRUE) AND (v_total_drucken = TRUE));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer28@5033(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput(v_FER_SPL = FALSE);
      END;
    END;

    LOCAL PROCEDURE OnPreSectionRundungsRahmen_Footer32@5034(VAR RundungsRahmen@1000000000 : Record 2000000026);
    BEGIN
      WITH RundungsRahmen DO BEGIN
        ReportForNav.ShowOutput("Sales Header"."Euro-Parit„tsw„hrungscode" <> '')
      END;
    END;

    LOCAL PROCEDURE OnPreSectionUnterschrift2_Body33@5035(VAR Unterschrift2@1000000000 : Record 18);
    BEGIN
      Benutzer.RESET;
      Benutzer.SETRANGE("User Name",USERID);
      Benutzer.FINDFIRST;
      SalesPerson := Benutzer."Salesperson Code";
      IF UPPERCASE(USERID) = 'W2K\NAV2016_SRV' THEN
        SalesPerson := "Sales Header"."Salesperson Code";

      WITH Unterschrift2 DO BEGIN
        Verk„uferText1 := '';
        Verk„uferText2 := '';
        IF Unterzeichner2 = '' THEN BEGIN
          IF VerkEinkPerson.GET(SalesPerson) THEN
          CASE VerkEinkPerson."Commercial procuration" OF
              VerkEinkPerson."Commercial procuration"::Nein: Zusatz := 'i.A.';
              VerkEinkPerson."Commercial procuration"::Prokura: Zusatz := 'ppa.';
              VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz := '';
          END;
          Verk„uferText := Zusatz + ' ' + VerkEinkPerson."First name" + ' ' + VerkEinkPerson.Name;
          Verk„uferTextInnen := '';
        END ELSE BEGIN
          IF VerkEinkPerson.GET(SalesPerson) THEN
            CASE VerkEinkPerson."Commercial procuration" OF
                VerkEinkPerson."Commercial procuration"::Nein: Zusatz := 'i.A.';
                VerkEinkPerson."Commercial procuration"::Prokura: Zusatz := 'ppa.';
                VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz := '';
            END;
        Verk„uferTextInnen := Zusatz + ' ' + VerkEinkPerson."First name" + ' ' + VerkEinkPerson.Name;
        IF VerkEinkPerson.GET(Unterzeichner2) THEN
          CASE VerkEinkPerson."Commercial procuration" OF
              VerkEinkPerson."Commercial procuration"::Nein: Zusatz := 'i.A.';
              VerkEinkPerson."Commercial procuration"::Prokura: Zusatz := 'ppa.';
              VerkEinkPerson."Commercial procuration"::Gesch„ftsfhrer: Zusatz := '';
          END;
        Verk„uferText := Zusatz + ' ' + VerkEinkPerson."First name" + ' ' + VerkEinkPerson.Name;
        END;
      END;
    END;

    PROCEDURE WechKursBetrag@2(Datum@1140000 : Date;W„hrungCode@1140001 : Code[10];W„hrungFaktor@1140002 : Decimal) : Decimal;
    VAR
      BezugAufWechselkursbetr@1140003 : Decimal;
      WechselkursBetr@1140004 : Decimal;
      BezugAufW„hrungscode@1140005 : Code[10];
      FesterWechselkursBetr@1140006 : Option;
    BEGIN
      IF W„hrungCode = '' THEN
        EXIT(1);
      W„hrungsWechKurs.FindCurrency(Datum,W„hrungCode,1);
      W„hrungsWechKurs.TESTFIELD("Exchange Rate Amount");
      W„hrungsWechKurs.TESTFIELD("Relational Exch. Rate Amount");
      BezugAufWechselkursbetr := W„hrungsWechKurs."Relational Exch. Rate Amount";
      WechselkursBetr := W„hrungsWechKurs."Exchange Rate Amount";
      BezugAufW„hrungscode := W„hrungsWechKurs."Relational Currency Code";
      IF W„hrungsWechKurs."Relational Currency Code" = '' THEN
        W„hrungsWechKurs."Exchange Rate Amount" := W„hrungFaktor * W„hrungsWechKurs."Relational Exch. Rate Amount"
      ELSE BEGIN
        W„hrungsWechKurs.FindCurrency(Datum,BezugAufW„hrungscode,2);
        W„hrungsWechKurs.TESTFIELD("Exchange Rate Amount");
        W„hrungsWechKurs.TESTFIELD("Relational Exch. Rate Amount");
        W„hrungsWechKurs."Exchange Rate Amount" := (W„hrungFaktor *
          (BezugAufWechselkursbetr * W„hrungsWechKurs."Relational Exch. Rate Amount"));
      END;
      EXIT(W„hrungsWechKurs."Exchange Rate Amount");
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SeiteSchleife': CASE SectionId OF
          'Header2': OnPreSectionSeiteSchleife_Header2(SeiteSchleife);
          'Header3': OnPreSectionSeiteSchleife_Header3(SeiteSchleife);
          'Header4': OnPreSectionSeiteSchleife_Header4(SeiteSchleife);
        END;
        'RundungsRahmen': CASE SectionId OF
          'Header6': OnPreSectionRundungsRahmen_Header6(RundungsRahmen);
          'Header7': OnPreSectionRundungsRahmen_Header7(RundungsRahmen);
          'Header8': OnPreSectionRundungsRahmen_Header8(RundungsRahmen);
          'Header9': OnPreSectionRundungsRahmen_Header9(RundungsRahmen);
          'Header10': OnPreSectionRundungsRahmen_Header10(RundungsRahmen);
          'Body11': OnPreSectionRundungsRahmen_Body11(RundungsRahmen);
          'Body12': OnPreSectionRundungsRahmen_Body12(RundungsRahmen);
          'Body13': OnPreSectionRundungsRahmen_Body13(RundungsRahmen);
          'Body14': OnPreSectionRundungsRahmen_Body14(RundungsRahmen);
          'Body15': OnPreSectionRundungsRahmen_Body15(RundungsRahmen);
          'Body16': OnPreSectionRundungsRahmen_Body16(RundungsRahmen);
          'Body17': OnPreSectionRundungsRahmen_Body17(RundungsRahmen);
          'Body18': OnPreSectionRundungsRahmen_Body18(RundungsRahmen);
          'Body19': OnPreSectionRundungsRahmen_Body19(RundungsRahmen);
          'Body20': OnPreSectionRundungsRahmen_Body20(RundungsRahmen);
          'Footer24': OnPreSectionRundungsRahmen_Footer24(RundungsRahmen);
          'Footer26': OnPreSectionRundungsRahmen_Footer26(RundungsRahmen);
          'Footer28': OnPreSectionRundungsRahmen_Footer28(RundungsRahmen);
          'Footer1': OnPreSectionRundungsRahmen_Footer1(RundungsRahmen);
          'Footer2': OnPreSectionRundungsRahmen_Footer2(RundungsRahmen);
          'Footer32': OnPreSectionRundungsRahmen_Footer32(RundungsRahmen);
        END;
        'Unterschrift2': CASE SectionId OF
          'Body33': OnPreSectionUnterschrift2_Body33(Unterschrift2);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    EVENT ReportForNav@5000::OnTotals@5004(DataItemId@1000000000 : Text;Operation@1000000001 : Text;GroupTotalFieldNo@1000000002 : Integer);
    VAR
      CurrRecRef@1000000003 : RecordRef;
      NextRecRef@1000000004 : RecordRef;
      CurrKeyRef@1000000005 : KeyRef;
      NextKeyRef@1000000006 : KeyRef;
      FieldIndex@1000000007 : Integer;
      GroupFieldIndex@1000000008 : Integer;
      ForNavOperation@1000000009 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code. Instead change the Create Totals, Total Fields or Group
      // Total Fields properties on the Data item in the ForNAV designer.
      ForNavOperation := Operation;
      CASE DataItemId OF
        'RundungsRahmen': WITH RundungsRahmen DO CASE ForNavOperation OF
           'Add': BEGIN
                ReportForNav.AddTotal(DataItemId,0,SalesLineTemp.Amount);
                ReportForNav.AddTotal(DataItemId,1,SalesLineTemp."Amount Including VAT");
                ReportForNav.AddTotal(DataItemId,2,SalesLineTemp."Inv. Discount Amount");
              END;
           'Restore': BEGIN
                 SalesLineTemp.Amount := ReportForNav.RestoreTotal(DataItemId,0,GroupTotalFieldNo);
                 SalesLineTemp."Amount Including VAT" := ReportForNav.RestoreTotal(DataItemId,1,GroupTotalFieldNo);
                 SalesLineTemp."Inv. Discount Amount" := ReportForNav.RestoreTotal(DataItemId,2,GroupTotalFieldNo);
              END;
        END;
      END;
    END;

    BEGIN
    {
      230699 ug
           Adressfeld auf Fensterkurvert-Norm gesetzt.
      131099 al
      c01  RundungsRahmen, Body(7) eingefgt.
           Bezeichnung 2 ausdrucken.
      -#DOCU#
      001 28.01.02 kn SC1.01: # Kap. C 2.1.2
          - Status, Lieferzeit (KW) drucken
          - bei Status Kalkulation Kalkulationsdaten drucken
      002 06.03.02 kn SC1.02 kn SC1.02: #01661
          Beleg nach Vorlage anpassen
      003 27.05.02 kn SC1.04: #02012
          - Textboxen im Kalkulation-Body vergr”ssert
          - Sachkonten-Zeilen nicht drucken
      004 20.06.02 wr SC1.07: #02035
          - Fax und Tel. werden in der Kontaktperson mit dem Schlssel
            Verkaufskopf."Interessent Nr.", Verkaufskopf."Kontaktperson Nr." nachgeschlagen
          - W„hrungskurs wird auch bei Angebotsstatus = gltig gedruckt,
            wenn EK- und VK-W„hrung unterschiedlich
          - Europarit„tstext gem Vorlage, falls "Euro-Parit„tsw„hrungscode" eingetragen
          - 'Einzelpreis EUR' in Einzelpreis EURO' ge„ndert
          - Wenn "Lieferzeit KW" und Lieferdatum unbestimmt, dann Liefertext = 'ab Lager'
      +#DOCU#
    }
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
mvLIxMH8dXSfrotLTD2a8Rec/ev/Aw==</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

