OBJECT Report 50162 Projekt - Weekly Info
{
  OBJECT-PROPERTIES
  {
    Date=08.12.17;
    Time=09:03:18;
    Modified=Yes;
    Version List=TOPAS,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  //*******************************************************************************************************
                  //                    Sicherheitsabfrage ob Temp Tabelle auch Berichtstabelle ist
                  //*******************************************************************************************************
                  IF Berichtstabelle.TABLECAPTION <> 'Berichtstabelle' THEN
                    ERROR('Eine Sicherheitssperre verhindert die Ausfhrung dieses Berichtes.'+
                          'Stellen Sie sicher, dass die TABLECAPTION der Berichtstabelle auch auf Berichtstabelle lautet.');

                  Berichtstabelle.RESET;
                  IF Berichtstabelle.ISEMPTY = FALSE THEN BEGIN
                    REPEAT
                      IF Berichtstabelle.ISEMPTY = FALSE THEN BEGIN
                        SLEEP(500);
                        counter += 1;
                      END;
                      IF counter MOD 30 = 0 THEN BEGIN
                        Berichtstabelle.FINDFIRST;
                        IF CONFIRM('Die Berichtstabelle ist seit %1 durch Anwender %2 gesperrt. Wollen Sie die Anwendung abbrechen?',
                        TRUE,Berichtstabelle.Uhrzeit,Berichtstabelle.User,counter,TRUE) THEN
                          ERROR('');
                      END;
                    UNTIL Berichtstabelle.ISEMPTY = TRUE;
                  END;

                  VerkTab.SETFILTER(VerkTab.Code,verfasser);
                  IF (VerkTab.FINDFIRST) AND (verfasser <> '') THEN BEGIN
                    Anlagename := VerkTab."First name"+ ' ' + VerkTab.Name;
                  END ELSE BEGIN
                    Anlagename := '';
                  END;

                  //Die Vermischung der Verfasser aus den alten Krzel aus NAV 5.0 und den neuen Windows Benutzernamen mit W2K\...
                  //werden jetzt so umgesetzt, dass sich der Benutzer die neuen Benutzer nicht merken muss, sondern einfach die alten Krzel
                  //weiter verwenden darf, ohne dass Eintr„ge verloren gehen sollten
                  verfasser_filter := verfasser;
                  IF verfasser_filter <> '' THEN BEGIN
                    l := STRLEN(DELCHR(verfasser_filter,'=',DELCHR(verfasser_filter,'=','|'))) + 1;
                    IF l > 0 THEN BEGIN
                      FOR i := 1 TO l DO BEGIN
                        IF STRPOS(verfasser_filter,'|') > 0 THEN BEGIN
                          verfasser_neu := COPYSTR(verfasser_filter,1,STRPOS(verfasser_filter,'|') - 1);
                          verfasser_filter := COPYSTR(verfasser_filter,STRPOS(verfasser_filter,'|') + 1);
                        END ELSE
                          verfasser_neu := verfasser_filter;
                        UserTab.RESET;
                        UserTab.SETRANGE("Salesperson Code",verfasser_neu);
                        IF UserTab.FINDFIRST THEN
                          verfasser_filter_neu += UserTab."User Name" + '|' + verfasser_neu + '|'
                        ELSE
                          verfasser_filter_neu += verfasser_neu + '|';
                      END;
                    END;
                  END;
                  verfasser_filter_neu := DELCHR(verfasser_filter_neu,'>','|');

                  //*******************************************************************************************************
                  //                                   Projektmemos werden durchsucht
                  //*******************************************************************************************************
                  Memokopf.RESET;
                  Memokopf.SETFILTER("Memonr.",memonr);
                  Memokopf.SETFILTER("Kampagnennr.",'<>%1','');
                  IF ansicht = ansicht::Aussendienst THEN
                    Memokopf.SETFILTER(Kontaktart,'BESUCHSBERICHT|WEEKLY INFO|MESSEKONTAKT');
                  IF ansicht = ansicht::Innendienst THEN
                    Memokopf.SETFILTER(Kontaktart,'<>%1&<>%2&<>%3','BESUCHSBERICHT','WEEKLY INFO','MESSEKONTAKT');
                  Memokopf.SETFILTER("Angelegt von",verfasser_filter_neu);
                  IF (Startdatum<>0D) AND (Enddatum=0D) THEN
                    Memokopf.SETFILTER(Anlagedatum,'>=%1',Startdatum);
                  IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Anlagedatum,'>=%1&<=%2',Startdatum,Enddatum);
                  IF (Startdatum=0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Anlagedatum,'<=%1',Enddatum);
                  IF Memokopf.FINDFIRST THEN BEGIN
                    REPEAT
                      Projekt.RESET;
                      Projekt.SETFILTER("No.",Memokopf."Kampagnennr.");
                      Projekt.SETFILTER("Betreuer Innendienst",betreuer);
                      Projekt.SETFILTER("Salesperson Code",verk„ufer);
                      Projekt.SETFILTER(Teams,teams);
                      Projekt.SETFILTER("Territory Code",gebiet);
                      IF Projekt.FINDFIRST THEN BEGIN
                        IF hstcode <> '' THEN BEGIN
                          Linien.RESET;
                          Linien.SETFILTER("Kampagnennr.",Projekt."No.");
                          Linien.SETFILTER(Linienkrzel,hstcode);
                          IF Linien.FINDFIRST THEN
                            Projektmemo_fllen;
                        END ELSE BEGIN
                          Projektmemo_fllen;
                        END;
                      END;
                    UNTIL Memokopf.NEXT = 0;
                  END;

                  //*******************************************************************************************************
                  //                                   Kontaktmemos werden durchsucht
                  //*******************************************************************************************************
                  Memokopf.RESET;
                  Memokopf.SETFILTER("Memonr.",memonr);
                  Memokopf.SETFILTER("Angelegt von",verfasser_filter_neu);
                  Memokopf.SETFILTER("Mandantennr.",'<>%1','');
                  IF ansicht = ansicht::Aussendienst THEN
                    Memokopf.SETFILTER(Kontaktart,'BESUCHSBERICHT|WEEKLY INFO|MESSEKONTAKT');
                  IF ansicht = ansicht::Innendienst THEN
                    Memokopf.SETFILTER(Kontaktart,'<>%1&<>%2&<>%3','BESUCHSBERICHT','WEEKLY INFO','MESSEKONTAKT');
                  IF (Startdatum<>0D) AND (Enddatum=0D) THEN
                    Memokopf.SETFILTER(Anlagedatum,'>=%1',Startdatum);
                  IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Anlagedatum,'>=%1&<=%2',Startdatum,Enddatum);
                  IF (Startdatum=0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Anlagedatum,'<=%1',Enddatum);
                  IF Memokopf.FINDFIRST THEN BEGIN
                    REPEAT
                      IF hstcode <> '' THEN BEGIN
                        Linien.RESET;
                        Linien.SETFILTER("Memonr.",Memokopf."Memonr.");
                        Linien.SETFILTER(Linienkrzel,hstcode);
                        IF Linien.FINDFIRST THEN
                          Kontaktmemo_fllen;
                      END ELSE BEGIN
                        Kontaktmemo_fllen;
                      END;
                    UNTIL Memokopf.NEXT = 0;
                  END;

                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   IF Berichtstabelle.TABLECAPTION = 'Berichtstabelle' THEN
                     Berichtstabelle.DELETEALL;
                   COMMIT;
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;Textkopf            ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(PROJEKTMEMO|KONTAKTMEMO));
               OnPreDataItem=BEGIN
                               IF sort = sort::Name THEN
                                 Textkopf.SETCURRENTKEY("Feld 10",Datum,Index);
                               IF sort = sort::"Betreuer-Name" THEN
                                 Textkopf.SETCURRENTKEY("Feld 6","Feld 10",Datum,Index);
                             END;
                              }

    { 2   ;1   ;Column  ;Verfasser__verfasser__BetreuerInnendienst__betreuer__Verkauf;
               SourceExpr='Verfasser: '+verfasser+' ,Betreuer Innendienst: '+betreuer+' ,Verk„ufercode: '+verk„ufer+' ,Teams: '+teams+' ,Gebiet: '+gebiet }

    { 3   ;1   ;Column  ;Enddatum            ;
               SourceExpr=Enddatum }

    { 4   ;1   ;Column  ;Startdatum          ;
               SourceExpr=Startdatum }

    { 5   ;1   ;Column  ;Anlagename          ;
               SourceExpr=Anlagename }

    { 6   ;1   ;Column  ;TODAY_0_4           ;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 7   ;1   ;Column  ;ReportForNavPageNo  ;
               SourceExpr=ReportForNav.PageNo }

    { 8   ;1   ;Column  ;USERID              ;
               SourceExpr=USERID }

    { 9   ;1   ;Column  ;Index_Textkopf      ;
               SourceExpr=Index }

    { 10  ;1   ;Column  ;Feld15_Textkopf     ;
               SourceExpr="Feld 15" }

    { 11  ;1   ;Column  ;Wert__FORMAT_Feld5  ;
               SourceExpr='Wert:   ' + FORMAT("Feld 5") }

    { 12  ;1   ;Column  ;Stuck__FORMAT_Feld4 ;
               SourceExpr='Stck: ' + FORMAT("Feld 4") }

    { 13  ;1   ;Column  ;Feld14_Textkopf     ;
               SourceExpr="Feld 14" }

    { 14  ;1   ;Column  ;Feld12_Textkopf     ;
               SourceExpr="Feld 12" }

    { 15  ;1   ;Column  ;Feld19_Textkopf     ;
               SourceExpr="Feld 19" }

    { 16  ;1   ;Column  ;Feld1_Textkopf      ;
               SourceExpr="Feld 1" }

    { 17  ;1   ;Column  ;Feld8_Textkopf      ;
               SourceExpr="Feld 8" }

    { 18  ;1   ;Column  ;Feld7_Textkopf      ;
               SourceExpr="Feld 7" }

    { 19  ;1   ;Column  ;Feld6_Textkopf      ;
               SourceExpr="Feld 6" }

    { 20  ;1   ;Column  ;Feld13_Textkopf     ;
               SourceExpr="Feld 13" }

    { 21  ;1   ;Column  ;Feld3_Textkopf      ;
               SourceExpr="Feld 3" }

    { 22  ;1   ;Column  ;Feld10_Textkopf     ;
               SourceExpr="Feld 10" }

    { 23  ;1   ;Column  ;Feld18_Textkopf     ;
               SourceExpr="Feld 18" }

    { 24  ;1   ;Column  ;Feld11_Textkopf     ;
               SourceExpr="Feld 11" }

    { 25  ;1   ;Column  ;Feld2_Textkopf      ;
               SourceExpr="Feld 2" }

    { 26  ;1   ;Column  ;Feld9_Textkopf      ;
               SourceExpr="Feld 9" }

    { 27  ;1   ;DataItem;Kontakte            ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(ANSPRECHPARTNER));
               DataItemLink=Index=FIELD(Index) }

    { 28  ;2   ;Column  ;Feld6_Kontakte      ;
               SourceExpr="Feld 6" }

    { 29  ;2   ;Column  ;Feld12_Kontakte     ;
               SourceExpr="Feld 12" }

    { 30  ;2   ;Column  ;Feld10_Kontakte     ;
               SourceExpr="Feld 10" }

    { 31  ;2   ;Column  ;Feld2_Kontakte      ;
               SourceExpr="Feld 2" }

    { 32  ;1   ;DataItem;Textzeile           ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(MEMOZEILE));
               DataItemLink=Index=FIELD(Index) }

    { 33  ;2   ;Column  ;Feld1_Textzeile     ;
               SourceExpr="Feld 1" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140001;2;Field     ;
                  CaptionML=DEU=Anlagedatum von;
                  SourceExpr=Startdatum }

      { 1140003;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=Enddatum }

      { 1140024;2;Field     ;
                  CaptionML=DEU=Memonr.;
                  SourceExpr=memonr }

      { 1140013;2;Field     ;
                  CaptionML=DEU=Betreuer Innendienst;
                  SourceExpr=betreuer }

      { 1140015;2;Field     ;
                  CaptionML=DEU=Verk„ufercode;
                  SourceExpr=verk„ufer }

      { 1140022;2;Field     ;
                  CaptionML=DEU=Teams;
                  SourceExpr=teams;
                  TableRelation=Team }

      { 1140026;2;Field     ;
                  CaptionML=DEU=Gebietscode;
                  SourceExpr=gebiet;
                  TableRelation=Territory }

      { 1140005;2;Field     ;
                  CaptionML=DEU=Verfasser;
                  SourceExpr=verfasser }

      { 1140019;2;Field     ;
                  CaptionML=DEU=Herstellercode;
                  SourceExpr=hstcode;
                  TableRelation=Manufacturer }

      { 1140021;2;Field     ;
                  CaptionML=DEU=Berichtsansicht;
                  OptionCaptionML=DEU=Alle Komm.-Arten,BESUCHSBERICHT|WEEKLY INFO|MESSEKONTAKT,Alle anderen Komm.-Arten auáer BESUCHSBERICHT etc.;
                  SourceExpr=ansicht }

      { 1140008;2;Field     ;
                  CaptionML=DEU=Berichtssortierung;
                  OptionCaptionML=DEU=Name,"Betreuer Innendienst,Name";
                  SourceExpr=sort }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Berichtstabelle@1140028 : Record 50037;
      Memokopf@1140029 : Record 50003;
      Memozeile@1140031 : Record 50004;
      Projekt@1140014 : Record 5071;
      Projekt_Info@1140004 : Record 5071;
      Ansprech@1140030 : Record 50005;
      Ansprechpartner@1140011 : Record 50005;
      UserTab@1000000002 : Record 2000000120;
      Ansprechfilter@1140000 : Text[250];
      Anlagename@1140001 : Text[50];
      Kuerzel@1140002 : Code[60];
      VerkTab@1140003 : Record 13;
      Contact@1140009 : Record 5050;
      Cont_temp@1140005 : Record 5050;
      Statustext@1140010 : Text[50];
      Hersteller@1140007 : Record 5720;
      Linien@1140008 : Record 50002;
      Startdatum@1140022 : Date;
      Enddatum@1140023 : Date;
      memonr@1140017 : Code[60];
      betreuer@1140012 : Code[60];
      verk„ufer@1140013 : Code[60];
      teams@1140015 : Code[60];
      gebiet@1140018 : Code[60];
      verfasser@1140024 : Code[60];
      verfasser_neu@1000000000 : Text;
      verfasser_filter@1000000003 : Text;
      verfasser_filter_neu@1000000005 : Text;
      hstcode@1140016 : Code[60];
      sort@1140027 : 'Name,Betreuer-Name';
      ansicht@1140006 : 'Alle,Aussendienst,Innendienst';
      counter@1140019 : Integer;
      l@1000000001 : Integer;
      i@1000000004 : Integer;
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionTextkopf_Body2@5010(VAR Textkopf@1000000000 : Record 50037);
    BEGIN
      WITH Textkopf DO BEGIN
        ReportForNav.ShowOutput(Textkopf.Tabelle = 'PROJEKTMEMO');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTextkopf_Body3@5011(VAR Textkopf@1000000000 : Record 50037);
    BEGIN
      WITH Textkopf DO BEGIN
        ReportForNav.ShowOutput(Textkopf.Tabelle = 'KONTAKTMEMO');
      END;
    END;

    PROCEDURE Projektmemo_fllen@1140001();
    BEGIN
      Berichtstabelle.INIT;
        Berichtstabelle.Tabelle := 'PROJEKTMEMO';
        Berichtstabelle.Index := Memokopf."Memonr.";
        Berichtstabelle.Datum := Memokopf.Anlagedatum;
        Berichtstabelle."Belegnr." := Memokopf."Memonr.";
        Berichtstabelle."Feld 1" := Memokopf.Memokurztext;
        Berichtstabelle."Feld 2" := Memokopf."Kampagnennr.";
        Berichtstabelle."Feld 15" := Memokopf."Angelegt von";
        Berichtstabelle."Feld 18" := Memokopf.Memodatum;
        Berichtstabelle."Feld 19" := Memokopf.Kontaktart;
        Projekt_Info.SETFILTER("No.",'%1',Memokopf."Kampagnennr.");
        IF Projekt_Info.FINDFIRST THEN
          BEGIN
            Berichtstabelle."Feld 4" := Projekt_Info.Projektvolumen;
            Berichtstabelle."Feld 5" := Projekt_Info.Projektwert;
            Berichtstabelle."Feld 6" := Projekt_Info."Betreuer Innendienst";
            Berichtstabelle."Feld 7" := Projekt_Info."Salesperson Code";
            Berichtstabelle."Feld 8" := Projekt_Info.Projektstatus;
            Berichtstabelle."Feld 9" := Projekt_Info.Projektklasse;
            Berichtstabelle."Feld 11" := Projekt_Info.Description;
            Ansprech.RESET;
            Ansprech.SETFILTER("Kampagnennr.",'%1',Projekt_Info."No.");
            Ansprech.SETFILTER(Fhrungsrolle,'%1',TRUE);
            IF Ansprech.FINDFIRST THEN
              BEGIN
                Ansprech.CALCFIELDS(Mandantenname);
                Berichtstabelle."Feld 10" := Ansprech.Mandantenname;
                Cont_temp.RESET;
                Cont_temp.SETFILTER("No.",'%1',Ansprech."Kontaktnr.");
                IF Cont_temp.FINDFIRST THEN
                  BEGIN
                    Berichtstabelle."Feld 3" := Cont_temp."Post Code";
                    Berichtstabelle."Feld 13" := Cont_temp.City;
                  END;
              END
            ELSE
              BEGIN
                Berichtstabelle."Feld 14" := 'Kein Hauptbeteiligter im Projekt';
              END;
            Linien.RESET;
            Linien.SETFILTER(Linien."Memonr.",'%1',Memokopf."Memonr.");
            IF Linien.FINDFIRST THEN
            BEGIN
              REPEAT
                Hersteller.SETFILTER(Code,Linien.Linienkrzel);
                IF Hersteller.FINDFIRST THEN
                BEGIN
                  Berichtstabelle."Feld 12" := Berichtstabelle."Feld 12" + ' ' + Hersteller.Herstellerkurzname;
                END;
              UNTIL Linien.NEXT=0;
            END;
        END;
      Berichtstabelle.User := USERID;
      Berichtstabelle.Uhrzeit := CURRENTDATETIME;
      Berichtstabelle.INSERT;
      Ansprech.RESET;
      Ansprech.SETFILTER("Memonr.",'%1',Memokopf."Memonr.");
      IF Ansprech.FINDFIRST THEN
        BEGIN
          REPEAT
            Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'ANSPRECHPARTNER';
              Berichtstabelle.Index := Ansprech."Memonr.";
              Berichtstabelle."Belegnr." := Ansprech."Kontaktnr.";
              Berichtstabelle."Feld 2" := Ansprech."Kontaktnr.";
              Ansprech.CALCFIELDS(Mandantenname,Kontaktname);
              Cont_temp.RESET;
              IF Cont_temp.GET(Ansprech."Kontaktnr.") THEN
                Berichtstabelle."Feld 6" := Cont_temp."Organizational Level Code";
              Berichtstabelle."Feld 10" := Ansprech.Mandantenname;
              Berichtstabelle."Feld 12" := Ansprech.Kontaktname;
              Berichtstabelle.User := USERID;
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.INSERT;
          UNTIL Ansprech.NEXT = 0;
        END;
      Memozeile.RESET;
      Memozeile.SETFILTER(Memozeile."Memonr.",'%1',Memokopf."Memonr.");
      IF Memozeile.FINDFIRST THEN
        BEGIN
          REPEAT
            Berichtstabelle.INIT;
              Berichtstabelle.Tabelle := 'MEMOZEILE';
              Berichtstabelle.Index := Memozeile."Memonr.";
              Berichtstabelle."Belegnr." := Memozeile."Memonr.";
              Berichtstabelle."Zeilennr." := Memozeile."Zeilennr.";
              Berichtstabelle."Feld 1" := Memozeile.Bemerkung;
              Berichtstabelle.User := USERID;
              Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.INSERT;
          UNTIL Memozeile.NEXT = 0;
        END;
    END;

    PROCEDURE Kontaktmemo_fllen@1140000();
    BEGIN
      Contact.RESET;
      Contact.SETFILTER("No.",Memokopf."Mandantennr.");
      Contact.SETFILTER("Betreuer Innendienst",betreuer);
      Contact.SETFILTER("Salesperson Code",verk„ufer);
      Contact.SETFILTER(Teams,teams);
      Contact.SETFILTER("Territory Code",gebiet);
      IF Contact.FINDFIRST THEN
        BEGIN
          Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'KONTAKTMEMO';
            Berichtstabelle.Index := Memokopf."Memonr.";
            Berichtstabelle.Datum := Memokopf.Anlagedatum;
            Berichtstabelle."Belegnr." := Memokopf."Memonr.";
            Berichtstabelle."Feld 1" := Memokopf.Memokurztext;
            Berichtstabelle."Feld 2" := Memokopf."Mandantennr.";
            Berichtstabelle."Feld 15" := Memokopf."Angelegt von";
            Berichtstabelle."Feld 18" := Memokopf.Memodatum;
            Berichtstabelle."Feld 19" := Memokopf.Kontaktart;
            Cont_temp.RESET;
            Cont_temp.SETFILTER("No.",'%1',Memokopf."Mandantennr.");
            IF Cont_temp.FINDFIRST THEN
              BEGIN
                Berichtstabelle."Feld 3" := Cont_temp."Post Code";
                Berichtstabelle."Feld 6" := Cont_temp."Betreuer Innendienst";
                Berichtstabelle."Feld 7" := Cont_temp."Salesperson Code";
                Berichtstabelle."Feld 10" := Cont_temp.Name;
                Berichtstabelle."Feld 13" := Cont_temp.City;
              END;
            Linien.SETFILTER("Memonr.",'%1',Memokopf."Memonr.");
            IF Linien.FINDFIRST THEN
            BEGIN
              REPEAT
                Hersteller.SETFILTER(Code,Linien.Linienkrzel);
                IF Hersteller.FINDFIRST THEN
                BEGIN
                  Berichtstabelle."Feld 12" := Berichtstabelle."Feld 12" + ' ' + Hersteller.Herstellerkurzname;
                END;
              UNTIL Linien.NEXT=0;
            END;
          Berichtstabelle.User := USERID;
          Berichtstabelle.Uhrzeit := CURRENTDATETIME;
          Berichtstabelle.INSERT;
          Ansprech.RESET;
          Ansprech.SETFILTER("Memonr.",'%1',Memokopf."Memonr.");
          IF Ansprech.FINDFIRST THEN
            BEGIN
              REPEAT
                Berichtstabelle.INIT;
                Berichtstabelle.Tabelle := 'ANSPRECHPARTNER';
                Berichtstabelle.Index := Ansprech."Memonr.";
                Berichtstabelle."Belegnr." := Ansprech."Kontaktnr.";
                Berichtstabelle."Feld 2" := Ansprech."Kontaktnr.";
                Ansprech.CALCFIELDS(Mandantenname,Kontaktname);
                Cont_temp.RESET;
                IF Cont_temp.GET(Ansprech."Kontaktnr.") THEN
                  Berichtstabelle."Feld 6" := Cont_temp."Organizational Level Code";
                Berichtstabelle."Feld 10" := Ansprech.Mandantenname;
                Berichtstabelle."Feld 12" := Ansprech.Kontaktname;
                Berichtstabelle.User := USERID;
                Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                Berichtstabelle.INSERT;
              UNTIL Ansprech.NEXT = 0;
            END;
          Memozeile.RESET;
          Memozeile.SETFILTER("Memonr.",'%1',Memokopf."Memonr.");
          IF Memozeile.FINDFIRST THEN
            BEGIN
              REPEAT
                Berichtstabelle.INIT;
                  Berichtstabelle.Tabelle := 'MEMOZEILE';
                  Berichtstabelle.Index := Memozeile."Memonr.";
                  Berichtstabelle."Belegnr." := Memozeile."Memonr.";
                  Berichtstabelle."Zeilennr." := Memozeile."Zeilennr.";
                  Berichtstabelle."Feld 1" := Memozeile.Bemerkung;
                  Berichtstabelle.User := USERID;
                  Berichtstabelle.Uhrzeit := CURRENTDATETIME;
                Berichtstabelle.INSERT;
              UNTIL Memozeile.NEXT = 0;
            END;
        END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Textkopf': CASE SectionId OF
          'Body2': OnPreSectionTextkopf_Body2(Textkopf);
          'Body3': OnPreSectionTextkopf_Body3(Textkopf);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>610AANVc63LjthX+35m+A0eZ6e4mCpe48bK1kvFFzrrr21jebJs/HtqCvYxp0qGozTrT6dP0LdqZ/sgD9RUKkKAIUiAJUnLaJtmsBEDEOR8PzhXAv//xr51vPz+ExieaLII4moyAaY0MGt3E8yC6m4yW6e3X7ujbb37/u50/p4l/QR/jJF0c+0/xMp3RJPDD4BeaGOXH71cPwiY0CX/aBb1lX0fGqf9AJyPxiMM4OfU/jYz9OEqTOLx8emR9B/TT9PNjQhcLU5rNfH8kfR0bDaM+8RnHRkFAMf/Y2F+G6TKhk4gu2fBwbJwvr8Pg5h19uozvaTTxrgnw4bV9i+H17TW5GRknfnIXRIvJCCL2e/YftPL/jYwKfyPj3L+jb2lw9zFlgz3Hyls+BPP0I2sA/BeHjMPJaJcDNDacx3RkHDwGrJNg9slP/Vm8TG4Y818wnL7O4OL8vI8C9qtLGqUfF2e3uydBGAYPNKUJ+1GweAz9pxzO8yT+kd6nxtfGB0rvwyfjKLqNR8bZ9Y/0Jj2NJyNiARsWTxWwr5iApsX+BcD1RuwVG8bOnh/NF9lH9uUopQ8gf32w9qby53Dy+SD+q+L9XtLP6X38eFtnk4+79K9D+n1Af56MZmcXl0en371kTTQM6fgomtPP4z0a0rsoMcc/0CCkEfv0yvjwdnoxLcZNDo+OL6cXL88vzv40fXd5Mj05++u7s9PL3fzzq1e1yRg9/C9iWcgpu773kzqxR/NMRosRx0F0Pxlx2H46DEIG+1vq8xVxcsxbj+knGk5G1kggVQOuDh5SgsefSBMZurwFyMidJ0GUnkVTtj6fuGRNRmmypKL9xP98Ft3Qc5rkXbd+uGB9+340+5hkDIiWGZMF9r5rs+Rye8j4JshEI4l4Rr4geFFprbKFlWxxSPfizwVPlUYAMHsRDI4ZUxV8YgtYJvQ8D41dZFrsH9Z3HN/4nNrDMPbZEsAeGRu2axI2zCG2DM4JW9gBe1MrVPg0kxGT7lt/saDJ1dWn8uMeTRO6pMlRFNFoHtBokV5dXYvGqyv2o3t/eSuWJE0PAxrOcxY2e95rFYIwR5AoETzmol7FL2vK0APOCj1sExOMMTTXQWPaCoCKIO37j7yfy+/B9P3kHZvWv08f6EO8ML4skKu3KmlHOe12f9qhvaLdQUxXK0mHGJt29sadFvqvg0VO9G4Y3EUPlKvYk2A+D+k++8y1ZM5RNu5tnPySjZuMil4lZzjnzBkm15CUck0sNXMI8FfGmasIcisjCupz3qbRfO6nyweVzJZ9Sk5Jzqk7jFOgwannCEadzRmdpX6SNrIq9yqZtXNmvQGLDawYzfhpWmuMTbdFWHML8qZgZ/VVSa0j/CWrP7lWub6QDcaEmERFrSWTWvFOAH5k/tUifWKGcy8O52ucSD7Gip1KW40jxtOMP42ZqzgJ0ifBG4P1/YLmUwsTtYbF6wwMFUKueIraJ+mUXkuSXmAxH1ENFCIedyf7gJXjsRuFzBpHbHaVtEq9elghXaxcFVaeeMpAW23hUqIAUcs/UwHERDWklAv9gvsblXUuWnLgLs8Odv9yZV1hFW5Sp3LZAEtwOsCmWqVH4jQx6VgWZzLvbFzpMxqkKz9EfFGTK3wooDaj3S8Glm5AI8kOUZGcE5fHA/mDufd4GqtQV41S8yM8GjDQeFqgLmjcLXTVwpZ7jIaLVU7hEMl7P5teHB2oACh6qkzvvFa4x/kqBPUYoABGbWv34vmTHALw71BmR4Qa3F33F2fReUKFM7+FSEBMtooDoOeaXv84AKgta3cg4Jbv3HJNjBBYvXhH8eohdkwPA5vwUNyuOhYVzew+pg1ycExvq2KQN+RSkIWgV1L8uiYNtRFaChxaugoctEQKEAx0StcwRkQbZIxMNsyzvW0jfcgQBaQV6voQPayhLtawJbKB6ni9PbQpDSVAnskAdLDbCjRgr4NA7OnjXLM1q7D0zVrgq+mHcaL14EIt4RJUW9xO0cRlJAsJw4JhBu0xcjLIHLjukQFi26ZLXAI5Zm6GmUu6ZZO7qAkLzg/PLk52L6+4ZBGVyClG6cFo68KIW2IxONByYrsOY/sCl0HU06I8xFre3FegUfpoqmF6CLq6CJKWAA8OtEOg1JHEYZFcgzsFMTHZagU2NvG6P5XpK9yt0uQhbfEfUsd/3cyU4kAwNiFraRMHgjCP0zVUkPdYVd+wm1fYU32jrcSFaGhc6EmZNcxetTo9BUyH44W1gfK6gfL6ArWVoBANDQpLxQ0g0zYEMq9RjdPaYmlFqhuovjgRXZy8tpgSDQzSUBmkIdKQPQLYQSZztpjb1ayKa0C5nUC5fYFytJ1Uqy2cReoop9V1QmXox8AwcQNOCFo6KNUD8tRPl4s3UiYx+6oHiqcNitJ1L2JiPFCVQ09KVDXBAhwtWErhcTqFx+kpPFhbbQOl2w2E340HKm7oaOBkwZ6LzO7Eye6Lk7bWBkp/GwiHGw/U27BMc0HQ6Oc4Lu/qBRVA3Zob9QVLW3UDpVcNhFuNB+puCLtrHDbE3MjpQdU/Qu5GtTeo+mpe6WgD4WnjgYUjWKp64jbV/0BP4bO6hc/qi5O+5reVOAknngzV/JYkfB6TsQadRuwsIrGsajlxWwIIuh0N0NfTIPrGQunkA+Hlk4HGAnh6IqgJqkBBw3Xt67sSfWuhdPKB8PKJ2lq01z1xxSVDbS6Z55gdQWN960HIc1Qrl6z4qgeKvlVQevRQePRkoFUAkgmFDVbBAYA5sYNXZWc1nEtTd/DdN/Ym2qYBKiMAKCIAMnRPgaUVK0G+N6Rb5EqkuqPvvsE30TYOUJ3RF2GBbVXRmH30H2keYKsxzAaUC9OFhFkGAG1F9M13K9rVyHvPv7nfj8M44b3WGBLC/7D2OJnTRPTs/rT0i6YF+xqGKkw4HYIHbtD516JceJP60V3YjEg1AFDW0VhztrGLkbR8iMQ8sPrE9SR+ZWuSOoGvqrVVKqOi1gafq9aG5Fqbzex6/1qbPXTTnTOsDuRkSRxgela+jfT/oeJm6xuJloqbPTTpQ6RKtmViBzuddc0ssQytLF1rOWjbMD9Xuc3WtxltGwmH5IzWym2uo1tts5hpYcOw2w7z1qtttrbdaKu2OQNDCmR1ey7coeOuC8b69nX7noijHSG0ldMcdXzQvg9IwqgBIp4ZIWbbztov27eg5Mh9qdqL0rZ50VGbtM7X7kCtooaXFYGs7EjDf6+s4WjXo5VRtwi6nYH1aAfolDUypAD7q1l9PHtZw9EuOLfVyZyBBWfHqlYY1SJVFBa7jdpvUFh0tOvLbfUyZ2B92Zbryw35aeitK5bfOuvlau9Uaq2WuQO3KtmOfsZVC6n/hYyrq70jqb2w5g7U/7bdJ+ffRwCfIefvauv/9oKbO9AC2ES7kNQDqe0Xklxt/d9ecHMHWgAbaxcme3iS2y9Mutpqv73g5g5V/EgrjU88L9un/UxK7Tmy+J7+ptbW6pwHmnJgttp/V+bAHE99LAfaJnn2FJgH+6XAapU17RSYh1QpMFlu5TDRU+eJVAd2xaE/+rwHdndPZ+cX0/2357sXl6fTi74HdUsi+UFdKA3JT+pm1LC5pscHL7PPr/TP7mbY1c/vlqIqAFXbFFVOsZJ23TBliKWUYaY91mWxIWu4xsDQfJZ0qKzJLQPIQdzbbz4stWYTJalrsImrEQrGGrSSRj5KWohNgAkvwhtYybDLOBIzDdRUY/R6AcZCni7E5CH6kGkkpUrI6t7ECjJUHFocmJ2yLbkq27QHDHtZolQfNKsbNGsAaMDSSFGVqNV9ixVquHjcwFo2kTaIuY3nUwFgQRPpAVu3qA2RNGBpFLRL0OpuQ6OlzLrWrCWwVAcFO5P+wFKr+cM4Tqt3NeQtFfeiorxX/etKvs0kSMe9ykqRucbLzut1e7WT8996UoufEM4MqKuhd438ZhJ+18pk9IeflnH6Rz7CsPPP7EnRTbicU5EAXfHAH5yDtx/Pmw5ArgB3BEWejl5rIglAbZq4nLffbAB4/ZXTxHPm3WqjkSZrGzStdIQnaAIai7KJJH2UVG+OL8C6hK0vVjkJDxpOsTfdG/MLdyKf1w/lt8T8MD06ng65KkbQl70HuLELCnq6oNmNHpo+qL1FH9Temg8Khp7ZB9JuTDsrl6qrM623G2wSQ1/J4tmSxM+H6BtFneP95Tpbd1n7GUWgaRSHmhd++D5bHEgHpUbFuZHebNZSZeBd50/BW5Wvwmxu/3ogGYMXZUnZePHV6mFfvTDGxeMM6Xl8UPFEPoY/89e/L29pcsO0t3iEaOH9l9R/WPDmlH/gLd/R64Bmz7nLPmlA/p5pttsgovNaNkK26UDYdKUUlDfTyKyXrZ0UsE9UMXlhvIEw3g0nFMu7YuTp5fahBBSWGghLrTxjKl8OIhMgtw8Q+4rR5buHOQF2xz0a8vz5mc2XWe+YRfmvNhQFu6AF5LQ4urdLyETJ/WYxYCOyist1+O5+TpbSDS7ufJBJKdo2mn11cQ3KZ1e6vPU9UTIVWd8g761yGQw/953dd9fs35IGCmQ1TTbQ09U7W6CwG0Dp3KpOb1fUJh/whj30hfGVIQRZolOQualEr25sgcIYAKU1UB6VrlA7S3/95839mwZq8ZaoLXQxFLoYNJtkrPGu8cbvutDPUOhnoFTQazsAniPgqxR3ABT6GigV9tpelyaCvA1iq0pNBCChv4FSgde3lDyDE1U56wOQUOFAqcPr51EbyHE3RqdQ3UiobtCYwnC6yXE2JqfQ5UjoctCYv7C7ydkko1I57AGQUO2wWbUjDeFBm0pPcdACIKHaYWPeQoMefXIa8ClOJwBUePJK5b22s+Y5UjuVQwAAFfmvZv2ssbyA/vpq8F5hoZ+R0M+wWT/rqJ+N9Q8s9DMS+hk26mcNe7FJ5isnp9DOWGhn2KidNazFcGNRD2+r4XslDMOr4noaP+ZXWvOwt55EupQ75eRJmYHmZZ3X8hSFsPAj2/kU13Gaxg/Ns+zV+rsmkkP0nQO6CO4impxlKC2Kyfn2io/xz1l6K4juPvhJxP5alJks1smgZzHEWpeYJL8me5bGCYsuZAaBuEG79V7y4tbzLAVlVp7Fb8Nsv6lc3IsuEqRZMupvfNAXp++Pj0dGPvHsacGIMbk4mELYSoDqxO+8brmi/Zv/AA==</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>1cfe8bfe-211f-4c3d-bb8a-7c2871a9f94c</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>58656b86-93a4-4ce9-919f-288700ae72e7</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Verfasser__verfasser__BetreuerInnendienst__betreuer__Verkauf">
          <DataField>Verfasser__verfasser__BetreuerInnendienst__betreuer__Verkauf</DataField>
        </Field>
        <Field Name="Enddatum">
          <DataField>Enddatum</DataField>
        </Field>
        <Field Name="Startdatum">
          <DataField>Startdatum</DataField>
        </Field>
        <Field Name="Anlagename">
          <DataField>Anlagename</DataField>
        </Field>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="Index_Textkopf">
          <DataField>Index_Textkopf</DataField>
        </Field>
        <Field Name="Feld15_Textkopf">
          <DataField>Feld15_Textkopf</DataField>
        </Field>
        <Field Name="Wert__FORMAT_Feld5">
          <DataField>Wert__FORMAT_Feld5</DataField>
        </Field>
        <Field Name="Stuck__FORMAT_Feld4">
          <DataField>Stuck__FORMAT_Feld4</DataField>
        </Field>
        <Field Name="Feld14_Textkopf">
          <DataField>Feld14_Textkopf</DataField>
        </Field>
        <Field Name="Feld12_Textkopf">
          <DataField>Feld12_Textkopf</DataField>
        </Field>
        <Field Name="Feld19_Textkopf">
          <DataField>Feld19_Textkopf</DataField>
        </Field>
        <Field Name="Feld1_Textkopf">
          <DataField>Feld1_Textkopf</DataField>
        </Field>
        <Field Name="Feld8_Textkopf">
          <DataField>Feld8_Textkopf</DataField>
        </Field>
        <Field Name="Feld7_Textkopf">
          <DataField>Feld7_Textkopf</DataField>
        </Field>
        <Field Name="Feld6_Textkopf">
          <DataField>Feld6_Textkopf</DataField>
        </Field>
        <Field Name="Feld13_Textkopf">
          <DataField>Feld13_Textkopf</DataField>
        </Field>
        <Field Name="Feld3_Textkopf">
          <DataField>Feld3_Textkopf</DataField>
        </Field>
        <Field Name="Feld10_Textkopf">
          <DataField>Feld10_Textkopf</DataField>
        </Field>
        <Field Name="Feld18_Textkopf">
          <DataField>Feld18_Textkopf</DataField>
        </Field>
        <Field Name="Feld11_Textkopf">
          <DataField>Feld11_Textkopf</DataField>
        </Field>
        <Field Name="Feld2_Textkopf">
          <DataField>Feld2_Textkopf</DataField>
        </Field>
        <Field Name="Feld9_Textkopf">
          <DataField>Feld9_Textkopf</DataField>
        </Field>
        <Field Name="Feld6_Kontakte">
          <DataField>Feld6_Kontakte</DataField>
        </Field>
        <Field Name="Feld12_Kontakte">
          <DataField>Feld12_Kontakte</DataField>
        </Field>
        <Field Name="Feld10_Kontakte">
          <DataField>Feld10_Kontakte</DataField>
        </Field>
        <Field Name="Feld2_Kontakte">
          <DataField>Feld2_Kontakte</DataField>
        </Field>
        <Field Name="Feld1_Textzeile">
          <DataField>Feld1_Textzeile</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

