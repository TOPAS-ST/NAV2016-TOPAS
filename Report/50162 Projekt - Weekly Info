OBJECT Report 50162 Projekt - Weekly Info
{
  OBJECT-PROPERTIES
  {
    Date=11.12.17;
    Time=09:59:30;
    Modified=Yes;
    Version List=TOPAS,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  //*******************************************************************************************************
                  //                    Sicherheitsabfrage ob Temp Tabelle auch Berichtstabelle ist
                  //*******************************************************************************************************
                  IF Berichtstabelle.TABLECAPTION <> 'Berichtstabelle' THEN
                    ERROR('Eine Sicherheitssperre verhindert die Ausfhrung dieses Berichtes.'+
                          'Stellen Sie sicher, dass die TABLECAPTION der Berichtstabelle auch auf Berichtstabelle lautet.');

                  Berichtstabelle.RESET;
                  IF Berichtstabelle.ISEMPTY = FALSE THEN BEGIN
                    REPEAT
                      IF Berichtstabelle.ISEMPTY = FALSE THEN BEGIN
                        SLEEP(500);
                        counter += 1;
                      END;
                      IF counter MOD 30 = 0 THEN BEGIN
                        Berichtstabelle.FINDFIRST;
                        IF CONFIRM('Die Berichtstabelle ist seit %1 durch Anwender %2 gesperrt. Wollen Sie die Anwendung abbrechen?',
                        TRUE,Berichtstabelle.Uhrzeit,Berichtstabelle.User,counter,TRUE) THEN
                          ERROR('');
                      END;
                    UNTIL Berichtstabelle.ISEMPTY = TRUE;
                  END;

                  VerkTab.SETFILTER(VerkTab.Code,verfasser);
                  IF (VerkTab.FINDFIRST) AND (verfasser <> '') THEN BEGIN
                    Anlagename := VerkTab."First name"+ ' ' + VerkTab.Name;
                  END ELSE BEGIN
                    Anlagename := '';
                  END;

                  //Die Vermischung der Verfasser aus den alten Krzel aus NAV 5.0 und den neuen Windows Benutzernamen mit W2K\...
                  //werden jetzt so umgesetzt, dass sich der Benutzer die neuen Benutzer nicht merken muss, sondern einfach die alten Krzel
                  //weiter verwenden darf, ohne dass Eintr„ge verloren gehen sollten
                  verfasser_filter := verfasser;
                  IF verfasser_filter <> '' THEN BEGIN
                    l := STRLEN(DELCHR(verfasser_filter,'=',DELCHR(verfasser_filter,'=','|'))) + 1;
                    IF l > 0 THEN BEGIN
                      FOR i := 1 TO l DO BEGIN
                        IF STRPOS(verfasser_filter,'|') > 0 THEN BEGIN
                          verfasser_neu := COPYSTR(verfasser_filter,1,STRPOS(verfasser_filter,'|') - 1);
                          verfasser_filter := COPYSTR(verfasser_filter,STRPOS(verfasser_filter,'|') + 1);
                        END ELSE
                          verfasser_neu := verfasser_filter;
                        UserTab.RESET;
                        UserTab.SETRANGE("Salesperson Code",verfasser_neu);
                        IF UserTab.FINDFIRST THEN
                          verfasser_filter_neu += UserTab."User Name" + '|' + verfasser_neu + '|'
                        ELSE
                          verfasser_filter_neu += verfasser_neu + '|';
                      END;
                    END;
                  END;
                  verfasser_filter_neu := DELCHR(verfasser_filter_neu,'>','|');

                  //*******************************************************************************************************
                  //                                   Projektmemos werden durchsucht
                  //*******************************************************************************************************
                  Memokopf.RESET;
                  Memokopf.SETFILTER("Memonr.",memonr);
                  Memokopf.SETFILTER("Kampagnennr.",'<>%1','');
                  IF ansicht = ansicht::Aussendienst THEN
                    Memokopf.SETFILTER(Kontaktart,'BESUCHSBERICHT|WEEKLY INFO|MESSEKONTAKT');
                  IF ansicht = ansicht::Innendienst THEN
                    Memokopf.SETFILTER(Kontaktart,'<>%1&<>%2&<>%3','BESUCHSBERICHT','WEEKLY INFO','MESSEKONTAKT');
                  Memokopf.SETFILTER("Angelegt von",verfasser_filter_neu);
                  IF (Startdatum<>0D) AND (Enddatum=0D) THEN
                    Memokopf.SETFILTER(Anlagedatum,'>=%1',Startdatum);
                  IF (Startdatum<>0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Anlagedatum,'>=%1&<=%2',Startdatum,Enddatum);
                  IF (Startdatum=0D) AND (Enddatum<>0D) THEN
                    Memokopf.SETFILTER(Anlagedatum,'<=%1',Enddatum);
                  IF Memokopf.FINDFIRST THEN BEGIN
                    REPEAT
                      Projekt.RESET;
                      Projekt.SETFILTER("No.",Memokopf."Kampagnennr.");
                      Projekt.SETFILTER("Betreuer Innendienst",betreuer);
                      Projekt.SETFILTER("Salesperson Code",verk„ufer);
                      Projekt.SETFILTER(Teams,teams);
                      Projekt.SETFILTER("Territory Code",gebiet);
                      IF Projekt.FINDFIRST THEN BEGIN
                        IF hstcode <> '' THEN BEGIN
                          Linien.RESET;
                          Linien.SETFILTER("Kampagnennr.",Projekt."No.");
                          Linien.SETFILTER(Linienkrzel,hstcode);
                          IF Linien.FINDFIRST THEN
                            Projektmemo_fllen;
                        END ELSE BEGIN
                          Projektmemo_fllen;
                        END;
                      END;
                    UNTIL Memokopf.NEXT = 0;
                  END;

                  //*******************************************************************************************************
                  //                                   Kontaktmemos werden durchsucht
                  //*******************************************************************************************************
                  Memokopf.RESET;
                  Memokopf.SETFILTER("Memonr.",memonr);
                  Memokopf.SETFILTER("Angelegt von",verfasser_filter_neu);
                  Memokopf.SETFILTER("Mandantennr.",'<>%1','');
                  IF ansicht = ansicht::Aussendienst THEN
                    Memokopf.SETFILTER(Kontaktart,'BESUCHSBERICHT|WEEKLY INFO|MESSEKONTAKT');
                  IF ansicht = ansicht::Innendienst THEN
                    Memokopf.SETFILTER(Kontaktart,'<>%1&<>%2&<>%3','BESUCHSBERICHT','WEEKLY INFO','MESSEKONTAKT');
                  IF (Startdatum <> 0D) AND (Enddatum = 0D) THEN
                    Memokopf.SETFILTER(Anlagedatum,'>=%1',Startdatum);
                  IF (Startdatum <> 0D) AND (Enddatum <> 0D) THEN
                    Memokopf.SETFILTER(Anlagedatum,'>=%1&<=%2',Startdatum,Enddatum);
                  IF (Startdatum = 0D) AND (Enddatum <> 0D) THEN
                    Memokopf.SETFILTER(Anlagedatum,'<=%1',Enddatum);
                  IF Memokopf.FINDFIRST THEN BEGIN
                    REPEAT
                      IF hstcode <> '' THEN BEGIN
                        Linien.RESET;
                        Linien.SETRANGE("Memonr.",Memokopf."Memonr.");
                        Linien.SETFILTER(Linienkrzel,hstcode);
                        IF Linien.FINDFIRST THEN
                          Kontaktmemo_fllen;
                      END ELSE BEGIN
                        Kontaktmemo_fllen;
                      END;
                    UNTIL Memokopf.NEXT = 0;
                  END;

                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   IF Berichtstabelle.TABLECAPTION = 'Berichtstabelle' THEN
                     Berichtstabelle.DELETEALL;
                   COMMIT;
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;Textkopf            ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(PROJEKTMEMO|KONTAKTMEMO));
               OnPreDataItem=BEGIN
                               IF sort = sort::Name THEN
                                 Textkopf.SETCURRENTKEY("Feld 10",Datum,Index);
                               IF sort = sort::"Betreuer-Name" THEN
                                 Textkopf.SETCURRENTKEY("Feld 6","Feld 10",Datum,Index);
                             END;
                              }

    { 2   ;1   ;Column  ;Verfasser__verfasser__BetreuerInnendienst__betreuer__Verkauf;
               SourceExpr='Verfasser: '+verfasser+' ,Betreuer Innendienst: '+betreuer+' ,Verk„ufercode: '+verk„ufer+' ,Teams: '+teams+' ,Gebiet: '+gebiet }

    { 3   ;1   ;Column  ;Enddatum            ;
               SourceExpr=Enddatum }

    { 4   ;1   ;Column  ;Startdatum          ;
               SourceExpr=Startdatum }

    { 5   ;1   ;Column  ;Anlagename          ;
               SourceExpr=Anlagename }

    { 6   ;1   ;Column  ;TODAY_0_4           ;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 7   ;1   ;Column  ;ReportForNavPageNo  ;
               SourceExpr=ReportForNav.PageNo }

    { 8   ;1   ;Column  ;USERID              ;
               SourceExpr=USERID }

    { 9   ;1   ;Column  ;Index_Textkopf      ;
               SourceExpr=Index }

    { 10  ;1   ;Column  ;Feld15_Textkopf     ;
               SourceExpr="Feld 15" }

    { 11  ;1   ;Column  ;Wert__FORMAT_Feld5  ;
               SourceExpr='Wert:   ' + FORMAT("Feld 5") }

    { 12  ;1   ;Column  ;Stuck__FORMAT_Feld4 ;
               SourceExpr='Stck: ' + FORMAT("Feld 4") }

    { 13  ;1   ;Column  ;Feld14_Textkopf     ;
               SourceExpr="Feld 14" }

    { 14  ;1   ;Column  ;Feld12_Textkopf     ;
               SourceExpr="Feld 12" }

    { 15  ;1   ;Column  ;Feld19_Textkopf     ;
               SourceExpr="Feld 19" }

    { 16  ;1   ;Column  ;Feld1_Textkopf      ;
               SourceExpr="Feld 1" }

    { 17  ;1   ;Column  ;Feld8_Textkopf      ;
               SourceExpr="Feld 8" }

    { 18  ;1   ;Column  ;Feld7_Textkopf      ;
               SourceExpr="Feld 7" }

    { 19  ;1   ;Column  ;Feld6_Textkopf      ;
               SourceExpr="Feld 6" }

    { 20  ;1   ;Column  ;Feld13_Textkopf     ;
               SourceExpr="Feld 13" }

    { 21  ;1   ;Column  ;Feld3_Textkopf      ;
               SourceExpr="Feld 3" }

    { 22  ;1   ;Column  ;Feld10_Textkopf     ;
               SourceExpr="Feld 10" }

    { 23  ;1   ;Column  ;Feld18_Textkopf     ;
               SourceExpr="Feld 18" }

    { 24  ;1   ;Column  ;Feld11_Textkopf     ;
               SourceExpr="Feld 11" }

    { 25  ;1   ;Column  ;Feld2_Textkopf      ;
               SourceExpr="Feld 2" }

    { 26  ;1   ;Column  ;Feld9_Textkopf      ;
               SourceExpr="Feld 9" }

    { 27  ;1   ;DataItem;Kontakte            ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(ANSPRECHPARTNER));
               DataItemLink=Index=FIELD(Index) }

    { 28  ;2   ;Column  ;Feld6_Kontakte      ;
               SourceExpr="Feld 6" }

    { 29  ;2   ;Column  ;Feld12_Kontakte     ;
               SourceExpr="Feld 12" }

    { 30  ;2   ;Column  ;Feld10_Kontakte     ;
               SourceExpr="Feld 10" }

    { 31  ;2   ;Column  ;Feld2_Kontakte      ;
               SourceExpr="Feld 2" }

    { 32  ;1   ;DataItem;Textzeile           ;
               DataItemTable=Table50037;
               DataItemTableView=SORTING(Tabelle,Index,Belegnr.,Zeilennr.)
                                 WHERE(Tabelle=FILTER(MEMOZEILE));
               DataItemLink=Index=FIELD(Index) }

    { 33  ;2   ;Column  ;Feld1_Textzeile     ;
               SourceExpr="Feld 1" }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
      SaveValues=Yes;
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 1140001;2;Field     ;
                  CaptionML=DEU=Anlagedatum von;
                  SourceExpr=Startdatum }

      { 1140003;2;Field     ;
                  CaptionML=DEU=bis;
                  SourceExpr=Enddatum }

      { 1140024;2;Field     ;
                  CaptionML=DEU=Memonr.;
                  SourceExpr=memonr }

      { 1140013;2;Field     ;
                  CaptionML=DEU=Betreuer Innendienst;
                  SourceExpr=betreuer }

      { 1140015;2;Field     ;
                  CaptionML=DEU=Verk„ufercode;
                  SourceExpr=verk„ufer }

      { 1140022;2;Field     ;
                  CaptionML=DEU=Teams;
                  SourceExpr=teams;
                  TableRelation=Team }

      { 1140026;2;Field     ;
                  CaptionML=DEU=Gebietscode;
                  SourceExpr=gebiet;
                  TableRelation=Territory }

      { 1140005;2;Field     ;
                  CaptionML=DEU=Verfasser;
                  SourceExpr=verfasser }

      { 1140019;2;Field     ;
                  CaptionML=DEU=Herstellercode;
                  SourceExpr=hstcode;
                  TableRelation=Manufacturer }

      { 1140021;2;Field     ;
                  CaptionML=DEU=Berichtsansicht;
                  OptionCaptionML=DEU=Alle Komm.-Arten,BESUCHSBERICHT|WEEKLY INFO|MESSEKONTAKT,Alle anderen Komm.-Arten auáer BESUCHSBERICHT etc.;
                  SourceExpr=ansicht }

      { 1140008;2;Field     ;
                  CaptionML=DEU=Berichtssortierung;
                  OptionCaptionML=DEU=Name,"Betreuer Innendienst,Name";
                  SourceExpr=sort }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Berichtstabelle@1140028 : Record 50037;
      Memokopf@1140029 : Record 50003;
      Memozeile@1140031 : Record 50004;
      Projekt@1140014 : Record 5071;
      Projekt_Info@1140004 : Record 5071;
      Ansprech@1140030 : Record 50005;
      Ansprechpartner@1140011 : Record 50005;
      UserTab@1000000002 : Record 2000000120;
      Ansprechfilter@1140000 : Text[250];
      Anlagename@1140001 : Text[50];
      Kuerzel@1140002 : Code[60];
      VerkTab@1140003 : Record 13;
      Contact@1140009 : Record 5050;
      Cont_temp@1140005 : Record 5050;
      Statustext@1140010 : Text;
      Hersteller@1140007 : Record 5720;
      Linien@1140008 : Record 50002;
      Startdatum@1140022 : Date;
      Enddatum@1140023 : Date;
      memonr@1140017 : Code[60];
      betreuer@1140012 : Code[60];
      verk„ufer@1140013 : Code[60];
      teams@1140015 : Code[60];
      gebiet@1140018 : Code[60];
      verfasser@1140024 : Code[60];
      verfasser_neu@1000000000 : Text;
      verfasser_filter@1000000003 : Text;
      verfasser_filter_neu@1000000005 : Text;
      hstcode@1140016 : Code[60];
      sort@1140027 : 'Name,Betreuer-Name';
      ansicht@1140006 : 'Alle,Aussendienst,Innendienst';
      counter@1140019 : Integer;
      l@1000000001 : Integer;
      i@1000000004 : Integer;
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionTextkopf_Body2@5010(VAR Textkopf@1000000000 : Record 50037);
    BEGIN
      WITH Textkopf DO BEGIN
        ReportForNav.ShowOutput(Textkopf.Tabelle = 'PROJEKTMEMO');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionTextkopf_Body3@5011(VAR Textkopf@1000000000 : Record 50037);
    BEGIN
      WITH Textkopf DO BEGIN
        ReportForNav.ShowOutput(Textkopf.Tabelle = 'KONTAKTMEMO');
      END;
    END;

    PROCEDURE Projektmemo_fllen@1140001();
    BEGIN
      Berichtstabelle.INIT;
      Berichtstabelle.Tabelle := 'PROJEKTMEMO';
      Berichtstabelle.Index := Memokopf."Memonr.";
      Berichtstabelle.Datum := Memokopf.Anlagedatum;
      Berichtstabelle."Belegnr." := Memokopf."Memonr.";
      Berichtstabelle."Feld 1" := Memokopf.Memokurztext;
      Berichtstabelle."Feld 2" := Memokopf."Kampagnennr.";
      Berichtstabelle."Feld 15" := Memokopf."Angelegt von";
      Berichtstabelle."Feld 18" := Memokopf.Memodatum;
      Berichtstabelle."Feld 19" := Memokopf.Kontaktart;
      IF Projekt_Info.GET(Memokopf."Kampagnennr.") THEN BEGIN
        Berichtstabelle."Feld 4" := Projekt_Info.Projektvolumen;
        Berichtstabelle."Feld 5" := Projekt_Info.Projektwert;
        Berichtstabelle."Feld 6" := Projekt_Info."Betreuer Innendienst";
        Berichtstabelle."Feld 7" := Projekt_Info."Salesperson Code";
        Berichtstabelle."Feld 8" := Projekt_Info.Projektstatus;
        Berichtstabelle."Feld 9" := Projekt_Info.Projektklasse;
        Berichtstabelle."Feld 11" := Projekt_Info.Description;
        Ansprech.RESET;
        Ansprech.SETRANGE("Kampagnennr.",Projekt_Info."No.");
        Ansprech.SETRANGE(Fhrungsrolle,TRUE);
        IF Ansprech.FINDFIRST THEN BEGIN
          Ansprech.CALCFIELDS(Mandantenname);
          Berichtstabelle."Feld 10" := Ansprech.Mandantenname;
          IF Cont_temp.GET(Ansprech."Kontaktnr.") THEN BEGIN
            Berichtstabelle."Feld 3" := Cont_temp."Post Code";
            Berichtstabelle."Feld 13" := Cont_temp.City;
          END;
        END ELSE BEGIN
          Berichtstabelle."Feld 14" := 'Kein Hauptbeteiligter im Projekt';
        END;
        Linien.RESET;
        Linien.SETRANGE("Memonr.",Memokopf."Memonr.");
        IF Linien.FINDFIRST THEN BEGIN
          REPEAT
            IF Hersteller.GET(Linien.Linienkrzel) THEN
              Berichtstabelle."Feld 12" := Berichtstabelle."Feld 12" + ' ' + Hersteller.Herstellerkurzname;
          UNTIL Linien.NEXT = 0;
        END;
      END;
      Berichtstabelle.User := USERID;
      Berichtstabelle.Uhrzeit := CURRENTDATETIME;
      Berichtstabelle.INSERT;

      Ansprech.RESET;
      Ansprech.SETRANGE("Memonr.",Memokopf."Memonr.");
      IF Ansprech.FINDFIRST THEN
        REPEAT
          Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'ANSPRECHPARTNER';
            Berichtstabelle.Index := Ansprech."Memonr.";
            Berichtstabelle."Belegnr." := Ansprech."Kontaktnr.";
            Berichtstabelle."Feld 2" := Ansprech."Kontaktnr.";
            Ansprech.CALCFIELDS(Mandantenname,Kontaktname);
            Cont_temp.RESET;
            IF Cont_temp.GET(Ansprech."Kontaktnr.") THEN
              Berichtstabelle."Feld 6" := Cont_temp."Organizational Level Code";
            Berichtstabelle."Feld 10" := Ansprech.Mandantenname;
            Berichtstabelle."Feld 12" := Ansprech.Kontaktname;
            Berichtstabelle.User := USERID;
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
          Berichtstabelle.INSERT;
        UNTIL Ansprech.NEXT = 0;

      Memozeile.RESET;
      Memozeile.SETRANGE("Memonr.",Memokopf."Memonr.");
      IF Memozeile.FINDFIRST THEN
        REPEAT
          Berichtstabelle.INIT;
          Berichtstabelle.Tabelle := 'MEMOZEILE';
          Berichtstabelle.Index := Memozeile."Memonr.";
          Berichtstabelle."Belegnr." := Memozeile."Memonr.";
          Berichtstabelle."Zeilennr." := Memozeile."Zeilennr.";
          Berichtstabelle."Feld 1" := Memozeile.Bemerkung;
          Berichtstabelle.User := USERID;
          Berichtstabelle.Uhrzeit := CURRENTDATETIME;
          Berichtstabelle.INSERT;
        UNTIL Memozeile.NEXT = 0;
    END;

    PROCEDURE Kontaktmemo_fllen@1140000();
    BEGIN
      Contact.RESET;
      Contact.SETFILTER("No.",Memokopf."Mandantennr.");
      Contact.SETFILTER("Betreuer Innendienst",betreuer);
      Contact.SETFILTER("Salesperson Code",verk„ufer);
      Contact.SETFILTER(Teams,teams);
      Contact.SETFILTER("Territory Code",gebiet);
      IF Contact.FINDFIRST THEN BEGIN
        Berichtstabelle.INIT;
        Berichtstabelle.Tabelle := 'KONTAKTMEMO';
        Berichtstabelle.Index := Memokopf."Memonr.";
        Berichtstabelle.Datum := Memokopf.Anlagedatum;
        Berichtstabelle."Belegnr." := Memokopf."Memonr.";
        Berichtstabelle."Feld 1" := Memokopf.Memokurztext;
        Berichtstabelle."Feld 2" := Memokopf."Mandantennr.";
        Berichtstabelle."Feld 15" := Memokopf."Angelegt von";
        Berichtstabelle."Feld 18" := Memokopf.Memodatum;
        Berichtstabelle."Feld 19" := Memokopf.Kontaktart;
        IF Cont_temp.GET(Memokopf."Mandantennr.") THEN BEGIN
          Berichtstabelle."Feld 3" := Cont_temp."Post Code";
          Berichtstabelle."Feld 6" := Cont_temp."Betreuer Innendienst";
          Berichtstabelle."Feld 7" := Cont_temp."Salesperson Code";
          Berichtstabelle."Feld 10" := Cont_temp.Name;
          Berichtstabelle."Feld 13" := Cont_temp.City;
        END;
        Linien.RESET;
        Linien.SETRANGE("Memonr.",Memokopf."Memonr.");
        IF Linien.FINDFIRST THEN
          REPEAT
            Hersteller.SETFILTER(Code,Linien.Linienkrzel);
            IF Hersteller.FINDFIRST THEN
              Berichtstabelle."Feld 12" := Berichtstabelle."Feld 12" + ' ' + Hersteller.Herstellerkurzname;
          UNTIL Linien.NEXT = 0;

        Berichtstabelle.User := USERID;
        Berichtstabelle.Uhrzeit := CURRENTDATETIME;
        Berichtstabelle.INSERT;

        Ansprech.RESET;
        Ansprech.SETRANGE("Memonr.",Memokopf."Memonr.");
        IF Ansprech.FINDFIRST THEN
          REPEAT
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'ANSPRECHPARTNER';
            Berichtstabelle.Index := Ansprech."Memonr.";
            Berichtstabelle."Belegnr." := Ansprech."Kontaktnr.";
            Berichtstabelle."Feld 2" := Ansprech."Kontaktnr.";
            Ansprech.CALCFIELDS(Mandantenname,Kontaktname);
            IF Cont_temp.GET(Ansprech."Kontaktnr.") THEN
              Berichtstabelle."Feld 6" := Cont_temp."Organizational Level Code";
            Berichtstabelle."Feld 10" := Ansprech.Mandantenname;
            Berichtstabelle."Feld 12" := Ansprech.Kontaktname;
            Berichtstabelle.User := USERID;
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.INSERT;
          UNTIL Ansprech.NEXT = 0;

        Memozeile.RESET;
        Memozeile.SETRANGE("Memonr.",Memokopf."Memonr.");
        IF Memozeile.FINDFIRST THEN
          REPEAT
            Berichtstabelle.INIT;
            Berichtstabelle.Tabelle := 'MEMOZEILE';
            Berichtstabelle.Index := Memozeile."Memonr.";
            Berichtstabelle."Belegnr." := Memozeile."Memonr.";
            Berichtstabelle."Zeilennr." := Memozeile."Zeilennr.";
            Berichtstabelle."Feld 1" := Memozeile.Bemerkung;
            Berichtstabelle.User := USERID;
            Berichtstabelle.Uhrzeit := CURRENTDATETIME;
            Berichtstabelle.INSERT;
          UNTIL Memozeile.NEXT = 0;
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'Textkopf': CASE SectionId OF
          'Body2': OnPreSectionTextkopf_Body2(Textkopf);
          'Body3': OnPreSectionTextkopf_Body3(Textkopf);
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>Jl4AANVc63LcthX+35m+A2czU9vJhiZuvLjaZHRZxap1G60ct/mjobSQzIgiFS7XsTKdPk3fop3pjzxQX6EACS5BLkiC3FXaJmN7F8AC53w8OFcC//7Hv3a+/fwQGp9osgjiaDICpjUyaHQTz4PobjJaprdfu6Nvv/n973b+nCb+BX2Mk3Rx7D/Fy3RGk8APg19oYpQfv19NhE1oEj7bBb1lX0fGqf9AJyMxxWGcnPqfRsZ+HKVJHF4+PbK+A/pp+vkxoYuFKa1mvj+Svo6NhlGf+IpjoyCgWH9s7C/DdJnQSUSXbHg4Ns6X12Fw844+Xcb3NJp41wT48Nq+xfD69prcjIwTP7kLogWj2mW/h+wPsNhfmDFT4W9knPt39C0N7j6mkxH0HCtv+RDM04+sgf1qZBwyDiejXQ7Q2HAe05Fx8BiwToLZJz/1Z/EyuWHMf8Fw+jqDi/PzPgrYry5plH5cnN3ungRhGDzQlCbsR8HiMfSfcjjPk/hHep8aXxsfKL0Pn4yj6DYeGWfXP9Kb9DSejIgFbFjMKmBfMQFNi/0PgOuN2CM2jJ09P5ovso/sy1FKH0D++GDtSeXzcPL5IP6r4vle0s/pffx4W2eTj7v0r0P6fUB/noxmZxeXR6ffvWRNNAzp+Cia08/jPRrSuygxxz/QIKQR+/TK+PB2ejEtxk0Oj44vpxcvzy/O/jR9d3kyPTn767uz08vd/POrV7XFGD38H2JZyCm7vveTOrFH80xGj+knGk5G1khgUIOkDgtSwvKW+nOayKDkLUDG5DwJovQsmrKd98RlZjJKkyUV7Sf+57Pohp7TJO+69cMF69v3o9lH1n+/apmxp8yeZG2VXCIPGUcEmWgkEc/IFwQvKq1VtrCSLQ7WXvy54KnSCABmEDM4ZkwJ8IUtYJnQ8zw0dpFpsf9Y33F843NqD8PYZ8KNPTI2bNckbJhDbBmcE7Zlg+MgWqHCl5mMmNze+osFTa6uPpUf92ia0CVNjqKIRvOARov06upaNF5dsR/d+8tbsdloehjQcJ6zsNl8r1UIwhxBokTwmAtxFb+sKUMPOCv0sE1MMMbQXAeN6yJQEaR9/5H3nxwz/Tl9P3nHlvXv0wf6EC+MLwvk6q1K2lFOu92fdmivaHcQ08JK0iHGpp09caeF/utgkRO9GwZ30QPlyvMkmM9Dus8+c/2Xc5SNexsnv2TjJqOiV8kZzjlzhsk1JKVcE0vNHAL8kXHmKoLcyoiC+py3aTSf++nyQSWzZZ+SU5Jz6g7jFGhw6jmCUWdzRmepn6SNrMq9SmbtnFlvwGYDK0Yzfpr2GmPTbRHWwyBk3Lwp2Fl9VVLrCE/I6k+uVe4vZIMxISZRUWvJpFb8DoAfmee0SJ+YSdyLw/kaJ5L3sGKn0lbjiPE047MxcxUnQfokeGOwvl/QfGlhotaweJ2BoULIFbOovY1O6bUk6QUW8/7UQCHicUexD1g5HrtRyKxxxFZXSavUq4cV0sXKVWHliVkG2moLlxIFiFr+mQogJqohpdzoF9zfqOxz0ZIDd3l2sPuXK+sKq3CTOpXbBliC0wE21So9EqeJSceyOJN5Z+NOn9EgXfkh4ouaXOFDAbUZ7X4wsHQDGkl2iIrknLjc088n5t7jaaxCXTVKzY/waMBA42mBuqBxt9BVC1vuMRouVjmFQyTv/Wx6cXSgAqDoqTK981rhHue7ENRjgAIYta3di+dPcgjAv0OZHRFqcHfdX5xF5wkVzvwWIgGx2CoOgJ5rev3jAKC2rN2BgFs+c8s1MUJg9eAdxaOH2DE9DGzCg2276lhUNLP7mDbIwTG9rYpB3pBLQRZcXkmR6Zo01EZoKXBo6Spw0BIpQDDQKV3DGBFtkDEy2TDP9raN9CFDFJBWqOtD9LCGuljDlsgGquP19tCmNJQAeSYD0MFuK9CAPQ4CsaePc83WrMLSN2uBr6YfxonWgwu1hEtQbXE7RROXkSwkDAuGGbTHyMkgc+C6RwaIbZsucQnkmLkZZi7plk3uoiYsOD88uzjZvbzikkVUIqcYpQejrQsjbonF4EDLie06jO0bXAZRT4vyEGt5c1+BRumjqYbpIejqIkhaAjw40A6BUkcSh0VyDe4UxMRkuxXY2MTr/lSmr3C3SpOHtMV/SB3/dTNTigPB2ISspU0cCMI8TtdQQd5jVX3Dbl5hT/WNthIXoqFxoSdl1jB71Or0FDAdjhfWBsrrBsrrC9RWgkI0NCgsFTeATNsQyLxGNU5rm6UVqW6g+uJEdHHy2mJKNDBIQ2WQhkhD9ghgB5nM2WJuV7MqrgHldgLl9gXK0XZSrbZwFqmjnFbXCZWhHwPDxA04IV5g60apHpCnfrpcvJEyidlXPVA8bVCUrnsRE+OBqhx6UqKqCRbgaMFSCo/TKTxOT+HB2mobKN1uIPxuPFBxQ0cDJwv23GR2J052X5y0tTZQ+ttAONx4oN6GZZoLgkY/x3F5Vy+oAOrW3KgvWNqqGyi9aiDcajxQd0PYXeOwIeZGTg+q/hFyN6q9QdVX80pHGwhPGw8sHMFS1RO3qf4Hegqf1S18Vl+c9DW/rcRJOPFkqOa3JOHzmIw16DRiZxGJZVXLidsSQNDtaIC+ngbRNxZKJx8IL58MNBbA0xNBTVAFChqua1/flehbC6WTD4SXT9TWor3uiSsuGWpzyTzH7Aga668ehDxHtXLJiq96oOhbBaVHD4VHTwZaBSCZUNhgFRwAmBM7eFd2VsO5NHUH331jb6JtGqAyAoAiAiBD3ymwtGIlyN8N6Ra5Eqnu6Ltv8E20jQNUZ/RFWGBbVTRmH/1HmgfYagyzAeXGdCFhlgFAWxF98/cR7Wrkveff3O/HYZzwXmsMCeF/WHuczGkieg785P67hNKoaF8wXMNQBQwnRjDCrTr/WtQMb1I/ugsVsKgBtfOsfYWQdlyrYYSyGseas9fD2HzLh0gshKozrpcCKi84qRWnqmJXqa+Kih18roodkit2NvMO+lfs7IEpe+QMqyY5WSoImJ6Vv2b6/1C3s7Wz+m11O3tgVh8RqR5umdjBTmd1NEtPQytL+loO2jbMz1W0s7WT/21FO3vA611orWjnOro1O4sZKDYMu+0wb71m52iXk9tqds7AcjKyuv0f7hZyBwhjfSu9fX/G0S4FtxXlnAGlYEvCqAEinl8hZtv7uV+2v8iSI/el6o2WtlcgnYGZIwdqlUa8rJRkZUce/nvFEUc7RlDG7iJ0dwZGCA7QKY5kSAH2T7P6ePbiiKPt8bdV25yB/r5jVeuUapEqypPdRu03KE862o5/W9XNHZgTsuUqdUOWG3rriuW3zp252gme1pqbOzC/Yzv6eVstpP4X8raufi6otTznDtT/tt2nctBHAJ+hcuDq54hay3buQAtgE+1yVA+ktl+OcvWLAa1lO3egBbCxdnmzhye5/fKmq18MaC3beUMVP9IqBhDPy972fial9hy1AE+/FtBa4/NgUybNVlsRZSbN8dSHe6Btkt8mkeahzRJpHu6ZSKtV+bQTaR5RJdJk6ZeDTU+tSFXHgsUBRPq8x4J3T2fnF9P9t+e7F5en04u+x4FLIvlxYCgNOc4Sdxk1bK3p8cHL7PMr1YnhDKX6qeFStAV06vSRKgdZSfZumGLEUoox0zbr4teQZVxjYKBxQNJRtiY3DiAH8eig+YjWmg2V5KvBhq5GKBhr2HUa9kHack2AFedErKFmogw8MVNZTaVNrxdiLEbqgkweoo0ZsDRUfwla3f9YgYaK6YZGC5ZcDW569wx7WWpVHzWrGzVrEGoacUCJWt0bWaGGi+kGhgNEejHNbTwXCwALs0gP2LplbZioacQDJWh1R6PRKmZda5YR8DO4/csEwFIr+sM4Tqt3ROQtFYekor5X/etqvs0oSMfMytqSuXbYcuf1usXayflvPSHGK5qZsXQ1NK+R33XCb2+ZjP7w0zJO/8hHGHb+mc0U3YTLORUp0xUPfOIcvP143nTwcgW4JyjydBRbE0kAatPE5bz9RgXAa+CcJp5l71YbjTRZ26Cp0BH8rHZGE9DYlE0k6aOkenJ8A9YlbH2zyml70HA2vOkmml+4w/i8Pie/d+aH6dHxdMjlM4K+7DnAHu4m6OluAqCud6j8TXuL/qa9NX8TDD3pDqT3Pe2slKqu3LTen7BJfH0lC2JLgj8fom/+QC/zt+6e9jN/QNP8DTUk/Hx5tg2QDkqNKnIjDdmsj8pwus6fgrcqX4WB3P4FRDIGL8pys/Hiq9VkX70wxsV0hjQfH1TMyMfwOX/9+/KWJjdMT4spRAvvv6T+w4I3p/wDb/mOXgc0m+cu+6QB+Xumw26DiM5rOQbZegNhvZVSUN59I7NetnZSwD5RxeKFmYbCTDecgSxvo5GXl9uHElDYZChssvIUq3z9iEyA3D5A7Cvmlb8czwmwO27qkNfPT4W+zHrHLKJ/taEo2AUtKKfF0b2/QiZK7jeLARuRVVzfw89Wc7KUDm9xq4RMStG20eqrq3FIvrrSua2/LyVTkfUN8tMq183wI9HZXXnNnixpoEBW02QDPV29FQYKuwGUbqzqfHhFbfIBb9ikL4yvDCHIEp2CzE0lenUnDBTGACitgfIwdoXaWfrrP2/u3zRQi7dEbaGLodDFoNkkY41njTd+1oV+RkI/A6WCXns74DlCu0rhByChr4FSYa+9B9NEkLdBFFWplwAk9DdQKvD66ybP4ERVThMBJFQ4UOrw+onXBnLcjdEpVDcSqhs0JiucbnKcjckpdDkSuhw0ZirsbnI2yZ1UjpMAJFQ7bFbtSEN40KbSUxzlAEiodtiYodCgR5+cBnyK8w8AFZ68UnmvvXXzHEmcyjEDgIpMV7N+1theQH9/NXivsNDPWOhn2KyfddTPxvoHFvoZC/0MG/Wzhr3YJMeVk1NoZyy0M2zUzhrWYrixqIe31fC9EobxE805VWn8mF+HzcPe+svFl3KnnDwpbyDmVa/X8hIrYcHFEtdxmsYPzavs1fqVC+HVOnKEvnNAF8FdRJOzDKRFsTZ3Az/GP2fZrSC6++AnEftnUSayWCdDnoUQa11ikfyG7VkaJyy4kPkD4vLt1ivNiwvTswyUWZmLX7fZfsm5uFJdlBOzXNTf+KAvTt8fH4+MfOHZ04IRY3JpMIWslQDVid953XK7+zf/AQ==</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>1cfe8bfe-211f-4c3d-bb8a-7c2871a9f94c</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>58656b86-93a4-4ce9-919f-288700ae72e7</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Verfasser__verfasser__BetreuerInnendienst__betreuer__Verkauf">
          <DataField>Verfasser__verfasser__BetreuerInnendienst__betreuer__Verkauf</DataField>
        </Field>
        <Field Name="Enddatum">
          <DataField>Enddatum</DataField>
        </Field>
        <Field Name="Startdatum">
          <DataField>Startdatum</DataField>
        </Field>
        <Field Name="Anlagename">
          <DataField>Anlagename</DataField>
        </Field>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="Index_Textkopf">
          <DataField>Index_Textkopf</DataField>
        </Field>
        <Field Name="Feld15_Textkopf">
          <DataField>Feld15_Textkopf</DataField>
        </Field>
        <Field Name="Wert__FORMAT_Feld5">
          <DataField>Wert__FORMAT_Feld5</DataField>
        </Field>
        <Field Name="Stuck__FORMAT_Feld4">
          <DataField>Stuck__FORMAT_Feld4</DataField>
        </Field>
        <Field Name="Feld14_Textkopf">
          <DataField>Feld14_Textkopf</DataField>
        </Field>
        <Field Name="Feld12_Textkopf">
          <DataField>Feld12_Textkopf</DataField>
        </Field>
        <Field Name="Feld19_Textkopf">
          <DataField>Feld19_Textkopf</DataField>
        </Field>
        <Field Name="Feld1_Textkopf">
          <DataField>Feld1_Textkopf</DataField>
        </Field>
        <Field Name="Feld8_Textkopf">
          <DataField>Feld8_Textkopf</DataField>
        </Field>
        <Field Name="Feld7_Textkopf">
          <DataField>Feld7_Textkopf</DataField>
        </Field>
        <Field Name="Feld6_Textkopf">
          <DataField>Feld6_Textkopf</DataField>
        </Field>
        <Field Name="Feld13_Textkopf">
          <DataField>Feld13_Textkopf</DataField>
        </Field>
        <Field Name="Feld3_Textkopf">
          <DataField>Feld3_Textkopf</DataField>
        </Field>
        <Field Name="Feld10_Textkopf">
          <DataField>Feld10_Textkopf</DataField>
        </Field>
        <Field Name="Feld18_Textkopf">
          <DataField>Feld18_Textkopf</DataField>
        </Field>
        <Field Name="Feld11_Textkopf">
          <DataField>Feld11_Textkopf</DataField>
        </Field>
        <Field Name="Feld2_Textkopf">
          <DataField>Feld2_Textkopf</DataField>
        </Field>
        <Field Name="Feld9_Textkopf">
          <DataField>Feld9_Textkopf</DataField>
        </Field>
        <Field Name="Feld6_Kontakte">
          <DataField>Feld6_Kontakte</DataField>
        </Field>
        <Field Name="Feld12_Kontakte">
          <DataField>Feld12_Kontakte</DataField>
        </Field>
        <Field Name="Feld10_Kontakte">
          <DataField>Feld10_Kontakte</DataField>
        </Field>
        <Field Name="Feld2_Kontakte">
          <DataField>Feld2_Kontakte</DataField>
        </Field>
        <Field Name="Feld1_Textzeile">
          <DataField>Feld1_Textzeile</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

