OBJECT Report 50170 Projektliste
{
  OBJECT-PROPERTIES
  {
    Date=15.05.17;
    Time=14:39:32;
    Modified=Yes;
    Version List=TOPAS,FORNAV2.0.0.1189/1189;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ReportForNav:= ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  Filter:= Campaign.GETFILTERS;
                  CREATE (Excel,FALSE,TRUE);                                              //erzeugt excel
                  Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
                  Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
                  Sheet.Range('B:B').ColumnWidth := 30;
                  Sheet.Range('C:C').ColumnWidth := 30;
                  Sheet.Range('G:G').ColumnWidth := 40;
                  Sheet.Range('L:L').ColumnWidth := 50;
                  Sheet.Range('A1').Value:='Projektnr.';
                  Sheet.Range('B1').Value:='Projektname';
                  Sheet.Range('C1').Value:='Hauptbeteiligter';
                  Sheet.Range('D1').Value:='PLZ';
                  Sheet.Range('E1').Value:='Projektstatus';
                  Sheet.Range('F1').Value:='Projektklasse';
                  Sheet.Range('G1').Value:='Linien';
                  Sheet.Range('H1').Value:='Projektartikel';
                  Sheet.Range('I1').Value:='Stckzahlen';
                  Sheet.Range('J1').Value:='Wert';
                  Sheet.Range('K1').Value:='Wert aktuell';
                  Sheet.Range('L1').Value:='REP-Projekt';
                  Sheet.Range('M1').Value:='Applikation';
                  Sheet.Range('N1').Value:='Wettbewerb';
                  Sheet.Range('O1').Value:='Prototyping';
                  Sheet.Range('P1').Value:='Vorserienstart';
                  Sheet.Range('Q1').Value:='Serienstart';
                  Sheet.Range('R1').Value:='Aktueller Serienstart';
                  Sheet.Range('S1').Value:='Aktueller Stand';
                  Sheet.Range('T1').Value:='Projektschutz';
                  Sheet.Range('U1').Value:='Verk„ufer';
                  Sheet.Range('V1').Value:='Betreuer';
                  Sheet.Range('W1').Value:='Gebiet';
                  Sheet.Range('X1').Value:='Letzte Žnderung Projekt';
                  Sheet.Range('Y1').Value:='Letzte Žnderung Memo';
                  Sheet.Range('Z1').Value:='Letzte Žnderung Aufgaben';
                  Sheet.Range('AA1').Value:='Startdatum Aufgaben';
                  j := '2';                                                    // <- Import in excel ab Zeile 2
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   Excel.Visible (TRUE);
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table5071;
               OnAfterGetRecord=BEGIN
                                  vLinientext := '';
                                  Linien.SETFILTER(Linien."Kampagnennr.",'%1',Campaign."No.");
                                  IF Linien.FINDFIRST THEN BEGIN
                                  REPEAT
                                    Hersteller.SETFILTER(Hersteller.Code,Linien.Linienkrzel);
                                    IF Hersteller.FINDFIRST THEN BEGIN
                                      vLinientext:=vLinientext + Hersteller.Herstellerkurzname + ' ';
                                    END;
                                  UNTIL Linien.NEXT=0;
                                  END
                                  ELSE
                                  BEGIN
                                    vLinientext := '';
                                  END;
                                  Sheet.Range('A'+j).Value:=Campaign."No.";
                                  Sheet.Range('B'+j).Value:=Campaign.Description;
                                  Ansprech.SETFILTER(Ansprech."Kampagnennr.",'%1',Campaign."No.");
                                  Ansprech.SETFILTER(Ansprech.Fhrungsrolle,'%1',TRUE);
                                  IF Ansprech.FINDFIRST THEN
                                    BEGIN
                                      Ansprech.CALCFIELDS(Mandantenname);
                                      Sheet.Range('C'+j).Value:= Ansprech.Mandantenname;
                                      Hauptbeteiligter := Ansprech.Mandantenname;
                                      Kontakt.GET(Ansprech."Kontakt Mandantennr.");
                                      Sheet.Range('D'+j).Value := Kontakt."Post Code";
                                      Sheet.Range('D'+j).NumberFormat := '00000';
                                    END
                                  ELSE
                                    BEGIN
                                      Sheet.Range('C'+j).Value:='';
                                      Hauptbeteiligter := '';
                                    END;
                                  Sheet.Range('E'+j).Value := Campaign.Projektstatus;
                                  Sheet.Range('F'+j).Value := Campaign.Projektklasse;
                                  Sheet.Range('G'+j).Value := vLinientext;
                                  ProjArti.RESET;
                                  ProjArti.SETFILTER(ProjArti."Kampagnennr.",'%1',"No.");
                                  ProjArti.SETFILTER(ProjArti.Inaktiv,'Nein');
                                  IF ProjArti.FINDFIRST THEN
                                    BEGIN
                                      projartikeltext := '';
                                      z„hler := 0;
                                        REPEAT
                                          IF z„hler = 0 THEN projartikeltext := ProjArti."Artikelnr. 2";
                                          IF z„hler > 0 THEN projartikeltext := projartikeltext + ', ' + ProjArti."Artikelnr. 2";
                                          z„hler := z„hler + 1;
                                        UNTIL ProjArti.NEXT = 0;
                                      END
                                    ELSE
                                      projartikeltext := '';
                                  Sheet.Range('H'+j).Value := projartikeltext;
                                  Sheet.Range('I'+j).Value := FORMAT(Campaign.Projektvolumen);
                                  Sheet.Range('J'+j).Value := Campaign.Projektwert;
                                  Sheet.Range('K'+j).Value := Campaign."Projektwert aktuell";
                                  Sheet.Range('L'+j).Value := Campaign."REP-Projekt";
                                  Sheet.Range('M'+j).Value := Campaign.Applikation;
                                  Sheet.Range('N'+j).Value := Campaign.Wettbewerb;
                                  Sheet.Range('O'+j).Value := Campaign.Prototyping;
                                  Sheet.Range('P'+j).Value := Campaign.Vorserienstart;
                                  Sheet.Range('Q'+j).Value := Campaign."Serienstart (geplant)";
                                  Sheet.Range('R'+j).Value := Campaign."Aktueller Serienstart";
                                  Sheet.Range('S'+j).Value := FORMAT(Campaign."Aktueller Stand");
                                  Sheet.Range('T'+j).Value := Campaign."Hersteller Projektnr.";
                                  Sheet.Range('U'+j).Value := Campaign."Salesperson Code";
                                  Sheet.Range('V'+j).Value := Campaign."Betreuer Innendienst";
                                  Sheet.Range('W'+j).Value := Campaign."Territory Code";
                                  Sheet.Range('X'+j).Value := Campaign."Last Date Modified";
                                  //Memos und Aufgaben nach letzter Žnderung durchsuchen
                                  groesstes_memo_datum := 0D;
                                  groesstes_aufgaben_datum := 0D;
                                  kleinstes_aufgaben_startdatum := 0D;
                                  Memos.RESET;
                                  Memos.SETFILTER(Memos."Kampagnennr.",'%1',Campaign."No.");
                                  IF Memos.FINDFIRST THEN
                                    REPEAT
                                      IF Memos."Korrigiert am" > groesstes_memo_datum THEN
                                        groesstes_memo_datum := Memos."Korrigiert am"
                                    UNTIL Memos.NEXT = 0;
                                  Aufgaben.RESET;
                                  Aufgaben.SETFILTER(Aufgaben."Campaign No.",'%1',Campaign."No.");
                                  Aufgaben.SETFILTER(Aufgaben."System To-do Type",'%1',Aufgaben."System To-do Type" :: Organizer);
                                  IF Aufgaben.FINDFIRST THEN
                                    REPEAT
                                      IF Aufgaben."Last Date Modified" > groesstes_aufgaben_datum THEN
                                        groesstes_aufgaben_datum := Aufgaben."Last Date Modified";
                                      IF ((Aufgaben.Date < kleinstes_aufgaben_startdatum) OR (kleinstes_aufgaben_startdatum = 0D))
                                      AND (Aufgaben.Closed = FALSE) THEN
                                        kleinstes_aufgaben_startdatum := Aufgaben.Date;
                                      Bemerkung.RESET;
                                      Bemerkung.SETFILTER(Bemerkung."Table Name",'%1',Bemerkung."Table Name" :: "To-do");
                                      Bemerkung.SETFILTER(Bemerkung."No.",'%1',Aufgaben."No.");
                                      IF Bemerkung.FINDFIRST THEN
                                        REPEAT
                                          IF (Bemerkung.Date <> 0D) AND (Bemerkung.Date > groesstes_aufgaben_datum) THEN
                                            groesstes_aufgaben_datum := Bemerkung.Date;
                                        UNTIL Bemerkung.NEXT = 0;
                                    UNTIL Aufgaben.NEXT = 0;
                                  Sheet.Range('Y'+j).Value := FORMAT(groesstes_memo_datum);
                                  Sheet.Range('Z'+j).Value := FORMAT(groesstes_aufgaben_datum);
                                  Sheet.Range('AA'+j).Value := FORMAT(kleinstes_aufgaben_startdatum);
                                  j:=INCSTR(j);
                                END;

               ReqFilterFields=Betreuer Innendienst,Salesperson Code,Teams,Projektstatus,Projektklasse,Projektvolumen,Projektwert,Territory Code }

    { 2   ;1   ;Column  ;USERID              ;
               SourceExpr=USERID }

    { 3   ;1   ;Column  ;TODAY               ;
               SourceExpr=TODAY }

    { 4   ;1   ;Column  ;Filter              ;
               SourceExpr=Filter }

    { 5   ;1   ;Column  ;Hauptbeteiligter    ;
               SourceExpr=Hauptbeteiligter }

    { 6   ;1   ;Column  ;CampaignGebietscode ;
               SourceExpr=Campaign."Territory Code" }

    { 7   ;1   ;Column  ;BetreuerInnendienst_Campaign;
               SourceExpr="Betreuer Innendienst" }

    { 8   ;1   ;Column  ;SalespersonCode_Campaign;
               SourceExpr="Salesperson Code" }

    { 9   ;1   ;Column  ;Projektwert_Campaign;
               SourceExpr=Projektwert }

    { 10  ;1   ;Column  ;Projektvolumen_Campaign;
               DecimalPlaces=0:0;
               SourceExpr=Projektvolumen }

    { 11  ;1   ;Column  ;Projektklasse_Campaign;
               SourceExpr=Projektklasse }

    { 12  ;1   ;Column  ;Projektstatus_Campaign;
               SourceExpr=Projektstatus }

    { 13  ;1   ;Column  ;Description_Campaign;
               SourceExpr=Description }

    { 14  ;1   ;Column  ;No_Campaign         ;
               SourceExpr="No." }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=[CSY=Moznosti;
                             DAN=Indstillinger;
                             DEU=Optionen;
                             ENU=Options;
                             FIN=Vaihtoehdot;
                             ISL=Valkostir;
                             NLD=Opties;
                             NOR=Alternativer;
                             SVE=Alternativ;
                             ITS=Opzioni;
                             NLB=Opties] }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      Hersteller@1140004 : Record 5720;
      Linien@1140002 : Record 50002;
      Ansprech@1140003 : Record 50005;
      ProjArti@1140011 : Record 50006;
      Kontakt@1140020 : Record 5050;
      Memos@1140014 : Record 50003;
      Aufgaben@1140015 : Record 5080;
      Bemerkung@1140017 : Record 5061;
      Hauptbeteiligter@1140010 : Text[50];
      Filter@1140001 : Text[250];
      vLinientext@1140000 : Text[250];
      projartikeltext@1140012 : Text;
      groesstes_memo_datum@1140016 : Date;
      groesstes_aufgaben_datum@1140019 : Date;
      kleinstes_aufgaben_startdatum@1140018 : Date;
      j@1140005 : Text[30];
      z„hler@1140013 : Integer;
      Excel@1140009 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Book@1140008 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Range@1140007 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Sheet@1140006 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      ReportForNav@5000 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.2.0.0.1189, Version=2.0.0.1189, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF COPYSTR(LOWERCASE(GETURL(CLIENTTYPE::Current, COMPANYNAME, OBJECTTYPE::Codeunit, 1)), 1, 14) = 'dynamicsnav://' THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnPostSection@50013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5008(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5007();
    BEGIN
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5008(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
    BEGIN
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      DOWNLOADFROMSTREAM(ServerInStream,'','','',ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5009(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    EVENT Sheet@1140006::SelectionChange@1543(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1140006::BeforeDoubleClick@1537(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140006::BeforeRightClick@1534(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140006::Activate@304();
    BEGIN
    END;

    EVENT Sheet@1140006::Deactivate@1530();
    BEGIN
    END;

    EVENT Sheet@1140006::Calculate@279();
    BEGIN
    END;

    EVENT Sheet@1140006::Change@1545(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1140006::FollowHyperlink@1470(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Sheet@1140006::PivotTableUpdate@2156(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140008::Open@1923();
    BEGIN
    END;

    EVENT Book@1140008::Activate@304();
    BEGIN
    END;

    EVENT Book@1140008::Deactivate@1530();
    BEGIN
    END;

    EVENT Book@1140008::BeforeClose@1546(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::BeforeSave@1547(SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::BeforePrint@1549(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::NewSheet@1550(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140008::AddinInstall@1552();
    BEGIN
    END;

    EVENT Book@1140008::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Book@1140008::WindowResize@1554(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1140008::WindowActivate@1556(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1140008::WindowDeactivate@1557(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1140008::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1140008::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140008::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140008::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140008::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1140008::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Book@1140008::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140008::PivotTableCloseConnection@2158(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140008::PivotTableOpenConnection@2159(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140008::Sync@2266(SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140008::BeforeXmlImport@2283(Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::AfterXmlImport@2285(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140008::BeforeXmlExport@2287(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140008::AfterXmlExport@2288(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140008::RowsetComplete@2610(Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::NewWorkbook@1565(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140009::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1140009::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140009::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140009::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140009::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookOpen@1567(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookActivate@1568(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookDeactivate@1569(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookBeforeClose@1570(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookBeforeSave@1571(Wb@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookBeforePrint@1572(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookNewSheet@1573(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookAddinInstall@1574(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookAddinUninstall@1575(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140009::WindowResize@1554(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1140009::WindowActivate@1556(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1140009::WindowDeactivate@1557(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1140009::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Excel@1140009::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookPivotTableCloseConnection@2160(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookPivotTableOpenConnection@2161(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookSync@2289(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookBeforeXmlImport@2290(Wb@1140004 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookAfterXmlImport@2291(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookBeforeXmlExport@2292(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookAfterXmlExport@2293(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140009::WorkbookRowsetComplete@2611(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.6:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140009::AfterCalculate@2612();
    BEGIN
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <AutoRefresh>0</AutoRefresh>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
      <rd:SecurityType>None</rd:SecurityType>
      <rd:DataSourceID>4acdbad9-62ae-439d-bc10-3c029816db74</rd:DataSourceID>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
        <Style />
      </Body>
      <Width>6.5in</Width>
      <Page>
        <Style />
      </Page>
    </ReportSection>
  </ReportSections>
  <rd:ReportUnitType>Invalid</rd:ReportUnitType>
  <rd:ReportID>52f2fc44-8780-4c47-801a-3f04c9482692</rd:ReportID>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="TODAY">
          <DataField>TODAY</DataField>
        </Field>
        <Field Name="Filter">
          <DataField>Filter</DataField>
        </Field>
        <Field Name="Hauptbeteiligter">
          <DataField>Hauptbeteiligter</DataField>
        </Field>
        <Field Name="CampaignGebietscode">
          <DataField>CampaignGebietscode</DataField>
        </Field>
        <Field Name="BetreuerInnendienst_Campaign">
          <DataField>BetreuerInnendienst_Campaign</DataField>
        </Field>
        <Field Name="SalespersonCode_Campaign">
          <DataField>SalespersonCode_Campaign</DataField>
        </Field>
        <Field Name="Projektwert_Campaign">
          <DataField>Projektwert_Campaign</DataField>
        </Field>
        <Field Name="Projektwert_CampaignFormat">
          <DataField>Projektwert_CampaignFormat</DataField>
        </Field>
        <Field Name="Projektvolumen_Campaign">
          <DataField>Projektvolumen_Campaign</DataField>
        </Field>
        <Field Name="Projektvolumen_CampaignFormat">
          <DataField>Projektvolumen_CampaignFormat</DataField>
        </Field>
        <Field Name="Projektklasse_Campaign">
          <DataField>Projektklasse_Campaign</DataField>
        </Field>
        <Field Name="Projektstatus_Campaign">
          <DataField>Projektstatus_Campaign</DataField>
        </Field>
        <Field Name="Description_Campaign">
          <DataField>Description_Campaign</DataField>
        </Field>
        <Field Name="No_Campaign">
          <DataField>No_Campaign</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

