OBJECT Report 50159 TOPAS Auftrags Deckblatt
{
  OBJECT-PROPERTIES
  {
    Date=19.04.24;
    Time=11:36:10;
    Modified=Yes;
    Version List=FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=FILTER(Order|Blanket Order));
               OnAfterGetRecord=BEGIN
                                  Zustellcode := '';
                                  n„chst_lief_datum := '';
                                  SOR_Hinweis := '';
                                  VersandBdg := '';

                                  // Datum fr n„chste Lieferung bestimmen
                                  SalesLine.RESET;
                                  SalesLine.SETFILTER("Document No.",'%1',"Sales Header"."No.");
                                  SalesLine.SETFILTER(Type,'%1',SalesLine.Type::Item);
                                  SalesLine.SETFILTER("Outstanding Quantity",'>%1',0);
                                  SalesLine.SETCURRENTKEY("Document Type",Type,"Promised Delivery Date");
                                  IF (SalesLine.FINDFIRST) AND (SalesLine."Promised Delivery Date" <> 0D) THEN BEGIN
                                    n„chst_lief_datum := FORMAT(SalesLine."Promised Delivery Date");
                                    IF SalesLine."Promised Delivery Date" = (31122053D) THEN BEGIN
                                      n„chst_lief_datum := 'Auf Abruf';
                                    END;
                                    IF SalesLine.FINDLAST THEN BEGIN
                                      IF SalesLine."Promised Delivery Date" = (31122055D) THEN BEGIN
                                        IF (n„chst_lief_datum <> '') AND (STRPOS(n„chst_lief_datum,'.') <> 0) THEN
                                          n„chst_lief_datum += ' + Termin folgt'
                                        ELSE
                                          n„chst_lief_datum := 'Termin folgt';
                                      END;
                                    END;
                                  END;

                                  ShippingAgent.RESET;
                                  ShippingAgent.SETRANGE(Code,"Sales Header"."Shipping Agent Code");
                                  IF ShippingAgent.FINDFIRST THEN
                                    Zustellcode := ShippingAgent.Name;

                                  IF STRPOS("Sales Header"."Payment Terms Code",'SOR') <> 0 THEN
                                    SOR_Hinweis := "Sales Header"."Payment Terms Code";

                                  Customer.GET("Sell-to Customer No.");
                                  IF Customer."besondere Versandbedingungen" = TRUE THEN BEGIN
                                    VersandBdg := 'Bitte die besonderen Versandbedingungen fr ' + "Sell-to Customer Name" + ' beachten:\' +
                                                      Customer.Versandbedingungen;
                                  END;
                                END;

               ReqFilterFields=No. }

    { 2   ;1   ;Column  ;Zustellcode         ;
               IncludeCaption=No;
               SourceExpr=Zustellcode }

    { 3   ;1   ;Column  ;nachst_lief_datum   ;
               IncludeCaption=No;
               SourceExpr=n„chst_lief_datum }

    { 4   ;1   ;Column  ;SOR_Hinweis         ;
               IncludeCaption=No;
               SourceExpr=SOR_Hinweis }

    { 1000000001;1;Column;VersandBdg         ;
               IncludeCaption=No;
               SourceExpr=VersandBdg }

    { 5   ;1   ;Column  ;Deckblatt_No        ;
               IncludeCaption=No;
               SourceExpr='Deckblatt ' + "No." }

    { 1000000002;1;Column;ExterneBelegnr     ;
               IncludeCaption=No;
               SourceExpr="External Document No." }

    { 6   ;1   ;Column  ;ShippingAgentCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Shipping Agent Code" }

    { 7   ;1   ;Column  ;ShipmentMethodCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Shipment Method Code" }

    { 8   ;1   ;Column  ;USERID              ;
               IncludeCaption=No;
               SourceExpr=USERID }

    { 9   ;1   ;Column  ;ReportForNavPageNo  ;
               IncludeCaption=No;
               SourceExpr=ReportForNav.PageNo }

    { 10  ;1   ;Column  ;COMPANYNAME         ;
               IncludeCaption=No;
               SourceExpr=COMPANYNAME }

    { 11  ;1   ;Column  ;TODAY_0_4           ;
               IncludeCaption=No;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 1000000009;1;Column;TerritoryCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Territory Code" }

    { 12  ;1   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 13  ;2   ;Column  ;Comment_SalesCommentLine;
               IncludeCaption=No;
               SourceExpr=Comment }

    { 1000000008;2;Column;Date_SalesCommentLine;
               IncludeCaption=No;
               SourceExpr=Date }

    { 14  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.)
                                 WHERE(Type=FILTER(Item|' '),
                                       No.=FILTER(<>''));
               OnAfterGetRecord=BEGIN
                                  Artikelgruppe := '';
                                  IF Item.GET("Sales Line"."No.") THEN
                                    Artikelgruppe := Item.Artikelgruppe;
                                END;

               DataItemLink=Document No.=FIELD(No.) }

    { 1000000005;2;Column;Sell_toCustomerNo_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Sell-to Customer No.") }

    { 1000000003;2;Column;Sell_toCustomerNo_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 1000000006;2;Column;CurrencyFactor_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Currency Factor") }

    { 1000000004;2;Column;CurrencyFactor_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Currency Factor" }

    { 15  ;2   ;Column  ;Ship_toContact_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Contact" }

    { 16  ;2   ;Column  ;Ship_toCountry_RegionCode_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Country/Region Code") }

    { 17  ;2   ;Column  ;Ship_toCountry_RegionCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Country/Region Code" }

    { 18  ;2   ;Column  ;Sell_toCountry_RegionCode_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Sell-to Country/Region Code") }

    { 19  ;2   ;Column  ;Sell_toCountry_RegionCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Country/Region Code" }

    { 20  ;2   ;Column  ;PaymentTermsCode_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Payment Terms Code") }

    { 21  ;2   ;Column  ;PaymentTermsCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Payment Terms Code" }

    { 22  ;2   ;Column  ;Ship_toPostCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Post Code" }

    { 23  ;2   ;Column  ;Ship_toCity_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to City" }

    { 24  ;2   ;Column  ;Sell_toPostCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Post Code" }

    { 25  ;2   ;Column  ;Ship_toName_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Name") }

    { 26  ;2   ;Column  ;Ship_toName_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Name" }

    { 27  ;2   ;Column  ;Ship_toName2_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Name 2") }

    { 28  ;2   ;Column  ;Ship_toName2_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Name 2" }

    { 29  ;2   ;Column  ;Ship_toAddress_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Address") }

    { 30  ;2   ;Column  ;Ship_toAddress_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Address" }

    { 31  ;2   ;Column  ;Ship_toAddress2_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Address 2") }

    { 32  ;2   ;Column  ;Ship_toAddress2_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Address 2" }

    { 33  ;2   ;Column  ;Sell_toAddress2_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Address 2" }

    { 34  ;2   ;Column  ;Sell_toCity_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to City" }

    { 35  ;2   ;Column  ;Sell_toCustomerName2_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer Name 2" }

    { 36  ;2   ;Column  ;Sell_toAddress_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Sell-to Address") }

    { 37  ;2   ;Column  ;Sell_toAddress_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Address" }

    { 38  ;2   ;Column  ;Sell_toCustomerName_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer Name" }

    { 39  ;2   ;Column  ;OrderDate_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Order Date") }

    { 40  ;2   ;Column  ;OrderDate_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Order Date" }

    { 41  ;2   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="Sales Header"."No." }

    { 1000000007;2;Column;CurrencyCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Currency Code" }

    { 42  ;2   ;Column  ;SalesLineFIELDCAPTION_BlanketOrderNo;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("Blanket Order No.") }

    { 43  ;2   ;Column  ;SalesLineFIELDCAPTION_LineNo;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("Line No.") }

    { 44  ;2   ;Column  ;SalesLineFIELDCAPTION_Endkunde;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION(Endkunde) }

    { 45  ;2   ;Column  ;SalesLineFIELDCAPTION_RequestedDeliveryDate;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("Requested Delivery Date") }

    { 46  ;2   ;Column  ;SalesLineFIELDCAPTION_DC_Preis_EKW_;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("DC-Preis (EKW)") }

    { 47  ;2   ;Column  ;SalesLineFIELDCAPTION_Quantity;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION(Quantity) }

    { 48  ;2   ;Column  ;SalesLineFIELDCAPTION_No;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("No.") }

    { 49  ;2   ;Column  ;BlanketOrderNo_SalesLine;
               IncludeCaption=No;
               SourceExpr="Blanket Order No." }

    { 50  ;2   ;Column  ;LineNo_SalesLine    ;
               IncludeCaption=No;
               SourceExpr="Line No." }

    { 1000000000;2;Column;No_SalesLine       ;
               IncludeCaption=No;
               SourceExpr="Artikelnr. 2" }

    { 51  ;2   ;Column  ;Endkunde_SalesLine  ;
               IncludeCaption=No;
               SourceExpr=Endkunde }

    { 52  ;2   ;Column  ;RequestedDeliveryDate_SalesLine;
               IncludeCaption=No;
               SourceExpr="Requested Delivery Date" }

    { 53  ;2   ;Column  ;DC_Preis_EKW_SalesLine;
               IncludeCaption=No;
               SourceExpr="DC-Preis (EKW)" }

    { 54  ;2   ;Column  ;OutstandingQuantity_SalesLine;
               IncludeCaption=No;
               SourceExpr="Outstanding Quantity" }

    { 55  ;2   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr=Description }

    { 1000000010;2;Column;Artikelgruppe_Item ;
               IncludeCaption=No;
               SourceExpr=Artikelgruppe }

    { 56  ;2   ;DataItem;                    ;
               DataItemTable=Table50014;
               DataItemTableView=SORTING(Quotenr.);
               DataItemLink=Quotenr.=FIELD(Quotenr.) }

    { 57  ;3   ;Column  ;Gultigkeitsdatum_Quotedaten_Lbl;
               IncludeCaption=No;
               SourceExpr=Quotedaten.FIELDCAPTION(Gltigkeitsdatum) }

    { 58  ;3   ;Column  ;Gultigkeitsdatum_Quotedaten;
               IncludeCaption=No;
               SourceExpr=Gltigkeitsdatum }

    { 59  ;3   ;Column  ;QuotenrHersteller_Quotedaten_Lbl;
               IncludeCaption=No;
               SourceExpr=Quotedaten.FIELDCAPTION("Quotenr. Hersteller") }

    { 60  ;3   ;Column  ;QuotenrHersteller_Quotedaten;
               IncludeCaption=No;
               SourceExpr="Quotenr. Hersteller" }

    { 61  ;3   ;Column  ;Validationcode_Quotedaten_Lbl;
               IncludeCaption=No;
               SourceExpr=Quotedaten.FIELDCAPTION(Validationcode) }

    { 62  ;3   ;Column  ;Validationcode_Quotedaten;
               IncludeCaption=No;
               SourceExpr=Validationcode }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SalesLine@1000000000 : Record 37;
      ShippingAgent@1000000001 : Record 291;
      Customer@1000000002 : Record 18;
      Item@1000000004 : Record 27;
      FooterPrinted@1140001 : Boolean;
      SOR_Hinweis@1140002 : Text[50];
      VersandBdg@1000000003 : Text;
      n„chst_lief_datum@1140003 : Text[50];
      Zustellcode@1140005 : Text[80];
      Artikelgruppe@1000000005 : Code[20];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body9@1000000005(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput((Artikelgruppe <> '') AND (STRPOS(LOWERCASE(Artikelgruppe),'eval')<> 0));
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header4@1000000004(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
         ReportForNav.ShowOutput(VersandBdg <> '');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput("Sales Header"."Territory Code" <> 'SYSTEM');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header3@1000000003(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        //ReportForNav.ShowOutput("Sales Header"."Territory Code" = 'SYSTEM');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body7@5011(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line".Type = "Sales Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body8@5012(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line"."No." = 'KUNDENINFO') OR ("Sales Line"."No." = 'S-AU-SPARE')
        OR ("Sales Line"."No." = 'S-AN-SPARE') OR ("Sales Line"."No." = 'KONFI'));
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Header1': OnPreSectionSalesHeader_Header1("Sales Header");
          'Header3': OnPreSectionSalesHeader_Header3("Sales Header");
          'Header4': OnPreSectionSalesHeader_Header4("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Body7': OnPreSectionSalesLine_Body7("Sales Line");
          'Body8': OnPreSectionSalesLine_Body8("Sales Line");
          'Body9': OnPreSectionSalesLine_Body9("Sales Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

