OBJECT Report 50159 TOPAS Auftrags Deckblatt
{
  OBJECT-PROPERTIES
  {
    Date=18.10.21;
    Time=09:36:01;
    Modified=Yes;
    Version List=FORNAV6.1.0.2145/2145;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   {;ReportForNav};ReportsForNavInit();
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=FILTER(Order|Blanket Order));
               OnAfterGetRecord=BEGIN
                                  Zustellcode := '';
                                  n„chst_lief_datum := '';
                                  SOR_Hinweis := '';
                                  VersandBdg := '';

                                  // Datum fr n„chste Lieferung bestimmen
                                  SalesLine.RESET;
                                  SalesLine.SETFILTER("Document No.",'%1',"Sales Header"."No.");
                                  SalesLine.SETFILTER(Type,'%1',SalesLine.Type::Item);
                                  SalesLine.SETFILTER("Outstanding Quantity",'>%1',0);
                                  SalesLine.SETCURRENTKEY("Document Type",Type,"Promised Delivery Date");
                                  IF (SalesLine.FINDFIRST) AND (SalesLine."Promised Delivery Date" <> 0D) THEN BEGIN
                                    n„chst_lief_datum := FORMAT(SalesLine."Promised Delivery Date");
                                    IF SalesLine."Promised Delivery Date" = (31122053D) THEN BEGIN
                                      n„chst_lief_datum := 'Auf Abruf';
                                    END;
                                    IF SalesLine.FINDLAST THEN BEGIN
                                      IF SalesLine."Promised Delivery Date" = (31122055D) THEN BEGIN
                                        IF (n„chst_lief_datum <> '') AND (STRPOS(n„chst_lief_datum,'.') <> 0) THEN
                                          n„chst_lief_datum += ' + Termin folgt'
                                        ELSE
                                          n„chst_lief_datum := 'Termin folgt';
                                      END;
                                    END;
                                  END;

                                  ShippingAgent.RESET;
                                  ShippingAgent.SETRANGE(Code,"Sales Header"."Shipping Agent Code");
                                  IF ShippingAgent.FINDFIRST THEN
                                    Zustellcode := ShippingAgent.Name;

                                  IF STRPOS("Sales Header"."Payment Terms Code",'SOR') <> 0 THEN
                                    SOR_Hinweis := "Sales Header"."Payment Terms Code";

                                  Customer.GET("Sell-to Customer No.");
                                  IF Customer."besondere Versandbedingungen" = TRUE THEN BEGIN
                                    VersandBdg := 'Bitte die besonderen Versandbedingungen fr ' + "Sell-to Customer Name" + ' beachten:\' +
                                                      Customer.Versandbedingungen;
                                  END;
                                END;

               ReqFilterFields=No. }

    { 2   ;1   ;Column  ;Zustellcode         ;
               IncludeCaption=No;
               SourceExpr=Zustellcode }

    { 3   ;1   ;Column  ;nachst_lief_datum   ;
               IncludeCaption=No;
               SourceExpr=n„chst_lief_datum }

    { 4   ;1   ;Column  ;SOR_Hinweis         ;
               IncludeCaption=No;
               SourceExpr=SOR_Hinweis }

    { 1000000001;1;Column;VersandBdg         ;
               IncludeCaption=No;
               SourceExpr=VersandBdg }

    { 5   ;1   ;Column  ;Deckblatt_No        ;
               SourceExpr='Deckblatt ' + "No." }

    { 1000000002;1;Column;ExterneBelegnr     ;
               SourceExpr="External Document No." }

    { 6   ;1   ;Column  ;ShippingAgentCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Shipping Agent Code" }

    { 7   ;1   ;Column  ;ShipmentMethodCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Shipment Method Code" }

    { 8   ;1   ;Column  ;USERID              ;
               IncludeCaption=No;
               SourceExpr=USERID }

    { 9   ;1   ;Column  ;ReportForNavPageNo  ;
               IncludeCaption=No;
               SourceExpr=ReportForNav.PageNo }

    { 10  ;1   ;Column  ;COMPANYNAME         ;
               IncludeCaption=No;
               SourceExpr=COMPANYNAME }

    { 11  ;1   ;Column  ;TODAY_0_4           ;
               IncludeCaption=No;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 1000000009;1;Column;TerritoryCode_SalesHeader;
               SourceExpr="Territory Code" }

    { 12  ;1   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 13  ;2   ;Column  ;Comment_SalesCommentLine;
               IncludeCaption=No;
               SourceExpr=Comment }

    { 1000000008;2;Column;Date_SalesCommentLine;
               SourceExpr=Date }

    { 14  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.)
                                 WHERE(Type=FILTER(Item|' '),
                                       No.=FILTER(<>''));
               DataItemLink=Document No.=FIELD(No.) }

    { 1000000005;2;Column;Sell_toCustomerNo_SalesHeader_Lbl;
               SourceExpr="Sales Header".FIELDCAPTION("Sell-to Customer No.") }

    { 1000000003;2;Column;Sell_toCustomerNo_SalesHeader;
               SourceExpr="Sales Header"."Sell-to Customer No." }

    { 1000000006;2;Column;CurrencyFactor_SalesHeader_Lbl;
               SourceExpr="Sales Header".FIELDCAPTION("Currency Factor") }

    { 1000000004;2;Column;CurrencyFactor_SalesHeader;
               SourceExpr="Sales Header"."Currency Factor" }

    { 15  ;2   ;Column  ;Ship_toContact_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Contact" }

    { 16  ;2   ;Column  ;Ship_toCountry_RegionCode_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Country/Region Code") }

    { 17  ;2   ;Column  ;Ship_toCountry_RegionCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Country/Region Code" }

    { 18  ;2   ;Column  ;Sell_toCountry_RegionCode_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Sell-to Country/Region Code") }

    { 19  ;2   ;Column  ;Sell_toCountry_RegionCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Country/Region Code" }

    { 20  ;2   ;Column  ;PaymentTermsCode_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Payment Terms Code") }

    { 21  ;2   ;Column  ;PaymentTermsCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Payment Terms Code" }

    { 22  ;2   ;Column  ;Ship_toPostCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Post Code" }

    { 23  ;2   ;Column  ;Ship_toCity_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to City" }

    { 24  ;2   ;Column  ;Sell_toPostCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Post Code" }

    { 25  ;2   ;Column  ;Ship_toName_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Name") }

    { 26  ;2   ;Column  ;Ship_toName_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Name" }

    { 27  ;2   ;Column  ;Ship_toName2_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Name 2") }

    { 28  ;2   ;Column  ;Ship_toName2_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Name 2" }

    { 29  ;2   ;Column  ;Ship_toAddress_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Address") }

    { 30  ;2   ;Column  ;Ship_toAddress_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Address" }

    { 31  ;2   ;Column  ;Ship_toAddress2_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Address 2") }

    { 32  ;2   ;Column  ;Ship_toAddress2_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Address 2" }

    { 33  ;2   ;Column  ;Sell_toAddress2_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Address 2" }

    { 34  ;2   ;Column  ;Sell_toCity_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to City" }

    { 35  ;2   ;Column  ;Sell_toCustomerName2_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer Name 2" }

    { 36  ;2   ;Column  ;Sell_toAddress_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Sell-to Address") }

    { 37  ;2   ;Column  ;Sell_toAddress_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Address" }

    { 38  ;2   ;Column  ;Sell_toCustomerName_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer Name" }

    { 39  ;2   ;Column  ;OrderDate_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Order Date") }

    { 40  ;2   ;Column  ;OrderDate_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Order Date" }

    { 41  ;2   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="Sales Header"."No." }

    { 1000000007;2;Column;CurrencyCode_SalesHeader;
               SourceExpr="Sales Header"."Currency Code" }

    { 42  ;2   ;Column  ;SalesLineFIELDCAPTION_BlanketOrderNo;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("Blanket Order No.") }

    { 43  ;2   ;Column  ;SalesLineFIELDCAPTION_LineNo;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("Line No.") }

    { 44  ;2   ;Column  ;SalesLineFIELDCAPTION_Endkunde;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION(Endkunde) }

    { 45  ;2   ;Column  ;SalesLineFIELDCAPTION_RequestedDeliveryDate;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("Requested Delivery Date") }

    { 46  ;2   ;Column  ;SalesLineFIELDCAPTION_DC_Preis_EKW_;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("DC-Preis (EKW)") }

    { 47  ;2   ;Column  ;SalesLineFIELDCAPTION_Quantity;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION(Quantity) }

    { 48  ;2   ;Column  ;SalesLineFIELDCAPTION_No;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("No.") }

    { 49  ;2   ;Column  ;BlanketOrderNo_SalesLine;
               IncludeCaption=No;
               SourceExpr="Blanket Order No." }

    { 50  ;2   ;Column  ;LineNo_SalesLine    ;
               IncludeCaption=No;
               SourceExpr="Line No." }

    { 1000000000;2;Column;No_SalesLine       ;
               SourceExpr="Artikelnr. 2" }

    { 51  ;2   ;Column  ;Endkunde_SalesLine  ;
               IncludeCaption=No;
               SourceExpr=Endkunde }

    { 52  ;2   ;Column  ;RequestedDeliveryDate_SalesLine;
               IncludeCaption=No;
               SourceExpr="Requested Delivery Date" }

    { 53  ;2   ;Column  ;DC_Preis_EKW_SalesLine;
               IncludeCaption=No;
               SourceExpr="DC-Preis (EKW)" }

    { 54  ;2   ;Column  ;OutstandingQuantity_SalesLine;
               IncludeCaption=No;
               SourceExpr="Outstanding Quantity" }

    { 55  ;2   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr=Description }

    { 56  ;2   ;DataItem;                    ;
               DataItemTable=Table50014;
               DataItemTableView=SORTING(Quotenr.);
               DataItemLink=Quotenr.=FIELD(Quotenr.) }

    { 57  ;3   ;Column  ;Gultigkeitsdatum_Quotedaten_Lbl;
               IncludeCaption=No;
               SourceExpr=Quotedaten.FIELDCAPTION(Gltigkeitsdatum) }

    { 58  ;3   ;Column  ;Gultigkeitsdatum_Quotedaten;
               IncludeCaption=No;
               SourceExpr=Gltigkeitsdatum }

    { 59  ;3   ;Column  ;QuotenrHersteller_Quotedaten_Lbl;
               IncludeCaption=No;
               SourceExpr=Quotedaten.FIELDCAPTION("Quotenr. Hersteller") }

    { 60  ;3   ;Column  ;QuotenrHersteller_Quotedaten;
               IncludeCaption=No;
               SourceExpr="Quotenr. Hersteller" }

    { 61  ;3   ;Column  ;Validationcode_Quotedaten_Lbl;
               IncludeCaption=No;
               SourceExpr=Quotedaten.FIELDCAPTION(Validationcode) }

    { 62  ;3   ;Column  ;Validationcode_Quotedaten;
               IncludeCaption=No;
               SourceExpr=Validationcode }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SalesLine@1000000000 : Record 37;
      ShippingAgent@1000000001 : Record 291;
      Customer@1000000002 : Record 18;
      FooterPrinted@1140001 : Boolean;
      SOR_Hinweis@1140002 : Text[50];
      VersandBdg@1000000003 : Text;
      n„chst_lief_datum@1140003 : Text[50];
      Zustellcode@1140005 : Text[80];
      ReportForNav@5000 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.6.1.0.2145, Version=6.1.0.2145, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE ReportsForNavInit@5005();
    VAR
      fn@1000000000 : Text;
    BEGIN
      fn := APPLICATIONPATH() + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll';
      IF NOT FILE.EXISTS(APPLICATIONPATH + 'Add-ins\ReportsForNAV_6_1_0_2145\ForNav.Reports.6.1.0.2145.dll') THEN
        ERROR('Please install the ForNAV DLL version 6.1.0.2145 in your service tier Add-ins folder under the file name "%1"', fn);
      ReportForNav := ReportForNav.Report(CurrReport.OBJECTID(), CurrReport.LANGUAGE() ,SERIALNUMBER(), USERID(), COMPANYNAME());
      ReportForNav.Init();
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header4@1000000004(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
         ReportForNav.ShowOutput(VersandBdg <> '');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput("Sales Header"."Territory Code" <> 'SYSTEM');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header3@1000000003(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        //ReportForNav.ShowOutput("Sales Header"."Territory Code" = 'SYSTEM');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body7@5011(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line".Type = "Sales Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body8@5012(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line"."No." = 'KUNDENINFO') OR ("Sales Line"."No." = 'S-AU-SPARE')
        OR ("Sales Line"."No." = 'S-AN-SPARE') OR ("Sales Line"."No." = 'KONFI'));
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        ReportForNav.IsCustomLayout := TRUE;
      END;

      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
      ReportID@1008 : Integer;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      EVALUATE(ReportID, FORMAT(ReportForNav.ReportID));
      IF ReportLayoutSelection.HasCustomLayout(ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Header1': OnPreSectionSalesHeader_Header1("Sales Header");
          'Header3': OnPreSectionSalesHeader_Header3("Sales Header");
          'Header4': OnPreSectionSalesHeader_Header4("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Body7': OnPreSectionSalesLine_Body7("Sales Line");
          'Body8': OnPreSectionSalesLine_Body8("Sales Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview);
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description>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
3Zb+yrI//j8=</Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
</Report>
    END_OF_RDLDATA
  }
}

