OBJECT Report 50159 TOPAS Auftrags Deckblatt
{
  OBJECT-PROPERTIES
  {
    Date=16.05.19;
    Time=11:15:00;
    Modified=Yes;
    Version List=FORNAV3.1.0.1460/1460;
  }
  PROPERTIES
  {
    OnInitReport=BEGIN
                   ;ReportForNav := ReportForNav.Report(CurrReport.OBJECTID,CurrReport.LANGUAGE,SERIALNUMBER,USERID,COMPANYNAME);ReportForNav.Init;
                 END;

    OnPreReport=BEGIN
                  ;ReportForNav.OpenDesigner:=ReportForNavOpenDesigner;IF NOT ReportForNav.Pre THEN CurrReport.QUIT;
                END;

    OnPostReport=BEGIN
                   ;ReportForNav.Post;
                 END;

  }
  DATASET
  {
    { 1   ;    ;DataItem;                    ;
               DataItemTable=Table36;
               DataItemTableView=SORTING(Document Type,No.)
                                 WHERE(Document Type=FILTER(Order|Blanket Order));
               OnAfterGetRecord=BEGIN
                                  Zustellcode := '';
                                  n„chst_lief_datum := '';
                                  SOR_Hinweis := '';
                                  VersandBdg := '';

                                  // Datum fr n„chste Lieferung bestimmen
                                  SalesLine.RESET;
                                  SalesLine.SETFILTER("Document No.",'%1',"Sales Header"."No.");
                                  SalesLine.SETFILTER(Type,'%1',SalesLine.Type::Item);
                                  SalesLine.SETFILTER("Outstanding Quantity",'>%1',0);
                                  SalesLine.SETCURRENTKEY("Document Type",Type,"Promised Delivery Date");
                                  IF (SalesLine.FINDFIRST) AND (SalesLine."Promised Delivery Date" <> 0D) THEN BEGIN
                                    n„chst_lief_datum := FORMAT(SalesLine."Promised Delivery Date");
                                    IF SalesLine."Promised Delivery Date" = (31122053D) THEN BEGIN
                                      n„chst_lief_datum := 'Auf Abruf';
                                    END;
                                    IF SalesLine.FINDLAST THEN BEGIN
                                      IF SalesLine."Promised Delivery Date" = (31122055D) THEN BEGIN
                                        IF (n„chst_lief_datum <> '') AND (STRPOS(n„chst_lief_datum,'.') <> 0) THEN
                                          n„chst_lief_datum += ' + Termin folgt'
                                        ELSE
                                          n„chst_lief_datum := 'Termin folgt';
                                      END;
                                    END;
                                  END;

                                  ShippingAgent.RESET;
                                  ShippingAgent.SETRANGE(Code,"Sales Header"."Shipping Agent Code");
                                  IF ShippingAgent.FINDFIRST THEN
                                    Zustellcode := ShippingAgent.Name;

                                  IF STRPOS("Sales Header"."Payment Terms Code",'SOR') <> 0 THEN
                                    SOR_Hinweis := "Sales Header"."Payment Terms Code";

                                  Customer.GET("Sell-to Customer No.");
                                  IF Customer."besondere Versandbedingungen" = TRUE THEN BEGIN
                                    VersandBdg := 'Bitte die besonderen Versandbedingungen fr ' + "Sell-to Customer Name" + ' beachten:\' +
                                                      Customer."Text Versandbedingungen";
                                  END;
                                END;

               ReqFilterFields=No. }

    { 2   ;1   ;Column  ;Zustellcode         ;
               IncludeCaption=No;
               SourceExpr=Zustellcode }

    { 3   ;1   ;Column  ;nachst_lief_datum   ;
               IncludeCaption=No;
               SourceExpr=n„chst_lief_datum }

    { 4   ;1   ;Column  ;SOR_Hinweis         ;
               IncludeCaption=No;
               SourceExpr=SOR_Hinweis }

    { 1000000001;1;Column;VersandBdg         ;
               IncludeCaption=No;
               SourceExpr=VersandBdg }

    { 5   ;1   ;Column  ;Auftrag_No          ;
               IncludeCaption=No;
               SourceExpr='Auftrag ' + "No." }

    { 6   ;1   ;Column  ;ShippingAgentCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Shipping Agent Code" }

    { 7   ;1   ;Column  ;ShipmentMethodCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Shipment Method Code" }

    { 8   ;1   ;Column  ;USERID              ;
               IncludeCaption=No;
               SourceExpr=USERID }

    { 9   ;1   ;Column  ;ReportForNavPageNo  ;
               IncludeCaption=No;
               SourceExpr=ReportForNav.PageNo }

    { 10  ;1   ;Column  ;COMPANYNAME         ;
               IncludeCaption=No;
               SourceExpr=COMPANYNAME }

    { 11  ;1   ;Column  ;TODAY_0_4           ;
               IncludeCaption=No;
               SourceExpr=FORMAT(TODAY,0,4) }

    { 12  ;1   ;DataItem;                    ;
               DataItemTable=Table44;
               DataItemTableView=SORTING(Document Type,No.,Line No.);
               DataItemLink=Document Type=FIELD(Document Type),
                            No.=FIELD(No.) }

    { 13  ;2   ;Column  ;Comment_SalesCommentLine;
               IncludeCaption=No;
               SourceExpr=Comment }

    { 14  ;1   ;DataItem;                    ;
               DataItemTable=Table37;
               DataItemTableView=SORTING(Document Type,Document No.,Line No.)
                                 WHERE(Type=FILTER(Item|' '),
                                       No.=FILTER(<>''));
               DataItemLink=Document No.=FIELD(No.) }

    { 15  ;2   ;Column  ;Ship_toContact_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Contact" }

    { 16  ;2   ;Column  ;Ship_toCountry_RegionCode_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Country/Region Code") }

    { 17  ;2   ;Column  ;Ship_toCountry_RegionCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Country/Region Code" }

    { 18  ;2   ;Column  ;Sell_toCountry_RegionCode_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Sell-to Country/Region Code") }

    { 19  ;2   ;Column  ;Sell_toCountry_RegionCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Country/Region Code" }

    { 20  ;2   ;Column  ;PaymentTermsCode_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Payment Terms Code") }

    { 21  ;2   ;Column  ;PaymentTermsCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Payment Terms Code" }

    { 22  ;2   ;Column  ;Ship_toPostCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Post Code" }

    { 23  ;2   ;Column  ;Ship_toCity_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to City" }

    { 24  ;2   ;Column  ;Sell_toPostCode_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Post Code" }

    { 25  ;2   ;Column  ;Ship_toName_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Name") }

    { 26  ;2   ;Column  ;Ship_toName_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Name" }

    { 27  ;2   ;Column  ;Ship_toName2_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Name 2") }

    { 28  ;2   ;Column  ;Ship_toName2_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Name 2" }

    { 29  ;2   ;Column  ;Ship_toAddress_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Address") }

    { 30  ;2   ;Column  ;Ship_toAddress_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Address" }

    { 31  ;2   ;Column  ;Ship_toAddress2_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Ship-to Address 2") }

    { 32  ;2   ;Column  ;Ship_toAddress2_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Ship-to Address 2" }

    { 33  ;2   ;Column  ;Sell_toAddress2_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Address 2" }

    { 34  ;2   ;Column  ;Sell_toCity_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to City" }

    { 35  ;2   ;Column  ;Sell_toCustomerName2_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer Name 2" }

    { 36  ;2   ;Column  ;Sell_toAddress_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Sell-to Address") }

    { 37  ;2   ;Column  ;Sell_toAddress_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Address" }

    { 38  ;2   ;Column  ;Sell_toCustomerName_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Sell-to Customer Name" }

    { 39  ;2   ;Column  ;OrderDate_SalesHeader_Lbl;
               IncludeCaption=No;
               SourceExpr="Sales Header".FIELDCAPTION("Order Date") }

    { 40  ;2   ;Column  ;OrderDate_SalesHeader;
               IncludeCaption=No;
               SourceExpr="Sales Header"."Order Date" }

    { 41  ;2   ;Column  ;No_SalesHeader      ;
               IncludeCaption=No;
               SourceExpr="Sales Header"."No." }

    { 42  ;2   ;Column  ;SalesLineFIELDCAPTION_BlanketOrderNo;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("Blanket Order No.") }

    { 43  ;2   ;Column  ;SalesLineFIELDCAPTION_LineNo;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("Line No.") }

    { 44  ;2   ;Column  ;SalesLineFIELDCAPTION_Endkunde;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION(Endkunde) }

    { 45  ;2   ;Column  ;SalesLineFIELDCAPTION_RequestedDeliveryDate;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("Requested Delivery Date") }

    { 46  ;2   ;Column  ;SalesLineFIELDCAPTION_DC_Preis_EKW_;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("DC-Preis (EKW)") }

    { 47  ;2   ;Column  ;SalesLineFIELDCAPTION_Quantity;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION(Quantity) }

    { 48  ;2   ;Column  ;SalesLineFIELDCAPTION_No;
               IncludeCaption=No;
               SourceExpr="Sales Line".FIELDCAPTION("No.") }

    { 49  ;2   ;Column  ;BlanketOrderNo_SalesLine;
               IncludeCaption=No;
               SourceExpr="Blanket Order No." }

    { 50  ;2   ;Column  ;LineNo_SalesLine    ;
               IncludeCaption=No;
               SourceExpr="Line No." }

    { 1000000000;2;Column;No_SalesLine       ;
               IncludeCaption=No;
               SourceExpr="No." }

    { 51  ;2   ;Column  ;Endkunde_SalesLine  ;
               IncludeCaption=No;
               SourceExpr=Endkunde }

    { 52  ;2   ;Column  ;RequestedDeliveryDate_SalesLine;
               IncludeCaption=No;
               SourceExpr="Requested Delivery Date" }

    { 53  ;2   ;Column  ;DC_Preis_EKW_SalesLine;
               IncludeCaption=No;
               SourceExpr="DC-Preis (EKW)" }

    { 54  ;2   ;Column  ;OutstandingQuantity_SalesLine;
               IncludeCaption=No;
               SourceExpr="Outstanding Quantity" }

    { 55  ;2   ;Column  ;Description_SalesLine;
               IncludeCaption=No;
               SourceExpr=Description }

    { 56  ;2   ;DataItem;                    ;
               DataItemTable=Table50014;
               DataItemTableView=SORTING(Quotenr.);
               DataItemLink=Quotenr.=FIELD(Quotenr.) }

    { 57  ;3   ;Column  ;Gultigkeitsdatum_Quotedaten_Lbl;
               IncludeCaption=No;
               SourceExpr=Quotedaten.FIELDCAPTION(Gltigkeitsdatum) }

    { 58  ;3   ;Column  ;Gultigkeitsdatum_Quotedaten;
               IncludeCaption=No;
               SourceExpr=Gltigkeitsdatum }

    { 59  ;3   ;Column  ;QuotenrHersteller_Quotedaten_Lbl;
               IncludeCaption=No;
               SourceExpr=Quotedaten.FIELDCAPTION("Quotenr. Hersteller") }

    { 60  ;3   ;Column  ;QuotenrHersteller_Quotedaten;
               IncludeCaption=No;
               SourceExpr="Quotenr. Hersteller" }

    { 61  ;3   ;Column  ;Validationcode_Quotedaten_Lbl;
               IncludeCaption=No;
               SourceExpr=Quotedaten.FIELDCAPTION(Validationcode) }

    { 62  ;3   ;Column  ;Validationcode_Quotedaten;
               IncludeCaption=No;
               SourceExpr=Validationcode }

  }
  REQUESTPAGE
  {
    PROPERTIES
    {
    }
    CONTROLS
    {
      { 1900000001;0;Container;
                  ContainerType=ContentArea }

      { 1900000002;1;Group  ;
                  CaptionML=ENU=Options }

      { 5000;2   ;Field     ;
                  Name=ForNavOpenDesigner;
                  CaptionML=ENU=Open Designer;
                  SourceExpr=ReportForNavOpenDesigner;
                  Visible=ReportForNavAllowDesign }

    }
  }
  LABELS
  {
  }
  CODE
  {
    VAR
      SalesLine@1000000000 : Record 37;
      ShippingAgent@1000000001 : Record 291;
      Customer@1000000002 : Record 18;
      FooterPrinted@1140001 : Boolean;
      SOR_Hinweis@1140002 : Text[50];
      VersandBdg@1000000003 : Text;
      n„chst_lief_datum@1140003 : Text[50];
      Zustellcode@1140005 : Text[80];
      ReportForNav@5000 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" WITHEVENTS;
      ReportForNavClient@5003 : DotNet "'ForNav.Reports.3.1.0.1460, Version=3.1.0.1460, Culture=neutral, PublicKeyToken=5284c1af2984feb0'.ForNav.Report" RUNONCLIENT;
      ReportForNavDialog@5001 : Dialog;
      ReportForNavOpenDesigner@5002 : Boolean;
      ReportForNavAllowDesign@5004 : Boolean INDATASET;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header4@1000000004(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
         ReportForNav.ShowOutput(VersandBdg <> '');
      END;// Autogenerated by ForNav;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header1@5010(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput("Sales Header"."Territory Code" <> 'SYSTEM');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesHeader_Header3@1000000003(VAR "Sales Header"@1000000000 : Record 36);
    BEGIN
      WITH "Sales Header" DO BEGIN
        ReportForNav.ShowOutput("Sales Header"."Territory Code" = 'SYSTEM');
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body7@5011(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line".Type = "Sales Line".Type::Item));
      END;
    END;

    LOCAL PROCEDURE OnPreSectionSalesLine_Body8@5012(VAR "Sales Line"@1000000000 : Record 37);
    BEGIN
      WITH "Sales Line" DO BEGIN
        ReportForNav.ShowOutput(("Sales Line"."No." = 'KUNDENINFO') OR ("Sales Line"."No." = 'S-AU-SPARE')
        OR ("Sales Line"."No." = 'S-AN-SPARE') OR ("Sales Line"."No." = 'KONFI'));
      END;
    END;

    EVENT ReportForNav@5000::OnInit@5002();
    VAR
      ReportLayoutSelection@1000 : Record 9651;
      CustomReportLayout@1001 : Record 9650;
      CustomLayoutID@1002 : Variant;
      InStream@1004 : InStream;
      EmptyLayout@1003 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";
      ReportForNav.OData := GETURL(CLIENTTYPE::OData, COMPANYNAME, OBJECTTYPE::Page, 7702);
      IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN
        CustomLayoutID := ReportLayoutSelection.GetTempLayoutSelected
      ELSE
        IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN
          CustomLayoutID := ReportLayoutSelection."Custom Report Layout ID";

      IF (FORMAT(CustomLayoutID) <> EmptyLayout) AND CustomReportLayout.GET(CustomLayoutID) THEN BEGIN
        CustomReportLayout.TESTFIELD(Type,CustomReportLayout.Type::RDLC);
        CustomReportLayout.CALCFIELDS(Layout);
        CustomReportLayout.Layout.CREATEINSTREAM(InStream,TEXTENCODING::UTF8);
        ReportForNav.IsCustomLayout := TRUE;
      END ELSE
        REPORT.RDLCLAYOUT(ReportForNav.ReportID,InStream);

      ReportForNav.LoadRdlc(InStream);
      IF ReportForNav.IsWindowsClient THEN BEGIN
        ReportForNav.CheckClientAddIn();
        ReportForNavClient := ReportForNavClient.Report(ReportForNav.Definition);
        ReportForNavAllowDesign := ReportForNavClient.HasDesigner AND NOT ReportForNav.ParameterMode;
      END;
    END;

    EVENT ReportForNav@5000::OnSave@5010(Base64Layout@1000 : Text);
    VAR
      CustomReportLayout@1002 : Record 9650;
      ReportLayoutSelection@1003 : Record 9651;
      LayoutId@1004 : Variant;
      TempBlob@1007 : Record 99008535;
      OutStream@1006 : OutStream;
      Bstr@1005 : BigText;
      EmptyLayout@1001 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      EmptyLayout := FORMAT(ReportLayoutSelection."Custom Report Layout ID");
      LayoutId := ReportLayoutSelection."Custom Report Layout ID";
      IF ReportLayoutSelection.HasCustomLayout(ReportForNav.ReportID) = 1 THEN BEGIN
        IF FORMAT(ReportLayoutSelection.GetTempLayoutSelected) <> EmptyLayout THEN BEGIN
          LayoutId := ReportLayoutSelection.GetTempLayoutSelected;
        END ELSE BEGIN
          IF ReportLayoutSelection.GET(ReportForNav.ReportID, COMPANYNAME) THEN BEGIN
          LayoutId := ReportLayoutSelection."Custom Report Layout ID";
          END;
        END;
      END ELSE BEGIN
        IF CONFIRM('Default custom layout not found. Create one?') THEN;
      END;
      IF FORMAT(LayoutId) <> EmptyLayout THEN BEGIN
        TempBlob.Blob.CREATEOUTSTREAM(OutStream);
        Bstr.ADDTEXT(Base64Layout);
        Bstr.WRITE(OutStream);
        CustomReportLayout.GET(LayoutId);
        CustomReportLayout.ImportLayoutBlob(TempBlob, 'RDL');
      END;
    END;

    EVENT ReportForNav@5000::OnParameters@5008(Parameters@1000 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.Parameters := REPORT.RUNREQUESTPAGE(ReportForNav.ReportID, Parameters);
    END;

    EVENT ReportForNav@5000::OnPreview@5009(Parameters@1000 : Text;FileName@1005 : Text);
    VAR
      PdfFile@1002 : File;
      InStream@1003 : InStream;
      OutStream@1004 : OutStream;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      COMMIT;
      PdfFile.CREATETEMPFILE;
      PdfFile.CREATEOUTSTREAM(OutStream);
      REPORT.SAVEAS(ReportForNav.ReportID, Parameters, REPORTFORMAT::Pdf, OutStream);
      PdfFile.CREATEINSTREAM(InStream);
      ReportForNavClient.ShowDesigner;
      IF ReportForNav.IsValidPdf(PdfFile.NAME) THEN DOWNLOADFROMSTREAM(InStream, '', '', '', FileName);
      PdfFile.CLOSE;
    END;

    EVENT ReportForNav@5000::OnPreSection@5012(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
      CASE DataItemId OF
        'SalesHeader': CASE SectionId OF
          'Header1': OnPreSectionSalesHeader_Header1("Sales Header");
          'Header3': OnPreSectionSalesHeader_Header3("Sales Header");
          'Header4': OnPreSectionSalesHeader_Header4("Sales Header");
        END;
        'SalesLine': CASE SectionId OF
          'Body7': OnPreSectionSalesLine_Body7("Sales Line");
          'Body8': OnPreSectionSalesLine_Body8("Sales Line");
        END;
      END;
    END;

    EVENT ReportForNav@5000::OnPostSection@5013(DataItemId@1000000000 : Text;SectionId@1000000001 : Text);
    BEGIN
    END;

    EVENT ReportForNav@5000::OnClientOperation@5014(Args@1000 : DotNet "'mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Array");
    VAR
      op@1001 : Text;
      FileMgmt@1002 : Codeunit 419;
      Process@1006 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.Process" RUNONCLIENT;
      PathObj@1005 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Path" RUNONCLIENT;
      FileVersionInfo@1003 : DotNet "'System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.Diagnostics.FileVersionInfo" RUNONCLIENT;
      DirectoryHelper@1004 : DotNet "'mscorlib'.System.IO.Directory" RUNONCLIENT;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      op := Args.GetValue(0);
      CASE op OF
        'TempPath': ReportForNav.Result := PathObj.GetTempPath();
        'FileExists': ReportForNav.Result := FileMgmt.ClientFileExists(Args.GetValue(1));
        'DirectoryExists': ReportForNav.Result := FileMgmt.ClientDirectoryExists(Args.GetValue(1));
        'ProcessLocation': ReportForNav.Result := Process.GetCurrentProcess().MainModule.FileName;
        'FileVersion': ReportForNav.Result := FileVersionInfo.GetVersionInfo(Args.GetValue(1)).FileVersion;
        'DeleteFile': FileMgmt.DeleteClientFile(Args.GetValue(1));
        'DeleteDirectory': IF STRLEN(Args.GetValue(1)) > 20 THEN
          IF FileMgmt.ClientDirectoryExists(Args.GetValue(1)) THEN
            DirectoryHelper.Delete(FORMAT(Args.GetValue(1)), TRUE);
      END;
    END;

    EVENT ReportForNav@5000::OnCheckForNavClientVersion@5015();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient := ReportForNavClient.Report();
      IF ReportForNav.MyFileVersion <> ReportForNavClient.MyFileVersion THEN
        ERROR('You have version %1 of the Reports ForNAV assembly here:\\%2\\Please close your NAV client and update it to version %3.',
              ReportForNavClient.MyFileVersion, ReportForNavClient.MyFileName, ReportForNav.MyFileVersion);
    END;

    EVENT ReportForNav@5000::OnSelectPrinter@5006();
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNav.PrinterSettings.PageSettings := ReportForNavClient.SelectPrinter(ReportForNav.PrinterSettings.PrinterName,ReportForNav.PrinterSettings.ShowPrinterDialog,ReportForNav.PrinterSettings.PageSettings);
    END;

    EVENT ReportForNav@5000::OnPrint@5005(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream");
    VAR
      ClientFileName@1000000001 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      ReportForNavClient.Print(ClientFileName);
    END;

    EVENT ReportForNav@5000::OnDesign@5007(Data@1001 : Text);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ReportForNavClient.Data := Data;
      WHILE ReportForNavClient.DesignReport DO BEGIN
        ReportForNav.HandleRequest(ReportForNavClient.GetRequest());
        SLEEP(100);
      END;
    END;

    EVENT ReportForNav@5000::OnView@5003(ClientFileName@1000000000 : Text;Parameters@1000000001 : Text;ServerFileName@1000000002 : Text);
    VAR
      ServerFile@1000000003 : File;
      ServerInStream@1000000004 : InStream;
      Filter@1000000005 : Text;
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      ServerFile.OPEN(ServerFileName);
      ServerFile.CREATEINSTREAM(ServerInStream);
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.pdf' THEN Filter := 'PDF (*.pdf)|*.pdf';
      IF STRLEN(ClientFileName) >= 4 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-3, 4)) = '.doc' THEN Filter := 'Microsoft Word (*.doc)|*.doc';
      IF STRLEN(ClientFileName) >= 5 THEN IF LOWERCASE(COPYSTR(ClientFileName, STRLEN(ClientFileName)-4, 5)) = '.xlsx' THEN Filter := 'Microsoft Excel (*.xlsx)|*.xlsx';
      DOWNLOADFROMSTREAM(ServerInStream,'Export','',Filter,ClientFileName);
    END;

    EVENT ReportForNav@5000::OnMessage@5016(Operation@1000000000 : Text;Parameter@1000000001 : Text;ParameterNo@1000000002 : Integer);
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CASE Operation OF
        'Open'    : ReportForNavDialog.OPEN(Parameter);
        'Update'  : ReportForNavDialog.UPDATE(ParameterNo,Parameter);
        'Close'   : ReportForNavDialog.CLOSE();
        'Message' : MESSAGE(Parameter);
        'Error'   : ERROR(Parameter);
      END;
    END;

    EVENT ReportForNav@5000::OnPrintPreview@5011(InStream@1000000000 : DotNet "'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'.System.IO.Stream";Preview@1000000001 : Boolean);
    VAR
      ClientFileName@1000000002 : Text[255];
    BEGIN
      // This code is created automatically every time Reports ForNAV saves the report.
      // Do not modify this code.
      CurrReport.LANGUAGE := SYSTEM.GLOBALLANGUAGE;
      DOWNLOADFROMSTREAM(InStream, '', '<TEMP>', '', ClientFileName);
      WHILE ReportForNavClient.PrintPreviewDialog(ClientFileName,ReportForNav.PrinterSettings.PrinterName,Preview) DO BEGIN
        ReportForNav.HandlePrintPreviewRequest(ReportForNavClient.GetPrintPreviewRequest());
        SLEEP(100);
      END;
    END;

    BEGIN
    END.
  }
  RDLDATA
  {
    <?xml version="1.0" encoding="utf-8"?>
<Report xmlns:rd="http://schemas.microsoft.com/SQLServer/reporting/reportdesigner" xmlns="http://schemas.microsoft.com/sqlserver/reporting/2010/01/reportdefinition">
  <Description></Description>
  <DataSources>
    <DataSource Name="DataSource">
      <ConnectionProperties>
        <DataProvider>SQL</DataProvider>
        <ConnectString />
      </ConnectionProperties>
    </DataSource>
  </DataSources>
  <ReportSections>
    <ReportSection>
      <Body>
        <Height>2in</Height>
      </Body>
      <Width>6.5in</Width>
      <Page></Page>
    </ReportSection>
  </ReportSections>
  <DataSets>
    <DataSet Name="DataSet_Result">
      <Fields>
        <Field Name="Zustellcode">
          <DataField>Zustellcode</DataField>
        </Field>
        <Field Name="nachst_lief_datum">
          <DataField>nachst_lief_datum</DataField>
        </Field>
        <Field Name="SOR_Hinweis">
          <DataField>SOR_Hinweis</DataField>
        </Field>
        <Field Name="VersandBdg">
          <DataField>VersandBdg</DataField>
        </Field>
        <Field Name="Auftrag_No">
          <DataField>Auftrag_No</DataField>
        </Field>
        <Field Name="ShippingAgentCode_SalesHeader">
          <DataField>ShippingAgentCode_SalesHeader</DataField>
        </Field>
        <Field Name="ShipmentMethodCode_SalesHeader">
          <DataField>ShipmentMethodCode_SalesHeader</DataField>
        </Field>
        <Field Name="USERID">
          <DataField>USERID</DataField>
        </Field>
        <Field Name="ReportForNavPageNo">
          <DataField>ReportForNavPageNo</DataField>
        </Field>
        <Field Name="COMPANYNAME">
          <DataField>COMPANYNAME</DataField>
        </Field>
        <Field Name="TODAY_0_4">
          <DataField>TODAY_0_4</DataField>
        </Field>
        <Field Name="Comment_SalesCommentLine">
          <DataField>Comment_SalesCommentLine</DataField>
        </Field>
        <Field Name="Ship_toContact_SalesHeader">
          <DataField>Ship_toContact_SalesHeader</DataField>
        </Field>
        <Field Name="Ship_toCountry_RegionCode_SalesHeader_Lbl">
          <DataField>Ship_toCountry_RegionCode_SalesHeader_Lbl</DataField>
        </Field>
        <Field Name="Ship_toCountry_RegionCode_SalesHeader">
          <DataField>Ship_toCountry_RegionCode_SalesHeader</DataField>
        </Field>
        <Field Name="Sell_toCountry_RegionCode_SalesHeader_Lbl">
          <DataField>Sell_toCountry_RegionCode_SalesHeader_Lbl</DataField>
        </Field>
        <Field Name="Sell_toCountry_RegionCode_SalesHeader">
          <DataField>Sell_toCountry_RegionCode_SalesHeader</DataField>
        </Field>
        <Field Name="PaymentTermsCode_SalesHeader_Lbl">
          <DataField>PaymentTermsCode_SalesHeader_Lbl</DataField>
        </Field>
        <Field Name="PaymentTermsCode_SalesHeader">
          <DataField>PaymentTermsCode_SalesHeader</DataField>
        </Field>
        <Field Name="Ship_toPostCode_SalesHeader">
          <DataField>Ship_toPostCode_SalesHeader</DataField>
        </Field>
        <Field Name="Ship_toCity_SalesHeader">
          <DataField>Ship_toCity_SalesHeader</DataField>
        </Field>
        <Field Name="Sell_toPostCode_SalesHeader">
          <DataField>Sell_toPostCode_SalesHeader</DataField>
        </Field>
        <Field Name="Ship_toName_SalesHeader_Lbl">
          <DataField>Ship_toName_SalesHeader_Lbl</DataField>
        </Field>
        <Field Name="Ship_toName_SalesHeader">
          <DataField>Ship_toName_SalesHeader</DataField>
        </Field>
        <Field Name="Ship_toName2_SalesHeader_Lbl">
          <DataField>Ship_toName2_SalesHeader_Lbl</DataField>
        </Field>
        <Field Name="Ship_toName2_SalesHeader">
          <DataField>Ship_toName2_SalesHeader</DataField>
        </Field>
        <Field Name="Ship_toAddress_SalesHeader_Lbl">
          <DataField>Ship_toAddress_SalesHeader_Lbl</DataField>
        </Field>
        <Field Name="Ship_toAddress_SalesHeader">
          <DataField>Ship_toAddress_SalesHeader</DataField>
        </Field>
        <Field Name="Ship_toAddress2_SalesHeader_Lbl">
          <DataField>Ship_toAddress2_SalesHeader_Lbl</DataField>
        </Field>
        <Field Name="Ship_toAddress2_SalesHeader">
          <DataField>Ship_toAddress2_SalesHeader</DataField>
        </Field>
        <Field Name="Sell_toAddress2_SalesHeader">
          <DataField>Sell_toAddress2_SalesHeader</DataField>
        </Field>
        <Field Name="Sell_toCity_SalesHeader">
          <DataField>Sell_toCity_SalesHeader</DataField>
        </Field>
        <Field Name="Sell_toCustomerName2_SalesHeader">
          <DataField>Sell_toCustomerName2_SalesHeader</DataField>
        </Field>
        <Field Name="Sell_toAddress_SalesHeader_Lbl">
          <DataField>Sell_toAddress_SalesHeader_Lbl</DataField>
        </Field>
        <Field Name="Sell_toAddress_SalesHeader">
          <DataField>Sell_toAddress_SalesHeader</DataField>
        </Field>
        <Field Name="Sell_toCustomerName_SalesHeader">
          <DataField>Sell_toCustomerName_SalesHeader</DataField>
        </Field>
        <Field Name="OrderDate_SalesHeader_Lbl">
          <DataField>OrderDate_SalesHeader_Lbl</DataField>
        </Field>
        <Field Name="OrderDate_SalesHeader">
          <DataField>OrderDate_SalesHeader</DataField>
        </Field>
        <Field Name="No_SalesHeader">
          <DataField>No_SalesHeader</DataField>
        </Field>
        <Field Name="SalesLineFIELDCAPTION_BlanketOrderNo">
          <DataField>SalesLineFIELDCAPTION_BlanketOrderNo</DataField>
        </Field>
        <Field Name="SalesLineFIELDCAPTION_LineNo">
          <DataField>SalesLineFIELDCAPTION_LineNo</DataField>
        </Field>
        <Field Name="SalesLineFIELDCAPTION_Endkunde">
          <DataField>SalesLineFIELDCAPTION_Endkunde</DataField>
        </Field>
        <Field Name="SalesLineFIELDCAPTION_RequestedDeliveryDate">
          <DataField>SalesLineFIELDCAPTION_RequestedDeliveryDate</DataField>
        </Field>
        <Field Name="SalesLineFIELDCAPTION_DC_Preis_EKW_">
          <DataField>SalesLineFIELDCAPTION_DC_Preis_EKW_</DataField>
        </Field>
        <Field Name="SalesLineFIELDCAPTION_Quantity">
          <DataField>SalesLineFIELDCAPTION_Quantity</DataField>
        </Field>
        <Field Name="SalesLineFIELDCAPTION_No">
          <DataField>SalesLineFIELDCAPTION_No</DataField>
        </Field>
        <Field Name="BlanketOrderNo_SalesLine">
          <DataField>BlanketOrderNo_SalesLine</DataField>
        </Field>
        <Field Name="LineNo_SalesLine">
          <DataField>LineNo_SalesLine</DataField>
        </Field>
        <Field Name="No_SalesLine">
          <DataField>No_SalesLine</DataField>
        </Field>
        <Field Name="Endkunde_SalesLine">
          <DataField>Endkunde_SalesLine</DataField>
        </Field>
        <Field Name="RequestedDeliveryDate_SalesLine">
          <DataField>RequestedDeliveryDate_SalesLine</DataField>
        </Field>
        <Field Name="DC_Preis_EKW_SalesLine">
          <DataField>DC_Preis_EKW_SalesLine</DataField>
        </Field>
        <Field Name="DC_Preis_EKW_SalesLineFormat">
          <DataField>DC_Preis_EKW_SalesLineFormat</DataField>
        </Field>
        <Field Name="OutstandingQuantity_SalesLine">
          <DataField>OutstandingQuantity_SalesLine</DataField>
        </Field>
        <Field Name="OutstandingQuantity_SalesLineFormat">
          <DataField>OutstandingQuantity_SalesLineFormat</DataField>
        </Field>
        <Field Name="Description_SalesLine">
          <DataField>Description_SalesLine</DataField>
        </Field>
        <Field Name="Gultigkeitsdatum_Quotedaten_Lbl">
          <DataField>Gultigkeitsdatum_Quotedaten_Lbl</DataField>
        </Field>
        <Field Name="Gultigkeitsdatum_Quotedaten">
          <DataField>Gultigkeitsdatum_Quotedaten</DataField>
        </Field>
        <Field Name="QuotenrHersteller_Quotedaten_Lbl">
          <DataField>QuotenrHersteller_Quotedaten_Lbl</DataField>
        </Field>
        <Field Name="QuotenrHersteller_Quotedaten">
          <DataField>QuotenrHersteller_Quotedaten</DataField>
        </Field>
        <Field Name="Validationcode_Quotedaten_Lbl">
          <DataField>Validationcode_Quotedaten_Lbl</DataField>
        </Field>
        <Field Name="Validationcode_Quotedaten">
          <DataField>Validationcode_Quotedaten</DataField>
        </Field>
      </Fields>
      <Query>
        <DataSourceName>DataSource</DataSourceName>
        <CommandText />
      </Query>
      <rd:DataSetInfo>
        <rd:DataSetName>DataSet</rd:DataSetName>
        <rd:SchemaPath>Report.xsd</rd:SchemaPath>
        <rd:TableName>Result</rd:TableName>
      </rd:DataSetInfo>
    </DataSet>
  </DataSets>
</Report>
    END_OF_RDLDATA
  }
}

