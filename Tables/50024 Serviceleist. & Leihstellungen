OBJECT Table 50024 Serviceleist. & Leihstellungen
{
  OBJECT-PROPERTIES
  {
    Date=22.01.20;
    Time=17:30:00;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    OnInsert=VAR
               NoSeriesMgt@1140000 : Codeunit 396;
               laufende_nummer@1140001 : Code[20];
               eingabe@1140002 : Code[10];
               ok@1140003 : Boolean;
             BEGIN
               IF (Art = Art::Service) OR (Art = Art::System) THEN
                 ok := EVALUATE(eingabe,'TOPAS-SERV');
               IF Art = Art::Leihstellung THEN
                 ok := EVALUATE(eingabe,'TOPAS-LEIH');
               IF Art = Art::Tempor„r THEN
                 ok := EVALUATE(eingabe,'TOPAS-TEMP');

               laufende_nummer:='';
               NoSeriesMgt.InitSeries(eingabe,eingabe,TODAY,laufende_nummer,eingabe);
               "Lfd. Nr." := laufende_nummer;

               IF Art = Art::Leihstellung THEN BEGIN
                 Belegdatum := WORKDATE;
                 "Geh”rt zu Lfd. Nr." := "Lfd. Nr.";
               END;

               "Angelegt von" := USERID;
               "Angelegt am" := WORKDATE;
             END;

    OnModify=BEGIN
               "Korrigiert von" := USERID;
               "Korrigiert am" := WORKDATE;
             END;

    OnDelete=BEGIN
               IF (Art = Art::Leihstellung) AND ("Leihstellung zurck" = TRUE) THEN
                 IF NOT CONFIRM(Text005,FALSE,"Lfd. Nr.") THEN
                   ERROR('');

               ToDo.RESET;
               ToDo.SETFILTER(Aufgabenart,'LEIHSTELLUNG');
               ToDo.SETFILTER("Belegnr.",'%1',"Lfd. Nr.");
               IF ToDo.FINDFIRST THEN
                 ERROR(Text006,Art,"Lfd. Nr.");

               TopasBemerkungen.RESET;
               TopasBemerkungen.SETCURRENTKEY("Nr.",Art,"Artikelnr.","Zeilennr.");
               TopasBemerkungen.SETRANGE("Nr.","Lfd. Nr.");
               TopasBemerkungen.DELETEALL;
             END;

    OnRename=BEGIN
               IF (Art = Art::Leihstellung) AND ("Nr." <> xRec."Nr.") AND (xRec."Nr." <> '') THEN
                 MESSAGE(Text009,"Lfd. Nr.");
             END;

  }
  FIELDS
  {
    { 1   ;   ;Lfd. Nr.            ;Code20        ;OnValidate=BEGIN
                                                                //IF (Art <> Art::System) AND ("Lfd. Nr." <> xRec."Lfd. Nr.") AND (xRec."Lfd. Nr." <> '') THEN
                                                                //  ERROR(Text000,FIELDCAPTION("Lfd. Nr."));
                                                              END;
                                                               }
    { 2   ;   ;Art                 ;Option        ;OptionString=Service,System,,Leihstellung,,,Tempor„r }
    { 3   ;   ;Belegdatum          ;Date           }
    { 4   ;   ;Nr.                 ;Code20        ;TableRelation=IF (Art=FILTER(Service|System|Tempor„r)) "Sales Shipment Header"
                                                                 ELSE IF (Art=CONST(Leihstellung)) Customer;
                                                   OnValidate=BEGIN
                                                                IF Art = Art::Leihstellung THEN BEGIN
                                                                  IF NOT Debitor.GET("Nr.") THEN
                                                                    ERROR(Text007,Debitor.TABLECAPTION,"Nr.");
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   Description=Debitornr. (Leihstellung) oder Belegnr. bzw. Lieferscheinnr.(Serviceleistung) }
    { 5   ;   ;Artikelnr.          ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                IF Art = Art::Tempor„r THEN BEGIN
                                                                  Artikel.GET("Artikelnr.");
                                                                  IF ((Artikel."Item Tracking Code" = 'DATECODE'))
                                                                  OR (Artikel."Manufacturer Code" <> '59') OR (Artikel."Software Upgrade Protection" = TRUE) THEN
                                                                    ERROR(Text018);
                                                                END;


                                                                IF Item.GET("Artikelnr.") THEN
                                                                  "Artikelnr. 2" := Item."No. 2";

                                                                IF ("Artikelnr." <> '') AND ("SUP Artikelnr." <> '') AND ("Seriennr." <> '') AND (Art = Art::Service)
                                                                AND (Lizenzdatum <> 0D) THEN BEGIN
                                                                  Benutzername := Benutzername_generieren("Artikelnr.","SUP Artikelnr.","Seriennr.","Urspr. Lieferscheinnr.",
                                                                  "Urspr. Lieferscheinzeilennr.");
                                                                  IF Benutzername <> '' THEN
                                                                    Passwort := Passwort_generieren("Artikelnr.",Benutzername,"Seriennr.",Lizenzdatum);
                                                                END;
                                                              END;
                                                               }
    { 6   ;   ;Artikelnr. 2        ;Code40         }
    { 7   ;   ;Seriennr.           ;Code20        ;OnValidate=VAR
                                                                HoleTempLizenzTab@1140000 : Record 50024;
                                                              BEGIN
                                                                IF "Artikelnr." = '' THEN
                                                                  ERROR(Text001,FIELDCAPTION("Artikelnr."));

                                                                IF Art = Art::Leihstellung THEN BEGIN
                                                                  Item.GET("Artikelnr.");
                                                                  Artikelposten.RESET;
                                                                  Artikelposten.SETFILTER("Item No.",'%1',"Artikelnr.");
                                                                  Artikelposten.SETFILTER("Serial No.",'%1',"Seriennr.");
                                                                  Artikelposten.SETFILTER("Remaining Quantity",'>%1',0);
                                                                  IF NOT Artikelposten.FINDFIRST THEN BEGIN
                                                                    IF NOT CONFIRM(Text004,FALSE,FIELDCAPTION("Seriennr."),"Seriennr.") THEN
                                                                      ERROR('');
                                                                  END;
                                                                END;

                                                                IF (Art = Art::Service) AND ("Seriennr." <> '') THEN BEGIN
                                                                    IF Fremderwerb = TRUE THEN BEGIN
                                                                    END ELSE BEGIN
                                                                      Artikelposten.RESET;
                                                                      Artikelposten.SETFILTER("Document Type",'Verkaufslieferung');
                                                                      Artikelposten.SETFILTER("Document No.",'%1',"Urspr. Lieferscheinnr.");
                                                                      Artikelposten.SETFILTER("Document Line No.",'%1',"Urspr. Lieferscheinzeilennr.");
                                                                      //Artikelposten.SETFILTER(Artikelposten."Source No.",'%1',"Debitornr.");
                                                                      Artikelposten.SETFILTER("Item Tracking",'%1',Artikelposten."Item Tracking"::"Serial No.");
                                                                      Artikelposten.SETFILTER("Serial No.",'%1',"Seriennr.");
                                                                      IF NOT Artikelposten.FINDFIRST THEN BEGIN
                                                                        Beleghistorie.RESET;
                                                                        Beleghistorie.SETRANGE(Belegart,Beleghistorie.Belegart::"Sales Shipment");
                                                                        Beleghistorie.SETRANGE("Belegnr.","Urspr. Lieferscheinnr.");
                                                                        Beleghistorie.SETRANGE("Zeilennr.","Urspr. Lieferscheinzeilennr.");
                                                                        IF NOT Beleghistorie.FINDFIRST THEN
                                                                          //Hier muss sp„ter noch eine Abfrage der alten Datecode/Seriennr Tabelle erfolgen, sobald diese bernommen wurden
                                                                          ERROR(Text010,FIELDCAPTION("Seriennr."),"Seriennr.");
                                                                      END;
                                                                    END;
                                                                  IF ("Seriennr." <> xRec."Seriennr.") AND ("Artikelnr." <> '') AND ("SUP Artikelnr." <> '') AND (Lizenzdatum <> 0D) THEN BEGIN
                                                                    Benutzername := Benutzername_generieren("Artikelnr.","SUP Artikelnr.","Seriennr.","Urspr. Lieferscheinnr.",
                                                                    "Urspr. Lieferscheinzeilennr.");
                                                                    Passwort := Passwort_generieren("Artikelnr.",Benutzername,"Seriennr.",Lizenzdatum);
                                                                  END;
                                                                END;

                                                                IF Art = Art::Tempor„r THEN BEGIN
                                                                  HoleTempLizenzTab.RESET;
                                                                  HoleTempLizenzTab.SETFILTER("Lfd. Nr.",'<>%1',"Lfd. Nr.");
                                                                  HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',"Auftragsnr.");
                                                                  HoleTempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',"Auftragszeilennr.");
                                                                  HoleTempLizenzTab.SETFILTER(Art,'%1',Art::Tempor„r);
                                                                  HoleTempLizenzTab.SETFILTER("Seriennr.",'%1',"Seriennr.");
                                                                  IF (HoleTempLizenzTab.FINDFIRST) AND ("Seriennr." <> '') THEN
                                                                    ERROR(Text016,FIELDCAPTION("Seriennr."),"Seriennr.");

                                                                  IF Artikel.GET("Artikelnr.") AND (Artikel."Item Tracking Code" = 'KEINE') THEN
                                                                    ERROR(Text018);

                                                                  IF Artikel.GET("Seriennr.") AND ("Seriennr." <> '') THEN
                                                                    ERROR(Text034);

                                                                  IF Fremderwerb THEN BEGIN

                                                                    //11.04.12 ST - Prfung bei Fremderwerben im gleichen Beleg, ob bei gleicher Seriennr. die Pseudo Referenzen bereinstimmen
                                                                    HoleTempLizenzTab.RESET;
                                                                    HoleTempLizenzTab.SETFILTER("Lfd. Nr.",'<>%1',"Lfd. Nr.");
                                                                    HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',"Auftragsnr.");
                                                                    HoleTempLizenzTab.SETFILTER(Art,'%1',Art::Tempor„r);
                                                                    HoleTempLizenzTab.SETFILTER("Artikelnr.",'%1',"Artikelnr.");
                                                                    HoleTempLizenzTab.SETFILTER("Seriennr.",'%1',"Seriennr.");
                                                                    HoleTempLizenzTab.SETFILTER(Fremderwerb,'%1',TRUE);
                                                                    IF HoleTempLizenzTab.FINDLAST THEN
                                                                      IF (HoleTempLizenzTab."Nr." <> "Nr.") OR (HoleTempLizenzTab."Belegzeilennr." <> "Belegzeilennr.") THEN
                                                                        ERROR(Text026,FIELDCAPTION("Seriennr."),"Seriennr.",HoleTempLizenzTab."Auftragszeilennr.","Auftragszeilennr.",
                                                                        HoleTempLizenzTab."Nr.",HoleTempLizenzTab."Belegzeilennr.");

                                                                    //29.04.13 ST - Prfung bei Fremderwerben, ob bei gleichen Seriennr. die Belegnr. und Belegzeilennr bereinstimmen
                                                                    HoleTempLizenzTab.RESET;
                                                                    HoleTempLizenzTab.SETFILTER("Lfd. Nr.",'<>%1',"Lfd. Nr.");
                                                                    HoleTempLizenzTab.SETFILTER(Art,'%1',Art::System);
                                                                    HoleTempLizenzTab.SETFILTER("Artikelnr.",'%1',"Artikelnr.");
                                                                    HoleTempLizenzTab.SETFILTER("Seriennr.",'%1',"Seriennr.");
                                                                    HoleTempLizenzTab.SETFILTER(Fremderwerb,'%1',TRUE);
                                                                    IF HoleTempLizenzTab.FINDLAST THEN
                                                                      IF (HoleTempLizenzTab."Nr." <> "Nr.") OR (HoleTempLizenzTab."Belegzeilennr." <> "Belegzeilennr.") THEN
                                                                        ERROR(Text028,"Seriennr.",HoleTempLizenzTab."Nr.",HoleTempLizenzTab."Belegzeilennr.",
                                                                              HoleTempLizenzTab."Wartungsvertragsnr.");

                                                                    //07.09.15 ST - Prfung bei Fremderwerben, ob eine Seriennr. auch immer fr die gleiche Artikelnr. verwendet wird
                                                                    HoleTempLizenzTab.RESET;
                                                                    HoleTempLizenzTab.SETFILTER("Lfd. Nr.",'<>%1',"Lfd. Nr.");
                                                                    HoleTempLizenzTab.SETFILTER(Art,'%1',Art::Tempor„r);
                                                                    HoleTempLizenzTab.SETFILTER("Seriennr.",'%1',"Seriennr.");
                                                                    HoleTempLizenzTab.SETFILTER(Fremderwerb,'%1',TRUE);
                                                                    IF HoleTempLizenzTab.FINDFIRST THEN
                                                                      REPEAT
                                                                        IF (HoleTempLizenzTab."Artikelnr." <> "Artikelnr.") AND ("Seriennr." <> '') THEN
                                                                          ERROR(Text075,HoleTempLizenzTab."Artikelnr.",HoleTempLizenzTab."Auftragsnr.",
                                                                                HoleTempLizenzTab."Auftragszeilennr.");
                                                                      UNTIL HoleTempLizenzTab.NEXT = 0;

                                                                  END;

                                                                  //26.04.11 ST - Verl„ngerung muss neu geprft werden, wenn die tempor„r erzeugte Seriennr. abge„ndert wird
                                                                  IF PrfeLizenzVerl„ngerung("SUP Artikelnr.","Nr.","Belegzeilennr.","Seriennr.",'',Fremderwerb,
                                                                  "Dauer Serviceleistung",0,'') <> 0D THEN
                                                                    Verl„ngerung := TRUE
                                                                  ELSE
                                                                    Verl„ngerung := FALSE;

                                                                END;
                                                              END;
                                                               }
    { 8   ;   ;Debitornr.          ;Code20        ;TableRelation=Customer }
    { 9   ;   ;Debitorname         ;Text50        ;FieldClass=Normal }
    { 10  ;   ;Menge               ;Decimal        }
    { 11  ;   ;Lizenzdatum         ;Date          ;OnValidate=BEGIN
                                                                VALIDATE(Gruppierung);
                                                              END;
                                                               }
    { 12  ;   ;Urspr. Buchungsdatum;Date           }
    { 13  ;   ;Service Artikelnr.  ;Code40        ;TableRelation="Service Preistabelle"."Service Artikelnr.";
                                                   ValidateTableRelation=No;
                                                   Description=TOPAS 25.07.11 ST - Neuer ACS Support Artikel (8x5 oder 24x7 oder AHR) }
    { 14  ;   ;Hauptwartungsvertragsnr.;Code20    ;Description=Realisiert die Verbindung der zum AU geh”renden WV's, damit alle WV's die Belegpositionen auflisten k”nnen }
    { 15  ;   ;Service DC          ;Decimal       ;Description=Disti des Champ Artikels zur Buchungszeit }
    { 16  ;   ;Service MSRP        ;Decimal       ;Description=MSRP des Champ Artikels zur Buchungszeit }
    { 17  ;   ;Service W„hrungscode;Code20        ;TableRelation=Currency;
                                                   Description=TOPAS 04.04.13 ST }
    { 18  ;   ;Board ini           ;Code20        ;Description=TOPAS 05.06.13 ST }
    { 19  ;   ;Kontakt             ;Text50        ;Description=TOPAS 17.08.11 ST - Angabe zur Kontaktperson, falls ben”tigt }
    { 20  ;   ;Name 2              ;Text50         }
    { 21  ;   ;Adresse             ;Text50         }
    { 22  ;   ;Adresse 2           ;Text50         }
    { 23  ;   ;PLZ-Code            ;Code20         }
    { 24  ;   ;Ort                 ;Text50         }
    { 25  ;   ;Leihstellung zurck ;Boolean       ;OnValidate=BEGIN
                                                                IF "Leihstellung zurck" = TRUE THEN
                                                                  "Zurck erhalten am" := WORKDATE;
                                                              END;
                                                               }
    { 26  ;   ;Zurck erhalten am  ;Date          ;OnValidate=BEGIN
                                                                IF ("Zurck erhalten am" <> 0D) AND ("Zurck erhalten am" <> xRec."Zurck erhalten am") AND ("Leihstellung zurck" = FALSE) THEN
                                                                  "Leihstellung zurck" := TRUE;
                                                              END;
                                                               }
    { 27  ;   ;Kampagnennr.        ;Code20        ;OnValidate=BEGIN
                                                                //28.04.11 ST
                                                                KontaktDebBez.RESET;
                                                                KontaktDebBez.SETFILTER("Business Relation Code",'DEB');
                                                                KontaktDebBez.SETFILTER("No.","Nr.");
                                                                IF KontaktDebBez.FINDFIRST THEN BEGIN
                                                                  ProjAnsprech.RESET;
                                                                  ProjAnsprech.SETFILTER("Kontaktnr.",'%1',KontaktDebBez."Contact No.");
                                                                  ProjAnsprech.SETFILTER("Kampagnennr.",'%1',"Kampagnennr.");
                                                                  ProjAnsprech.SETFILTER(Projektstatus,'<>%1','BEENDET');
                                                                  IF NOT ProjAnsprech.FINDFIRST THEN
                                                                    ERROR('Kein %1 innerhalb des Filters gefunden.\\Filter: Projektstatus <> %2, ' +
                                                                    'Kontaktnr.: %3, Kampagnennr.: %4',ProjAnsprech.TABLECAPTION,ProjAnsprech.Projektstatus,
                                                                    KontaktDebBez."Contact No.","Kampagnennr.");
                                                                END;
                                                              END;

                                                   OnLookup=BEGIN
                                                              KontaktDebBez.RESET;
                                                              KontaktDebBez.SETFILTER("Business Relation Code",'DEB');
                                                              KontaktDebBez.SETFILTER("No.","Nr.");
                                                              IF KontaktDebBez.FINDFIRST THEN BEGIN
                                                                ProjAnsprech.RESET;
                                                                ProjAnsprech.SETFILTER("Kontaktnr.",KontaktDebBez."Contact No.");
                                                                ProjAnsprech.SETFILTER("Kampagnennr.",'<>%1','');
                                                                ProjAnsprech.SETFILTER(Projektstatus,'<>%1','BEENDET');
                                                                IF ProjAnsprech.FINDFIRST THEN BEGIN
                                                                  Pos:= ('Kontakt Mandantennr.=CONST(' + ProjAnsprech."Kontakt Mandantennr." + '),' +
                                                                                'Kontaktnr.=CONST(' + ProjAnsprech."Kontaktnr." + '),' +
                                                                                'Kampagnennr.=CONST(' + "Kampagnennr." + '),' +
                                                                                'Memonr.=CONST()');
                                                                  ProjAnsprech.SETPOSITION(Pos);
                                                                  IF PAGE.RUNMODAL(50062,ProjAnsprech) = ACTION::LookupOK THEN BEGIN
                                                                    "Kampagnennr." :=  ProjAnsprech."Kampagnennr.";
                                                                      VALIDATE("Kampagnennr.");
                                                                  END;
                                                                END ELSE
                                                                  ERROR(Text008);
                                                              END;
                                                            END;

                                                   CaptionML=DEU=Projektnr. }
    { 28  ;   ;Interne Info        ;Text50         }
    { 30  ;   ;Abw. Ger„te Artikelnr.;Code20      ;TableRelation=Item;
                                                   Description=TOPAS 12.12.12 ST - Abweichende Ger„te Artikelnr., wird haupts„chlich fr Fremderworbene Systeme ben”tigt, da Kunden oft Komponenten ausbauen und diese unter Wartung stellen wollen }
    { 31  ;   ;System Projektinfos ;Text50        ;Description=TOPAS 24.08.11 ST - Fr CHAMPS Zuordnung genutzt, hier Endkunde oder ACS Projekt eintragen, u.a. fr Andruck auf dem WV verwendet }
    { 32  ;   ;SUP Artikelnr.      ;Code20        ;TableRelation=Item;
                                                   OnValidate=BEGIN
                                                                VALIDATE(Gruppierung);
                                                              END;
                                                               }
    { 33  ;   ;Auftragsnr.         ;Code20        ;ValidateTableRelation=No }
    { 34  ;   ;Auftragszeilennr.   ;Integer        }
    { 35  ;   ;Ursprungsland       ;Code4         ;TableRelation=Country/Region.Code }
    { 37  ;   ;Basisger„t          ;Boolean       ;Description=TOPAS 25.08.11 ST - Deklariert das Basisger„t in einem Servicevertrag }
    { 38  ;   ;Benutzername        ;Code40         }
    { 39  ;   ;Passwort            ;Text30         }
    { 40  ;   ;Serviceleistung     ;Code15        ;TableRelation=Optionstabelle.Code WHERE (Tabellen ID=FILTER(50024),
                                                                                            Feld ID=FILTER(40));
                                                   Description=Optionstabelle }
    { 41  ;   ;Belegzeilennr.      ;Integer        }
    { 42  ;   ;Rechnungsnr.        ;Code20        ;TableRelation="Sales Invoice Header" }
    { 43  ;   ;Rechnungszeilennr.  ;Integer        }
    { 44  ;   ;Dauer Serviceleistung;Code20       ;TableRelation=Optionstabelle.Code WHERE (Tabellen ID=FILTER(50024),
                                                                                            Feld ID=FILTER(44));
                                                   OnValidate=BEGIN
                                                                IF Artikel.GET("SUP Artikelnr.") AND (Artikel.Artikelgruppe <> 'CHAMPS_FEE') THEN BEGIN
                                                                  IF Lizenzdatum = 0D THEN
                                                                    ERROR(Text002,FIELDCAPTION(Lizenzdatum));
                                                                  "Ablaufdatum Serviceleistung" := CALCDATE("Dauer Serviceleistung",Lizenzdatum) - 1;
                                                                END;
                                                              END;

                                                   ValidateTableRelation=No;
                                                   Description=Optionstabelle }
    { 45  ;   ;Ablaufdatum Serviceleistung;Date    }
    { 46  ;   ;Geh”rt zu Lfd. Nr.  ;Code20         }
    { 47  ;   ;Wartungsvertragsnr. ;Code20         }
    { 48  ;   ;Fremderwerb         ;Boolean       ;Description=Wenn die Ware anderweitig vom Kunden bezogen wurde }
    { 49  ;   ;Verl„ngerung        ;Boolean        }
    { 50  ;   ;Text1               ;Text80        ;OnLookup=BEGIN
                                                              Standardtext.SETFILTER(Standardtext.Code,'SERV_LEIH*');
                                                              IF Standardtext.FINDFIRST THEN BEGIN
                                                                IF PAGE.RUNMODAL(PAGE::"Standard Text Codes",Standardtext) = ACTION::LookupOK THEN BEGIN
                                                                  Text1 := Standardtext.Description;
                                                                  Text2 := 'leihweise und kostenfrei fr ca. 2 Wochen zum Test:';
                                                                END;
                                                              END;
                                                            END;

                                                   Description=Andrucktext Zeile 1 }
    { 51  ;   ;Text2               ;Text80        ;Description=Andrucktext Zeile 2 }
    { 52  ;   ;Urspr. Lieferscheinnr.;Code20      ;TableRelation="Sales Shipment Header";
                                                   ValidateTableRelation=No }
    { 53  ;   ;Urspr. Lieferscheinzeilennr.;Integer }
    { 54  ;   ;Vormerkung          ;Boolean       ;OnValidate=BEGIN
                                                                IF (Verl„ngerung = TRUE) AND (Vormerkung = TRUE) THEN BEGIN
                                                                  SystemPos.RESET;
                                                                  SystemPos.SETRANGE(Art,SystemPos.Art::Tempor„r);
                                                                  SystemPos.SETRANGE("Auftragsnr.","Auftragsnr.");
                                                                  SystemPos.SETRANGE("Auftragszeilennr.","Auftragszeilennr.");
                                                                  SystemPos.SETRANGE(Vormerkung,TRUE);
                                                                  IF NOT SystemPos.FINDFIRST THEN
                                                                    IF NOT CONFIRM('Sie sind dabei eine Verl„ngerung fr diese Seriennr. abzuschlieáen. Sind Sie sich wirklich sicher?',TRUE) THEN
                                                                      ERROR('');
                                                                END;

                                                                IF (Art = Art::Tempor„r) AND (Fremderwerb = FALSE) AND (Verl„ngerung = FALSE) THEN BEGIN
                                                                  SystemPos.RESET;
                                                                  SystemPos.SETRANGE(Art,SystemPos.Art::System);
                                                                  SystemPos.SETRANGE("Nr.","Nr.");
                                                                  SystemPos.SETRANGE("Seriennr.","Seriennr.");
                                                                  IF NOT SystemPos.FINDFIRST THEN
                                                                    ERROR(Text024,FIELDCAPTION("Seriennr."),"Seriennr.","Nr.");
                                                                END;

                                                                IF (Art = Art::Tempor„r) AND (Vormerkung = TRUE) THEN BEGIN
                                                                  IF (Fremderwerb = TRUE) AND (Verl„ngerung = FALSE) AND (Basisger„t = TRUE) THEN BEGIN
                                                                    TempSystemPos.RESET;
                                                                    TempSystemPos.SETRANGE(Art,TempSystemPos.Art::Tempor„r);
                                                                    TempSystemPos.SETRANGE(Vormerkung,TRUE);
                                                                    TempSystemPos.SETRANGE("Auftragsnr.","Auftragsnr.");
                                                                    TempSystemPos.SETRANGE("Auftragszeilennr.","Auftragszeilennr.");
                                                                    TempSystemPos.SETRANGE(Basisger„t,FALSE);
                                                                    IF TempSystemPos.FIND('-') THEN
                                                                      REPEAT
                                                                        SystemPos.RESET;
                                                                        SystemPos.SETRANGE(Art,SystemPos.Art::System);
                                                                        SystemPos.SETRANGE("Nr.",TempSystemPos."Nr.");
                                                                        SystemPos.SETRANGE("Belegzeilennr.",TempSystemPos."Belegzeilennr.");
                                                                        SystemPos.SETRANGE("Artikelnr.",TempSystemPos."Artikelnr.");
                                                                        SystemPos.SETRANGE("Seriennr.",TempSystemPos."Seriennr.");
                                                                        SystemPos.SETFILTER("Wartungsvertragsnr.",'<>%1','');
                                                                        IF SystemPos.FINDFIRST THEN BEGIN
                                                                          Artikel.GET(SystemPos."Artikelnr.");
                                                                          IF (Artikel.Serviceklassifizierung <> 'SYSTEM FLAT') THEN
                                                                            ERROR(Text027,SystemPos."Lfd. Nr.",SystemPos."Seriennr.",SystemPos."Wartungsvertragsnr.");
                                                                        END;
                                                                      UNTIL TempSystemPos.NEXT = 0;
                                                                  END ELSE BEGIN

                                                                    SystemPos.CheckDoubleSerialNo("Artikelnr.","Seriennr.");

                                                                    SystemPos.RESET;
                                                                    SystemPos.SETRANGE(Art,SystemPos.Art::System);
                                                                    SystemPos.SETRANGE("Nr.","Nr.");
                                                                    SystemPos.SETRANGE("Belegzeilennr.","Belegzeilennr.");
                                                                    SystemPos.SETRANGE("Seriennr.","Seriennr.");
                                                                    SystemPos.SETRANGE(Basisger„t,TRUE);
                                                                    IF SystemPos.FINDFIRST THEN BEGIN
                                                                      IF SystemPos."Wartungsvertragsnr." = '' THEN
                                                                        ERROR(Text031,FIELDCAPTION(Basisger„t),SystemPos."Seriennr.");

                                                                      Artikel.GET("Artikelnr.");
                                                                      IF Artikel.Serviceklassifizierung <> 'SYSTEM FLAT' THEN BEGIN
                                                                        VergleichSystemPos.RESET;
                                                                        VergleichSystemPos.SETRANGE(Art,VergleichSystemPos.Art::System);
                                                                        VergleichSystemPos.SETRANGE(Inaktiv,FALSE);
                                                                        VergleichSystemPos.SETRANGE("Wartungsvertragsnr.",SystemPos."Wartungsvertragsnr.");
                                                                        VergleichSystemPos.SETRANGE(Basisger„t,TRUE);
                                                                        IF (VergleichSystemPos.FINDFIRST) AND (VergleichSystemPos.COUNT > 1) THEN
                                                                          ERROR(Text035,VergleichSystemPos.COUNT);
                                                                      END;
                                                                    END;

                                                                    TempSystemPos.RESET;
                                                                    TempSystemPos.SETRANGE(Art,TempSystemPos.Art::Tempor„r);
                                                                    TempSystemPos.SETRANGE(Vormerkung,TRUE);
                                                                    TempSystemPos.SETRANGE("Auftragsnr.","Auftragsnr.");
                                                                    TempSystemPos.SETRANGE("Auftragszeilennr.","Auftragszeilennr.");
                                                                    IF TempSystemPos.FIND('-') THEN BEGIN
                                                                      SystemPos.RESET;
                                                                      SystemPos.SETRANGE(Art,SystemPos.Art::System);
                                                                      SystemPos.SETRANGE("Nr.","Nr.");
                                                                      SystemPos.SETRANGE("Belegzeilennr.","Belegzeilennr.");
                                                                      SystemPos.SETRANGE("Seriennr.","Seriennr.");
                                                                      IF SystemPos.FINDFIRST THEN BEGIN
                                                                        IF SystemPos.Inaktiv = TRUE THEN
                                                                          ERROR(Text030,FIELDCAPTION("Seriennr."),SystemPos."Wartungsvertragsnr.");
                                                                        REPEAT
                                                                          IF (TempSystemPos.Fremderwerb = TRUE) AND (TempSystemPos.Verl„ngerung = FALSE) THEN BEGIN
                                                                            Artikel.GET(TempSystemPos."Artikelnr.");
                                                                            IF (TempSystemPos.Basisger„t = TRUE) AND (SystemPos."Wartungsvertragsnr." <> '')
                                                                            AND (Artikel.Serviceklassifizierung <> 'SYSTEM FLAT') THEN
                                                                              ERROR(Text027,SystemPos."Lfd. Nr.",SystemPos."Seriennr.",SystemPos."Wartungsvertragsnr.");
                                                                          END ELSE BEGIN
                                                                            VergleichSystemPos.RESET;
                                                                            VergleichSystemPos.SETRANGE(Art,VergleichSystemPos.Art::System);
                                                                            VergleichSystemPos.SETRANGE("Nr.",TempSystemPos."Nr.");
                                                                            VergleichSystemPos.SETRANGE("Belegzeilennr.",TempSystemPos."Belegzeilennr.");
                                                                            VergleichSystemPos.SETRANGE("Seriennr.",TempSystemPos."Seriennr.");
                                                                            VergleichSystemPos.SETRANGE(Inaktiv,FALSE);
                                                                            VergleichSystemPos.FINDFIRST;
                                                                            IF (SystemPos."Wartungsvertragsnr." <> VergleichSystemPos."Wartungsvertragsnr.")
                                                                            AND (SystemPos."Wartungsvertragsnr." <> '') THEN
                                                                              ERROR(Text025,"Seriennr.",SystemPos."Wartungsvertragsnr.",VergleichSystemPos."Wartungsvertragsnr.");
                                                                          END;
                                                                        UNTIL TempSystemPos.NEXT = 0;
                                                                      END;
                                                                    END;
                                                                  END;
                                                                END;
                                                              END;
                                                               }
    { 55  ;   ;Urspr. Auftragsnr.  ;Code20         }
    { 56  ;   ;Urspr. Auftragszeilennr.;Integer    }
    { 57  ;   ;BET-Nr.             ;Code20        ;TableRelation="Purchase Header".No.;
                                                   ValidateTableRelation=No;
                                                   Description=TOPAS 25.07.11 ST }
    { 58  ;   ;BET-Pos.            ;Integer       ;Description=TOPAS 25.07.11 ST }
    { 59  ;   ;ACO Nr.             ;Code20        ;Description=TOPAS 25.07.11 ST }
    { 60  ;   ;Angelegt von        ;Code50         }
    { 61  ;   ;Angelegt am         ;Date           }
    { 62  ;   ;Korrigiert von      ;Code50         }
    { 63  ;   ;Korrigiert am       ;Date           }
    { 64  ;   ;Zu exportieren      ;Boolean       ;Description=TOPAS 18.01.11 ST - Fr Excel Export }
    { 65  ;   ;Exportiert          ;Boolean       ;Description=TOPAS 18.01.11 ST - Fr Excel Export }
    { 66  ;   ;Exportdatum         ;Date          ;Description=TOPAS 18.01.11 ST - Fr Excel Export }
    { 67  ;   ;Zu Versenden        ;Boolean       ;DataClassification=ToBeClassified;
                                                   Description=TOPAS 28.08.18 ST - Fr Batch Lauf }
    { 70  ;   ;Reklamiert          ;Boolean       ;Description=TOPAS 26.01.12 ST - Seriennr. wurde reklamiert }
    { 71  ;   ;RMA-Nr.             ;Code20        ;Description=TOPAS 26.01.12 ST - RMA Vorgang der reklamierten Seriennr. }
    { 73  ;   ;Ersatzverfahren     ;Boolean       ;Description=TOPAS 26.01.12 ST - Kennzeichnet, ob die Position eine andere Position ersetzt oder durch eine andere Position ersetzt wurde oder beides erfllt }
    { 77  ;   ;Ersatz fr Lfd. Nr. ;Code20        ;Description=TOPAS 26.01.12 ST - Lfd. Nr. der ersetzten Position }
    { 80  ;   ;Urspr. Seriennr.    ;Code20        ;Description=TOPAS 26.01.12 ST - Seriennr. der ersetzten Position }
    { 81  ;   ;Product Key         ;Code40        ;Description=TOPAS 08.06.17 ST - Product Key aus dem jeweiligen Artikelposten }
    { 82  ;   ;Seriennr. 2         ;Code40        ;Description=TOPAS 08.06.17 ST - Serial No. 2 aus dem jeweiligen Artikelposten }
    { 83  ;   ;Product Key 2       ;Code40        ;Description=TOPAS 22.06.17 ST - Product Key 2  manuell zu vergeben }
    { 84  ;   ;Maschinen ID        ;Code40        ;Description=TOPAS 22.06.17 ST - Maschinen ID manuell zu vergeben }
    { 85  ;   ;SOR                 ;Boolean       ;Description=TOPAS 08.06.12 ST - Kennzeichung Sale or Return, wenn dies aus dem System Lieferschein hervorgeht, nur fr Art: System }
    { 86  ;   ;SOR Option          ;Code20        ;Description=TOPAS 08.06.12 ST - Enh„lt den Zlg.-Bedingungscode aus dem System Lieferschein, nur fr Art: System }
    { 90  ;   ;Quotenr.            ;Code10        ;TableRelation=Quotedaten WHERE (Herstellercode=FILTER(57|5710|5720));
                                                   Description=TOPAS 20.01.16 ST - Bessere Konditionen fr ACTS in Verbindung Managed Spare Service }
    { 91  ;   ;Service bereits bestellt;Boolean   ;Description=TOPAS 29.06.16 ST - Gleicht anhand des Feldes aus der Auftragsposition ab, ob der Service bereits bestellt wurde (ACTS) }
    { 92  ;   ;Eingangs BET        ;Code20        ;Description=TOPAS 08.06.17 ST - Gibt an, mit welcher Eingangsbestellung zugebucht wurde }
    { 98  ;   ;Zum Verschieben markieren;Boolean   }
    { 99  ;   ;Inaktiv             ;Boolean       ;OnValidate=BEGIN
                                                                IF ("RMA-Nr." <> '') AND (Inaktiv = FALSE) THEN
                                                                  ERROR(Text076);
                                                              END;

                                                   Description=TOPAS 29.08.11 ST }
    { 100 ;   ;Gruppierung         ;Text50        ;OnValidate=BEGIN
                                                                IF ("SUP Artikelnr." <> '') AND (Lizenzdatum <> 0D) THEN
                                                                  Gruppierung := FORMAT(DATE2DMY(Lizenzdatum,3)) + '_' + FORMAT(DATE2DMY(Lizenzdatum,2)) + '_' + FORMAT(DATE2DMY(Lizenzdatum,1))
                                                                                 + '_' + FORMAT(DATE2DMY(Lizenzdatum,1)) + '_' + "SUP Artikelnr.";
                                                              END;

                                                   Description=TOPAS 26.07.11 ST - Fr Andruckssteuerung genutzt }
  }
  KEYS
  {
    {    ;Lfd. Nr.,Art,Nr.                        ;Clustered=Yes }
    {    ;Art,Zurck erhalten am,Nr.,Artikelnr.    }
    {    ;Art,Nr.,Serviceleistung                  }
    {    ;Art,Debitornr.,Wartungsvertragsnr.,Nr.,Belegzeilennr. }
    {    ;Service Artikelnr.,Debitornr.            }
    {    ;Wartungsvertragsnr.,Service Artikelnr.   }
    {    ;Gruppierung,Basisger„t                   }
    {    ;Gruppierung,Nr.,Belegzeilennr.           }
    {    ;Art,Leihstellung zurck,Artikelnr.      ;SumIndexFields=Menge }
    {    ;Wartungsvertragsnr.,Nr.,Belegzeilennr.   }
    {    ;Ablaufdatum Serviceleistung,SUP Artikelnr.,Gruppierung }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Artikelposten@1140000 : Record 32;
      Artikel@1140034 : Record 27;
      Debitor@1140042 : Record 18;
      Wertposten@1140001 : Record 5802;
      Beleghistorie@1000000004 : Record 50008;
      Cust@1140002 : Record 18;
      ToDo@1140003 : Record 5080;
      TopasBemerkungen@1140004 : Record 50023;
      Item@1140005 : Record 27;
      ProjAnsprech@1140006 : Record 50005;
      KontaktDebBez@1140007 : Record 5054;
      Text000@1140017 : TextConst 'DEU=Sie k”nnen die %1 nicht mehr „ndern.';
      Text001@1140012 : TextConst 'DEU=Sie mssen zuerst die %1 eingeben.';
      Text002@1140026 : TextConst 'DEU=Sie mssen zuerst das %1 eingeben.';
      Text003@1140011 : TextConst 'DEU=Es wurden Seriennr. zu diesem Beleg gefunden. Wollen Sie diese automatisch anlegen lassen?';
      Text004@1140014 : TextConst 'DEU=%1 %2 konnte nicht gefunden werden, trotzdem anlegen?';
      Text005@1140021 : TextConst 'DEU=Wollen Sie die abgeschlossene Leihstellung %1 wirklich l”schen?';
      Text006@1140009 : TextConst 'DEU=Sie k”nnen %1 %2 nicht l”schen, da noch eine Aufgabe (oder mehrere) vorhanden ist.';
      Text007@1140013 : TextConst 'DEU=%1 %2 konnte nicht gefunden werden.';
      DruckeWartung@1140031 : Record 50011;
      SystemPos@1140018 : Record 50024;
      VergleichSystemPos@1140040 : Record 50024;
      TempSystemPos@1140039 : Record 50024;
      Standardtext@1140010 : Record 7;
      ItemLedgerEntryVK@1000000003 : Record 32;
      ItemLedgerEntryEK@1000000002 : Record 32;
      ItemAppEntry@1000000001 : Record 339;
      PurchShipHeader@1000000000 : Record 120;
      TOPAS_API@1140060 : Codeunit 50001;
      Pos@1140015 : Text[250];
      Text008@1140008 : TextConst 'DEU=Es konnten keine Projekte zu diesem Debitor gefunden werden.';
      Text009@1140020 : TextConst 'DEU=Bitte fhren Sie die Funktion Adresse holen fr %1 erneut aus und vervollst„ndigen Sie die Adresse manuell.';
      Text010@1140022 : TextConst 'DEU=%1 %2 konnte nicht in den Artikelverfolgungsposten gefunden werden.';
      Text011@1140024 : TextConst 'DEU=M”chten Sie alle Positionen zu %1 %2 umstellen?';
      Text012@1140016 : TextConst 'DEU=Lieferscheinnr. oder Zeilennr. darf nicht leer sein.';
      Text013@1140019 : TextConst 'DEU=Menge darf nicht 0 sein.';
      Text014@1140027 : TextConst 'DEU=Die Anzahl der Lizenzen bersteigt die tats„chlich zur Verfgung stehenden Seriennr.';
      Text015@1140028 : TextConst 'DEU=Zu Lieferscheinnr. %1 Zeilennr. %2 konnten keine Seriennr. gefunden werden.\šberprfen Sie, ob dieser Beleg tats„chlich unter diesem Konto gebucht wurde.';
      Text016@1140030 : TextConst 'DEU=%1 %2 ist bereits vorhanden.';
      Text017@1140032 : TextConst 'DEU=Es wurden Zuordnungen aus einem anderen Lieferschein gefunden. Wollen Sie diese jetzt l”schen und neu berechnen lassen oder tragen Sie im Feld %1 den ursprngl. Wert %2, Zeilennr. %3 ein.';
      Text018@1140033 : TextConst 'DEU=Eine der Grnde warum die Aktion fehlschlug: \\- Artikelverfolgungscode des Artikels lautet nicht auf Seriennr.\- Artikel ist mit "Software Upgrade Protection" gekennzeichnet\- Artikel ist kein AudioCodes Systemartikel';
      Text019@1140035 : TextConst 'DEU=ACHTUNG!\\Fr Artikelnr. %1, Zeilennr. %2 konnte kein alleinstehendes ACS Basisger„t oder ein verbundener Service Artikel im Auftrag gefunden werden. Bitte w„hlen Sie dazu in der folgenden šbersicht einen entsprechenden System- bzw. Wartungsvertrag aus. Wenn Sie sich nicht sicher sind drcken Sie im Anschluss auf Abbrechen, der Vorgang kann ber den Lieferschein erneut ausgefhrt werden.\\Hilfestellung %3: %4';
      Text020@1140036 : TextConst 'DEU=Systemvertragserstellung fr Artikelnr. %1, Zeilennr. %2 auf Wunsch abgebrochen.';
      Text021@1140037 : TextConst 'DEU=Die Systemposition %1, Artikel %2, Zeilennr. %3 konnte keinem Systemvertrag zugeordnet werden. \Bitte wenden Sie sich an den Administrator.';
      Text022@1140038 : TextConst 'DEU=HOPPLA, hier ist etwas schief gegangen!!!\ \Fr Champ Artikel %1, Zeilennr. %2 konnte kein entsprechender  System- bzw. Wartungsvertrag gefunden werden.  Bitte wenden Sie sich an den Administrator.';
      Text023@1140029 : TextConst 'DEU=Anzeige von System- bzw. Wartungsvertr„gen nicht m”glich, da noch keine zu diesem Debitorkonto existieren.';
      Text024@1140025 : TextConst 'DEU=Die Vorbelegung fr %1 %2 ist noch nicht m”glich. Dies ist vermutlich auf Altdatenbest„nde zurckzufhren. \Bitte erstellen Sie zuerst einen Systemvertrag fr %3 oder verbinden Sie diese Position mit einem bereits vorhandenen Systemvertrag. \Es kann aber auch sein, dass  diese %1 unter der %3 wieder gutgeschrieben wurde.';
      Text025@1140023 : TextConst 'DEU=Die Vorbelegung fr Seriennr. %1 ist noch nicht m”glich, da eine oder mehr Seriennummern in verschiedenen System- bzw. Wartungsvertr„gen stehen.\Hinweis: Die Positionen stehen teilweise in den Wartungsvertr„gen %2 und %3.';
      Text026@1140041 : TextConst 'DEU=Die %1 %2 wird bereits fr ein fremderworbenes System in der Kalkulation in Zeile %3 verwendet. Bitte passen Sie in der Kalkulation in Zeile %4 die Belegnr. auf %5 und Belegzeilennr. auf %6 an oder l”schen Sie die Kalkulation und fhren die Funktion Fremderwerb erneut aus.';
      Text027@1140043 : TextConst 'DEU=Bitte entfernen Sie die Systemposition %1 (Seriennr. %2) aus dem Wartungsvertrag %3. Fr die Zuordnung zu fremderworbenen Basisger„ten drfen diese Positionen keine Wartungsvertragnr. besitzen. Die Zuordnung erfolgt dann sp„ter automatisch zum neu erstellten Wartungsvertrag.';
      Text028@1140044 : TextConst 'DEU=Die Pseudo Seriennr. %1 wird bereits fr Pseudo Belegnr. %2, Zeilennr. %3 verwendet (Wartungsvertrag %4). Bitte verwenden Sie die gleichen Belegdaten fr Ihre Kalkulation und versuchen es dann erneut.';
      Text029@1140045 : TextConst 'DEU=Hinweis: M”glicherweise wurden eine oder mehrere Positionen nicht dem richtigen Wartungsvertrag zugeordnet (Kalkulation %1, Zeile %2).\\Bitte lassen Sie den Wartungsvertag %3 auf Vollst„ndigkeit berprfen.';
      Text030@1140046 : TextConst 'DEU=Diese %1 wurde im System- bzw. Wartungsvertrag %2 als inaktiv gekennzeichnet und kann nicht verwendet werden, solange die Inaktivit„t weiterhin bestehen bleibt.';
      Text031@1140048 : TextConst 'DEU=Ein %1 (SN: %2) muss eine Wartungsvertragnr. besitzen, bevor weitere Aktionen m”glich sind.';
      Text032@1140047 : TextConst 'DEU=Die Seriennr. %1 darf nicht in mehr als einem Vertrag gleichzeitig stehen. Bitte setzen Sie s„mtliche System- als auch Servicepositionen in einen der Wartungsvertr„ge \%2 oder %3 auf inaktiv.';
      Text033@1140049 : TextConst 'DEU=Ausnahmefehler: \\Es konnte keine Seriennr. Zuordnung fr die Service Buchung gefunden werden, obwohl es eine Ankndigung dafr gab. \Der Vorgang wird abgebrochen. Bitte wenden Sie sich an den Administrator.';
      Text034@1140056 : TextConst 'DEU=Sie k”nnen hier keine Artikelnr. eingeben.';
      Text035@1140057 : TextConst 'DEU=Bitte verteilen Sie zun„chst die %1 Basissysteme in verschiedene Systemvertr„ge auf, bevor Sie mit der Vorbelegung weiterverfahren k”nnen.';
      Text036@1000000006 : TextConst 'DEU=Achtung: In ein oder mehreren Zeilen wurde der %1 automatisch angepasst, da die Angaben im Wartungsvertrag gegenber der urspr. Buchung abweichen sind. Bitte berprfen Sie die Angaben.';
      Text070@1140054 : TextConst 'DEU=M”chten Sie wirklich mit dem Verschieben von Systempositionen beginnen?';
      Text071@1140053 : TextConst 'DEU=Die Verschiebung von Basisger„ten ist derzeit nicht gestattet.';
      Text072@1140052 : TextConst 'DEU=Fr Seriennr. %1 konnte das Feld %2 nicht gefllt werden, da im neu zugewiesenen Systemvertrag kein aktives Basisger„t gefunden werden konnte.';
      Text073@1140051 : TextConst 'DEU=Seriennr. %1 wurde erfolgreich in Systemvertrag %2 berfhrt.';
      Text074@1140050 : TextConst 'DEU=Die Seriennr. wurde in ein oder mehreren Kalkulationen vorgemerkt. Sie mssen diese Vorbelegungen l”sen, damit die Position verschoben werden kann. \M”chten Sie diese Aktion jetzt durchfhren lassen?';
      Text075@1140055 : TextConst 'DEU=Die Seriennr. wurde bereits fr eine andere Artikelnr. %1 in der Kalkulation %2, Zeile %3 hinterlegt. Bitte vergewissern Sie sich, dass Sie die richtige Artikelnr. bzw. Seriennr. verwenden.';
      Text076@1140058 : TextConst 'DEU=Es kann keine durch eine RMA ersetzte Position reaktiviert werden.';
      Text077@1140059 : TextConst 'DEU=M”chten Sie wirklich alle Positionen vormerken lassen?';

    PROCEDURE Adresse_holen@1140015();
    BEGIN
      IF Art = Art::Leihstellung THEN BEGIN
        IF "Artikelnr." = '' THEN
          ERROR(Text001,FIELDCAPTION("Artikelnr."));
        IF Cust.GET("Nr.") THEN BEGIN
          "Debitornr." := Cust."No.";
          Debitorname := Cust.Name;
          "Name 2" := Cust."Name 2";
          Adresse := Cust.Address;
          "Adresse 2" := Cust."Address 2";
          Ort := Cust.City;
          "PLZ-Code" := Cust."Post Code";
          MODIFY(TRUE);
        END;
      END;
    END;

    PROCEDURE CreateToDo@1140001();
    VAR
      TempToDo@1140000 : TEMPORARY Record 5080;
    BEGIN
      TempToDo.CreateToDoFromLeihstellung(Rec);
    END;

    PROCEDURE Passwort_generieren@1140002(Artikelnr@1140001 : Code[20];Benutzer@1140010 : Code[40];Seriennr@1140002 : Code[20];Datum@1140000 : Date) Passwort : Text[30];
    VAR
      LizenzTab@1140008 : Record 50024;
      part@1140004 : ARRAY [3] OF Text[30];
      temp_array@1140005 : ARRAY [3] OF Text[30];
      passwort_ok@1140009 : Boolean;
      zufall@1140011 : Integer;
      i@1140003 : Integer;
    BEGIN
      IF Benutzer = '' THEN
        EXIT('');

      Artikel.GET(Artikelnr);

      LizenzTab.RESET;
      LizenzTab.SETFILTER(Art,'%1',LizenzTab.Art::Service);
      LizenzTab.SETFILTER("Artikelnr.",'%1',Artikelnr);
      LizenzTab.SETFILTER("Seriennr.",'%1',Seriennr);
      LizenzTab.SETFILTER(Benutzername,'%1',Benutzer);
      LizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
      IF LizenzTab.FINDFIRST THEN
        EXIT(LizenzTab.Passwort);

      //1. Artikelnr. 3, 2. Seriennr., 3. Buchungsdatum - je 3 zuf„llige Zeichen
      passwort_ok := FALSE;

      REPEAT
        part[1] := '';
        part[2] := '';
        part[3] := '';

        FOR i:= 1 TO 3 DO BEGIN
          part[1] := part[1] + LOWERCASE(COPYSTR(DELCHR(Artikelnr,'=','.,;á-\/()[]ï:<>øõ '),
          RANDOM(STRLEN(DELCHR(Artikelnr,'=','.,;á-\/()[]ï:<>øõ '))),1));
          part[2] := part[2] + LOWERCASE(COPYSTR(DELCHR(Benutzer,'=','.,;á-\/()[]ï:<>øõ '),
          RANDOM(STRLEN(DELCHR(Seriennr,'=','.,;á-\/()[]ï:<>øõ '))),1));
          part[3] := part[3] + LOWERCASE(COPYSTR(DELCHR(FORMAT(Datum),'=','.,;á-\/()[]ï:<>øõ '),
          RANDOM(STRLEN(DELCHR(FORMAT(Datum),'=','.,;á-\/()[]ï:<>øõ '))),1));
        END;

        RANDOMIZE;
        zufall := RANDOM(9);

        CASE zufall OF

        1..3:
          BEGIN
            temp_array[1] := part[1];
            temp_array[2] := part[2];
            temp_array[3] := part[3];
          END;

        4..6:
          BEGIN
            temp_array[1] := part[2];
            temp_array[2] := part[3];
            temp_array[3] := part[1];
          END;

        7..9:
          BEGIN
            temp_array[1] := part[3];
            temp_array[2] := part[1];
            temp_array[3] := part[2];
          END;

        END;

        Passwort := temp_array[1] + temp_array[2] + temp_array[3];

        LizenzTab.RESET;
        LizenzTab.SETFILTER(Passwort,'%1',Passwort);
        IF NOT LizenzTab.FINDFIRST THEN
          passwort_ok := TRUE;

      UNTIL passwort_ok = TRUE;

      EXIT(Passwort);
    END;

    PROCEDURE Benutzername_generieren@1140005(Artikelnr@1140000 : Code[20];"SUP Artikelnr"@1140002 : Code[20];Seriennr@1140001 : Code[20];Belegnr@1140009 : Code[20];Zeilennr@1140010 : Integer) Benutzername : Code[40];
    VAR
      PrfeLizenzTab@1140004 : Record 50024;
      TroubleshootingSetup@1000000000 : Record 5945;
      NoSeriesMgt@1000000001 : Codeunit 396;
      sup_artikelnr_lang@1140003 : Code[40];
      laufende_nummer@1140007 : Code[20];
      eingabe@1140006 : Code[10];
      ok@1140005 : Boolean;
    BEGIN
      Artikel.GET("Artikelnr.");

      TroubleshootingSetup.RESET;
      TroubleshootingSetup.SETRANGE(Type,TroubleshootingSetup.Type::Item);
      TroubleshootingSetup.SETRANGE("No.",Artikel."No.");
      TroubleshootingSetup.SETRANGE("Troubleshooting No.",'PAUSCHALE');
      IF (TroubleshootingSetup.FINDFIRST)
      OR (Artikel.Serviceklassifizierung <> 'SYSTEM CHAMPS') OR (Artikelnr = 'PSEUDO-CHASSIS') THEN
        IF (Seriennr = '') OR ("SUP Artikelnr" = '') THEN
          EXIT('');

      Artikel.GET("SUP Artikelnr.");
      sup_artikelnr_lang := Artikel."No. 2";
      IF (STRPOS("SUP Artikelnr.",'HW') <> 0) OR (STRPOS("SUP Artikelnr.",'AHR') <> 0)
      OR ("SUP Artikelnr." = 'CHAMPS-SUPP-8X5/YR') OR ("SUP Artikelnr." = 'CHAMPS-RE_INSTATE#01')
      OR (STRPOS("SUP Artikelnr.",'RPLC') <> 0) OR ("SUP Artikelnr." = 'RE_INSTATEMENT_FEE')
      OR (Artikel.Artikelgruppe = 'ACTS_MSS') OR (Artikel.Artikelgruppe = 'ACTS_AHR')
      OR (Artikel.Artikelgruppe = 'ACTS_MSS_SCHAEFFLER') THEN
        EXIT('');

      IF STRPOS(Seriennr,'S/N: ') = 1 THEN
        Seriennr := COPYSTR(Seriennr,STRLEN('S/N: ')+1);

      IF STRPOS(Seriennr,'S/N:') = 1 THEN
        Seriennr := COPYSTR(Seriennr,STRLEN('S/N:')+1);

      IF STRPOS(Artikelnr,'/') > 0 THEN
        Benutzername := DELCHR(COPYSTR(Artikelnr,1,STRPOS(Artikelnr,'/')-1),'=','-') + '-' + Seriennr
      ELSE
        IF STRPOS(Artikelnr,'-') > 0 THEN
          Benutzername := COPYSTR(Artikelnr,1,STRPOS(Artikelnr,'-')) + Seriennr
            ELSE
              Benutzername := DELCHR(COPYSTR(Artikelnr,1,4),'=','- ') + '-' + Seriennr;

      Artikel.GET ("Artikelnr.");
      IF ((Seriennr = '') OR ((Seriennr = 'NA') OR (Seriennr = 'N/A'))) AND (Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS') THEN BEGIN
        PrfeLizenzTab.RESET;
        PrfeLizenzTab.SETRANGE(Art,PrfeLizenzTab.Art::Service);
        PrfeLizenzTab.SETRANGE("Artikelnr.",Artikelnr);
        PrfeLizenzTab.SETRANGE("Seriennr.",Seriennr);
        PrfeLizenzTab.SETRANGE("Urspr. Lieferscheinnr.",Belegnr);
        PrfeLizenzTab.SETRANGE("Urspr. Lieferscheinzeilennr.",Zeilennr);
        PrfeLizenzTab.SETFILTER(Benutzername,'<>%1','');
        IF NOT PrfeLizenzTab.FINDLAST THEN BEGIN
          ok := EVALUATE(eingabe,'TOPAS-USER');
          laufende_nummer := '';
          NoSeriesMgt.InitSeries(eingabe,eingabe,TODAY,laufende_nummer,eingabe);
          Seriennr := laufende_nummer;
          Benutzername := Benutzername + Seriennr;
        END ELSE
          Benutzername := PrfeLizenzTab.Benutzername;
      END;

      EXIT(Benutzername);
    END;

    PROCEDURE TempServiceVorbelegung@1140003("SUP Artikelnr"@1140015 : Code[20];Lieferscheinnr@1140000 : Code[20];Lieferscheinzeilennr@1140001 : Integer;"Lizenz Anzahl"@1140005 : Decimal;Debnr@1140009 : Code[20];Auftragsnr@1140011 : Code[20];AUzeilennr@1140012 : Integer);
    VAR
      Liefzeile@1140002 : Record 111;
      ServiceRelaDoc@1140006 : Record 50027;
      Artikelposten@1140010 : Record 32;
      Artikel@1140013 : Record 27;
      PruefeServicePos@1140008 : Record 50024;
      HoleNeueSystemPos@1140016 : Record 50024;
      PruefeNachfolgeSystemPos@1140018 : Record 50024;
      ServiceTab@1000000001 : Record 50024;
      TempServiceTab@1140004 : Record 50024;
      HoleTempSN@1140024 : Record 50024;
      ersetzt_lfdnr@1140019 : Code[20];
      geh”rtzu@1140007 : Code[20];
      zupruefende_seriennr@1140017 : Code[20];
      urspr_seriennr@1140021 : Code[20];
      seriennr_ersetzt@1140020 : Boolean;
      artikelnr@1140023 : Code[20];
      product_key_changed@1000000000 : Boolean;
      k@1140014 : Integer;
      z@1140022 : Integer;
    BEGIN
      //***************************************************************************************************
      //          01.03.2011 ST - Fr Fall #2 SUP Artikel verweist auf eine Lieferschein Position.
      //       Es kann sich hierbei um Verl„ngerungen, wenn bereits ein Teil der Seriennr. in einem
      //      Wartungsvertrag auftauchen, oder um eine nachtr„gliches Generieren von Lizenzen handeln
      //          19.06.2012 ST - šberarbeitung fr reklamierte Seriennr.
      //          27.11.2012 ST - Anpassung an zu verl„ngernde Fremderwerbs Positionen > Fall 2b
      //***************************************************************************************************

      IF (Lieferscheinnr = '') OR (Lieferscheinzeilennr = 0) THEN
       ERROR(Text012);

      IF "Lizenz Anzahl" = 0 THEN
        ERROR(Text013);

      //***************************************************************************************************
      //      šberprft vorhandene Auswahl auf Richtigkeit und bietet bei Abweichung die L”schung an
      //***************************************************************************************************

      PruefeServicePos.RESET;
      PruefeServicePos.SETFILTER(Art,'%1',PruefeServicePos.Art::Tempor„r);
      PruefeServicePos.SETFILTER("Debitornr.",'%1',Debnr);
      PruefeServicePos.SETFILTER("Auftragsnr.",'%1',Auftragsnr);
      PruefeServicePos.SETFILTER("Auftragszeilennr.",'%1',AUzeilennr);
      IF (PruefeServicePos.FINDFIRST) AND (PruefeServicePos."Auftragsnr." <> Auftragsnr) THEN BEGIN
        IF CONFIRM(Text017,FALSE,'SUP Belegnr.',PruefeServicePos."Nr.",PruefeServicePos."Belegzeilennr.") THEN BEGIN
          PruefeServicePos.DELETEALL;
        END ELSE
          EXIT;
      END;

      //***************************************************************************************************
      //                                              Fall 2
      //                 Bietet die M”glichkeit, wenn eigentliche Buchung nicht ber dieses
      //                  Debitorkonto gelaufen ist, einen Betreuungswechsel durchzufhren
      //***************************************************************************************************

      Artikelposten.RESET;
      Artikelposten.SETFILTER("Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      Artikelposten.SETFILTER("Document No.",'%1',Lieferscheinnr);
      Artikelposten.SETFILTER("Document Line No.",'%1',Lieferscheinzeilennr);
      IF Artikelposten.FINDFIRST THEN BEGIN
        REPEAT

          zupruefende_seriennr := Artikelposten."Serial No.";
          artikelnr := Artikelposten."Item No.";
          urspr_seriennr := '';
          ersetzt_lfdnr := '';
          product_key_changed := FALSE;

          //Wegen RMA Verfahren muss auf Seriennr. Žnderung geprft werden und diese dann weiter verwendet werden
          PruefeServicePos.RESET;
          PruefeServicePos.SETFILTER(Art,'%1',PruefeServicePos.Art::System);
          PruefeServicePos.SETFILTER("Artikelnr.",'%1',Artikelposten."Item No.");
          PruefeServicePos.SETFILTER("Seriennr.",'%1',Artikelposten."Serial No.");
          PruefeServicePos.SETFILTER("Nr.",'%1',Lieferscheinnr);
          PruefeServicePos.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
          IF (PruefeServicePos.FINDFIRST) THEN
            IF (PruefeServicePos.Reklamiert) AND (PruefeServicePos.Ersatzverfahren) THEN BEGIN

              ersetzt_lfdnr := PruefeServicePos."Lfd. Nr.";
              urspr_seriennr := '';
              seriennr_ersetzt := FALSE;

              PruefeNachfolgeSystemPos.RESET;
              //PruefeNachfolgeSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
              PruefeNachfolgeSystemPos.SETFILTER(Art,'%1',PruefeNachfolgeSystemPos.Art::System);
              PruefeNachfolgeSystemPos.SETFILTER("Urspr. Seriennr.",'%1',Artikelposten."Serial No.");
              PruefeNachfolgeSystemPos.SETFILTER(Ersatzverfahren,'%1',TRUE);
              PruefeNachfolgeSystemPos.SETFILTER("Ersatz fr Lfd. Nr.",'%1',PruefeServicePos."Lfd. Nr.");
              IF PruefeNachfolgeSystemPos.FINDLAST THEN BEGIN
                urspr_seriennr := PruefeServicePos."Seriennr.";
                REPEAT
                  HoleNeueSystemPos.RESET;
                  HoleNeueSystemPos.SETFILTER(Art,'%1',HoleNeueSystemPos.Art::System);
                  HoleNeueSystemPos.SETFILTER(Ersatzverfahren,'%1',TRUE);
                  HoleNeueSystemPos.SETFILTER("Ersatz fr Lfd. Nr.",'%1',ersetzt_lfdnr);
                  IF HoleNeueSystemPos.FINDLAST THEN BEGIN
                    IF HoleNeueSystemPos.Inaktiv = TRUE THEN BEGIN
                      ersetzt_lfdnr := HoleNeueSystemPos."Lfd. Nr.";
                      urspr_seriennr := HoleNeueSystemPos."Seriennr.";
                      seriennr_ersetzt := TRUE;
                    END ELSE BEGIN
                      zupruefende_seriennr := HoleNeueSystemPos."Seriennr.";
                      seriennr_ersetzt := FALSE;
                    END;
                    artikelnr := HoleNeueSystemPos."Artikelnr.";
                  END ELSE
                    seriennr_ersetzt := FALSE;
                UNTIL (seriennr_ersetzt = FALSE) AND (zupruefende_seriennr <> '');
              END;
            END ELSE BEGIN
              //Fehllieferung von Seriennr., die nicht mehr ge„ndert werden k”nnen,
              //wurden in den Systempositionen ge„ndert
              IF Artikelposten."Serial No." <> '' THEN BEGIN
                PruefeServicePos.RESET;
                PruefeServicePos.SETFILTER(Art,'%1',PruefeServicePos.Art::System);
                PruefeServicePos.SETFILTER("Artikelnr.",'%1',Artikelposten."Item No.");
                PruefeServicePos.SETFILTER("Urspr. Seriennr.",'%1',Artikelposten."Serial No.");
                IF (PruefeServicePos.FINDFIRST) AND (PruefeServicePos.Reklamiert = FALSE)
                AND (PruefeServicePos.Ersatzverfahren = FALSE) THEN
                  BEGIN
                    zupruefende_seriennr := PruefeServicePos."Seriennr.";
                    urspr_seriennr := PruefeServicePos."Urspr. Seriennr.";
                    artikelnr := PruefeServicePos."Artikelnr.";
                  END;
              END;
            END;

          TempServiceTab.RESET;
          TempServiceTab.SETFILTER(Art,'%1',TempServiceTab.Art::Tempor„r);
          TempServiceTab.SETFILTER("Auftragsnr.",'%1',Auftragsnr);
          TempServiceTab.SETFILTER("Auftragszeilennr.",'%1',AUzeilennr);
          TempServiceTab.SETFILTER("Nr.",'%1',Lieferscheinnr);
          TempServiceTab.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
          TempServiceTab.SETFILTER("Seriennr.",'%1',zupruefende_seriennr);
          IF NOT TempServiceTab.FINDFIRST THEN BEGIN
            ServiceTab.INIT;
            ServiceTab.Art := ServiceTab.Art::Tempor„r;
            ServiceTab."Nr." := Lieferscheinnr;
            ServiceTab."Belegzeilennr." := Lieferscheinzeilennr;
            ServiceTab.INSERT(TRUE);
            ServiceTab."Debitornr." := Debnr;
            //ServiceTab.VALIDATE("Artikelnr.",Artikelposten."Item No.");
            ServiceTab.VALIDATE("Artikelnr.", artikelnr);
            ServiceTab.Serviceleistung := 'WARTUNGSVERTRAG';
            IF Artikelposten."Item Tracking" = Artikelposten."Item Tracking"::"Serial No." THEN
              ServiceTab.Menge := Artikelposten.Quantity * (-1)
            ELSE
              ServiceTab.Menge := "Lizenz Anzahl";
            ServiceTab."Seriennr." := zupruefende_seriennr;
            IF urspr_seriennr <> '' THEN BEGIN
              ServiceTab."Urspr. Seriennr." := urspr_seriennr;
            END;
            //Prfe, ob RMA vorhanden und Ersatz vorliegt
            PruefeServicePos.RESET;
            PruefeServicePos.SETFILTER(Inaktiv,'%1',FALSE);
            PruefeServicePos.SETFILTER(Art,'%1',PruefeServicePos.Art::System);
            PruefeServicePos.SETFILTER("Artikelnr.",'%1',Artikelposten."Item No.");
            PruefeServicePos.SETFILTER("Seriennr.",'%1',Artikelposten."Serial No.");
            IF (PruefeServicePos.FINDLAST) AND (PruefeServicePos.Reklamiert) AND (PruefeServicePos.Ersatzverfahren) THEN BEGIN
              ServiceTab.Ersatzverfahren := TRUE;
              ServiceTab."Urspr. Seriennr." := urspr_seriennr;
            END;
            ServiceTab.Ursprungsland := Artikelposten.Ursprungsland;
            ServiceTab."Product Key" := Artikelposten."Product Key";

            //Korrektur des Product Keys, wenn dieser im Wartungsvertrag manuell angepasst wurde
            PruefeServicePos.RESET;
            PruefeServicePos.SETFILTER(Inaktiv,'%1',FALSE);
            PruefeServicePos.SETFILTER(Art,'%1',PruefeServicePos.Art::Service);
            PruefeServicePos.SETFILTER("Urspr. Lieferscheinnr.",'%1',Lieferscheinnr);
            PruefeServicePos.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',Lieferscheinzeilennr);
            PruefeServicePos.SETFILTER("Artikelnr.",'%1',Artikelposten."Item No.");
            PruefeServicePos.SETFILTER("Seriennr.",'%1',Artikelposten."Serial No.");
            IF (PruefeServicePos.FINDLAST) AND (PruefeServicePos."Product Key" <> Artikelposten."Product Key")
            AND (PruefeServicePos."Product Key" <> '') THEN BEGIN
              ServiceTab."Product Key" := PruefeServicePos."Product Key";
              product_key_changed := TRUE;
            END;

            ServiceTab."Seriennr. 2" := Artikelposten."Serial No. 2";
            ItemAppEntry.SETRANGE("Outbound Item Entry No.",Artikelposten."Entry No.");
            IF ItemAppEntry.FINDFIRST THEN BEGIN
              ItemLedgerEntryEK.SETRANGE("Entry No.",ItemAppEntry."Inbound Item Entry No.");
              IF ItemLedgerEntryEK.FINDFIRST THEN BEGIN
                PurchShipHeader.SETRANGE("No.",ItemLedgerEntryEK."Document No.");
                IF PurchShipHeader.FINDFIRST THEN
                  ServiceTab."Eingangs BET" := PurchShipHeader."Order No.";
              END;
            END;
            ServiceTab."Auftragsnr." := Auftragsnr;
            ServiceTab."Auftragszeilennr." := AUzeilennr;
            Liefzeile.GET(Lieferscheinnr,Lieferscheinzeilennr);
            ServiceTab."Urspr. Auftragsnr." := Liefzeile."Order No.";
            ServiceTab."Urspr. Auftragszeilennr." := Liefzeile."Order Line No.";
            ServiceTab.Verl„ngerung := PrfeWartungvorhanden("SUP Artikelnr",Lieferscheinnr,Lieferscheinzeilennr,
                                      ServiceTab."Seriennr.",Debnr);
            ServiceTab.MODIFY;
          END;
        UNTIL Artikelposten.NEXT = 0;
      END ELSE BEGIN
        //***************************************************************************************************
        //                                              Fall 2b
        //                 Bietet die M”glichkeit, bereits angelegte Fremderwerbs Positionen
        //                      mit deren Seriennr. zu bernehmen und zu verl„ngern
        //***************************************************************************************************
        PruefeServicePos.RESET;
        PruefeServicePos.SETFILTER(Art,'%1',PruefeServicePos.Art::System);
        PruefeServicePos.SETFILTER("Nr.",'%1',Lieferscheinnr);
        PruefeServicePos.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
        PruefeServicePos.SETFILTER(Inaktiv,'%1',FALSE);
        IF PruefeServicePos.FINDFIRST THEN BEGIN
          REPEAT
            TempServiceTab.RESET;
            TempServiceTab.SETFILTER(Art,'%1',TempServiceTab.Art::Tempor„r);
            TempServiceTab.SETFILTER("Auftragsnr.",'%1',Auftragsnr);
            TempServiceTab.SETFILTER("Auftragszeilennr.",'%1',AUzeilennr);
            TempServiceTab.SETFILTER("Nr.",'%1',Lieferscheinnr);
            TempServiceTab.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
            TempServiceTab.SETFILTER("Seriennr.",'%1',PruefeServicePos."Seriennr.");
            TempServiceTab.SETFILTER("Product Key",'%1',PruefeServicePos."Product Key");
            IF NOT TempServiceTab.FINDFIRST THEN BEGIN
              ServiceTab.INIT;
              ServiceTab.Art := ServiceTab.Art::Tempor„r;
              ServiceTab."Nr." := Lieferscheinnr;
              ServiceTab."Belegzeilennr." := Lieferscheinzeilennr;
              ServiceTab.INSERT(TRUE);
              ServiceTab."Debitornr." := Debnr;
              ServiceTab.VALIDATE("Artikelnr.",PruefeServicePos."Artikelnr.");
              ServiceTab.Serviceleistung := 'WARTUNGSVERTRAG';
              ServiceTab.Menge := PruefeServicePos.Menge;
              ServiceTab."Seriennr." := PruefeServicePos."Seriennr.";
              ServiceTab.Ursprungsland := PruefeServicePos.Ursprungsland;
              ServiceTab."Product Key" := PruefeServicePos."Product Key";
              ServiceTab."Seriennr. 2" := PruefeServicePos."Seriennr. 2";
              ItemLedgerEntryVK.RESET;
              ItemLedgerEntryVK.SETRANGE("Serial No.",PruefeServicePos."Seriennr.");
              ItemLedgerEntryVK.SETRANGE("Document No.",PruefeServicePos."Nr.");
              ItemLedgerEntryVK.SETRANGE("Document Line No.",PruefeServicePos."Belegzeilennr.");
              ItemAppEntry.SETRANGE("Outbound Item Entry No.",Artikelposten."Entry No.");
              IF ItemAppEntry.FINDFIRST THEN BEGIN
                ItemLedgerEntryEK.SETRANGE("Entry No.",ItemAppEntry."Inbound Item Entry No.");
                IF ItemLedgerEntryEK.FINDFIRST THEN BEGIN
                  PurchShipHeader.SETRANGE("No.",ItemLedgerEntryEK."Document No.");
                  IF PurchShipHeader.FINDFIRST THEN
                    ServiceTab."Eingangs BET" := PurchShipHeader."Order No.";
                END;
              END;
              ServiceTab."Auftragsnr." := Auftragsnr;
              ServiceTab."Auftragszeilennr." := AUzeilennr;
              ServiceTab."Urspr. Auftragsnr." := PruefeServicePos."Auftragsnr.";
              ServiceTab."Urspr. Auftragszeilennr." := PruefeServicePos."Auftragszeilennr.";
              ServiceTab.Fremderwerb := PruefeServicePos.Fremderwerb;
              ServiceTab.Verl„ngerung := PrfeWartungvorhanden("SUP Artikelnr",Lieferscheinnr,Lieferscheinzeilennr,
                                        ServiceTab."Seriennr.",Debnr);
              ServiceTab.MODIFY;
            END;
          UNTIL PruefeServicePos.NEXT = 0;
        END ELSE BEGIN
        //***************************************************************************************************
        //                                  Fall 3 - Pseudo Vorbelegungen
        //***************************************************************************************************
          ServiceRelaDoc.RESET;
          ServiceRelaDoc.SETFILTER(Art,'%1',ServiceRelaDoc.Art::"SUP-AU");
          ServiceRelaDoc.SETFILTER("Debitornr.",'%1',Debnr);
          ServiceRelaDoc.SETFILTER("Nr.",'%1',Auftragsnr);
          ServiceRelaDoc.SETFILTER("Zeilennr.",'%1',AUzeilennr);
          ServiceRelaDoc.SETFILTER("Belegnr.",'%1',Lieferscheinnr);
          ServiceRelaDoc.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
          ServiceRelaDoc.SETFILTER(Fremderwerb,'%1',TRUE);
          IF ServiceRelaDoc.FINDFIRST THEN BEGIN
            TempServiceTab.RESET;
            TempServiceTab.SETFILTER(Art,'%1',TempServiceTab.Art::Tempor„r);
            TempServiceTab.SETFILTER("Debitornr.",'%1',Debnr);
            TempServiceTab.SETFILTER("Artikelnr.",'%1',ServiceRelaDoc."Ger„te Artikelnr.");
            TempServiceTab.SETFILTER("Auftragsnr.",'%1',Auftragsnr);
            TempServiceTab.SETFILTER("Auftragszeilennr.",'%1',AUzeilennr);
            TempServiceTab.SETFILTER("Nr.",'%1',Lieferscheinnr);
            TempServiceTab.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
            IF TempServiceTab.FINDFIRST THEN BEGIN
              Artikel.GET(ServiceRelaDoc."Ger„te Artikelnr.");
              IF Artikel."Item Tracking Code" = 'KEINE' THEN BEGIN
                IF TempServiceTab.COUNT >= 1 THEN
                  EXIT
                ELSE
                  z := 1;
              END ELSE
                z := ServiceRelaDoc."Menge kalk." - TempServiceTab.COUNT;
            END ELSE BEGIN
              Artikel.GET(ServiceRelaDoc."Ger„te Artikelnr.");
              IF Artikel."Item Tracking Code" = 'KEINE' THEN
                z := 1
              ELSE
                z := ServiceRelaDoc."Menge kalk.";
            END;

            FOR k := 1 TO z DO BEGIN
              ServiceTab.INIT;
              ServiceTab.Art := ServiceTab.Art::Tempor„r;
              ServiceTab."Nr." := Lieferscheinnr;
              ServiceTab."Belegzeilennr." := Lieferscheinzeilennr;
              ServiceTab.INSERT(TRUE);
              ServiceTab."Debitornr." := ServiceRelaDoc."Debitornr.";
              ServiceTab.VALIDATE("Artikelnr.",ServiceRelaDoc."Ger„te Artikelnr.");
              ServiceTab.Serviceleistung := 'WARTUNGSVERTRAG';
              IF Artikel."Item Tracking Code" = 'KEINE' THEN
                ServiceTab.Menge := ServiceRelaDoc."Menge kalk."
              ELSE BEGIN
                ServiceTab.Menge := 1;
                HoleTempSN.RESET;
                HoleTempSN.SETFILTER("Lfd. Nr.",'<>%1',ServiceTab."Lfd. Nr.");
                HoleTempSN.SETFILTER(Art,'%1',HoleTempSN.Art::Tempor„r);
                HoleTempSN.SETFILTER("Debitornr.",'%1',ServiceRelaDoc."Debitornr.");
                HoleTempSN.SETFILTER("Artikelnr.",'%1',ServiceRelaDoc."Ger„te Artikelnr.");
                HoleTempSN.SETFILTER("Auftragsnr.",'%1',Auftragsnr);
                HoleTempSN.SETFILTER("Nr.",'%1',Lieferscheinnr);
                HoleTempSN.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
                HoleTempSN.SETFILTER("Seriennr.",'<>%1','');
                IF HoleTempSN.FINDFIRST THEN
                  REPEAT
                    TempServiceTab.RESET;
                    TempServiceTab.SETRANGE(Art,TempServiceTab.Art::Tempor„r);
                    TempServiceTab.SETRANGE("Debitornr.",Debnr);
                    TempServiceTab.SETRANGE("Artikelnr.",ServiceRelaDoc."Ger„te Artikelnr.");
                    TempServiceTab.SETRANGE("Auftragsnr.",Auftragsnr);
                    TempServiceTab.SETRANGE("Auftragszeilennr.",AUzeilennr);
                    TempServiceTab.SETRANGE("Nr.",Lieferscheinnr);
                    TempServiceTab.SETRANGE("Belegzeilennr.",Lieferscheinzeilennr);
                    TempServiceTab.SETRANGE("Seriennr.",HoleTempSN."Seriennr.");
                    IF NOT TempServiceTab.FINDFIRST THEN
                      ServiceTab.VALIDATE("Seriennr.",HoleTempSN."Seriennr.");
                  UNTIL (HoleTempSN.NEXT = 0) OR (ServiceTab."Seriennr." <> '');
              END;
              Artikel.GET(ServiceRelaDoc."Ger„te Artikelnr.");
              ServiceTab.Ursprungsland := Artikel."Country/Region of Origin Code";
              ServiceTab."Auftragsnr." := Auftragsnr;
              ServiceTab."Auftragszeilennr." := AUzeilennr;
              ServiceTab."Urspr. Auftragsnr." := 'AU_' + DELCHR(Lieferscheinnr,'<','LS_');
              ServiceTab."Urspr. Auftragszeilennr." := Lieferscheinzeilennr;
              ServiceTab.Basisger„t := ServiceRelaDoc.Basisger„t;
              ServiceTab.Fremderwerb := TRUE;
              ServiceTab.Verl„ngerung := PrfeWartungvorhanden("SUP Artikelnr",Lieferscheinnr,Lieferscheinzeilennr,
                                        ServiceTab."Seriennr.",Debnr);
              ServiceTab.MODIFY;
            END;
          END ELSE BEGIN
            ERROR(Text015,Lieferscheinnr,Lieferscheinzeilennr);
            EXIT;
          END;
        END;
      END;

      COMMIT;

      IF product_key_changed THEN
        MESSAGE(Text036,Artikelposten.FIELDCAPTION("Product Key"));
    END;

    PROCEDURE CreateSystemFromSalesHeader@1140004(VAR ShipmentNo@1140000 : Code[20];SOR_eingeschlossen@1140005 : Boolean);
    VAR
      SystemPos@1140015 : Record 50024;
      SeriennrVerfolgung@1140017 : Record 32;
      Liefkopf@1140001 : Record 110;
      Liefzeile@1140002 : Record 111;
      Auftrag@1140019 : Record 36;
      PruefeSystemLiefzeile@1140004 : Record 111;
      HoleTempLizenzTab@1140022 : Record 50024;
      OffeneSystemPos@1140003 : Record 50024;
      Wartung@1140012 : Record 50011;
      WartungsUebersicht@1140016 : Record 50011;
      PruefeHauptWartung@1140011 : Record 50011;
      KalkulationHolen@1140010 : Record 50027;
      ZuordnungBasissystem@1140023 : Record 50027;
      PruefeKalkulation@1140025 : Record 50027;
      Ansprech@1140009 : Record 50005;
      DebKontaktBez@1140008 : Record 5054;
      Artikel@1140007 : Record 27;
      auswahl_wartungsnr@1140020 : Code[20];
      auswahl_hauptwartungsnr@1140021 : Code[20];
      wartungsnr@1140006 : Code[20];
      hauptwartungsnr@1140013 : Code[20];
      system_service_verbindung@1140024 : Boolean;
      basissystem_vorhanden@1140014 : Boolean;
    BEGIN
      //***************************************************************************************************
      //      29.08.2011-ST Neue Funktion: Das System holt sich nach Erstellung des Lieferscheins die
      //                          entsprechenden Seriennr. aus den Artikelposten
      //***************************************************************************************************

      Liefkopf.RESET;
      Liefkopf.SETFILTER("No.",'%1',ShipmentNo);
      IF Liefkopf.FINDLAST THEN BEGIN

        //SOR Auftr„ge werden standardm„áig nicht in Systemvertr„ge gewandelt
        IF SOR_eingeschlossen = FALSE THEN
          IF (STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0) OR (Liefkopf."Location Code" = 'MUST') THEN
            EXIT;

        Liefzeile.RESET;
        Liefzeile.SETFILTER("Document No.",'%1',Liefkopf."No.");
        Liefzeile.SETFILTER("Manufacturer Code",'%1','59');
        Liefzeile.SETFILTER(Type,'%1',Liefzeile.Type::Item);
        Liefzeile.SETFILTER(Quantity,'>%1',0);
        IF Liefzeile.FINDFIRST THEN
          REPEAT

            auswahl_wartungsnr := '';
            auswahl_hauptwartungsnr := '';

            Artikel.GET(Liefzeile."No.");
            IF Artikel."Software Upgrade Protection" = FALSE THEN BEGIN

              //***************************************************************************************************
              //                         Generierung des Systemvertrages fr Chassis o.„.
              //***************************************************************************************************

              IF Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS' THEN BEGIN
                Wartung.RESET;
                Wartung.SETFILTER("Lieferscheinnr.",'%1',Liefzeile."Document No.");
                Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',Liefzeile."Line No.");
                IF NOT Wartung.FINDFIRST THEN BEGIN
                  Wartung.INIT;
                  Wartung.Status := Wartung.Status::System;
                  Wartung.Klasse := Wartung.Klasse::Einzelger„t;
                  Wartung.Volumen := 1;
                  Wartung.Startdatum := Liefkopf."Posting Date";
                  Wartung."Debitornr." := Liefkopf."Sell-to Customer No.";
                  IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN BEGIN
                    Wartung.SOR := TRUE;
                    Wartung."SOR Option" := Liefkopf."Payment Terms Code";
                  END;
                  //Des Basisger„tes
                  Wartung."Auftragsnr." := Liefzeile."Order No.";
                  Wartung."Auftragszeilennr." := Liefzeile."Order Line No.";
                  Wartung."Lieferscheinnr." := Liefzeile."Document No.";
                  Wartung."Lieferscheinzeilennr." := Liefzeile."Line No.";
                  IF Auftrag.GET(Auftrag."Document Type"::Order,Wartung."Auftragsnr.") THEN
                    Wartung.Auftragsstatus := Wartung.Auftragsstatus::Aktuell
                  ELSE
                    Wartung.Auftragsstatus := Wartung.Auftragsstatus::Archiviert;
                  Wartung.Endkunde := Liefkopf.Endkunde;
                  Wartung."Endkunde Adresse" := Liefkopf."Endkunde Adresse";
                  Wartung."Endkunde PLZ-Code" := Liefkopf."Endkunde PLZ-Code";
                  Wartung."Endkunde Ort"  := Liefkopf."Endkunde Ort";
                  Wartung."Endkunde Land" := Liefkopf."Endkunde Land";
                  Wartung."Endkunde Kontakt" := Liefkopf."Endkunde Kontakt";
                  Wartung."Endkunde Telefonnr." := Liefkopf."Endkunde Telefonnr.";
                  Wartung."Endkunde E-Mail" := Liefkopf."Endkunde E-Mail";
                  Wartung."Systemhaus Kontakt" := Liefkopf."Systemhaus Kontakt";
                  Wartung."Systemhaus E-Mail" := Liefkopf."Systemhaus E-Mail";
                  Wartung.INSERT(TRUE);

                  PruefeHauptWartung.RESET;
                  PruefeHauptWartung.SETFILTER("Auftragsnr.",'%1',Wartung."Auftragsnr.");
                  PruefeHauptWartung.SETFILTER("Auftragszeilennr.",'%1',Wartung."Auftragszeilennr.");
                  IF NOT PruefeHauptWartung.FINDFIRST THEN BEGIN
                    Wartung."Hauptwartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                    Wartung.MODIFY(TRUE);
                  END ELSE BEGIN
                    Wartung."Hauptwartungsvertragsnr." := PruefeHauptWartung."Wartungsvertragsnr.";
                    Wartung.MODIFY(TRUE);
                  END;

                  //***************************************************************************************************
                  //             Sonderfall, wenn im Auftrag vortr„glich ein Modul etc. und dann erst das
                  //          Basisger„t gebucht wird, die auch in der Service Kalkulation zusammengeh”rig sind
                  //             Verlorene Systempositionen ohne Vertragsnr. werden diesem WV zugeordnet
                  //***************************************************************************************************

                  PruefeKalkulation.RESET;
                  PruefeKalkulation.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                  PruefeKalkulation.SETFILTER(Art,'%1',PruefeKalkulation.Art::"SUP-AU");
                  PruefeKalkulation.SETFILTER("Belegnr.",'%1',Liefzeile."Order No.");
                  PruefeKalkulation.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Order Line No.");
                  IF PruefeKalkulation.FINDFIRST THEN BEGIN
                    KalkulationHolen.RESET;
                    KalkulationHolen.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                    KalkulationHolen.SETFILTER(Art,'%1',KalkulationHolen.Art::"SUP-AU");
                    KalkulationHolen.SETFILTER("Nr.",'%1',PruefeKalkulation."Nr.");
                    KalkulationHolen.SETFILTER("Zeilennr.",'%1',PruefeKalkulation."Zeilennr.");
                    IF KalkulationHolen.FINDFIRST THEN
                      REPEAT
                        OffeneSystemPos.RESET;
                        OffeneSystemPos.SETFILTER(Art,'%1',Art::System);
                        OffeneSystemPos.SETFILTER("Artikelnr.",'%1',KalkulationHolen."Ger„te Artikelnr.");
                        OffeneSystemPos.SETFILTER("Auftragsnr.",'%1',KalkulationHolen."Belegnr.");
                        OffeneSystemPos.SETFILTER("Auftragszeilennr.",'%1',KalkulationHolen."Belegzeilennr.");
                        OffeneSystemPos.SETFILTER("Wartungsvertragsnr.",'%1','');
                        IF OffeneSystemPos.FINDFIRST THEN
                          REPEAT
                            OffeneSystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                            OffeneSystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                            OffeneSystemPos.MODIFY;
                          UNTIL OffeneSystemPos.NEXT = 0;
                      UNTIL KalkulationHolen.NEXT = 0;
                  END;

                  //NEU 26.11.2013 - Bugfix

                  //***************************************************************************************************
                  //         Sonderfall, wenn Basisger„t im Auftrag gebucht wird und mind. ein Modul
                  //        aus unseren Lieferungen stammt und alle in einer Service Kalkulation aufgestellt sind,
                  //          dann werden die verlorene Systempositionen ohne Vertragsnr. diesem WV zugeordnet
                  //***************************************************************************************************

                  PruefeKalkulation.RESET;
                  PruefeKalkulation.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                  PruefeKalkulation.SETFILTER(Art,'%1',PruefeKalkulation.Art::"SUP-AU");
                  PruefeKalkulation.SETFILTER("Belegnr.",'%1',Liefzeile."Order No.");
                  PruefeKalkulation.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Order Line No.");
                  IF PruefeKalkulation.FINDFIRST THEN BEGIN
                    REPEAT
                      KalkulationHolen.RESET;
                      KalkulationHolen.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                      KalkulationHolen.SETFILTER(Art,'%1',KalkulationHolen.Art::"SUP-AU");
                      KalkulationHolen.SETFILTER("Nr.",'%1',PruefeKalkulation."Nr.");
                      KalkulationHolen.SETFILTER("Zeilennr.",'%1',PruefeKalkulation."Zeilennr.");
                      IF KalkulationHolen.FINDFIRST THEN
                        REPEAT
                          OffeneSystemPos.RESET;
                          OffeneSystemPos.SETFILTER(Art,'%1',Art::System);
                          OffeneSystemPos.SETFILTER("Artikelnr.",'%1',KalkulationHolen."Ger„te Artikelnr.");
                          OffeneSystemPos.SETFILTER("Nr.",'%1',KalkulationHolen."Belegnr.");
                          OffeneSystemPos.SETFILTER("Belegzeilennr.",'%1',KalkulationHolen."Belegzeilennr.");
                          OffeneSystemPos.SETFILTER("Wartungsvertragsnr.",'%1','');
                          IF OffeneSystemPos.FINDFIRST THEN
                            REPEAT
                              TempSystemPos.RESET;
                              TempSystemPos.SETFILTER(Art,'%1',TempSystemPos.Art::Tempor„r);
                              TempSystemPos.SETFILTER(Vormerkung,'%1',TRUE);
                              TempSystemPos.SETFILTER("Nr.",'%1',OffeneSystemPos."Nr.");
                              TempSystemPos.SETFILTER("Belegzeilennr.",'%1',OffeneSystemPos."Belegzeilennr.");
                              TempSystemPos.SETFILTER("Artikelnr.",'%1',OffeneSystemPos."Artikelnr.");
                              TempSystemPos.SETFILTER("Seriennr.",'%1',OffeneSystemPos."Seriennr.");
                              IF TempSystemPos.FINDFIRST THEN BEGIN
                                OffeneSystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                OffeneSystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                                OffeneSystemPos.MODIFY;
                                MESSAGE('Pos. %1 nachtr„glich zugeordnet in %2 %3',OffeneSystemPos."Lfd. Nr.",
                                Wartung.TABLECAPTION,Wartung."Wartungsvertragsnr.");
                              END;
                            UNTIL OffeneSystemPos.NEXT = 0;
                        UNTIL KalkulationHolen.NEXT = 0;
                    UNTIL PruefeKalkulation.NEXT = 0;
                  END;

                  //***************************************************************************************************
                  //                           Anlage der Fhrungsrolle anhand des Debitoren
                  //***************************************************************************************************

                  DebKontaktBez.RESET;
                  DebKontaktBez.SETFILTER("Business Relation Code",'%1','DEB');
                  DebKontaktBez.SETFILTER("No.",'%1',Liefkopf."Sell-to Customer No.");
                  IF DebKontaktBez.FINDFIRST THEN BEGIN
                    Ansprech.RESET;
                    Ansprech.SETFILTER("Kampagnennr.",'%1',Wartung."Wartungsvertragsnr.");
                    Ansprech.SETFILTER("Kontaktnr.",'%1',DebKontaktBez."Contact No.");
                    IF NOT Ansprech.FINDFIRST THEN BEGIN
                      Ansprech.INIT;
                      Ansprech.VALIDATE("Kontaktnr.",DebKontaktBez."Contact No.");
                      Ansprech."Kampagnennr." := Wartung."Wartungsvertragsnr.";
                      Ansprech.Fhrungsrolle := TRUE;
                      Ansprech.INSERT;
                    END;
                  END;
                END;
              END;

              //***************************************************************************************************
              //                          Generierung des Systemvertrages fr FLAT Ger„te
              //***************************************************************************************************

              IF Artikel.Serviceklassifizierung = 'SYSTEM FLAT' THEN BEGIN
                Wartung.RESET;
                Wartung.SETFILTER("Lieferscheinnr.",'%1',Liefzeile."Document No.");
                Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',Liefzeile."Line No.");
                IF NOT Wartung.FINDFIRST THEN BEGIN
                  Wartung.INIT;
                  Wartung.Status := Wartung.Status::System;
                  Wartung.Klasse := Wartung.Klasse::Mehrger„te;
                  //Fr Mehrger„te immer 0, da das Volumen sp„ter durch die Einzelpositionen hochgez„hlt wird
                  Wartung.Volumen := 0;
                  Wartung.Startdatum := Liefkopf."Posting Date";
                  Wartung."Debitornr." := Liefkopf."Sell-to Customer No.";
                  IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN BEGIN
                    Wartung.SOR := TRUE;
                    Wartung."SOR Option" := Liefkopf."Payment Terms Code";
                  END;
                  //Des Basisger„tes
                  Wartung."Auftragsnr." := Liefzeile."Order No.";
                  Wartung."Auftragszeilennr." := Liefzeile."Order Line No.";
                  Wartung."Lieferscheinnr." := Liefzeile."Document No.";
                  Wartung."Lieferscheinzeilennr." := Liefzeile."Line No.";
                  IF Auftrag.GET(Auftrag."Document Type"::Order,Wartung."Auftragsnr.") THEN
                    Wartung.Auftragsstatus := Wartung.Auftragsstatus::Aktuell
                  ELSE
                    Wartung.Auftragsstatus := Wartung.Auftragsstatus::Archiviert;
                  Wartung.Endkunde := Liefkopf.Endkunde;
                  Wartung."Endkunde Adresse" := Liefkopf."Endkunde Adresse";
                  Wartung."Endkunde PLZ-Code" := Liefkopf."Endkunde PLZ-Code";
                  Wartung."Endkunde Ort"  := Liefkopf."Endkunde Ort";
                  Wartung."Endkunde Land" := Liefkopf."Endkunde Land";
                  Wartung."Endkunde Kontakt" := Liefkopf."Endkunde Kontakt";
                  Wartung."Endkunde Telefonnr." := Liefkopf."Endkunde Telefonnr.";
                  Wartung."Endkunde E-Mail" := Liefkopf."Endkunde E-Mail";
                  Wartung."Systemhaus Kontakt" := Liefkopf."Systemhaus Kontakt";
                  Wartung."Systemhaus E-Mail" := Liefkopf."Systemhaus E-Mail";
                  Wartung.INSERT(TRUE);

                  PruefeHauptWartung.RESET;
                  PruefeHauptWartung.SETFILTER("Auftragsnr.",'%1',Wartung."Auftragsnr.");
                  PruefeHauptWartung.SETFILTER("Auftragszeilennr.",'%1',Wartung."Auftragszeilennr.");
                  IF NOT PruefeHauptWartung.FINDFIRST THEN BEGIN
                    Wartung."Hauptwartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                    Wartung.MODIFY(TRUE);
                  END ELSE BEGIN
                    Wartung."Hauptwartungsvertragsnr." := PruefeHauptWartung."Wartungsvertragsnr.";
                    Wartung.MODIFY(TRUE);
                  END;

                  //Anlage der Fhrungsrolle anhand des Debitoren
                  DebKontaktBez.RESET;
                  DebKontaktBez.SETFILTER("Business Relation Code",'%1','DEB');
                  DebKontaktBez.SETFILTER("No.",'%1',Liefkopf."Sell-to Customer No.");
                  IF DebKontaktBez.FINDFIRST THEN BEGIN
                    Ansprech.RESET;
                    Ansprech.SETFILTER("Kampagnennr.",'%1',Wartung."Wartungsvertragsnr.");
                    Ansprech.SETFILTER("Kontaktnr.",'%1',DebKontaktBez."Contact No.");
                    IF NOT Ansprech.FINDFIRST THEN BEGIN
                      Ansprech.INIT;
                      Ansprech.VALIDATE("Kontaktnr.",DebKontaktBez."Contact No.");
                      Ansprech."Kampagnennr." := Wartung."Wartungsvertragsnr.";
                      Ansprech.Fhrungsrolle := TRUE;
                      Ansprech.INSERT;
                    END;
                  END;
                END;
              END;

              //***************************************************************************************************
              //         Auswahlfenster zum Vorbelegen des Wartungs- bzw. Systemvertrages bei nachtr„glich
              //   gelieferten Modulen,Softwarelizenzen etc. ohne jegliche Wartungs oder Systemger„te Positionen
              //***************************************************************************************************

              IF (Artikel.Serviceklassifizierung <> 'SYSTEM CHAMPS') AND (Artikel.Serviceklassifizierung <> 'SYSTEM FLAT') THEN BEGIN
                system_service_verbindung := FALSE;
                basissystem_vorhanden := FALSE;

                //Prfe ob der Artikel ohne Service Kalkulation gebucht wurde
                PruefeKalkulation.RESET;
                PruefeKalkulation.SETFILTER(Art,'%1',PruefeKalkulation.Art::"SUP-AU");
                PruefeKalkulation.SETFILTER("Belegnr.",'%1',Liefzeile."Order No.");
                PruefeKalkulation.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Order Line No.");
                IF NOT PruefeKalkulation.FINDFIRST THEN BEGIN
                  //Prfe ob Systemartikel alleinstehend gebucht wurde
                  PruefeSystemLiefzeile.RESET;
                  PruefeSystemLiefzeile.SETFILTER("Document No.",'%1',Liefkopf."No.");
                  PruefeSystemLiefzeile.SETFILTER(Type,'%1',PruefeSystemLiefzeile.Type::Item);
                  PruefeSystemLiefzeile.SETFILTER(Quantity,'>%1',0);
                  IF PruefeSystemLiefzeile.FINDFIRST THEN BEGIN
                    REPEAT
                      IF (Artikel.GET(PruefeSystemLiefzeile."No.")) AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS')
                      OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                        basissystem_vorhanden := TRUE;
                        PruefeKalkulation.RESET;
                        PruefeKalkulation.SETFILTER("Belegnr.",'%1',PruefeSystemLiefzeile."Order No.");
                        PruefeKalkulation.SETFILTER("Belegzeilennr.",'%1',PruefeSystemLiefzeile."Order Line No.");
                        IF NOT PruefeKalkulation.FINDFIRST THEN
                          system_service_verbindung := TRUE;
                      END;
                    UNTIL PruefeSystemLiefzeile.NEXT = 0;

                    IF (system_service_verbindung = FALSE) AND (Liefzeile."System Projektinfos" <> '')
                    AND (basissystem_vorhanden = FALSE) THEN BEGIN
                      MESSAGE(Text019,Liefzeile."No.",Liefzeile."Line No.",Liefzeile.FIELDCAPTION("System Projektinfos"),
                      Liefzeile."System Projektinfos");
                      COMMIT;
                      CLEAR(WartungsUebersicht);
                      WartungsUebersicht.SETFILTER("Debitornr.",'%1',Liefkopf."Sell-to Customer No.");
                      IF WartungsUebersicht.FINDFIRST THEN BEGIN
                        IF PAGE.RUNMODAL(50024,WartungsUebersicht) = ACTION::LookupOK THEN BEGIN
                            auswahl_wartungsnr := WartungsUebersicht."Wartungsvertragsnr.";
                            auswahl_hauptwartungsnr := WartungsUebersicht."Hauptwartungsvertragsnr.";
                        END ELSE BEGIN
                          MESSAGE(Text020,Liefzeile."No.",Liefzeile."Line No.");
                        END;
                      END ELSE
                        MESSAGE(Text023);
                    END;
                  END;
                END;
              END;

              //***************************************************************************************************
              //                                    Anlage der Systempositionen
              //***************************************************************************************************

              SeriennrVerfolgung.RESET;
              //SeriennrVerfolgung.SETFILTER("Item Tracking",'%1',SeriennrVerfolgung."Item Tracking"::"Serial No.");
              SeriennrVerfolgung.SETFILTER("Document No.",'%1',Liefzeile."Document No.");
              SeriennrVerfolgung.SETFILTER("Document Line No.",'%1',Liefzeile."Line No.");
              IF SeriennrVerfolgung.FINDFIRST THEN
                REPEAT
                  SystemPos.RESET;
                  SystemPos.SETFILTER(Art,'%1',SystemPos.Art::System);
                  SystemPos.SETFILTER("Nr.",'%1',Liefkopf."No.");
                  SystemPos.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Line No.");
                  SystemPos.SETFILTER("Artikelnr.",'%1',Liefzeile."No.");
                  SystemPos.SETFILTER("Seriennr.",'%1',SeriennrVerfolgung."Serial No.");
                  IF NOT SystemPos.FINDFIRST THEN BEGIN
                    SystemPos.RESET;
                    SystemPos.INIT;
                    SystemPos.Art := SystemPos.Art::System;
                    SystemPos."Nr." := Liefkopf."No.";
                    SystemPos.INSERT(TRUE);
                    SystemPos.Belegdatum := SeriennrVerfolgung."Posting Date";
                    SystemPos.VALIDATE("Artikelnr.",Liefzeile."No.");
                    SystemPos."Seriennr." := SeriennrVerfolgung."Serial No.";
                    SystemPos."Debitornr." := Liefkopf."Sell-to Customer No.";
                    SystemPos.Debitorname := Liefkopf."Sell-to Customer Name";
                    SystemPos.Menge := SeriennrVerfolgung.Quantity * (-1);
                    SystemPos.Kontakt := Liefkopf."Sell-to Contact";
                    SystemPos."Name 2" := Liefkopf."Sell-to Customer Name 2";
                    SystemPos.Adresse := Liefkopf."Sell-to Address";
                    SystemPos."Adresse 2" := Liefkopf."Sell-to Address 2";
                    SystemPos."PLZ-Code" := Liefkopf."Sell-to Post Code";
                    SystemPos.Ort := Liefkopf."Sell-to City";
                    SystemPos."System Projektinfos" := Liefzeile."System Projektinfos";
                    SystemPos."Auftragsnr." := Liefkopf."Order No.";
                    SystemPos."Auftragszeilennr." := Liefzeile."Line No.";
                    SystemPos.Ursprungsland := SeriennrVerfolgung.Ursprungsland;
                    SystemPos."Product Key" := SeriennrVerfolgung."Product Key";
                    SystemPos."Seriennr. 2" := SeriennrVerfolgung."Serial No. 2";
                    SystemPos."Belegzeilennr." := Liefzeile."Line No.";
                    IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN BEGIN
                      SystemPos.SOR := TRUE;
                      SystemPos."SOR Option" := Liefkopf."Payment Terms Code";
                    END;

                    IF (auswahl_wartungsnr <> '') AND (auswahl_hauptwartungsnr <> '') THEN BEGIN
                      SystemPos."Wartungsvertragsnr." := auswahl_wartungsnr;
                      SystemPos."Hauptwartungsvertragsnr." := auswahl_hauptwartungsnr;
                    END ELSE BEGIN
                      PruefeKalkulation.RESET;
                      PruefeKalkulation.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                      PruefeKalkulation.SETFILTER(Art,'%1',PruefeKalkulation.Art::"SUP-AU");
                      PruefeKalkulation.SETFILTER("Belegnr.",'%1',Liefzeile."Order No.");
                      PruefeKalkulation.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Order Line No.");
                      PruefeKalkulation.SETFILTER(Basisger„t,'%1',FALSE);
                      IF PruefeKalkulation.FINDFIRST THEN BEGIN
                        //Dieser Umweg muss genommen werden, um prfen zu k”nnen, ob ein Basissystem in der Kalk. vorliegt
                        KalkulationHolen.RESET;
                        KalkulationHolen.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                        KalkulationHolen.SETFILTER(Art,'%1',KalkulationHolen.Art::"SUP-AU");
                        KalkulationHolen.SETFILTER(Basisger„t,'%1',TRUE);
                        KalkulationHolen.SETFILTER("Nr.",'%1',PruefeKalkulation."Nr.");
                        KalkulationHolen.SETFILTER("Zeilennr.",'%1',PruefeKalkulation."Zeilennr.");
                        IF KalkulationHolen.FINDFIRST THEN
                          IF (KalkulationHolen."Belegnr." = Wartung."Auftragsnr.")
                          AND (KalkulationHolen."Belegzeilennr." = Wartung."Auftragszeilennr.") THEN BEGIN
                            SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                            SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                          END
                      END ELSE BEGIN
                        SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                        SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                      END;
                    END;

                    IF (Artikel.GET(SeriennrVerfolgung."Item No.")) AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS')
                    OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                      SystemPos.Basisger„t := TRUE;
                      Wartung.GET(SystemPos."Wartungsvertragsnr.");
                      Wartung.Basisger„t := SystemPos."Artikelnr.";
                      Wartung."Ablauf Gew„hrleistung" := CALCDATE('1J-1T',SeriennrVerfolgung."Posting Date");
                      IF Wartung.Klasse = Wartung.Klasse::Mehrger„te THEN
                        Wartung.Volumen += 1;
                      Wartung.MODIFY(TRUE);
                    END;

                    IF Wartung.GET(SystemPos."Wartungsvertragsnr.") AND (SystemPos."Wartungsvertragsnr." <> '') THEN
                      Wartung.MODIFY(TRUE)
                    ELSE BEGIN
                      //Einzel Modul im AU + Servicce Kalkulation mit Basisger„t aus LS usw.
                      KalkulationHolen.RESET;
                      KalkulationHolen.SETFILTER(Art,'%1',KalkulationHolen.Art::"SUP-AU");
                      KalkulationHolen.SETFILTER("Belegnr.",'%1',Liefkopf."Order No.");
                      KalkulationHolen.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Order Line No.");
                      IF KalkulationHolen.FINDFIRST THEN BEGIN
                        IF (KalkulationHolen."Wartungsvertragsnr." <> '') AND
                        (Wartung.GET(KalkulationHolen."Wartungsvertragsnr.")) THEN BEGIN
                          SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                          SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                          Wartung.MODIFY(TRUE);
                        END ELSE BEGIN
                          ZuordnungBasissystem.RESET;
                          ZuordnungBasissystem.SETFILTER(Art,'%1',ZuordnungBasissystem.Art::"SUP-AU");
                          ZuordnungBasissystem.SETFILTER("Nr.",'%1',Liefkopf."Order No.");
                          ZuordnungBasissystem.SETFILTER("Zeilennr.",'%1',KalkulationHolen."Zeilennr.");
                          ZuordnungBasissystem.SETFILTER(Basisger„t,'%1',TRUE);
                          IF ZuordnungBasissystem.FINDFIRST THEN BEGIN
                            Wartung.RESET;
                            Wartung.SETFILTER("Lieferscheinnr.",'%1',ZuordnungBasissystem."Belegnr.");
                            Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',ZuordnungBasissystem."Belegzeilennr.");
                            IF Wartung.FINDFIRST THEN BEGIN
                              SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                              SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                              Wartung.MODIFY(TRUE);
                            END;
                          END ELSE
                            MESSAGE(Text021,SystemPos."Lfd. Nr.",SystemPos."Artikelnr.",SystemPos."Belegzeilennr.");
                        END;
                      END ELSE
                        MESSAGE(Text021,SystemPos."Lfd. Nr.",SystemPos."Artikelnr.",SystemPos."Belegzeilennr.");
                    END;

                    SystemPos.MODIFY;

                    //***************************************************************************************************
                    //                       Zugeh”rigkeit der Positionen untereinander ermitteln
                    //***************************************************************************************************

                    SystemPos."Geh”rt zu Lfd. Nr." := SystemZugeh”rigkeitErmitteln(Liefkopf."Order No.",
                                                      SystemPos."Lfd. Nr.",SystemPos."Wartungsvertragsnr.");

                    SystemPos.MODIFY;
                    SystemPos.FehlendeSystemZugehoerigkeit(SystemPos."Wartungsvertragsnr.",SystemPos."Lfd. Nr.");

                    IF Wartung.GET(SystemPos."Wartungsvertragsnr.") THEN BEGIN
                      Wartung."Kampagnennr." := GetCampaignNoFromSalesDoc(SystemPos."Auftragsnr.",SystemPos."Auftragszeilennr.");
                      Wartung.MODIFY;
                    END;

                  END;
                UNTIL SeriennrVerfolgung.NEXT = 0;

              COMMIT;
            END;
          UNTIL Liefzeile.NEXT = 0;

        //***************************************************************************************************
        //                             Fremderworbene System Positionen anlegen
        //***************************************************************************************************

        Liefzeile.RESET;
        Liefzeile.SETFILTER("Document No.",'%1',Liefkopf."No.");
        Liefzeile.SETFILTER("Manufacturer Code",'%1|%2|%3|%4|%5|%6','53','57','59','98','5710','5720');
        Liefzeile.SETFILTER(Type,'%1',Liefzeile.Type::Item);
        Liefzeile.SETFILTER(Quantity,'>%1',0);
        IF Liefzeile.FINDFIRST THEN
          REPEAT

            wartungsnr := '';
            hauptwartungsnr := '';

            Artikel.GET(Liefzeile."No.");

            IF Artikel."Software Upgrade Protection" = TRUE THEN BEGIN
              KalkulationHolen.RESET;
              KalkulationHolen.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
              KalkulationHolen.SETFILTER(Art,'%1',KalkulationHolen.Art::"SUP-AU");
              KalkulationHolen.SETFILTER("Nr.",'%1',Liefzeile."Order No.");
              KalkulationHolen.SETFILTER("Zeilennr.",'%1',Liefzeile."Order Line No.");
              IF KalkulationHolen.FINDFIRST THEN
                REPEAT
                  HoleTempLizenzTab.RESET;
                  HoleTempLizenzTab.SETFILTER(Art,'%1',HoleTempLizenzTab.Art::Tempor„r);
                  HoleTempLizenzTab.SETFILTER("Nr.",'%1',KalkulationHolen."Belegnr.");
                  HoleTempLizenzTab.SETFILTER("Belegzeilennr.",'%1',KalkulationHolen."Belegzeilennr.");
                  HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',Liefzeile."Order No.");
                  HoleTempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',Liefzeile."Order Line No.");
                  HoleTempLizenzTab.SETFILTER(Vormerkung,'%1',TRUE);
                  HoleTempLizenzTab.SETFILTER(Fremderwerb,'%1',TRUE);
                  IF HoleTempLizenzTab.FINDFIRST THEN
                    REPEAT
                      IF KalkulationHolen.Basisger„t THEN BEGIN

                        //***************************************************************************************************
                        //                                  Generierung des Systemvertrages
                        //***************************************************************************************************

                        IF PrfeWartungsAnlageAktion(HoleTempLizenzTab."Artikelnr.", HoleTempLizenzTab.Fremderwerb,
                          KalkulationHolen) THEN BEGIN
                          Wartung.RESET;
                          Wartung.SETFILTER("Lieferscheinnr.",'%1',HoleTempLizenzTab."Nr.");
                          Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',HoleTempLizenzTab."Belegzeilennr.");
                          IF NOT Wartung.FINDFIRST THEN BEGIN
                            Wartung.INIT;
                            Wartung.Status := Wartung.Status::System;
                            Artikel.GET(HoleTempLizenzTab."Artikelnr.");
                            IF Artikel.Serviceklassifizierung = 'SYSTEM FLAT' THEN BEGIN
                              Wartung.Klasse := Wartung.Klasse::Mehrger„te;
                              Wartung.Volumen := 0;
                            END ELSE BEGIN
                              Wartung.Klasse := Wartung.Klasse::Einzelger„t;
                              Wartung.Volumen := 1;
                            END;
                            Wartung.Startdatum := Liefkopf."Posting Date";
                            Wartung."Debitornr." := Liefkopf."Sell-to Customer No.";
                            IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN BEGIN
                              Wartung.SOR := TRUE;
                              Wartung."SOR Option" := Liefkopf."Payment Terms Code";
                            END;
                            //Des Basisger„tes
                            Wartung.Auftragsstatus := Wartung.Auftragsstatus::Archiviert;
                            Wartung."Auftragsnr." := HoleTempLizenzTab."Urspr. Auftragsnr.";
                            Wartung."Auftragszeilennr." := HoleTempLizenzTab."Urspr. Auftragszeilennr.";
                            Wartung."Lieferscheinnr." := HoleTempLizenzTab."Nr.";
                            Wartung."Lieferscheinzeilennr." := HoleTempLizenzTab."Belegzeilennr.";
                            Wartung.Endkunde := Liefkopf.Endkunde;
                            Wartung."Endkunde Adresse" := Liefkopf."Endkunde Adresse";
                            Wartung."Endkunde PLZ-Code" := Liefkopf."Endkunde PLZ-Code";
                            Wartung."Endkunde Ort"  := Liefkopf."Endkunde Ort";
                            Wartung."Endkunde Land" := Liefkopf."Endkunde Land";
                            Wartung."Endkunde Kontakt" := Liefkopf."Endkunde Kontakt";
                            Wartung."Endkunde Telefonnr." := Liefkopf."Endkunde Telefonnr.";
                            Wartung."Endkunde E-Mail" := Liefkopf."Endkunde E-Mail";
                            Wartung."Systemhaus Kontakt" := Liefkopf."Systemhaus Kontakt";
                            Wartung."Systemhaus E-Mail" := Liefkopf."Systemhaus E-Mail";
                            Wartung.INSERT(TRUE);

                            PruefeHauptWartung.RESET;
                            PruefeHauptWartung.SETFILTER("Auftragsnr.",'%1',Wartung."Auftragsnr.");
                            PruefeHauptWartung.SETFILTER("Auftragszeilennr.",'%1',Wartung."Auftragszeilennr.");
                            IF NOT PruefeHauptWartung.FINDFIRST THEN BEGIN
                              Wartung."Hauptwartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                              Wartung.MODIFY(TRUE);
                            END ELSE BEGIN
                              Wartung."Hauptwartungsvertragsnr." := PruefeHauptWartung."Wartungsvertragsnr.";
                              Wartung.MODIFY(TRUE);
                            END;

                            wartungsnr := Wartung."Wartungsvertragsnr.";
                            hauptwartungsnr := Wartung."Hauptwartungsvertragsnr.";

                            //************************************************************************************************
                            //    Sonderfall, wenn Basisger„t als Pseudo Position gebucht wird und vortr„glich Module etc.
                            //       im AU gebucht werden, die auch in der Service Kalkulation zusammengeh”rig sind, dann
                            //         werden verlorene Systempositionen ohne Vertragsnr. diesem WV zugeordnet
                            //************************************************************************************************

                            PruefeKalkulation.RESET;
                            PruefeKalkulation.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                            PruefeKalkulation.SETFILTER(Art,'%1',PruefeKalkulation.Art::"SUP-AU");
                            PruefeKalkulation.SETFILTER("Nr.",'%1',Liefzeile."Order No.");
                            PruefeKalkulation.SETFILTER("Zeilennr.",'%1',Liefzeile."Order Line No.");
                            IF PruefeKalkulation.FINDFIRST THEN BEGIN
                              REPEAT
                                OffeneSystemPos.RESET;
                                OffeneSystemPos.SETFILTER(Art,'%1',Art::System);
                                OffeneSystemPos.SETFILTER("Artikelnr.",'%1',PruefeKalkulation."Ger„te Artikelnr.");
                                OffeneSystemPos.SETFILTER("Auftragsnr.",'%1',PruefeKalkulation."Belegnr.");
                                OffeneSystemPos.SETFILTER("Auftragszeilennr.",'%1',PruefeKalkulation."Belegzeilennr.");
                                OffeneSystemPos.SETFILTER("Wartungsvertragsnr.",'%1','');
                                IF OffeneSystemPos.FINDFIRST THEN
                                  REPEAT
                                    OffeneSystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                    OffeneSystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                                    OffeneSystemPos.MODIFY;
                                  UNTIL OffeneSystemPos.NEXT = 0;
                              UNTIL PruefeKalkulation.NEXT = 0;
                            END;

                            //************************************************************************************************
                            //         Sonderfall, wenn Basisger„t als Pseudo Position gebucht wird und mind. ein Modul
                            //      aus unseren Lieferungen stammt und alle in einer Service Kalkulation aufgestellt sind,
                            //          dann werden die verlorene Systempositionen ohne Vertragsnr. diesem WV zugeordnet
                            //************************************************************************************************

                            PruefeKalkulation.RESET;
                            PruefeKalkulation.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                            PruefeKalkulation.SETFILTER(Art,'%1',PruefeKalkulation.Art::"SUP-AU");
                            PruefeKalkulation.SETFILTER("Nr.",'%1',Liefzeile."Order No.");
                            PruefeKalkulation.SETFILTER("Zeilennr.",'%1',Liefzeile."Order Line No.");
                            IF PruefeKalkulation.FINDFIRST THEN BEGIN
                              REPEAT
                                OffeneSystemPos.RESET;
                                OffeneSystemPos.SETFILTER(Art,'%1',Art::System);
                                OffeneSystemPos.SETFILTER("Artikelnr.",'%1',PruefeKalkulation."Ger„te Artikelnr.");
                                OffeneSystemPos.SETFILTER("Nr.",'%1',PruefeKalkulation."Belegnr.");
                                OffeneSystemPos.SETFILTER("Belegzeilennr.",'%1',PruefeKalkulation."Belegzeilennr.");
                                OffeneSystemPos.SETFILTER("Wartungsvertragsnr.",'%1','');
                                IF OffeneSystemPos.FINDFIRST THEN
                                  REPEAT
                                    TempSystemPos.RESET;
                                    TempSystemPos.SETFILTER(Art,'%1',TempSystemPos.Art::Tempor„r);
                                    TempSystemPos.SETFILTER(Vormerkung,'%1',TRUE);
                                    TempSystemPos.SETFILTER("Nr.",'%1',OffeneSystemPos."Nr.");
                                    TempSystemPos.SETFILTER("Belegzeilennr.",'%1',OffeneSystemPos."Belegzeilennr.");
                                    TempSystemPos.SETFILTER("Artikelnr.",'%1',OffeneSystemPos."Artikelnr.");
                                    TempSystemPos.SETFILTER("Seriennr.",'%1',OffeneSystemPos."Seriennr.");
                                    IF TempSystemPos.FINDFIRST THEN BEGIN
                                      OffeneSystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                      OffeneSystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                                      OffeneSystemPos.MODIFY;
                                    END;
                                  UNTIL OffeneSystemPos.NEXT = 0;
                              UNTIL PruefeKalkulation.NEXT = 0;
                            END;

                            //************************************************************************************************
                            //                         Anlage der Fhrungsrolle anhand des Debitoren
                            //************************************************************************************************

                            DebKontaktBez.RESET;
                            DebKontaktBez.SETFILTER("Business Relation Code",'%1','DEB');
                            DebKontaktBez.SETFILTER("No.",'%1',Liefkopf."Sell-to Customer No.");
                            IF DebKontaktBez.FINDFIRST THEN BEGIN
                              Ansprech.RESET;
                              Ansprech.SETFILTER("Kampagnennr.",'%1',Wartung."Wartungsvertragsnr.");
                              Ansprech.SETFILTER("Kontaktnr.",'%1',DebKontaktBez."Contact No.");
                              IF NOT Ansprech.FINDFIRST THEN BEGIN
                                Ansprech.INIT;
                                Ansprech.VALIDATE("Kontaktnr.",DebKontaktBez."Contact No.");
                                Ansprech."Kampagnennr." := Wartung."Wartungsvertragsnr.";
                                Ansprech.Fhrungsrolle := TRUE;
                                Ansprech.INSERT;
                              END;
                            END;
                          END;
                        END;
                      END;

                      //***************************************************************************************************
                      //                                    Anlage der Systempositionen
                      //***************************************************************************************************

                      SystemPos.RESET;
                      SystemPos.SETFILTER(Art,'%1',SystemPos.Art::System);
                      SystemPos.SETFILTER("Nr.",'%1',HoleTempLizenzTab."Nr.");
                      SystemPos.SETFILTER("Belegzeilennr.",'%1',HoleTempLizenzTab."Belegzeilennr.");
                      SystemPos.SETFILTER("Artikelnr.",'%1',HoleTempLizenzTab."Artikelnr.");
                      SystemPos.SETFILTER("Seriennr.",'%1',HoleTempLizenzTab."Seriennr.");
                      IF NOT SystemPos.FINDFIRST THEN BEGIN
                        SystemPos.RESET;
                        SystemPos.INIT;
                        SystemPos.Art := SystemPos.Art::System;
                        SystemPos."Nr." := HoleTempLizenzTab."Nr.";
                        SystemPos.INSERT(TRUE);
                        SystemPos.Belegdatum := Liefkopf."Posting Date";
                        SystemPos.VALIDATE("Artikelnr.",HoleTempLizenzTab."Artikelnr.");
                        SystemPos."Seriennr." := HoleTempLizenzTab."Seriennr.";
                        SystemPos."Debitornr." := Liefkopf."Sell-to Customer No.";
                        SystemPos.Debitorname := Liefkopf."Sell-to Customer Name";
                        SystemPos.Menge := HoleTempLizenzTab.Menge;
                        SystemPos.Kontakt := Liefkopf."Sell-to Contact";
                        SystemPos."Name 2" := Liefkopf."Sell-to Customer Name 2";
                        SystemPos.Adresse := Liefkopf."Sell-to Address";
                        SystemPos."Adresse 2" := Liefkopf."Sell-to Address 2";
                        SystemPos."PLZ-Code" := Liefkopf."Sell-to Post Code";
                        SystemPos.Ort := Liefkopf."Sell-to City";
                        SystemPos."System Projektinfos" := Liefzeile."System Projektinfos";
                        SystemPos."Auftragsnr." := HoleTempLizenzTab."Urspr. Auftragsnr.";
                        SystemPos."Auftragszeilennr." := HoleTempLizenzTab."Urspr. Auftragszeilennr.";
                        SystemPos."Belegzeilennr." := HoleTempLizenzTab."Belegzeilennr.";
                        SystemPos.Ursprungsland := HoleTempLizenzTab.Ursprungsland;
                        SystemPos."Product Key" := HoleTempLizenzTab."Product Key";
                        SystemPos."Seriennr. 2" := HoleTempLizenzTab."Seriennr. 2";
                        SystemPos.Fremderwerb := HoleTempLizenzTab.Fremderwerb;
                        SystemPos."Wartungsvertragsnr." := wartungsnr;
                        SystemPos."Hauptwartungsvertragsnr." := hauptwartungsnr;
                        IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN BEGIN
                          SystemPos.SOR := TRUE;
                          SystemPos."SOR Option" := Liefkopf."Payment Terms Code";
                        END;

                        IF Wartung.GET(SystemPos."Wartungsvertragsnr.") AND (SystemPos."Wartungsvertragsnr." <> '') THEN
                          Wartung.MODIFY(TRUE)
                        ELSE BEGIN
                          //Nachtr„glich Service von LS + Pseudo Einzel Modul z.B., damit die Pos. zugeordnet werden kann
                          ZuordnungBasissystem.RESET;
                          ZuordnungBasissystem.SETFILTER(Art,'%1',ZuordnungBasissystem.Art::"SUP-AU");
                          ZuordnungBasissystem.SETFILTER("Nr.",'%1',Liefzeile."Order No.");
                          ZuordnungBasissystem.SETFILTER("Zeilennr.",'%1',Liefzeile."Order Line No.");
                          ZuordnungBasissystem.SETFILTER(Basisger„t,'%1',TRUE);
                          IF ZuordnungBasissystem.FINDFIRST THEN BEGIN
                            Wartung.RESET;
                            Wartung.SETFILTER("Lieferscheinnr.",'%1',ZuordnungBasissystem."Belegnr.");
                            Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',ZuordnungBasissystem."Belegzeilennr.");
                            IF Wartung.FINDFIRST THEN BEGIN
                              SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                              SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                              Wartung.MODIFY(TRUE);
                            END;
                          END;
                        END;

                        //Sonderfall, wenn einzelne Pseudo Module ohne Basisger„t zu einem bestehenden
                        //Wartungsvertrag hinzugefgt werden sollen
                        IF (SystemPos."Wartungsvertragsnr." = '') AND (KalkulationHolen."Wartungsvertragsnr." <> '') THEN BEGIN
                          SystemPos."Wartungsvertragsnr." := KalkulationHolen."Wartungsvertragsnr.";
                          SystemPos."Hauptwartungsvertragsnr." := KalkulationHolen."Wartungsvertragsnr.";
                        END;

                        IF (Artikel.GET(HoleTempLizenzTab."Artikelnr.")) AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS')
                        OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                          SystemPos.Basisger„t := TRUE;
                          IF Wartung.GET(SystemPos."Wartungsvertragsnr.") THEN BEGIN
                            Wartung.Basisger„t := SystemPos."Artikelnr.";
                            IF Wartung.Klasse = Wartung.Klasse::Mehrger„te THEN
                              Wartung.Volumen += 1;
                            Wartung.MODIFY(TRUE);
                          END;
                        END;

                        SystemPos.MODIFY;

                        //***************************************************************************************************
                        //                       Zugeh”rigkeit der Positionen untereinander ermitteln
                        //***************************************************************************************************

                        SystemPos."Geh”rt zu Lfd. Nr." := SystemZugeh”rigkeitErmitteln(Liefzeile."Order No.",SystemPos."Lfd. Nr.",
                                                          SystemPos."Wartungsvertragsnr.");

                        SystemPos.MODIFY;
                        SystemPos.FehlendeSystemZugehoerigkeit(SystemPos."Wartungsvertragsnr.",SystemPos."Lfd. Nr.");

                        IF Wartung.GET(SystemPos."Wartungsvertragsnr.") THEN BEGIN
                          Wartung."Kampagnennr." := GetCampaignNoFromSalesDoc(SystemPos."Auftragsnr.",SystemPos."Auftragszeilennr.");
                          Wartung.MODIFY;
                        END;

                        COMMIT;
                      END ELSE
                        IF KalkulationHolen.Basisger„t = TRUE THEN
                          SystemPos.FehlendeVertragsZugehoerigkeit(KalkulationHolen."Nr.",KalkulationHolen."Zeilennr.",
                          KalkulationHolen."Belegnr.",KalkulationHolen."Belegzeilennr.",SystemPos."Wartungsvertragsnr.");

                      COMMIT;
                    UNTIL HoleTempLizenzTab.NEXT = 0;
                UNTIL KalkulationHolen.NEXT = 0;
            END;
          UNTIL Liefzeile.NEXT = 0;
      END;
    END;

    PROCEDURE CreateServiceFromSalesHeader@1140009(VAR ShipmentNo@1140001 : Code[20];NichtDrucken@1140000 : Boolean);
    VAR
      Vkliefkopf@1140016 : Record 110;
      Vkliefzeile@1140015 : Record 111;
      Wartung@1140020 : Record 50011;
      GetDruckWartung@1140025 : Record 50011;
      GetDruckAenderung@1140005 : Record 50024;
      KalkulationHolen@1140019 : Record 50027;
      SystemPos@1140024 : Record 50024;
      Ansprech@1140021 : Record 50005;
      DebKontaktBez@1140022 : Record 5054;
      HoleLiefZeile@1140017 : Record 111;
      Beleghistorie@1000000000 : Record 50008;
      ShipmentHeader@1140014 : Record 110;
      ShipmentLine@1140013 : Record 111;
      Debitor@1140029 : Record 18;
      Champs@1140018 : Record 50028;
      Artikel@1140012 : Record 27;
      Kreditor@1140031 : Record 23;
      SeriennrVerfolgung@1140011 : Record 32;
      LizenzTab@1140010 : Record 50024;
      HoleTempLizenzTab@1140008 : Record 50024;
      SalesHeader@1000000001 : Record 36;
      SalesHeaderArchive@1000000002 : Record 5107;
      v_verlaengerung_start@1140003 : Date;
      v_verlaengerung_ablauf@1140026 : Date;
      zudrucken@1140004 : Boolean;
      nur_intern_drucken@1140030 : Boolean;
      ek_W„hrung@1140007 : Code[20];
      letzte_wartungsnr@1140006 : Code[20];
      ACTS@1140027 : Boolean;
      ACHAT@1140028 : Boolean;
      CHAMPS_PARTNER@1140032 : Boolean;
      i@1140002 : Integer;
      v_laufzeit@1140009 : Decimal;
      preislisten_kalkulation@1000000003 : 'neu,alt';
    BEGIN
      //***************************************************************************************************
      //            01.03.11 ST - Das System holt sich nach Erstellung des Lieferscheins die
      //           entsprechenden Seriennr. aus den Artikelposten, wenn Wartung gebucht wurde
      //***************************************************************************************************

      zudrucken := FALSE;

      Vkliefkopf.RESET;
      Vkliefkopf.SETFILTER("No.",'%1',ShipmentNo);
      IF Vkliefkopf.FINDLAST THEN BEGIN
        Vkliefzeile.RESET;
        Vkliefzeile.SETFILTER("Document No.",'%1',Vkliefkopf."No.");
        Vkliefzeile.SETFILTER(Type,'%1',Vkliefzeile.Type::Item);
        Vkliefzeile.SETFILTER(Quantity,'>%1',0);
        IF Vkliefzeile.FINDFIRST THEN
          REPEAT
            //***********************************************************************************************
            //        Prft ob Artikel die Kennzeichnung "Software Upgrade Protection" besitzt
            //***********************************************************************************************
              IF Artikel.GET(Vkliefzeile."No.") AND (Artikel."Software Upgrade Protection" = TRUE) THEN BEGIN

                IF (Artikel.Artikelgruppe = 'ACTS') OR (Artikel.Artikelgruppe = 'ACTS_AHR')
                OR (Artikel.Artikelgruppe = 'ACTS_SCHAEFFLER') OR (Artikel.Artikelgruppe = 'ACTS_MSS_SCHAEFFLER')
                OR (Artikel.Artikelgruppe = 'ACTS_MSS') THEN
                  ACTS := TRUE
                ELSE
                  ACTS := FALSE;

                IF (Artikel.Artikelgruppe = 'ACHAT') OR (Artikel.Artikelgruppe = 'ACTS/ACHAT') THEN
                  ACHAT := TRUE
                ELSE
                  ACHAT := FALSE;

                IF Artikel.Artikelgruppe = 'CHAMPS_PARTNER' THEN
                  CHAMPS_PARTNER := TRUE
                ELSE
                  CHAMPS_PARTNER := FALSE;

                //Bestimmt mit welcher W„hrung Service eingekauft werden soll, fr Euro gleich leer setzen
                //In den Lieferscheinen gibt es nur Currency Code als FlowField Lookup auf den Vekaufslieferkopf
                IF Kreditor.GET(Artikel."Vendor No.") THEN
                  ek_W„hrung := Kreditor."Currency Code"
                ELSE
                  ek_W„hrung := 'USD';

                //Bestimmung, welche Preisliste als Grundlage dient
                IF SalesHeader.GET(SalesHeader."Document Type"::Order,Vkliefkopf."Order No.") THEN
                  preislisten_kalkulation := SalesHeader."Preislisten Kalkulation"
                ELSE BEGIN
                  CLEAR(SalesHeaderArchive);
                  SalesHeaderArchive.SETRANGE("Document Type",SalesHeaderArchive."Document Type"::Order);
                  SalesHeaderArchive.SETRANGE("No.",Vkliefkopf."Order No.");
                  IF SalesHeaderArchive.FINDLAST THEN
                    preislisten_kalkulation := SalesHeader."Preislisten Kalkulation";
                END;

                KalkulationHolen.RESET;
                KalkulationHolen.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
                KalkulationHolen.SETFILTER(Art,'%1',KalkulationHolen.Art::"SUP-AU");
                KalkulationHolen.SETFILTER("Nr.",'%1',Vkliefzeile."Order No.");
                KalkulationHolen.SETFILTER("Zeilennr.",'%1',Vkliefzeile."Order Line No.");
                IF KalkulationHolen.FINDFIRST THEN
                  REPEAT

                    //*****************************************************************************************
                    //              Prfung Fall #1 SUP Artikel verweist auf Auftrags Position
                    //*****************************************************************************************

                    IF (KalkulationHolen."Nachtr„gliche Service Order" = FALSE) AND (KalkulationHolen.Fremderwerb = FALSE) THEN BEGIN
                      //Lieferschein durchsuchen, welche Positionen sich auf diesen Service Artikel beziehen
                      HoleLiefZeile.RESET;
                      HoleLiefZeile.SETFILTER(Type,'%1',HoleLiefZeile.Type::Item);
                      HoleLiefZeile.SETFILTER("Document No.",'%1',Vkliefzeile."Document No.");
                      HoleLiefZeile.SETFILTER("Line No.",'%1',KalkulationHolen."Belegzeilennr.");
                      HoleLiefZeile.SETFILTER(Quantity,'>%1',0);
                      IF HoleLiefZeile.FINDFIRST THEN
                        REPEAT
                          SeriennrVerfolgung.RESET;
                          //SeriennrVerfolgung.SETFILTER("Item Tracking",'%1',SeriennrVerfolgung."Item Tracking"::"Serial No.");
                          SeriennrVerfolgung.SETFILTER("Document No.",'%1',HoleLiefZeile."Document No.");
                          SeriennrVerfolgung.SETFILTER("Document Line No.",'%1',HoleLiefZeile."Line No.");
                          IF SeriennrVerfolgung.FINDFIRST THEN BEGIN
                            FOR i := 1 TO (Vkliefzeile.Quantity * KalkulationHolen."Menge kalk.") DO BEGIN
                              LizenzTab.RESET;
                              LizenzTab.SETFILTER(Art,'%1',LizenzTab.Art::Service);
                              LizenzTab.SETFILTER("Nr.",'%1',Vkliefzeile."Document No.");
                              LizenzTab.SETFILTER("Belegzeilennr.",'%1',Vkliefzeile."Line No.");
                              LizenzTab.SETFILTER("Urspr. Auftragsnr.",'%1',KalkulationHolen."Belegnr.");
                              LizenzTab.SETFILTER("Urspr. Auftragszeilennr.",'%1',KalkulationHolen."Belegzeilennr.");
                              LizenzTab.SETFILTER("SUP Artikelnr.",'%1',Vkliefzeile."No.");
                              LizenzTab.SETFILTER("Artikelnr.",'%1',SeriennrVerfolgung."Item No.");
                              LizenzTab.SETFILTER("Seriennr.",'%1',SeriennrVerfolgung."Serial No.");
                              IF NOT LizenzTab.FINDFIRST THEN BEGIN
                                LizenzTab.RESET;
                                LizenzTab.INIT;
                                LizenzTab.Art := LizenzTab.Art::Service;
                                LizenzTab."Nr." := Vkliefzeile."Document No.";
                                LizenzTab.Verl„ngerung := FALSE;
                                LizenzTab.INSERT(TRUE);
                                LizenzTab."Debitornr." := Vkliefkopf."Sell-to Customer No.";
                                //Adresse aus Lieferschein holen
                                LizenzTab.Debitorname := Vkliefkopf."Sell-to Customer Name";
                                LizenzTab."Name 2" := Vkliefkopf."Sell-to Customer Name 2";
                                LizenzTab.Adresse := Vkliefkopf."Sell-to Address";
                                LizenzTab."Adresse 2" := Vkliefkopf."Sell-to Address 2";
                                LizenzTab.Ort := Vkliefkopf."Sell-to City";
                                LizenzTab."PLZ-Code" := Vkliefkopf."Sell-to Post Code";
                                LizenzTab.Kontakt := Vkliefkopf.Kontaktperson;
                                LizenzTab."SUP Artikelnr." := Vkliefzeile."No.";
                                LizenzTab.Basisger„t := KalkulationHolen.Basisger„t;
                                LizenzTab."Abw. Ger„te Artikelnr." := KalkulationHolen."Abw. Ger„te Artikelnr.";
                                LizenzTab.VALIDATE("Artikelnr.",SeriennrVerfolgung."Item No.");
                                LizenzTab.VALIDATE(Lizenzdatum,WartungsStartErmitteln(LizenzTab."SUP Artikelnr.",
                                KalkulationHolen.Startdatum, SeriennrVerfolgung."Posting Date",
                                KalkulationHolen."Wartungsvertragsnr.",
                                KalkulationHolen."Laufzeit ab Buchungsdatum"));
                                LizenzTab.Belegdatum := SeriennrVerfolgung."Posting Date";
                                LizenzTab."Urspr. Buchungsdatum" := SeriennrVerfolgung."Posting Date";
                                LizenzTab.Serviceleistung := 'WARTUNGSVERTRAG';
                                LizenzTab."Belegzeilennr." := Vkliefzeile."Line No.";
                                LizenzTab.Menge := SeriennrVerfolgung.Quantity * (-1);
                                LizenzTab."Seriennr." := SeriennrVerfolgung."Serial No.";
                                LizenzTab.Benutzername := LizenzTab.Benutzername_generieren(SeriennrVerfolgung."Item No.",
                                                          LizenzTab."SUP Artikelnr.",SeriennrVerfolgung."Serial No.",'',0);
                                LizenzTab.Passwort := LizenzTab.Passwort_generieren(LizenzTab."Artikelnr."
                                ,LizenzTab.Benutzername,LizenzTab."Seriennr.",LizenzTab.Lizenzdatum);
                                IF LizenzTab."SUP Artikelnr." = 'CHAMPS-RE_INSTATE#01' THEN
                                  LizenzTab."Service Artikelnr." := 'CHAMPS-RE_INSTATEMENT_FEE';
                                LizenzTab."Auftragsnr." := Vkliefzeile."Order No.";
                                LizenzTab."Auftragszeilennr." := Vkliefzeile."Order Line No.";
                                LizenzTab.Ursprungsland := SeriennrVerfolgung.Ursprungsland;
                                LizenzTab."Urspr. Auftragsnr." := Vkliefzeile."Order No.";
                                //urspr. Zeilennr. immer von der Zeilennr. des Ger„tes ableiten
                                LizenzTab."Urspr. Auftragszeilennr." := SeriennrVerfolgung."Document Line No.";
                                LizenzTab."Urspr. Lieferscheinnr." := HoleLiefZeile."Document No.";
                                LizenzTab."Urspr. Lieferscheinzeilennr." := HoleLiefZeile."Line No.";
                                LizenzTab."Product Key" := SeriennrVerfolgung."Product Key";
                                LizenzTab."Seriennr. 2" := SeriennrVerfolgung."Serial No. 2";
                                //Zuordnung der Eingangs-BET
                                ItemLedgerEntryVK.RESET;
                                ItemLedgerEntryVK.SETRANGE("Serial No.", SeriennrVerfolgung."Serial No.");
                                ItemLedgerEntryVK.SETRANGE("Document No.",HoleLiefZeile."Document No.");
                                ItemLedgerEntryVK.SETRANGE("Document Line No.",HoleLiefZeile."Line No.");
                                IF ItemLedgerEntryVK.FINDFIRST THEN BEGIN
                                  ItemAppEntry.SETRANGE("Outbound Item Entry No.",ItemLedgerEntryVK."Entry No.");
                                  IF ItemAppEntry.FINDFIRST THEN BEGIN
                                    ItemLedgerEntryEK.SETRANGE("Entry No.",ItemAppEntry."Inbound Item Entry No.");
                                    IF ItemLedgerEntryEK.FINDFIRST THEN BEGIN
                                      PurchShipHeader.SETRANGE("No.",ItemLedgerEntryEK."Document No.");
                                      IF PurchShipHeader.FINDFIRST THEN
                                        LizenzTab."Eingangs BET" := PurchShipHeader."Order No.";
                                    END;
                                  END;
                                END;
                                LizenzTab."System Projektinfos" := Vkliefzeile."System Projektinfos";
                                LizenzTab.VALIDATE("Dauer Serviceleistung",WartungsLaufzeitErmitteln(Vkliefzeile."No.",
                                KalkulationHolen.Laufzeit));
                                IF KalkulationHolen.Ablaufdatum <> 0D THEN
                                  LizenzTab."Ablaufdatum Serviceleistung" := KalkulationHolen.Ablaufdatum;

                                LizenzTab."Service Artikelnr." := ServiceArtikelnrErmitteln(HoleLiefZeile."No.",
                                                                  Vkliefzeile."No.",ek_W„hrung,preislisten_kalkulation);
                                LizenzTab."Service DC" := ServicePreiseNeuKalkulieren(HoleLiefZeile."No.",Vkliefzeile."No.",
                                                          KalkulationHolen.Laufzeit,'DC',FALSE,ek_W„hrung,
                                                          KalkulationHolen."Quotenr.",preislisten_kalkulation);
                                LizenzTab."Service MSRP" := ServicePreiseNeuKalkulieren(HoleLiefZeile."No.",
                                                            Vkliefzeile."No.",KalkulationHolen.Laufzeit,'MSRP',
                                                            FALSE,ek_W„hrung,KalkulationHolen."Quotenr.",preislisten_kalkulation);
                                LizenzTab."Quotenr." := KalkulationHolen."Quotenr.";
                                LizenzTab."Service W„hrungscode" := ek_W„hrung;
                                LizenzTab."Service bereits bestellt" := Vkliefzeile."Service bereits bestellt";

                                //Zuordnung der Serviceposition in den entsprechenden Wartungs- bzw. Systemvertrag
                                SystemPos.RESET;
                                SystemPos.SETFILTER(Art,'%1',SystemPos.Art::System);
                                SystemPos.SETFILTER(Inaktiv,'%1',FALSE);
                                SystemPos.SETFILTER("Nr.",'%1',Vkliefzeile."Document No.");
                                SystemPos.SETFILTER("Belegzeilennr.",'%1',SeriennrVerfolgung."Document Line No.");
                                SystemPos.SETFILTER("Artikelnr.",'%1',SeriennrVerfolgung."Item No.");
                                SystemPos.SETFILTER("Seriennr.",'%1', SeriennrVerfolgung."Serial No.");
                                IF SystemPos.FINDFIRST THEN BEGIN
                                  Wartung.RESET;
                                  Wartung.SETFILTER("Wartungsvertragsnr.",'%1',SystemPos."Wartungsvertragsnr.");
                                  IF Wartung.FINDFIRST THEN
                                    EndkundenInfoUpdate(Vkliefkopf,Wartung);
                                  Wartung.RESET;
                                  Wartung.SETFILTER("Wartungsvertragsnr.",'%1',SystemPos."Wartungsvertragsnr.");
                                  IF Wartung.FINDFIRST THEN BEGIN
                                    LizenzTab."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                    LizenzTab."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";

                                    //Prft auf Vertragsverl„ngerung, auch wenn die Pos. nachtr„glich hinzu kommt und
                                    //noch nicht verl„ngert wird - Angleichung Laufzeit an bestehende verl„ngerte Pos.
                                    v_verlaengerung_start := PrfeLizenzVerl„ngerung(LizenzTab."SUP Artikelnr.",
                                    LizenzTab."Urspr. Lieferscheinnr.",LizenzTab."Urspr. Lieferscheinzeilennr.",
                                    LizenzTab."Seriennr.",'',LizenzTab.Fremderwerb,KalkulationHolen.Laufzeit,0,
                                    KalkulationHolen."Wartungsvertragsnr.");
                                    IF v_verlaengerung_start <> 0D THEN BEGIN
                                      LizenzTab.Verl„ngerung := PrfeServiceVerl„ngerung(LizenzTab."SUP Artikelnr.",
                                      LizenzTab."Urspr. Lieferscheinnr.",LizenzTab."Urspr. Lieferscheinzeilennr.",
                                      LizenzTab."Seriennr.",LizenzTab."Product Key");
                                      IF (LizenzTab.Verl„ngerung = FALSE) AND (KalkulationHolen.Startdatum <> 0D)
                                      AND (KalkulationHolen."Laufzeit ab Buchungsdatum" = FALSE) THEN
                                        LizenzTab.VALIDATE(Lizenzdatum,KalkulationHolen.Startdatum)
                                      ELSE
                                        IF LizenzTab.Verl„ngerung = TRUE THEN
                                          IF (v_verlaengerung_start > Vkliefzeile."Posting Date")
                                          OR (KalkulationHolen."Laufzeit ab Buchungsdatum" = FALSE) THEN
                                            LizenzTab.VALIDATE(Lizenzdatum,CALCDATE('+1T',v_verlaengerung_start));

                                      LizenzTab.VALIDATE("Dauer Serviceleistung");
                                      v_verlaengerung_ablauf := PrfeLizenzVerl„ngerung(
                                      LizenzTab."SUP Artikelnr.",LizenzTab."Urspr. Lieferscheinnr."
                                      ,LizenzTab."Urspr. Lieferscheinzeilennr.",LizenzTab."Seriennr.",'',
                                      LizenzTab.Fremderwerb,KalkulationHolen.Laufzeit,1,
                                      KalkulationHolen."Wartungsvertragsnr.");
                                      IF v_verlaengerung_ablauf <> 0D THEN
                                        LizenzTab."Ablaufdatum Serviceleistung" := v_verlaengerung_ablauf;
                                    END;

                                    //Das vorgegebene Ablaufdatum bersteuert d. kalkulierte Verl„ngerungsablaufddatum
                                    IF KalkulationHolen.Ablaufdatum <> 0D THEN
                                      LizenzTab."Ablaufdatum Serviceleistung" := KalkulationHolen.Ablaufdatum;

                                    IF (KalkulationHolen."Beachte Startdatum" = TRUE) AND (KalkulationHolen.Startdatum <> 0D) THEN BEGIN
                                      LizenzTab.Lizenzdatum := KalkulationHolen.Startdatum;
                                      IF KalkulationHolen.Ablaufdatum = 0D THEN
                                        LizenzTab.VALIDATE("Dauer Serviceleistung");
                                    END ELSE
                                      LizenzTab.Lizenzdatum := LizenzdatumAngleichen(LizenzTab.Lizenzdatum,
                                                              LizenzTab."Ablaufdatum Serviceleistung",
                                                              LizenzTab."Dauer Serviceleistung");

                                    IF (KalkulationHolen."Wartungsvertragsnr." = '')
                                    AND ((LizenzTab.Benutzername <> '')
                                    OR (LizenzTab."SUP Artikelnr." = 'CHAMPS-SUPP-8X5/YR')
                                    OR (ACTS = TRUE) OR (ACHAT = TRUE))
                                    AND (AllowContractStatusRefresh(LizenzTab."SUP Artikelnr.")) THEN BEGIN
                                      Wartung.Status := Wartung.Status::Auftrag;
                                      IF ACTS THEN
                                        Wartung.Status := Wartung.Status::ACTS;
                                      IF ACHAT THEN
                                        Wartung.Status := Wartung.Status::ACHAT;
                                      IF CHAMPS_PARTNER THEN
                                        Wartung.Status := Wartung.Status::"Champs Partner";
                                      Wartung."Auftragsnr. Service" := Vkliefzeile."Order No.";
                                      Wartung."Auftragszeilennr. Service" := Vkliefzeile."Order Line No.";
                                      Wartung."Lieferscheinnr. Service" := Vkliefzeile."Document No.";
                                      Wartung."LS Zeilennr. Service" := Vkliefzeile."Line No.";
                                      Wartung.Belegdatum := Vkliefkopf."Posting Date";
                                      IF Wartung.Vertragsablaufdatum = 0D THEN
                                        Wartung.Startdatum := LizenzTab.Lizenzdatum;
                                      IF Wartung.Vertragsablaufdatum < LizenzTab."Ablaufdatum Serviceleistung" THEN
                                        Wartung.Vertragsablaufdatum := LizenzTab."Ablaufdatum Serviceleistung";
                                      IF LizenzTab.Basisger„t = TRUE THEN BEGIN
                                        Wartung.Basisger„t := LizenzTab."Artikelnr.";
                                        IF (LizenzTab.Benutzername <> '') AND (ACTS = FALSE)
                                        AND (CHAMPS_PARTNER = FALSE) THEN
                                          LizenzTab."Zu exportieren" := TRUE;
                                      END;
                                      Wartung."Kampagnennr." := GetCampaignNoFromSalesDoc(LizenzTab."Auftragsnr.",LizenzTab."Auftragszeilennr.");
                                      Wartung.MODIFY(TRUE);
                                    END;
                                    PrfeBetreuerWechsel(Wartung."Wartungsvertragsnr.",Wartung."Debitornr.",
                                                        LizenzTab."Debitornr.");
                                  END ELSE BEGIN
                                    MESSAGE(Text022,Vkliefzeile."No.",Vkliefzeile."Line No.");
                                  END;
                                END ELSE BEGIN
                                  MESSAGE(Text022,Vkliefzeile."No.",Vkliefzeile."Line No.");
                                END;

                                LizenzTab."Geh”rt zu Lfd. Nr." := ServiceZugeh”rigkeitErmitteln(Vkliefzeile."Order No.",LizenzTab."Lfd. Nr.",
                                                                  LizenzTab."Wartungsvertragsnr.");
                                LizenzTab.MODIFY;
                                zudrucken := TRUE;
                              END;
                              SeriennrVerfolgung.NEXT(1);
                            END;
                          END;
                        UNTIL HoleLiefZeile.NEXT = 0;
                    END;

                    //***************************************************************************************************
                    //              Prfung Fall #2 Service Artikel verweist auf eine Lieferschein Position.
                    //       Es kann sich hierbei um Verl„ngerungen handeln, wenn bereits ein Teil der Seriennr. in
                    //         einem Wartungsvertrag auftauchen oder um das nachtr„gliche Generieren von Lizenzen
                    //***************************************************************************************************

                    IF (KalkulationHolen."Nachtr„gliche Service Order" = TRUE) AND (KalkulationHolen.Fremderwerb = FALSE) THEN BEGIN
                      HoleTempLizenzTab.RESET;
                      HoleTempLizenzTab.SETFILTER(Art,'%1',HoleTempLizenzTab.Art::Tempor„r);
                      HoleTempLizenzTab.SETFILTER("Nr.",'%1',KalkulationHolen."Belegnr.");
                      HoleTempLizenzTab.SETFILTER("Belegzeilennr.",'%1',KalkulationHolen."Belegzeilennr.");
                      HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',Vkliefzeile."Order No.");
                      HoleTempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',Vkliefzeile."Order Line No.");
                      HoleTempLizenzTab.SETFILTER(Vormerkung,'%1',TRUE);
                      IF HoleTempLizenzTab.FINDFIRST THEN BEGIN
                        REPEAT
                          LizenzTab.RESET;
                          LizenzTab.SETFILTER(Art,'%1',LizenzTab.Art::Service);
                          LizenzTab.SETFILTER("Nr.",'%1',Vkliefzeile."Document No.");
                          LizenzTab.SETFILTER("Belegzeilennr.",'%1',Vkliefzeile."Line No.");
                          LizenzTab.SETFILTER("Urspr. Lieferscheinnr.",'%1',KalkulationHolen."Belegnr.");
                          LizenzTab.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',KalkulationHolen."Belegzeilennr.");
                          LizenzTab.SETFILTER("SUP Artikelnr.",'%1',Vkliefzeile."No.");
                          LizenzTab.SETFILTER("Artikelnr.",'%1',HoleTempLizenzTab."Artikelnr.");
                          LizenzTab.SETFILTER("Seriennr.",'%1',HoleTempLizenzTab."Seriennr.");
                          IF NOT LizenzTab.FINDFIRST THEN BEGIN
                            LizenzTab.RESET;
                            LizenzTab.INIT;
                            LizenzTab.TRANSFERFIELDS(HoleTempLizenzTab);
                            LizenzTab.Art := LizenzTab.Art::Service;
                            LizenzTab."Nr." := Vkliefzeile."Document No.";
                            LizenzTab.Verl„ngerung := FALSE;
                            LizenzTab.INSERT(TRUE);
                            //Adresse aus Lieferschein holen
                            LizenzTab.Debitorname := Vkliefkopf."Sell-to Customer Name";
                            LizenzTab."Name 2" := Vkliefkopf."Sell-to Customer Name 2";
                            LizenzTab.Adresse := Vkliefkopf."Sell-to Address";
                            LizenzTab."Adresse 2" := Vkliefkopf."Sell-to Address 2";
                            LizenzTab.Ort := Vkliefkopf."Sell-to City";
                            LizenzTab."PLZ-Code" := Vkliefkopf."Sell-to Post Code";
                            LizenzTab.Kontakt := Vkliefkopf.Kontaktperson;
                            LizenzTab."SUP Artikelnr." := Vkliefzeile."No.";
                            LizenzTab."Belegzeilennr." := Vkliefzeile."Line No.";
                            LizenzTab.Basisger„t := KalkulationHolen.Basisger„t;
                            LizenzTab."Abw. Ger„te Artikelnr." := KalkulationHolen."Abw. Ger„te Artikelnr.";
                            LizenzTab.VALIDATE(Lizenzdatum,WartungsStartErmitteln(LizenzTab."SUP Artikelnr.",
                            KalkulationHolen.Startdatum,Vkliefkopf."Posting Date",
                            KalkulationHolen."Wartungsvertragsnr.",KalkulationHolen."Laufzeit ab Buchungsdatum"));
                            LizenzTab.Belegdatum := Vkliefzeile."Posting Date";
                            LizenzTab.Benutzername := LizenzTab.Benutzername_generieren(LizenzTab."Artikelnr.",
                                                      LizenzTab."SUP Artikelnr.",LizenzTab."Seriennr.",
                                                      KalkulationHolen."Belegnr.",KalkulationHolen."Belegzeilennr.");
                            LizenzTab.Passwort := LizenzTab.Passwort_generieren(LizenzTab."Artikelnr.",
                                                  LizenzTab.Benutzername,LizenzTab."Seriennr.",LizenzTab.Lizenzdatum);

                            IF LizenzTab."SUP Artikelnr." = 'CHAMPS-RE_INSTATE#01' THEN
                              LizenzTab."Service Artikelnr." := 'CHAMPS-RE_INSTATEMENT_FEE';

                            LizenzTab."Urspr. Lieferscheinnr." := KalkulationHolen."Belegnr.";
                            LizenzTab."Urspr. Lieferscheinzeilennr." := KalkulationHolen."Belegzeilennr.";
                            IF ShipmentHeader.GET(KalkulationHolen."Belegnr.") THEN
                              LizenzTab."Urspr. Buchungsdatum" := ShipmentHeader."Posting Date"
                            ELSE BEGIN
                              Beleghistorie.RESET;
                              Beleghistorie.SETRANGE(Belegart,Beleghistorie.Belegart::"Sales Shipment");
                              Beleghistorie.SETRANGE("Belegnr.",KalkulationHolen."Belegnr.");
                              IF Beleghistorie.FINDFIRST THEN
                                LizenzTab."Urspr. Buchungsdatum" := Beleghistorie.Belegdatum;
                            END;
                            IF LizenzTab."SUP Artikelnr." = 'EXTD-HW-WARR/YR' THEN
                              LizenzTab.VALIDATE(Lizenzdatum,CALCDATE('1J',LizenzTab."Urspr. Buchungsdatum"));
                            LizenzTab."System Projektinfos" := Vkliefzeile."System Projektinfos";
                            LizenzTab.VALIDATE("Dauer Serviceleistung",WartungsLaufzeitErmitteln(Vkliefzeile."No.",
                            KalkulationHolen.Laufzeit));
                            IF KalkulationHolen.Ablaufdatum <> 0D THEN
                              LizenzTab."Ablaufdatum Serviceleistung" := KalkulationHolen.Ablaufdatum;

                            LizenzTab."Service Artikelnr." := ServiceArtikelnrErmitteln(LizenzTab."Artikelnr.",
                                                              Vkliefzeile."No.",ek_W„hrung,preislisten_kalkulation);

                            LizenzTab."Service DC" := ServicePreiseNeuKalkulieren(LizenzTab."Artikelnr.",Vkliefzeile."No.",
                                                      KalkulationHolen.Laufzeit,'DC',FALSE,ek_W„hrung,
                                                      KalkulationHolen."Quotenr.",preislisten_kalkulation);
                            LizenzTab."Service MSRP" := ServicePreiseNeuKalkulieren(LizenzTab."Artikelnr.",Vkliefzeile."No.",
                                                        KalkulationHolen.Laufzeit,'MSRP',FALSE,ek_W„hrung,
                                                        KalkulationHolen."Quotenr.",preislisten_kalkulation);
                            LizenzTab."Quotenr." := KalkulationHolen."Quotenr.";
                            LizenzTab."Service W„hrungscode" := ek_W„hrung;
                            LizenzTab."Service bereits bestellt" := Vkliefzeile."Service bereits bestellt";

                            //Zuordnung der Serviceposition in den entsprechenden Wartungs- bzw. Systemvertrag
                            SystemPos.RESET;
                            SystemPos.SETFILTER(Art,'%1',SystemPos.Art::System);
                            SystemPos.SETFILTER(Inaktiv,'%1',FALSE);
                            SystemPos.SETFILTER("Nr.",'%1',KalkulationHolen."Belegnr.");
                            SystemPos.SETFILTER("Belegzeilennr.",'%1',KalkulationHolen."Belegzeilennr.");
                            SystemPos.SETFILTER("Artikelnr.",'%1',HoleTempLizenzTab."Artikelnr.");
                            SystemPos.SETFILTER("Seriennr.",'%1',HoleTempLizenzTab."Seriennr.");
                            IF SystemPos.FINDFIRST THEN BEGIN
                              Wartung.RESET;
                              Wartung.SETFILTER("Wartungsvertragsnr.",'%1',SystemPos."Wartungsvertragsnr.");
                              IF Wartung.FINDFIRST THEN
                                EndkundenInfoUpdate(Vkliefkopf,Wartung);
                              Wartung.RESET;
                              Wartung.SETFILTER("Wartungsvertragsnr.",'%1',SystemPos."Wartungsvertragsnr.");
                              IF Wartung.FINDFIRST THEN BEGIN
                                LizenzTab."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                LizenzTab."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";

                                //Prft auf Vertragsverl„ngerung, auch wenn die Pos. nachtr„glich hinzu kommt und
                                //noch nicht verl„ngert wird - Angleich Laufzeit an bestehende verl„ngerte Pos.
                                v_verlaengerung_start := PrfeLizenzVerl„ngerung(LizenzTab."SUP Artikelnr.",
                                LizenzTab."Urspr. Lieferscheinnr.",LizenzTab."Urspr. Lieferscheinzeilennr.",
                                LizenzTab."Seriennr.",'',LizenzTab.Fremderwerb,KalkulationHolen.Laufzeit,0,
                                KalkulationHolen."Wartungsvertragsnr.");
                                IF v_verlaengerung_start <> 0D THEN BEGIN
                                  LizenzTab.Verl„ngerung := PrfeServiceVerl„ngerung(LizenzTab."SUP Artikelnr.",
                                  LizenzTab."Urspr. Lieferscheinnr.",LizenzTab."Urspr. Lieferscheinzeilennr.",
                                  LizenzTab."Seriennr.",LizenzTab."Product Key");
                                  IF (LizenzTab.Verl„ngerung = FALSE) AND (KalkulationHolen.Startdatum <> 0D)
                                  AND (KalkulationHolen."Laufzeit ab Buchungsdatum" = FALSE) THEN
                                    LizenzTab.VALIDATE(Lizenzdatum,KalkulationHolen.Startdatum)
                                  ELSE
                                    IF LizenzTab.Verl„ngerung = TRUE THEN
                                      IF (v_verlaengerung_start > Vkliefzeile."Posting Date")
                                      OR (KalkulationHolen."Laufzeit ab Buchungsdatum" = FALSE) THEN
                                        LizenzTab.VALIDATE(Lizenzdatum,CALCDATE('+1T',v_verlaengerung_start));

                                  LizenzTab.VALIDATE("Dauer Serviceleistung");
                                  v_verlaengerung_ablauf := PrfeLizenzVerl„ngerung(
                                  LizenzTab."SUP Artikelnr.",LizenzTab."Urspr. Lieferscheinnr."
                                  ,LizenzTab."Urspr. Lieferscheinzeilennr.",LizenzTab."Seriennr.",'',
                                  LizenzTab.Fremderwerb,KalkulationHolen.Laufzeit,1,
                                  KalkulationHolen."Wartungsvertragsnr.");
                                  IF v_verlaengerung_ablauf <> 0D THEN
                                    LizenzTab."Ablaufdatum Serviceleistung" := v_verlaengerung_ablauf;
                                END;

                                //Das vorgegebene Ablaufdatum bersteuert d. kalkulierte Verl„ngerungsablaufddatum
                                IF KalkulationHolen.Ablaufdatum <> 0D THEN
                                  LizenzTab."Ablaufdatum Serviceleistung" := KalkulationHolen.Ablaufdatum;

                                IF (KalkulationHolen."Beachte Startdatum" = TRUE) AND (KalkulationHolen.Startdatum <> 0D) THEN BEGIN
                                  LizenzTab.Lizenzdatum := KalkulationHolen.Startdatum;
                                  IF KalkulationHolen.Ablaufdatum = 0D THEN
                                        LizenzTab.VALIDATE("Dauer Serviceleistung");
                                END ELSE
                                  LizenzTab.Lizenzdatum := LizenzdatumAngleichen(LizenzTab.Lizenzdatum,
                                                            LizenzTab."Ablaufdatum Serviceleistung",
                                                            LizenzTab."Dauer Serviceleistung");

                                IF (KalkulationHolen."Wartungsvertragsnr." = '') AND ((LizenzTab.Benutzername <> '')
                                OR (LizenzTab."SUP Artikelnr." = 'CHAMPS-SUPP-8X5/YR')
                                OR (ACTS = TRUE) OR (ACHAT = TRUE))
                                AND (AllowContractStatusRefresh(LizenzTab."SUP Artikelnr.")) THEN BEGIN
                                  Wartung.Status := Wartung.Status::Auftrag;
                                  IF ACTS THEN
                                    Wartung.Status := Wartung.Status::ACTS;
                                  IF ACHAT THEN
                                    Wartung.Status := Wartung.Status::ACHAT;
                                  IF CHAMPS_PARTNER THEN
                                    Wartung.Status := Wartung.Status::"Champs Partner";
                                  Wartung."Auftragsnr. Service" := Vkliefzeile."Order No.";
                                  Wartung."Auftragszeilennr. Service" := Vkliefzeile."Order Line No.";
                                  Wartung."Lieferscheinnr. Service" := Vkliefzeile."Document No.";
                                  Wartung."LS Zeilennr. Service" := Vkliefzeile."Line No.";
                                  Wartung.Belegdatum := Vkliefkopf."Posting Date";
                                  IF Wartung.Vertragsablaufdatum = 0D THEN
                                    Wartung.Startdatum := LizenzTab.Lizenzdatum;
                                  IF Wartung.Vertragsablaufdatum < LizenzTab."Ablaufdatum Serviceleistung" THEN
                                    Wartung.Vertragsablaufdatum := LizenzTab."Ablaufdatum Serviceleistung";
                                  IF LizenzTab.Basisger„t = TRUE THEN BEGIN
                                    Wartung.Basisger„t := LizenzTab."Artikelnr.";
                                    IF (LizenzTab.Benutzername <> '') AND (ACTS = FALSE)
                                    AND (CHAMPS_PARTNER = FALSE) THEN
                                      LizenzTab."Zu exportieren" := TRUE;
                                  END;
                                  Wartung."Kampagnennr." := GetCampaignNoFromSalesDoc(LizenzTab."Auftragsnr.",LizenzTab."Auftragszeilennr.");
                                  Wartung.MODIFY(TRUE);
                                END;
                                PrfeBetreuerWechsel(Wartung."Wartungsvertragsnr.",Wartung."Debitornr.",
                                                      LizenzTab."Debitornr.");
                              END ELSE BEGIN
                                  MESSAGE(Text022,Vkliefzeile."No.",Vkliefzeile."Line No.");
                                END;
                            END ELSE
                              MESSAGE(Text022,Vkliefzeile."No.",Vkliefzeile."Line No.");

                            LizenzTab."Geh”rt zu Lfd. Nr." := ServiceZugeh”rigkeitErmitteln(Vkliefzeile."Order No.",LizenzTab."Lfd. Nr.",
                                                              LizenzTab."Wartungsvertragsnr.");
                            LizenzTab.MODIFY;
                            zudrucken := TRUE;
                          END;
                        UNTIL HoleTempLizenzTab.NEXT = 0;
                      END ELSE
                          ERROR(Text033);

                        HoleTempLizenzTab.RESET;
                        HoleTempLizenzTab.SETFILTER(Art,'%1',HoleTempLizenzTab.Art::Tempor„r);
                        HoleTempLizenzTab.SETFILTER("Nr.",'%1',KalkulationHolen."Belegnr.");
                        HoleTempLizenzTab.SETFILTER("Belegzeilennr.",'%1',KalkulationHolen."Belegzeilennr.");
                        HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',Vkliefzeile."Order No.");
                        HoleTempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',Vkliefzeile."Order Line No.");
                        IF HoleTempLizenzTab.FINDFIRST THEN
                            HoleTempLizenzTab.DELETEALL;

                      // ELSE
                      //   MESSAGE('Die angegebene Lieferscheinnr. + Pos. konnte nicht gefunden werden.\'+
                      //           'Bitte fgen Sie die Software Lizenzen dem Lieferschein %1 manuell hinzu.',
                      //            BelegzeileSUPBelegnr);
                    END;

                    //***************************************************************************************************
                    //            Prfung Fall #3 SUP Artikel verweist auf Auftrag selbst => Pseudo Anlage
                    //                 Evtl. kann es sich auch hier um eine Verl„ngerung handeln
                    //***************************************************************************************************

                    ////Vorerst deaktiviert 24.08.2011-ST, wieder aktiviert am 28.09.2011-ST
                    IF (KalkulationHolen."Nachtr„gliche Service Order" = TRUE) AND (KalkulationHolen.Fremderwerb = TRUE) THEN BEGIN
                      HoleTempLizenzTab.RESET;
                      HoleTempLizenzTab.SETFILTER(Art,'%1',HoleTempLizenzTab.Art::Tempor„r);
                      HoleTempLizenzTab.SETFILTER("Nr.",'%1',KalkulationHolen."Belegnr.");
                      HoleTempLizenzTab.SETFILTER("Belegzeilennr.",'%1',KalkulationHolen."Belegzeilennr.");
                      HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',KalkulationHolen."Nr.");
                      HoleTempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',KalkulationHolen."Zeilennr.");
                      HoleTempLizenzTab.SETFILTER(Vormerkung,'%1',TRUE);
                      HoleTempLizenzTab.SETFILTER(Fremderwerb,'%1',TRUE);
                      IF HoleTempLizenzTab.FINDFIRST THEN BEGIN
                        REPEAT
                          LizenzTab.RESET;
                          LizenzTab.SETFILTER(Art,'%1',LizenzTab.Art::Service);
                          LizenzTab.SETFILTER("Nr.",'%1',Vkliefzeile."Document No.");
                          LizenzTab.SETFILTER("Belegzeilennr.",'%1',Vkliefzeile."Line No.");
                          LizenzTab.SETFILTER("Urspr. Lieferscheinnr.",'%1',KalkulationHolen."Belegnr.");
                          LizenzTab.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',KalkulationHolen."Belegzeilennr.");
                          LizenzTab.SETFILTER("SUP Artikelnr.",'%1',Vkliefzeile."No.");
                          LizenzTab.SETFILTER("Artikelnr.",'%1',HoleTempLizenzTab."Artikelnr.");
                          LizenzTab.SETFILTER("Seriennr.",'%1',HoleTempLizenzTab."Seriennr.");
                          IF NOT LizenzTab.FINDFIRST THEN BEGIN
                            LizenzTab.RESET;
                            LizenzTab.INIT;
                            LizenzTab.TRANSFERFIELDS(HoleTempLizenzTab);
                            LizenzTab.Art := LizenzTab.Art::Service;
                            LizenzTab."Nr." := Vkliefzeile."Document No.";
                            LizenzTab.Verl„ngerung := FALSE;
                            LizenzTab.INSERT(TRUE);
                            //Adresse aus Lieferschein holen
                            LizenzTab.Debitorname := Vkliefkopf."Sell-to Customer Name";
                            LizenzTab."Name 2" := Vkliefkopf."Sell-to Customer Name 2";
                            LizenzTab.Adresse := Vkliefkopf."Sell-to Address";
                            LizenzTab."Adresse 2" := Vkliefkopf."Sell-to Address 2";
                            LizenzTab.Ort := Vkliefkopf."Sell-to City";
                            LizenzTab."PLZ-Code" := Vkliefkopf."Sell-to Post Code";
                            LizenzTab.Kontakt := Vkliefkopf.Kontaktperson;
                            LizenzTab."SUP Artikelnr." := Vkliefzeile."No.";
                            LizenzTab."Belegzeilennr." := Vkliefzeile."Line No.";
                            LizenzTab.Basisger„t := KalkulationHolen.Basisger„t;
                            LizenzTab."Abw. Ger„te Artikelnr." := KalkulationHolen."Abw. Ger„te Artikelnr.";
                            LizenzTab.VALIDATE(Lizenzdatum,WartungsStartErmitteln(LizenzTab."SUP Artikelnr.",
                            KalkulationHolen.Startdatum,Vkliefkopf."Posting Date",
                            KalkulationHolen."Wartungsvertragsnr.",KalkulationHolen."Laufzeit ab Buchungsdatum"));
                            LizenzTab.Belegdatum := Vkliefzeile."Posting Date";
                            LizenzTab."Urspr. Buchungsdatum" := Vkliefzeile."Posting Date";
                            LizenzTab.Benutzername := LizenzTab.Benutzername_generieren(LizenzTab."Artikelnr.",
                                                      LizenzTab."SUP Artikelnr.",LizenzTab."Seriennr.",
                                                      KalkulationHolen."Belegnr.",KalkulationHolen."Belegzeilennr.");
                            LizenzTab.Passwort := LizenzTab.Passwort_generieren(LizenzTab."Artikelnr.",
                                                  LizenzTab.Benutzername,LizenzTab."Seriennr.",LizenzTab.Lizenzdatum);
                            IF LizenzTab."SUP Artikelnr." = 'CHAMPS-RE_INSTATE#01' THEN
                              LizenzTab."Service Artikelnr." := 'CHAMPS-RE_INSTATEMENT_FEE';
                            LizenzTab."Urspr. Lieferscheinnr." := HoleTempLizenzTab."Nr.";
                            LizenzTab."Urspr. Lieferscheinzeilennr." := HoleTempLizenzTab."Belegzeilennr.";
                            Artikel.GET(LizenzTab."Artikelnr.");
                            LizenzTab.Ursprungsland := Artikel."Country/Region of Origin Code";
                            LizenzTab."System Projektinfos" := Vkliefzeile."System Projektinfos";
                            LizenzTab.VALIDATE("Dauer Serviceleistung",WartungsLaufzeitErmitteln(Vkliefzeile."No.",
                            KalkulationHolen.Laufzeit));
                            IF KalkulationHolen.Ablaufdatum <> 0D THEN
                              LizenzTab."Ablaufdatum Serviceleistung" := KalkulationHolen.Ablaufdatum;

                            LizenzTab."Service Artikelnr." := ServiceArtikelnrErmitteln(LizenzTab."Artikelnr.",
                                                              Vkliefzeile."No.",ek_W„hrung,preislisten_kalkulation);
                            LizenzTab."Service DC" := ServicePreiseNeuKalkulieren(LizenzTab."Artikelnr.",
                                                      Vkliefzeile."No.",KalkulationHolen.Laufzeit,'DC',FALSE,ek_W„hrung,
                                                      KalkulationHolen."Quotenr.",preislisten_kalkulation);
                            LizenzTab."Service MSRP" := ServicePreiseNeuKalkulieren(LizenzTab."Artikelnr.",Vkliefzeile."No.",
                                                        KalkulationHolen.Laufzeit,'MSRP',FALSE,ek_W„hrung,
                                                        KalkulationHolen."Quotenr.",preislisten_kalkulation);
                            LizenzTab."Quotenr." := KalkulationHolen."Quotenr.";
                            LizenzTab."Service W„hrungscode" := ek_W„hrung;
                            LizenzTab."Service bereits bestellt" := Vkliefzeile."Service bereits bestellt";

                            //Zuordnung der Serviceposition in den entsprechenden Wartungs- bzw. Systemvertrag
                            SystemPos.RESET;
                            SystemPos.SETFILTER(Art,'%1',SystemPos.Art::System);
                            SystemPos.SETFILTER(Inaktiv,'%1',FALSE);
                            SystemPos.SETFILTER("Nr.",'%1',KalkulationHolen."Belegnr.");
                            SystemPos.SETFILTER("Belegzeilennr.",'%1',KalkulationHolen."Belegzeilennr.");
                            SystemPos.SETFILTER("Artikelnr.",'%1',HoleTempLizenzTab."Artikelnr.");
                            SystemPos.SETFILTER("Seriennr.",'%1',HoleTempLizenzTab."Seriennr.");
                            SystemPos.SETFILTER(Fremderwerb,'%1',TRUE);
                            IF SystemPos.FINDFIRST THEN BEGIN
                              Wartung.RESET;
                              Wartung.SETFILTER("Wartungsvertragsnr.",'%1',SystemPos."Wartungsvertragsnr.");
                              IF Wartung.FINDFIRST THEN
                                EndkundenInfoUpdate(Vkliefkopf,Wartung);
                              Wartung.RESET;
                              Wartung.SETFILTER("Wartungsvertragsnr.",'%1',SystemPos."Wartungsvertragsnr.");
                              IF Wartung.FINDFIRST THEN BEGIN
                                LizenzTab."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                                LizenzTab."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";

                                //Prft auf Vertragsverl„ngerung, auch wenn die Pos. nachtr„glich hinzu kommt und
                                //noch nicht verl„ngert wird - Angleich Laufzeit an bestehende verl„ngerte Pos.
                                v_verlaengerung_start := PrfeLizenzVerl„ngerung(LizenzTab."SUP Artikelnr.",
                                LizenzTab."Urspr. Lieferscheinnr.",LizenzTab."Urspr. Lieferscheinzeilennr.",
                                LizenzTab."Seriennr.",'',LizenzTab.Fremderwerb,KalkulationHolen.Laufzeit,0,
                                KalkulationHolen."Wartungsvertragsnr.");
                                IF v_verlaengerung_start <> 0D THEN BEGIN
                                  LizenzTab.Verl„ngerung := PrfeServiceVerl„ngerung(LizenzTab."SUP Artikelnr.",
                                  LizenzTab."Urspr. Lieferscheinnr.",LizenzTab."Urspr. Lieferscheinzeilennr.",
                                  LizenzTab."Seriennr.",LizenzTab."Product Key");
                                  IF (LizenzTab.Verl„ngerung = FALSE) AND (KalkulationHolen.Startdatum <> 0D)
                                  AND (KalkulationHolen."Laufzeit ab Buchungsdatum" = FALSE) THEN
                                    LizenzTab.VALIDATE(Lizenzdatum,KalkulationHolen.Startdatum)
                                  ELSE
                                    IF LizenzTab.Verl„ngerung = TRUE THEN
                                      IF (v_verlaengerung_start > Vkliefzeile."Posting Date")
                                      OR (KalkulationHolen."Laufzeit ab Buchungsdatum" = FALSE) THEN
                                        LizenzTab.VALIDATE(Lizenzdatum,CALCDATE('+1T',v_verlaengerung_start));

                                  LizenzTab.VALIDATE("Dauer Serviceleistung");
                                  v_verlaengerung_ablauf := PrfeLizenzVerl„ngerung(
                                  LizenzTab."SUP Artikelnr.",LizenzTab."Urspr. Lieferscheinnr."
                                  ,LizenzTab."Urspr. Lieferscheinzeilennr.",LizenzTab."Seriennr.",'',
                                  LizenzTab.Fremderwerb,KalkulationHolen.Laufzeit,1,
                                  KalkulationHolen."Wartungsvertragsnr.");
                                  IF v_verlaengerung_ablauf <> 0D THEN
                                    LizenzTab."Ablaufdatum Serviceleistung" := v_verlaengerung_ablauf;
                                END;

                                //Das vorgegebene Ablaufdatum bersteuert d. kalkulierte Verl„ngerungsablaufddatum
                                IF KalkulationHolen.Ablaufdatum <> 0D THEN
                                  LizenzTab."Ablaufdatum Serviceleistung" := KalkulationHolen.Ablaufdatum;

                                IF (KalkulationHolen."Beachte Startdatum" = TRUE) AND (KalkulationHolen.Startdatum <> 0D) THEN BEGIN
                                  LizenzTab.Lizenzdatum := KalkulationHolen.Startdatum;
                                  IF KalkulationHolen.Ablaufdatum = 0D THEN
                                        LizenzTab.VALIDATE("Dauer Serviceleistung");
                                END ELSE
                                  LizenzTab.Lizenzdatum := LizenzdatumAngleichen(LizenzTab.Lizenzdatum,
                                                            LizenzTab."Ablaufdatum Serviceleistung",
                                                            LizenzTab."Dauer Serviceleistung");

                                IF (KalkulationHolen."Wartungsvertragsnr." = '') AND ((LizenzTab.Benutzername <> '')
                                OR (LizenzTab."SUP Artikelnr." = 'CHAMPS-SUPP-8X5/YR')
                                OR (ACTS = TRUE) OR (ACHAT = TRUE))
                                AND (AllowContractStatusRefresh(LizenzTab."SUP Artikelnr.")) THEN BEGIN
                                  Wartung.Status := Wartung.Status::Auftrag;
                                  IF ACTS THEN
                                    Wartung.Status := Wartung.Status::ACTS;
                                  IF ACHAT THEN
                                    Wartung.Status := Wartung.Status::ACHAT;
                                  IF CHAMPS_PARTNER THEN
                                    Wartung.Status := Wartung.Status::"Champs Partner";
                                  Wartung."Auftragsnr. Service" := Vkliefzeile."Order No.";
                                  Wartung."Auftragszeilennr. Service" := Vkliefzeile."Order Line No.";
                                  Wartung."Lieferscheinnr. Service" := Vkliefzeile."Document No.";
                                  Wartung."LS Zeilennr. Service" := Vkliefzeile."Line No.";
                                  Wartung.Belegdatum := Vkliefkopf."Posting Date";
                                  IF Wartung.Vertragsablaufdatum = 0D THEN
                                    Wartung.Startdatum := LizenzTab.Lizenzdatum;
                                  IF Wartung.Vertragsablaufdatum < LizenzTab."Ablaufdatum Serviceleistung" THEN
                                    Wartung.Vertragsablaufdatum := LizenzTab."Ablaufdatum Serviceleistung";
                                  IF LizenzTab.Basisger„t = TRUE THEN BEGIN
                                    Wartung.Basisger„t := LizenzTab."Artikelnr.";
                                    IF (LizenzTab.Benutzername <> '') AND (ACTS = FALSE) AND (CHAMPS_PARTNER = FALSE) THEN
                                      LizenzTab."Zu exportieren" := TRUE;
                                  END;
                                  Wartung."Kampagnennr." := GetCampaignNoFromSalesDoc(LizenzTab."Auftragsnr.",LizenzTab."Auftragszeilennr.");
                                  Wartung.MODIFY(TRUE);
                                END;
                                PrfeBetreuerWechsel(Wartung."Wartungsvertragsnr.",Wartung."Debitornr.",
                                                      LizenzTab."Debitornr.");
                              END ELSE BEGIN
                                  MESSAGE(Text022,Vkliefzeile."No.",Vkliefzeile."Line No.");
                              END;
                            END ELSE
                              MESSAGE(Text022,Vkliefzeile."No.",Vkliefzeile."Line No.");

                            LizenzTab."Geh”rt zu Lfd. Nr." := ServiceZugeh”rigkeitErmitteln(Vkliefzeile."Order No.",LizenzTab."Lfd. Nr.",
                                                              LizenzTab."Wartungsvertragsnr.");
                            LizenzTab.MODIFY;
                            zudrucken := TRUE;
                          END;
                        UNTIL HoleTempLizenzTab.NEXT = 0;
                      END ELSE
                        ERROR(Text033);

                      HoleTempLizenzTab.RESET;
                      HoleTempLizenzTab.SETFILTER(Art,'%1',HoleTempLizenzTab.Art::Tempor„r);
                      HoleTempLizenzTab.SETFILTER("Nr.",'%1',KalkulationHolen."Belegnr.");
                      HoleTempLizenzTab.SETFILTER("Belegzeilennr.",'%1',KalkulationHolen."Belegzeilennr.");
                      HoleTempLizenzTab.SETFILTER("Auftragsnr.",'%1',KalkulationHolen."Nr.");
                      HoleTempLizenzTab.SETFILTER("Auftragszeilennr.",'%1',KalkulationHolen."Zeilennr.");
                      HoleTempLizenzTab.SETFILTER(Vormerkung,'%1',TRUE);
                      HoleTempLizenzTab.SETFILTER(Fremderwerb,'%1',TRUE);
                      IF HoleTempLizenzTab.FINDFIRST THEN
                          HoleTempLizenzTab.DELETEALL;

                    END;

                    Z„hleServiceVerl„ngerungen(LizenzTab."Wartungsvertragsnr.");

                  UNTIL KalkulationHolen.NEXT = 0;
              END;
          UNTIL Vkliefzeile.NEXT = 0;

        Debitor.GET(Vkliefkopf."Sell-to Customer No.");
        IF Debitor."Service via EMail" = TRUE THEN
          nur_intern_drucken := TRUE
        ELSE
          nur_intern_drucken := FALSE;

        IF (NichtDrucken = FALSE) AND (zudrucken = TRUE) THEN BEGIN
          GetDruckWartung.RESET;
          GetDruckWartung.SETFILTER(Status,'%1|%2|%3',GetDruckWartung.Status::System,GetDruckWartung.Status::Auftrag,
          GetDruckWartung.Status::ACHAT);
          GetDruckWartung.SETFILTER("Lieferscheinnr. Service",'%1',Vkliefzeile."Document No.");
          IF GetDruckWartung.FINDFIRST THEN
            REPEAT
              DruckeLizenz(GetDruckWartung."Wartungsvertragsnr.",nur_intern_drucken);
            UNTIL GetDruckWartung.NEXT = 0
          ELSE BEGIN
            letzte_wartungsnr := '';
            GetDruckAenderung.RESET;
            GetDruckAenderung.SETFILTER(Art,'%1',GetDruckAenderung.Art::Service);
            GetDruckAenderung.SETFILTER("Nr.",'%1',Vkliefzeile."Document No.");
            IF GetDruckAenderung.FINDFIRST THEN BEGIN
              REPEAT
                GetDruckWartung.RESET;
                GetDruckWartung.SETFILTER(Status,'%1|%2|%3',GetDruckWartung.Status::System,GetDruckWartung.Status::Auftrag,
                GetDruckWartung.Status::ACHAT);
                GetDruckWartung.SETFILTER("Wartungsvertragsnr.",'%1',GetDruckAenderung."Wartungsvertragsnr.");
                IF GetDruckWartung.FINDFIRST THEN
                //REPEAT
                  IF letzte_wartungsnr <> GetDruckWartung."Wartungsvertragsnr." THEN BEGIN
                    DruckeLizenz(GetDruckWartung."Wartungsvertragsnr.",nur_intern_drucken);
                    letzte_wartungsnr := GetDruckAenderung."Wartungsvertragsnr.";
                  END;
                //UNTIL GetDruckWartung.NEXT = 0;
              UNTIL GetDruckAenderung.NEXT = 0;
            END;
          END;
        END;
      END;
    END;

    PROCEDURE PrfeLizenzVerl„ngerung@1140006("Service Artikelnr"@1140005 : Code[20];Lieferscheinnr@1140002 : Code[20];Lieferscheinzeilennr@1140001 : Integer;Seriennr@1140000 : Code[20];Debnr@1140004 : Code[20];Pseudo@1140007 : Boolean;Laufzeit@1140011 : Code[20];Ausgabedatum@1140013 : 'Lizenzdatum,Ablaufdatum';Wartungsnr@1140014 : Code[20]) : Date;
    VAR
      PruefeService@1140003 : Record 50024;
      TempSystem@1140012 : Record 50024;
      Ermittle_Servicegruppe@1140008 : Record 50001;
      Verbundene_Servicegruppe@1140009 : Record 50001;
      Artikel_Servicegruppe@1140010 : Record 50001;
      Artikel@1140006 : Record 27;
    BEGIN
      //IF (STRPOS("Service Artikelnr",'HW') <> 0) OR ("Service Artikelnr" = 'CHAMPS-RE_INSTATE#01')
      //OR (STRPOS("Service Artikelnr",'RPLC') <> 0) OR ("Service Artikelnr" = 'EXTD-HW-WARR/YR')
      //OR ("Service Artikelnr" = 'SW-UPGRADE-ACS-1Y') THEN
      //  EXIT(0D);

      //Sonderfall: betrachet nun alle m”glichen Konstellationen bei nachtr„glichen Zubuchungen und gibt ggf. auch
      //das Ablaufdatum anstatt des Lizenzdatums aus

      IF ("Service Artikelnr" = 'CHAMPS-RE_INSTATE#01') OR ("Service Artikelnr" = 'RE_INSTATEMENT_FEE') THEN EXIT(0D);

      Ermittle_Servicegruppe.RESET;
      Ermittle_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
      Ermittle_Servicegruppe.SETFILTER("Feld ID",'%1',44);
      Ermittle_Servicegruppe.SETFILTER("Nr.",'%1',"Service Artikelnr");
      IF (Ermittle_Servicegruppe.FINDFIRST) AND (Ermittle_Servicegruppe."Einordnung Servicegruppe" <> 0) THEN BEGIN
        //Prft, ob die gleiche oder sich gegenseitig verl„ngerbare Service Artikel gebucht wurden
        Verbundene_Servicegruppe.RESET;
        Verbundene_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
        Verbundene_Servicegruppe.SETFILTER("Feld ID",'%1',44);
        Verbundene_Servicegruppe.SETFILTER("Einordnung Servicegruppe",'%1',Ermittle_Servicegruppe."Einordnung Servicegruppe");
        Verbundene_Servicegruppe.FINDFIRST;
          REPEAT
            PruefeService.RESET;
            PruefeService.SETCURRENTKEY("Ablaufdatum Serviceleistung","SUP Artikelnr.",Gruppierung);
            PruefeService.SETFILTER(Art,'%1',PruefeService.Art::Service);
            PruefeService.SETFILTER("Ablaufdatum Serviceleistung",'<>%1',0D);
            //PruefeService.SETFILTER("Ablaufdatum Serviceleistung",'>%1',WORKDATE);
            PruefeService.SETFILTER("Urspr. Lieferscheinnr.",'%1',Lieferscheinnr);
            PruefeService.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',Lieferscheinzeilennr);
            PruefeService.SETFILTER("Seriennr.",'%1',Seriennr);
            PruefeService.SETFILTER(Inaktiv,'%1',FALSE);
            PruefeService.ASCENDING(FALSE);
            IF PruefeService.FINDFIRST THEN
              REPEAT
                Artikel_Servicegruppe.RESET;
                Artikel_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
                Artikel_Servicegruppe.SETFILTER("Feld ID",'%1',44);
                Artikel_Servicegruppe.SETFILTER("Nr.",'%1',PruefeService."SUP Artikelnr.");
                IF (Artikel_Servicegruppe.FINDFIRST) AND (Artikel_Servicegruppe."Einordnung Servicegruppe" =
                Ermittle_Servicegruppe."Einordnung Servicegruppe") THEN
                  IF Ausgabedatum = Ausgabedatum::Lizenzdatum THEN
                    EXIT(PruefeService."Ablaufdatum Serviceleistung")
              UNTIL PruefeService.NEXT = 0
          UNTIL Verbundene_Servicegruppe.NEXT = 0;

          //Nachtr„gliches Modul hinzu, das bisher noch nicht in Wartung steht, umweg ber Systemposition
          TempSystem.RESET;
          TempSystem.SETFILTER(Art,'%1',TempSystem.Art::System);
          TempSystem.SETFILTER("Nr.",'%1',Lieferscheinnr);
          TempSystem.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
          TempSystem.SETFILTER("Seriennr.",'%1',Seriennr);
          TempSystem.SETFILTER(Basisger„t,'%1',FALSE);
          TempSystem.SETFILTER(Inaktiv,'%1',FALSE);
          IF TempSystem.FINDLAST THEN BEGIN
            PruefeService.RESET;
            PruefeService.SETCURRENTKEY("Ablaufdatum Serviceleistung","SUP Artikelnr.",Gruppierung);
            PruefeService.SETFILTER(Art,'%1',PruefeService.Art::Service);
            PruefeService.SETFILTER("Ablaufdatum Serviceleistung",'>%1',WORKDATE);
            PruefeService.SETFILTER("Wartungsvertragsnr.",'%1',TempSystem."Wartungsvertragsnr.");
            //PruefeService.SETFILTER("Zu exportieren",'%1',TRUE);
            PruefeService.SETFILTER(Basisger„t,'%1',TRUE);
            PruefeService.SETFILTER(Inaktiv,'%1',FALSE);
            PruefeService.ASCENDING(FALSE);
            IF PruefeService.FINDFIRST THEN
              REPEAT
                Artikel_Servicegruppe.RESET;
                Artikel_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
                Artikel_Servicegruppe.SETFILTER("Feld ID",'%1',44);
                Artikel_Servicegruppe.SETFILTER("Nr.",'%1',PruefeService."SUP Artikelnr.");
                IF (Artikel_Servicegruppe.FINDFIRST) AND (Artikel_Servicegruppe."Einordnung Servicegruppe" =
                  Ermittle_Servicegruppe."Einordnung Servicegruppe") THEN BEGIN
                  IF (Laufzeit <> '') AND (STRPOS(Laufzeit,'M') <> 0) THEN
                    //Muss hier runtergerechnet werden, da anschlieáend wieder drauf gerechnet wird
                    IF Ausgabedatum = Ausgabedatum::Lizenzdatum THEN
                      EXIT(CALCDATE('-1T',CALCDATE('-' + PruefeService."Dauer Serviceleistung",PruefeService."Ablaufdatum Serviceleistung")))
                    ELSE
                      EXIT(PruefeService."Ablaufdatum Serviceleistung");
                END;
              UNTIL PruefeService.NEXT = 0;
          END;
      END ELSE BEGIN
      //Nur die gleiche Service Artikelnr kann verl„ngert werden Bsp. EXT-HW
        PruefeService.RESET;
        PruefeService.SETCURRENTKEY("Ablaufdatum Serviceleistung","SUP Artikelnr.",Gruppierung);
        PruefeService.SETFILTER(Art,'%1',PruefeService.Art::Service);
        PruefeService.SETFILTER("SUP Artikelnr.",'%1',"Service Artikelnr");
        PruefeService.SETFILTER("Ablaufdatum Serviceleistung",'<>%1',0D);
        PruefeService.SETFILTER("Urspr. Lieferscheinnr.",'%1',Lieferscheinnr);
        PruefeService.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',Lieferscheinzeilennr);
        PruefeService.SETFILTER("Seriennr.",'%1',Seriennr);
        PruefeService.SETFILTER(Inaktiv,'%1',FALSE);
        IF PruefeService.FINDLAST THEN BEGIN
          EXIT(PruefeService."Ablaufdatum Serviceleistung")
        END ELSE
          EXIT(0D);
      END;
    END;

    PROCEDURE PrfeServiceVerl„ngerung@1140019("Service Artikelnr"@1140004 : Code[20];Lieferscheinnr@1140003 : Code[20];Lieferscheinzeilennr@1140002 : Integer;Seriennr@1140001 : Code[20];ProductKey@1000000000 : Code[40]) : Boolean;
    VAR
      Ermittle_Servicegruppe@1140000 : Record 50001;
      Verbundene_Servicegruppe@1140006 : Record 50001;
      Artikel_Servicegruppe@1140007 : Record 50001;
      PruefeServicevorhanden@1140005 : Record 50024;
    BEGIN
      IF ("Service Artikelnr" = 'CHAMPS-RE_INSTATE#01') OR ("Service Artikelnr" = 'RE_INSTATEMENT_FEE') THEN EXIT(FALSE);

      Ermittle_Servicegruppe.RESET;
      Ermittle_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
      Ermittle_Servicegruppe.SETFILTER("Feld ID",'%1',44);
      Ermittle_Servicegruppe.SETFILTER("Nr.",'%1',"Service Artikelnr");
      IF (Ermittle_Servicegruppe.FINDFIRST) AND (Ermittle_Servicegruppe."Einordnung Servicegruppe" <> 0) THEN BEGIN
        //Prft, ob die gleiche oder sich gegenseitig verl„ngerbare Service Artikel gebucht wurden
        Verbundene_Servicegruppe.RESET;
        Verbundene_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
        Verbundene_Servicegruppe.SETFILTER("Feld ID",'%1',44);
        Verbundene_Servicegruppe.SETFILTER("Einordnung Servicegruppe",'%1',Ermittle_Servicegruppe."Einordnung Servicegruppe");
        Verbundene_Servicegruppe.FINDFIRST;
          REPEAT
            PruefeServicevorhanden.RESET;
            PruefeServicevorhanden.SETFILTER(Art,'%1',PruefeServicevorhanden.Art::Service);
            PruefeServicevorhanden.SETFILTER("Ablaufdatum Serviceleistung",'<>%1',0D);
            PruefeServicevorhanden.SETFILTER("Urspr. Lieferscheinnr.",'%1',Lieferscheinnr);
            PruefeServicevorhanden.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',Lieferscheinzeilennr);
            PruefeServicevorhanden.SETFILTER("Seriennr.",'%1',Seriennr);
            PruefeServicevorhanden.SETFILTER("Product Key",ProductKey);
            PruefeServicevorhanden.SETFILTER(Inaktiv,'%1',FALSE);
            IF PruefeServicevorhanden.FINDFIRST THEN
              REPEAT
                Artikel_Servicegruppe.RESET;
                Artikel_Servicegruppe.SETFILTER("Tabellen ID",'%1',50024);
                Artikel_Servicegruppe.SETFILTER("Feld ID",'%1',44);
                Artikel_Servicegruppe.SETFILTER("Nr.",'%1',PruefeServicevorhanden."SUP Artikelnr.");
                IF (Artikel_Servicegruppe.FINDFIRST) AND (Artikel_Servicegruppe."Einordnung Servicegruppe" =
                Ermittle_Servicegruppe."Einordnung Servicegruppe") THEN
                  EXIT(TRUE);
              UNTIL PruefeServicevorhanden.NEXT = 0
          UNTIL Verbundene_Servicegruppe.NEXT = 0;
      END ELSE
        EXIT(FALSE);

      EXIT(FALSE);
    END;

    PROCEDURE Z„hleServiceVerl„ngerungen@1140024(wartungsnr@1140000 : Code[20]);
    VAR
      Wartungsvertrag@1140001 : Record 50011;
      Servicepositionen@1140003 : Record 50024;
      temp_service_artikelnr@1140002 : Code[20];
      temp_ablaufdatum@1140005 : Date;
    BEGIN
      IF wartungsnr = '' THEN
        EXIT;

      Wartungsvertrag.RESET;
      Wartungsvertrag.SETFILTER("Wartungsvertragsnr.",'%1',wartungsnr);
      //Wartungsvertrag.SETFILTER(Status,'%1|%2|%3|%4',Wartungsvertrag.Status::Auftrag,Wartungsvertrag.Status::ACTS,
      //                          Wartungsvertrag.Status::ACHAT,Wartungsvertrag.Status::"Champs Partner");
      IF Wartungsvertrag.FINDFIRST THEN BEGIN
        Wartungsvertrag.Verl„ngerungen := 0;
        temp_service_artikelnr := '';
        Servicepositionen.RESET;
        Servicepositionen.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
        Servicepositionen.SETRANGE(Art,Servicepositionen.Art::Service);
        Servicepositionen.SETRANGE("Wartungsvertragsnr.",Wartungsvertrag."Wartungsvertragsnr.");
        Servicepositionen.SETRANGE(Basisger„t,TRUE);
        Servicepositionen.SETRANGE(Inaktiv,FALSE);
        IF Servicepositionen.FINDFIRST THEN BEGIN
          REPEAT
            IF (Servicepositionen.Benutzername <> '') AND (Servicepositionen.Verl„ngerung = TRUE) THEN
              IF Servicepositionen."Ablaufdatum Serviceleistung" <> temp_ablaufdatum THEN
                Wartungsvertrag.Verl„ngerungen += 1;
            temp_ablaufdatum := Servicepositionen."Ablaufdatum Serviceleistung";
          UNTIL Servicepositionen.NEXT = 0;
          Wartungsvertrag.Inaktiv := FALSE;
          Wartungsvertrag.MODIFY;
        END;
      END;
    END;

    PROCEDURE PrfeWartungvorhanden@1140018("Service Artikelnr"@1140005 : Code[20];Lieferscheinnr@1140004 : Code[20];Lieferscheinzeilennr@1140003 : Integer;Seriennr@1140002 : Code[20];Debnr@1140000 : Code[20]) : Boolean;
    VAR
      PrfeLizenzTab@1140001 : Record 50024;
    BEGIN
      PrfeLizenzTab.RESET;
      PrfeLizenzTab.SETFILTER(Art,'%1',PrfeLizenzTab.Art::Service);
      PrfeLizenzTab.SETFILTER("Ablaufdatum Serviceleistung",'<>%1',0D);
      PrfeLizenzTab.SETFILTER("Urspr. Lieferscheinnr.",'%1',Lieferscheinnr);
      PrfeLizenzTab.SETFILTER("Urspr. Lieferscheinzeilennr.",'%1',Lieferscheinzeilennr);
      PrfeLizenzTab.SETFILTER("Seriennr.",'%1',Seriennr);
      PrfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
      IF PrfeLizenzTab.FINDLAST THEN
        EXIT(TRUE)
      ELSE
        EXIT(FALSE);
    END;

    PROCEDURE DruckeLizenz@1140008(Wartungsnr@1140000 : Code[20];intern@1140001 : Boolean);
    BEGIN
      DruckeWartung.RESET;
      DruckeWartung.SETRANGE("Wartungsvertragsnr.",Wartungsnr);
      IF DruckeWartung.FINDFIRST THEN BEGIN
        IF intern = FALSE THEN
          REPORT.RUN(50176,FALSE,FALSE,DruckeWartung);
        //REPORT.RUN(50177,FALSE,FALSE,DruckeWartung);
      END;
    END;

    PROCEDURE OpenServiceKalkulation@1140011(version@1140001 : Integer);
    VAR
      ServiceRelaDoc@1140000 : Record 50027;
    BEGIN
      ServiceRelaDoc.RESET;
      ServiceRelaDoc.SETRANGE(Art,ServiceRelaDoc.Art::"SUP-AU");
      ServiceRelaDoc.SETRANGE("Nr.","Auftragsnr.");
      ServiceRelaDoc.SETRANGE("Zeilennr.","Auftragszeilennr.");
      IF version = 0 THEN BEGIN
        //IF ServiceRelaDoc.FINDFIRST THEN ;
        PAGE.RUNMODAL(50023,ServiceRelaDoc);
      END ELSE
        //IF ServiceRelaDoc.FINDFIRST THEN
        PAGE.RUNMODAL(50023,ServiceRelaDoc);
    END;

    PROCEDURE SystemZugeh”rigkeitErmitteln@1140013(Auftragsnr@1140002 : Code[20];AktLfdNr@1140001 : Code[20];Wartungsnr@1140000 : Code[20]) : Code[20];
    VAR
      PrfeSystemPos@1140003 : Record 50024;
    BEGIN
      IF Wartungsnr = '' THEN
        EXIT('');

      PrfeSystemPos.RESET;
      PrfeSystemPos.SETFILTER(Art,'%1',PrfeSystemPos.Art::System);
      PrfeSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
      PrfeSystemPos.SETFILTER(Basisger„t,'%1',TRUE);
      PrfeSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
      IF PrfeSystemPos.FINDFIRST THEN
        EXIT(PrfeSystemPos."Lfd. Nr.")
      ELSE BEGIN
        PrfeSystemPos.RESET;
        PrfeSystemPos.SETFILTER(Art,'%1',PrfeSystemPos.Art::System);
        PrfeSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
        PrfeSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
        IF PrfeSystemPos.FINDFIRST THEN
          EXIT(PrfeSystemPos."Lfd. Nr.")
        ELSE
          EXIT(AktLfdNr);
      END;
    END;

    PROCEDURE FehlendeSystemZugehoerigkeit@1140017(Wartungsnr@1140001 : Code[20];LfdNr@1140002 : Code[20]);
    VAR
      PruefeSystemPos@1140000 : Record 50024;
    BEGIN
      IF Wartungsnr = '' THEN
        EXIT;

      PruefeSystemPos.RESET;
      PruefeSystemPos.SETFILTER(Art,'%1',PruefeSystemPos.Art::System);
      PruefeSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
      PruefeSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
      PruefeSystemPos.SETFILTER("Lfd. Nr.",'<>%1',LfdNr);
      PruefeSystemPos.SETFILTER("Geh”rt zu Lfd. Nr.",'%1','');
      IF PruefeSystemPos.FINDFIRST THEN
        REPEAT
          PruefeSystemPos."Geh”rt zu Lfd. Nr." := LfdNr;
          PruefeSystemPos.MODIFY;
        UNTIL PruefeSystemPos.NEXT = 0;
    END;

    PROCEDURE FehlendeVertragsZugehoerigkeit@1140021(Nr@1140000 : Code[20];Zeile@1140001 : Integer;Belegnr@1140002 : Code[20];Belegzeile@1140006 : Integer;MoeglicheWartungsnr@1140007 : Code[20]);
    VAR
      Wartung@1140003 : Record 50011;
      Kalkulation@1140004 : Record 50027;
      SystemPosOhneWVnr@1140005 : Record 50024;
    BEGIN
      Kalkulation.RESET;
      Kalkulation.SETFILTER(Art,'SUP-AU');
      Kalkulation.SETFILTER("Nr.",'%1',Nr);
      Kalkulation.SETFILTER("Zeilennr.",'%1',Zeile);
      Kalkulation.SETFILTER(Fremderwerb,'%1',FALSE);
      IF Kalkulation.FINDFIRST THEN
        REPEAT
          //Wenn Pos. aus Lieferschein stammt
          SystemPosOhneWVnr.RESET;
          SystemPosOhneWVnr.SETFILTER(Art,'%1',SystemPosOhneWVnr.Art::System);
          SystemPosOhneWVnr.SETFILTER("Nr.",'%1',Kalkulation."Belegnr.");
          SystemPosOhneWVnr.SETFILTER("Belegzeilennr.",'%1',Kalkulation."Belegzeilennr.");
          SystemPosOhneWVnr.SETFILTER("Wartungsvertragsnr.",'%1','');
          IF SystemPosOhneWVnr.FINDFIRST THEN BEGIN
            REPEAT
              Wartung.RESET;
              Wartung.SETFILTER("Lieferscheinnr.",'%1',Belegnr);
              Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',Belegzeile);
              IF Wartung.FINDLAST THEN BEGIN
                IF MoeglicheWartungsnr <> Wartung."Wartungsvertragsnr." THEN
                  MESSAGE(Text029,Nr,Zeile,MoeglicheWartungsnr);
                SystemPosOhneWVnr."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                SystemPosOhneWVnr."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                SystemPosOhneWVnr."Geh”rt zu Lfd. Nr." := SystemZugeh”rigkeitErmitteln(Nr,SystemPosOhneWVnr."Lfd. Nr.",
                                                  SystemPosOhneWVnr."Wartungsvertragsnr.");
                SystemPosOhneWVnr.MODIFY;
              END;
            UNTIL SystemPosOhneWVnr.NEXT = 0;
          END ELSE BEGIN
            //Wenn Pos. direkt mit Service geliefert wurde
            SystemPosOhneWVnr.RESET;
            SystemPosOhneWVnr.SETFILTER(Art,'%1',SystemPosOhneWVnr.Art::System);
            SystemPosOhneWVnr.SETFILTER("Auftragsnr.",'%1',Kalkulation."Belegnr.");
            SystemPosOhneWVnr.SETFILTER("Auftragszeilennr.",'%1',Kalkulation."Belegzeilennr.");
            SystemPosOhneWVnr.SETFILTER("Wartungsvertragsnr.",'%1','');
            IF SystemPosOhneWVnr.FINDFIRST THEN BEGIN
              REPEAT
                Wartung.RESET;
                Wartung.SETFILTER("Lieferscheinnr.",'%1',Belegnr);
                Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',Belegzeile);
                IF Wartung.FINDLAST THEN BEGIN
                  IF MoeglicheWartungsnr <> Wartung."Wartungsvertragsnr." THEN
                    MESSAGE(Text029,Nr,Zeile,MoeglicheWartungsnr);
                  SystemPosOhneWVnr."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                  SystemPosOhneWVnr."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                  SystemPosOhneWVnr."Geh”rt zu Lfd. Nr." := SystemZugeh”rigkeitErmitteln(Nr,SystemPosOhneWVnr."Lfd. Nr.",
                                                    SystemPosOhneWVnr."Wartungsvertragsnr.");
                  SystemPosOhneWVnr.MODIFY;
                END;
              UNTIL SystemPosOhneWVnr.NEXT = 0;
            END;
          END;
        UNTIL Kalkulation.NEXT = 0;
    END;

    PROCEDURE ServiceZugeh”rigkeitErmitteln@1140012(Auftragsnr@1140000 : Code[20];AktLfdNr@1140002 : Code[20];Wartungsnr@1140003 : Code[20]) : Code[20];
    VAR
      PrfeLizenzTab@1140001 : Record 50024;
    BEGIN
      IF Wartungsnr = '' THEN
        EXIT('');

      PrfeLizenzTab.RESET;
      PrfeLizenzTab.SETFILTER(Art,'%1',PrfeLizenzTab.Art::Service);
      PrfeLizenzTab.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
      PrfeLizenzTab.SETFILTER(Basisger„t,'%1',TRUE);
      PrfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
      IF PrfeLizenzTab.FINDFIRST THEN
        EXIT(PrfeLizenzTab."Lfd. Nr.")
      ELSE BEGIN
        PrfeLizenzTab.RESET;
        PrfeLizenzTab.SETFILTER(Art,'%1',PrfeLizenzTab.Art::Service);
        PrfeLizenzTab.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
        PrfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
        IF PrfeLizenzTab.FINDFIRST THEN
          EXIT(PrfeLizenzTab."Lfd. Nr.")
        ELSE
          EXIT(AktLfdNr);
      END;
    END;

    PROCEDURE LizenzdatumAngleichen@1140032(startdate@1140000 : Date;enddate@1140001 : Date;laufzeit@1140002 : Code[20]) : Date;
    VAR
      v_laufzeit@1140003 : Integer;
    BEGIN
      IF (laufzeit <> '') AND (STRPOS(laufzeit,'M') <> 0) THEN BEGIN
        EVALUATE(v_laufzeit,COPYSTR(laufzeit,1,STRPOS(laufzeit,'M')-1));
        IF (v_laufzeit MOD 12 = 0) AND ((TOPAS_API.CalcDays(startdate,enddate) MOD 365) > 1)
        AND (startdate > CALCDATE('-' + laufzeit,enddate)) THEN
          EXIT(CALCDATE('-' + laufzeit,enddate) + 1);
      END;

      EXIT(startdate);
    END;

    PROCEDURE WartungsStartErmitteln@1140010("SUP Artikelnr"@1140002 : Code[20];Startdatum@1140000 : Date;Buchungsdatum@1140001 : Date;Wartungsnr@1140004 : Code[20];Laufzeit_ab_Buchungsdatum@1140007 : Boolean) : Date;
    VAR
      Wartung@1140005 : Record 50011;
      PrfeLizenzTab@1140006 : Record 50024;
      ErmittleNeueServiceGruppe@1140008 : Record 50001;
      ErmittleVertragServiceGruppe@1140009 : Record 50001;
      vdatum@1140003 : Date;
    BEGIN
      IF ("SUP Artikelnr"= 'CHAMPS-RE_INSTATE#01') OR ("SUP Artikelnr" = 'RE_INSTATEMENT_FEE') THEN
        EXIT(0D);

      IF Laufzeit_ab_Buchungsdatum THEN
        EXIT(Buchungsdatum);

      IF Wartungsnr <> '' THEN BEGIN
        PrfeLizenzTab.RESET;
        PrfeLizenzTab.SETFILTER(Art,'%1',PrfeLizenzTab.Art::Service);
        PrfeLizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
        PrfeLizenzTab.SETFILTER("Ablaufdatum Serviceleistung",'>=%1',Buchungsdatum);
        PrfeLizenzTab.SETFILTER("Wartungsvertragsnr.",'%1',Wartungsnr);
        IF PrfeLizenzTab.FINDFIRST THEN
          REPEAT
            ErmittleNeueServiceGruppe.RESET;
            ErmittleNeueServiceGruppe.SETRANGE("Tabellen ID",50024);
            ErmittleNeueServiceGruppe.SETRANGE("Feld ID",44);
            ErmittleNeueServiceGruppe.SETRANGE("Nr.","SUP Artikelnr");
            IF ErmittleNeueServiceGruppe.FINDFIRST THEN BEGIN
                ErmittleVertragServiceGruppe.RESET;
                ErmittleVertragServiceGruppe.SETRANGE("Tabellen ID",50024);
                ErmittleVertragServiceGruppe.SETRANGE("Feld ID",44);
                ErmittleVertragServiceGruppe.SETRANGE("Nr.",PrfeLizenzTab."SUP Artikelnr.");
                IF ErmittleVertragServiceGruppe.FINDFIRST THEN BEGIN
                  IF ErmittleNeueServiceGruppe."Einordnung Servicegruppe" =
                    ErmittleVertragServiceGruppe."Einordnung Servicegruppe" THEN
                      IF PrfeLizenzTab.Lizenzdatum > Buchungsdatum THEN
                        EXIT(PrfeLizenzTab.Lizenzdatum)
                      ELSE
                        EXIT(Buchungsdatum);
              END;
            END;
          UNTIL PrfeLizenzTab.NEXT = 0
        ELSE
          EXIT(Buchungsdatum);
      END ELSE BEGIN
        IF Startdatum <> 0D THEN
          EXIT(Startdatum)
        ELSE BEGIN
          IF "SUP Artikelnr" = 'EXTD-HW-WARR/YR' THEN BEGIN
            vdatum := CALCDATE('1J',Buchungsdatum);
            EXIT(vdatum);
          END ELSE
            EXIT(Buchungsdatum);
        END;
      END;

      EXIT(Buchungsdatum);
    END;

    PROCEDURE WartungsLaufzeitErmitteln@1140007(SUPArtikelnr@1140001 : Code[20];Laufzeit@1140002 : Code[20]) : Code[20];
    VAR
      Opt@1140000 : Record 50001;
    BEGIN
      IF (SUPArtikelnr = 'CHAMPS-RE_INSTATE#01') OR (SUPArtikelnr = 'RE_INSTATEMENT_FEE') THEN
        EXIT;

      IF Laufzeit <> '' THEN BEGIN
        EXIT(Laufzeit)
      END ELSE BEGIN
        Opt.RESET;
        Opt.SETFILTER("Tabellen ID",'%1',50024);
        Opt.SETFILTER("Feld ID",'%1',44);
        Opt.SETFILTER("Nr.",'%1',SUPArtikelnr);
        IF Opt.FINDFIRST THEN BEGIN
          EXIT(Opt.Code);
        END ELSE
          EXIT('12M');
      END;
    END;

    PROCEDURE ServiceArtikelnrErmitteln@1140016(Artikelnr@1140000 : Code[20];SUP_Artikelnr@1140001 : Code[20];Waehrung@1140005 : Code[10];Preislisten_Kalkulation@1000000000 : 'neu,alt') : Code[40];
    VAR
      Servicepreise@1140002 : Record 50028;
      Artikel@1140003 : Record 27;
      ServiceTab@1140006 : Record 50024;
      ACTS@1140004 : Boolean;
    BEGIN
      Artikel.GET(SUP_Artikelnr);
      IF (Artikel.Artikelgruppe = 'ACTS') OR (Artikel.Artikelgruppe = 'ACTS_AHR')
      OR (Artikel.Artikelgruppe = 'ACTS/ACHAT') OR (Artikel.Artikelgruppe = 'ACTS_MSS')
      OR (Artikel.Artikelgruppe = 'ACHAT') OR (Artikel.Artikelgruppe = 'ACTS_SCHAEFFLER')
      OR (Artikel.Artikelgruppe = 'ACTS_MSS_SCHAEFFLER') THEN
        ACTS := TRUE
      ELSE
        ACTS := FALSE;

      IF SUP_Artikelnr = 'CHAMPS-RE_INSTATE#01' THEN
        EXIT('CHAMPS-RE_INSTATEMENT_FEE');
      IF SUP_Artikelnr = 'RE_INSTATEMENT_FEE' THEN
        EXIT('RE_INSTATEMENT_FEE');

      Servicepreise.RESET;
      Servicepreise.SETRANGE("Zuordnung obsolete",FALSE);
      IF ACTS THEN
        Servicepreise.SETRANGE(Art,Servicepreise.Art::ACTS)
      ELSE
        Servicepreise.SETRANGE(Art,Servicepreise.Art::Champs);
      Servicepreise.SETRANGE("Artikelnr.",Artikelnr);
      SUP_Artikelnr := ServiceTab.FakeSUPArtikelErmitteln(SUP_Artikelnr);
      Servicepreise.SETRANGE("SUP Artikelnr.",SUP_Artikelnr);
      Servicepreise.SETRANGE(Status,Preislisten_Kalkulation);
      Servicepreise.SETRANGE(W„hrungscode,Waehrung);
      IF Servicepreise.FINDFIRST THEN
        EXIT(Servicepreise."Service Artikelnr.");
    END;

    PROCEDURE NewPosFromRMA@1140014(LfdNr@1140000 : Code[20];AlteSN@1140001 : Code[20];NeueSN@1140002 : Code[20];"RMA-Nr"@1140005 : Code[20];CopyRec@1140003 : Record 50024;KundenPool@1140008 : Boolean;Artikelnr@1140007 : Code[20]);
    VAR
      NewRec@1140004 : Record 50024;
      PrfeSystemPos@1140006 : Record 50024;
    BEGIN
      IF CopyRec.Reklamiert = FALSE THEN BEGIN
        NewRec.INIT;
        NewRec.TRANSFERFIELDS(CopyRec);
        NewRec."Seriennr." := NeueSN;
        NewRec."Urspr. Seriennr." := AlteSN;
        NewRec.Ersatzverfahren := TRUE;
        NewRec."Ersatz fr Lfd. Nr." := CopyRec."Lfd. Nr.";
        NewRec."Board ini" := '';
        NewRec."Product Key" := '';
        NewRec."Seriennr. 2" := '';
        NewRec."Eingangs BET" := '';
        IF KundenPool THEN BEGIN
          PrfeSystemPos.RESET;
          PrfeSystemPos.SETFILTER(Art,'%1',PrfeSystemPos.Art::System);
          PrfeSystemPos.SETFILTER("Artikelnr.",'%1',Artikelnr);
          PrfeSystemPos.SETFILTER("Seriennr.",'%1',NeueSN);
          PrfeSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
          PrfeSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',CopyRec."Wartungsvertragsnr.");
          IF PrfeSystemPos.FINDFIRST THEN BEGIN
            NewRec."Urspr. Lieferscheinnr." := PrfeSystemPos."Nr.";
            NewRec."Urspr. Lieferscheinzeilennr." := PrfeSystemPos."Belegzeilennr.";
            NewRec."Urspr. Auftragsnr." := PrfeSystemPos."Auftragsnr.";
            NewRec."Urspr. Auftragszeilennr." := PrfeSystemPos."Auftragszeilennr.";
          END;
        END;
        NewRec.INSERT(TRUE);

        CopyRec.Reklamiert := TRUE;
        CopyRec."RMA-Nr." := "RMA-Nr";
        CopyRec.Ersatzverfahren := TRUE;
        //CopyRec."Ersatz durch Lfd. Nr." := NewRec."Lfd. Nr.";
        CopyRec.Inaktiv := TRUE;
        CopyRec.MODIFY(TRUE);
      END;
    END;

    PROCEDURE ServicePreiseNeuKalkulieren@1140000(Artikelnr@1140004 : Code[20];SUP_Artikelnr@1140005 : Code[20];Laufzeit@1140001 : Code[20];Feld@1140002 : Code[20];Runden@1140007 : Boolean;W„hrung@1140010 : Code[20];Quotenr@1140026 : Code[10];Preisliste@1000000001 : 'neu,alt') : Decimal;
    VAR
      ChampRelaDoc@1140000 : Record 50027;
      Service_PL@1140008 : Record 50028;
      Opt_laufzeit@1140006 : Record 50001;
      Artikel@1140011 : Record 27;
      kalk_laufzeit@1140009 : Integer;
      v_laufzeit@1140003 : Integer;
      ACTS@1140012 : Boolean;
      ACTS_AHR@1000000000 : Boolean;
      ACTS_SCHAEFFLER@1140019 : Boolean;
      ACTS_MSS_SCHAEFFLER@1140024 : Boolean;
      ACTS_MSS@1140021 : Boolean;
      ACHAT@1140015 : Boolean;
      APSS_OB@1140023 : Boolean;
      CHAMPS@1140020 : Boolean;
      CHAMPS_PARTNER@1140022 : Boolean;
      RE_INSTATEMENT_FEE@1140025 : Boolean;
      rundgs_faktor@1140013 : Decimal;
      normal_discount@1140017 : Decimal;
      additional_discount@1140018 : Decimal;
      spezial_discount@1140014 : Decimal;
      v_service_laufzeit@1140016 : Integer;
    BEGIN
      //2011-12-06 ST Fr šbergang genutzt, bis eindeutig Servicepreise vor dem Buchen neu kalkuliert werden k”nnen
      //2014-01-10 ST Nun auch fr ACTS
      //2014-01-27 ST Nun auch fr ACHAT
      //2014-06-18 ST Nun auch fr Misch ACTS/ACHAT
      //2014-12-09 ST ACTS Schaeffler Projekt
      //2015-03-18 ST ACTS Managed Spare Service
      //2015-04-27 ST CHAMPS zertifizierte Partner
      //2015-05-12 ST APSS One Box
      //2015-12-10 ST CHAMPS Re Instatement Fee
      //2016-03-23 ST ACTS MSS Schaeffler
      //2017-08-14 ST Trennung von ACTS AHR und ACTS SUPP > neue Gruppe ACTS_AHR

      IF Laufzeit = '' THEN
        EXIT;

      IF Runden THEN
        rundgs_faktor := 1
      ELSE
        rundgs_faktor := 0.01;

      normal_discount := 0;
      additional_discount := 0;
      spezial_discount := 1;

      Artikel.GET(SUP_Artikelnr);
      IF (Artikel."Software Upgrade Protection" = TRUE) THEN BEGIN

        ACTS := FALSE;
        ACTS_AHR := FALSE;
        ACHAT := FALSE;
        ACTS_SCHAEFFLER := FALSE;
        ACTS_MSS_SCHAEFFLER := FALSE;
        ACTS_MSS := FALSE;
        APSS_OB := FALSE;
        CHAMPS := FALSE;
        CHAMPS_PARTNER := FALSE;
        RE_INSTATEMENT_FEE := FALSE;

        IF Artikel.Artikelgruppe = 'ACTS' THEN
          ACTS := TRUE
        ELSE
          IF (Artikel.Artikelgruppe = 'ACTS/ACHAT') OR (Artikel.Artikelgruppe = 'ACTS_AHR') THEN
            ACTS_AHR := TRUE
          ELSE
            IF Artikel.Artikelgruppe = 'ACHAT' THEN
              ACHAT := TRUE
            ELSE
              IF Artikel.Artikelgruppe = 'ACTS_SCHAEFFLER' THEN
                ACTS_SCHAEFFLER := TRUE
              ELSE
                IF Artikel.Artikelgruppe = 'ACTS_MSS_SCHAEFFLER' THEN
                  ACTS_MSS_SCHAEFFLER := TRUE
                ELSE
                  IF Artikel.Artikelgruppe = 'ACTS_MSS' THEN
                    ACTS_MSS := TRUE
                  ELSE
                    IF Artikel.Artikelgruppe = 'CHAMPS' THEN
                      CHAMPS := TRUE
                    ELSE
                      IF Artikel.Artikelgruppe = 'CHAMPS_PARTNER' THEN
                        CHAMPS_PARTNER := TRUE
                      ELSE
                        IF Artikel.Artikelgruppe = 'APSS_OB' THEN
                          APSS_OB := TRUE
                        ELSE
                          IF Artikel.Artikelgruppe = 'CHAMPS_FEE' THEN
                            RE_INSTATEMENT_FEE := TRUE;

        EVALUATE(kalk_laufzeit,COPYSTR(Laufzeit,1,STRPOS(Laufzeit,'M')-1));

        Opt_laufzeit.RESET;
        Opt_laufzeit.SETFILTER("Tabellen ID",'%1',50024);
        Opt_laufzeit.SETFILTER("Feld ID",'%1',44);
        Opt_laufzeit.SETFILTER("Nr.",'%1',SUP_Artikelnr);
        IF Opt_laufzeit.FINDFIRST THEN
          EVALUATE(v_laufzeit,COPYSTR(Opt_laufzeit.Code,1,STRPOS(Opt_laufzeit.Code,'M')-1))
        ELSE
          v_laufzeit := 12;

        Service_PL.RESET;
        Service_PL.SETFILTER("Zuordnung obsolete",'%1',FALSE);
        IF (ACTS = TRUE) OR (ACTS_AHR = TRUE) OR (ACHAT = TRUE) OR (ACTS_MSS = TRUE)
        OR (ACTS_SCHAEFFLER = TRUE) OR (ACTS_MSS_SCHAEFFLER = TRUE) THEN
          Service_PL.SETFILTER(Art,'%1',Service_PL.Art::ACTS)
        ELSE
          Service_PL.SETFILTER(Art,'%1',Service_PL.Art::Champs);
        Service_PL.SETFILTER("Artikelnr.",'%1',Artikelnr);
        SUP_Artikelnr := FakeSUPArtikelErmitteln(SUP_Artikelnr);
        Service_PL.SETFILTER("SUP Artikelnr.",'%1',SUP_Artikelnr);
        Service_PL.SETFILTER(Status,'%1',Preisliste);
        Service_PL.SETFILTER(W„hrungscode,'%1',W„hrung);
        IF Service_PL.FINDFIRST THEN BEGIN
          IF Feld = 'DC' THEN BEGIN

            //CHAMPS und PARTNER EK Konditionen
            IF (CHAMPS = TRUE) OR (CHAMPS_PARTNER) THEN BEGIN
              normal_discount := 0.72;
              v_service_laufzeit := kalk_laufzeit DIV 12;
              CASE v_service_laufzeit OF
                0..1 : additional_discount := 0;
                2 : additional_discount := 0.02; // -2%
                3 : additional_discount := 0.09; // -9%
                4 : additional_discount := 0.12; // -12%
                5..100 : additional_discount := 0.15; // -15%
              END;
            END;

            //ACTS EK Konditionen
            IF ACTS = TRUE THEN BEGIN
              IF ServiceQuoteIsValid(Quotenr) = TRUE THEN
                normal_discount := 0.62
              ELSE BEGIN
                normal_discount := 0.75;
                v_service_laufzeit := kalk_laufzeit DIV 12;
                CASE v_service_laufzeit OF
                  0..1 : additional_discount := 0;
                  2 : additional_discount := 0.02; // -2%
                  3 : additional_discount := 0.09; // -9%
                  4 : additional_discount := 0.12; // -12%
                  5..100 : additional_discount := 0.15; // -15%
                END;
              END;
            END;

            //ACTS AHR EK Konditionen
            IF ACTS_AHR = TRUE THEN BEGIN
              IF ServiceQuoteIsValid(Quotenr) = TRUE THEN
                normal_discount := 0.62
              ELSE BEGIN
                normal_discount := 0.8;
                v_service_laufzeit := kalk_laufzeit DIV 12;
                CASE v_service_laufzeit OF
                  0..1 : additional_discount := 0;
                  2 : additional_discount := 0.02; // -2%
                  3 : additional_discount := 0.09; // -9%
                  4 : additional_discount := 0.12; // -12%
                  5..100 : additional_discount := 0.15; // -15%
                END;
              END;
            END;

            //ACTS Managed Spare Service EK Konditionen
            IF ACTS_MSS = TRUE THEN BEGIN
              //MSS ohne Quote von -10% auf -20% , mit Quote (in Annahme) von -15% auf -20% ge„ndert
              //auch wenn die Werte nun gleich sind, bleibt diese Abfrage bzgl. Quote hier stehen
              IF ServiceQuoteIsValid(Quotenr) = TRUE THEN
                normal_discount := 0.8
              ELSE BEGIN
                normal_discount := 0.8;
                v_service_laufzeit := kalk_laufzeit DIV 12;
                CASE v_service_laufzeit OF
                  0..1 : additional_discount := 0;
                  2 : additional_discount := 0.02; // -2%
                  3 : additional_discount := 0.09; // -9%
                  4 : additional_discount := 0.12; // -12%
                  5..100 : additional_discount := 0.15; // -15%
                END;
              END;
            END;

            //ACHAT EK Konditionen
            IF ACHAT = TRUE THEN BEGIN
              normal_discount := 0.8;
              spezial_discount := 1 / 0.8 *0.58 // fr ACHAT 1 / 0.8 (Zurckrechnung DC auf 100 % MSRP) * 0.58 EK ACHAT
            END;

            //ACTS Schaeffler EK Konditionen
            IF ACTS_SCHAEFFLER = TRUE THEN BEGIN
              normal_discount := 0.5;
            END;

            //ACTS MSS Schaeffler EK Konditionen
            IF ACTS_MSS_SCHAEFFLER = TRUE THEN BEGIN
              normal_discount := 0.8;
            END;

            //APSS One Box EK Konditionen
            IF APSS_OB = TRUE THEN BEGIN
              IF ServiceQuoteIsValid(Quotenr) = TRUE THEN
                normal_discount := 0.62
              ELSE BEGIN
                normal_discount := 0.65;
                v_service_laufzeit := kalk_laufzeit DIV 12;
                CASE v_service_laufzeit OF
                  0..1 : additional_discount := 0;
                  2 : additional_discount := 0.02; // -5%
                  3 : additional_discount := 0.09; // -9%
                  4 : additional_discount := 0.12; // -12%
                  5..100 : additional_discount := 0.15; // -15%
                END;
              END;
            END;

            //Re Instatement Fee
            IF RE_INSTATEMENT_FEE = TRUE THEN BEGIN
              normal_discount := 0.72;
              spezial_discount := 1.25;
            END;

            EXIT((ROUND((((Service_PL.MSRP * (normal_discount - additional_discount)) * Service_PL."Laufzeit in Jahren") *
                  (kalk_laufzeit/v_laufzeit)) * (spezial_discount),rundgs_faktor)));
          END;

          IF Feld = 'MSRP' THEN
            EXIT(ROUND((Service_PL.MSRP * Service_PL."Laufzeit in Jahren") * (kalk_laufzeit / v_laufzeit),rundgs_faktor));

        END ELSE
          EXIT(0);
      END;
    END;

    PROCEDURE CheckDoubleSerialNo@1140022(Artnr@1140001 : Code[20];SN@1140000 : Code[20]) : Boolean;
    VAR
      ServicePos@1140002 : Record 50024;
      wartungsnr@1140003 : Code[20];
    BEGIN
      IF (Artnr = '') OR (SN = '') THEN
        EXIT(FALSE);

      //ServicePos.SETRANGE(Art,Art::Service,Art::System);
      ServicePos.SETRANGE(Art,Art::System);
      ServicePos.SETRANGE("Artikelnr.",Artnr);
      ServicePos.SETRANGE("Seriennr.",SN);
      ServicePos.SETRANGE(Inaktiv,FALSE);
      IF ServicePos.FINDFIRST THEN
        REPEAT
          IF wartungsnr <> '' THEN
            IF wartungsnr <> ServicePos."Wartungsvertragsnr." THEN
              ERROR(Text032,SN,wartungsnr,ServicePos."Wartungsvertragsnr.");
          wartungsnr := ServicePos."Wartungsvertragsnr.";
        UNTIL ServicePos.NEXT = 0;

      EXIT(FALSE);
    END;

    PROCEDURE EndkundenInfoUpdate@1140020(Liefkopf@1140001 : Record 110;Wartung@1140002 : Record 50011);
    BEGIN
      WITH Wartung DO BEGIN
        IF (Liefkopf.Endkunde <> '') AND ((Endkunde = '') OR (("Endkunde Ort" = '') AND ("Endkunde E-Mail" = ''))) THEN BEGIN
          Wartung.Endkunde := Liefkopf.Endkunde;
          Wartung."Endkunde Adresse" := Liefkopf."Endkunde Adresse";
          Wartung."Endkunde PLZ-Code" := Liefkopf."Endkunde PLZ-Code";
          Wartung."Endkunde Ort"  := Liefkopf."Endkunde Ort";
          Wartung."Endkunde Land" := Liefkopf."Endkunde Land";
          Wartung."Endkunde Kontakt" := Liefkopf."Endkunde Kontakt";
          Wartung."Endkunde Telefonnr." := Liefkopf."Endkunde Telefonnr.";
          Wartung."Endkunde E-Mail" := Liefkopf."Endkunde E-Mail";
          Wartung."Systemhaus Kontakt" := Liefkopf."Systemhaus Kontakt";
          Wartung."Systemhaus E-Mail" := Liefkopf."Systemhaus E-Mail";
          Wartung.MODIFY(TRUE);
        END;
      END;
    END;

    PROCEDURE SystemPos_verschieben@1140025(Aktueller_WV@1140004 : Code[20];Neuer_WV@1140005 : Code[20]) : Boolean;
    VAR
      AlterVertrag@1140003 : Record 50011;
      NeuerVertrag@1140000 : Record 50011;
      SystemPos@1140001 : Record 50024;
      NeueSystemPos@1140002 : Record 50024;
      aktion@1140006 : Boolean;
    BEGIN
      aktion := FALSE;

      IF NOT CONFIRM(Text070,TRUE,"Seriennr.",Neuer_WV) THEN
        EXIT(aktion);

      NeuerVertrag.GET(Neuer_WV);

      SystemPos.RESET;
      SystemPos.SETFILTER(Art,'%1',SystemPos.Art::System);
      SystemPos.SETFILTER("Zum Verschieben markieren",'%1',TRUE);
      SystemPos.SETFILTER("Wartungsvertragsnr.",'%1',Aktueller_WV);
      IF SystemPos.FINDFIRST THEN
        REPEAT
          //IF SystemPos.Basisger„t = TRUE THEN ERROR(Text071);
          IF SystemPos_aktion_gesperrt(SystemPos."Artikelnr.",SystemPos."Seriennr.",SystemPos."Nr.",
          SystemPos."Belegzeilennr.") = FALSE THEN BEGIN
            SystemPos."Wartungsvertragsnr." := NeuerVertrag."Wartungsvertragsnr.";
            SystemPos."Hauptwartungsvertragsnr." := NeuerVertrag."Hauptwartungsvertragsnr.";
            SystemPos."Zum Verschieben markieren" := FALSE;

            NeueSystemPos.RESET;
            NeueSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
            NeueSystemPos.SETFILTER(Art,'%1',NeueSystemPos.Art::System);
            NeueSystemPos.SETFILTER(Basisger„t,'%1',TRUE);
            NeueSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',NeuerVertrag."Wartungsvertragsnr.");
            IF NeueSystemPos.FINDFIRST THEN BEGIN
              SystemPos."Geh”rt zu Lfd. Nr." := NeueSystemPos."Geh”rt zu Lfd. Nr.";
            END ELSE BEGIN
              NeueSystemPos.RESET;
              NeueSystemPos.SETFILTER(Inaktiv,'%1',FALSE);
              NeueSystemPos.SETFILTER(Art,'%1',NeueSystemPos.Art::System);
              NeueSystemPos.SETFILTER("Wartungsvertragsnr.",'%1',NeuerVertrag."Wartungsvertragsnr.");
              IF NeueSystemPos.FINDFIRST THEN BEGIN
                SystemPos."Geh”rt zu Lfd. Nr." := NeueSystemPos."Geh”rt zu Lfd. Nr.";
              END ELSE
                IF SystemPos.Basisger„t = TRUE THEN
                  SystemPos."Geh”rt zu Lfd. Nr." := SystemPos."Lfd. Nr."
                ELSE
                  MESSAGE(Text072,SystemPos."Seriennr.",SystemPos.FIELDCAPTION("Geh”rt zu Lfd. Nr."));
            END;

            IF SystemPos.Basisger„t = TRUE THEN BEGIN
              AlterVertrag.GET(Aktueller_WV);
              IF (NeuerVertrag.Basisger„t = '') OR (NeuerVertrag."Ablauf Gew„hrleistung" = 0D) THEN BEGIN
                NeuerVertrag."Debitornr." := AlterVertrag."Debitornr.";
                NeuerVertrag.Basisger„t := AlterVertrag.Basisger„t;
                NeuerVertrag."Ablauf Gew„hrleistung" := AlterVertrag."Ablauf Gew„hrleistung";
                NeuerVertrag.MODIFY(TRUE);
              END;

              IF AlterVertrag.Klasse = AlterVertrag.Klasse::Mehrger„te THEN BEGIN
                AlterVertrag.Volumen -= 1;
                AlterVertrag.MODIFY(TRUE);
                NeuerVertrag.Volumen += 1;
                NeuerVertrag.MODIFY(TRUE);
              END;
            END;

            SystemPos.MODIFY(TRUE);
            aktion :=  TRUE;
            MESSAGE(Text073,SystemPos."Seriennr.",Neuer_WV);
          END;
        UNTIL SystemPos.NEXT = 0;

      EXIT(aktion);
    END;

    PROCEDURE SystemPos_aktion_gesperrt@1140026(Artikelnr@1140000 : Code[20];Seriennr@1140001 : Code[20];Lieferscheinnr@1140002 : Code[20];Lieferscheinzeilennr@1140003 : Integer) : Boolean;
    VAR
      TempSystemPos@1140004 : Record 50024;
    BEGIN
      //Prft, ob die Seriennr. auch tempor„r vorbelegt wurden, um Fehlbuchungen zu verhindern
      TempSystemPos.RESET;
      TempSystemPos.SETFILTER(Art,'%1',TempSystemPos.Art::Tempor„r);
      TempSystemPos.SETFILTER("Artikelnr.",'%1',Artikelnr);
      TempSystemPos.SETFILTER("Seriennr.",'%1',Seriennr);
      TempSystemPos.SETFILTER("Nr.",'%1',Lieferscheinnr);
      TempSystemPos.SETFILTER("Belegzeilennr.",'%1',Lieferscheinzeilennr);
      TempSystemPos.SETFILTER(Vormerkung,'%1',TRUE);
      IF TempSystemPos.FINDFIRST THEN BEGIN
        IF CONFIRM(Text074,TRUE) THEN BEGIN
          TempSystemPos.MODIFYALL(Vormerkung,FALSE);
          EXIT(FALSE);
        END ELSE
          EXIT(TRUE);
      END ELSE
        EXIT(FALSE);
    END;

    PROCEDURE FakeSUPArtikelErmitteln@1140023(SUP_Artikelnr@1140000 : Code[20]) : Code[20];
    BEGIN
      CASE SUP_Artikelnr OF
      //Fr ACHAT wird auf das ACTS pendant verwiesen, spart separate ACHAT Preisliste
        'ACHAT/SOFTWARE/24#01' : EXIT('ACTS-SUPP-24x7/SO#01');
        'ACHAT/SOFTWARE/24#02' : EXIT('ACTS-SUPP-24x7/SO#02');
        'ACHAT-ADV-HWREPLA#01' : EXIT('ACTS-ADV-HWREPLAC#01');
      //Manuelle Artikel Filter erspart separate CHAMPS Partner Preisliste
        'CHAMPS-BASIC-9X5-#01' : EXIT('CHAMPS-SUPP-8X5/S#01');
        'CHAMPS-BASIC-9X5-#02' : EXIT('CHAMPS-SUPP-8X5/S#02');
        'CHAMPS-BASIC-24X7#01' : EXIT('CHAMPS-SUPP-24X7/#01');
        'CHAMPS-BASIC-24X7#02' : EXIT('CHAMPS-SUPP-24X7/#02');
        'CHAMPS-BASIC-AHR/1YR' : EXIT('CHAMPS-ADV-HWREPL#01');
        'CHAMPS-BASIC-AHR/3YR' : EXIT('CHAMPS-ADV-HWREPL#02');
      //Manuelle Artikel Filter erspart separate APSS One Box Preisliste
        'APSS-OB-9X5/SOFTWARE' : EXIT('CHAMPS-SUPP-8X5/S#01');
        'APSS-OB-9X5/SOFTW#01' : EXIT('CHAMPS-SUPP-8X5/S#02');
        'APSS-OB-24X7/SOFT#01' : EXIT('CHAMPS-SUPP-24X7/#01');
        'APSS-OB-24X7/SOFT#02' : EXIT('CHAMPS-SUPP-24X7/#02');
      //Re Instatement Fee
        'CHAMPS-RE_INSTATE#01' : EXIT('CHAMPS-SUPP-8X5/S#01');
        'RE_INSTATEMENT_FEE'   : EXIT('CHAMPS-SUPP-8X5/S#01');
      END;

      EXIT(SUP_Artikelnr);
    END;

    PROCEDURE ServiceQuoteIsValid@1140027(quotenr@1140001 : Code[10]) : Boolean;
    VAR
      Quote@1140000 : Record 50014;
    BEGIN
      IF quotenr = '' THEN EXIT(FALSE);

      IF Quote.GET(quotenr) THEN BEGIN
        IF (Quote.Herstellercode = '57') OR (Quote.Herstellercode = '5710') OR (Quote.Herstellercode = '5720') THEN
          IF (Quote.Gltigkeitsdatum < WORKDATE) OR (Quote."Gltig ab Datum" > WORKDATE) OR (Quote."Quotenr. Hersteller" <> '1023679') THEN
            EXIT(FALSE)
          ELSE
            EXIT(TRUE)
        ELSE
          EXIT(FALSE);
      END ELSE
        EXIT(FALSE);
    END;

    PROCEDURE PrfeWartungsAnlageAktion@1140028(artikelnr@1140000 : Code[20];fremdbezug@1140002 : Boolean;Kalkulation@1140003 : Record 50027) : Boolean;
    VAR
      Artikel@1140001 : Record 27;
      Wartungsvertrag@1140004 : Record 50011;
    BEGIN
      IF (Artikel.GET(artikelnr)) AND (Artikel.Serviceklassifizierung = 'SYSTEM FLAT') AND (fremdbezug) THEN BEGIN
        WITH Kalkulation DO BEGIN
          SETRANGE("Nr.","Nr.");
          SETRANGE("Zeilennr.","Zeilennr.");
          SETRANGE(Basisger„t,TRUE);
          SETRANGE(Fremderwerb,FALSE);
          IF FINDFIRST THEN
            EXIT(FALSE);

          Wartungsvertrag.RESET;
          Wartungsvertrag.SETRANGE(Basisger„t,"Ger„te Artikelnr.");
          Wartungsvertrag.SETRANGE("Lieferscheinnr.","Belegnr.");
          IF Wartungsvertrag.FINDFIRST THEN
            EXIT(FALSE);
        END;
      END;

      EXIT(TRUE);
    END;

    PROCEDURE PrfeBetreuerWechsel@1140029(Vertragsnr@1140005 : Code[20];VertragsDebnr@1140000 : Code[20];NeueDebnr@1140001 : Code[20]);
    VAR
      Vertrag@1140002 : Record 50011;
      DebKontaktBez@1140003 : Record 5054;
      Beteiligte@1140004 : Record 50005;
    BEGIN
      IF (VertragsDebnr = NeueDebnr) OR (NeueDebnr = '') OR (Vertragsnr = '') THEN EXIT;

      Vertrag.GET(Vertragsnr);

      // Žndern der Fhrungsrolle anhand des neuen Betreuers
      IF VertragsDebnr <> NeueDebnr THEN BEGIN
          Beteiligte.RESET;
          Beteiligte.SETRANGE("Kampagnennr.",Vertrag."Wartungsvertragsnr.");
          Beteiligte.SETRANGE(Fhrungsrolle,TRUE);
          IF Beteiligte.FINDFIRST THEN BEGIN
            DebKontaktBez.RESET;
            DebKontaktBez.SETRANGE("Business Relation Code",'DEB');
            DebKontaktBez.SETRANGE("No.",NeueDebnr);
            IF (DebKontaktBez.FINDFIRST) AND (Beteiligte."Kontaktnr." <> DebKontaktBez."Contact No.") THEN BEGIN
              Beteiligte.Fhrungsrolle := FALSE;
              Beteiligte.Bemerkung := 'autom. Betreuerwechsel';
              Beteiligte.MODIFY;
            END ELSE BEGIN
            END;
          END;

        DebKontaktBez.RESET;
        DebKontaktBez.SETRANGE("Business Relation Code",'DEB');
        DebKontaktBez.SETRANGE("No.",NeueDebnr);
        IF DebKontaktBez.FINDFIRST THEN BEGIN
          Beteiligte.RESET;
          Beteiligte.SETRANGE("Kampagnennr.",Vertrag."Wartungsvertragsnr.");
          Beteiligte.SETRANGE("Kontaktnr.",DebKontaktBez."Contact No.");
          IF NOT Beteiligte.FINDFIRST THEN BEGIN
            Beteiligte.INIT;
            Beteiligte.VALIDATE("Kontaktnr.",DebKontaktBez."Contact No.");
            Beteiligte."Kampagnennr." := Vertrag."Wartungsvertragsnr.";
            Beteiligte.Fhrungsrolle := TRUE;
            Beteiligte.INSERT;
          END ELSE BEGIN
              Beteiligte.Fhrungsrolle := TRUE;
              Beteiligte.MODIFY;
          END;
          Vertrag.GET(Vertragsnr);
          Vertrag.VALIDATE("Debitornr.",NeueDebnr);
          Vertrag."Systemhaus Kontakt" := '';
          Vertrag."Systemhaus E-Mail" := '';
          Vertrag.MODIFY;
        END;
      END;
    END;

    PROCEDURE AlleTempSeriennrVormerken@1140030(VAR FromTempSystemPos@1140000 : Record 50024) : Boolean;
    VAR
      UpdateTempSystemPos@1140001 : Record 50024;
    BEGIN
      IF FromTempSystemPos.HASFILTER THEN BEGIN
        IF CONFIRM(Text077,TRUE) = TRUE THEN BEGIN
          UpdateTempSystemPos.RESET;
          UpdateTempSystemPos.SETRANGE(Art,FromTempSystemPos.Art);
          UpdateTempSystemPos.SETRANGE("Auftragsnr.",FromTempSystemPos."Auftragsnr.");
          UpdateTempSystemPos.SETRANGE("Auftragszeilennr.",FromTempSystemPos."Auftragszeilennr.");
          IF UpdateTempSystemPos.FIND('-') THEN BEGIN
            REPEAT
              UpdateTempSystemPos.VALIDATE(Vormerkung,TRUE);
              UpdateTempSystemPos.MODIFY;
            UNTIL UpdateTempSystemPos.NEXT = 0;
            EXIT(TRUE);
          END;
        END;
      END;
    END;

    LOCAL PROCEDURE GetCampaignNoFromSalesDoc@1000000000(OrderNo@1000000002 : Code[20];OrderLineNo@1000000003 : Integer) : Code[20];
    VAR
      SalesLine@1000000000 : Record 37;
      SalesLineArchive@1000000001 : Record 5108;
    BEGIN
      SalesLineArchive.SETRANGE("Document Type",SalesLineArchive."Document Type"::Order);
      SalesLineArchive.SETRANGE("Document No.",OrderNo);
      SalesLineArchive.SETRANGE("Line No.",OrderLineNo);
      SalesLineArchive.SETFILTER("Kampagnennr.",'<>%1','');
      SalesLineArchive.SETFILTER(Quantity,'>%1',0);
      IF SalesLineArchive.FINDLAST THEN BEGIN
        EXIT(SalesLineArchive."Kampagnennr.");
      END;
      SalesLine.SETRANGE("Document Type",SalesLine."Document Type"::Order);
      SalesLine.SETRANGE("Document No.",OrderNo);
      SalesLine.SETRANGE("Line No.",OrderLineNo);
      SalesLine.SETFILTER("Kampagnennr.",'<>%1','');
      SalesLine.SETFILTER(Quantity,'>%1',0);
      IF SalesLine.FINDFIRST THEN BEGIN
        EXIT(SalesLine."Kampagnennr.");
      END;
    END;

    LOCAL PROCEDURE AllowContractStatusRefresh@1000000001(ItemNo@1000000001 : Code[20]) : Boolean;
    VAR
      TroubleshootingSetup@1000000000 : Record 5945;
    BEGIN
      TroubleshootingSetup.SETRANGE(Type,TroubleshootingSetup.Type::Item);
      TroubleshootingSetup.SETRANGE("No.",ItemNo);
      IF TroubleshootingSetup.FINDFIRST THEN BEGIN
        REPEAT
          //Bei Managed Spare Services soll kein Wartungsvertrag Status etc. aktualisiert werden
          IF STRPOS(TroubleshootingSetup."Troubleshooting No.",'MS_') <> 0 THEN
            EXIT(FALSE);
        UNTIL TroubleshootingSetup.NEXT = 0;
      END;
      EXIT(TRUE);
    END;

    BEGIN
    {
      # TOPAS 01.03.11 ST - System wurde um die SUP Software Upgrade Protection erweitert
      # TOPAS 26.08.11 ST - Neues CHAMPS/Service System released, erweitertes SUP Modul
    }
    END.
  }
}

