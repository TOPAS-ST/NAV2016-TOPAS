OBJECT Table 79 Company Information
{
  OBJECT-PROPERTIES
  {
    Date=01.03.23;
    Time=17:00:00;
    Modified=Yes;
    Version List=NAVW19.00.00.50293,NAVDACH9.00.00.50293,TOP1.02;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Firmendaten;
               ENU=Company Information];
  }
  FIELDS
  {
    { 1   ;   ;Primary Key         ;Code10        ;CaptionML=[DEU=Prim„rschlssel;
                                                              ENU=Primary Key] }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[DEU=Name;
                                                              ENU=Name] }
    { 3   ;   ;Name 2              ;Text50        ;CaptionML=[DEU=Name 2;
                                                              ENU=Name 2] }
    { 4   ;   ;Address             ;Text50        ;CaptionML=[DEU=Adresse;
                                                              ENU=Address] }
    { 5   ;   ;Address 2           ;Text50        ;CaptionML=[DEU=Adresse 2;
                                                              ENU=Address 2] }
    { 6   ;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[DEU=Ort;
                                                              ENU=City] }
    { 7   ;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[DEU=Telefonnr.;
                                                              ENU=Phone No.] }
    { 8   ;   ;Phone No. 2         ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[DEU=Telefonnr. 2;
                                                              ENU=Phone No. 2] }
    { 9   ;   ;Telex No.           ;Text30        ;CaptionML=[DEU=Telexnr.;
                                                              ENU=Telex No.] }
    { 10  ;   ;Fax No.             ;Text30        ;CaptionML=[DEU=Faxnr.;
                                                              ENU=Fax No.] }
    { 11  ;   ;Giro No.            ;Text20        ;CaptionML=[DEU=Postgirokontonr.;
                                                              ENU=Giro No.] }
    { 12  ;   ;Bank Name           ;Text50        ;CaptionML=[DEU=Bankname;
                                                              ENU=Bank Name] }
    { 13  ;   ;Bank Branch No.     ;Text20        ;CaptionML=[DEU=BLZ;
                                                              ENU=Bank Branch No.] }
    { 14  ;   ;Bank Account No.    ;Text30        ;CaptionML=[DEU=Bankkontonummer;
                                                              ENU=Bank Account No.] }
    { 15  ;   ;Payment Routing No. ;Text20        ;CaptionML=[DEU=Zahlungsauftragsnr.;
                                                              ENU=Payment Routing No.] }
    { 17  ;   ;Customs Permit No.  ;Text10        ;CaptionML=[DEU=Zollabfertigungsnr.;
                                                              ENU=Customs Permit No.] }
    { 18  ;   ;Customs Permit Date ;Date          ;CaptionML=[DEU=Zollabfertigungsdatum;
                                                              ENU=Customs Permit Date] }
    { 19  ;   ;VAT Registration No.;Text20        ;OnValidate=VAR
                                                                VATRegNoFormat@1000 : Record 381;
                                                              BEGIN
                                                                VATRegNoFormat.Test("VAT Registration No.","Country/Region Code",'',DATABASE::"Company Information");
                                                              END;

                                                   CaptionML=[DEU=USt-IdNr.;
                                                              ENU=VAT Registration No.] }
    { 20  ;   ;Registration No.    ;Text20        ;CaptionML=[DEU=Steuernummer;
                                                              ENU=Registration No.] }
    { 21  ;   ;Telex Answer Back   ;Text20        ;CaptionML=[DEU=Telex Namengeber;
                                                              ENU=Telex Answer Back] }
    { 22  ;   ;Ship-to Name        ;Text50        ;CaptionML=[DEU=Lief. an Name;
                                                              ENU=Ship-to Name] }
    { 23  ;   ;Ship-to Name 2      ;Text50        ;CaptionML=[DEU=Lief. an Name 2;
                                                              ENU=Ship-to Name 2] }
    { 24  ;   ;Ship-to Address     ;Text50        ;CaptionML=[DEU=Lief. an Adresse;
                                                              ENU=Ship-to Address] }
    { 25  ;   ;Ship-to Address 2   ;Text50        ;CaptionML=[DEU=Lief. an Adresse 2;
                                                              ENU=Ship-to Address 2] }
    { 26  ;   ;Ship-to City        ;Text30        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[DEU=Lief. an Ort;
                                                              ENU=Ship-to City] }
    { 27  ;   ;Ship-to Contact     ;Text50        ;CaptionML=[DEU=Lief. an Kontakt;
                                                              ENU=Ship-to Contact] }
    { 28  ;   ;Location Code       ;Code10        ;TableRelation=Location WHERE (Use As In-Transit=CONST(No));
                                                   CaptionML=[DEU=Lagerortcode;
                                                              ENU=Location Code] }
    { 29  ;   ;Picture             ;BLOB          ;CaptionML=[DEU=Bild;
                                                              ENU=Picture];
                                                   SubType=Bitmap }
    { 30  ;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".Code
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".Code WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[DEU=PLZ-Code;
                                                              ENU=Post Code] }
    { 31  ;   ;County              ;Text30        ;CaptionML=[DEU=Bundesregion;
                                                              ENU=County] }
    { 32  ;   ;Ship-to Post Code   ;Code20        ;TableRelation=IF (Ship-to Country/Region Code=CONST()) "Post Code".Code
                                                                 ELSE IF (Ship-to Country/Region Code=FILTER(<>'')) "Post Code".Code WHERE (Country/Region Code=FIELD(Ship-to Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Ship-to City","Ship-to Post Code","Ship-to County","Ship-to Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[DEU=Lief. an PLZ-Code;
                                                              ENU=Ship-to Post Code] }
    { 33  ;   ;Ship-to County      ;Text30        ;CaptionML=[DEU=Lief. an Bundesregion;
                                                              ENU=Ship-to County] }
    { 34  ;   ;E-Mail              ;Text80        ;ExtendedDatatype=E-Mail;
                                                   CaptionML=[DEU=E-Mail;
                                                              ENU=E-Mail] }
    { 35  ;   ;Home Page           ;Text80        ;ExtendedDatatype=URL;
                                                   CaptionML=[DEU=Homepage;
                                                              ENU=Home Page] }
    { 36  ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[DEU=L„nder-/Regionscode;
                                                              ENU=Country/Region Code] }
    { 37  ;   ;Ship-to Country/Region Code;Code10 ;TableRelation=Country/Region;
                                                   CaptionML=[DEU=Lief. an L„nder-/Regionscode;
                                                              ENU=Ship-to Country/Region Code] }
    { 38  ;   ;IBAN                ;Code50        ;OnValidate=BEGIN
                                                                CheckIBAN(IBAN);
                                                              END;

                                                   CaptionML=[DEU=IBAN;
                                                              ENU=IBAN] }
    { 39  ;   ;SWIFT Code          ;Code20        ;CaptionML=[DEU=SWIFT-Code;
                                                              ENU=SWIFT Code] }
    { 40  ;   ;Industrial Classification;Text30   ;CaptionML=[DEU=Branchencode;
                                                              ENU=Industrial Classification] }
    { 41  ;   ;IC Partner Code     ;Code20        ;AccessByPermission=TableData 410=R;
                                                   CaptionML=[DEU=IC-Partnercode;
                                                              ENU=IC Partner Code] }
    { 42  ;   ;IC Inbox Type       ;Option        ;OnValidate=BEGIN
                                                                IF "IC Inbox Type" = "IC Inbox Type"::Database THEN
                                                                  "IC Inbox Details" := '';
                                                              END;

                                                   AccessByPermission=TableData 410=R;
                                                   CaptionML=[DEU=IC-Eingangsart;
                                                              ENU=IC Inbox Type];
                                                   OptionCaptionML=[DEU=Dateispeicherort,Datenbank;
                                                                    ENU=File Location,Database];
                                                   OptionString=File Location,Database }
    { 43  ;   ;IC Inbox Details    ;Text250       ;OnLookup=VAR
                                                              FileMgt@1000 : Codeunit 419;
                                                              FileName@1002 : Text;
                                                              FileName2@1003 : Text;
                                                              Path@1004 : Text;
                                                            BEGIN
                                                              TESTFIELD("IC Partner Code");
                                                              CASE "IC Inbox Type" OF
                                                                "IC Inbox Type"::"File Location":
                                                                  BEGIN
                                                                    IF "IC Inbox Details" = '' THEN
                                                                      FileName := STRSUBSTNO('%1.xml',"IC Partner Code")
                                                                    ELSE
                                                                      FileName := "IC Inbox Details" + STRSUBSTNO('\%1.xml',"IC Partner Code");

                                                                    FileName2 := FileMgt.SaveFileDialog(Text001,FileName,'');
                                                                    IF FileName <> FileName2 THEN BEGIN
                                                                      Path := FileMgt.GetDirectoryName(FileName2);
                                                                      IF Path <> '' THEN
                                                                        "IC Inbox Details" := COPYSTR(Path,1,250);
                                                                    END;
                                                                  END;
                                                              END;
                                                            END;

                                                   AccessByPermission=TableData 410=R;
                                                   CaptionML=[DEU=IC-Eingangsdetails;
                                                              ENU=IC Inbox Details] }
    { 46  ;   ;System Indicator    ;Option        ;CaptionML=[DEU=Systemindikator;
                                                              ENU=System Indicator];
                                                   OptionCaptionML=[DEU=Keine,Benutzerdefinierter Text,Firmendaten,Unternehmen,Datenbank,Unternehmen+Datenbank;
                                                                    ENU=None,Custom Text,Company Information,Company,Database,Company+Database];
                                                   OptionString=None,Custom Text,Company Information,Company,Database,Company+Database }
    { 47  ;   ;Custom System Indicator Text;Text250;
                                                   CaptionML=[DEU=Benutzerdefinierter Systemindikatortext;
                                                              ENU=Custom System Indicator Text] }
    { 48  ;   ;System Indicator Style;Option      ;CaptionML=[DEU=Systemindikatorstil;
                                                              ENU=System Indicator Style];
                                                   OptionCaptionML=[DEU=Standard,Accent1,Accent2,Accent3,Accent4,Accent5,Accent6,Accent7,Accent8,Accent9;
                                                                    ENU=Standard,Accent1,Accent2,Accent3,Accent4,Accent5,Accent6,Accent7,Accent8,Accent9];
                                                   OptionString=Standard,Accent1,Accent2,Accent3,Accent4,Accent5,Accent6,Accent7,Accent8,Accent9 }
    { 50  ;   ;Allow Blank Payment Info.;Boolean  ;CaptionML=[DEU=Erlauben Sie leere Zahlungsinformationen.;
                                                              ENU=Allow Blank Payment Info.] }
    { 90  ;   ;GLN                 ;Code13        ;OnValidate=VAR
                                                                GLNCalculator@1000 : Codeunit 1607;
                                                              BEGIN
                                                                IF GLN <> '' THEN
                                                                  IF NOT GLNCalculator.IsValidCheckDigit13(GLN) THEN
                                                                    ERROR(GLNCheckDigitErr,FIELDCAPTION(GLN));
                                                              END;

                                                   CaptionML=[DEU=GLN;
                                                              ENU=GLN];
                                                   Numeric=Yes }
    { 101 ;   ;Intrastat Contact Type;Option      ;OnValidate=BEGIN
                                                                IF "Intrastat Contact Type" <> xRec."Intrastat Contact Type" THEN
                                                                  VALIDATE("Intrastat Contact No.",'');
                                                              END;

                                                   CaptionML=[DEU=Intrastat-Kontaktart;
                                                              ENU=Intrastat Contact Type];
                                                   OptionCaptionML=[DEU=" ,Kontakt,Kreditor";
                                                                    ENU=" ,Contact,Vendor"];
                                                   OptionString=[ ,Contact,Vendor] }
    { 102 ;   ;Intrastat Contact No.;Code20       ;TableRelation=IF (Intrastat Contact Type=CONST(Contact)) Contact.No.
                                                                 ELSE IF (Intrastat Contact Type=CONST(Vendor)) Vendor.No.;
                                                   CaptionML=[DEU=Intrastat-Kontaktnr.;
                                                              ENU=Intrastat Contact No.] }
    { 5700;   ;Responsibility Center;Code10       ;TableRelation="Responsibility Center".Code;
                                                   ValidateTableRelation=Yes;
                                                   CaptionML=[DEU=Zust„ndigkeitseinheitencode;
                                                              ENU=Responsibility Center] }
    { 5791;   ;Check-Avail. Period Calc.;DateFormula;
                                                   AccessByPermission=TableData 27=R;
                                                   CaptionML=[DEU=Verfgbarkeitsber. - Periode;
                                                              ENU=Check-Avail. Period Calc.] }
    { 5792;   ;Check-Avail. Time Bucket;Option    ;AccessByPermission=TableData 27=R;
                                                   CaptionML=[DEU=Verfgbarkeitsber. -Zeitrahmen;
                                                              ENU=Check-Avail. Time Bucket];
                                                   OptionCaptionML=[DEU=Tag,Woche,Monat,Quartal,Jahr;
                                                                    ENU=Day,Week,Month,Quarter,Year];
                                                   OptionString=Day,Week,Month,Quarter,Year }
    { 7600;   ;Base Calendar Code  ;Code10        ;TableRelation="Base Calendar";
                                                   CaptionML=[DEU=Basiskalendercode;
                                                              ENU=Base Calendar Code] }
    { 7601;   ;Cal. Convergence Time Frame;DateFormula;
                                                   InitValue=1Y;
                                                   AccessByPermission=TableData 7600=R;
                                                   CaptionML=[DEU=Kalender šbereinst.-Zeitraum;
                                                              ENU=Cal. Convergence Time Frame] }
    { 11000;  ;Area                ;Code10        ;TableRelation=Area;
                                                   CaptionML=[DEU=Bundesland;
                                                              ENU=Area] }
    { 11001;  ;Place of Dispatcher ;Code10        ;TableRelation="Place of Dispatcher";
                                                   CaptionML=[DEU=Sitz des Versenders;
                                                              ENU=Place of Dispatcher] }
    { 11002;  ;Place of Receiver   ;Code10        ;TableRelation="Place of Receiver";
                                                   CaptionML=[DEU=Sitz des Empf„ngers;
                                                              ENU=Place of Receiver] }
    { 11003;  ;Sales Authorized No.;Code8         ;CaptionML=[DEU=Verk.-Material Nummer;
                                                              ENU=Sales Authorized No.] }
    { 11004;  ;Purch. Authorized No.;Code8        ;CaptionML=[DEU=Eink.-Material Nummer;
                                                              ENU=Purch. Authorized No.] }
    { 11005;  ;Company No.         ;Text10        ;CaptionML=[DEU=Unternehmensnr.;
                                                              ENU=Company No.] }
    { 11006;  ;Special Agreement   ;Text20        ;CaptionML=[DEU=Sonderverfahrennr.;
                                                              ENU=Special Agreement] }
    { 11007;  ;Agency No.          ;Text10        ;CaptionML=[DEU=Unternehmen;
                                                              ENU=Agency No.] }
    { 11008;  ;Tax Office Name     ;Text50        ;CaptionML=[DEU=Finanzamt Name;
                                                              ENU=Tax Office Name] }
    { 11009;  ;Tax Office Name 2   ;Text50        ;CaptionML=[DEU=Finanzamt Name 2;
                                                              ENU=Tax Office Name 2] }
    { 11010;  ;Tax Office Address  ;Text50        ;CaptionML=[DEU=Finanzamt Adresse;
                                                              ENU=Tax Office Address] }
    { 11011;  ;Tax Office Address 2;Text50        ;CaptionML=[DEU=Finanzamt Adresse 2;
                                                              ENU=Tax Office Address 2] }
    { 11012;  ;Tax Office City     ;Text50        ;TableRelation=IF (Tax Office Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Tax Office Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Tax Office Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(
                                                                  "Tax Office City","Tax Office Post Code","Tax Office County",
                                                                  "Tax Office Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[DEU=Finanzamt Ort;
                                                              ENU=Tax Office City] }
    { 11013;  ;Tax Office Post Code;Code20        ;TableRelation=IF (Tax Office Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Tax Office Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Tax Office Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(
                                                                  "Tax Office City","Tax Office Post Code","Tax Office County",
                                                                  "Tax Office Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[DEU=Finanzamt PLZ Code;
                                                              ENU=Tax Office Post Code] }
    { 11014;  ;Tax Office Country/Region Code;Code10;
                                                   TableRelation=Country/Region;
                                                   CaptionML=[DEU=Finanzamt L„nder-/Regionscode;
                                                              ENU=Tax Office Country/Region Code] }
    { 11015;  ;Tax Office County   ;Text30        ;CaptionML=[DEU=Finanzamt Bundesregion;
                                                              ENU=Tax Office County] }
    { 11016;  ;Tax Office Area     ;Option        ;CaptionML=[DEU=Finanzamt Bundesland;
                                                              ENU=Tax Office Area];
                                                   OptionCaptionML=[DEU=" ,Schleswig-Holstein,Hamburg,Niedersachsen,Bremen,Nordrhein-Westfalen,Hessen,Rheinland-Pfalz,Baden-Wrttemberg,Bayern,Saarland,Brandenburg,Mecklenburg-Vorpommern,Sachsen,Sachsen-Anhalt,Thringen,Berlin";
                                                                    ENU=" ,Schleswig-Holstein,Hamburg,Niedersachsen,Bremen,Nordrhein-Westfalen,Hessen,Rheinland-Pfalz,Baden-Wrttemberg,Bayern,Saarland,Brandenburg,Mecklenburg-Vorpommern,Sachsen,Sachsen-Anhalt,Thringen,Berlin"];
                                                   OptionString=[ ,Schleswig-Holstein,Hamburg,Niedersachsen,Bremen,Nordrhein-Westfalen,Hessen,Rheinland-Pfalz,Baden-Wrttemberg,Bayern,Saarland,Brandenburg,Mecklenburg-Vorpommern,Sachsen,Sachsen-Anhalt,Thringen,Berlin] }
    { 11017;  ;Check Transport Method;Boolean     ;InitValue=Yes;
                                                   CaptionML=[DEU=Verkehrszweig prfen;
                                                              ENU=Check Transport Method] }
    { 11018;  ;Check Transaction Specific.;Boolean;InitValue=Yes;
                                                   CaptionML=[DEU=Verfahren prfen;
                                                              ENU=Check Transaction Specific.] }
    { 11019;  ;VAT Representative  ;Text45        ;CaptionML=[DEU=Steuerbevollm„chtigter;
                                                              ENU=VAT Representative] }
    { 11050;  ;Participant No.     ;Text10        ;CaptionML=[DEU=Teilnehmernr.;
                                                              ENU=Participant No.] }
    { 11100;  ;Statistic No.       ;Code20        ;CaptionML=[DEU=Statistiknr.;
                                                              ENU=Statistic No.] }
    { 11101;  ;Control No.         ;Code20        ;CaptionML=[DEU=Kontrollnr.;
                                                              ENU=Control No.] }
    { 11102;  ;DVR Number          ;Code20        ;CaptionML=[DEU=DVR-Nummer;
                                                              ENU=DVR Number] }
    { 11103;  ;Tax Office Number   ;Code4         ;CaptionML=[DEU=Finanzamtsnr.;
                                                              ENU=Tax Office Number];
                                                   Numeric=Yes }
    { 50453;  ;ISO Logo            ;BLOB          ;Description=27.11.14 ST - Fr Berichte genutzt;
                                                   SubType=Bitmap }
    { 50454;  ;Systeme Logo        ;BLOB          ;Description=31.08.16 ST - Fr Berichte genutzt;
                                                   SubType=Bitmap }
    { 50455;  ;Vorstand            ;Text80        ;Description=30.01.18 ST - Fr Berichte genutzt }
    { 50456;  ;Aufsichtsratvorsitz ;Text50        ;Description=30.01.18 ST - Fr Berichte genutzt }
    { 50457;  ;District Court      ;Text50        ;CaptionML=[DEU=Amtsgericht;
                                                              ENU=District Court];
                                                   Description=30.01.18 ST - Fr Berichte genutzt }
    { 50458;  ;WEEE-Reg.-Nr.       ;Code20        ;Description=30.01.18 ST - Fr Berichte genutzt }
    { 50459;  ;P.O. Box            ;Text80        ;CaptionML=[DEU=Postfach;
                                                              ENU=P.O. Box];
                                                   Description=30.01.18 ST - Fr Berichte genutzt }
    { 50460;  ;EORI-Nr.            ;Code20        ;Description=28.02.23 ST - Fr Berichte genutzt, Zoll-Nr. }
  }
  KEYS
  {
    {    ;Primary Key                             ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      PostCode@1000 : Record 225;
      Text000@1001 : TextConst 'DEU=Die eingegebene Nummer ist m”glicherweise keine gltige IBAN (International Bank Account Number). M”chten Sie fortfahren?;ENU=The number that you entered may not be a valid International Bank Account Number (IBAN). Do you want to continue?';
      Text001@1002 : TextConst 'DEU=Speicherort fr IC-Dateien;ENU=File Location for IC files';
      Text002@1003 : TextConst 'DEU=Bevor Sie Online Map verwenden k”nnen, mssen Sie die Felder des Fensters ''Online Map-Einrichtung'' ausfllen.\Informationen hierzu finden Sie in der Hilfe zum Einrichten von Online Map.;ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.';
      NoPaymentInfoQst@1005 : TextConst '@@@="%1 = Company Information";DEU=In %1 sind keine Zahlungsinformationen angegeben. Jetzt aktualisieren?;ENU=No payment information is provided in %1. Do you want to update it now?';
      NoPaymentInfoMsg@1004 : TextConst 'DEU=In %1 sind keine Zahlungsinformationen angegeben. šberprfen Sie den Bericht.;ENU=No payment information is provided in %1. Review the report.';
      GLNCheckDigitErr@1006 : TextConst 'DEU=%1 ist ungltig.;ENU=The %1 is not valid.';
      OnDelIntrastatContactErr@1008 : TextConst '@@@=1 - Contact No;DEU=Sie k”nnen die Kontaktnummer %1 nicht l”schen, weil sie im Intrastat-Setupfenster als Intrastat-Kontakt eingerichtet ist.;ENU=You cannot delete contact number %1 because it is set up as an Intrastat contact in the Intrastat Setup window.';
      OnDelVendorIntrastatContactErr@1009 : TextConst '@@@=1 - Vendor No;DEU=Sie k”nnen die Kreditorennummer %1 nicht l”schen, weil sie im Intrastat-Setupfenster als Intrastat-Kontakt eingerichtet ist.;ENU=You cannot delete vendor number %1 because it is set up as an Intrastat contact in the Intrastat Setup window.';

    PROCEDURE CheckIBAN@1(IBANCode@1000 : Code[100]);
    VAR
      Modulus97@1001 : Integer;
      I@1002 : Integer;
    BEGIN
      IF IBANCode = '' THEN
        EXIT;
      IBANCode := DELCHR(IBANCode);
      Modulus97 := 97;
      IF (STRLEN(IBANCode) <= 5) OR (STRLEN(IBANCode) > 34) THEN
        IBANError;
      ConvertIBAN(IBANCode);
      WHILE STRLEN(IBANCode) > 6 DO
        IBANCode := CalcModulus(COPYSTR(IBANCode,1,6),Modulus97) + COPYSTR(IBANCode,7);
      EVALUATE(I,IBANCode);
      IF (I MOD Modulus97) <> 1 THEN
        IBANError;
    END;

    LOCAL PROCEDURE ConvertIBAN@4(VAR IBANCode@1000 : Code[100]);
    VAR
      I@1002 : Integer;
    BEGIN
      IBANCode := COPYSTR(IBANCode,5) + COPYSTR(IBANCode,1,4);
      I := 0;
      WHILE I < STRLEN(IBANCode) DO BEGIN
        I := I + 1;
        IF ConvertLetter(IBANCode,COPYSTR(IBANCode,I,1),I) THEN
          I := 0;
      END;
    END;

    LOCAL PROCEDURE CalcModulus@3(Number@1000 : Code[10];Modulus97@1001 : Integer) : Code[10];
    VAR
      I@1002 : Integer;
    BEGIN
      EVALUATE(I,Number);
      I := I MOD Modulus97;
      IF I = 0 THEN
        EXIT('');
      EXIT(FORMAT(I));
    END;

    LOCAL PROCEDURE ConvertLetter@5(VAR IBANCode@1000 : Code[100];Letter@1001 : Code[1];LetterPlace@1002 : Integer) : Boolean;
    VAR
      Letter2@1003 : Code[2];
    BEGIN
      IF (Letter >= 'A') AND (Letter <= 'Z') THEN BEGIN
        CASE Letter OF
          'A':
            Letter2 := '10';
          'B':
            Letter2 := '11';
          'C':
            Letter2 := '12';
          'D':
            Letter2 := '13';
          'E':
            Letter2 := '14';
          'F':
            Letter2 := '15';
          'G':
            Letter2 := '16';
          'H':
            Letter2 := '17';
          'I':
            Letter2 := '18';
          'J':
            Letter2 := '19';
          'K':
            Letter2 := '20';
          'L':
            Letter2 := '21';
          'M':
            Letter2 := '22';
          'N':
            Letter2 := '23';
          'O':
            Letter2 := '24';
          'P':
            Letter2 := '25';
          'Q':
            Letter2 := '26';
          'R':
            Letter2 := '27';
          'S':
            Letter2 := '28';
          'T':
            Letter2 := '29';
          'U':
            Letter2 := '30';
          'V':
            Letter2 := '31';
          'W':
            Letter2 := '32';
          'X':
            Letter2 := '33';
          'Y':
            Letter2 := '34';
          'Z':
            Letter2 := '35';
        END;
        IF LetterPlace = 1 THEN
          IBANCode := Letter2 + COPYSTR(IBANCode,2)
        ELSE BEGIN
          IF LetterPlace = STRLEN(IBANCode) THEN
            IBANCode := COPYSTR(IBANCode,1,LetterPlace - 1) + Letter2
          ELSE
            IBANCode :=
              COPYSTR(IBANCode,1,LetterPlace - 1) + Letter2 + COPYSTR(IBANCode,LetterPlace + 1);
        END;
        EXIT(TRUE);
      END;
      IF (Letter >= '0') AND (Letter <= '9') THEN
        EXIT(FALSE);

      IBANError;
    END;

    LOCAL PROCEDURE IBANError@12();
    BEGIN
      IF NOT CONFIRM(Text000) THEN
        ERROR('');
    END;

    PROCEDURE DisplayMap@7();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FINDFIRST THEN
        MapMgt.MakeSelection(DATABASE::"Company Information",GETPOSITION)
      ELSE
        MESSAGE(Text002);
    END;

    LOCAL PROCEDURE IsPaymentInfoAvailble@10() : Boolean;
    BEGIN
      EXIT(
        (("Giro No." + IBAN + "Bank Name" + "Bank Branch No." + "Bank Account No." + "SWIFT Code") <> '') OR
        "Allow Blank Payment Info.");
    END;

    PROCEDURE GetRegistrationNumber@14() : Text;
    BEGIN
      EXIT("Registration No.");
    END;

    PROCEDURE GetRegistrationNumberLbl@15() : Text;
    BEGIN
      EXIT(FIELDCAPTION("Registration No."));
    END;

    PROCEDURE GetVATRegistrationNumber@13() : Text;
    BEGIN
      EXIT("VAT Registration No.");
    END;

    PROCEDURE GetVATRegistrationNumberLbl@11() : Text;
    BEGIN
      EXIT(FIELDCAPTION("VAT Registration No."));
    END;

    PROCEDURE GetLegalOffice@16() : Text;
    BEGIN
      EXIT('');
    END;

    PROCEDURE GetLegalOfficeLbl@17() : Text;
    BEGIN
      EXIT('');
    END;

    PROCEDURE GetCustomGiro@20() : Text;
    BEGIN
      EXIT('');
    END;

    PROCEDURE GetCustomGiroLbl@19() : Text;
    BEGIN
      EXIT('');
    END;

    PROCEDURE VerifyAndSetPaymentInfo@6();
    VAR
      CompanyInformationPage@1000 : Page 1;
    BEGIN
      GET;
      IF IsPaymentInfoAvailble THEN
        EXIT;
      IF CONFIRM(NoPaymentInfoQst,TRUE,TABLECAPTION) THEN BEGIN
        CompanyInformationPage.SETRECORD(Rec);
        CompanyInformationPage.EDITABLE(TRUE);
        IF CompanyInformationPage.RUNMODAL = ACTION::OK THEN
          CompanyInformationPage.GETRECORD(Rec);
      END;
      IF NOT IsPaymentInfoAvailble THEN
        MESSAGE(NoPaymentInfoMsg,TABLECAPTION);
    END;

    PROCEDURE GetSystemIndicator@8(VAR Text@1000 : Text[250];VAR Style@1001 : 'Standard,Accent1,Accent2,Accent3,Accent4,Accent5,Accent6,Accent7,Accent8,Accent9');
    BEGIN
      Style := "System Indicator Style";
      CASE "System Indicator" OF
        "System Indicator"::None:
          Text := '';
        "System Indicator"::"Custom Text":
          Text := "Custom System Indicator Text";
        "System Indicator"::"Company Information":
          Text := Name;
        "System Indicator"::Company:
          Text := COMPANYNAME;
        "System Indicator"::Database:
          Text := GetDatabaseIndicatorText(FALSE);
        "System Indicator"::"Company+Database":
          Text := GetDatabaseIndicatorText(TRUE);
      END
    END;

    LOCAL PROCEDURE GetDatabaseIndicatorText@9(IncludeCompany@1003 : Boolean) : Text[250];
    VAR
      ActiveSession@1000 : Record 2000000110;
      Text@1002 : Text[1024];
    BEGIN
      ActiveSession.SETRANGE("Server Instance ID",SERVICEINSTANCEID);
      ActiveSession.SETRANGE("Session ID",SESSIONID);
      ActiveSession.FINDFIRST;
      Text := ActiveSession."Database Name" + ' - ' + ActiveSession."Server Computer Name";
      IF IncludeCompany THEN
        Text := COMPANYNAME + ' - ' + Text;
      IF STRLEN(Text) > 250 THEN
        EXIT(COPYSTR(Text,1,247) + '...');
      EXIT(Text)
    END;

    PROCEDURE GetCountryRegionCode@2(CountryRegionCode@1000 : Code[10]) : Code[10];
    BEGIN
      CASE CountryRegionCode OF
        '',"Country/Region Code":
          EXIT("Country/Region Code");
        ELSE
          EXIT(CountryRegionCode);
      END;
    END;

    PROCEDURE CheckDeleteIntrastatContact@21(ContactType@1000 : Option;ContactNo@1001 : Code[20]);
    BEGIN
      IF (ContactNo = '') OR (ContactType = "Intrastat Contact Type"::" ") THEN
        EXIT;

      IF GET THEN
        IF (ContactNo = "Intrastat Contact No.") AND (ContactType = "Intrastat Contact Type") THEN BEGIN
          IF ContactType = "Intrastat Contact Type"::Contact THEN
            ERROR(STRSUBSTNO(OnDelIntrastatContactErr,ContactNo));
          ERROR(STRSUBSTNO(OnDelVendorIntrastatContactErr,ContactNo));
        END;
    END;

    BEGIN
    {
      Lfd.Nr. Version   Datum       User  Beschreibung
      ===========================================================================
      1       TOP1.00   20.10.16    UB    TOPAS Felder 50453-50454 angelegt
      2       TOP1.01   30.01.18    ST    Neue TOPAS Felder 50455-50459 angelegt, u.a. fr AG Formwandlung
      3       TOP1.02   28.02.23    ST    Neues Feld 50460 EORI-Nr., fr Berichte - Zollabwicklung
    }
    END.
  }
}

