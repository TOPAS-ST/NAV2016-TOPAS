OBJECT Page 50105 AU-šberwach mit Excel
{
  OBJECT-PROPERTIES
  {
    Date=24.05.22;
    Time=10:25:17;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    PromotedActionCategoriesML=[DEU=Neu,Vorgang,Bericht,Funktion;
                                ENU=New,Process,Report,Function];
    ShowFilter=No;
    OnInit=BEGIN
             //  Wenn untere Meldung erscheint, gibt es eine neue Linie, die noch nicht umgesetzt wird.
             //  Siehe kurz vor Ende der Functions 'aktuellen Ab einfgen'
             //tab_ab_bw.RESET;
             //tab_ab_bw.SETFILTER(tab_ab_bw.Linie,'%1..%2','00','99');
             //IF tab_ab_bw.FINDFIRST THEN BEGIN
             //"Linien umsetzen";
             //END;

             tab_ab_bw.RESET;
             tab_ab_bw.SETFILTER(tab_ab_bw.Linie,'%1..%2','00','99');
             IF tab_ab_bw.FINDFIRST THEN
               MESSAGE ('Es gibt Linien mit einer Zahl als Herstellerkurzname! Bitte Uwe ansprechen');

             tab_ab_bw.RESET;
             tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','SYST');
             tab_ab_bw.SETFILTER(tab_ab_bw.Datum,'%1',31122222D);
             tab_ab_bw.SETFILTER(tab_ab_bw.AU_Nr,'%1','AU999999');
             tab_ab_bw.SETFILTER(tab_ab_bw.POS_Nr,'%1',10000);
             IF tab_ab_bw.FINDFIRST THEN BEGIN
               IF tab_ab_bw.Wunschdatum = WORKDATE THEN BEGIN
                 AB_holen_Datum:=tab_ab_bw.Wunschdatum;
                 AE_holen_Datum:=tab_ab_bw.Auftragsdatum;
                 AE_holen_Datum_1:=tab_ab_bw.Auftragsdatum;
               END ELSE BEGIN
             //   tab_ab_bw.Auftragsdatum :=tab_ab_bw.Wunschdatum;
             //   tab_ab_bw.MODIFY;
                 AB_holen_Datum:=tab_ab_bw.Wunschdatum;
                 AE_holen_Datum:=tab_ab_bw.Wunschdatum;
             //   AE_holen_Datum:=tab_ab_bw.Auftragsdatum;
               END;
             END;
             v_au_„nd_best_datum := AE_holen_Datum;
             v_au_„nd_best_datum1 := AE_holen_Datum;
             kto_datum := 010199D;

             hinweis[1] := '1.  t„glichen Auftrags- und Bestellbestand sichern';
             hinweis[2] := 'vor Ausfhrung Excel beenden';
             hinweis[3] := 'Speichern ( Name des Files z.B.: AE_2017_06.XLSX)';
             hinweis[4] := 'Speichern nach ...Auftragseingang\Sylke\ xxxxxx.XLSX)';
             hinweis[5] := 'Filenamen eingeben (z.B. BE_2017_06_30  (ohne xlsx))';
             hinweis[6] := 'Filename angeben (z.B. AE_KW10_2017 (ohne xlsx))';
             hinweis[7] := 'Auftrag, der vor Auftragseingangskontrolle geliefert werden soll, sichern.';
             hinweis[8] := 'H„kchen setzen, Auftragsnummer eintragen und dann Ausfhren.';
             hinweis[9] := 'Hier nur Ausfllen, wenn AU bereits geliefert und somit archiviert ist.';
             hinweis[10] := 'H„kchen setzen, archivierte Auftragsnummer eintragen und dann Ausfhren.';
             hinweis[11] := 'Geschenke-Auswertungsliste';
             hinweis[12] := '';

             hinweis[13] := 'gespeichert unter  F:\Daten Neu\User\Joachim\AB-Differenzen\2018_2019';
           END;

    ActionList=ACTIONS
    {
      { 1900000000;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1       ;1   ;ActionGroup;
                      CaptionML=DEU=Navigation }
      { 1140008 ;2   ;Action    ;
                      Name=AB bearbeiten;
                      CaptionML=DEU=AB bearbeiten;
                      RunObject=Page 50007;
                      RunPageView=WHERE(Belegart=FILTER(AUšW));
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=OrderList;
                      PromotedCategory=Process }
      { 1140032 ;2   ;Action    ;
                      Name=Alle AE's zeigen;
                      CaptionML=DEU=Alle AE's zeigen;
                      RunObject=Page 50006;
                      RunPageView=SORTING(AU_Nr,POS_Nr,Deb_Nr,Datum,Belegart)
                                  WHERE(Status=FILTER(AE));
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AllLines;
                      PromotedCategory=Process }
      { 1140051 ;2   ;Action    ;
                      Name=AE bearbeiten;
                      CaptionML=DEU=AE bearbeiten;
                      RunObject=Page 50006;
                      RunPageView=SORTING(AU_Nr,POS_Nr,Deb_Nr,Datum,Belegart)
                                  WHERE(Belegart=FILTER(AETG|GUTG));
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=OrderList;
                      PromotedCategory=Process }
      { 1140052 ;2   ;Action    ;
                      Name=Diff. bearbeiten;
                      CaptionML=DEU=Diff. bearbeiten;
                      RunObject=Page 50006;
                      RunPageView=SORTING(AU_Nr,POS_Nr,Deb_Nr,Datum,Belegart)
                                  WHERE(Belegart=FILTER(AEND));
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=OrderList;
                      PromotedCategory=Process }
      { 1140053 ;2   ;Action    ;
                      Name=AE + Diff bearbeiten;
                      CaptionML=DEU=AE + Diff bearbeiten;
                      RunObject=Page 50006;
                      RunPageView=SORTING(AU_Nr,POS_Nr,Deb_Nr,Datum,Belegart)
                                  WHERE(Belegart=FILTER(AETG|AEND|GUTG));
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=DocumentEdit;
                      PromotedCategory=Process }
      { 1000000016;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000015;1 ;ActionGroup;
                      CaptionML=DEU=Funktionen }
      { 1140063 ;2   ;Action    ;
                      Name=AESaldoabstimmen;
                      CaptionML=DEU=AE-Saldo abstimmen;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 AE_mtl.RESET;
                                 AE_mtl.SETFILTER(Belegart,'%1|%2|%3','AETG','GUTG','AEND');
                                 IF AE_mtl.FINDFIRST THEN BEGIN
                                   AE_Saldo_prf := 0;
                                   REPEAT
                                     AE_Saldo_prf := AE_Saldo_prf + ROUND(AE_mtl."Betrag in EUR",0.01);
                                   UNTIL AE_mtl.NEXT = 0;
                                 END;

                                 MESSAGE( 'Summe des Auftrageingangs ist: %1 EUR',AE_Saldo_prf);
                               END;
                                }
      { 1140154 ;2   ;Action    ;
                      Name=Ausfhren;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 tab_ab_bw.RESET;
                                 tab_ab_bw.SETFILTER(Belegart,'%1','SYST');
                                 tab_ab_bw.SETFILTER(Datum,'%1',31122222D);
                                 tab_ab_bw.SETFILTER(AU_Nr,'%1','AU999999');
                                 tab_ab_bw.SETFILTER(POS_Nr,'%1',10000);
                                 IF tab_ab_bw.FINDFIRST THEN BEGIN
                                  IF tab_ab_bw.Wunschdatum = WORKDATE THEN BEGIN
                                    AB_holen_Datum := tab_ab_bw.Wunschdatum;
                                    AE_holen_Datum := tab_ab_bw.Auftragsdatum;
                                  END ELSE BEGIN
                                    tab_ab_bw.Auftragsdatum := tab_ab_bw.Wunschdatum;
                                    tab_ab_bw.MODIFY;
                                    AB_holen_Datum := tab_ab_bw.Wunschdatum;
                                    AE_holen_Datum := tab_ab_bw.Wunschdatum;
                                  END;
                                 END;

                                 tab_ab_bw.RESET;
                                 IF tab_ab_bw.Linie = '00' THEN MESSAGE ('Es gibt Linien mit einer Zahl als Herstellerkurzname');

                                 // ANFANG šberprfung ob mehrere H„kchen gesetzt sind '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
                                 var_anzahl_h„kchen := 0;
                                 IF (AB_holen = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (BE_holen = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (BB_Diff = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF ((AB_holen = TRUE) AND (AE_holen_Datum = 0D)) THEN ERROR('Datum muá eingetragen sein! Programm abgebrochen');
                                 IF (AB_holen_rcksetzen = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (Diff_ermitteln = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (t„gl_AE = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF ((t„gl_AE = TRUE) AND (AE_holen_Datum_1 = 0D)) THEN ERROR('Datum muá eingetragen sein! Programm abgebrochen');
                                 IF (AE_verteilen = TRUE) THEN var_anzahl_h„kchen :=var_anzahl_h„kchen + 1;
                                 IF (AE_Verteilen_test = TRUE) THEN var_anzahl_h„kchen :=var_anzahl_h„kchen + 1;
                                 IF (AE_Verteilen_mtl = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (AE_Verteilen_mtl_test = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (AE_Verteilen_xx = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF tglAE = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF AU_sichern = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF AU_Arch_sichern = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF kto_salden = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF kto_salden_gesa = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_vertrieb1 = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF Lager_ausf2 = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF AE_t„gl = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_deb_prf = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_idprove = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF t„gl_AE_Saldo = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_n2 = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_vertrieb4 = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_abstimm_tab_belege = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_abstimm_tab_belege_neu = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_post_geschenk_adr_liste = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_geschenk_adr_liste_bersicht = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_kreditprfen = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_Nur_Diff_AB_ausgeben = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_W„_Abstimmung = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_uwe = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_Mailingvormerkung = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_mailvormerk_l”schen = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_lief_post_list = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_systemumsatz = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_serviceumsatz = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF var_test_auto_start = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_rechnungsberprfung1 = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_be_dat_berpr = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_au_„nd_best_berpr = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_au_„nd_best_berpr2 = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_AB_pdf_kontroll = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_Aend_AB_pdf_kontroll = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_preilistatus = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_Sachktoabstimm = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;

                                 IF var_anzahl_h„kchen > 1 THEN
                                   ERROR('Es wurden mehrere H„kchen gesetzt. Report abgebrochen!');

                                 IF var_anzahl_h„kchen = 0 THEN
                                   MESSAGE('Es wurde kein H„kchen gesetzt. Es konnte somit keine Funktion ausgefhrt werden!');

                                 // ENDE šberprfung ob mehrere H„kchen gesetzt sind             '''''''''''''''''''''''''''''''''''''''''''''''''''''''

                                 //25.08.2011-ST šberprft das AE holen Datum, darf nicht Tagesdatum sein, denn er soll ja den Vortag holen
                                 // und das Datum auch mit dem Vortag z.B. belegen, sonst kommt es sp„testens n„chsten Tag zur Fehlermeldung
                                 // wenn dann das Vortagsdatum geholt und eingetragen werden soll

                                 IF AE_holen_Datum = WORKDATE THEN ERROR('Das AE Datum darf nicht dem Tagesdatum entsprechen. Geben Sie bitte den Vortag ein');
                                 IF AE_holen_Datum = (010199D)THEN ERROR('Das AE Datum darf nicht 01.01.99 sein. Geben Sie bitte den Vortag ein');

                                 // ANFANG Aufruf der Funktionen *****************************************************************

                                 IF AB_holen = TRUE THEN "aktuellen AB einfgen";
                                 IF BE_holen = TRUE THEN "aktuellen BB einfgen";
                                 IF BB_Diff = TRUE THEN "BB Diff ermitteln";
                                 IF AB_holen_rcksetzen = TRUE THEN "AB einfgen rcksetzen";
                                 IF Diff_ermitteln = TRUE THEN Differenzen_ermitteln_Neu;
                                 IF t„gl_AE = TRUE THEN "t„glichen AE einfgen";
                                 IF AE_verteilen = TRUE THEN AE_Verteilen_Filter_Abfrage;
                                 IF AE_Verteilen_test = TRUE THEN AE_Verteilen_Filter_Abfrage;
                                 IF AE_Verteilen_mtl = TRUE THEN AE_Verteilen_Filter_Abfrage;
                                 IF AE_Verteilen_mtl_test = TRUE THEN AE_Verteilen_Filter_Abfrage;
                                 IF AE_Verteilen_xx = TRUE THEN AE_Verteilung_xx;
                                 IF tglAE = TRUE THEN "tgl AE in mtl AE bernehmen";
                                 IF AU_sichern = TRUE THEN Auftrag_sichern;
                                 IF AU_Arch_sichern = TRUE THEN Auftrag_Arch_sichern;
                                 IF kto_salden = TRUE THEN "Konto Salden holen";
                                 IF kto_salden_gesa = TRUE THEN "Konto Salden holen Gesamt";
                                 IF AE_t„gl = TRUE THEN "AE Salden t„gl gesamt";
                                 IF v_vertrieb1 = TRUE THEN AE_Vertrieb1;
                                 //IF v_vertrieb1 = TRUE THEN AE_Vertrieb2;
                                 IF v_vertrieb4 = TRUE THEN AE_Vertrieb4;
                                 IF v_deb_prf = TRUE THEN Debitor_berprfen;
                                 IF v_idprove = TRUE THEN ID_Prove;
                                 IF t„gl_AE_Saldo = TRUE THEN t„gl_AE_Saldo_abstimmen;
                                 //IF v_n2 = TRUE THEN N2_berprfen;
                                 IF v_abstimm_tab_belege = TRUE THEN Abstimm_tab_belege;
                                 IF v_abstimm_tab_belege_neu = TRUE THEN Abstimm_tab_belege_neu;
                                 IF v_post_geschenk_adr_liste = TRUE THEN geschenk_adr_liste;
                                 IF v_geschenk_adr_liste_bersicht = TRUE THEN Geschenkliste_šbersicht;  //geschenk_adr_liste_bersicht;
                                 IF v_kreditprfen = TRUE THEN Kredtilimit_prfen;
                                 IF v_Nur_Diff_AB_ausgeben = TRUE THEN Nur_Diff_AB_ausgeben;
                                 IF v_W„_Abstimmung = TRUE THEN WŽ_Abstimmung;
                                 IF v_uwe = TRUE THEN uwe;
                                 IF v_Mailingvormerkung = TRUE THEN Mailingvormerkung;
                                 IF v_mailvormerk_l”schen = TRUE THEN Mailingvormerkung_l”schen;
                                 IF v_lief_post_list = TRUE THEN Lieferpositionen_listen;
                                 IF v_systemumsatz = TRUE THEN Systemums„tze;
                                 IF v_serviceumsatz = TRUE THEN Serviceums„tze;
                                 IF v_ESK = TRUE THEN Verk„ufercode_„ndern;
                                 IF var_test_auto_start = TRUE THEN Test_Auto_Start_AU;
                                 IF v_rechnungsberprfung1 = TRUE THEN Rechnungsberprfung;
                                 IF v_be_dat_berpr = TRUE THEN Bestelldatumberprfung;
                                 IF v_au_„nd_best_berpr = TRUE THEN AU_Žnd_Best„t_šberprfung;
                                 IF v_au_„nd_best_berpr2 = TRUE THEN AU_Žnd_Best„t_šberprfung2;
                                 IF v_AB_pdf_kontroll = TRUE THEN AB_PDF_KONTROLLE;
                                 IF v_Aend_AB_pdf_kontroll = TRUE THEN AEND_AB_PDF_KONTROLLE;
                                 IF v_preilistatus = TRUE THEN Preislistenstatus_anzeigen;
                                 IF v_Sachktoabstimm = TRUE THEN Sachktoabstimmung_mit_Debitorposten;
                                 //  ENDE Aufruf der Funktionen  **********************************************************************
                               END;
                                }
      { 1000000045;0 ;ActionContainer;
                      ActionContainerType=Reports }
      { 1000000046;1 ;Action    ;
                      CaptionML=DEU=TEST AU Start;
                      RunObject=Report 50125;
                      RunPageOnRec=Yes;
                      Promoted=Yes;
                      PromotedCategory=Report;
                      RunPageMode=View }
    }
  }
  CONTROLS
  {
    { 1900000;0;Container ;
                ContainerType=ContentArea }

    { 1000000003;1;Group  ;
                CaptionML=DEU=" Allgemein";
                GroupType=Group }

    { 1000000004;2;Group  ;
                GroupType=Group }

    { 1000000005;3;Field  ;
                SourceExpr=hinweis[1];
                Enabled=FALSE;
                Editable=FALSE;
                Style=Unfavorable;
                StyleExpr=TRUE }

    { 1140007;3;Field     ;
                Name=AB_holen_Datum;
                CaptionML=DEU=Stand;
                SourceExpr=AB_holen_Datum;
                Editable=FALSE }

    { 1140003;3;Field     ;
                Name=AE_holen_Datum;
                CaptionML=DEU=Datum des Vortages unter dem die Daten gespeichert werden sollen;
                SourceExpr=AE_holen_Datum }

    { 1140013;3;Field     ;
                Name=;
                CaptionML=DEU=Aktuellen Auftragsbestand holen und in Tabelle speichern;
                ToolTipML=DEU=Kann nur einmal pro Tag ausgefhrt werden, ansonsten greift eine Prfung, ob dies bereits geschehen ist.;
                SourceExpr=AB_holen }

    { 1000000001;2;Group  ;
                CaptionML=DEU=Zurcksetzen;
                GroupType=Group }

    { 1140001;3;Field     ;
                Name=AB_holen_rcksetzen;
                CaptionML=DEU=AB holen - Rcksetzen (nur nach Rcksprache mit Uwe !!!);
                SourceExpr=AB_holen_rcksetzen }

    { 1900002;1;Group     ;
                CaptionML=DEU=" Auftr„ge" }

    { 1000000006;2;Group  ;
                CaptionML=DEU=2.  t„glicher Auftragseingang zum Bearbeiten sichern;
                GroupType=Group }

    { 1140023;3;Field     ;
                Name=t„gl_AE;
                CaptionML=DEU=tgl. AE holen  (Datum des AE eintragen);
                SourceExpr=t„gl_AE }

    { 1140035;3;Field     ;
                Name=AE_holen_Datum_1;
                CaptionML=DEU=AE holen Datum;
                SourceExpr=AE_holen_Datum_1 }

    { 1000000007;2;Group  ;
                CaptionML=DEU=3.  t„gliche Auftragsbestandskontrolle;
                GroupType=Group }

    { 1140025;3;Field     ;
                Name=Diff_ermitteln;
                CaptionML=DEU=Differenzen zwischen altem und neuem AB ermitteln;
                SourceExpr=Diff_ermitteln }

    { 1000000028;3;Field  ;
                Name=neu_drucken;
                CaptionML=DEU=Differenzen neu ausdrucken (Filename + Test);
                SourceExpr=v_Nur_Diff_AB_ausgeben }

    { 1000000008;2;Group  ;
                CaptionML=DEU=4.  t„glicher Auftragseingang sowie Differenzen nach Bearbeitung in Monatsdatei bernehmen;
                GroupType=Group }

    { 1140024;3;Field     ;
                Name=tglAE;
                CaptionML=DEU=T„gl. AE sowie Storno, Erh”hungen und Minderungen in mtl. Datei bernehmen;
                SourceExpr=tglAE }

    { 1000000010;2;Group  ;
                CaptionML=DEU=5.  t„gliche Verteilung nach Excel vornehmen.;
                GroupType=Group }

    { 1140033;3;Field     ;
                Name=AE_verteilen;
                CaptionML=DEU=AE verteilen;
                SourceExpr=AE_verteilen }

    { 1140038;3;Field     ;
                Name=Datum_von;
                CaptionML=DEU=Datum von;
                SourceExpr=Datum_von }

    { 1140047;3;Field     ;
                Name=Datum_bis;
                CaptionML=DEU=Datum bis;
                SourceExpr=Datum_bis }

    { 1000000012;3;Field  ;
                SourceExpr=hinweis[2];
                Enabled=FALSE;
                Editable=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE }

    { 1000000032;3;Field  ;
                Name=AE_Verteilen TEST;
                CaptionML=DEU=AE_Verteilen TEST;
                SourceExpr=AE_Verteilen_test }

    { 1000000011;2;Group  ;
                CaptionML=DEU=6.  monatliche Verteilung nach Excel vornehmen.;
                GroupType=Group }

    { 1140041;3;Field     ;
                Name=AE_Verteilen_mtl;
                CaptionML=DEU=AE Verteilen mtl.;
                SourceExpr=AE_Verteilen_mtl }

    { 1140043;3;Field     ;
                Name=Datum_von_;
                CaptionML=DEU=Datum von;
                SourceExpr=Datum_von }

    { 1140048;3;Field     ;
                Name=Datum_bis_;
                CaptionML=DEU=Datum bis;
                SourceExpr=Datum_bis }

    { 1140054;3;Field     ;
                Name=Filename;
                CaptionML=DEU=Dateiname;
                SourceExpr=Filename }

    { 1000000009;3;Field  ;
                SourceExpr=hinweis[3];
                Enabled=FALSE;
                Editable=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE }

    { 1000000031;3;Field  ;
                CaptionML=DEU=AE Verteilen mtl TEST;
                SourceExpr=AE_Verteilen_mtl_test }

    { 1000000013;2;Group  ;
                CaptionML=DEU=7.  einmalige Verteilung nach Excel vornehmen.;
                GroupType=Group }

    { 1140055;3;Field     ;
                Name=AE_Verteilen_xx;
                CaptionML=DEU=AE Verteilen xx;
                SourceExpr=AE_Verteilen_xx }

    { 1140057;3;Field     ;
                Name=Datum_von__;
                CaptionML=DEU=Datum von;
                SourceExpr=Datum_von }

    { 1140059;3;Field     ;
                Name=Datum_bis__;
                CaptionML=DEU=Datum bis;
                SourceExpr=Datum_bis }

    { 1140060;3;Field     ;
                Name=Filename_;
                CaptionML=DEU=Dateiname;
                SourceExpr=Filename }

    { 1000000014;3;Field  ;
                SourceExpr=hinweis[4];
                Enabled=FALSE;
                Editable=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE }

    { 1900003;1;Group     ;
                CaptionML=DEU=" Bestellungen" }

    { 1140069;2;Field     ;
                Name=BE_holen;
                CaptionML=DEU=aktuellen Bestellbestand holen und in Tabelle speichern;
                SourceExpr=BE_holen }

    { 1140071;2;Field     ;
                Name=AE_holen_Datum_;
                CaptionML=DEU=Datum eingeben;
                SourceExpr=AE_holen_Datum }

    { 1140065;2;Field     ;
                Name=BB_Diff;
                CaptionML=DEU=Bestellbestandsdifferenzen ermitteln;
                SourceExpr=BB_Diff }

    { 1140067;2;Field     ;
                Name=bb_Filename;
                CaptionML=DEU=Dateiname;
                SourceExpr=bb_Filename }

    { 1000000000;2;Field  ;
                SourceExpr=hinweis[5];
                Enabled=FALSE;
                Editable=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE }

    { 1900004;1;Group     ;
                CaptionML=DEU=" AE Vertrieb";
                GroupType=Group }

    { 1140084;2;Field     ;
                Name=v_vertrieb4;
                CaptionML=DEU=Auftragseingang System von Freitag (Vorwoche) bis Donnerstag   freitags;
                SourceExpr=v_vertrieb4 }

    { 1000000017;2;Field  ;
                SourceExpr='oder' }

    { 1140082;2;Field     ;
                Name=v_vertrieb1;
                CaptionML=DEU=Auftragseingang der letzten Woche fr Vertriebsmeeting   montags;
                SourceExpr=v_vertrieb1 }

    { 1000000018;2;Group  ;
                CaptionML=DEU="  Ab hier immer ausfllen                          Freitag                        Montag";
                GroupType=Group }

    { 1140080;3;Field     ;
                Name=Datum_von___;
                CaptionML=DEU=Auftragseingang holen ab:                             Freitag (Vorwoche)       Montag;
                SourceExpr=Datum_von }

    { 1140073;3;Field     ;
                Name=Datum_bis___;
                CaptionML=DEU=Auftragseingang holen bis:                             Donnerstag                   Donnerstag;
                SourceExpr=Datum_bis }

    { 1140074;3;Field     ;
                Name=AE_holen_Datum__;
                CaptionML=DEU=Tag fr den der AE noch fehlt:                       automatisch                   automatisch;
                SourceExpr=AE_holen_Datum }

    { 1140077;3;Field     ;
                Name=Filename__;
                CaptionML=DEU=Dateiname;
                SourceExpr=Filename }

    { 1000000002;3;Field  ;
                SourceExpr=hinweis[6];
                Enabled=FALSE;
                Editable=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE }

    { 1000000040;3;Field  ;
                Name=v_systemumsatz;
                CaptionML=DEU=Systemums„tze ausgeben:;
                SourceExpr=v_systemumsatz }

    { 1000000041;3;Field  ;
                Name=v_serviceumsatz;
                CaptionML=DEU=Serviceums„tze ausgeben:;
                SourceExpr=v_serviceumsatz }

    { 1000000042;3;Field  ;
                Name=Abgrenz_Datum;
                CaptionML=DEU=Abgrenzungsdatum eingeben:;
                SourceExpr=Abgrenz_Datum }

    { 1900005;1;Group     ;
                CaptionML=DEU=" einzelnen AU sichern" }

    { 1000000019;2;Field  ;
                SourceExpr=hinweis[7];
                Enabled=FALSE;
                Editable=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE }

    { 1000000020;2;Field  ;
                SourceExpr=hinweis[8];
                Enabled=FALSE;
                Editable=FALSE;
                Style=StandardAccent;
                StyleExpr=TRUE }

    { 1140092;2;Field     ;
                Name=AU_sichern;
                CaptionML=DEU=Auftrag sichern;
                SourceExpr=AU_sichern }

    { 1140093;2;Field     ;
                Name=AU_Nr_sich;
                CaptionML=DEU=AU-Nr zum Sichern eintragen;
                SourceExpr=AU_Nr_sich }

    { 1000000021;2;Field  ;
                SourceExpr=hinweis[9];
                Enabled=FALSE;
                Editable=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE }

    { 1000000022;2;Field  ;
                SourceExpr=hinweis[10];
                Enabled=FALSE;
                Editable=FALSE;
                Style=StandardAccent;
                StyleExpr=TRUE }

    { 1140096;2;Field     ;
                Name=AU_Arch_sichern;
                CaptionML=DEU=Auftragsarchiv sichern;
                SourceExpr=AU_Arch_sichern }

    { 1140097;2;Field     ;
                Name=AU_Arch_Nr_sich;
                CaptionML=DEU=Arch. AU-Nr zum Sichern eintragen;
                SourceExpr=AU_Arch_Nr_sich }

    { 1000000053;1;Group  ;
                CaptionML=DEU=Auftrag„nderungsbest„tigungen kontrollieren;
                GroupType=Group }

    { 1000000054;2;Field  ;
                Name=v_au_„nd_best_berpr;
                CaptionML=DEU=T„gliche Auftrag„nderungbest„tigungsberprfung ausfhren;
                SourceExpr=v_au_„nd_best_berpr }

    { 1000000055;2;Field  ;
                Name=v_au_„nd_best_berpr2;
                CaptionML=DEU=šberprfung ohne neu einspielen nochmals ausgeben;
                SourceExpr=v_au_„nd_best_berpr2 }

    { 1000000056;2;Field  ;
                Name=v_au_„nd_best_datum;
                CaptionML=DEU=Hier das Belegdatum fr die Žnderungsbest„tigungen eingeben:;
                SourceExpr=v_au_„nd_best_datum }

    { 1000000057;2;Field  ;
                Name=v_au_„nd_best_alle;
                CaptionML=DEU=Einschr„nkung - nur Fehler anzeigen;
                SourceExpr=v_au_„nd_best_alle }

    { 1000000059;2;Field  ;
                SourceExpr=hinweis[12] }

    { 1000000058;2;Field  ;
                SourceExpr=hinweis[13];
                Style=StandardAccent;
                StyleExpr=TRUE }

    { 1000000060;1;Group  ;
                CaptionML=DEU=Auftragsbest„tigungen pdf-Versand Kontrolle;
                GroupType=Group }

    { 1000000061;2;Field  ;
                CaptionML=DEU=Liste der Auftragsbest„tigungen fr PDF-Versand;
                SourceExpr=v_AB_pdf_kontroll }

    { 1000000062;2;Field  ;
                CaptionML=DEU=Liste der Žnderungs-Auftragsbest„tigungen fr PDF-Versand;
                SourceExpr=v_Aend_AB_pdf_kontroll }

    { 1000000063;2;Field  ;
                CaptionML=DEU=Belegdatum fr Versand (šberschreibbar);
                SourceExpr=v_au_„nd_best_datum1 }

    { 1900006;1;Group     ;
                CaptionML=DEU=" Kontosalden" }

    { 1000000023;2;Group  ;
                CaptionML=DEU=Kontosalden holen;
                GroupType=Group }

    { 1140100;3;Field     ;
                Name=kto_salden;
                CaptionML=DEU=Kontosalden ausfhren;
                SourceExpr=kto_salden }

    { 1140103;3;Field     ;
                Name=kto_datum;
                CaptionML=DEU=Datum fr Saldo Gesamt. (Nur ausfllen wenn nicht ab heute geholt werden soll);
                SourceExpr=kto_datum }

    { 1140101;3;Field     ;
                Name=saldo_heute_datum;
                CaptionML=DEU=Datum fr den Tagessaldo;
                SourceExpr=saldo_heute_datum }

    { 1000000049;3;Field  ;
                Name=Kto_salden_gesamt;
                CaptionML=DEU=Kontosalden fr Zeitraum holen:;
                SourceExpr=kto_salden_gesa }

    { 1000000024;2;Group  ;
                CaptionML=DEU=Weitere Prfungen;
                GroupType=Group }

    { 1140108;3;Field     ;
                Name=v_deb_prf;
                CaptionML=DEU=t„gliche Debitor šberprfung, div. Felder nicht gefllt;
                SourceExpr=v_deb_prf }

    { 1140114;3;Field     ;
                Name=AE_t„gl;
                CaptionML=DEU=šbertragen der t„glichen AE-Salden nach Excel;
                SourceExpr=AE_t„gl }

    { 1140111;3;Field     ;
                Name=v_idprove;
                CaptionML=DEU=Daten fr ID_Prove bereitstellen;
                SourceExpr=v_idprove }

    { 1140118;3;Field     ;
                Name=v_abstimm_tab_belege;
                CaptionML=DEU=Abstimmung Rechnungen aus VKRZ mit Tab Belege;
                SourceExpr=v_abstimm_tab_belege }

    { 1000000034;3;Field  ;
                Name=v_uwe;
                CaptionML=DEU=Abstimmung tgl Rechungsumsatz aus Tab Belege;
                SourceExpr=v_uwe }

    { 1000000050;3;Field  ;
                Name=v_abstimm_tab_belege_neu;
                CaptionML=DEU=Abstimmung RE+GU mit Tab Belege;
                SourceExpr=v_abstimm_tab_belege_neu }

    { 1000000051;3;Field  ;
                Name=v_rechnungsberprfung1;
                CaptionML=DEU=T„gliche Rechnungsberprfung ausfhren;
                SourceExpr=v_rechnungsberprfung1 }

    { 1000000052;3;Field  ;
                Name=v_be_dat_berpr;
                CaptionML=DEU=T„gliche Bestelldatumberprfung ausfhren;
                SourceExpr=v_be_dat_berpr }

    { 1000000066;3;Field  ;
                Name=v_Sachktoabstimm;
                CaptionML=DEU=Sachkontoabstimmung ausfhren;
                SourceExpr=v_Sachktoabstimm }

    { 1900008;1;Group     ;
                CaptionML=DEU=" Geschenke" }

    { 1000000030;2;Group  ;
                GroupType=Group }

    { 1140152;3;Field     ;
                Name=v_geschenk_adr_liste_bersicht;
                CaptionML=DEU=Geschenke-Liste als šbersicht ausfhren;
                SourceExpr=v_geschenk_adr_liste_bersicht }

    { 1000000035;3;Field  ;
                Name=v_mailingvormerkung;
                CaptionML=DEU=Liste aller Kontakte die im Feld Mailingvormerkung markiert sind;
                SourceExpr=v_Mailingvormerkung }

    { 1000000036;3;Field  ;
                Name=v_mailvormerk_l”schen;
                CaptionML=DEU=Alle H„kchen im Feld 'Mailingvormerkung' eines Kontaktes l”schen;
                SourceExpr=v_mailvormerk_l”schen }

    { 1000000027;1;Group  ;
                CaptionML=DEU=Kreditlimitberprfung;
                GroupType=Group }

    { 1000000025;2;Field  ;
                Name=v_kredtprfen;
                CaptionML=DEU=Kreditlimit berprfen;
                SourceExpr=v_kreditprfen }

    { 1000000026;2;Field  ;
                Name=Debitor_Nr;
                CaptionML=DEU=Debitor-Nr fr Kreditprfung eintragen;
                SourceExpr=v_deb_kredit }

    { 1000000029;1;Group  ;
                CaptionML=DEU=W„hrungsabstimmung;
                GroupType=Group }

    { 1000000033;2;Field  ;
                Name=v_W„_Abstimmung;
                CaptionML=DEU=W„hrungsabstimmung ausfhren;
                SourceExpr=v_W„_Abstimmung }

    { 1000000037;1;Group  ;
                CaptionML=DEU=Lieferpositionen fr einen Debitor listen;
                GroupType=Group }

    { 1000000038;2;Field  ;
                Name=v_lief_post_list;
                CaptionML=DEU=Lieferpositionen nach Excel ausgeben;
                SourceExpr=v_lief_post_list }

    { 1000000039;2;Field  ;
                Name=v_deb_nr;
                CaptionML=DEU=Debitor_Nr. eingeben:;
                SourceExpr=v_deb_nr }

    { 1000000043;1;Group  ;
                CaptionML=DEU=Verk„ufercode „ndern;
                GroupType=Group }

    { 1000000044;2;Field  ;
                CaptionML=DEU=Verk.Code ESK in NM „ndern;
                SourceExpr=v_ESK }

    { 1000000047;1;Group  ;
                CaptionML=DEU=Teststellung Report50125 Starten;
                GroupType=Group }

    { 1000000048;2;Field  ;
                CaptionML=DEU=Funktion Test Auto Start AU ausfhren;
                SourceExpr=prf.AU_Nr }

    { 1000000064;1;Group  ;
                CaptionML=DEU=Test Preislistenstatus fr Auftr„ge listen;
                GroupType=Group }

    { 1000000065;2;Field  ;
                CaptionML=DEU=Liste ausfhren;
                SourceExpr=v_preilistatus }

  }
  CODE
  {
    VAR
      Excel@1140164 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Book@1140163 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Range@1140162 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Sheet@1140161 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      wshFile@1000000001 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      j@1140160 : Text[30];
      AB_holen@1140159 : Boolean;
      AB_holen_Datum@1140158 : Date;
      tab_ab@1140157 : Record 37;
      tab_ab_arch@1140156 : Record 5108;
      tab_ab_bw@1140155 : Record 50016;
      prf@1140154 : Record 50016;
      rech1@1000000163 : Record 113;
      rech@1140153 : Record 113;
      vkrk@1140152 : Record 112;
      best@1140151 : Record 123;
      tab_vkk@1140150 : Record 36;
      tab_vkk_arch@1140149 : Record 5107;
      tab_kurse@1140148 : Record 330;
      TOPAS_API@1000000003 : Codeunit 50001;
      var_AU_Nr@1140147 : Code[20];
      var_AU_Nr1@1000000157 : Code[10];
      AB_holen_rcksetzen@1140146 : Boolean;
      Diff_ermitteln@1140145 : Boolean;
      t„gl_AE@1140144 : Boolean;
      t„gl_AE_Saldo@1140143 : Boolean;
      var_re_menge@1140142 : Decimal;
      var_be_menge@1140141 : Decimal;
      AE_mtl@1140140 : Record 50017;
      AE_holen_Datum@1140139 : Date;
      tab_vkk1@1140138 : Record 36;
      tab_vkk1_arch@1140137 : Record 5107;
      var_anzahl_h„kchen@1140136 : Integer;
      aus_Excel_impotieren@1140135 : Boolean;
      "**zu importierende Datei"@1140134 : Integer;
      tglAE@1140133 : Boolean;
      AE_holen_Datum_1@1140132 : Date;
      AE_verteilen@1140131 : Boolean;
      Datum_von@1140130 : Date;
      Datum_bis@1140129 : Date;
      var_datum_kz@1140125 : Date;
      var_linie_kz@1140124 : Text[10];
      var_rec@1140123 : Record 50017;
      Datei@1140122 : File;
      AE_Verteilen_mtl@1140121 : Boolean;
      AE_Verteilen_xx@1140120 : Boolean;
      Filename@1140119 : Text;
      bb_Filename@1140118 : Text;
      tab_be@1140117 : Record 39;
      BE_holen@1140116 : Boolean;
      tab_bek@1140115 : Record 38;
      BB_Diff@1140114 : Boolean;
      tab_guz@1140113 : Record 115;
      tab_guk@1140112 : Record 114;
      tab_guk1@1140111 : Record 114;
      AU_sichern@1140110 : Boolean;
      AU_Arch_sichern@1140109 : Boolean;
      AU_Nr_sich@1140108 : Code[10];
      AU_Arch_Nr_sich@1140107 : Code[10];
      kto_salden@1140106 : Boolean;
      kto_salden_gesa@1000000147 : Boolean;
      kto_datum@1140105 : Date;
      sachposten@1140104 : Record 17;
      sum_konten@1140103 : Decimal;
      sum_konten1@1140102 : Decimal;
      sum_konten2@1140101 : Decimal;
      sum_konten3@1140100 : Decimal;
      sum_konten4@1140099 : Decimal;
      sum_konten5@1140098 : Decimal;
      sum_konten6@1140097 : Decimal;
      sum_konten7@1140096 : Decimal;
      sum_konten8@1140095 : Decimal;
      sum_konten9@1140094 : Decimal;
      sum_konten10@1140093 : Decimal;
      sum_konten11@1140092 : Decimal;
      sum_konten12@1140091 : Decimal;
      sum_konten13@1140090 : Decimal;
      sum_konten14@1140089 : Decimal;
      sum_konten15@1140088 : Decimal;
      sum_konten16@1140087 : Decimal;
      sum_konten17@1140086 : Decimal;
      sum_konten18@1140085 : Decimal;
      sum_konten19@1140084 : Decimal;
      sum_konten20@1140083 : Decimal;
      saldo_heute_datum@1140082 : Date;
      Jahr@1140075 : Integer;
      Monat@1140074 : Integer;
      MonatGJ@1140073 : Integer;
      KW@1140072 : Integer;
      Beleg@1140071 : Record 50010;
      herstell@1140070 : Record 5720;
      deb@1140069 : Record 18;
      AE_t„gl@1140068 : Boolean;
      AE_t„gl_gesamt@1140067 : Decimal;
      AE_mtl_gesamt@1000000167 : Decimal;
      AE_t„gl_datum@1140066 : Date;
      AE_mtl_datum@1000000168 : Text[10];
      JahrGJ@1140063 : Integer;
      v_vertrieb1@1140062 : Boolean;
      Lager_ausf2@1140061 : Boolean;
      Lager_abgrenz_Datum@1140060 : Date;
      Kurs_JPY@1140059 : Decimal;
      Kurs_USD@1140058 : Decimal;
      Kurs_GBP@1140057 : Decimal;
      Artikel@1140056 : Record 27;
      Wertposten@1140055 : Record 5802;
      Lagerort1@1140054 : Code[10];
      Lagerort2@1140053 : Code[10];
      Lagerort3@1140052 : Code[10];
      Artikelposten@1140051 : Record 32;
      Lagerbestand@1140050 : Decimal;
      Lagerstck1@1140049 : Decimal;
      var_NEXT@1140048 : Integer;
      var_text1@1140047 : Text[30];
      var_text2@1140046 : Text[30];
      var_text3@1000000152 : Text[30];
      var_letzter_wert@1140045 : Decimal;
      var_sum_zugang_wert@1140044 : Decimal;
      var_sum_zugang_wert_stichkurs@1140043 : Decimal;
      W„_kurs@1140042 : Record 330;
      EK_Rech_k@1140041 : Record 122;
      zu_W„h_kurs@1140040 : Decimal;
      var_sum_bewert@1140039 : Decimal;
      v_dcwert@1140038 : Decimal;
      v_sum_bewert@1140037 : Decimal;
      v_dc@1140036 : Decimal;
      v_zuwert@1140035 : Decimal;
      v_stichwert@1140034 : Decimal;
      v_bewert@1140033 : Decimal;
      ek_preis@1140032 : Record 7012;
      v_dcw„@1140031 : Text[30];
      v_ab_bestand@1140030 : Decimal;
      v_bb_bestand@1140029 : Decimal;
      v_sonderlager@1140028 : Boolean;
      v_ab_menge@1140027 : Decimal;
      v_deb_prf@1140026 : Boolean;
      kontakt@1140025 : Record 5050;
      kontakt1@1140024 : Record 5050;
      v_idprove@1140023 : Boolean;
      v_del@1140022 : Text[5];
      v_del1@1140021 : Text[5];
      v_kontaktnr@1140020 : Text[10];
      Dateiname@1140019 : Text;
      AE_Saldo_prf@1140018 : Decimal;
      Pfad@1140017 : Text;
      Pfaddatum@1140016 : Text;
      Pfad_tag@1140015 : Text[10];
      Pfad_monat@1140014 : Text[10];
      Pfad_jahr@1140013 : Text[10];
      v_n2@1140012 : Boolean;
      v_vertrieb4@1140011 : Boolean;
      OK@1140010 : Boolean;
      anz_zent@1140009 : Decimal;
      anz_must@1140008 : Decimal;
      anz_gutschr@1140007 : Decimal;
      v_abstimm_tab_belege@1140006 : Boolean;
      v_abstimm_tab_belege_neu@1000000149 : Boolean;
      Lief_adr@1140005 : Record 222;
      v_post_geschenk_adr_liste@1140002 : Boolean;
      tab_geschenk@1140001 : Record 50032;
      v_geschenk_adr_liste_bersicht@1140000 : Boolean;
      hinweis@1000000000 : ARRAY [30] OF Text;
      Text100@1000000002 : TextConst 'DEU=Sie mssen zuerst einen Dateinamen vergeben.';
      Text000@1000000028 : TextConst 'DEU=Daten werden analysiert ...\\;ENU=Analyzing Data...\\';
      Text001@1000000027 : TextConst 'DEU=Auftragseingang;ENU=New Orders';
      Text002@1000000026 : TextConst 'DEU=Arbeitsmappe aktualisieren;ENU=Update Workbook';
      Text020@1000000023 : TextConst 'DEU=Datum';
      Text021@1000000022 : TextConst 'DEU=Auftragsnr.';
      Text022@1000000021 : TextConst 'DEU=Debitornr.';
      Text023@1000000020 : TextConst 'DEU=Name';
      Text024@1000000019 : TextConst 'DEU=Menge';
      Text025@1000000018 : TextConst 'DEU=Artikel';
      Text026@1000000017 : TextConst 'DEU=Lager';
      Text027@1000000016 : TextConst 'DEU=EK';
      Text028@1000000015 : TextConst 'DEU=VK';
      Text029@1000000014 : TextConst 'DEU=W„hrung';
      Text030@1000000013 : TextConst 'DEU=WŽ_Faktor';
      Text031@1000000012 : TextConst 'DEU=Betrag in EUR';
      Text032@1000000011 : TextConst 'DEU=DB';
      Text033@1000000010 : TextConst 'DEU=Bearbeiter';
      Text034@1000000009 : TextConst 'DEU=Vertreter';
      Text035@1000000008 : TextConst 'DEU=Hersteller';
      Text036@1000000007 : TextConst 'DEU=EK Gesamt';
      Text037@1000000006 : TextConst 'DEU=PLZ';
      Text038@1000000005 : TextConst 'DEU=Endkunde';
      Text039@1000000024 : TextConst 'DEU=Team';
      Text040@1000000029 : TextConst 'DEU=Gebiet';
      ExcelFileExtensionTok@1000000004 : TextConst '@@@={Locked};DEU=.xlsx;ENU=.xlsx';
      TempExcelBuffer@1000000040 : TEMPORARY Record 370;
      FileMgt@1000000038 : Codeunit 419;
      ServerFileName@1000000037 : Text;
      SheetName@1000000036 : Text[250];
      DoUpdateExistingWorksheet@1000000035 : Boolean;
      Testmode@1000000034 : Boolean;
      Window@1000000033 : Dialog;
      RecNo@1000000032 : Integer;
      TotalRecNo@1000000031 : Integer;
      RowNo@1000000030 : Integer;
      ColumnNo@1000000025 : Integer;
      AE_Verteilen_mtl_test@1000000039 : Boolean;
      AE_Verteilen_test@1000000043 : Boolean;
      v_Pfadname@1000000041 : Text[40];
      v_Pfadzuweisung@1000000042 : Text[3];
      Text050@1000000044 : TextConst 'DEU=No_';
      Text051@1000000045 : TextConst 'DEU=Company Name';
      Text052@1000000046 : TextConst 'DEU=Name 2';
      Text053@1000000047 : TextConst 'DEU=First Name';
      Text054@1000000048 : TextConst 'DEU=Surname';
      Text055@1000000049 : TextConst 'DEU=Address';
      Text056@1000000050 : TextConst 'DEU=Address 2';
      Text057@1000000051 : TextConst 'DEU=Post Code';
      Text058@1000000052 : TextConst 'DEU=City';
      Text059@1000000053 : TextConst 'DEU=Nummer';
      IDProvExtensionTok@1000000054 : TextConst 'DEU=.csv';
      "Text003

    "@1000000055 : TextConst 'DEU=Excel Export erfolgreich abgeschlossen.';
      v_kreditprfen@1000000056 : Boolean;
      v_deb_kredit@1000000057 : Code[10];
      AB_holen_Datum1@1000000058 : Date;
      debpos@1000000059 : Record 21;
      v_umsatz12@1000000060 : Decimal;
      v_zahlung12@1000000061 : Decimal;
      v_anz_RE12@1000000062 : Decimal;
      v_date_1RE@1000000063 : Date;
      v_OP_gesamt@1000000064 : Decimal;
      v_Nur_Diff_AB_ausgeben@1000000065 : Boolean;
      v_W„_Abstimmung@1000000066 : Boolean;
      Kredpost@1000000067 : Record 25;
      saldo_sum@1000000068 : Decimal;
      ekz@1000000069 : Record 39;
      v_druck_art@1000000070 : Decimal;
      v_FLmenge@1000000071 : Decimal;
      v_FLwert@1000000072 : Decimal;
      v_ek_preis@1000000077 : Decimal;
      v_au_wert@1000000078 : Decimal;
      v_aur_wert@1000000073 : Decimal;
      v_lager_wert@1000000079 : Decimal;
      v_best_wert@1000000080 : Decimal;
      v_ek_w„@1000000074 : Text;
      v_usd_gesamt@1000000075 : Decimal;
      v_jpy_gesamt@1000000076 : Decimal;
      v_gbp_gesamt@1000000081 : Decimal;
      v_eur_gesamt@1000000082 : Decimal;
      bankpos@1000000083 : Record 271;
      sum_kont4021@1000000084 : Decimal;
      sum_kont4022@1000000085 : Decimal;
      sum_kont4023@1000000086 : Decimal;
      sum_kont4025@1000000087 : Decimal;
      sum_kont4100@1000000190 : Decimal;
      sum_kont4110@1000000191 : Decimal;
      sum_kont4118@1000000088 : Decimal;
      sum_kont4120@1000000089 : Decimal;
      sum_kont4122@1000000090 : Decimal;
      sum_kont4150@1000000192 : Decimal;
      sum_kont4221@1000000091 : Decimal;
      sum_kont4222@1000000092 : Decimal;
      sum_kont4223@1000000093 : Decimal;
      sum_kont4225@1000000094 : Decimal;
      sum_kont4317@1000000095 : Decimal;
      sum_kont4338@1000000096 : Decimal;
      sum_kont4406@1000000193 : Decimal;
      sum_kont4407@1000000097 : Decimal;
      sum_kont4408@1000000098 : Decimal;
      sum_kont4409@1000000194 : Integer;
      sum_kont4412@1000000099 : Decimal;
      sum_kont4416@1000000100 : Decimal;
      sum_kont4418@1000000101 : Decimal;
      sum_kont4421@1000000102 : Decimal;
      sum_kont4422@1000000103 : Decimal;
      sum_kont4423@1000000104 : Decimal;
      sum_kont4424@1000000105 : Decimal;
      sum_kont4425@1000000106 : Decimal;
      sum_kont4501@1000000195 : Decimal;
      sum_kont4502@1000000196 : Decimal;
      sum_kont4503@1000000197 : Decimal;
      sum_kont4504@1000000198 : Decimal;
      sum_kont4505@1000000199 : Decimal;
      sum_kont4506@1000000200 : Decimal;
      sum_kont4507@1000000201 : Decimal;
      sum_kont4508@1000000202 : Decimal;
      sum_kont4509@1000000203 : Decimal;
      sum_kont4510@1000000204 : Decimal;
      sum_kont4512@1000000205 : Decimal;
      sum_kont4513@1000000206 : Decimal;
      sum_kont4690@1000000107 : Decimal;
      sum_kont4763@1000000207 : Decimal;
      sum_kontgesamt@1000000148 : Decimal;
      v_uwe@1000000108 : Boolean;
      v_Mailingvormerkung@1000000109 : Boolean;
      v_Land@1000000110 : Record 9;
      v_mailvormerk_l”schen@1000000111 : Boolean;
      v_lief_post_list@1000000112 : Boolean;
      v_deb_nr@1000000113 : Code[10];
      tab_vklz@1000000114 : Record 111;
      v_systemumsatz@1000000115 : Boolean;
      v_serviceumsatz@1000000140 : Boolean;
      tab_service@1000000116 : Record 50024;
      tab_service1@1000000117 : Record 50024;
      i@1000000118 : Integer;
      u@1000000119 : Integer;
      w@1000000120 : Integer;
      e@1000000121 : Integer;
      var_jahr@1000000122 : ARRAY [30] OF Date;
      var_jahr_gesamt@1000000123 : ARRAY [30] OF Decimal;
      LZ@1000000124 : Integer;
      LZ_Rest@1000000125 : Integer;
      liefnr@1000000126 : Code[10];
      liefzeilennr@1000000127 : Integer;
      LZ_tage@1000000128 : Integer;
      var_jahr_neu@1000000129 : ARRAY [30] OF Decimal;
      var_jahr_verl„ng@1000000130 : ARRAY [30] OF Decimal;
      var_jahr_abgelauf@1000000131 : ARRAY [30] OF Decimal;
      var_jahr_bestand@1000000141 : ARRAY [30] OF Decimal;
      LZ_tage_jahr@1000000132 : ARRAY [30] OF Decimal;
      var_jahr_wert@1000000133 : ARRAY [30] OF Decimal;
      beleghis@1000000134 : Record 50008;
      Abgrenz_Datum@1000000135 : Date;
      LZ_tage_stich@1000000136 : Integer;
      LZ_tage_bewert@1000000137 : Integer;
      Sum_ek@1000000138 : Decimal;
      Sum_vk@1000000139 : Decimal;
      zaehler@1000000142 : Integer;
      zaehler2@1000000143 : Integer;
      v_ESK@1000000144 : Boolean;
      var_AU_Nr_Test_test@1000000145 : Code[10];
      var_test_auto_start@1000000146 : Boolean;
      v_rechnungsberprfung1@1000000150 : Boolean;
      v_rahmennr@1000000151 : Code[10];
      v_aunr@1000000153 : Code[10];
      v_be_dat_berpr@1000000154 : Boolean;
      v_au_„nd_best_berpr@1000000155 : Boolean;
      v_au_„nd_best_berpr2@1000000156 : Boolean;
      v_au_„nd_best_alle@1000000158 : Boolean;
      v_au_„nd_best_datum@1000000159 : Date;
      v_au_„nd_best_datum1@1000000162 : Date;
      v_AB_pdf_kontroll@1000000160 : Boolean;
      v_Aend_AB_pdf_kontroll@1000000161 : Boolean;
      v_19MWSt@1000000164 : Boolean;
      v_16MWSt@1000000165 : Boolean;
      v_preilistatus@1000000166 : Boolean;
      v_Tag@1000000169 : Integer;
      v_Monat@1000000170 : Integer;
      v_Jahr@1000000171 : Integer;
      v_Tag1@1000000172 : Integer;
      v_Monat1@1000000173 : Integer;
      v_Jahr1@1000000174 : Integer;
      v_m01_gesamt@1000000175 : Decimal;
      v_m02_gesamt@1000000176 : Decimal;
      v_m03_gesamt@1000000177 : Decimal;
      v_m04_gesamt@1000000178 : Decimal;
      v_m05_gesamt@1000000179 : Decimal;
      v_m06_gesamt@1000000180 : Decimal;
      v_m07_gesamt@1000000181 : Decimal;
      v_m08_gesamt@1000000182 : Decimal;
      v_m09_gesamt@1000000183 : Decimal;
      v_m10_gesamt@1000000184 : Decimal;
      v_m11_gesamt@1000000185 : Decimal;
      v_m12_gesamt@1000000186 : Decimal;
      v_AE_gesamt@1000000187 : Decimal;
      v_RE_mtl_gesamt@1000000188 : Decimal;
      v_Sachktoabstimm@1000000189 : Boolean;
      v_Belegnr@1000000208 : Code[20];
      v_kontonr@1000000209 : Code[20];
      v_date@1000000210 : Date;
      v_belegart@1000000211 : Option;

    PROCEDURE "aktuellen AB einfgen"@1140000();
    BEGIN
      // berprft UB Stand 26.11.2018
      // ANFANG Als erstes Datum einfgen -> Sicherstellung Ausfhrung nur 1 x pro Tag
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','SYST');
      tab_ab_bw.SETFILTER(Datum,'%1',31122222D);
      tab_ab_bw.SETFILTER(AU_Nr,'%1','AU999999');
      tab_ab_bw.SETFILTER(POS_Nr,'%1',10000);
      IF tab_ab_bw.FINDFIRST THEN BEGIN
        IF tab_ab_bw.Wunschdatum = WORKDATE THEN BEGIN
          ERROR('Der Job wurde heute bereits ausgefhrt');
        END ELSE BEGIN
          //  MESSAGE('Am Ende kommt ein Best„tigungsfenster. Wird dieses nicht angezeigt ist der Job fehlerhaft beendet. IT informieren!');
          tab_ab_bw.Wunschdatum := WORKDATE;
          tab_ab_bw.MODIFY;
        END;
        // ENDE Als erstes Datum einfgen

        //  ANFANG  L”schen und umbenennen von alten S„tzen
        tab_ab_bw.RESET;
        tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
        tab_ab_bw.SETFILTER(Art,'%1','AL2');
        IF tab_ab_bw.FINDFIRST THEN tab_ab_bw.DELETEALL;

        tab_ab_bw.RESET;
        tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
        tab_ab_bw.SETFILTER(Art,'%1','AL1');
        IF tab_ab_bw.FIND('-') THEN BEGIN
          REPEAT
            tab_ab_bw.Art := 'AL2';
            tab_ab_bw.MODIFY;
          UNTIL tab_ab_bw.NEXT = 0;
        END;

        tab_ab_bw.RESET;
        tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
        tab_ab_bw.SETFILTER(Art,'%1','ALT');
        IF tab_ab_bw.FIND('-') THEN BEGIN
          REPEAT
            tab_ab_bw.Art := 'AL1';
            tab_ab_bw.MODIFY;
          UNTIL tab_ab_bw.NEXT = 0;
        END;

        tab_ab_bw.RESET;
        tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
        tab_ab_bw.SETFILTER(Art,'%1','NEU');
        IF tab_ab_bw.FIND('-') THEN BEGIN
          REPEAT
            tab_ab_bw.Art := 'ALT';
            tab_ab_bw.MODIFY;
          UNTIL tab_ab_bw.NEXT = 0;
        END;

        tab_ab_bw.RESET;
        tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
        tab_ab_bw.SETFILTER(Art,'%1','ALT');
        IF tab_ab_bw.FIND('-') THEN BEGIN
          REPEAT
            tab_ab_bw.Status := 'NN';
            tab_ab_bw.Stat_Artikel := 'NN';
            tab_ab_bw.Stat_Menge := 'NN';
            tab_ab_bw.Stat_EK := 'NN';
            tab_ab_bw.Stat_VK := 'NN';
            tab_ab_bw.MODIFY;
          UNTIL tab_ab_bw.NEXT = 0;
        END;
        //  ENDE  L”schen und umbenennen von alten S„tzen


      // ANFANG Einfgen von neuem AB
      tab_ab.RESET;
      tab_ab.SETFILTER("Document Type",'%1', tab_ab."Document Type"::Order);
      tab_ab.SETFILTER(Type,'%1',tab_ab.Type::Item);
      tab_ab.SETFILTER("Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      //tab_ab.SETFILTER(tab_ab."Outstanding Quantity",'>%1',0);
      IF tab_ab.FIND('-')  THEN
        REPEAT
          tab_ab_bw.INIT;
          tab_ab_bw.Belegart := 'AUšW';
          tab_ab_bw.Datum := AE_holen_Datum;
          tab_ab_bw.AU_Nr := tab_ab."Document No.";
          tab_ab_bw.POS_Nr := tab_ab."Line No.";
          tab_ab_bw.Deb_Nr := tab_ab."Sell-to Customer No.";
          tab_ab_bw.Artikel := tab_ab."No.";
          tab_ab_bw.Menge := tab_ab.Quantity;
          tab_ab_bw.Restmenge := tab_ab."Outstanding Quantity";
          tab_ab_bw.EK := tab_ab."Unit Cost (LCY)";
          tab_ab_bw.VK := tab_ab."Unit Price";
          tab_ab_bw."Best„tigt LD" := tab_ab."Promised Delivery Date";
          tab_ab_bw.Wunschdatum := tab_ab."Requested Delivery Date";
          tab_ab_bw.Status := 'NN';
          tab_ab_bw.Art := 'NEU';
          tab_ab_bw."EK Gesamt" := ROUND(((tab_ab.Quantity) * (tab_ab."Unit Cost (LCY)")),0.01);
          tab_ab_bw."VK Gesamt" := ROUND(((tab_ab.Quantity) * (tab_ab."Unit Price")),0.01);
          tab_ab_bw.Lager := tab_ab."Location Code";
          tab_ab_bw."DB %" := tab_ab."Profit %";
          tab_ab_bw.Linie := tab_ab."Manufacturer Code";
          tab_ab_bw.Endkunde := tab_ab.Endkunde;
          IF tab_ab."Blanket Order No." <> '' THEN tab_ab_bw."AU aus Rahmen" := TRUE;

          tab_vkk.RESET;
          tab_vkk.SETFILTER("No.",'%1',tab_ab_bw.AU_Nr);
          IF tab_vkk.FINDFIRST THEN BEGIN
            tab_ab_bw.Debitor := tab_vkk."Sell-to Customer Name";
            tab_ab_bw.W„hrungscode := tab_vkk."Currency Code";
            tab_ab_bw.Auftragsdatum := tab_vkk."Order Date";
            tab_ab_bw.Betreuer := tab_vkk."Betreuer Innendienst";
            tab_ab_bw.Vertreter := tab_vkk."Salesperson Code";
            tab_ab_bw.Teams := tab_vkk.Teams;
            tab_ab_bw.Plz := tab_vkk."Sell-to Post Code";
            tab_ab_bw.Gebietscode := tab_vkk."Territory Code";
            {
            tab_ab_bw."Rech. an Deb.-Nr." := tab_vkk."Bill-to Customer No.";
            tab_ab_bw."Rech. an Name" := tab_vkk."Bill-to Name";
            tab_ab_bw."Rech. an Name 2" := tab_vkk."Bill-to Name 2";
            tab_ab_bw."Rech. an Adresse" := tab_vkk."Bill-to Address";
            tab_ab_bw."Rech. an Adresse 2" := tab_vkk."Bill-to Address 2";
            tab_ab_bw."Rech. an Ort" := tab_vkk."Bill-to City";
            tab_ab_bw."Rech. an Bundesregion" := tab_vkk."Bill-to County";
            tab_ab_bw."Rech. an PLZ-Code" := tab_vkk."Bill-to Post Code";
            tab_ab_bw."Rech. an L„nder-/Regionscode" := tab_vkk."Bill-to Country/Region Code";
            tab_ab_bw."Lief. an Code" := tab_vkk."Ship-to Code";
            tab_ab_bw."Lief. an Name" := tab_vkk."Ship-to Name";
            tab_ab_bw."Lief. an Name 2" := tab_vkk."Ship-to Name 2";
            tab_ab_bw."Lief. an Adresse" := tab_vkk."Ship-to Address";
            tab_ab_bw."Lief. an Adresse 2" := tab_vkk."Ship-to Address 2";
            tab_ab_bw."Lief. an Ort" := tab_vkk."Ship-to City";
            tab_ab_bw."Lief. an Bundesregion" := tab_vkk."Ship-to County";
            tab_ab_bw."Lief. an PLZ-Code" := tab_vkk."Ship-to Post Code";
            tab_ab_bw."Lief. an L„nder-/Regionscode" := tab_vkk."Ship-to Country/Region Code";
            }
          END;
          tab_ab_bw.INSERT;
        UNTIL tab_ab.NEXT = 0;
      END;
      //  ENDE Einfgen von neuem AB

      // ANFANG Kurse des AU holen
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(W„hrungscode,'<>%1','');
      IF tab_ab_bw.FINDFIRST THEN BEGIN
        REPEAT
          tab_kurse.RESET;
          tab_kurse.SETFILTER("Starting Date",'%1',tab_ab_bw.Auftragsdatum);
          tab_kurse.SETFILTER("Currency Code",'%1',tab_ab_bw.W„hrungscode);
          IF tab_kurse.FINDFIRST THEN BEGIN
            tab_ab_bw.w„_faktor := tab_kurse."Exchange Rate Amount";
            tab_ab_bw."VK Gesamt" := ROUND((((tab_ab.Quantity) * (tab_ab."Unit Price")) / (tab_kurse."Exchange Rate Amount")),2);
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      // ENDE Kurse des AU holen


      "Linien umsetzen";


      // ANFANG Als letztes wird dieses Datum berprft -> Sicherstellung Ausfhrung nur 1 x pro Tag
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','SYST');
      tab_ab_bw.SETFILTER(Datum,'%1',31122222D);
      tab_ab_bw.SETFILTER(AU_Nr,'%1','AU999999');
      tab_ab_bw.SETFILTER(POS_Nr,'%1',10000);
      IF tab_ab_bw.FINDFIRST THEN BEGIN
       IF tab_ab_bw.Wunschdatum = WORKDATE THEN BEGIN
         MESSAGE(' JOB wurde ordnungsgem„á beendet.');
       END;
      END;
      //  Als letztes wird dieses Datum berprft und eine Meldung erzeugt. Kommt keine Meldung ist der Job nicht durchgelaufen!!!
      // ENDE Als letztes Datum berprfen

      AU_Žnd_Best„t_šberprfung;
    END;

    PROCEDURE "AB einfgen rcksetzen"@1140001();
    BEGIN
      // berprft UB Stand 26.11.2018
      //  ANFANG  Rcksetzen des Holens von neuem AB-Bestand
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.DELETE;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Art := 'NEU';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','AL1');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Art := 'ALT';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','AL2');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Art := 'AL1';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'NN';
          tab_ab_bw.Stat_Artikel := 'NN';
          tab_ab_bw.Stat_Menge := 'NN';
          tab_ab_bw.Stat_EK := 'NN';
          tab_ab_bw.Stat_VK := 'NN';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE  Rcksetzen des Holens von neuem AB-Bestand

      MESSAGE(' Das Rcksetzen des Auftragsbestandes wurde ordnungsgem„á erledigt. ');
    END;

    PROCEDURE "t„glichen AE einfgen"@1140003();
    BEGIN
      // berprft UB Stand 26.11.2018
      // ANFANG L”schen Tabelle AE_mtl
      // AE_mtl.RESET;
      // AE_mtl.DELETEALL;
      // ENDE   L”schen Tabelle AE_mtl

      // ANFANG Einfgen von neuem AE

      AE_mtl.RESET;
      tab_ab.RESET;
      tab_vkk.RESET;
      tab_vkk.SETFILTER("Order Date",'%1',AE_holen_Datum_1);
      //tab_vkk.SETFILTER(tab_vkk."Document Type",'%1', tab_vkk."Document Type"::Order);
      IF tab_vkk.FIND('-') THEN
        REPEAT
          tab_ab.RESET;
          tab_ab.SETFILTER("Document No.",'%1',tab_vkk."No.");
          tab_ab.SETFILTER("Document Type",'%1', tab_ab."Document Type"::Order);
          tab_ab.SETFILTER(Type,'%1',tab_ab.Type::Item);
          tab_ab.SETFILTER("Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          tab_ab.SETFILTER("Outstanding Quantity",'>%1',0);
          IF tab_ab.FIND('-')  THEN
            REPEAT
              AE_mtl.INIT;
              AE_mtl.Datum := AE_holen_Datum_1;
              AE_mtl.AU_Nr := tab_ab."Document No.";
              AE_mtl.POS_Nr := tab_ab."Line No.";
              AE_mtl.Belegart := 'AETG';
              AE_mtl.Deb_Nr := tab_ab."Sell-to Customer No.";
              AE_mtl.Artikel := tab_ab."No.";
              AE_mtl.Menge := tab_ab.Quantity;
              AE_mtl.Restmenge := tab_ab."Outstanding Quantity";
              AE_mtl.EK := tab_ab."Unit Cost (LCY)";
              AE_mtl.VK := tab_ab."Unit Price";
              AE_mtl."Best„tigt LD" := tab_ab."Promised Delivery Date";
              AE_mtl.Wunschdatum := tab_ab."Requested Delivery Date";
              AE_mtl.Status := 'AE';
              AE_mtl.Art := 'TAG';
              AE_mtl."EK Gesamt" := ROUND(((tab_ab.Quantity) * (tab_ab."Unit Cost (LCY)")),0.01);
              AE_mtl."VK Gesamt" := ROUND(((tab_ab.Quantity) * (tab_ab."Unit Price")),0.01);
              AE_mtl.Lager := tab_ab."Location Code";
              AE_mtl."DB %" := tab_ab."Profit %";
              AE_mtl.Linie := tab_ab."Manufacturer Code";
              AE_mtl.Endkunde := tab_ab.Endkunde;
              IF tab_ab."Blanket Order No." <> '' THEN
                AE_mtl."AU aus Rahmen":=TRUE;

              tab_vkk1.RESET;
              tab_vkk1.SETFILTER("No.",'%1',AE_mtl.AU_Nr);
              IF tab_vkk1.FINDFIRST THEN BEGIN
                AE_mtl.Debitor := tab_vkk1."Sell-to Customer Name";
                AE_mtl.W„hrungscode := tab_vkk1."Currency Code";
                AE_mtl.w„_faktor := tab_vkk1."Currency Factor";
                AE_mtl.Auftragsdatum := tab_vkk1."Order Date";
                AE_mtl.Betreuer := tab_vkk1."Betreuer Innendienst";
                AE_mtl.Vertreter := tab_vkk1."Salesperson Code";
                AE_mtl.Teams := tab_vkk1.Teams;
                AE_mtl.Gebietscode := tab_vkk1."Territory Code";
                AE_mtl.PLZ := tab_vkk1."Sell-to Post Code";

              END;
              IF AE_mtl.w„_faktor = 0 THEN
                AE_mtl."Betrag in EUR" := AE_mtl."VK Gesamt"
              ELSE
                AE_mtl."Betrag in EUR" := (AE_mtl."VK Gesamt" / AE_mtl.w„_faktor);
             AE_mtl.INSERT;
           UNTIL tab_ab.NEXT = 0;
        UNTIL tab_vkk.NEXT = 0;
      //  ENDE Einfgen von neuem AE

      // Gutschriften einspielen 28.11.2011
      AE_mtl.RESET;
      tab_guz.RESET;
      tab_guk.RESET;
      tab_guk.SETFILTER("Posting Date",'%1',AE_holen_Datum_1);
      IF tab_guk.FIND('-') THEN
        REPEAT
          tab_guz.RESET;
          tab_guz.SETFILTER("Document No.",'%1',tab_guk."No.");
          tab_guz.SETFILTER(Type,'%1',tab_guz.Type::Item);
          tab_guz.SETFILTER("Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          tab_guz.SETFILTER(Quantity,'>%1',0);
          IF tab_guz.FIND('-')  THEN
            REPEAT
              AE_mtl.INIT;
              AE_mtl.Datum := AE_holen_Datum_1;
              AE_mtl.AU_Nr := tab_guz."Document No.";
              AE_mtl.POS_Nr := tab_guz."Line No.";
              AE_mtl.Belegart := 'GUTG';
              AE_mtl.Deb_Nr := tab_guz."Sell-to Customer No.";
              AE_mtl.Artikel := tab_guz."No.";
              AE_mtl.Menge := tab_guz.Quantity;
              AE_mtl.Restmenge := tab_guz.Quantity;
              AE_mtl.EK := tab_guz."Unit Cost (LCY)";
              AE_mtl.VK := tab_guz."Unit Price";
              AE_mtl.Status := 'AE';
              AE_mtl.Art := 'TAG';
              AE_mtl."EK Gesamt" := ROUND(((tab_guz.Quantity) * (tab_guz."Unit Cost (LCY)") * (-1)),0.01);
              AE_mtl."VK Gesamt" := ROUND(((tab_guz.Quantity) * (tab_guz."Unit Price") * (-1)),0.01);
              AE_mtl.Lager:=tab_guz."Location Code";
              AE_mtl.Linie := tab_guz."Manufacturer Code";
              AE_mtl.Endkunde := tab_guz.Endkunde;
              AE_mtl.Debitor := tab_guk."Sell-to Customer Name";
              AE_mtl.W„hrungscode := tab_guk."Currency Code";
              AE_mtl.w„_faktor := tab_guk."Currency Factor";
              AE_mtl.Auftragsdatum := tab_guk."Posting Date";
              AE_mtl.Betreuer := tab_guk."Betreuer Innendienst";
              AE_mtl.Vertreter := tab_guk."Salesperson Code";
              AE_mtl.Teams := tab_guk.Teams;
              AE_mtl.PLZ := tab_guk."Sell-to Post Code";
              AE_mtl.Gebietscode := tab_guk."Territory Code";

              IF AE_mtl.w„_faktor = 0 THEN BEGIN
                AE_mtl."Betrag in EUR" := AE_mtl."VK Gesamt";
              END ELSE BEGIN
                AE_mtl."Betrag in EUR" := (AE_mtl."VK Gesamt"/AE_mtl.w„_faktor);
              END;
              AE_mtl.INSERT;
           UNTIL tab_guz.NEXT = 0;
        UNTIL tab_guk.NEXT = 0;
      // ENDE Gutschriften einspielen 28.11.2011

      "Linien umsetzen";
    END;

    PROCEDURE "tgl AE in mtl AE bernehmen"@1140005();
    BEGIN
      // berprft UB Stand 26.11.2018
      AE_mtl.RESET;
      AE_mtl.SETFILTER(Belegart,'%1','AETG');
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          AE_mtl.RENAME(AE_mtl.Datum,AE_mtl.AU_Nr,AE_mtl.POS_Nr,AE_mtl.Deb_Nr,'AMTL');
        UNTIL AE_mtl.NEXT = 0;
      END;

      AE_mtl.RESET;
      AE_mtl.SETFILTER(Belegart,'%1','GUTG');
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          AE_mtl.RENAME(AE_mtl.Datum,AE_mtl.AU_Nr,AE_mtl.POS_Nr,AE_mtl.Deb_Nr,'GUMT');
        UNTIL AE_mtl.NEXT = 0;
      END;

      AE_mtl.RESET;
      AE_mtl.SETFILTER(Belegart,'%1','AEND');
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          AE_mtl.RENAME(AE_mtl.Datum,AE_mtl.AU_Nr,AE_mtl.POS_Nr,AE_mtl.Deb_Nr,'AEMT');
        UNTIL AE_mtl.NEXT = 0;
      END;
    END;

    PROCEDURE AE_Verteilung_mtl@1140027();
    BEGIN
    END;

    PROCEDURE AE_Verteilung_xx@1140029();
    BEGIN
      // berprft UB Stand 26.11.2018


      // ANFANG tgl. AE in Excel ausgeben  Gesamtliste nach vorgegebenem Datum
      {
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('H:I').NumberFormat := '###.###,#####';
      Sheet.Range('L:M').NumberFormat := '###.###,##';
      Sheet.Range('Q:Q').NumberFormat := '###.###,##';

      Sheet.Range('A1').Value := 'Auftragseingang  '; // definiert die Beschriftung der berschriftszeile
      Sheet.Range('A2').Value := 'datum';
      Sheet.Range('B2').Value := 'auft_nr';
      Sheet.Range('C2').Value := 'deb_nr';
      Sheet.Range('D2').Value := 'name';
      Sheet.Range('E2').Value := 'menge';
      Sheet.Range('F2').Value := 'artikel';
      Sheet.Range('G2').Value := 'lager';
      Sheet.Range('H2').Value := 'ek';
      Sheet.Range('I2').Value := 'vk';
      Sheet.Range('J2').Value := 'w„hrung';
      Sheet.Range('K2').Value := 'w„_fakt';
      Sheet.Range('L2').Value := 'betrag in EUR';
      Sheet.Range('M2').Value := 'db';
      Sheet.Range('N2').Value := 'bearb';
      Sheet.Range('O2').Value := 'vertreter';
      Sheet.Range('P2').Value := 'linie';
      Sheet.Range('Q2').Value := 'ek_gesamt';
      Sheet.Range('R2').Value := 'plz';
      Sheet.Range('S2').Value := 'endkunde';
      Sheet.Range('T2').Value := 'team';
      Sheet.Range('U2').Value := 'gebiet';
      j := '3';

      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      IF AE_mtl.FINDFIRST THEN BEGIN
        REPEAT
          Sheet.Range('A'+j).Value := AE_mtl.Datum;
          Sheet.Range('B'+j).Value := AE_mtl.AU_Nr;
          Sheet.Range('C'+j).Value := AE_mtl.Deb_Nr;
          Sheet.Range('D'+j).Value := AE_mtl.Debitor;
          Sheet.Range('E'+j).Value := AE_mtl.Menge;
          Sheet.Range('F'+j).Value := AE_mtl.Artikel;
          Sheet.Range('G'+j).Value := AE_mtl.Lager;
          Sheet.Range('H'+j).Value := FORMAT(AE_mtl.EK);
          Sheet.Range('I'+j).Value := FORMAT(AE_mtl.VK);
          Sheet.Range('J'+j).Value := AE_mtl.W„hrungscode;
          Sheet.Range('K'+j).Value := FORMAT(AE_mtl.w„_faktor);
          Sheet.Range('L'+j).Value := FORMAT(AE_mtl."Betrag in EUR");
          Sheet.Range('M'+j).Value := FORMAT(AE_mtl."DB %");
          Sheet.Range('N'+j).Value := AE_mtl.Betreuer;
          Sheet.Range('O'+j).Value := AE_mtl.Vertreter;
          Sheet.Range('P'+j).Value := AE_mtl.Linie;
          Sheet.Range('Q'+j).Value := FORMAT(AE_mtl."EK Gesamt");
          Sheet.Range('R'+j).Value := AE_mtl.PLZ;
          Sheet.Range('S'+j).Value := AE_mtl.Endkunde;
          Sheet.Range('T'+j).Value := AE_mtl.Teams;
          Sheet.Range('U'+j).Value := AE_mtl.Gebietscode;
          j := INCSTR(j);
        UNTIL AE_mtl.NEXT = 0;
      END;
      IF wshFile.FileExists(('F:\Daten Neu\Gemeinsame Ordner\Auftragseingang\Sylke\')+(Filename)) THEN wshFile.DeleteFile(('F:\Daten Neu\Gemeinsame Ordner\Auftragseingang\Sylke\')+(Filename));
      Book.SaveAs(('F:\Daten Neu\Gemeinsame Ordner\Auftragseingang\Sylke\')+(Filename));
      Book.Close(TRUE);
      }
    END;

    PROCEDURE "aktuellen BB einfgen"@1140012();
    BEGIN
      // berprft UB Stand 26.11.2018
      //  ANFANG  L”schen und umbenennen von alten S„tzen
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','AL2');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.DELETE;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','AL1');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Art:='AL2';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','ALT');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Art:='AL1';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Art:='ALT';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','ALT');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status:='NN';
          tab_ab_bw.Stat_Artikel:='NN';
          tab_ab_bw.Stat_Menge:='NN';
          tab_ab_bw.Stat_EK:='NN';
          tab_ab_bw.Stat_VK:='NN';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE  L”schen und umbenennen von alten S„tzen

      // ANFANG Einfgen von neuem BB
      tab_be.RESET;
      tab_be.SETFILTER(tab_be."Document Type",'%1', tab_be."Document Type"::Order);
      tab_be.SETFILTER(tab_be.Type,'%1',tab_be.Type::Item);
      tab_be.SETFILTER(tab_be."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      //tab_be.SETFILTER(tab_be."Outstanding Quantity",'>%1',0);
      IF tab_be.FIND('-')  THEN BEGIN
        REPEAT
          tab_ab_bw.INIT;
          tab_ab_bw.Belegart:='BEšW';
          tab_ab_bw.Datum:=AE_holen_Datum;
          tab_ab_bw.AU_Nr:=tab_be."Document No.";
          tab_ab_bw.POS_Nr:=tab_be."Line No.";
          tab_ab_bw.Deb_Nr:=tab_be."Buy-from Vendor No.";
          tab_ab_bw.Artikel:=tab_be."No.";
          tab_ab_bw.Menge:=tab_be.Quantity;
          tab_ab_bw.Restmenge:=tab_be."Outstanding Quantity";
          tab_ab_bw.EK:=tab_be."Direct Unit Cost";
          tab_ab_bw."Best„tigt LD":=tab_be."Promised Receipt Date";
          tab_ab_bw.Wunschdatum:=tab_be."Requested Receipt Date";
          tab_ab_bw.Status:='NN';
          tab_ab_bw.Art:='NEU';
          tab_ab_bw."EK Gesamt":=ROUND(((tab_be.Quantity)*(tab_be."Direct Unit Cost")),2);
          tab_ab_bw.Lager:=tab_be."Location Code";
          tab_ab_bw."DB %":=tab_be."Profit %";
          tab_ab_bw.Linie:=tab_be."Manufacturer Code";
          tab_ab_bw.Debitor:=tab_be.Description;
          tab_bek.RESET;
          tab_bek.SETFILTER(tab_bek."No.",'%1',tab_ab_bw.AU_Nr);
          IF tab_bek.FINDFIRST THEN BEGIN
            tab_ab_bw.W„hrungscode:=tab_bek."Currency Code";
            tab_ab_bw.Auftragsdatum:=tab_bek."Order Date";
          END;
          tab_ab_bw.INSERT;
        UNTIL tab_be.NEXT = 0;
      END;
      "Linien umsetzen";
    END;

    PROCEDURE "Linien umsetzen"@1140013();
    BEGIN
      // berprft UB Stand 26.11.2018
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Linie,'%1..%2','00','99');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          //  IF tab_ab_bw.Linie='00' THEN tab_ab_bw.Linie:='IDT';
          IF tab_ab_bw.Linie='01' THEN tab_ab_bw.Linie:='LSI';
          //  IF tab_ab_bw.Linie='02' THEN tab_ab_bw.Linie:='FUM';
          //  IF tab_ab_bw.Linie='03' THEN tab_ab_bw.Linie:='SCN';
          IF tab_ab_bw.Linie='04' THEN tab_ab_bw.Linie:='XMO';
          IF tab_ab_bw.Linie='05' THEN tab_ab_bw.Linie:='BTC';
          //  IF tab_ab_bw.Linie='06' THEN tab_ab_bw.Linie:='SMT';
          IF tab_ab_bw.Linie='07' THEN tab_ab_bw.Linie:='GEO';
          IF tab_ab_bw.Linie='08' THEN tab_ab_bw.Linie:='GSC';
          //  IF tab_ab_bw.Linie='09' THEN tab_ab_bw.Linie:='ART';
          //  IF tab_ab_bw.Linie='10' THEN tab_ab_bw.Linie:='ZOR';
          IF tab_ab_bw.Linie='11' THEN tab_ab_bw.Linie:='ECT';
          IF tab_ab_bw.Linie='12' THEN tab_ab_bw.Linie:='NEX';
          //  IF tab_ab_bw.Linie='13' THEN tab_ab_bw.Linie:='NET';
          IF tab_ab_bw.Linie='14' THEN tab_ab_bw.Linie:='FOX';
          //  IF tab_ab_bw.Linie='15' THEN tab_ab_bw.Linie:='CAV';
          IF tab_ab_bw.Linie='16' THEN tab_ab_bw.Linie:='VIA';
          IF tab_ab_bw.Linie='17' THEN tab_ab_bw.Linie:='DSP';
          IF tab_ab_bw.Linie='18' THEN tab_ab_bw.Linie:='HIF';
          IF tab_ab_bw.Linie='19' THEN tab_ab_bw.Linie:='PAI';
          IF tab_ab_bw.Linie='20' THEN tab_ab_bw.Linie:='WIL';
          //  IF tab_ab_bw.Linie='21' THEN tab_ab_bw.Linie:='TSC';
          IF tab_ab_bw.Linie='22' THEN tab_ab_bw.Linie:='SIL';
          IF tab_ab_bw.Linie='23' THEN tab_ab_bw.Linie:='FTC';
          //  IF tab_ab_bw.Linie='24' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='25' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='26' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='27' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='28' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='29' THEN tab_ab_bw.Linie:='';
          IF tab_ab_bw.Linie='30' THEN tab_ab_bw.Linie:='ICP';
          IF tab_ab_bw.Linie='31' THEN tab_ab_bw.Linie:='STR';
          //  IF tab_ab_bw.Linie='32' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='33' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='34' THEN tab_ab_bw.Linie:='PAR';
          //  IF tab_ab_bw.Linie='35' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='36' THEN tab_ab_bw.Linie:='';
          IF tab_ab_bw.Linie='37' THEN tab_ab_bw.Linie:='ITC';
          //  IF tab_ab_bw.Linie='38' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='39' THEN tab_ab_bw.Linie:='UBI';
          IF tab_ab_bw.Linie='40' THEN tab_ab_bw.Linie:='RIC';
          IF tab_ab_bw.Linie='41' THEN tab_ab_bw.Linie:='NIS';
          //  IF tab_ab_bw.Linie='42' THEN tab_ab_bw.Linie:='';
          IF tab_ab_bw.Linie='43' THEN tab_ab_bw.Linie:='OVT';
          IF tab_ab_bw.Linie='44' THEN tab_ab_bw.Linie:='OVM';
          //  IF tab_ab_bw.Linie='45' THEN tab_ab_bw.Linie:='SIM';
          //  IF tab_ab_bw.Linie='46' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='47' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='48' THEN tab_ab_bw.Linie:='PLX';
          //  IF tab_ab_bw.Linie='49' THEN tab_ab_bw.Linie:='TEC';
          //  IF tab_ab_bw.Linie='50' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='51' THEN tab_ab_bw.Linie:='INV';
          IF tab_ab_bw.Linie='52' THEN tab_ab_bw.Linie:='ACT';
          IF tab_ab_bw.Linie='53' THEN tab_ab_bw.Linie:='ACI';
          IF tab_ab_bw.Linie='54' THEN tab_ab_bw.Linie:='GSI';
          IF tab_ab_bw.Linie='55' THEN tab_ab_bw.Linie:='KIN';
          IF tab_ab_bw.Linie='56' THEN tab_ab_bw.Linie:='IKA';
          IF tab_ab_bw.Linie='57' THEN tab_ab_bw.Linie:='ACC';
          IF tab_ab_bw.Linie='5710' THEN tab_ab_bw.Linie:='ACA';
          IF tab_ab_bw.Linie='5720' THEN tab_ab_bw.Linie:='ACP';
          IF tab_ab_bw.Linie='5730' THEN tab_ab_bw.Linie:='ASS';
          IF tab_ab_bw.Linie='58' THEN tab_ab_bw.Linie:='ACL';
          IF tab_ab_bw.Linie='59' THEN tab_ab_bw.Linie:='ACS';
          //  IF tab_ab_bw.Linie='60' THEN tab_ab_bw.Linie:='SSC';
          //  IF tab_ab_bw.Linie='61' THEN tab_ab_bw.Linie:='JEL';
          //  IF tab_ab_bw.Linie='62' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='63' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='64' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='65' THEN tab_ab_bw.Linie:='WWC';
          //  IF tab_ab_bw.Linie='66' THEN tab_ab_bw.Linie:='SYC';
          //  IF tab_ab_bw.Linie='67' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='68' THEN tab_ab_bw.Linie:='WML';
          IF tab_ab_bw.Linie='69' THEN tab_ab_bw.Linie:='CIR';
          //  IF tab_ab_bw.Linie='70' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='71' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='72' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='73' THEN tab_ab_bw.Linie:='C2M';
          IF tab_ab_bw.Linie='74' THEN tab_ab_bw.Linie:='DIG';
          //  IF tab_ab_bw.Linie='75' THEN tab_ab_bw.Linie:='PHY';
          //  IF tab_ab_bw.Linie='76' THEN tab_ab_bw.Linie:='SBT';
          //  IF tab_ab_bw.Linie='77' THEN tab_ab_bw.Linie:='CEC';
          IF tab_ab_bw.Linie='78' THEN tab_ab_bw.Linie:='HAL';
          //  IF tab_ab_bw.Linie='79' THEN tab_ab_bw.Linie:='ASD';
          //  IF tab_ab_bw.Linie='80' THEN tab_ab_bw.Linie:='MAG';
          //  IF tab_ab_bw.Linie='81' THEN tab_ab_bw.Linie:='INI';
          IF tab_ab_bw.Linie='82' THEN tab_ab_bw.Linie:='SPL';
          //  IF tab_ab_bw.Linie='83' THEN tab_ab_bw.Linie:='RLI';
          //  IF tab_ab_bw.Linie='84' THEN tab_ab_bw.Linie:='ANS';
          IF tab_ab_bw.Linie='85' THEN tab_ab_bw.Linie:='FER';
          IF tab_ab_bw.Linie='86' THEN tab_ab_bw.Linie:='FES';
          IF tab_ab_bw.Linie='87' THEN tab_ab_bw.Linie:='FET';
          IF tab_ab_bw.Linie='88' THEN tab_ab_bw.Linie:='WIS';
          IF tab_ab_bw.Linie='89' THEN tab_ab_bw.Linie:='WIT';
          //  IF tab_ab_bw.Linie='90' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='91' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='92' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='93' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='94' THEN tab_ab_bw.Linie:='';
          //  IF tab_ab_bw.Linie='95' THEN tab_ab_bw.Linie:='';
          IF tab_ab_bw.Linie='96' THEN tab_ab_bw.Linie:='TSG';
          IF tab_ab_bw.Linie='9610' THEN tab_ab_bw.Linie:='ASP';
          IF tab_ab_bw.Linie='9620' THEN tab_ab_bw.Linie:='FEP';
          IF tab_ab_bw.Linie='9630' THEN tab_ab_bw.Linie:='WIP';
          IF tab_ab_bw.Linie='97' THEN tab_ab_bw.Linie:='SON';
          IF tab_ab_bw.Linie='98' THEN tab_ab_bw.Linie:='SON';
          IF tab_ab_bw.Linie='99' THEN tab_ab_bw.Linie:='TOP';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;




      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Linie,'%1..%2','00','99');
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          //  IF AE_mtl.Linie='00' THEN AE_mtl.Linie:='IDT';
          IF AE_mtl.Linie='01' THEN AE_mtl.Linie:='LSI';
          //  IF AE_mtl.Linie='02' THEN AE_mtl.Linie:='FUM';
          //  IF AE_mtl.Linie='03' THEN AE_mtl.Linie:='SCN';
          IF AE_mtl.Linie='04' THEN AE_mtl.Linie:='XMO';
          IF AE_mtl.Linie='05' THEN AE_mtl.Linie:='BTC';
          //  IF AE_mtl.Linie='06' THEN AE_mtl.Linie:='SMT';
          IF AE_mtl.Linie='07' THEN AE_mtl.Linie:='GEO';
          IF AE_mtl.Linie='08' THEN AE_mtl.Linie:='GSC';
          //  IF AE_mtl.Linie='09' THEN AE_mtl.Linie:='ART';
          //  IF AE_mtl.Linie='10' THEN AE_mtl.Linie:='ZOR';
          IF AE_mtl.Linie='11' THEN AE_mtl.Linie:='ECT';
          IF AE_mtl.Linie='12' THEN AE_mtl.Linie:='NEX';
          //  IF AE_mtl.Linie='13' THEN AE_mtl.Linie:='NET';
          IF AE_mtl.Linie='14' THEN AE_mtl.Linie:='FOX';
          //  IF AE_mtl.Linie='15' THEN AE_mtl.Linie:='CAV';
          IF AE_mtl.Linie='16' THEN AE_mtl.Linie:='VIA';
          IF AE_mtl.Linie='17' THEN AE_mtl.Linie:='DSP';
          IF AE_mtl.Linie='18' THEN AE_mtl.Linie:='HIF';
          IF AE_mtl.Linie='19' THEN AE_mtl.Linie:='PAI';
          IF AE_mtl.Linie='20' THEN AE_mtl.Linie:='WIL';
          //  IF AE_mtl.Linie='21' THEN AE_mtl.Linie:='TSC';
          IF AE_mtl.Linie='22' THEN AE_mtl.Linie:='SIL';
          IF AE_mtl.Linie='23' THEN AE_mtl.Linie:='FTC';
          //  IF AE_mtl.Linie='24' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='25' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='26' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='27' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='28' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='29' THEN AE_mtl.Linie:='';
          IF AE_mtl.Linie='30' THEN AE_mtl.Linie:='ICP';
          IF AE_mtl.Linie='31' THEN AE_mtl.Linie:='STR';
          //  IF AE_mtl.Linie='32' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='33' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='34' THEN AE_mtl.Linie:='PAR';
          //  IF AE_mtl.Linie='35' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='36' THEN AE_mtl.Linie:='';
          IF AE_mtl.Linie='37' THEN AE_mtl.Linie:='ITC';
          //  IF AE_mtl.Linie='38' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='39' THEN AE_mtl.Linie:='UBI';
          IF AE_mtl.Linie='40' THEN AE_mtl.Linie:='RIC';
          IF AE_mtl.Linie='41' THEN AE_mtl.Linie:='NIS';
          //  IF AE_mtl.Linie='42' THEN AE_mtl.Linie:='';
          IF AE_mtl.Linie='43' THEN AE_mtl.Linie:='OVT';
          IF AE_mtl.Linie='44' THEN AE_mtl.Linie:='OVM';
          //  IF AE_mtl.Linie='45' THEN AE_mtl.Linie:='SIM';
          //  IF AE_mtl.Linie='46' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='47' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='48' THEN AE_mtl.Linie:='PLX';
          //  IF AE_mtl.Linie='49' THEN AE_mtl.Linie:='TEC';
          //  IF AE_mtl.Linie='50' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='51' THEN AE_mtl.Linie:='INV';
          IF AE_mtl.Linie='52' THEN AE_mtl.Linie:='ACT';
          IF AE_mtl.Linie='53' THEN AE_mtl.Linie:='ACI';
          IF AE_mtl.Linie='54' THEN AE_mtl.Linie:='GSI';
          IF AE_mtl.Linie='55' THEN AE_mtl.Linie:='KIN';
          IF AE_mtl.Linie='56' THEN AE_mtl.Linie:='IKA';
          IF AE_mtl.Linie='57' THEN AE_mtl.Linie:='ACC';
          IF AE_mtl.Linie='5710' THEN AE_mtl.Linie:='ACA';
          IF AE_mtl.Linie='5720' THEN AE_mtl.Linie:='ACP';
          IF AE_mtl.Linie='5730' THEN AE_mtl.Linie:='ASS';
          IF AE_mtl.Linie='58' THEN AE_mtl.Linie:='ACL';
          IF AE_mtl.Linie='59' THEN AE_mtl.Linie:='ACS';
          //  IF AE_mtl.Linie='60' THEN AE_mtl.Linie:='SSC';
          //  IF AE_mtl.Linie='61' THEN AE_mtl.Linie:='JEL';
          //  IF AE_mtl.Linie='62' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='63' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='64' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='65' THEN AE_mtl.Linie:='WWC';
          //  IF AE_mtl.Linie='66' THEN AE_mtl.Linie:='SYC';
          //  IF AE_mtl.Linie='67' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='68' THEN AE_mtl.Linie:='WML';
          IF AE_mtl.Linie='69' THEN AE_mtl.Linie:='CIR';
          //  IF AE_mtl.Linie='70' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='71' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='72' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='73' THEN AE_mtl.Linie:='C2M';
          IF AE_mtl.Linie='74' THEN AE_mtl.Linie:='DIG';
          //  IF AE_mtl.Linie='75' THEN AE_mtl.Linie:='PHY';
          //  IF AE_mtl.Linie='76' THEN AE_mtl.Linie:='SBT';
          //  IF AE_mtl.Linie='77' THEN AE_mtl.Linie:='CEC';
          IF AE_mtl.Linie='78' THEN AE_mtl.Linie:='HAL';
          //  IF AE_mtl.Linie='79' THEN AE_mtl.Linie:='ASD';
          //  IF AE_mtl.Linie='80' THEN AE_mtl.Linie:='MAG';
          //  IF AE_mtl.Linie='81' THEN AE_mtl.Linie:='INI';
          IF AE_mtl.Linie='82' THEN AE_mtl.Linie:='SPL';
          //  IF AE_mtl.Linie='83' THEN AE_mtl.Linie:='RLI';
          //  IF AE_mtl.Linie='84' THEN AE_mtl.Linie:='ANS';
          IF AE_mtl.Linie='85' THEN AE_mtl.Linie:='FER';
          IF AE_mtl.Linie='86' THEN AE_mtl.Linie:='FES';
          IF AE_mtl.Linie='87' THEN AE_mtl.Linie:='FET';
          IF AE_mtl.Linie='88' THEN AE_mtl.Linie:='WIS';
          IF AE_mtl.Linie='89' THEN AE_mtl.Linie:='WIT';
          //  IF AE_mtl.Linie='90' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='91' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='92' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='93' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='94' THEN AE_mtl.Linie:='';
          //  IF AE_mtl.Linie='95' THEN AE_mtl.Linie:='';
          IF AE_mtl.Linie='96' THEN AE_mtl.Linie:='TSG';
          IF AE_mtl.Linie='9610' THEN AE_mtl.Linie:='ASP';
          IF AE_mtl.Linie='9620' THEN AE_mtl.Linie:='FEP';
          IF AE_mtl.Linie='9630' THEN AE_mtl.Linie:='WIP';
          IF AE_mtl.Linie='97' THEN AE_mtl.Linie:='SON';
          IF AE_mtl.Linie='98' THEN AE_mtl.Linie:='SON';
          IF AE_mtl.Linie='99' THEN AE_mtl.Linie:='TOP';

          AE_mtl.MODIFY;
        UNTIL AE_mtl.NEXT = 0;
      END;
    END;

    PROCEDURE "BB Diff ermitteln"@1140014();
    BEGIN
      // berprft UB Stand 26.11.2018

      // ANFANG zurcksetzen Status auf NN zwecks Programmtests
      //        kann bei Echtbetrieb unterbleiben!!!
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','ALT');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status:='NN';
          tab_ab_bw.Stat_Artikel:='NN';
          tab_ab_bw.Stat_Menge:='NN';
          tab_ab_bw.Stat_EK:='NN';
          tab_ab_bw.Stat_VK:='NN';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status:='NN';
          tab_ab_bw.Stat_Artikel:='NN';
          tab_ab_bw.Stat_Menge:='NN';
          tab_ab_bw.Stat_EK:='NN';
          tab_ab_bw.Stat_VK:='NN';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      // ENDE zurcksetzen Status auf NN zwecks Programmtests


      //  ANFANG Vergleich zwischen NEU und ALT (tab_ab_bw=NEU  und prf=ALT)
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          prf.RESET;
          prf.SETFILTER(prf.Belegart,'%1','BEšW');
          prf.SETFILTER(prf.AU_Nr,'%1',tab_ab_bw.AU_Nr);
          prf.SETFILTER(prf.POS_Nr,'%1',tab_ab_bw.POS_Nr);
          prf.SETFILTER(prf.Art,'%1','ALT');
          IF prf.FINDFIRST THEN BEGIN
            IF prf.Artikel=tab_ab_bw.Artikel THEN BEGIN
              tab_ab_bw.Stat_Artikel:='OK';
              prf.Stat_Artikel:='OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Artikel:='AF';
              tab_ab_bw.Status:='ŽN';
              prf.Stat_Artikel:='AF';
              prf.Status:='ŽN';
            END;
            IF prf.Menge=tab_ab_bw.Menge THEN BEGIN
              tab_ab_bw.Stat_Menge:='OK';
              prf.Stat_Menge:='OK';
              // ANFANG  Rechnungsmengenprfung bei Menge OK
              IF prf.Restmenge=tab_ab_bw.Restmenge THEN BEGIN
              END ELSE BEGIN
                tab_ab_bw.Stat_Menge:='MR';
                tab_ab_bw.Status:='ŽN';
                prf.Stat_Menge:='MR';
                prf.Status:='ŽN';
              END;
              // ENDE  Rechnungsmengenprfung bei Menge OK
            END ELSE BEGIN
              tab_ab_bw.Stat_Menge:='MF';
              tab_ab_bw.Status:='ŽN';
              prf.Stat_Menge:='MF';
              prf.Status:='ŽN';
            END;

            IF prf.Restmenge=tab_ab_bw.Restmenge THEN BEGIN
            END ELSE BEGIN
              tab_ab_bw.Stat_Menge:='MR';
              tab_ab_bw.Status:='ŽN';
              prf.Stat_Menge:='MR';
              prf.Status:='ŽN';
            END;

            IF prf.EK=tab_ab_bw.EK THEN BEGIN
              tab_ab_bw.Stat_EK:='OK';
              prf.Stat_EK:='OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_EK:='EF';
              tab_ab_bw.Status:='ŽN';
              prf.Stat_EK:='EF';
              prf.Status:='ŽN';
            END;
            tab_ab_bw.MODIFY;
            prf.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE Diff. feststellen Artikel, Menge, EK, VK
      //  ANFANG Status auf OK setzen, wenn keine Abweichnung vorliegt
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','NEU');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_Artikel,'%1','OK');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_Menge,'%1','OK');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_EK,'%1','OK');
      IF tab_ab_bw.FIND('-') THEN BEGIN
      REPEAT
       tab_ab_bw.Status:='OK';
       tab_ab_bw.MODIFY;
      UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','ALT');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_Artikel,'%1','OK');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_Menge,'%1','OK');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_EK,'%1','OK');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status:='OK';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE   Status auf OK setzen, wenn keine Abweichnung vorliegt

      //  ANFANG Feststellen, ob neuer Auftrag/Pos vorliegt
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','NEU');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          prf.RESET;
          tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
          prf.SETFILTER(prf.Art,'%1','ALT');
          prf.SETFILTER(prf.AU_Nr,'%1',tab_ab_bw.AU_Nr);
          IF prf.FINDFIRST THEN BEGIN
          //  Neue Position zu altem Auftrag
            tab_ab_bw.Status:='NP';
            tab_ab_bw.MODIFY;
          END ELSE BEGIN
          //  Neuer Auftrag
            tab_ab_bw.Status:='NA';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE   Feststellen, ob neuer Auftrag/Pos vorliegt

      // ANFANG  Feststellen, ob ein Auftrag/Pos storniert wurde
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','ALT');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          var_re_menge:=0;
          best.RESET;
          best.SETFILTER(best."Order No.",'%1',tab_ab_bw.AU_Nr);
          best.SETFILTER(best."Order Line No.",'%1',tab_ab_bw.POS_Nr);
          IF best.FIND('-') THEN BEGIN
            REPEAT
              tab_ab_bw.Status:='ST';
              tab_ab_bw.MODIFY;
              var_be_menge:=var_be_menge+best.Quantity;
            UNTIL best.NEXT = 0;
            IF var_be_menge>0 THEN BEGIN
              tab_ab_bw.Status:='BE';
            END;
            tab_ab_bw.re_menge:=var_be_menge;
            tab_ab_bw.MODIFY;
            var_be_menge:=0;
          END ELSE BEGIN
            //  Storno der Zeile
            tab_ab_bw.Status:='ST';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','ALT');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1','ŽN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          var_be_menge:=0;
          best.RESET;
          best.SETFILTER(best."Order No.",'%1',tab_ab_bw.AU_Nr);
          best.SETFILTER(best."Order Line No.",'%1',tab_ab_bw.POS_Nr);
          IF best.FIND('-') THEN BEGIN
            REPEAT
              var_be_menge:=var_be_menge+best.Quantity;
            UNTIL best.NEXT = 0;
            IF var_be_menge>0 THEN BEGIN
              tab_ab_bw.Status:='BE';
            END;
            tab_ab_bw.re_menge:=var_be_menge;
            tab_ab_bw.MODIFY;
            var_be_menge:=0;
          END ELSE BEGIN
            //  Storno der Zeile
            tab_ab_bw.Status:='ST';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','NEU');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1','ŽN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          var_be_menge:=0;
          best.RESET;
          best.SETFILTER(best."Order No.",'%1',tab_ab_bw.AU_Nr);
          best.SETFILTER(best."Order Line No.",'%1',tab_ab_bw.POS_Nr);
          IF best.FINDFIRST THEN BEGIN
            REPEAT
              var_be_menge:=var_be_menge+best.Quantity;
            UNTIL best.NEXT = 0;
            IF var_be_menge>0 THEN BEGIN
              tab_ab_bw.Status:='BE';
            END;
            tab_ab_bw.re_menge:=var_be_menge;
            tab_ab_bw.MODIFY;
            var_be_menge:=0;
          END ELSE BEGIN
            //  Storno der Zeile
            tab_ab_bw.Status:='ST';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      // ENDE    Feststellen, ob ein Auftrag/Pos storniert wurde

      // ANFANG  Feststellen, ob BE_Mengen mit AU_Mengen bereinstimmen
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','ALT');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1','BE');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.Menge=tab_ab_bw.re_menge THEN BEGIN
            tab_ab_bw.Status:='OK';
          END ELSE BEGIN
            tab_ab_bw.Status:='GP';
          END;
          IF tab_ab_bw.Restmenge=0 THEN BEGIN
            tab_ab_bw.Status:='FA';
          END;
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //   ENDE  Feststellen, ob BE_Mengen mit AU_Mengen bereinstimmen

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','ALT');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1','FA');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_Menge,'%1','NN');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_Artikel,'%1','NN');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_EK,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.re_menge=tab_ab_bw.Menge THEN BEGIN
            tab_ab_bw.Status:='OK';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1','NEU');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1','BE');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_Menge,'%1','MR');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_Artikel,'%1','OK');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_EK,'%1','OK');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF ((tab_ab_bw.re_menge=tab_ab_bw.Menge) AND (tab_ab_bw.Restmenge=0)) THEN BEGIN
            tab_ab_bw.Status:='OK';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      //  ENDE   Vergleich zwischen NEU und ALT

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Bestellbestandsberwachung  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Pos-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Debitor','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'EK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'VK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Status','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Art Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Menge Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'EK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'VK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'W„ Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'RE Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'urspr AU-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      RowNo := 3;
      var_AU_Nr := 'AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1|%2|%3|%4|%5|%6', 'NP', 'ŽN', 'ST', 'GP', 'FA', 'BE');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.AU_Nr=var_AU_Nr THEN BEGIN
            IF tab_ab_bw.Stat_Artikel ='AF' THEN BEGIN
              EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,4,tab_ab_bw.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,tab_ab_bw.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,8,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,10,tab_ab_bw.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,tab_ab_bw.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,12,tab_ab_bw.Stat_Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,13,tab_ab_bw.Stat_Menge,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,16,tab_ab_bw.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,17,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,18,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,19,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              RowNo := RowNo +1;
            END;
          END ELSE BEGIN
            IF tab_ab_bw.Stat_Artikel ='AF' THEN BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,4,tab_ab_bw.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,tab_ab_bw.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,10,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,11,tab_ab_bw.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,12,tab_ab_bw.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,13,tab_ab_bw.Stat_Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,tab_ab_bw.Stat_Menge,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,17,tab_ab_bw.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,18,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,19,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,20,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              RowNo := RowNo +1;
            END;
            var_AU_Nr := tab_ab_bw.AU_Nr;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      var_AU_Nr:='AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','BEšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(tab_ab_bw.Stat_Artikel,'<>%1','AF');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1|%2|%3|%4|%5|%6', 'NP', 'ŽN', 'ST', 'GP', 'FA', 'BE');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.AU_Nr=var_AU_Nr THEN BEGIN
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,tab_ab_bw.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,tab_ab_bw.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,tab_ab_bw.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,11,tab_ab_bw.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,tab_ab_bw.Stat_Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,tab_ab_bw.Stat_Menge,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,tab_ab_bw.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,17,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,18,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
          END ELSE BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,tab_ab_bw.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,tab_ab_bw.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,tab_ab_bw.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,11,tab_ab_bw.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,tab_ab_bw.Stat_Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,tab_ab_bw.Stat_Menge,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,tab_ab_bw.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,17,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,18,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
            var_AU_Nr := tab_ab_bw.AU_Nr;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      CloseExcel(bb_Filename,bb_Filename,'F:\Daten Neu\Gemeinsame Ordner\Customer Service\BE-Differenzen');
      MESSAGE('Differenzen wurden ordnungsgem„á nach Excel exportiert.');
    END;

    PROCEDURE Auftrag_sichern@1140015();
    BEGIN
      // berprft UB Stand 26.11.2018
      // ANFANG Einfgen von neuem AU
      AE_mtl.RESET;
      tab_ab.RESET;
      tab_vkk.RESET;
      tab_vkk.SETFILTER(tab_vkk."No.",'%1',AU_Nr_sich);
      IF tab_vkk.FIND('-') THEN BEGIN
        REPEAT
          tab_ab.RESET;
          tab_ab.SETFILTER(tab_ab."Document No.",'%1',tab_vkk."No.");
          tab_ab.SETFILTER(tab_ab."Document Type",'%1', tab_ab."Document Type"::Order);
          tab_ab.SETFILTER(tab_ab.Type,'%1',tab_ab.Type::Item);
          tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          tab_ab.SETFILTER(tab_ab.Quantity,'>%1',0);
          IF tab_ab.FIND('-')  THEN BEGIN
            REPEAT
              AE_mtl.INIT;
              AE_mtl.Datum:=WORKDATE;
              AE_mtl.AU_Nr:=tab_ab."Document No.";
              AE_mtl.POS_Nr:=tab_ab."Line No.";
              AE_mtl.Belegart:='AETG';
              AE_mtl.Deb_Nr:=tab_ab."Sell-to Customer No.";
              AE_mtl.Artikel:=tab_ab."No.";
              AE_mtl.Menge:=tab_ab.Quantity;
              AE_mtl.Restmenge:=tab_ab."Outstanding Quantity";
              AE_mtl.EK:=tab_ab."Unit Cost (LCY)";
              AE_mtl.VK:=tab_ab."Unit Price";
              AE_mtl."Best„tigt LD":=tab_ab."Promised Delivery Date";
              AE_mtl.Wunschdatum:=tab_ab."Requested Delivery Date";
              AE_mtl.Status:='AE';
              AE_mtl.Art:='TAG';
              AE_mtl."EK Gesamt":=ROUND(((tab_ab.Quantity)*(tab_ab."Unit Cost (LCY)")),0.01);
              AE_mtl."VK Gesamt":=ROUND(((tab_ab.Quantity)*(tab_ab."Unit Price")),0.01);
              AE_mtl.Lager:=tab_ab."Location Code";
              AE_mtl."DB %":=tab_ab."Profit %";
              AE_mtl.Linie:=tab_ab."Manufacturer Code";
              AE_mtl.Endkunde:=tab_ab.Endkunde;
              tab_vkk1.RESET;
              tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',AE_mtl.AU_Nr);
              IF tab_vkk1.FINDFIRST THEN BEGIN
                AE_mtl.Debitor:=tab_vkk1."Sell-to Customer Name";
                AE_mtl.W„hrungscode:=tab_vkk1."Currency Code";
                AE_mtl.w„_faktor:=tab_vkk1."Currency Factor";
                AE_mtl.Auftragsdatum:=tab_vkk1."Order Date";
                AE_mtl.Betreuer:=tab_vkk1."Betreuer Innendienst";
                AE_mtl.Vertreter:=tab_vkk1."Salesperson Code";
                AE_mtl.Teams:=tab_vkk1.Teams;
                AE_mtl.Gebietscode:=tab_vkk1."Territory Code";
                AE_mtl.PLZ:=tab_vkk1."Sell-to Post Code";
              END;
              IF AE_mtl.w„_faktor=0 THEN BEGIN
                AE_mtl."Betrag in EUR":=AE_mtl."VK Gesamt";
              END ELSE BEGIN
                AE_mtl."Betrag in EUR":=(AE_mtl."VK Gesamt"/AE_mtl.w„_faktor);
              END;
              AE_mtl.INSERT;
            UNTIL tab_ab.NEXT = 0;
          END;
        UNTIL tab_vkk.NEXT = 0;
      END;
      //  ENDE Einfgen von neuem AU

      "Linien umsetzen";
    END;

    PROCEDURE Auftrag_Arch_sichern@1140065();
    BEGIN
      // berprft UB Stand 26.11.2018
      // ANFANG Einfgen von archiviertem AU
      AE_mtl.RESET;
      tab_ab_arch.RESET;
      tab_vkk_arch.RESET;
      tab_vkk_arch.SETFILTER(tab_vkk_arch."No.",'%1',AU_Arch_Nr_sich);
      IF tab_vkk_arch.FINDLAST THEN BEGIN
        tab_ab_arch.RESET;
        tab_ab_arch.SETFILTER(tab_ab_arch."Document No.",'%1',tab_vkk_arch."No.");
        tab_ab_arch.SETFILTER(tab_ab_arch."Document Type",'%1', tab_ab_arch."Document Type"::Order);
        tab_ab_arch.SETFILTER(tab_ab_arch.Type,'%1',tab_ab_arch.Type::Item);
        tab_ab_arch.SETFILTER(tab_ab_arch."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
        tab_ab_arch.SETFILTER(tab_ab_arch.Quantity,'>%1',0);
        tab_ab_arch.SETFILTER(tab_ab_arch."Version No.",'%1',tab_vkk_arch."Version No.");
        IF tab_ab_arch.FIND('-')  THEN BEGIN
          REPEAT
            AE_mtl.INIT;
            AE_mtl.Datum:=WORKDATE;
            AE_mtl.AU_Nr:=tab_ab_arch."Document No.";
            AE_mtl.POS_Nr:=tab_ab_arch."Line No.";
            AE_mtl.Belegart:='AETG';
            AE_mtl.Deb_Nr:=tab_ab_arch."Sell-to Customer No.";
            AE_mtl.Artikel:=tab_ab_arch."No.";
            AE_mtl.Menge:=tab_ab_arch.Quantity;
            AE_mtl.Restmenge:=tab_ab_arch."Outstanding Quantity";
            AE_mtl.EK:=tab_ab_arch."Unit Cost (LCY)";
            AE_mtl.VK:=tab_ab_arch."Unit Price";
            AE_mtl."Best„tigt LD":=tab_ab_arch."Promised Delivery Date";
            AE_mtl.Wunschdatum:=tab_ab_arch."Requested Delivery Date";
            AE_mtl.Status:='AE';
            AE_mtl.Art:='TAG';
            AE_mtl."EK Gesamt":=ROUND(((tab_ab_arch.Quantity)*(tab_ab_arch."Unit Cost (LCY)")),0.01);
            AE_mtl."VK Gesamt":=ROUND(((tab_ab_arch.Quantity)*(tab_ab_arch."Unit Price")),0.01);
            AE_mtl.Lager:=tab_ab_arch."Location Code";
            AE_mtl."DB %":=tab_ab_arch."Profit %";
            AE_mtl.Linie:=tab_ab_arch."Manufacturer Code";
            AE_mtl.Endkunde:=tab_ab_arch.Endkunde;
            tab_vkk1_arch.RESET;
            tab_vkk1_arch.SETFILTER(tab_vkk1_arch."No.",'%1',AE_mtl.AU_Nr);
            IF tab_vkk1_arch.FINDLAST THEN BEGIN
              AE_mtl.Debitor:=tab_vkk1_arch."Sell-to Customer Name";
              AE_mtl.W„hrungscode:=tab_vkk1_arch."Currency Code";
              AE_mtl.w„_faktor:=tab_vkk1_arch."Currency Factor";
              AE_mtl.Auftragsdatum:=tab_vkk1_arch."Order Date";
              AE_mtl.Betreuer:=tab_vkk1_arch."Betreuer Innendienst";
              AE_mtl.Vertreter:=tab_vkk1_arch."Salesperson Code";
              AE_mtl.Teams:=tab_vkk1_arch.Teams;
              AE_mtl.Gebietscode:=tab_vkk1_arch."Territory Code";
              AE_mtl.PLZ:=tab_vkk1_arch."Sell-to Post Code";
            END;
            IF AE_mtl.w„_faktor=0 THEN BEGIN
              AE_mtl."Betrag in EUR":=AE_mtl."VK Gesamt";
            END ELSE BEGIN
              AE_mtl."Betrag in EUR":=(AE_mtl."VK Gesamt"/AE_mtl.w„_faktor);
            END;
            AE_mtl.INSERT;
          UNTIL tab_ab_arch.NEXT = 0;
        END;
      END;
      //  ENDE Einfgen von archiviertem AU

      "Linien umsetzen";
    END;

    PROCEDURE "Konto Salden holen"@1140026();
    BEGIN
      // berprft UB Stand 26.11.2018
      // ANFANG Kontensalden in Excel ausgeben
      IF kto_datum = 010199D THEN BEGIN
        kto_datum:=WORKDATE;
      END ELSE BEGIN
      END;
      sum_kont4021:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4021');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4021:=sum_kont4021+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4022:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4022');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4022:=sum_kont4022+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4023:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4023');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4023:=sum_kont4023+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4025:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4025');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4025:=sum_kont4025+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4118:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4118');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4118:=sum_kont4118+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4120:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4120');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4120:=sum_kont4120+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4122:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4122');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4122:=sum_kont4122+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4221:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4221');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4221:=sum_kont4221+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4222:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4222');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4222:=sum_kont4222+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4223:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4223');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4223:=sum_kont4223+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4225:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4225');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4225:=sum_kont4225+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4317:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4317');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4317:=sum_kont4317+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4338:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4338');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4338:=sum_kont4338+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4407:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4407');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4407:=sum_kont4407+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4408:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4408');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4408:=sum_kont4408+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4412:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4412');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4412:=sum_kont4412+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4416:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4416');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4416:=sum_kont4416+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4418:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4418');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4418:=sum_kont4418+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4421:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4421');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4421:=sum_kont4421+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4422:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4422');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4422:=sum_kont4422+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4423:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4423');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4423:=sum_kont4423+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4424:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4424');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4424:=sum_kont4424+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4425:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4425');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4425:=sum_kont4425+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      sum_kont4690:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'<=%1',kto_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4690');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4690:=sum_kont4690+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,3,'4021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'4022','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'4023','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'4025','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(RowNo,7,'4118','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'4120','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'4122','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'4221','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'4222','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'4223','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'4225','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(RowNo,14,'4317','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'4338','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'4407','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'4408','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'4412','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'4416','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'4418','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'4421','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'4422','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'4423','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'4424','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,25,'4425','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,26,'4690','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,3,FORMAT(sum_kont4021*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(sum_kont4022*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(sum_kont4023*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(sum_kont4025*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(sum_kont4118*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(sum_kont4120*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(sum_kont4122*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(sum_kont4221*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(sum_kont4222*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(sum_kont4223*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(sum_kont4225*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(sum_kont4317*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(sum_kont4338*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(sum_kont4407*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(sum_kont4408*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(sum_kont4412*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(sum_kont4416*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(sum_kont4418*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(sum_kont4421*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(sum_kont4422*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,23,FORMAT(sum_kont4423*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,24,FORMAT(sum_kont4424*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,25,FORMAT(sum_kont4425*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,26,FORMAT(sum_kont4690*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      sum_kont4021 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4021');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4021 := sum_kont4021 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4022 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4022');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4022 := sum_kont4022 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4023 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4023');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4023 := sum_kont4023 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4025 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4025');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4025 := sum_kont4025 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4118 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4118');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4118 := sum_kont4118 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4120 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4120');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4120 := sum_kont4120 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4122 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4122');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4122 := sum_kont4122 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4221 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4221');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4221 := sum_kont4221 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4222 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4222');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4222 := sum_kont4222 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4223 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4223');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4223 := sum_kont4223 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4225 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4225');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4225 := sum_kont4225 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4317 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4317');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4317 := sum_kont4317 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4338 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4338');
      IF sachposten.FIND('-') THEN BEGIN
      REPEAT
        sum_kont4338 := sum_kont4338 + sachposten.Amount;
      UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4407 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4407');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
         sum_kont4407 := sum_kont4407 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4408 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4408');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4408 := sum_kont4408 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4412 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4412');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4412 := sum_kont4412 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4416 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4416');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4416 := sum_kont4416 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4418 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4418');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4418 := sum_kont4418 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4421 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4421');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4421 := sum_kont4421 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4422 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4422');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4422 := sum_kont4422 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4423 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4423');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4423 := sum_kont4423 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4424 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4424');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4424 := sum_kont4424 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4425 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4425');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4425 := sum_kont4425 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;

      sum_kont4690 := 0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4690');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          sum_kont4690 := sum_kont4690 + sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      RowNo := 4;
      EnterCell(RowNo,1,'Tagessaldo','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(sum_kont4021*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(sum_kont4022*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(sum_kont4023*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(sum_kont4025*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(sum_kont4118*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(sum_kont4120*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(sum_kont4122*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(sum_kont4221*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(sum_kont4222*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(sum_kont4223*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(sum_kont4225*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(sum_kont4317*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(sum_kont4338*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(sum_kont4407*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(sum_kont4408*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(sum_kont4412*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(sum_kont4416*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(sum_kont4418*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(sum_kont4421*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(sum_kont4422*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,23,FORMAT(sum_kont4423*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,24,FORMAT(sum_kont4424*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,25,FORMAT(sum_kont4425*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,26,FORMAT(sum_kont4690*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('Kontensaldo_Abstimmung','Kontensaldo_Abstimmung','F:\Daten Neu\User\Uwe\Navision_2016');
      MESSAGE('%1 Erfolgreich gespeichert.','F:\Daten Neu\User\Uwe\Navision_2016\Kontensaldo_Abstimmung');
    END;

    LOCAL PROCEDURE "Konto Salden holen Gesamt"@1000000028();
    BEGIN
      {
      // berprft UB Stand 26.11.2018
      // ANFANG Kontensalden in Excel ausgeben
      IF kto_datum = 010199D THEN BEGIN
        kto_datum:=WORKDATE;
      END ELSE BEGIN
      END;
      }


      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Tagessaldo','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'4021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'4022','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'4023','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'4025','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'4118','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'4120','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'4122','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'4221','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'4222','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'4223','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'4225','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'4317','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'4338','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'4407','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'4408','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'4412','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'4416','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'4418','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'4421','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'4422','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'4423','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'4424','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,25,'4425','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,26,'4690','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,27,'Gesamt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      tab_kurse.RESET;
      tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1','USD');
      tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1..%2',saldo_heute_datum,WORKDATE);
      IF tab_kurse.FIND('-') THEN BEGIN
        REPEAT
          saldo_heute_datum:=tab_kurse."Starting Date";
          sum_kontgesamt := 0;
          sum_kont4021 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4021');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4021 := sum_kont4021 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4022 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4022');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4022 := sum_kont4022 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4023 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4023');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4023 := sum_kont4023 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4025 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4025');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4025 := sum_kont4025 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4118 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4118');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4118 := sum_kont4118 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4120 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4120');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4120 := sum_kont4120 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4122 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4122');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4122 := sum_kont4122 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4221 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4221');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4221 := sum_kont4221 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4222 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4222');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4222 := sum_kont4222 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4223 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4223');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4223 := sum_kont4223 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4225 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4225');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4225 := sum_kont4225 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4317 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4317');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4317 := sum_kont4317 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4338 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4338');
          IF sachposten.FIND('-') THEN BEGIN
          REPEAT
            sum_kont4338 := sum_kont4338 + sachposten.Amount;
            sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
          UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4407 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4407');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
             sum_kont4407 := sum_kont4407 + sachposten.Amount;
             sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4408 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4408');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4408 := sum_kont4408 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4412 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4412');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4412 := sum_kont4412 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4416 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4416');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4416 := sum_kont4416 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4418 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4418');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4418 := sum_kont4418 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4421 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4421');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4421 := sum_kont4421 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4422 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4422');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4422 := sum_kont4422 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4423 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4423');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4423 := sum_kont4423 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4424 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4424');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4424 := sum_kont4424 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4425 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4425');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4425 := sum_kont4425 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;

          sum_kont4690 := 0;
          sachposten.RESET;
          sachposten.SETFILTER(sachposten."Posting Date",'%1',saldo_heute_datum);
          sachposten.SETFILTER(sachposten."G/L Account No.",'%1','4690');
          IF sachposten.FIND('-') THEN BEGIN
            REPEAT
              sum_kont4690 := sum_kont4690 + sachposten.Amount;
              sum_kontgesamt := sum_kontgesamt + sachposten.Amount;
            UNTIL sachposten.NEXT = 0;
          END;



          RowNo := RowNo +1;
          EnterCell(RowNo,2,FORMAT(sachposten."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,3,FORMAT(sum_kont4021*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,4,FORMAT(sum_kont4022*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,5,FORMAT(sum_kont4023*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,6,FORMAT(sum_kont4025*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,7,FORMAT(sum_kont4118*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(sum_kont4120*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,9,FORMAT(sum_kont4122*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,10,FORMAT(sum_kont4221*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,11,FORMAT(sum_kont4222*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,12,FORMAT(sum_kont4223*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,13,FORMAT(sum_kont4225*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,14,FORMAT(sum_kont4317*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,15,FORMAT(sum_kont4338*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,16,FORMAT(sum_kont4407*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,17,FORMAT(sum_kont4408*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,18,FORMAT(sum_kont4412*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,19,FORMAT(sum_kont4416*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,20,FORMAT(sum_kont4418*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,21,FORMAT(sum_kont4421*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,22,FORMAT(sum_kont4422*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,23,FORMAT(sum_kont4423*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,24,FORMAT(sum_kont4424*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,25,FORMAT(sum_kont4425*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,26,FORMAT(sum_kont4690*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,27,FORMAT(sum_kontgesamt*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

        UNTIL tab_kurse.NEXT=0;
      END;


      CloseExcel('Kontensaldo_Abstimmung Gesa','Kontensaldo_Abstimmung Gesa','F:\Daten Neu\User\Uwe\Navision_2016');
      MESSAGE('%1 Erfolgreich gespeichert.','F:\Daten Neu\User\Uwe\Navision_2016\Kontensaldo_Abstimmung Gesa');
    END;

    PROCEDURE "AE Salden t„gl gesamt"@1140044();
    BEGIN
      // berprft UB Stand 26.11.2018
      // ANFANG tgl. AE als Gesamtsumme in Excel ausgeben ab einem bestimmten Datum

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Auftragseingang aus Tabelle 50017 Auftragseingang mtl.  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Betrag in EUR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;

      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');;
      AE_mtl.SETFILTER(AE_mtl.Datum,'>%1',300921D);   // hier Datum, ab dem gesucht werden soll, „ndern
      IF AE_mtl.FIND('-') THEN BEGIN
        AE_t„gl_datum := AE_mtl.Datum;
        REPEAT
          IF AE_t„gl_datum = AE_mtl.Datum THEN BEGIN
           AE_t„gl_gesamt := AE_t„gl_gesamt + AE_mtl."Betrag in EUR";
          END ELSE BEGIN
            EnterCell(RowNo,1,FORMAT(AE_t„gl_datum),'',FALSE,FALSE,FALSE,'dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,FORMAT(AE_t„gl_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            AE_t„gl_gesamt := 0;
            AE_t„gl_gesamt := AE_t„gl_gesamt + AE_mtl."Betrag in EUR";
            RowNo := RowNo +1;
          END;
        AE_t„gl_datum := AE_mtl.Datum;
        UNTIL AE_mtl.NEXT = 0;
      END;


      RowNo := RowNo +5;



      EnterCell(RowNo,1,'Auftragseingang monatlich gesamt aus Tabelle 50017 Auftragseingang mtl.  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo +1;
      EnterCell(RowNo,1,'Monat','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Betrag in EUR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo +1;



      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');;
      AE_mtl.SETFILTER(AE_mtl.Datum,'>%1',300621D);
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          v_Tag:= DATE2DMY(AE_mtl.Datum, 1);
          v_Monat:= DATE2DMY(AE_mtl.Datum, 2);
          v_Jahr:= DATE2DMY(AE_mtl.Datum, 3);
          IF ((v_Jahr=2021) AND (v_Monat=7)) THEN v_m07_gesamt:=v_m07_gesamt+AE_mtl."Betrag in EUR";
          IF ((v_Jahr=2021) AND (v_Monat=8)) THEN v_m08_gesamt:=v_m08_gesamt+AE_mtl."Betrag in EUR";
          IF ((v_Jahr=2021) AND (v_Monat=9)) THEN v_m09_gesamt:=v_m09_gesamt+AE_mtl."Betrag in EUR";
          IF ((v_Jahr=2021) AND (v_Monat=10)) THEN v_m10_gesamt:=v_m10_gesamt+AE_mtl."Betrag in EUR";
          IF ((v_Jahr=2021) AND (v_Monat=11)) THEN v_m11_gesamt:=v_m11_gesamt+AE_mtl."Betrag in EUR";
          IF ((v_Jahr=2021) AND (v_Monat=12)) THEN v_m12_gesamt:=v_m12_gesamt+AE_mtl."Betrag in EUR";
          IF ((v_Jahr=2022) AND (v_Monat=1)) THEN v_m01_gesamt:=v_m01_gesamt+AE_mtl."Betrag in EUR";
          IF ((v_Jahr=2022) AND (v_Monat=2)) THEN v_m02_gesamt:=v_m02_gesamt+AE_mtl."Betrag in EUR";
          IF ((v_Jahr=2022) AND (v_Monat=3)) THEN v_m03_gesamt:=v_m03_gesamt+AE_mtl."Betrag in EUR";
          IF ((v_Jahr=2022) AND (v_Monat=4)) THEN v_m04_gesamt:=v_m04_gesamt+AE_mtl."Betrag in EUR";
          IF ((v_Jahr=2022) AND (v_Monat=5)) THEN v_m05_gesamt:=v_m05_gesamt+AE_mtl."Betrag in EUR";
          IF ((v_Jahr=2022) AND (v_Monat=6)) THEN v_m06_gesamt:=v_m06_gesamt+AE_mtl."Betrag in EUR";
          v_AE_gesamt:=v_AE_gesamt+AE_mtl."Betrag in EUR";
        UNTIL AE_mtl.NEXT = 0;
      END;

      IF v_m07_gesamt<>0 THEN BEGIN
        EnterCell(RowNo,1,'Juni 2021','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_m07_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        RowNo := RowNo +1;
      END;

      IF v_m08_gesamt<>0 THEN BEGIN
        EnterCell(RowNo,1,'August 2021','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_m08_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        RowNo := RowNo +1;
      END;

      IF v_m09_gesamt<>0 THEN BEGIN
        EnterCell(RowNo,1,'September 2021','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_m09_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        RowNo := RowNo +1;
      END;

      IF v_m10_gesamt<>0 THEN BEGIN
        EnterCell(RowNo,1,'Oktober 2021','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_m10_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        RowNo := RowNo +1;
      END;

      IF v_m11_gesamt<>0 THEN BEGIN
        EnterCell(RowNo,1,'November 2021','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_m11_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        RowNo := RowNo +1;
      END;

      IF v_m12_gesamt<>0 THEN BEGIN
        EnterCell(RowNo,1,'Dezember 2021','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_m12_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        RowNo := RowNo +1;
      END;

      IF v_m01_gesamt<>0 THEN BEGIN
        EnterCell(RowNo,1,'Januar 2022','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_m01_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        RowNo := RowNo +1;
      END;

      IF v_m02_gesamt<>0 THEN BEGIN
        EnterCell(RowNo,1,'Februar 2022','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_m02_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        RowNo := RowNo +1;
      END;

      IF v_m03_gesamt<>0 THEN BEGIN
        EnterCell(RowNo,1,'M„rz 2022','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_m03_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        RowNo := RowNo +1;
      END;

      IF v_m04_gesamt<>0 THEN BEGIN
        EnterCell(RowNo,1,'April 2022','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_m04_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        RowNo := RowNo +1;
      END;

      IF v_m05_gesamt<>0 THEN BEGIN
        EnterCell(RowNo,1,'Mai 2022','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_m05_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        RowNo := RowNo +1;
      END;

      IF v_m06_gesamt<>0 THEN BEGIN
        EnterCell(RowNo,1,'Juli 2022','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_m06_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        RowNo := RowNo +1;
      END;


      IF v_AE_gesamt<>0 THEN BEGIN
        RowNo := RowNo +1;
        EnterCell(RowNo,1,'Gesamt GJ 2021/2022','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(v_AE_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      END;
      CloseExcel('tgl_AE_Salden','tgl_AE_Salden','');
    END;

    PROCEDURE AE_Vertrieb1@1140047();
    BEGIN
      // berprft UB Stand 26.11.2018
      IF Filename = '' THEN
        ERROR(Text100);

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,Text001,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,Text020,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,Text021,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,Text022,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,Text023,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,Text024,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,Text025,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,Text026,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,Text027,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,Text028,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,Text029,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,Text030,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,Text031,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,Text032,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,Text033,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,Text034,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,Text035,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,Text036,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,Text037,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,Text038,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,Text039,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,Text040,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;

      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1|%2','ESK','NM');
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,FORMAT(AE_mtl.Datum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,2,AE_mtl.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,AE_mtl.Deb_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,AE_mtl.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(AE_mtl.Menge),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,6,AE_mtl.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,AE_mtl.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(AE_mtl.EK),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,9,FORMAT(AE_mtl.VK),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,10,AE_mtl.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(AE_mtl.w„_faktor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,12,FORMAT(AE_mtl."Betrag in EUR"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,13,FORMAT(AE_mtl."DB %"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,14,AE_mtl.Betreuer,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,15,AE_mtl.Vertreter,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,16,AE_mtl.Linie,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,17,FORMAT(AE_mtl."EK Gesamt"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,18,AE_mtl.PLZ,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,19,AE_mtl.Endkunde,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,20,AE_mtl.Teams,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,21,AE_mtl.Gebietscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo + 1;
        UNTIL AE_mtl.NEXT = 0;
      END;

      tab_vkk.RESET;
      tab_vkk.SETFILTER(tab_vkk."Order Date",'%1',AE_holen_Datum);
      //tab_vkk.SETFILTER(tab_vkk."Order Date",'%1',21022020d);
      tab_vkk.SETFILTER(tab_vkk."Document Type",'%1',tab_vkk."Document Type"::Order);
      tab_vkk.SETFILTER(tab_vkk."Betreuer Innendienst",'%1|%2','ESK','NM');
      IF tab_vkk.FIND('-') THEN BEGIN
        REPEAT
          tab_ab.RESET;
          tab_ab.SETFILTER(tab_ab."Document No.",'%1',tab_vkk."No.");
          tab_ab.SETFILTER(tab_ab.Type,'%1',tab_ab.Type::Item);
          tab_ab.SETFILTER(tab_ab."Outstanding Quantity",'>%1',0);
          tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          IF tab_ab.FIND('-') THEN BEGIN
            REPEAT
              EnterCell(RowNo,1,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,tab_vkk."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,tab_vkk."Sell-to Customer No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,tab_vkk."Sell-to Customer Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,tab_ab."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,tab_ab."Location Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(tab_ab."Unit Cost (LCY)"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT(tab_ab."Unit Price"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,10,tab_vkk."Currency Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(tab_ab."Outstanding Amount (LCY)"/(100+tab_ab."VAT %")*100),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(tab_ab."Profit %"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,14,tab_vkk."Betreuer Innendienst",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,15,tab_vkk."Salesperson Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               Artikel.RESET;
              Artikel.SETFILTER(Artikel."No.",'%1',tab_ab."No.");
              IF Artikel.FINDFIRST THEN BEGIN
                EnterCell(RowNo,16,Artikel.Herstellerkurzname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,17,FORMAT(tab_ab."Outstanding Quantity"*tab_ab."Unit Cost (LCY)"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,18,tab_vkk."Sell-to Post Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,19,tab_ab.Endkunde,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,20,tab_vkk.Teams,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,21,tab_vkk."Territory Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              RowNo := RowNo + 1;
            UNTIL tab_ab.NEXT = 0;
          END;
        UNTIL tab_vkk.NEXT = 0;
      END;
      CloseExcel(Filename,Filename,'F:\Daten Neu\User\Nadine');
      MESSAGE('%1 Erfolgreich gespeichert.','F:\Daten Neu\User\Nadine\' + Filename);
      AE_Vertrieb2;
    END;

    PROCEDURE AE_Vertrieb2@1140048();
    BEGIN
      // berprft UB Stand 26.11.2018
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,Text001,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,Text020,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,Text021,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,Text022,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,Text023,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,Text024,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,Text025,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,Text026,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,Text027,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,Text028,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,Text029,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,Text030,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,Text031,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,Text032,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,Text033,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,Text034,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,Text035,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,Text036,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,Text037,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,Text038,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,Text039,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,Text040,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1|%2','RL','CB');
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,FORMAT(AE_mtl.Datum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,2,AE_mtl.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,AE_mtl.Deb_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,AE_mtl.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(AE_mtl.Menge),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,6,AE_mtl.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,AE_mtl.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(AE_mtl.EK),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,9,FORMAT(AE_mtl.VK),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,10,AE_mtl.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(AE_mtl.w„_faktor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,12,FORMAT(AE_mtl."Betrag in EUR"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,13,FORMAT(AE_mtl."DB %"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,14,AE_mtl.Betreuer,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,15,AE_mtl.Vertreter,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,16,AE_mtl.Linie,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,17,FORMAT(AE_mtl."EK Gesamt"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,18,AE_mtl.PLZ,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,19,AE_mtl.Endkunde,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,20,AE_mtl.Teams,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,21,AE_mtl.Gebietscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo + 1;
        UNTIL AE_mtl.NEXT = 0;
      END;

      tab_vkk.RESET;
      tab_vkk.SETFILTER(tab_vkk."Order Date",'%1',AE_holen_Datum);
      //tab_vkk.SETFILTER(tab_vkk."Order Date",'%1',21022020d);
      tab_vkk.SETFILTER(tab_vkk."Document Type",'%1',tab_vkk."Document Type"::Order);
      tab_vkk.SETFILTER(tab_vkk."Betreuer Innendienst",'%1|%2','RL','CB');
      IF tab_vkk.FIND('-') THEN BEGIN
        REPEAT
          tab_ab.RESET;
          tab_ab.SETFILTER(tab_ab."Document No.",'%1',tab_vkk."No.");
          tab_ab.SETFILTER(tab_ab.Type,'%1',tab_ab.Type::Item);
          tab_ab.SETFILTER(tab_ab."Outstanding Quantity",'>%1',0);
          tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          IF tab_ab.FIND('-') THEN BEGIN
            REPEAT
              EnterCell(RowNo,1,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,tab_vkk."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,tab_vkk."Sell-to Customer No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,tab_vkk."Sell-to Customer Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,tab_ab."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,tab_ab."Location Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(tab_ab."Unit Cost (LCY)"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT(tab_ab."Unit Price"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,10,tab_vkk."Currency Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(tab_ab."Outstanding Amount (LCY)"/(100+tab_ab."VAT %")*100),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(tab_ab."Profit %"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,14,tab_vkk."Betreuer Innendienst",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,15,tab_vkk."Salesperson Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               Artikel.RESET;
              Artikel.SETFILTER(Artikel."No.",'%1',tab_ab."No.");
              IF Artikel.FINDFIRST THEN BEGIN
                EnterCell(RowNo,16,Artikel.Herstellerkurzname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,17,FORMAT(tab_ab."Outstanding Quantity"*tab_ab."Unit Cost (LCY)"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,18,tab_vkk."Sell-to Post Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,19,tab_ab.Endkunde,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,20,tab_vkk.Teams,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,21,tab_vkk."Territory Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              RowNo := RowNo + 1;
            UNTIL tab_ab.NEXT = 0;
          END;
        UNTIL tab_vkk.NEXT = 0;
      END;

      CloseExcel(Filename,Filename,'F:\Daten Neu\User\Renate');
      MESSAGE('%1 Erfolgreich gespeichert.','F:\Daten Neu\User\Renate' + Filename);
      AE_Vertrieb3;
    END;

    PROCEDURE AE_Vertrieb3@1140059();
    BEGIN
      // berprft UB Stand 26.11.2018
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,Text001,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,Text020,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,Text021,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,Text022,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,Text023,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,Text024,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,Text025,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,Text026,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,Text027,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,Text028,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,Text029,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,Text030,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,Text031,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,Text032,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,Text033,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,Text034,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,Text035,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,Text036,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,Text037,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,Text038,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,Text039,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,Text040,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1|%2|%3','HB','LD','JB');
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,FORMAT(AE_mtl.Datum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,2,AE_mtl.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,AE_mtl.Deb_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,AE_mtl.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(AE_mtl.Menge),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,6,AE_mtl.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,AE_mtl.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(AE_mtl.EK),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,9,FORMAT(AE_mtl.VK),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,10,AE_mtl.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(AE_mtl.w„_faktor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,12,FORMAT(AE_mtl."Betrag in EUR"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,13,FORMAT(AE_mtl."DB %"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,14,AE_mtl.Betreuer,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,15,AE_mtl.Vertreter,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,16,AE_mtl.Linie,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,17,FORMAT(AE_mtl."EK Gesamt"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,18,AE_mtl.PLZ,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,19,AE_mtl.Endkunde,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,20,AE_mtl.Teams,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,21,AE_mtl.Gebietscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo + 1;
        UNTIL AE_mtl.NEXT = 0;
      END;

      tab_vkk.RESET;
      tab_vkk.SETFILTER(tab_vkk."Order Date",'%1',AE_holen_Datum);
      //tab_vkk.SETFILTER(tab_vkk."Order Date",'%1',21022020d);
      tab_vkk.SETFILTER(tab_vkk."Document Type",'%1',tab_vkk."Document Type"::Order);
      tab_vkk.SETFILTER(tab_vkk."Betreuer Innendienst",'%1|%2|%3','HB','LD','JB');
      IF tab_vkk.FIND('-') THEN BEGIN
        REPEAT
          tab_ab.RESET;
          tab_ab.SETFILTER(tab_ab."Document No.",'%1',tab_vkk."No.");
          tab_ab.SETFILTER(tab_ab.Type,'%1',tab_ab.Type::Item);
          tab_ab.SETFILTER(tab_ab."Outstanding Quantity",'>%1',0);
          tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          IF tab_ab.FIND('-') THEN BEGIN
            REPEAT
              EnterCell(RowNo,1,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,tab_vkk."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,tab_vkk."Sell-to Customer No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,tab_vkk."Sell-to Customer Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,tab_ab."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,tab_ab."Location Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(tab_ab."Unit Cost (LCY)"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT(tab_ab."Unit Price"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,10,tab_vkk."Currency Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(tab_ab."Outstanding Amount (LCY)"/(100+tab_ab."VAT %")*100),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(tab_ab."Profit %"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,14,tab_vkk."Betreuer Innendienst",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,15,tab_vkk."Salesperson Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              Artikel.RESET;
              Artikel.SETFILTER(Artikel."No.",'%1',tab_ab."No.");
              IF Artikel.FINDFIRST THEN BEGIN
                EnterCell(RowNo,16,Artikel.Herstellerkurzname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,17,FORMAT(tab_ab."Outstanding Quantity"*tab_ab."Unit Cost (LCY)"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,18,tab_vkk."Sell-to Post Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,19,tab_ab.Endkunde,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,20,tab_vkk.Teams,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,21,tab_vkk."Territory Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              RowNo := RowNo + 1;
            UNTIL tab_ab.NEXT = 0;
          END;
        UNTIL tab_vkk.NEXT = 0;
      END;

      CloseExcel(Filename,Filename,'F:\Daten Neu\User\Hendrik\AU Eingang Uwe');
      MESSAGE('%1 Erfolgreich gespeichert.','F:\Daten Neu\User\Hendrik\AU Eingang Uwe\' + Filename);
      AE_Vertrieb4;
    END;

    PROCEDURE AE_Vertrieb4@1140061();
    BEGIN
      // berprft UB Stand 26.11.2018
      IF Filename = '' THEN
        ERROR(Text100);

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,Text001,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,Text020,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,Text021,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,Text022,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,Text023,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,Text024,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,Text025,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,Text026,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,Text027,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,Text028,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,Text029,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,Text030,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,Text031,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,Text032,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,Text033,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,Text034,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,Text035,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,Text036,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,Text037,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,Text038,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,Text039,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,Text040,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;

      AE_mtl.RESET;
      AE_mtl.SETFILTER(Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(Betreuer,'%1|%2|%3|%4','ML','TK','RL','NG');
      AE_mtl.SETFILTER(Gebietscode,'%1','SYSTEM');
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,FORMAT(AE_mtl.Datum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,2,AE_mtl.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,AE_mtl.Deb_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,AE_mtl.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(AE_mtl.Menge),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,6,AE_mtl.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,AE_mtl.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(AE_mtl.EK),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,9,FORMAT(AE_mtl.VK),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,10,AE_mtl.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(AE_mtl.w„_faktor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,12,FORMAT(AE_mtl."Betrag in EUR"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,13,FORMAT(AE_mtl."DB %"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,14,AE_mtl.Betreuer,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,15,AE_mtl.Vertreter,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,16,AE_mtl.Linie,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,17,FORMAT(AE_mtl."EK Gesamt"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,18,AE_mtl.PLZ,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,19,AE_mtl.Endkunde,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,20,AE_mtl.Teams,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,21,AE_mtl.Gebietscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo + 1;
          RecNo := RecNo + 1;
        UNTIL AE_mtl.NEXT = 0;
      END;

      tab_vkk.RESET;
      tab_vkk.SETFILTER("Order Date",'%1',AE_holen_Datum);
      //tab_vkk.SETFILTER(tab_vkk."Order Date",'%1',21022020d);
      tab_vkk.SETFILTER("Document Type",'%1',tab_vkk."Document Type"::Order);
      tab_vkk.SETFILTER("Betreuer Innendienst",'%1|%2|%3|%4','ML','TK','RL','NG');
      tab_vkk.SETFILTER("Territory Code",'%1','SYSTEM');
      IF tab_vkk.FIND('-') THEN BEGIN
        REPEAT
          tab_ab.RESET;
          tab_ab.SETFILTER("Document No.",'%1',tab_vkk."No.");
          tab_ab.SETFILTER(Type,'%1',tab_ab.Type::Item);
          tab_ab.SETFILTER("Outstanding Quantity",'>%1',0);
          tab_ab.SETFILTER("Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          IF tab_ab.FIND('-') THEN BEGIN
            REPEAT
              EnterCell(RowNo,1,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,tab_vkk."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,tab_vkk."Sell-to Customer No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,tab_vkk."Sell-to Customer Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,tab_ab."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,tab_ab."Location Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(tab_ab."Unit Cost (LCY)"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT(tab_ab."Unit Price"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,10,tab_vkk."Currency Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(tab_ab."Outstanding Amount (LCY)"/(100+tab_ab."VAT %")*100),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(tab_ab."Profit %"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,14,tab_vkk."Betreuer Innendienst",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,15,tab_vkk."Salesperson Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               Artikel.RESET;
              Artikel.SETFILTER(Artikel."No.",'%1',tab_ab."No.");
              IF Artikel.FINDFIRST THEN BEGIN
                EnterCell(RowNo,16,Artikel.Herstellerkurzname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,17,FORMAT(tab_ab."Outstanding Quantity"*tab_ab."Unit Cost (LCY)"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,18,tab_vkk."Sell-to Post Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,19,tab_ab.Endkunde,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,20,tab_vkk.Teams,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,21,tab_vkk."Territory Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              RowNo := RowNo + 1;
              RecNo := RecNo + 1;
            UNTIL tab_ab.NEXT = 0;
          END;
        UNTIL tab_vkk.NEXT = 0;
      END;
      CloseExcel(Filename,Filename,'F:\Daten Neu\User\Maria\AUFTRAGSEINGANG');
      MESSAGE('%1 Erfolgreich gespeichert.','F:\Daten Neu\User\Maria\AUFTRAGSEINGANG\' + Filename);
    END;

    PROCEDURE Debitor_šberprfung@1140053();
    BEGIN

      {
      // ANFANG Debitorberprfung
      IF ISCLEAR(Excel) THEN
        CREATE(Excel,FALSE,TRUE);                                  //erzeugt excel
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('A1').Value := 'Debitorberprfung'; // definiert die Beschriftung der berschriftszeile
      Sheet.Range('C1').Value := WORKDATE;
      j := '3';

      deb.RESET;
      deb.SETFILTER(deb."VAT Bus. Posting Group",'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'MWSt-Gesch„ftsbuchungsgruppe ist leer';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;


      deb.RESET;
      deb.SETFILTER(deb."Payment Terms Code",'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value :='Zahlungsbedingungscode ist leer';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;


      deb.RESET;
      deb.SETFILTER(deb."Salesperson Code",'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value :='Verk„ufercode ist leer';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
      j := INCSTR(j);
      END;


      deb.RESET;
      deb.SETFILTER(deb."Customer Posting Group",'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Debitorenbuchungsgruppe ist leer';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          j:= INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Shipping Agent Code",'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Zustellercode ist leer';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");;
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Shipping Agent Code",'%1','*-RG4');
      deb.SETFILTER(deb."Rech via EMail",'%1',FALSE);
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Zustellercode ist xxx-RG4 und kein H„kchen "Rech via Email" gesetzt!';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          Sheet.Range('D'+j).Value := deb."Betreuer Innendienst";
          Sheet.Range('E'+j).Value := deb."Shipping Agent Code";
          IF deb."Rech via EMail" = FALSE THEN Sheet.Range('F'+j).Value := 'Kein H„kchen Rech via Email gesetzt!';
          IF deb."Original RE nicht drucken" = FALSE THEN Sheet.Range('G'+j).Value := 'Kein H„kchen "Original-RE nicht drucken" gesetzt!';
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Shipping Agent Code",'%1','*-RG4');
      deb.SETFILTER(deb."Original RE nicht drucken",'%1',FALSE);
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Zustellercode ist xxx-RG4 und kein H„kchen "Original-RE nicht drucken" gesetzt!';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          Sheet.Range('D'+j).Value := deb."Betreuer Innendienst";
          Sheet.Range('E'+j).Value := deb."Shipping Agent Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Shipping Agent Code",'%1','*-RG4');
      IF deb.FINDFIRST THEN BEGIN
        REPEAT
          Lief_adr.RESET;
          Lief_adr.SETFILTER(Lief_adr."Customer No.",'%1',deb."No.");
          Lief_adr.SETFILTER(Lief_adr."Shipping Agent Code",'<>%1&<>%2&<>%3&<>%4&<>%5&<>%6&<>%7','UPS-RG4','DHL-RG4','ABH-RG4','FEDEX-RG4','TNT-RG4','EIGEN-RG4','DIREKT-RG4');
          IF Lief_adr.FINDFIRST THEN BEGIN
            IF (deb."No." = '100101') AND (Lief_adr."Shipping Agent Code" = 'POST') THEN BEGIN
            END ELSE BEGIN
              IF (deb."No." = '738480') AND (Lief_adr."Shipping Agent Code" = 'EMAIL') THEN BEGIN
              END ELSE BEGIN
                Sheet.Range('A'+j).Value := 'Zustellercode ist xxx-RG4 aber nicht in der Lieferadresse';
                j := INCSTR(j);
                REPEAT
                  Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
                  Sheet.Range('B'+j).Value := deb.Name;
                  Sheet.Range('C'+j).Value := deb."Salesperson Code";
                  Sheet.Range('D'+j).Value := deb."Betreuer Innendienst";
                  Sheet.Range('E'+j).Value := deb."Shipping Agent Code";
                  Sheet.Range('F'+j).Value := Lief_adr."Shipping Agent Code";
                  Sheet.Range('G'+j).Value := Lief_adr."Customer No.";
                  Sheet.Range('H'+j).Value := Lief_adr.Code;
                  j := INCSTR(j);
                UNTIL Lief_adr.NEXT = 0;
                j := INCSTR(j);
              END;
            END;
          END;
        UNTIL deb.NEXT = 0;
      j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Country/Region Code",'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'L„ndercode ist leer';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Location Code",'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Lagerortcode ist leer';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Gesch„ftsbuchungsgruppe ist leer';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Territory Code",'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Gebietscode ist leer';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Shipment Method Code",'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Lieferbedingungscode ist leer';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Betreuer Innendienst",'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Betreuer Innendienst ist leer';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Reminder Terms Code",'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Mahnmethode ist leer';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Country/Region Code",'%1','DE');
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'%1','EU');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'L„ndercode DE und Gesch„ftsbuchungsgruppe EU stimmen nicht berein';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          Sheet.Range('D'+j).Value := deb."Gen. Bus. Posting Group";
          Sheet.Range('E'+j).Value := deb."Country/Region Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'%1','EU');
      deb.SETFILTER(deb."Country/Region Code",'%1|%2|%3|%4|%5|%6|%7|%8|%9','AT','BE','BG','CY','CZ','DK','EE','ES','FI');
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'<>%1','EU');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'L„ndercode XX und Gesch„ftsbuchungsgruppe EU stimmen nicht berein';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          Sheet.Range('D'+j).Value := deb."Gen. Bus. Posting Group";
          Sheet.Range('E'+j).Value := deb."Country/Region Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'%1','EU');
      deb.SETFILTER(deb."Country/Region Code",'%1|%2|%3|%4|%5|%6|%7|%8|%9','FR','GB','GR','HU','IE','IT','LT','LU','LV');
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'<>%1','EU');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'L„ndercode XX und Gesch„ftsbuchungsgruppe EU stimmen nicht berein';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          Sheet.Range('D'+j).Value := deb."Gen. Bus. Posting Group";
          Sheet.Range('E'+j).Value := deb."Country/Region Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'%1','EU');
      deb.SETFILTER(deb."Country/Region Code",'%1|%2|%3|%4|%5|%6|%7|%8','MT','NL','PL','PT','RO','SE','SI','SK');
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'<>%1','EU');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'L„ndercode XX und Gesch„ftsbuchungsgruppe EU stimmen nicht berein';
        j := INCSTR(j);
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          Sheet.Range('D'+j).Value := deb."Gen. Bus. Posting Group";
          Sheet.Range('E'+j).Value := deb."Country/Region Code";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb.Warenkreditversicherung,'%1','GEMELDET');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Kreditlimiteintr„ge stimmen bei "GEMELDET" nicht berein';
        j := INCSTR(j);
        REPEAT
          OK := TRUE;
          IF ((deb."WKV-Info"='nur 12K') AND (deb."Credit Limit (LCY)"<>12000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='12K') AND (deb."Credit Limit (LCY)"<>12000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='15K') AND (deb."Credit Limit (LCY)"<>15000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='20K') AND (deb."Credit Limit (LCY)"<>20000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='25K') AND (deb."Credit Limit (LCY)"<>25000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='30K') AND (deb."Credit Limit (LCY)"<>30000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='35K') AND (deb."Credit Limit (LCY)"<>35000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='40K') AND (deb."Credit Limit (LCY)"<>40000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='45K') AND (deb."Credit Limit (LCY)"<>45000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='50K') AND (deb."Credit Limit (LCY)"<>50000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='50K unver„ndert') AND (deb."Credit Limit (LCY)"<>50000)) THEN OK := FALSE;
          IF ((deb."WKV-Info"='60K') AND (deb."Credit Limit (LCY)"<>60000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='70K') AND (deb."Credit Limit (LCY)"<>70000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='75K') AND (deb."Credit Limit (LCY)"<>75000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='80K') AND (deb."Credit Limit (LCY)"<>80000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='90K') AND (deb."Credit Limit (LCY)"<>90000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='100K') AND (deb."Credit Limit (LCY)"<>100000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='113K') AND (deb."Credit Limit (LCY)"<>113000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='125K') AND (deb."Credit Limit (LCY)"<>125000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='150K') AND (deb."Credit Limit (LCY)"<>150000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='180K') AND (deb."Credit Limit (LCY)"<>180000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='188K') AND (deb."Credit Limit (LCY)"<>188000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='200K') AND (deb."Credit Limit (LCY)"<>200000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='250K') AND (deb."Credit Limit (LCY)"<>250000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='300K') AND (deb."Credit Limit (LCY)"<>300000)) THEN OK:=FALSE;
          IF OK = FALSE THEN BEGIN
            deb.CALCFIELDS(deb."Balance (LCY)");
            Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
            Sheet.Range('B'+j).Value := deb.Name;
            Sheet.Range('C'+j).Value := deb."Salesperson Code";
            Sheet.Range('D'+j).Value := deb.Warenkreditversicherung;
            Sheet.Range('E'+j).Value := deb."Credit Limit (LCY)";
            Sheet.Range('F'+j).Value := deb."WKV-Info";
            Sheet.Range('G'+j).Value := deb."Balance (LCY)";
            j := INCSTR(j);
          END;
          IF ((deb."WKV-Info"='nur 12K') AND (deb."Credit Limit (LCY)"=12000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='12K') AND (deb."Credit Limit (LCY)"=12000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='15K') AND (deb."Credit Limit (LCY)"=15000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='20K') AND (deb."Credit Limit (LCY)"=20000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='25K') AND (deb."Credit Limit (LCY)"=25000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='30K') AND (deb."Credit Limit (LCY)"=30000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='35K') AND (deb."Credit Limit (LCY)"=35000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='40K') AND (deb."Credit Limit (LCY)"=40000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='45K') AND (deb."Credit Limit (LCY)"=45000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='50K') AND (deb."Credit Limit (LCY)"=50000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='50K unver„ndert') AND (deb."Credit Limit (LCY)"=50000)) THEN OK := FALSE;
          IF ((deb."WKV-Info"='60K') AND (deb."Credit Limit (LCY)"=60000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='70K') AND (deb."Credit Limit (LCY)"=70000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='75K') AND (deb."Credit Limit (LCY)"=75000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='80K') AND (deb."Credit Limit (LCY)"=80000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='90K') AND (deb."Credit Limit (LCY)"=90000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='100K') AND (deb."Credit Limit (LCY)"=100000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='113K') AND (deb."Credit Limit (LCY)"=113000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='125K') AND (deb."Credit Limit (LCY)"=125000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='150K') AND (deb."Credit Limit (LCY)"=150000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='180K') AND (deb."Credit Limit (LCY)"=180000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='188K') AND (deb."Credit Limit (LCY)"=188000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='200K') AND (deb."Credit Limit (LCY)"=200000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='250K') AND (deb."Credit Limit (LCY)"=250000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='300K') AND (deb."Credit Limit (LCY)"=300000)) THEN OK:=FALSE;

          IF OK=TRUE THEN BEGIN
           IF deb."WKV-Info"<>'' THEN BEGIN
                Sheet.Range('A'+j).Value := 'Programmabfrage einfgen mit';
                Sheet.Range('F'+j).Value := deb."WKV-Info";
               j := INCSTR(j);
             END;
          END;
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."Credit Limit (LCY)",'>%1', 11000);
      deb.SETFILTER(deb.Warenkreditversicherung,'%1','');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Kreditlimiteintr„ge ber 11.000 ohne GEMELDET oder UNVERSICHERT';
        j := INCSTR(j);
        REPEAT
          deb.CALCFIELDS(deb."Balance (LCY)");
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          Sheet.Range('D'+j).Value := deb.Warenkreditversicherung;
          Sheet.Range('E'+j).Value := deb."Credit Limit (LCY)";
          Sheet.Range('F'+j).Value := deb."WKV-Info";
          Sheet.Range('G'+j).Value := deb."Balance (LCY)";
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      deb.RESET;
      deb.SETFILTER(deb."No.",'<>%1','0');
      IF deb.FINDFIRST THEN BEGIN
        Sheet.Range('A'+j).Value := 'Saldo gr”áer Kreditlimit';
        j := INCSTR(j);
        REPEAT
          deb.CALCFIELDS(deb."Balance (LCY)");
          IF deb."Balance (LCY)" > deb."Credit Limit (LCY)" THEN BEGIN
            Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
            Sheet.Range('B'+j).Value := deb.Name;
            Sheet.Range('C'+j).Value := deb."Salesperson Code";
            Sheet.Range('D'+j).Value := deb.Warenkreditversicherung;
            Sheet.Range('E'+j).Value := deb."Credit Limit (LCY)";
            Sheet.Range('F'+j).Value := deb."WKV-Info";
            Sheet.Range('G'+j).Value := deb."Balance (LCY)";
            j := INCSTR(j);
          END;
        UNTIL deb.NEXT = 0;
        j := INCSTR(j);
      END;

      j := INCSTR(j);
      Excel.Visible(TRUE);
      }
    END;

    PROCEDURE ID_Prove@1140056();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'No_','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Company Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Name 2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'First Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Surname','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Address','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Address 2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Post Code','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'City','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Nummer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      kontakt.RESET;
      kontakt.SETFILTER(kontakt.Type,'%1',0);
      IF kontakt.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,kontakt."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,kontakt."Company Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,kontakt."Name 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,kontakt."First Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,kontakt.Surname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,kontakt.Address,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,kontakt."Address 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,kontakt."Post Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,kontakt.City,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          v_kontaktnr:=FORMAT(kontakt."No.");
          v_kontaktnr:=COPYSTR(v_kontaktnr,4);
          EnterCell(RowNo,10,v_kontaktnr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL kontakt.NEXT = 0;
      END;
      CloseExcel('adr_nav_neu_text_test1','adr_nav_neu_text_test1','R:\id_prove\Import');

      ID_Prove_2;
    END;

    PROCEDURE ID_Prove_2@1140057();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'No_','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Company Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Name 2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'First Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Surname','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Address','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Address 2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Post Code','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'City','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Nummer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      kontakt.RESET;
      kontakt.SETFILTER(kontakt.Type,'%1',1);
      kontakt.SETFILTER(kontakt."Unternehmen verlassen",'%1',FALSE);
      IF kontakt.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,kontakt."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,kontakt."Company Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,kontakt."Name 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,kontakt."First Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,kontakt.Surname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,kontakt.Address,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,kontakt."Address 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,kontakt."Post Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,kontakt.City,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          v_kontaktnr:=FORMAT(kontakt."No.");
          v_kontaktnr:=COPYSTR(v_kontaktnr,4);
          EnterCell(RowNo,10,v_kontaktnr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL kontakt.NEXT = 0;
      END;
      CloseExcel('adr_nav_name_text_test1','adr_nav_name_text_test1','R:\id_prove\Import');
    END;

    PROCEDURE t„gl_AE_Saldo_abstimmen@1140058();
    BEGIN
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);
      CREATE(Excel,FALSE,TRUE);

      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('H:I').NumberFormat:='###.###,#####';
      Sheet.Range('L:M').NumberFormat:='###.###,##';
      Sheet.Range('Q:Q').NumberFormat:='###.###,####';

      Sheet.Range('A1').Value := 'Auftragsberwachung  '; // definiert die Beschriftung der berschriftszeile

      Sheet.Range('A2').Value := 'Datum';
      Sheet.Range('B2').Value := 'AU-Nr';
      Sheet.Range('C2').Value := 'Pos-Nr';
      Sheet.Range('D2').Value := 'Debitor';
      Sheet.Range('E2').Value := 'Artikel';
      Sheet.Range('F2').Value := 'Menge';
      Sheet.Range('G2').Value := 'Restmenge';
      Sheet.Range('H2').Value := 'EK';
      Sheet.Range('I2').Value := 'VK';
      Sheet.Range('J2').Value := 'Art';
      Sheet.Range('K2').Value := 'Status';
      Sheet.Range('L2').Value := 'Art Diff';
      Sheet.Range('M2').Value := 'Menge Diff';
      Sheet.Range('N2').Value := 'EK Diff';
      Sheet.Range('O2').Value := 'VK Diff';
      Sheet.Range('P2').Value := 'WŽ-Diff';
      Sheet.Range('Q2').Value := 'WŽ';
      Sheet.Range('R2').Value := 'W„ Kurs';
      Sheet.Range('S2').Value := 'RE Menge';
      Sheet.Range('T2').Value := 'urspr AU-Datum';
      j := '3';                                   // <- Import in excel ab Zeile 3

      var_AU_Nr:='AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1|%2|%3|%4|%5|%6|%7', 'NP','ŽN','ST','GP','FA','RE','WŽ');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.AU_Nr=var_AU_Nr THEN BEGIN
            Sheet.Range('A'+j).Value := tab_ab_bw.Datum;
            Sheet.Range('B'+j).Value := tab_ab_bw.AU_Nr;
            Sheet.Range('C'+j).Value := tab_ab_bw.POS_Nr;
            Sheet.Range('D'+j).Value := tab_ab_bw.Debitor;
            Sheet.Range('E'+j).Value := tab_ab_bw.Artikel;
            Sheet.Range('F'+j).Value := tab_ab_bw.Menge;
            Sheet.Range('G'+j).Value := tab_ab_bw.Restmenge;
            Sheet.Range('H'+j).Value := FORMAT(tab_ab_bw.EK);
            Sheet.Range('I'+j).Value := FORMAT(tab_ab_bw.VK);
            Sheet.Range('J'+j).Value := tab_ab_bw.Art;
            Sheet.Range('K'+j).Value := tab_ab_bw.Status;
            Sheet.Range('L'+j).Value := tab_ab_bw.Stat_Artikel;
            Sheet.Range('M'+j).Value := tab_ab_bw.Stat_Menge;
            Sheet.Range('N'+j).Value := tab_ab_bw.Stat_EK;
            Sheet.Range('O'+j).Value := tab_ab_bw.Stat_VK;
            IF tab_ab_bw.Stat_VK='WŽ' THEN BEGIN
              Sheet.Range('P'+j).Value := 'WŽ-Fehler';
            END;
            Sheet.Range('Q'+j).Value := tab_ab_bw.W„hrungscode;
            Sheet.Range('R'+j).Value := FORMAT(tab_ab_bw.w„_faktor);
            Sheet.Range('S'+j).Value := FORMAT(tab_ab_bw.re_menge);
            Sheet.Range('T'+j).Value := tab_ab_bw.Auftragsdatum;
            j := INCSTR(j);
          END ELSE BEGIN
            j := INCSTR(j);
            Sheet.Range('A'+j).Value := tab_ab_bw.Datum;
            Sheet.Range('B'+j).Value := tab_ab_bw.AU_Nr;
            Sheet.Range('C'+j).Value := tab_ab_bw.POS_Nr;
            Sheet.Range('D'+j).Value := tab_ab_bw.Debitor;
            Sheet.Range('E'+j).Value := tab_ab_bw.Artikel;
            Sheet.Range('F'+j).Value := tab_ab_bw.Menge;
            Sheet.Range('G'+j).Value := tab_ab_bw.Restmenge;
            Sheet.Range('H'+j).Value := FORMAT(tab_ab_bw.EK);
            Sheet.Range('I'+j).Value := FORMAT(tab_ab_bw.VK);
            Sheet.Range('J'+j).Value := tab_ab_bw.Art;
            Sheet.Range('K'+j).Value := tab_ab_bw.Status;
            Sheet.Range('L'+j).Value := tab_ab_bw.Stat_Artikel;
            Sheet.Range('M'+j).Value := tab_ab_bw.Stat_Menge;
            Sheet.Range('N'+j).Value := tab_ab_bw.Stat_EK;
            Sheet.Range('O'+j).Value := tab_ab_bw.Stat_VK;
            IF tab_ab_bw.Stat_VK='WŽ' THEN BEGIN
              Sheet.Range('P'+j).Value := 'WŽ-Fehler';
            END;
            Sheet.Range('Q'+j).Value := tab_ab_bw.W„hrungscode;
            Sheet.Range('R'+j).Value := FORMAT(tab_ab_bw.w„_faktor);
            Sheet.Range('S'+j).Value := FORMAT(tab_ab_bw.re_menge);
            Sheet.Range('T'+j).Value := tab_ab_bw.Auftragsdatum;
            j := INCSTR(j);
            var_AU_Nr :=tab_ab_bw.AU_Nr;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      Excel.Visible(TRUE);

      Pfad_tag :=FORMAT(DATE2DMY(AE_holen_Datum_1,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      Pfad:='F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022\Diff'+Pfaddatum+'.xlsx';

      IF ERASE(Pfad)THEN;
      Book._SaveAs(Pfad);

      MESSAGE(' Differenzen wurden ordnungsgem„á nach Excel exportiert. ');
    END;

    PROCEDURE N2_berprfen@1140060();
    BEGIN
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);
      CREATE(Excel,FALSE,TRUE);

      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('A1').Value := 'N2 šberprfung  '; // definiert die Beschriftung der berschriftszeile

      Sheet.Range('A2').Value := 'Nr';
      Sheet.Range('B2').Value := 'Firma';
      Sheet.Range('C2').Value := 'Verk„ufer';
      Sheet.Range('D2').Value := 'N2';
      Sheet.Range('E2').Value := 'BBL';
      Sheet.Range('F2').Value := 'Anzahl';
      Sheet.Range('G2').Value := 'ZENT/KONSI';
      Sheet.Range('H2').Value := 'MUST';
      Sheet.Range('I2').Value := 'Gutschriften';

      j := '3';

      deb.RESET;
      deb.SETFILTER(deb."Shipping Agent Code",'%1|%2','N2','N1');
      deb.CALCFIELDS("No. of Pstd. Invoices");
      deb.SETFILTER(deb."No. of Pstd. Invoices",'>%1',1);
      IF deb.FIND('-') THEN BEGIN
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          Sheet.Range('D'+j).Value := deb."Shipping Agent Code";
          Sheet.Range('E'+j).Value := deb."Payment Terms Code";
          deb.CALCFIELDS("No. of Pstd. Invoices");
          Sheet.Range('F'+j).Value := deb."No. of Pstd. Invoices";
          anz_zent := 0;
          anz_must := 0;
          anz_gutschr := 0;
          vkrk.RESET;
          vkrk.SETFILTER(vkrk."Sell-to Customer No.",'%1',deb."No.");
          IF vkrk.FIND('-') THEN BEGIN
            REPEAT
              IF vkrk."Location Code"='ZENT' THEN anz_zent:= anz_zent+1;
              IF vkrk."Location Code"='MUST' THEN anz_must:= anz_must+1;
              IF vkrk."Location Code"='KONSI' THEN anz_zent:= anz_zent+1;
            UNTIL vkrk.NEXT = 0;
          END;
          tab_guk.RESET;
          tab_guk.SETFILTER(tab_guk."Sell-to Customer No.",'%1',deb."No.");
          IF tab_guk.FIND('-') THEN BEGIN
            REPEAT
              IF tab_guk."Location Code"='ZENT' THEN anz_gutschr:= anz_gutschr+1;
              IF tab_guk."Location Code"='KONSI' THEN anz_gutschr:= anz_gutschr+1;
            UNTIL tab_guk.NEXT = 0;
          END;
          Sheet.Range('G'+j).Value := FORMAT(anz_zent);
          Sheet.Range('H'+j).Value := FORMAT(anz_must);
          Sheet.Range('I'+j).Value := FORMAT(anz_gutschr);
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Payment Terms Code",'%1','BBL');
      deb.CALCFIELDS("No. of Pstd. Invoices");
      deb.SETFILTER(deb."No. of Pstd. Invoices",'>%1',1);
      IF deb.FIND('-') THEN BEGIN
        REPEAT
          Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No.");
          Sheet.Range('B'+j).Value := deb.Name;
          Sheet.Range('C'+j).Value := deb."Salesperson Code";
          Sheet.Range('D'+j).Value := deb."Shipping Agent Code";
          Sheet.Range('E'+j).Value := deb."Payment Terms Code";
          deb.CALCFIELDS("No. of Pstd. Invoices");
          Sheet.Range('F'+j).Value := deb."No. of Pstd. Invoices";
          anz_zent := 0;
          anz_must := 0;
          anz_gutschr := 0;
          vkrk.RESET;
          vkrk.SETFILTER(vkrk."Sell-to Customer No.",'%1',deb."No.");
          IF vkrk.FIND('-') THEN BEGIN
            REPEAT
               IF vkrk."Location Code"='ZENT' THEN anz_zent:= anz_zent+1;
               IF vkrk."Location Code"='MUST' THEN anz_must:= anz_must+1;
               IF vkrk."Location Code"='KONSI' THEN anz_zent:= anz_zent+1;
            UNTIL vkrk.NEXT = 0;
            Sheet.Range('J'+j).Value := vkrk."Posting Date";
          END;
          tab_guk.RESET;
          tab_guk.SETFILTER(tab_guk."Sell-to Customer No.",'%1',deb."No.");
          IF tab_guk.FIND('-') THEN BEGIN
            REPEAT
              IF tab_guk."Location Code"='ZENT' THEN anz_gutschr:= anz_gutschr+1;
              IF tab_guk."Location Code"='KONSI' THEN anz_gutschr:= anz_gutschr+1;
            UNTIL tab_guk.NEXT = 0;
          END;
          Sheet.Range('G'+j).Value := FORMAT(anz_zent);
          Sheet.Range('H'+j).Value := FORMAT(anz_must);
          Sheet.Range('I'+j).Value := FORMAT(anz_gutschr);
          j := INCSTR(j);
        UNTIL deb.NEXT = 0;
      END;

      Excel.Visible(TRUE);
    END;

    PROCEDURE Abstimm_tab_belege@1140064();
    BEGIN
      {
      IF ISCLEAR(Excel) THEN
      CREATE(Excel,FALSE,TRUE);

      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('A1').Value := 'šberprfung der Rechnungen mit Tabelle Belege'; // definiert die Beschriftung der berschriftszeile

      Sheet.Range('A2').Value := 'Rech Nr';
      Sheet.Range('B2').Value := 'Zeilen Nr';
      Sheet.Range('C2').Value := 'Artikel Nr';
      Sheet.Range('D2').Value := 'Menge';
      Sheet.Range('E2').Value := 'Preis';
      Sheet.Range('F2').Value := 'Buch.Datum';
      j := '3';

      rech.RESET;
      rech.SETFILTER(rech."Posting Date",'%1..%2',Datum_von,Datum_bis);
      rech.SETFILTER(rech.Quantity,'>%1',0);
      rech.SETFILTER(rech.Type,'%1',rech.Type::Item);
      IF rech.FIND('-') THEN BEGIN
        REPEAT
          Beleg.RESET;
          Beleg.SETFILTER(Beleg."Belegnr.",'%1',rech."Document No.");
          Beleg.SETFILTER(Beleg."Zeilennr.",'%1',rech."Line No.");
          IF Beleg.FINDFIRST THEN BEGIN
          END ELSE BEGIN
            Sheet.Range('A'+j).Value := rech."Document No.";
            Sheet.Range('B'+j).Value := rech."Line No.";
            Sheet.Range('C'+j).Value := rech."No.";
            Sheet.Range('D'+j).Value := FORMAT(rech.Quantity);
            Sheet.Range('E'+j).Value := rech."Unit Price";
            Sheet.Range('F'+j).Value := rech."Posting Date";
            Sheet.Range('G'+j).Value := 'Rechnung fehlt in Tabelle Belege';
            j := INCSTR(j);
          END;
        UNTIL rech.NEXT = 0;
      END;
      RowNo := RowNo +1;
      tab_guz.RESET;
      tab_guz.SETFILTER(tab_guz."Posting Date",'%1..%2',Datum_von,Datum_bis);
      tab_guz.SETFILTER(tab_guz.Quantity,'>%1',0);
      tab_guz.SETFILTER(tab_guz.Type,'%1',tab_guz.Type::Item);
      IF tab_guz.FIND('-') THEN BEGIN
        REPEAT
          Beleg.RESET;
          Beleg.SETFILTER(Beleg."Belegnr.",'%1',tab_guz."Document No.");
          Beleg.SETFILTER(Beleg."Zeilennr.",'%1',tab_guz."Line No.");
          IF Beleg.FINDFIRST THEN BEGIN
          END ELSE BEGIN
            Sheet.Range('A'+j).Value := tab_guz."Document No.";
            Sheet.Range('B'+j).Value := tab_guz."Line No.";
            Sheet.Range('C'+j).Value := tab_guz."No.";
            Sheet.Range('D'+j).Value := FORMAT(tab_guz.Quantity);
            Sheet.Range('E'+j).Value := tab_guz."Unit Price";
            Sheet.Range('F'+j).Value := tab_guz."Posting Date";
            Sheet.Range('G'+j).Value := 'Gutschrift fehlt in Tabelle Belege';
            j := INCSTR(j);
          END;
        UNTIL tab_guz.NEXT = 0;
      END;
      Excel.Visible(TRUE);
      }
    END;

    LOCAL PROCEDURE Abstimm_tab_belege_neu@1000000029();
    BEGIN
      CreateExcel;
      EnterCell(1,1,'Monatliche Salden aus Tabelle Belege und aus den Debitorenposten (Navision Startseite) Abstimm_tab_belege_neu','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,1,'Monat','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,2,'Betrag Belege','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,3,'Betrag Debitorposten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(4,1,'Juli 2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,1,'August 2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,1,'September 2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(7,1,'Oktober 2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,1,'November 2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,1,'Dezember 2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,1,'Januar 2022','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,1,'Februar 2022','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,1,'M„rz 2022','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(13,1,'April 2022','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(14,1,'Mai 2022','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(15,1,'Juni 2022','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      v_RE_mtl_gesamt:=0;
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',010721D,310721D);
      Beleg.SETFILTER(Beleg.Menge,'>%1',0);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+Beleg."Betrag MW ohne Mwst.";
          IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+(Beleg."Betrag MW ohne Mwst."*(-1));
        UNTIL Beleg.NEXT = 0;
      END;
      EnterCell(4,2,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);


      v_RE_mtl_gesamt:=0;
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',010821D,310821D);
      Beleg.SETFILTER(Beleg.Menge,'>%1',0);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+Beleg."Betrag MW ohne Mwst.";
          IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+(Beleg."Betrag MW ohne Mwst."*(-1));
        UNTIL Beleg.NEXT = 0;
      END;
      EnterCell(5,2,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      v_RE_mtl_gesamt:=0;
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',010921D,300921D);
      Beleg.SETFILTER(Beleg.Menge,'>%1',0);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+Beleg."Betrag MW ohne Mwst.";
          IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+(Beleg."Betrag MW ohne Mwst."*(-1));
        UNTIL Beleg.NEXT = 0;
      END;
      EnterCell(6,2,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      v_RE_mtl_gesamt:=0;
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',011021D,311021D);
      Beleg.SETFILTER(Beleg.Menge,'>%1',0);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+Beleg."Betrag MW ohne Mwst.";
          IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+(Beleg."Betrag MW ohne Mwst."*(-1));
        UNTIL Beleg.NEXT = 0;
      END;
      EnterCell(7,2,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);


      v_RE_mtl_gesamt:=0;
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',011121D,301121D);
      Beleg.SETFILTER(Beleg.Menge,'>%1',0);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+Beleg."Betrag MW ohne Mwst.";
          IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+(Beleg."Betrag MW ohne Mwst."*(-1));
        UNTIL Beleg.NEXT = 0;
      END;
      EnterCell(8,2,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      v_RE_mtl_gesamt:=0;
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',011221D,311221D);
      Beleg.SETFILTER(Beleg.Menge,'>%1',0);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+Beleg."Betrag MW ohne Mwst.";
          IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+(Beleg."Betrag MW ohne Mwst."*(-1));
        UNTIL Beleg.NEXT = 0;
      END;
      EnterCell(9,2,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      v_RE_mtl_gesamt:=0;
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',010122D,310122D);
      Beleg.SETFILTER(Beleg.Menge,'>%1',0);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+Beleg."Betrag MW ohne Mwst.";
          IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+(Beleg."Betrag MW ohne Mwst."*(-1));
        UNTIL Beleg.NEXT = 0;
      END;
      EnterCell(10,2,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      v_RE_mtl_gesamt:=0;
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',010222D,280222D);
      Beleg.SETFILTER(Beleg.Menge,'>%1',0);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+Beleg."Betrag MW ohne Mwst.";
          IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+(Beleg."Betrag MW ohne Mwst."*(-1));
        UNTIL Beleg.NEXT = 0;
      END;
      EnterCell(11,2,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      v_RE_mtl_gesamt:=0;
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',010322D,310322D);
      Beleg.SETFILTER(Beleg.Menge,'>%1',0);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+Beleg."Betrag MW ohne Mwst.";
          IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+(Beleg."Betrag MW ohne Mwst."*(-1));
        UNTIL Beleg.NEXT = 0;
      END;
      EnterCell(12,2,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      v_RE_mtl_gesamt:=0;
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',010422D,300422D);
      Beleg.SETFILTER(Beleg.Menge,'>%1',0);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+Beleg."Betrag MW ohne Mwst.";
          IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+(Beleg."Betrag MW ohne Mwst."*(-1));
        UNTIL Beleg.NEXT = 0;
      END;
      EnterCell(13,2,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      v_RE_mtl_gesamt:=0;
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',010522D,310522D);
      Beleg.SETFILTER(Beleg.Menge,'>%1',0);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+Beleg."Betrag MW ohne Mwst.";
          IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+(Beleg."Betrag MW ohne Mwst."*(-1));
        UNTIL Beleg.NEXT = 0;
      END;
      EnterCell(14,2,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      v_RE_mtl_gesamt:=0;
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',010622D,300622D);
      Beleg.SETFILTER(Beleg.Menge,'>%1',0);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+Beleg."Betrag MW ohne Mwst.";
          IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN v_RE_mtl_gesamt:=v_RE_mtl_gesamt+(Beleg."Betrag MW ohne Mwst."*(-1));
        UNTIL Beleg.NEXT = 0;
      END;
      EnterCell(15,2,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);








      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',010721D,310721D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
        UNTIL debpos.NEXT = 0;
      END;
      EnterCell(4,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',010821D,310821D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
        UNTIL debpos.NEXT = 0;
      END;
      EnterCell(5,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',010921D,300921D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
        UNTIL debpos.NEXT = 0;
      END;
      EnterCell(6,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',011021D,311021D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
        UNTIL debpos.NEXT = 0;
      END;
      EnterCell(7,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',011121D,301121D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
        UNTIL debpos.NEXT = 0;
      END;
      EnterCell(8,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',011221D,311221D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
        UNTIL debpos.NEXT = 0;
      END;
      EnterCell(9,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',010122D,310122D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
        UNTIL debpos.NEXT = 0;
      END;
      EnterCell(10,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',010222D,280222D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
        UNTIL debpos.NEXT = 0;
      END;
      EnterCell(11,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',010322D,310322D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
        UNTIL debpos.NEXT = 0;
      END;
      EnterCell(12,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',010422D,300422D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
        UNTIL debpos.NEXT = 0;
      END;
      EnterCell(13,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',010522D,310522D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
        UNTIL debpos.NEXT = 0;
      END;
      EnterCell(14,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',010622D,300622D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
        UNTIL debpos.NEXT = 0;
      END;
      EnterCell(15,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);















      RowNo := 21;
      EnterCell(RowNo,1,'šberprfung der Rechnungen mit Tabelle Belege','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 22;
      EnterCell(RowNo,1,'Rech_Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Zeil_Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Preis','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Buch_Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Lagerort','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Hinweis','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      debpos.RESET;
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',010721D,300622D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::Invoice,debpos."Document Type"::"Credit Memo");
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          Beleg.RESET;
          Beleg.SETFILTER(Beleg."Belegnr.",'%1',debpos."Document No.");
          IF Beleg.FIND('-') THEN BEGIN
      {      REPEAT
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(debpos."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,FORMAT(Beleg."Betrag MW ohne Mwst."),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(debpos."Sales (LCY)"),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(debpos."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,8,'bei den Belegen vorhanden','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            UNTIL Beleg.NEXT=0;
      }
          END ELSE BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT(debpos."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //      EnterCell(RowNo,2,FORMAT(Beleg."Zeilennr."),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //      EnterCell(RowNo,3,FORMAT(Beleg."Artikelnr."),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //      EnterCell(RowNo,4,FORMAT(Beleg.Menge),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(debpos."Sales (LCY)"),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(debpos."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      //      EnterCell(RowNo,7,FORMAT(Beleg.Lagerortcode),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,8,'fehlt bei den Belegen','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
        UNTIL debpos.NEXT = 0;
      END;
      RowNo := RowNo +1;


      CloseExcel('šberprf_RE+GU_Tab_Belege','šberprf_RE+GU_Tab_Belege','F:\Daten Neu\User\Uwe\Navision_2016');
      MESSAGE('%1 Erfolgreich gespeichert.','F:\Daten Neu\User\Uwe\Navision_2016\šberprf_RE+GU_Tab_Belege');
    END;

    PROCEDURE geschenk_adr_liste@1140066();
    BEGIN
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);
      CREATE(Excel,FALSE,TRUE);

      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('A1').Value := 'Adressliste:  Mailing fr Geschenkversand'; // definiert die Beschriftung der berschriftszeile
      Sheet.Range('A2').Value := 'Filter Aktion:';
      Sheet.Range('C2').Value := 'Geschenk';
      Sheet.Range('A3').Value := 'Filter Betreff:';
      Sheet.Range('C3').Value := 'Fan-Schminke 6/2016';

      Sheet.Range('A4').Value := 'Kontaktnr';
      Sheet.Range('B4').Value := 'Mandanennr';
      Sheet.Range('C4').Value := 'Aktion';
      Sheet.Range('D4').Value := 'Betreff';
      Sheet.Range('E4').Value := 'Statustext';
      Sheet.Range('F4').Value := 'Anzahl';
      Sheet.Range('G4').Value := 'Bearbeiter';
      Sheet.Range('H4').Value := 'Anrede';
      Sheet.Range('I4').Value := 'Titel';
      Sheet.Range('J4').Value := 'Vorname';
      Sheet.Range('K4').Value := 'Name';
      Sheet.Range('L4').Value := 'Firma1';
      Sheet.Range('M4').Value := 'Firma2';
      Sheet.Range('N4').Value := 'Strasse1';
      Sheet.Range('O4').Value := 'Strasse2';
      Sheet.Range('P4').Value := 'Land';
      Sheet.Range('Q4').Value := 'Plz';
      Sheet.Range('R4').Value := 'Ort';

      j := '5';

      tab_geschenk.RESET;
      tab_geschenk.SETFILTER(tab_geschenk.Aktion,'%1',tab_geschenk.Aktion::Geschenk);
      tab_geschenk.SETFILTER(tab_geschenk.Betreff,'%1','Fan-Schminke 6/2016');
      IF tab_geschenk.FIND('-') THEN BEGIN
        REPEAT
          kontakt.RESET;
          kontakt.SETFILTER(kontakt."No.",'%1',tab_geschenk."Kontaktnr.");
          IF kontakt.FINDFIRST THEN BEGIN
            Sheet.Range('A'+j).Value := tab_geschenk."Kontaktnr.";
            Sheet.Range('B'+j).Value := tab_geschenk."Mandantennr.";
            Sheet.Range('C'+j).Value := tab_geschenk.Aktion;
            Sheet.Range('D'+j).Value := tab_geschenk.Betreff;
            Sheet.Range('E'+j).Value := tab_geschenk.Statustext;
            Sheet.Range('F'+j).Value := tab_geschenk.Anzahl;
            Sheet.Range('G'+j).Value := tab_geschenk."Zust„ndig Bearb";
            IF kontakt."Salutation Code"='MANDANT' THEN BEGIN
              Sheet.Range('H'+j).Value := 'Fa.';
            END;
            IF kontakt."Salutation Code"='HERR' THEN BEGIN
              Sheet.Range('H'+j).Value := 'Herr';
              Sheet.Range('I'+j).Value := kontakt."Job Title";
              Sheet.Range('J'+j).Value := kontakt."First Name";
              Sheet.Range('K'+j).Value := kontakt.Surname;
            END;
            IF kontakt."Salutation Code"='FRAU' THEN BEGIN
              Sheet.Range('H'+j).Value := 'Frau';
              Sheet.Range('I'+j).Value := kontakt."Job Title";
              Sheet.Range('J'+j).Value := kontakt."First Name";
              Sheet.Range('K'+j).Value := kontakt.Surname;
            END;
            kontakt1.RESET;
            kontakt1.SETFILTER(kontakt1."No.",'%1',kontakt."Company No.");
            IF kontakt1.FINDFIRST THEN BEGIN
              Sheet.Range('L'+j).Value := kontakt1.Name;
              Sheet.Range('M'+j).Value := kontakt1."Name 2"
            END;
            Sheet.Range('N'+j).Value := kontakt.Address;
            Sheet.Range('O'+j).Value := kontakt."Address 2";
            Sheet.Range('P'+j).Value := kontakt."Country/Region Code";
            Sheet.Range('Q'+j).Value := FORMAT(kontakt."Country/Region Code"+' '+kontakt."Post Code");
            Sheet.Range('R'+j).Value := kontakt.City;
            Sheet.Range('S'+j).Value := kontakt."Unternehmen verlassen";
            j := INCSTR(j);
          END;
        UNTIL tab_geschenk.NEXT = 0;
      END;

      Excel.Visible(TRUE);
    END;

    PROCEDURE geschenk_adr_liste_bersicht@1140067();
    BEGIN
      IF ISCLEAR(Excel) THEN
        CREATE(Excel,FALSE,TRUE);

      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('A1').Value := 'Adressliste fr Geschenkversand'; // definiert die Beschriftung der berschriftszeile
      Sheet.Range('A4').Value := 'Kontaktnr';
      Sheet.Range('B4').Value := 'Mandanennr';
      Sheet.Range('C4').Value := 'Aktion';
      Sheet.Range('D4').Value := 'Betreff';
      Sheet.Range('E4').Value := 'Statustext';
      Sheet.Range('F4').Value := 'Anzahl';
      Sheet.Range('G4').Value := 'Bearbeiter';
      Sheet.Range('H4').Value := 'Anrede';
      Sheet.Range('I4').Value := 'Titel';
      Sheet.Range('J4').Value := 'Vorname';
      Sheet.Range('K4').Value := 'Name';
      Sheet.Range('L4').Value := 'Firma1';
      Sheet.Range('M4').Value := 'Firma2';
      Sheet.Range('N4').Value := 'Strasse1';
      Sheet.Range('O4').Value := 'Strasse2';
      Sheet.Range('P4').Value := 'Land';
      Sheet.Range('Q4').Value := 'Plz';
      Sheet.Range('R4').Value := 'Ort';
      Sheet.Range('S4').Value := 'Unternehmen verlassen';
      Sheet.Range('T4').Value := 'Fan-Schminke 6/2006';
      Sheet.Range('u4').Value := 'Test fr weiteres Geschenk';
      //  hier weitere Aktionen eintragen und weiter unten auswerten
      j := '5';

      kontakt.RESET;
      kontakt.SETFILTER(kontakt."Unternehmen verlassen",'%1',FALSE);
      IF kontakt.FIND('-') THEN BEGIN
        REPEAT
          tab_geschenk.RESET;
          tab_geschenk.SETFILTER(tab_geschenk."Kontaktnr.",'%1',kontakt."No.");
          tab_geschenk.SETFILTER(tab_geschenk.Aktion,'%1',tab_geschenk.Aktion::Geschenk);
          IF tab_geschenk.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(kontakt.TABLENAME,1,5050,kontakt."No.");
              Sheet.Range('B'+j).Value := TOPAS_API.CreateExcelHyperlinkToNav(kontakt.TABLENAME,1,50091,kontakt."Company No.");
              Sheet.Range('C'+j).Value := kontakt."Salesperson Code";
              Sheet.Range('D'+j).Value := kontakt."Betreuer Innendienst";
              Sheet.Range('E'+j).Value := kontakt."Territory Code";
              Sheet.Range('F'+j).Value := tab_geschenk.Statustext;
              Sheet.Range('G'+j).Value := tab_geschenk."Zust„ndig Bearb";
              IF kontakt."Salutation Code"='MANDANT' THEN BEGIN
                Sheet.Range('H'+j).Value := 'Fa.';
              END;
              IF kontakt."Salutation Code"='HERR' THEN BEGIN
                Sheet.Range('H'+j).Value := 'Herr';
                Sheet.Range('I'+j).Value := kontakt."Job Title";
                Sheet.Range('J'+j).Value := kontakt."First Name";
                Sheet.Range('K'+j).Value := kontakt.Surname;
              END;
              IF kontakt."Salutation Code"='FRAU' THEN BEGIN
                Sheet.Range('H'+j).Value := 'Frau';
                Sheet.Range('I'+j).Value := kontakt."Job Title";
                Sheet.Range('J'+j).Value := kontakt."First Name";
                Sheet.Range('K'+j).Value := kontakt.Surname;
              END;
              kontakt1.RESET;
              kontakt1.SETFILTER(kontakt1."No.",'%1',kontakt."Company No.");
              IF kontakt1.FINDFIRST THEN BEGIN
                Sheet.Range('L'+j).Value := kontakt1.Name;
                Sheet.Range('M'+j).Value := kontakt1."Name 2"
              END;
              Sheet.Range('N'+j).Value := kontakt.Address;
              Sheet.Range('O'+j).Value := kontakt."Address 2";
              Sheet.Range('P'+j).Value := kontakt."Country/Region Code";
              Sheet.Range('Q'+j).Value := FORMAT(kontakt."Country/Region Code"+' '+kontakt."Post Code");
              Sheet.Range('R'+j).Value := kontakt.City;
              Sheet.Range('S'+j).Value := kontakt."Unternehmen verlassen";
              IF tab_geschenk.Betreff='Fan-Schminke 6/2016' THEN Sheet.Range('T'+j).Value := tab_geschenk.Anzahl;
              IF tab_geschenk.Betreff='Test' THEN Sheet.Range('U'+j).Value := tab_geschenk.Anzahl;
              j := INCSTR(j);
            UNTIL tab_geschenk.NEXT = 0;
          END;
        UNTIL kontakt.NEXT = 0;
      END;
      Excel.Visible(TRUE);
    END;

    LOCAL PROCEDURE AE_Verteilen_Filter_Abfrage@1000000000();
    BEGIN
      // Abfrage ACS
      AE_Verteilen_Excelblatt_anlegen;     // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETCURRENTKEY(Datum,AU_Nr,POS_Nr,Deb_Nr,Belegart);
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Linie,'%1|%2|%3|%4','ACT','ACI','ACC','ACS');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='ACS';
      AE_Verteilen_Pfad_festlegen;   //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;    //  Excelblatt speichern und Excel schlieáen
      //  *************************************************************************************************

      //  Abfrage Christian
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1','CB');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='CB';
      AE_Verteilen_Pfad_festlegen;  //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      //  *******************************************************************************************************

      //  Abfrage Edeltraut
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1|%2','ESK','NM');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='ESK';
      AE_Verteilen_Pfad_festlegen;    //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      //  *******************************************************************************************************

      //  Abfrage Hendrik
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1|%2','HB','LD');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='HB';
      AE_Verteilen_Pfad_festlegen;    //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      //  *******************************************************************************************************

      //  Abfrage Maria
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1|%2','ML','IF');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='ML';
      AE_Verteilen_Pfad_festlegen;      //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      //  *******************************************************************************************************

      //  Abfrage Maria System
      //  *******************************************************************************************************

      //  Abfrage Nadine
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1','NM');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='NM';
      AE_Verteilen_Pfad_festlegen;   //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      //  *******************************************************************************************************

      //  Abfrage Michael
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Vertreter,'%1','MB');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='MB';
      AE_Verteilen_Pfad_festlegen;   //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      //  *******************************************************************************************************

      //  Abfrage Renate
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1|%2','RL','CB');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='RL';
      AE_Verteilen_Pfad_festlegen;   //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      //  *******************************************************************************************************

      //  Abfrage Simon
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Vertreter,'%1','SST');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='SST';
      AE_Verteilen_Pfad_festlegen;  //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      //  *******************************************************************************************************

      //  Abfrage Sylke
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='SB';
      AE_Verteilen_Pfad_festlegen;  //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      //  *******************************************************************************************************

      //  Abfrage Thomas
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='TF';
      AE_Verteilen_Pfad_festlegen;  //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      //  *******************************************************************************************************

      //  Abfrage Torsten
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Vertreter,'%1','TW');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='TW';
      AE_Verteilen_Pfad_festlegen;   //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      //  *******************************************************************************************************

      //  Abfrage Werner
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Vertreter,'%1','WG');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='WG';
      AE_Verteilen_Pfad_festlegen;   //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      //  *******************************************************************************************************

      MESSAGE(' Auftragseing„nge wurden ordnungsgem„á nach Excel exportiert. ');
    END;

    LOCAL PROCEDURE AE_Verteilen_Excelblatt_anlegen@1000000001();
    BEGIN

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);
      RowNo := 1;
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,Text001,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,Text020,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text021,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text022,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text023,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text024,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text025,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text026,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text027,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text028,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text029,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text030,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text031,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text032,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text033,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text034,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text035,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text036,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text037,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text038,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text039,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text040,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
    END;

    LOCAL PROCEDURE AE_Verteilen_Excelblatt_Daten@1000000003();
    BEGIN

      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,FORMAT(AE_mtl.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Deb_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(AE_mtl.Menge),'',FALSE,FALSE,FALSE,'###,###,###',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(AE_mtl.EK),'',FALSE,FALSE,FALSE,'###,##0.00###',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(AE_mtl.VK),'',FALSE,FALSE,FALSE,'###,##0.00###',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(AE_mtl.w„_faktor),'',FALSE,FALSE,FALSE,'##0.00###',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(ROUND(AE_mtl."Betrag in EUR",0.01)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(ROUND(AE_mtl."DB %",0.01)),'',FALSE,FALSE,FALSE,'##0.000',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Betreuer,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Vertreter,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Linie,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(ROUND(AE_mtl."EK Gesamt",0.01)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.PLZ,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Endkunde,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Teams,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Gebietscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      RecNo := RecNo + 1;
      Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
    END;

    LOCAL PROCEDURE AE_Verteilen_Excelblatt_schliessen@1000000002();
    BEGIN

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Text001);
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2',Text001,''),30),COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          TempExcelBuffer.OpenExcelWithoutAutoFit(Text001, v_Pfadname,'F:\Daten Neu\Gemeinsame Ordner\Auftragseingang\',FALSE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE AE_Verteilen_Pfad_festlegen@1000000004();
    BEGIN
      // Anfang t„gliche Verteilung
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='ACS')) THEN v_Pfadname:='ACS\AE_mtl.xlsx';   //  Pfadzuweisung festlegen
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='CB')) THEN v_Pfadname:='Christian\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='ESK')) THEN v_Pfadname:='Edeltraut\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='HB')) THEN v_Pfadname:='Hendrik\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='ML')) THEN v_Pfadname:='Maria\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='MB')) THEN v_Pfadname:='Michael\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='NM')) THEN v_Pfadname:='Nadine\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='RL')) THEN v_Pfadname:='Renate\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='SST')) THEN v_Pfadname:='Simon\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='SB')) THEN v_Pfadname:='Sylke\Gesamt.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='TF')) THEN v_Pfadname:='Thomas\Gesamt.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='TW')) THEN v_Pfadname:='Torsten\Gesamt.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='WG')) THEN v_Pfadname:='Werner\Gesamt.xlsx';
      // Ende t„gliche Verteilung
      //Anfang monatliche Verteilung
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='ACS')) THEN v_Pfadname:='ACS\'+ Filename;   //  Pfadzuweisung festlegen
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='CB')) THEN v_Pfadname:='Christian\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='ESK')) THEN v_Pfadname:='Edeltraut\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='HB')) THEN v_Pfadname:='Hendrik\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='ML')) THEN v_Pfadname:='Maria\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='MB')) THEN v_Pfadname:='Michael\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='NM')) THEN v_Pfadname:='Nadine\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='RL')) THEN v_Pfadname:='Renate\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='SST')) THEN v_Pfadname:='Simon\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='SB')) THEN v_Pfadname:='Sylke\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='TF')) THEN v_Pfadname:='Thomas\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='TW')) THEN v_Pfadname:='Torsten\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='WG')) THEN v_Pfadname:='Werner\'+ Filename;
      // Ende monatliche Verteilung
    END;

    LOCAL PROCEDURE ID_Prove_Filter_Abfrage@1000000005();
    BEGIN
      // Abfrage ID_Prove Firmen
      ID_Prove_Excelblatt_anlegen;     // Excelblatt ohne šberschriftszeile anlegen
      kontakt.RESET;

      kontakt.SETFILTER(kontakt.Type,'%1',0);
      IF kontakt.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := kontakt.COUNT;
        REPEAT
          v_kontaktnr:=FORMAT(kontakt."No.");
          v_kontaktnr:=COPYSTR(v_kontaktnr,4);
          ID_Prove_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL kontakt.NEXT = 0;
      END;
      v_Pfadname:='adr_nav_neu_text_uwe1.csv';
      ID_Prove_Excelblatt_schliessen;    //  Excelblatt speichern und Excel schlieáen
      //  *************************************************************************************************
      // Abfrage ID_Prove Ansprechpartner
      ID_Prove_Excelblatt_anlegen;     // Excelblatt ohne šberschriftszeile anlegen
      kontakt.RESET;

      kontakt.SETFILTER(kontakt.Type,'%1',1);
      IF kontakt.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := kontakt.COUNT;
        REPEAT
          v_kontaktnr:=FORMAT(kontakt."No.");
          v_kontaktnr:=COPYSTR(v_kontaktnr,4);
          ID_Prove_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL kontakt.NEXT = 0;
      END;
      v_Pfadname:='adr_nav_neu_text_uwe2.csv';
      ID_Prove_Excelblatt_schliessen;    //  Excelblatt speichern und Excel schlieáen
      //  *************************************************************************************************
    END;

    LOCAL PROCEDURE ID_Prove_Excelblatt_anlegen@1000000006();
    BEGIN
      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);
      RowNo := 1;
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,Text050,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text051,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text052,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text053,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text054,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text055,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text056,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text057,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text058,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text059,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
    END;

    LOCAL PROCEDURE ID_Prove_Excelblatt_Daten@1000000007();
    BEGIN
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,kontakt."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt."Company Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt."Name 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt."First Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt.Surname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt.Address,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt."Address 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt."Post Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt.City,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,v_kontaktnr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      RowNo := RowNo + 1;
      RecNo := RecNo + 1;
      Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
    END;

    LOCAL PROCEDURE ID_Prove_Excelblatt_schliessen@1000000008();
    BEGIN
      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Text001);
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2',Text001,''),30),COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          TempExcelBuffer.OpenExcelWithoutAutoFit(Text001, v_Pfadname,'R:\id_prove\Import\',FALSE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE Geschenkliste_šbersicht@1000000009();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Adressliste fr Geschenkversand','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 4;
      EnterCell(RowNo,1,'Kontaktnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Mandantennr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'VK-Code','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Betreuer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Gebiet','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Aktion','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Bearbeiter','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Anrede','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Titel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Vorname','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Firma1','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Firma2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Strasse1','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Strasse2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'Plz','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'Ort','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'Land lang','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'Unternehmen verlassen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'Anzahl','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'Geschenk/Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'Korrespondenzart','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'Geschenk','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  hier weitere Aktionen eintragen und weiter unten auswerten

      RowNo := 5;

      kontakt.RESET;
      kontakt.SETFILTER(kontakt."No.",'<>%1','0');
      IF kontakt.FIND('-') THEN BEGIN
        REPEAT
          tab_geschenk.RESET;
          tab_geschenk.SETFILTER(tab_geschenk."Kontaktnr.",'%1',kontakt."No.");
          tab_geschenk.SETFILTER(tab_geschenk.Aktion,'%1',tab_geschenk.Aktion::Geschenk);
          IF tab_geschenk.FIND('-') THEN BEGIN
            REPEAT
              EnterCell(RowNo,1,kontakt."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(kontakt.TABLENAME,1,5050,kontakt."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,kontakt."Company No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(kontakt.TABLENAME,1,50091,kontakt."Company No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,3,kontakt."Salesperson Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,kontakt."Betreuer Innendienst",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,kontakt."Territory Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(tab_geschenk.Aktion),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,tab_geschenk."Zust„ndig Bearb",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF kontakt."Salutation Code"='MANDANT' THEN BEGIN
                EnterCell(RowNo,8,'Fa.','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF kontakt."Salutation Code"='HERR' THEN BEGIN
                EnterCell(RowNo,8,'Herr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,9,kontakt."Job Title",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,10,kontakt."First Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,11,kontakt.Surname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF kontakt."Salutation Code"='FRAU' THEN BEGIN
                EnterCell(RowNo,8,'Frau','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,9,kontakt."Job Title",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,10,kontakt."First Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,11,kontakt.Surname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              kontakt1.RESET;
              kontakt1.SETFILTER(kontakt1."No.",'%1',kontakt."Company No.");
              IF kontakt1.FINDFIRST THEN BEGIN
                EnterCell(RowNo,12,kontakt1.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,13,kontakt1."Name 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,14,kontakt.Address,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,15,kontakt."Address 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,16,kontakt."Country/Region Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,17,FORMAT(kontakt."Post Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,18,kontakt.City,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF kontakt."Country/Region Code"<>'DE' THEN BEGIN
                v_Land.RESET;
                v_Land.SETFILTER(v_Land.Code,'%1',kontakt."Country/Region Code");
                IF v_Land.FINDFIRST THEN BEGIN
                  EnterCell(RowNo,19,v_Land.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END;
              IF kontakt."Unternehmen verlassen" = TRUE THEN EnterCell(RowNo,20,'Ja','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,21,FORMAT(tab_geschenk.Anzahl),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,22,tab_geschenk.Betreff,'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,23,FORMAT(tab_geschenk.Korrespondenzart),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,24,tab_geschenk.Statustext,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              RowNo := RowNo +1;
            UNTIL tab_geschenk.NEXT = 0;
          END;
        UNTIL kontakt.NEXT = 0;
      END;
      CloseExcel('Geschenkeliste','Geschenkeliste','F:\Daten Neu\User\Uwe\Navision_2016\Abschluá');
    END;

    LOCAL PROCEDURE Mailingvormerkung@1000000021();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Mailingvormerkung=TRUE','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 4;
      EnterCell(RowNo,1,'Kontaktnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Mandantennr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'VK-Code','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Betreuer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Gebiet','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Aktion','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Bearbeiter','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Anrede','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Titel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Vorname','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Firma1','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Firma2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Strasse1','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Strasse2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'Plz','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'Ort','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'Land lang','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'Unternehmen verlassen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'Anzahl','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'Geschenk/Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'Korrespondenzart','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'Geschenk','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  hier weitere Aktionen eintragen und weiter unten auswerten

      RowNo := 5;

      kontakt.RESET;
      kontakt.SETFILTER(kontakt.Mailingvormerkung,'%1',TRUE);
      IF kontakt.FIND('-') THEN BEGIN
        REPEAT
          //    tab_geschenk.RESET;
          //    tab_geschenk.SETFILTER(tab_geschenk."Kontaktnr.",'%1',kontakt."No.");
          //    tab_geschenk.SETFILTER(tab_geschenk.Aktion,'%1',tab_geschenk.Aktion::Geschenk);
          //    IF tab_geschenk.FINDFIRST THEN BEGIN
          //      REPEAT
          EnterCell(RowNo,1,kontakt."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(kontakt.TABLENAME,1,5050,kontakt."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,kontakt."Company No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(kontakt.TABLENAME,1,50091,kontakt."Company No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,3,kontakt."Salesperson Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,kontakt."Betreuer Innendienst",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,kontakt."Territory Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //      EnterCell(RowNo,6,FORMAT(tab_geschenk.Aktion),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //      EnterCell(RowNo,7,tab_geschenk."Zust„ndig Bearb",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF kontakt."Salutation Code"='MANDANT' THEN BEGIN
            EnterCell(RowNo,8,'Fa.','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          IF kontakt."Salutation Code"='HERR' THEN BEGIN
            EnterCell(RowNo,8,'Herr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,kontakt."Job Title",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,10,kontakt."First Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,11,kontakt.Surname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          IF kontakt."Salutation Code"='FRAU' THEN BEGIN
            EnterCell(RowNo,8,'Frau','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,kontakt."Job Title",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,10,kontakt."First Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,11,kontakt.Surname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          kontakt1.RESET;
          kontakt1.SETFILTER(kontakt1."No.",'%1',kontakt."Company No.");
          IF kontakt1.FINDFIRST THEN BEGIN
            EnterCell(RowNo,12,kontakt1.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,kontakt1."Name 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          EnterCell(RowNo,14,kontakt.Address,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,15,kontakt."Address 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,16,kontakt."Country/Region Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,17,FORMAT(kontakt."Post Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,18,kontakt.City,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF kontakt."Country/Region Code"<>'DE' THEN BEGIN
            v_Land.RESET;
            v_Land.SETFILTER(v_Land.Code,'%1',kontakt."Country/Region Code");
            IF v_Land.FINDFIRST THEN BEGIN
              EnterCell(RowNo,19,v_Land.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
          END;
          IF kontakt."Unternehmen verlassen" = TRUE THEN EnterCell(RowNo,20,'Ja','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //      EnterCell(RowNo,20,FORMAT(tab_geschenk.Anzahl),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
          //      EnterCell(RowNo,21,tab_geschenk.Betreff,'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Text);
          //      EnterCell(RowNo,22,FORMAT(tab_geschenk.Korrespondenzart),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
          //      EnterCell(RowNo,23,tab_geschenk.Statustext,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
          //      UNTIL tab_geschenk.NEXT = 0;
          //    END;
        UNTIL kontakt.NEXT = 0;
      END;
      CloseExcel('Mailingvormerkung','Mailingvormerkung','F:\Daten Neu\User\Uwe\Navision_2016\Exceltabellen');
    END;

    LOCAL PROCEDURE Mailingvormerkung_l”schen@1000000022();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Bei folgenden Adressen wurde das H„kchen im Feld "Mailingvormerkung" gel”scht','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 4;
      EnterCell(RowNo,1,'Kontaktnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Mandantennr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'VK-Code','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Betreuer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Gebiet','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Aktion','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Bearbeiter','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Anrede','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Titel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Vorname','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Firma1','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Firma2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Strasse1','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Strasse2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'Plz','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'Ort','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'Land lang','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'Unternehmen verlassen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'Anzahl','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'Geschenk/Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'Korrespondenzart','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'Geschenk','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  hier weitere Aktionen eintragen und weiter unten auswerten

      RowNo := 5;

      kontakt.RESET;
      kontakt.SETFILTER(kontakt.Mailingvormerkung,'%1',TRUE);
      IF kontakt.FIND('-') THEN BEGIN
        REPEAT
          //    tab_geschenk.RESET;
          //    tab_geschenk.SETFILTER(tab_geschenk."Kontaktnr.",'%1',kontakt."No.");
          //    tab_geschenk.SETFILTER(tab_geschenk.Aktion,'%1',tab_geschenk.Aktion::Geschenk);
          //    IF tab_geschenk.FINDFIRST THEN BEGIN
          //      REPEAT
          EnterCell(RowNo,1,kontakt."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(kontakt.TABLENAME,1,5050,kontakt."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,kontakt."Company No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(kontakt.TABLENAME,1,50091,kontakt."Company No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,3,kontakt."Salesperson Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,kontakt."Betreuer Innendienst",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,kontakt."Territory Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //      EnterCell(RowNo,6,FORMAT(tab_geschenk.Aktion),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //      EnterCell(RowNo,7,tab_geschenk."Zust„ndig Bearb",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF kontakt."Salutation Code"='MANDANT' THEN BEGIN
            EnterCell(RowNo,8,'Fa.','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          IF kontakt."Salutation Code"='HERR' THEN BEGIN
            EnterCell(RowNo,8,'Herr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,kontakt."Job Title",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,10,kontakt."First Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,11,kontakt.Surname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          IF kontakt."Salutation Code"='FRAU' THEN BEGIN
            EnterCell(RowNo,8,'Frau','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,kontakt."Job Title",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,10,kontakt."First Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,11,kontakt.Surname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          kontakt1.RESET;
          kontakt1.SETFILTER(kontakt1."No.",'%1',kontakt."Company No.");
          IF kontakt1.FINDFIRST THEN BEGIN
            EnterCell(RowNo,12,kontakt1.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,kontakt1."Name 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          EnterCell(RowNo,14,kontakt.Address,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,15,kontakt."Address 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,16,kontakt."Country/Region Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,17,FORMAT(kontakt."Post Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,18,kontakt.City,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF kontakt."Country/Region Code"<>'DE' THEN BEGIN
            v_Land.RESET;
            v_Land.SETFILTER(v_Land.Code,'%1',kontakt."Country/Region Code");
            IF v_Land.FINDFIRST THEN BEGIN
              EnterCell(RowNo,19,v_Land.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
          END;
          IF kontakt."Unternehmen verlassen" = TRUE THEN EnterCell(RowNo,20,'Ja','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //      EnterCell(RowNo,20,FORMAT(tab_geschenk.Anzahl),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
          //      EnterCell(RowNo,21,tab_geschenk.Betreff,'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Text);
          //      EnterCell(RowNo,22,FORMAT(tab_geschenk.Korrespondenzart),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
          //      EnterCell(RowNo,23,tab_geschenk.Statustext,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
          //      UNTIL tab_geschenk.NEXT = 0;
          //    END;
        UNTIL kontakt.NEXT = 0;
      END;
      CloseExcel('Mailingvormerkung l”schen','Mailingvormerkung l”schen','F:\Daten Neu\User\Uwe\Navision_2016\Exceltabellen');


      kontakt.RESET;
      kontakt.SETFILTER(kontakt.Mailingvormerkung,'%1',TRUE);
      IF kontakt.FIND('-') THEN BEGIN
        REPEAT
          kontakt.Mailingvormerkung:=FALSE;
          kontakt.MODIFY;
        UNTIL kontakt.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE CreateExcel@1000000010();
    BEGIN
      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);
    END;

    LOCAL PROCEDURE CloseExcel@1000000011(Sheetname@1000000000 : Text;FileName@1000000001 : Text;FilePath@1000000002 : Text);
    BEGIN
      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet(Sheetname,COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          IF (FileName = '') OR (FilePath = '') THEN
            TempExcelBuffer.OpenExcel //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
        ELSE
            TempExcelBuffer.OpenExcelWithoutAutoFit(Sheetname,FileName + ExcelFileExtensionTok,FilePath,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE EnterCell@1000000012(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];Formular@1000000008 : Text[250];Bold@1000000003 : Boolean;Italic@1000000004 : Boolean;UnderLine@1000000005 : Boolean;NumberFormat@1000000006 : Text[30];CellType@1000000007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := Formular;
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    LOCAL PROCEDURE UpdateCell@1000000013(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250]);
    BEGIN
      IF TempExcelBuffer.GET(RowNo,ColumnNo)  THEN BEGIN
        TempExcelBuffer."Cell Value as Text" := CellValue;
        TempExcelBuffer.MODIFY;
      END;
    END;

    LOCAL PROCEDURE Kredtilimit_prfen@1000000014();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Kreditlimitberprfung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,1,'Debitor-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Debitor-Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Debitor-Ort','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Handelsregister Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'WKV-Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'WKV-Info','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Kreditlimit','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Umsatz -12 Monate','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Zahlungen -12 Monate','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Anzahl bez. Re -12 Monate','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      deb.RESET;
      deb.SETFILTER(deb."No.",'%1',v_deb_kredit);
      IF deb.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,deb."No.",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb.City,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,deb."Handelsregister Nr",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,deb.Warenkreditversicherung,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,deb."WKV-Info",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(deb."Credit Limit (LCY)"),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          //  Umsatz der letzten 12 Monate  ANFANG
          debpos.RESET;
          debpos.SETFILTER(debpos."Customer No.",'%1',deb."No.");
          debpos.SETFILTER(debpos."Document Type",'%1',debpos."Document Type"::Invoice);
          debpos.SETFILTER(debpos."Posting Date",'>%1',(WORKDATE -366));
          IF debpos.FIND('-') THEN BEGIN
            v_date_1RE:=debpos."Posting Date";
            REPEAT
              debpos.CALCFIELDS(debpos."Amount (LCY)",debpos."Original Amt. (LCY)");
              v_umsatz12:=v_umsatz12+debpos."Amount (LCY)";
              IF debpos.Open =debpos.Open::"0" THEN BEGIN
                v_anz_RE12:=v_anz_RE12+1;
              END;
            UNTIL debpos.NEXT=0;
          END;
          EnterCell(RowNo,8,FORMAT(v_umsatz12),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,10,FORMAT(v_anz_RE12),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          //  Umsatz der letzten 12 Monate  ENDE
          //  Zahlungen der letzten 12 Monate  ANFANG
          debpos.RESET;
          debpos.SETFILTER(debpos."Customer No.",'%1',deb."No.");
          debpos.SETFILTER(debpos."Document Type",'%1',debpos."Document Type"::Payment);
          debpos.SETFILTER(debpos."Posting Date",'>%1',(WORKDATE -366));
          IF debpos.FIND('-') THEN BEGIN
            REPEAT
              debpos.CALCFIELDS(debpos."Amount (LCY)",debpos."Original Amt. (LCY)");
              v_zahlung12:=v_zahlung12+debpos."Original Amt. (LCY)";
            UNTIL debpos.NEXT=0;
          END;
          EnterCell(RowNo,9,FORMAT(v_zahlung12),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          //  Zahlungen der letzten 12 Monate  ENDE
          RowNo := 5;
          EnterCell(RowNo,1,'Land:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,deb."Country/Region Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,'Sitz des Kunden (Land):','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 6;
          EnterCell(RowNo,1,'Erster Umsatz:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(v_date_1RE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

          RowNo := 7;
          EnterCell(RowNo,1,'Anlage/Žnd Datum:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(deb."Last Date Modified"),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,3,'Seit 6 Monaten Gesch„ftsbeziehung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 8;
          EnterCell(RowNo,1,'letzte 12 Monate:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(v_anz_RE12),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,3,'Min. 3 bezahlte Rechnungen (nicht alle NN):','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 9;
          EnterCell(RowNo,1,'m”gliches Limit:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(v_zahlung12/100*40*(-1)),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,3,'bis max. 25K, 40% der Zahlungseing„nge letzte 12 Monate:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          //  offene Posten gesamt  ANFANG
          debpos.RESET;
          debpos.SETFILTER(debpos."Customer No.",'%1',deb."No.");
          debpos.SETFILTER(debpos.Open,'%1',debpos.Open::"1");
          IF debpos.FIND('-') THEN BEGIN
            RowNo := 12;
            EnterCell(RowNo,1,'offene Possten gesamt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            RowNo := 13;
            EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,'Belegnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,'Betrag','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,'offen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            REPEAT
              RowNo := RowNo +1;
              debpos.CALCFIELDS(debpos."Amount (LCY)",debpos."Original Amt. (LCY)");
              EnterCell(RowNo,1,FORMAT(debpos."Posting Date"),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,debpos."Document No.",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(debpos."Document Type"),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,FORMAT(debpos."Original Amt. (LCY)"),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(debpos.Open),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              v_OP_gesamt:=v_OP_gesamt+debpos."Original Amt. (LCY)";
            UNTIL debpos.NEXT=0;
          END;
          //  offene Posten gesamt  ENDE
          RowNo := 12;
          EnterCell(RowNo,4,FORMAT(v_OP_gesamt),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
        UNTIL deb.NEXT=0;
      END;
      CloseExcel('Kreditlimitberprfung','Kreditlimitberprfung','F:\Daten Neu\User\Uwe\Navision_2016');
    END;

    LOCAL PROCEDURE Debitor_berprfen@1000000015();
    BEGIN
      // ANFANG Debitor_berprfen
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Debitorberprfung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 3;
      deb.RESET;
      deb.SETFILTER(deb."VAT Bus. Posting Group",'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'MWSt-Gesch„ftsbuchungsgruppe ist leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Payment Terms Code",'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Zahlungsbedingungscode ist leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Salesperson Code",'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Verk„ufercode ist leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Customer Posting Group",'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Debitorenbuchungsgruppe ist leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Shipping Agent Code",'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Zustellercode ist leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Shipping Agent Code",'%1','*-RG4');
      deb.SETFILTER(deb."Rech via EMail",'%1',FALSE);
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Zustellercode ist xxx-RG4 und kein H„kchen "Rech via Email" gesetzt!','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,deb."Betreuer Innendienst",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,deb."Shipping Agent Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
          IF deb."Rech via EMail" = FALSE THEN EnterCell(RowNo,6,'Kein H„kchen Rech via Email gesetzt!','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF deb."Original RE nicht drucken" = FALSE THEN EnterCell(RowNo,7,'Kein H„kchen "Original-RE nicht drucken" gesetzt!','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Shipping Agent Code",'%1','*-RG4');
      deb.SETFILTER(deb."Original RE nicht drucken",'%1',FALSE);
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Zustellercode ist xxx-RG4 und kein H„kchen "Original-RE nicht drucken" gesetzt!','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,deb."Betreuer Innendienst",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,deb."Shipping Agent Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Shipping Agent Code",'%1','*-RG4');
      IF deb.FIND('-') THEN BEGIN
        REPEAT
          Lief_adr.RESET;
          Lief_adr.SETFILTER(Lief_adr."Customer No.",'%1',deb."No.");
          Lief_adr.SETFILTER(Lief_adr."Shipping Agent Code",'<>%1&<>%2&<>%3&<>%4&<>%5&<>%6&<>%7&<>%8&<>%9&<>%10','UPS-RG4','UPS-RG5','DHL-RG4','ABH-RG4','FEDEX-RG4','TNT-RG4','EIGEN-RG4','DIREKT-RG4','FED-NE-RG4','UPS SA-RG4');
          IF Lief_adr.FIND('-') THEN BEGIN
            IF (deb."No." = '100101') AND (Lief_adr."Shipping Agent Code" = 'POST') THEN BEGIN
            END ELSE BEGIN
              IF (deb."No." = '103287') AND (Lief_adr."Shipping Agent Code" = 'UPS-RG5') THEN BEGIN
              END ELSE BEGIN
                IF (deb."No." = '738480') AND (Lief_adr."Shipping Agent Code" = 'EMAIL') THEN BEGIN
                END ELSE BEGIN
                  EnterCell(RowNo,1,'Zustellercode ist xxx-RG4 aber nicht in der Lieferadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  RowNo := RowNo +1;
                  REPEAT
                    EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                    EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,4,deb."Betreuer Innendienst",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,5,deb."Shipping Agent Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,6,Lief_adr."Shipping Agent Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,7,Lief_adr."Customer No.",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,8,Lief_adr.Code,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    RowNo := RowNo +1;
                  UNTIL Lief_adr.NEXT = 0;
                  RowNo := RowNo +1;
                END;
              END;
            END;
          END;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Country/Region Code",'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'L„ndercode ist leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Location Code",'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Lagerortcode ist leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Gesch„ftsbuchungsgruppe ist leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Territory Code",'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Gebietscode ist leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Shipment Method Code",'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Lieferbedingungscode ist leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Betreuer Innendienst",'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Betreuer Innendienst ist leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Reminder Terms Code",'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Mahnmethode ist leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Country/Region Code",'%1','DE');
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'%1','EU');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'L„ndercode DE und Gesch„ftsbuchungsgruppe EU stimmen nicht berein','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,deb."Gen. Bus. Posting Group",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,deb."Country/Region Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'%1','EU');
      deb.SETFILTER(deb."Country/Region Code",'%1|%2|%3|%4|%5|%6|%7|%8|%9','AT','BE','BG','CY','CZ','DK','EE','ES','FI');
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'<>%1','EU');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'L„ndercode XX und Gesch„ftsbuchungsgruppe EU stimmen nicht berein','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,deb."Gen. Bus. Posting Group",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,deb."Country/Region Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'%1','EU');
      deb.SETFILTER(deb."Country/Region Code",'%1|%2|%3|%4|%5|%6|%7|%8','FR','GR','HU','IE','IT','LT','LU','LV');
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'<>%1','EU');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'L„ndercode XX und Gesch„ftsbuchungsgruppe EU stimmen nicht berein','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,deb."Gen. Bus. Posting Group",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,deb."Country/Region Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'%1','EU');
      deb.SETFILTER(deb."Country/Region Code",'%1|%2|%3|%4|%5|%6|%7|%8','MT','NL','PL','PT','RO','SE','SI','SK');
      deb.SETFILTER(deb."Gen. Bus. Posting Group",'<>%1','EU');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'L„ndercode XX und Gesch„ftsbuchungsgruppe EU stimmen nicht berein','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,deb."Gen. Bus. Posting Group",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,deb."Country/Region Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb.Warenkreditversicherung,'%1','GEMELDET');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Kreditlimiteintr„ge stimmen bei "GEMELDET" nicht berein','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          OK := TRUE;
          IF ((deb."WKV-Info"='@') AND (deb."Credit Limit (LCY)"<>25000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='@@') AND (deb."Credit Limit (LCY)"<>50000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='@@@') AND (deb."Credit Limit (LCY)"<>100000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='0K') AND (deb."Credit Limit (LCY)"<>0)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='10K') AND (deb."Credit Limit (LCY)"<>10000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='nur 12K') AND (deb."Credit Limit (LCY)"<>12000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='12K') AND (deb."Credit Limit (LCY)"<>12000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='15K') AND (deb."Credit Limit (LCY)"<>15000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='20K') AND (deb."Credit Limit (LCY)"<>20000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='25K') AND (deb."Credit Limit (LCY)"<>25000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='30K') AND (deb."Credit Limit (LCY)"<>30000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='nur 30K - 04.01.2019') AND (deb."Credit Limit (LCY)"<>30000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='35K') AND (deb."Credit Limit (LCY)"<>35000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='40K') AND (deb."Credit Limit (LCY)"<>40000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='45K') AND (deb."Credit Limit (LCY)"<>45000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='50K') AND (deb."Credit Limit (LCY)"<>50000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='50K unver„ndert') AND (deb."Credit Limit (LCY)"<>50000)) THEN OK := FALSE;
          IF ((deb."WKV-Info"='60K') AND (deb."Credit Limit (LCY)"<>60000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='70K') AND (deb."Credit Limit (LCY)"<>70000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='75K') AND (deb."Credit Limit (LCY)"<>75000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='79K') AND (deb."Credit Limit (LCY)"<>79000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='80K') AND (deb."Credit Limit (LCY)"<>80000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='90K') AND (deb."Credit Limit (LCY)"<>90000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='100K') AND (deb."Credit Limit (LCY)"<>100000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='nur 100K - 02.01.2019') AND (deb."Credit Limit (LCY)"<>100000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='113K') AND (deb."Credit Limit (LCY)"<>113000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='125K') AND (deb."Credit Limit (LCY)"<>125000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='150K') AND (deb."Credit Limit (LCY)"<>150000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='180K') AND (deb."Credit Limit (LCY)"<>180000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='188K') AND (deb."Credit Limit (LCY)"<>188000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='200K') AND (deb."Credit Limit (LCY)"<>200000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='250K') AND (deb."Credit Limit (LCY)"<>250000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='nur 250K - 04.01.2019') AND (deb."Credit Limit (LCY)"<>250000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='300K') AND (deb."Credit Limit (LCY)"<>300000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='400K') AND (deb."Credit Limit (LCY)"<>400000)) THEN OK:=FALSE;
          IF OK = FALSE THEN BEGIN
            deb.CALCFIELDS(deb."Balance (LCY)");
            EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,deb.Warenkreditversicherung,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(deb."Credit Limit (LCY)"),'',TRUE,FALSE,FALSE,'###,###',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,deb."WKV-Info",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,7,FORMAT(deb."Balance (LCY)"),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
          END;
          IF ((deb."WKV-Info"='@') AND (deb."Credit Limit (LCY)"=25000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='@@') AND (deb."Credit Limit (LCY)"=50000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='@@@') AND (deb."Credit Limit (LCY)"=100000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='0K') AND (deb."Credit Limit (LCY)"=0)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='10K') AND (deb."Credit Limit (LCY)"=10000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='nur 12K') AND (deb."Credit Limit (LCY)"=12000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='12K') AND (deb."Credit Limit (LCY)"=12000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='15K') AND (deb."Credit Limit (LCY)"=15000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='20K') AND (deb."Credit Limit (LCY)"=20000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='25K') AND (deb."Credit Limit (LCY)"=25000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='30K') AND (deb."Credit Limit (LCY)"=30000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='nur 30K - 04.01.2019') AND (deb."Credit Limit (LCY)"=30000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='35K') AND (deb."Credit Limit (LCY)"=35000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='40K') AND (deb."Credit Limit (LCY)"=40000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='45K') AND (deb."Credit Limit (LCY)"=45000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='50K') AND (deb."Credit Limit (LCY)"=50000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='50K unver„ndert') AND (deb."Credit Limit (LCY)"=50000)) THEN OK := FALSE;
          IF ((deb."WKV-Info"='60K') AND (deb."Credit Limit (LCY)"=60000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='70K') AND (deb."Credit Limit (LCY)"=70000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='75K') AND (deb."Credit Limit (LCY)"=75000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='79K') AND (deb."Credit Limit (LCY)"=79000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='80K') AND (deb."Credit Limit (LCY)"=80000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='90K') AND (deb."Credit Limit (LCY)"=90000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='100K') AND (deb."Credit Limit (LCY)"=100000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='nur 100K - 02.01.2019') AND (deb."Credit Limit (LCY)"=100000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='113K') AND (deb."Credit Limit (LCY)"=113000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='125K') AND (deb."Credit Limit (LCY)"=125000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='150K') AND (deb."Credit Limit (LCY)"=150000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='180K') AND (deb."Credit Limit (LCY)"=180000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='188K') AND (deb."Credit Limit (LCY)"=188000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='200K') AND (deb."Credit Limit (LCY)"=200000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='250K') AND (deb."Credit Limit (LCY)"=250000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='nur 250K - 04.01.2019') AND (deb."Credit Limit (LCY)"=250000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='300K') AND (deb."Credit Limit (LCY)"=300000)) THEN OK:=FALSE;
          IF ((deb."WKV-Info"='400K') AND (deb."Credit Limit (LCY)"=400000)) THEN OK:=FALSE;

          IF OK=TRUE THEN BEGIN
            IF deb."WKV-Info"<>'' THEN BEGIN
              EnterCell(RowNo,1,'Programmabfrage einfgen mit','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,deb."WKV-Info",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              RowNo := RowNo +1;
            END;
          END;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."Credit Limit (LCY)",'>%1', 14000);
      deb.SETFILTER(deb.Warenkreditversicherung,'%1','');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Kreditlimiteintr„ge ber 14.000 ohne GEMELDET oder UNVERSICHERT','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          deb.CALCFIELDS(deb."Balance (LCY)");
          EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,deb.Warenkreditversicherung,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(deb."Credit Limit (LCY)"),'',TRUE,FALSE,FALSE,'###,###',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,6,deb."WKV-Info",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(deb."Balance (LCY)"),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo +1;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;

      deb.RESET;
      deb.SETFILTER(deb."No.",'<>%1','0');
      IF deb.FIND('-') THEN BEGIN
        EnterCell(RowNo,1,'Saldo gr”áer Kreditlimit','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +1;
        REPEAT
          deb.CALCFIELDS(deb."Balance (LCY)");
          IF deb."Balance (LCY)" > deb."Credit Limit (LCY)" THEN BEGIN
            EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,2,deb.Name,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,deb."Salesperson Code",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,deb.Warenkreditversicherung,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(deb."Credit Limit (LCY)"),'',TRUE,FALSE,FALSE,'###,###',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,deb."WKV-Info",'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,7,FORMAT(deb."Balance (LCY)"),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
          END;
        UNTIL deb.NEXT = 0;
        RowNo := RowNo +1;
      END;
      RowNo := RowNo +1;

      CloseExcel('Debitorberprfung','Debitorberprfung','F:\Daten Neu\User\Uwe\Navision_2016');
    END;

    LOCAL PROCEDURE Differenzen_ermitteln_Neu@1000000016();
    BEGIN
      // ANFANG zurcksetzen Status auf NN zwecks Programmtests
      //        kann bei Echtbetrieb unterbleiben!!!
      MESSAGE('JOB wurde ordnungsgem„á gestartet.');
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'NN';
          tab_ab_bw.Stat_Artikel := 'NN';
          tab_ab_bw.Stat_Menge := 'NN';
          tab_ab_bw.Stat_EK := 'NN';
          tab_ab_bw.Stat_VK := 'NN';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'NN';
          tab_ab_bw.Stat_Artikel := 'NN';
          tab_ab_bw.Stat_Menge := 'NN';
          tab_ab_bw.Stat_EK := 'NN';
          tab_ab_bw.Stat_VK := 'NN';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      // ENDE zurcksetzen Status auf NN zwecks Programmtests


      //  ANFANG Vergleich zwischen NEU und ALT (tab_ab_bw=NEU  und prf=ALT)
      //  ANFANG Diff. feststellen Artikel, Menge, EK, VK
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          prf.RESET;
          prf.SETFILTER(Belegart,'%1','AUšW');
          prf.SETFILTER(AU_Nr,'%1',tab_ab_bw.AU_Nr);
          prf.SETFILTER(POS_Nr,'%1',tab_ab_bw.POS_Nr);
          prf.SETFILTER(Art,'%1','ALT');
          IF prf.FINDFIRST THEN BEGIN
            IF prf.Artikel = tab_ab_bw.Artikel THEN BEGIN
              tab_ab_bw.Stat_Artikel := 'OK';
              prf.Stat_Artikel := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Artikel := 'AF';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_Artikel := 'AF';
              prf.Status := 'ŽN';
            END;

            IF prf.Menge = tab_ab_bw.Menge THEN BEGIN
              tab_ab_bw.Stat_Menge := 'OK';
              prf.Stat_Menge := 'OK';
              // ANFANG  Rechnungsmengenprfung bei Menge OK
              IF prf.Restmenge <> tab_ab_bw.Restmenge THEN BEGIN
                tab_ab_bw.Stat_Menge := 'MR';
                tab_ab_bw.Status := 'ŽN';
                prf.Stat_Menge := 'MR';
                prf.Status := 'ŽN';
              END;
              // ENDE  Rechnungsmengenprfung bei Menge OK
            END ELSE BEGIN
              tab_ab_bw.Stat_Menge := 'MF';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_Menge := 'MF';
              prf.Status := 'ŽN';
            END;

            IF prf.Restmenge <> tab_ab_bw.Restmenge THEN BEGIN
              tab_ab_bw.Stat_Menge := 'MR';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_Menge := 'MR';
              prf.Status := 'ŽN';
            END;

            IF prf.EK = tab_ab_bw.EK THEN BEGIN
              tab_ab_bw.Stat_EK := 'OK';
              prf.Stat_EK := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_EK := 'EF';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_EK := 'EF';
              prf.Status := 'ŽN';
            END;

            IF prf.VK=tab_ab_bw.VK THEN BEGIN
              tab_ab_bw.Stat_VK := 'OK';
              prf.Stat_VK := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_VK := 'VF';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_VK := 'VF';
              prf.Status := 'ŽN';
            END;

            IF prf.W„hrungscode <> tab_ab_bw.W„hrungscode THEN BEGIN
              tab_ab_bw.Stat_VK := 'WŽ';
              tab_ab_bw.Status := 'ŽN';
              prf.Status := 'ŽN';
              prf.Stat_VK := 'WŽ';
            END;

            tab_ab_bw.MODIFY;
            prf.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE Diff. feststellen Artikel, Menge, EK, VK
      //  ANFANG Status auf OK setzen, wenn keine Abweichnung vorliegt
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(Stat_Artikel,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_Menge,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_EK,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_VK,'%1','OK');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'OK';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Stat_Artikel,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_Menge,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_EK,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_VK,'%1','OK');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'OK';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE   Status auf OK setzen, wenn keine Abweichnung vorliegt

      //  ANFANG Feststellen, ob neuer Auftrag/Pos vorliegt
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(Status,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          prf.RESET;
          tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
          prf.SETFILTER(Art,'%1','ALT');
          prf.SETFILTER(AU_Nr,'%1',tab_ab_bw.AU_Nr);
          IF prf.FINDFIRST THEN BEGIN
            //  Neue Position zu altem Auftrag
            tab_ab_bw.Status := 'NP';
            tab_ab_bw.MODIFY;
          END ELSE BEGIN
            //  Neuer Auftrag
            tab_ab_bw.Status := 'NA';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE   Feststellen, ob neuer Auftrag/Pos vorliegt

      // ANFANG  Feststellen, ob ein Auftrag/Pos storniert wurde
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Status,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          var_re_menge := 0;
          rech.RESET;
          rech.SETFILTER("Order No.",'%1',tab_ab_bw.AU_Nr);
          // Rechnungsmenge ohne laufender Tag *********************************
          rech.SETFILTER("Posting Date",'<%1',WORKDATE);
          rech.SETFILTER("Order Line No.",'%1',tab_ab_bw.POS_Nr);
          IF rech.FIND('-') THEN BEGIN
            REPEAT
              tab_ab_bw.Status := 'ST';
              tab_ab_bw.MODIFY;
              var_re_menge := var_re_menge + rech.Quantity;
            UNTIL rech.NEXT = 0;
            IF var_re_menge > 0 THEN tab_ab_bw.Status := 'RE';
            tab_ab_bw.re_menge := var_re_menge;
            tab_ab_bw.MODIFY;
            var_re_menge:=0;
          END ELSE BEGIN
            //  Storno der Zeile
            tab_ab_bw.Status := 'ST';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;


      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Status,'%1','ŽN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          var_re_menge := 0;
          rech.RESET;
          rech.SETFILTER("Order No.",'%1',tab_ab_bw.AU_Nr);
          // Rechnungsmenge ohne laufender Tag *********************************
          rech.SETFILTER("Posting Date",'<%1',WORKDATE);
          rech.SETFILTER("Order Line No.",'%1',tab_ab_bw.POS_Nr);
          IF rech.FIND('-') THEN BEGIN
            REPEAT
              var_re_menge := var_re_menge+rech.Quantity;
            UNTIL rech.NEXT = 0;
            IF var_re_menge > 0 THEN tab_ab_bw.Status := 'RE';
            tab_ab_bw.re_menge := var_re_menge;
            tab_ab_bw.MODIFY;
            var_re_menge:=0;
          END ELSE BEGIN
            //  Storno der Zeile
            tab_ab_bw.Status := 'ST';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(Status,'%1','ŽN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          var_re_menge := 0;
          rech.RESET;
          rech.SETFILTER("Order No.",'%1',tab_ab_bw.AU_Nr);
          // Rechnungsmenge ohne laufender Tag *********************************
          rech.SETFILTER("Posting Date",'<%1',WORKDATE);
          rech.SETFILTER("Order Line No.",'%1',tab_ab_bw.POS_Nr);
          IF rech.FIND('-') THEN BEGIN
            REPEAT
              var_re_menge := var_re_menge + rech.Quantity;
            UNTIL rech.NEXT = 0;
            IF var_re_menge > 0 THEN tab_ab_bw.Status := 'RE';
            tab_ab_bw.re_menge := var_re_menge;
            tab_ab_bw.MODIFY;
            var_re_menge := 0;
          END ELSE BEGIN
            //  Storno der Zeile
            tab_ab_bw.Status := 'ST';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      // ENDE    Feststellen, ob ein Auftrag/Pos storniert wurde

      // ANFANG  Feststellen, ob RE_Mengen mit AU_Mengen bereinstimmen
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Status,'%1','RE');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.Menge = tab_ab_bw.re_menge THEN BEGIN
            tab_ab_bw.Status := 'OK';
          END ELSE BEGIN
            tab_ab_bw.Status := 'GP';
          END;
          IF tab_ab_bw.Restmenge = 0 THEN BEGIN
            tab_ab_bw.Status := 'FA';
          END;
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //   ENDE  Feststellen, ob RE_Mengen mit AU_Mengen bereinstimmen


      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Status,'%1','FA');
      tab_ab_bw.SETFILTER(Stat_Menge,'%1','NN');
      tab_ab_bw.SETFILTER(Stat_Artikel,'%1','NN');
      tab_ab_bw.SETFILTER(Stat_EK,'%1','NN');
      tab_ab_bw.SETFILTER(Stat_VK,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.re_menge = tab_ab_bw.Menge THEN BEGIN
            tab_ab_bw.Status := 'OK';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(Status,'%1','RE');
      tab_ab_bw.SETFILTER(Stat_Menge,'%1','MR');
      tab_ab_bw.SETFILTER(Stat_Artikel,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_EK,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_VK,'%1','OK');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF ((tab_ab_bw.re_menge = tab_ab_bw.Menge) AND (tab_ab_bw.Restmenge = 0)) THEN BEGIN
            tab_ab_bw.Status := 'OK';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE   Vergleich zwischen NEU und ALT

      //  ANFANG Differenzen in AEmtl bernehmen
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(Status,'%1|%2|%3|%4|%5|%6|%7', 'NP', 'ŽN', 'ST', 'GP', 'FA', 'RE','WŽ');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          AE_mtl.INIT;
          AE_mtl.Datum := tab_ab_bw.Datum;
          AE_mtl.AU_Nr := tab_ab_bw.AU_Nr;
          AE_mtl.POS_Nr := tab_ab_bw.POS_Nr;
          AE_mtl.Belegart := 'AEND';
          AE_mtl.Debitor := tab_ab_bw.Debitor;
          AE_mtl.Deb_Nr := tab_ab_bw.Deb_Nr;
          AE_mtl.Artikel := tab_ab_bw.Artikel;
          AE_mtl.Menge := tab_ab_bw.Menge;
          AE_mtl.Restmenge := tab_ab_bw.Restmenge;
          AE_mtl.EK := tab_ab_bw.EK;
          AE_mtl.VK := tab_ab_bw.VK;
          AE_mtl."Best„tigt LD" := tab_ab_bw."Best„tigt LD";
          AE_mtl.Wunschdatum := tab_ab_bw.Wunschdatum;
          AE_mtl.Status := 'AE';
          AE_mtl.Art := 'TAG';
          AE_mtl."EK Gesamt" := tab_ab_bw."EK Gesamt";
          AE_mtl."VK Gesamt" := tab_ab_bw."VK Gesamt";
          AE_mtl.Lager := tab_ab_bw.Lager;
          AE_mtl."DB %" := tab_ab_bw."DB %";
          AE_mtl.Linie := tab_ab_bw.Linie;
          AE_mtl.Endkunde := tab_ab_bw.Endkunde;
          AE_mtl.W„hrungscode := tab_ab_bw.W„hrungscode;
          AE_mtl.w„_faktor := tab_ab_bw.w„_faktor;
          AE_mtl.Auftragsdatum := tab_ab_bw.Auftragsdatum;
          AE_mtl.Betreuer := tab_ab_bw.Betreuer;
          AE_mtl.Vertreter := tab_ab_bw.Vertreter;
          AE_mtl.Teams := tab_ab_bw.Teams;
          AE_mtl.Gebietscode := tab_ab_bw.Gebietscode;
          AE_mtl.PLZ := tab_ab_bw.Plz;
          AE_mtl."AU aus Rahmen" := tab_ab_bw."AU aus Rahmen";
          IF AE_mtl.w„_faktor = 0 THEN BEGIN
            AE_mtl."Betrag in EUR" := AE_mtl."VK Gesamt";
          END ELSE BEGIN
            AE_mtl."Betrag in EUR":= (AE_mtl."VK Gesamt"/AE_mtl.w„_faktor);
          END;
          AE_mtl.INSERT;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Auftragsberwachung  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Pos-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Debitor','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Lager','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'EK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'VK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Status','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Art Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Menge Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'EK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'VK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'WŽ-Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'W„ Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'RE Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'urspr AU-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      var_AU_Nr := 'AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(Status,'%1|%2|%3|%4|%5|%6|%7', 'NP','ŽN','ST','GP','FA','RE','WŽ');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.AU_Nr = var_AU_Nr THEN BEGIN
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,tab_ab_bw.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,tab_ab_bw.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,tab_ab_bw.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,tab_ab_bw.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,tab_ab_bw.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,tab_ab_bw.Stat_Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,tab_ab_bw.Stat_Menge,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF tab_ab_bw.Stat_VK='WŽ' THEN EnterCell(RowNo,17,'WŽ-Fehler','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,18,tab_ab_bw.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
          END ELSE BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,tab_ab_bw.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,tab_ab_bw.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,tab_ab_bw.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,tab_ab_bw.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,tab_ab_bw.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,tab_ab_bw.Stat_Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,tab_ab_bw.Stat_Menge,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF tab_ab_bw.Stat_VK='WŽ' THEN EnterCell(RowNo,17,'WŽ-Fehler','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,18,tab_ab_bw.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
            var_AU_Nr := tab_ab_bw.AU_Nr;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      Pfad_tag := FORMAT(DATE2DMY(AE_holen_Datum_1,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      CloseExcel('Diff'+Pfaddatum,'Diff'+Pfaddatum,'F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022');
    END;

    LOCAL PROCEDURE Nur_Diff_AB_ausgeben@1000000017();
    BEGIN
      // ANFANG Differenzen in Excel ausgeben
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Auftragsberwachung  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Pos-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Debitor','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Lager','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'EK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'VK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Status','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Art Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Menge Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'EK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'VK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'WŽ-Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'W„ Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'RE Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'urspr AU-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      var_AU_Nr := 'AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(Status,'%1|%2|%3|%4|%5|%6|%7', 'NP','ŽN','ST','GP','FA','RE','WŽ');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.AU_Nr = var_AU_Nr THEN BEGIN
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',TRUE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,tab_ab_bw.Debitor,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,tab_ab_bw.Artikel,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,tab_ab_bw.Lager,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.EK),'',TRUE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(tab_ab_bw.VK),'',TRUE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,tab_ab_bw.Art,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,tab_ab_bw.Status,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,tab_ab_bw.Stat_Artikel,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,tab_ab_bw.Stat_Menge,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_EK),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_VK),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF tab_ab_bw.Stat_VK='WŽ' THEN EnterCell(RowNo,17,'WŽ-Fehler','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,18,tab_ab_bw.W„hrungscode,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.w„_faktor),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.re_menge),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(tab_ab_bw.Auftragsdatum),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
          END ELSE BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',TRUE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,tab_ab_bw.Debitor,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,tab_ab_bw.Artikel,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,tab_ab_bw.Lager,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.EK),'',TRUE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(tab_ab_bw.VK),'',TRUE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,tab_ab_bw.Art,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,tab_ab_bw.Status,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,tab_ab_bw.Stat_Artikel,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,tab_ab_bw.Stat_Menge,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_EK),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_VK),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF tab_ab_bw.Stat_VK='WŽ' THEN EnterCell(RowNo,17,'WŽ-Fehler','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,18,tab_ab_bw.W„hrungscode,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.w„_faktor),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.re_menge),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(tab_ab_bw.Auftragsdatum),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
            var_AU_Nr := tab_ab_bw.AU_Nr;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      Pfad_tag := FORMAT(DATE2DMY(AE_holen_Datum_1,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      CloseExcel('Test_Diff'+Pfaddatum,'Test_Diff'+Pfaddatum,'F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022');
    END;

    LOCAL PROCEDURE WŽ_Abstimmung@1000000018();
    BEGIN
      CreateExcel;
      RecNo := 0;

      //šberschriften
      EnterCell(1,1,'W„hrungsabstimmung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,2,'EUR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,3,'USD','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,4,'JPY','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,5,'GBP','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,6,'Stand:','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,7,FORMAT(WORKDATE),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);

      EnterCell(3,1,'Verbindlichkeiten: ','',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,1,'offene Kreditoren-Postem: ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,1,'offene Bestell-Restmengen: ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,1,'noch nicht fakturierte Zug„nge: ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(7,1,'noch nicht bestellte Waren: ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,1,'sonstige Verbindlichkeiten: ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,1,'Forderungen: ','',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,1,'Bankkonten (nur laufende): ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,1,'Termindevisen: ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(13,1,'offene Debitoren-Posten: ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(14,1,'offene Auftrags-Restmengen: ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(15,1,'offene Rahmen-Restmengen: ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(16,1,'Provisionen: ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(17,1,'sonstige Forderungen: ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      // offene Kreditorenposten *********************************************************************************************************
      Kredpost.RESET;
      Kredpost.SETFILTER(Kredpost."Remaining Amount",'<>%1',0);
      Kredpost.SETFILTER(Kredpost."Currency Code",'%1','');
      IF Kredpost.FIND('-') THEN BEGIN
        REPEAT
          Kredpost.CALCFIELDS("Remaining Amount");
          saldo_sum:=saldo_sum + Kredpost."Remaining Amount";
        UNTIL Kredpost.NEXT=0;

        EnterCell(4,2,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;

      Kredpost.RESET;
      Kredpost.SETFILTER(Kredpost."Remaining Amount",'<>%1',0);
      Kredpost.SETFILTER(Kredpost."Currency Code",'%1','USD');
      IF Kredpost.FIND('-') THEN BEGIN
        REPEAT
          Kredpost.CALCFIELDS("Remaining Amount");
          saldo_sum:=saldo_sum + Kredpost."Remaining Amount";
        UNTIL Kredpost.NEXT=0;
        EnterCell(4,3,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;

      Kredpost.RESET;
      Kredpost.SETFILTER(Kredpost."Remaining Amount",'<>%1',0);
      Kredpost.SETFILTER(Kredpost."Currency Code",'%1','JPY');
      IF Kredpost.FIND('-') THEN BEGIN
        REPEAT
          Kredpost.CALCFIELDS("Remaining Amount");
          saldo_sum:=saldo_sum + Kredpost."Remaining Amount";
        UNTIL Kredpost.NEXT=0;
        EnterCell(4,4,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;

      Kredpost.RESET;
      Kredpost.SETFILTER(Kredpost."Remaining Amount",'<>%1',0);
      Kredpost.SETFILTER(Kredpost."Currency Code",'%1','GBP');
      IF Kredpost.FIND('-') THEN BEGIN
        REPEAT
          Kredpost.CALCFIELDS("Remaining Amount");
          saldo_sum:=saldo_sum + Kredpost."Remaining Amount";
        UNTIL Kredpost.NEXT=0;
        EnterCell(4,5,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;
      // Ende offene Kreditorenposten ****************************************************************************************************

      // Anfang offene Bestell-Restmengen ************************************************************************************************
      ekz.RESET;
      ekz.SETFILTER(ekz."Outstanding Amount",'<>%1',0);
      ekz.SETFILTER(ekz."Currency Code",'%1','');
      ekz.SETFILTER(ekz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF ekz.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=saldo_sum + ekz."Outstanding Amount";
        UNTIL ekz.NEXT=0;
        EnterCell(5,2,FORMAT(saldo_sum*(-1)),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;

      ekz.RESET;
      // **********************************************************
      //ekz.SETFILTER(ekz."Document No.",'%1','BET307185');
      // **********************************************************
      ekz.SETFILTER(ekz."Outstanding Amount",'<>%1',0);
      ekz.SETFILTER(ekz."Currency Code",'%1','USD');
      ekz.SETFILTER(ekz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF ekz.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=saldo_sum + ekz."Outstanding Amount";
        UNTIL ekz.NEXT=0;
        EnterCell(5,3,FORMAT(saldo_sum*(-1)),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;

      ekz.RESET;
      ekz.SETFILTER(ekz."Outstanding Amount",'<>%1',0);
      ekz.SETFILTER(ekz."Currency Code",'%1','JPY');
      ekz.SETFILTER(ekz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF ekz.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=saldo_sum + ekz."Outstanding Amount";
        UNTIL ekz.NEXT=0;
        EnterCell(5,4,FORMAT(saldo_sum*(-1)),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;

      ekz.RESET;
      ekz.SETFILTER(ekz."Outstanding Amount",'<>%1',0);
      ekz.SETFILTER(ekz."Currency Code",'%1','GBP');
      ekz.SETFILTER(ekz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF ekz.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=saldo_sum + ekz."Outstanding Amount";
        UNTIL ekz.NEXT=0;
        EnterCell(5,5,FORMAT(saldo_sum*(-1)),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;
      // Ende offene Bestell-Restmengen **************************************************************************************************

      //  Anfang noch nicht bestellte Waren  *********************************************************************************************
      Artikel.RESET;
      Artikel.SETFILTER(Artikel.Blocked,'%1',FALSE);
      IF Artikel.FIND('-') THEN BEGIN
        REPEAT
          // Lagermenge holen
          v_druck_art:=0;
          v_FLmenge:=0;
          v_FLwert:=0;
          v_bewert:=0;
          v_ab_bestand:=0;
          v_ab_menge:=0;
          v_bb_bestand:=0;
          v_ek_preis:=0;
          v_au_wert:=0;
          v_aur_wert:=0;
          v_lager_wert:=0;
          v_best_wert:=0;
          Artikelposten.RESET;
          Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
          Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'>%1',0);
          Artikelposten.SETFILTER(Artikelposten."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          IF Artikelposten.FINDFIRST THEN BEGIN
            REPEAT
              Artikelposten.CALCFIELDS(Artikelposten."Cost Amount (Actual)");
              v_FLmenge:=(v_FLmenge +Artikelposten."Remaining Quantity");
              v_lager_wert:=v_lager_wert+((Artikelposten."Cost Amount (Actual)"/Artikelposten.Quantity)*(Artikelposten."Remaining Quantity"));
              v_druck_art:=1;
            UNTIL Artikelposten.NEXT=0;
          END;
          //  AB holen
          tab_ab.RESET;
          tab_ab.SETFILTER(tab_ab."No.",'%1',Artikel."No.");
          tab_ab.SETFILTER(tab_ab."Document Type",'%1',tab_ab."Document Type"::Order);
          tab_ab.SETFILTER(tab_ab."Outstanding Quantity",'>%1',0);
          tab_ab.SETFILTER(tab_ab.Type,'%1',tab_ab.Type::Item);
          tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          IF tab_ab.FIND('-') THEN BEGIN
            REPEAT
              v_ab_bestand:=v_ab_bestand+(tab_ab."Outstanding Quantity");
              v_au_wert:=v_au_wert + ((tab_ab."DC-Preis (EKW)")*(tab_ab."Outstanding Quantity"));
              v_druck_art:=1;
            UNTIL tab_ab.NEXT=0;
          END;
          //  AUR holen
          tab_ab.RESET;
          tab_ab.SETFILTER(tab_ab."No.",'%1',Artikel."No.");
          tab_ab.SETFILTER(tab_ab."Document Type",'%1',tab_ab."Document Type"::"Blanket Order");
          tab_ab.SETFILTER(tab_ab.Type,'%1',tab_ab.Type::Item);
          tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          IF tab_ab.FIND('-') THEN BEGIN
            REPEAT
              IF((tab_ab."Outstanding Quantity")-(tab_ab."offene Menge aus Rahmen im AU"))>1 THEN BEGIN
                tab_ab.CALCFIELDS(tab_ab."offene Menge aus Rahmen im AU");
                v_ab_menge:=v_ab_menge+((tab_ab."Outstanding Quantity")-(tab_ab."offene Menge aus Rahmen im AU"));
                v_aur_wert:=v_aur_wert+(((tab_ab."Outstanding Quantity")-(tab_ab."offene Menge aus Rahmen im AU"))*(tab_ab."DC-Preis (EKW)"));
              END;
              v_druck_art:=1;
            UNTIL tab_ab.NEXT=0;
          END;
          //  Bestellbestand holen
          ekz.RESET;
          ekz.SETFILTER(ekz."No.",'%1',Artikel."No.");
          ekz.SETFILTER(ekz."Outstanding Quantity",'>%1',0);
          ekz.SETFILTER(ekz."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          IF ekz.FIND('-') THEN BEGIN
            REPEAT
              v_bb_bestand:=v_bb_bestand+(ekz."Outstanding Quantity");
              v_best_wert:=v_best_wert+((ekz."Direct Unit Cost")*(ekz."Outstanding Quantity"));
              v_druck_art:=1;
            UNTIL ekz.NEXT=0;
          END;
          //  DC-Preise holen
          ek_preis.RESET;
          ek_preis.SETFILTER(ek_preis."Item No.",'%1',Artikel."No.");
          IF ek_preis.FINDFIRST THEN BEGIN
            v_ek_preis:=ek_preis."Direct Unit Cost";
            v_ek_w„:=ek_preis."Currency Code";
          END;
          IF v_druck_art=1 THEN BEGIN
            IF v_ek_preis=9999 THEN BEGIN
              IF v_FLwert>0 THEN BEGIN
                v_ek_preis:=v_FLwert;
              END ELSE BEGIN
                IF v_bewert>0 THEN BEGIN
                  v_ek_preis:=v_bewert;
                END;
              END;
            END;
            IF v_ek_w„='USD' THEN BEGIN
              IF v_ab_bestand+v_ab_menge-v_FLmenge-v_bb_bestand>0 THEN BEGIN
                v_usd_gesamt:=v_usd_gesamt+(v_au_wert+v_aur_wert-v_lager_wert-v_best_wert);
              END;
            END;
            IF v_ek_w„='JPY' THEN BEGIN
              IF v_ab_bestand+v_ab_menge-v_FLmenge-v_bb_bestand>0 THEN BEGIN
                v_jpy_gesamt:=v_jpy_gesamt+(v_au_wert+v_aur_wert-v_lager_wert-v_best_wert);
              END;
            END;
            IF v_ek_w„='GBP' THEN BEGIN
              IF v_ab_bestand+v_ab_menge-v_FLmenge-v_bb_bestand>0 THEN BEGIN
                v_gbp_gesamt:=v_gbp_gesamt+(v_au_wert+v_aur_wert-v_lager_wert-v_best_wert);
              END;
            END;
            IF v_ek_w„='' THEN BEGIN
              IF v_ab_bestand+v_ab_menge-v_FLmenge-v_bb_bestand>0 THEN BEGIN
                v_eur_gesamt:=v_eur_gesamt+(v_au_wert+v_aur_wert-v_lager_wert-v_best_wert);
              END;
            END;
          END;
        UNTIL Artikel.NEXT=0;
      END;
      EnterCell(7,2,FORMAT(v_eur_gesamt*(-1)),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      EnterCell(7,3,FORMAT(v_usd_gesamt*(-1)),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      EnterCell(7,4,FORMAT(v_jpy_gesamt*(-1)),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      EnterCell(7,5,FORMAT(v_gbp_gesamt*(-1)),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      //  Ende noch nicht bestellte Waren ************************************************************************************************


      // Anfang Bankkonten ***************************************************************************************************************
      //  EUR-Konten
      bankpos.RESET;
      bankpos.SETFILTER(bankpos."Bank Account No.",'%1|%2|%3|%4','1700','1810','1840','1860');
      IF bankpos.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=saldo_sum + bankpos.Amount;
        UNTIL bankpos.NEXT=0;
        EnterCell(11,2,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;
      //  USD-Konten
      bankpos.RESET;
      bankpos.SETFILTER(bankpos."Bank Account No.",'%1|%2','1820','1855');
      IF bankpos.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=saldo_sum + bankpos.Amount;
        UNTIL bankpos.NEXT=0;
        EnterCell(11,3,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;
      //  JPY-Konten
      bankpos.RESET;
      bankpos.SETFILTER(bankpos."Bank Account No.",'%1','1830');
      IF bankpos.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=saldo_sum + bankpos.Amount;
        UNTIL bankpos.NEXT=0;
        EnterCell(11,4,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;
      // Ende Bankkonten *****************************************************************************************************************

      // Anfang offene Debitoren-Posten **************************************************************************************************
      debpos.RESET;
      debpos.SETFILTER(debpos."Remaining Amount",'<>%1',0);
      debpos.SETFILTER(debpos."Currency Code",'%1','');
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          debpos.CALCFIELDS("Remaining Amount");
          saldo_sum:=saldo_sum + debpos."Remaining Amount";
        UNTIL debpos.NEXT=0;
        EnterCell(13,2,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;

      debpos.RESET;
      debpos.SETFILTER(debpos."Remaining Amount",'<>%1',0);
      debpos.SETFILTER(debpos."Currency Code",'%1','USD');
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          debpos.CALCFIELDS("Remaining Amount");
          saldo_sum:=saldo_sum + debpos."Remaining Amount";
        UNTIL debpos.NEXT=0;
        EnterCell(13,3,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;

      debpos.RESET;
      debpos.SETFILTER(debpos."Remaining Amount",'<>%1',0);
      debpos.SETFILTER(debpos."Currency Code",'%1','JPY');
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          debpos.CALCFIELDS("Remaining Amount");
          saldo_sum:=saldo_sum + debpos."Remaining Amount";
        UNTIL debpos.NEXT=0;
        EnterCell(13,4,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;

      debpos.RESET;
      debpos.SETFILTER(debpos."Remaining Amount",'<>%1',0);
      debpos.SETFILTER(debpos."Currency Code",'%1','GBP');
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          debpos.CALCFIELDS("Remaining Amount");
          saldo_sum:=saldo_sum + debpos."Remaining Amount";
        UNTIL debpos.NEXT=0;
        EnterCell(13,5,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;
      // Ende offene Debitoren-Posten ****************************************************************************************************

      // Anfang offene Auftrags-Positionen  **********************************************************************************************
      tab_ab.RESET;
      // **************************************************************
      //tab_ab.SETFILTER(tab_ab."Document No.",'%1','AU226690');
      // **************************************************************
      tab_ab.SETFILTER(tab_ab."Outstanding Amount",'<>%1',0);
      tab_ab.SETFILTER(tab_ab."Currency Code",'%1','');
      tab_ab.SETFILTER(tab_ab."Document Type",'%1',tab_ab."Document Type"::Order);
      tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      IF tab_ab.FIND('-') THEN BEGIN
        REPEAT
         saldo_sum:=saldo_sum + tab_ab."Outstanding Amount";
        UNTIL tab_ab.NEXT=0;
        EnterCell(14,2,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;
      tab_ab.RESET;
      // ***************************************************************
      //tab_ab.SETFILTER(tab_ab."Document No.",'%1','AU226374');
      // ***************************************************************
      tab_ab.SETFILTER(tab_ab."Outstanding Amount",'<>%1',0);
      tab_ab.SETFILTER(tab_ab."Currency Code",'%1','USD');
      tab_ab.SETFILTER(tab_ab."Document Type",'%1',tab_ab."Document Type"::Order);
      tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      IF tab_ab.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=saldo_sum + tab_ab."Outstanding Amount";
        UNTIL tab_ab.NEXT=0;
        EnterCell(14,3,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;
      tab_ab.RESET;
      tab_ab.SETFILTER(tab_ab."Outstanding Amount",'<>%1',0);
      tab_ab.SETFILTER(tab_ab."Currency Code",'%1','JPY');
      tab_ab.SETFILTER(tab_ab."Document Type",'%1',tab_ab."Document Type"::Order);
      tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      IF tab_ab.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=saldo_sum + tab_ab."Outstanding Amount";
        UNTIL tab_ab.NEXT=0;
        EnterCell(14,4,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;
      tab_ab.RESET;
      tab_ab.SETFILTER(tab_ab."Outstanding Amount",'<>%1',0);
      tab_ab.SETFILTER(tab_ab."Currency Code",'%1','GBP');
      tab_ab.SETFILTER(tab_ab."Document Type",'%1',tab_ab."Document Type"::Order);
      tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      IF tab_ab.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=saldo_sum + tab_ab."Outstanding Amount";
        UNTIL tab_ab.NEXT=0;
        EnterCell(14,5,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;
      // Ende   offene Auftrags-Positionen ***********************************************************************************************

      // Anfang offene Rahmen-Restpositionen *********************************************************************************************
      tab_ab.RESET;
      // **************************************************************
      //tab_ab.SETFILTER(tab_ab."Document No.",'%1','AUR200461');
      // **************************************************************
      tab_ab.SETFILTER(tab_ab."Outstanding Amount",'<>%1',0);
      tab_ab.SETFILTER(tab_ab."Currency Code",'%1','');
      tab_ab.SETFILTER(tab_ab."Document Type",'%1',tab_ab."Document Type"::"Blanket Order");
      tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      IF tab_ab.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab."VAT %"=19 THEN BEGIN
            tab_ab.CALCFIELDS("offene Menge aus Rahmen im AU");
            saldo_sum:=saldo_sum +((tab_ab."Outstanding Quantity"-tab_ab."offene Menge aus Rahmen im AU")*tab_ab."Unit Price"*1.19);
          END ELSE BEGIN
            tab_ab.CALCFIELDS("offene Menge aus Rahmen im AU");
            saldo_sum:=saldo_sum +((tab_ab."Outstanding Quantity"-tab_ab."offene Menge aus Rahmen im AU")*tab_ab."Unit Price");
          END;
        UNTIL tab_ab.NEXT=0;
        EnterCell(15,2,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;

      tab_ab.RESET;
      // ***********************************************************
      //tab_ab.SETFILTER(tab_ab."Document No.",'%1','AUR200510');
      // ***********************************************************
      tab_ab.SETFILTER(tab_ab."Outstanding Amount",'<>%1',0);
      tab_ab.SETFILTER(tab_ab."Currency Code",'%1','USD');
      tab_ab.SETFILTER(tab_ab."Document Type",'%1',tab_ab."Document Type"::"Blanket Order");
      tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      IF tab_ab.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab."VAT %"=19 THEN BEGIN
            tab_ab.CALCFIELDS("offene Menge aus Rahmen im AU");
            saldo_sum:=saldo_sum +((tab_ab."Outstanding Quantity"-tab_ab."offene Menge aus Rahmen im AU")*tab_ab."Unit Price"*1.19);
          END ELSE BEGIN
            tab_ab.CALCFIELDS("offene Menge aus Rahmen im AU");
            saldo_sum:=saldo_sum +((tab_ab."Outstanding Quantity"-tab_ab."offene Menge aus Rahmen im AU")*tab_ab."Unit Price");
          END;
        UNTIL tab_ab.NEXT=0;
        EnterCell(15,3,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;

      tab_ab.RESET;
      tab_ab.SETFILTER(tab_ab."Outstanding Amount",'<>%1',0);
      tab_ab.SETFILTER(tab_ab."Currency Code",'%1','JPY');
      tab_ab.SETFILTER(tab_ab."Document Type",'%1',tab_ab."Document Type"::"Blanket Order");
      tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      IF tab_ab.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab."VAT %"=19 THEN BEGIN
            tab_ab.CALCFIELDS("offene Menge aus Rahmen im AU");
            saldo_sum:=saldo_sum +((tab_ab."Outstanding Quantity"-tab_ab."offene Menge aus Rahmen im AU")*tab_ab."Unit Price"*1.19);
          END ELSE BEGIN
            tab_ab.CALCFIELDS("offene Menge aus Rahmen im AU");
            saldo_sum:=saldo_sum +((tab_ab."Outstanding Quantity"-tab_ab."offene Menge aus Rahmen im AU")*tab_ab."Unit Price");
          END;
        UNTIL tab_ab.NEXT=0;
        EnterCell(15,4,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      END;
      saldo_sum:=0;

      tab_ab.RESET;
      tab_ab.SETFILTER(tab_ab."Outstanding Amount",'<>%1',0);
      tab_ab.SETFILTER(tab_ab."Currency Code",'%1','GBP');
      tab_ab.SETFILTER(tab_ab."Document Type",'%1',tab_ab."Document Type"::"Blanket Order");
      tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      IF tab_ab.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab."VAT %"=19 THEN BEGIN
            tab_ab.CALCFIELDS("offene Menge aus Rahmen im AU");
            saldo_sum:=saldo_sum +((tab_ab."Outstanding Quantity"-tab_ab."offene Menge aus Rahmen im AU")*tab_ab."Unit Price"*1.19);
          END ELSE BEGIN
            tab_ab.CALCFIELDS("offene Menge aus Rahmen im AU");
            saldo_sum:=saldo_sum +((tab_ab."Outstanding Quantity"-tab_ab."offene Menge aus Rahmen im AU")*tab_ab."Unit Price");
          END;
        UNTIL tab_ab.NEXT=0;
        EnterCell(15,5,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      //  Sheet.Range('E16').Value := FORMAT(saldo_sum);
      END;

      saldo_sum:=0;
      // Ende   offene Rahmen-Restpositionen *********************************************************************************************

      CloseExcel('W„hrungsabstimmung','','');

      MESSAGE('Programm beendet');
    END;

    LOCAL PROCEDURE uwe@1000000019();
    BEGIN
      // berprft UB Stand 21.01.2019
      // ANFANG t„gliche Rechnungsausg„nge aus Tabelle Belege als Gesamtsumme in Excel ausgeben

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Rechnungsausgang','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Betrag in EUR aus Tab Belege','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'4122','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'4407','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'4408','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'4416','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'4418','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Betrag Gesamt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;

      Beleg.RESET;
      Beleg.SETCURRENTKEY(Belegdatum,Belegart);
      Beleg.SETFILTER(Beleg.Belegdatum,'>=%1',010821D);
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      IF Beleg.FIND('-') THEN BEGIN
        AE_t„gl_datum := Beleg.Belegdatum;
        REPEAT
          IF AE_t„gl_datum = Beleg.Belegdatum THEN BEGIN
           IF Beleg.Belegart=Beleg.Belegart::Invoice THEN AE_t„gl_gesamt := AE_t„gl_gesamt + Beleg."Betrag MW ohne Mwst.";
           IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN AE_t„gl_gesamt := AE_t„gl_gesamt + (Beleg."Betrag MW ohne Mwst."*(-1));
          END ELSE BEGIN
            EnterCell(RowNo,1,FORMAT(AE_t„gl_datum),'',FALSE,FALSE,FALSE,'dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,FORMAT(AE_t„gl_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            AE_t„gl_gesamt := 0;
            //      AE_t„gl_gesamt := AE_t„gl_gesamt + Beleg."Betrag MW ohne Mwst.";
            IF Beleg.Belegart=Beleg.Belegart::Invoice THEN AE_t„gl_gesamt := AE_t„gl_gesamt + Beleg."Betrag MW ohne Mwst.";
            IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN AE_t„gl_gesamt := AE_t„gl_gesamt + (Beleg."Betrag MW ohne Mwst."*(-1));
            RowNo := RowNo +1;
          END;
        AE_t„gl_datum := Beleg.Belegdatum;
        UNTIL Beleg.NEXT = 0;
      END;
      CloseExcel('tgl_RE/GU_Salden','tgl_RE/GU_Salden','');
    END;

    LOCAL PROCEDURE t„glichen_AE_Saldo_abstimmen@1000000020();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Auftragsberwachung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Pos-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Debitor','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'EK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'VK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Status','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Art Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Menge Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'EK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'VK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'WŽ-Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'W„ Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'RE Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'urspr AU-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      {
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);
      CREATE(Excel,FALSE,TRUE);

      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('H:I').NumberFormat:='###.###,#####';
      Sheet.Range('L:M').NumberFormat:='###.###,##';
      Sheet.Range('Q:Q').NumberFormat:='###.###,####';

      Sheet.Range('A1').Value := 'Auftragsberwachung  '; // definiert die Beschriftung der berschriftszeile

      Sheet.Range('A2').Value := 'Datum';
      Sheet.Range('B2').Value := 'AU-Nr';
      Sheet.Range('C2').Value := 'Pos-Nr';
      Sheet.Range('D2').Value := 'Debitor';
      Sheet.Range('E2').Value := 'Artikel';
      Sheet.Range('F2').Value := 'Menge';
      Sheet.Range('G2').Value := 'Restmenge';
      Sheet.Range('H2').Value := 'EK';
      Sheet.Range('I2').Value := 'VK';
      Sheet.Range('J2').Value := 'Art';
      Sheet.Range('K2').Value := 'Status';
      Sheet.Range('L2').Value := 'Art Diff';
      Sheet.Range('M2').Value := 'Menge Diff';
      Sheet.Range('N2').Value := 'EK Diff';
      Sheet.Range('O2').Value := 'VK Diff';
      Sheet.Range('P2').Value := 'WŽ-Diff';
      Sheet.Range('Q2').Value := 'WŽ';
      Sheet.Range('R2').Value := 'W„ Kurs';
      Sheet.Range('S2').Value := 'RE Menge';
      Sheet.Range('T2').Value := 'urspr AU-Datum';
      j := '3';                                   // <- Import in excel ab Zeile 3

      var_AU_Nr:='AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1|%2|%3|%4|%5|%6|%7', 'NP','ŽN','ST','GP','FA','RE','WŽ');
      IF tab_ab_bw.FINDFIRST THEN BEGIN
      REPEAT
       IF tab_ab_bw.AU_Nr=var_AU_Nr THEN BEGIN
      }
      var_AU_Nr:='AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1|%2|%3|%4|%5|%6|%7', 'NP','ŽN','ST','GP','FA','RE','WŽ');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.AU_Nr=var_AU_Nr THEN BEGIN
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,FORMAT(tab_ab_bw.AU_Nr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,FORMAT(tab_ab_bw.Debitor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_ab_bw.Artikel),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(tab_ab_bw.Art),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,11,FORMAT(tab_ab_bw.Status),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,FORMAT(tab_ab_bw.Stat_Artikel),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,FORMAT(tab_ab_bw.Stat_Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            IF tab_ab_bw.Stat_VK='WŽ' THEN BEGIN
              EnterCell(RowNo,16,'WŽ-Fehler','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,17,FORMAT(tab_ab_bw.W„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,18,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
          END ELSE BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,FORMAT(tab_ab_bw.AU_Nr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,FORMAT(tab_ab_bw.Debitor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_ab_bw.Artikel),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(tab_ab_bw.Art),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,11,FORMAT(tab_ab_bw.Status),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,FORMAT(tab_ab_bw.Stat_Artikel),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,FORMAT(tab_ab_bw.Stat_Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            IF tab_ab_bw.Stat_VK='WŽ' THEN BEGIN
              EnterCell(RowNo,16,'WŽ-Fehler','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,17,FORMAT(tab_ab_bw.W„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,18,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
            var_AU_Nr :=tab_ab_bw.AU_Nr;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      Pfad_tag :=FORMAT(DATE2DMY(AE_holen_Datum_1,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;

      CloseExcel('Test_Diff'+Pfaddatum,'Test_Diff'+Pfaddatum,'F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022');
      MESSAGE(' Differenzen wurden ordnungsgem„á nach Excel exportiert. ');
      {
        Sheet.Range('A'+j).Value := tab_ab_bw.Datum;
        Sheet.Range('B'+j).Value := tab_ab_bw.AU_Nr;
        Sheet.Range('C'+j).Value := tab_ab_bw.POS_Nr;
        Sheet.Range('D'+j).Value := tab_ab_bw.Debitor;
        Sheet.Range('E'+j).Value := tab_ab_bw.Artikel;
        Sheet.Range('F'+j).Value := tab_ab_bw.Menge;
        Sheet.Range('G'+j).Value := tab_ab_bw.Restmenge;
        Sheet.Range('H'+j).Value := FORMAT(tab_ab_bw.EK);
        Sheet.Range('I'+j).Value := FORMAT(tab_ab_bw.VK);
        Sheet.Range('J'+j).Value := tab_ab_bw.Art;
        Sheet.Range('K'+j).Value := tab_ab_bw.Status;
        Sheet.Range('L'+j).Value := tab_ab_bw.Stat_Artikel;
        Sheet.Range('M'+j).Value := tab_ab_bw.Stat_Menge;
        Sheet.Range('N'+j).Value := tab_ab_bw.Stat_EK;
        Sheet.Range('O'+j).Value := tab_ab_bw.Stat_VK;
        IF tab_ab_bw.Stat_VK='WŽ' THEN BEGIN
        Sheet.Range('P'+j).Value := 'WŽ-Fehler';
        END;
        Sheet.Range('Q'+j).Value := tab_ab_bw.W„hrungscode;
        Sheet.Range('R'+j).Value := FORMAT(tab_ab_bw.w„_faktor);
        Sheet.Range('S'+j).Value := FORMAT(tab_ab_bw.re_menge);
        Sheet.Range('T'+j).Value := tab_ab_bw.Auftragsdatum;
        j := INCSTR(j);

       END ELSE BEGIN
        j := INCSTR(j);
        Sheet.Range('A'+j).Value := tab_ab_bw.Datum;
        Sheet.Range('B'+j).Value := tab_ab_bw.AU_Nr;
        Sheet.Range('C'+j).Value := tab_ab_bw.POS_Nr;
        Sheet.Range('D'+j).Value := tab_ab_bw.Debitor;
        Sheet.Range('E'+j).Value := tab_ab_bw.Artikel;
        Sheet.Range('F'+j).Value := tab_ab_bw.Menge;
        Sheet.Range('G'+j).Value := tab_ab_bw.Restmenge;
        Sheet.Range('H'+j).Value := FORMAT(tab_ab_bw.EK);
        Sheet.Range('I'+j).Value := FORMAT(tab_ab_bw.VK);
        Sheet.Range('J'+j).Value := tab_ab_bw.Art;
        Sheet.Range('K'+j).Value := tab_ab_bw.Status;
        Sheet.Range('L'+j).Value := tab_ab_bw.Stat_Artikel;
        Sheet.Range('M'+j).Value := tab_ab_bw.Stat_Menge;
        Sheet.Range('N'+j).Value := tab_ab_bw.Stat_EK;
        Sheet.Range('O'+j).Value := tab_ab_bw.Stat_VK;
        IF tab_ab_bw.Stat_VK='WŽ' THEN BEGIN
        Sheet.Range('P'+j).Value := 'WŽ-Fehler';
        END;
        Sheet.Range('Q'+j).Value := tab_ab_bw.W„hrungscode;
        Sheet.Range('R'+j).Value := FORMAT(tab_ab_bw.w„_faktor);
        Sheet.Range('S'+j).Value := FORMAT(tab_ab_bw.re_menge);
        Sheet.Range('T'+j).Value := tab_ab_bw.Auftragsdatum;
        j := INCSTR(j);
        var_AU_Nr :=tab_ab_bw.AU_Nr;
       END;
      UNTIL tab_ab_bw.NEXT = 0;
      END;

      Excel.Visible(TRUE);

      Pfad_tag :=FORMAT(DATE2DMY(AE_holen_Datum_1,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      Pfad:='F:\Daten Neu\User\Joachim\AB-Differenzen\2013_2014\Diff'+Pfaddatum+'.xlsx';

      IF ERASE(Pfad)THEN;
      Book._SaveAs(Pfad);

      MESSAGE(' Differenzen wurden ordnungsgem„á nach Excel exportiert. ');
      }
    END;

    LOCAL PROCEDURE Lieferpositionen_listen@1000000023();
    BEGIN

      // ANFANG Lieferpositionen fr einen Debitor aus Tabelle Verkaufslieferzeilen nach Excel ausgeben

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Lieferpositionen ab 1.7.2018 fr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      deb.RESET;
      deb.SETFILTER(deb."No.",'%1',v_deb_nr);
      IF deb.FINDFIRST THEN BEGIN
        EnterCell(RowNo,5,FORMAT(deb.Name),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      END;

      RowNo := 2;
      EnterCell(RowNo,1,'Deb-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Belegnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Zeilennr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Beschreibung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'VK-Preis','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Einstandspreis MW','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      tab_vklz.RESET;
      tab_vklz.SETFILTER(tab_vklz."Posting Date",'>%1',300618D);
      tab_vklz.SETFILTER(tab_vklz.Type,'%1|%2',tab_vklz.Type::Item,tab_vklz.Type::"G/L Account");
      tab_vklz.SETFILTER(tab_vklz."Sell-to Customer No.",'%1',v_deb_nr);
      tab_vklz.SETFILTER(tab_vklz.Quantity,'<>%1',0);
      IF tab_vklz.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,FORMAT(tab_vklz."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vklz."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(tab_vklz."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_vklz.Type),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vklz."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT(tab_vklz.Description),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(tab_vklz.Quantity),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(tab_vklz."Unit Price"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vklz."Unit Cost (LCY)"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL tab_vklz.NEXT = 0;
      END;
      CloseExcel('Lieferpositionen','Lieferpositionen','');
    END;

    LOCAL PROCEDURE Systemums„tze@1000000024();
    BEGIN
      // ANFANG Alle Systemums„tze ausgeben

      CreateExcel;
      //RowNo := 1;
      //EnterCell(RowNo,1,'Lieferpositionen ab 1.3.2019 fr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //  EnterCell(RowNo,5,FORMAT(deb.Name),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      RowNo := 1;
      EnterCell(RowNo,1,'Deb-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      deb.RESET;
      deb.SETFILTER(deb."No.",'%1','738480');
      //deb.SETFILTER(deb."No.",'%1',v_deb_nr);
      IF deb.FINDFIRST THEN BEGIN
        EnterCell(RowNo,2,'Deb-Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      END;
      EnterCell(RowNo,3,'Belegnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Zeilennr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Beschreibung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'VK-Preis','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'VK-Betrag','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Einstandspreis MW','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Einstand-Betrag','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'AU-Zeilen-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Artikel 2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Hersteller Code','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'Hersteller Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'Rech-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'Rech-Zeilen-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'leer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'SV-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'SV-Zeilen-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'SV-Art2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'SV-Haupt-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,25,'SV-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,26,'SV-Start-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,27,'SV-End-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,28,'SV-Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,29,'SV-Basis','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,30,'SV-Verl„ng','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,31,'Jahr/Monat','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,32,'Monat','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,33,'Jahr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,34,'GJ-Jahr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;

      beleghis.RESET;
      beleghis.SETFILTER(beleghis."Debitornr.",'%1','738480');
      beleghis.SETFILTER(beleghis.Belegart,'%1',beleghis.Belegart::"Sales Shipment");
      IF beleghis.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,FORMAT(beleghis."Debitornr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(beleghis."Belegnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(beleghis."Zeilennr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT(beleghis."Artikelnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(beleghis.Menge),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(beleghis."VK-Preis"),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,10,FORMAT(beleghis.Betrag),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,11,FORMAT(beleghis."Einstandspreis MW"),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,12,FORMAT(beleghis."Einstandspreis MW"*beleghis.Menge),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,13,FORMAT(beleghis."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(beleghis."Auftragszeilennr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,16,FORMAT(beleghis.Herstellercode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          herstell.RESET;
          herstell.SETFILTER(herstell.Code,'%1',beleghis.Herstellercode);
          IF herstell.FINDFIRST THEN BEGIN
            EnterCell(RowNo,17,FORMAT(herstell.Name),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          rech.RESET;
          rech.SETFILTER(rech."Order No.",'%1',beleghis."Auftragsnr.");
          rech.SETFILTER(rech."Order Line No.",'%1',beleghis."Auftragszeilennr.");
          rech.SETFILTER(rech.Quantity,'<>%1',0);
          IF rech.FINDFIRST THEN BEGIN
            EnterCell(RowNo,18,FORMAT(rech."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,19,FORMAT(rech."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          tab_service.RESET;
          tab_service.SETFILTER(tab_service."Nr.",'%1',beleghis."Belegnr.");
          tab_service.SETFILTER(tab_service."Belegzeilennr.",'%1',beleghis."Zeilennr.");
          IF tab_service.FINDFIRST THEN BEGIN
            EnterCell(RowNo,21,FORMAT(tab_service."Nr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,22,FORMAT(tab_service."Belegzeilennr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,23,FORMAT(tab_service."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,24,FORMAT(tab_service."Hauptwartungsvertragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,25,FORMAT(tab_service."Wartungsvertragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,26,FORMAT(tab_service.Lizenzdatum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,27,FORMAT(tab_service."Ablaufdatum Serviceleistung"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,28,FORMAT(tab_service.Art),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,29,FORMAT(tab_service.Basisger„t),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,30,FORMAT(tab_service.Verl„ngerung),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF tab_service.Lizenzdatum<>0D THEN BEGIN
              Jahr:=DATE2DMY(tab_service.Lizenzdatum,3);
              Monat:=DATE2DMY(tab_service.Lizenzdatum,2);
            END;
            IF Monat>6 THEN BEGIN
              JahrGJ:=(Jahr + 1);
            END ELSE BEGIN
              JahrGJ:=Jahr;
            END;
            IF ((Monat>0) AND (Monat<10)) THEN BEGIN
              EnterCell(RowNo,31,FORMAT(Jahr)+'/0'+FORMAT(Monat),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              EnterCell(RowNo,31,FORMAT(Jahr)+'/'+FORMAT(Monat),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            END;
            EnterCell(RowNo,32,FORMAT(Monat),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,33,FORMAT(Jahr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,34,FORMAT(JahrGJ),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          END;
          RowNo := RowNo +1;
        UNTIL beleghis.NEXT=0;
      END;

      tab_vklz.RESET;
      //tab_vklz.SETFILTER(tab_vklz."Posting Date",'>%1',010319D);
      tab_vklz.SETFILTER(tab_vklz."Sell-to Customer No.",'%1','738480');
      tab_vklz.SETFILTER(tab_vklz.Type,'%1|%2',tab_vklz.Type::Item,tab_vklz.Type::"G/L Account");
      //tab_vklz.SETFILTER(tab_vklz."Sell-to Customer No.",'%1',v_deb_nr);
      tab_vklz.SETFILTER(tab_vklz.Quantity,'<>%1',0);
      IF tab_vklz.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,FORMAT(tab_vklz."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(deb.Name),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(tab_vklz."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_vklz."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vklz.Type),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT(tab_vklz."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(tab_vklz.Description),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(tab_vklz.Quantity),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vklz."Unit Price"),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,10,FORMAT(tab_vklz."Unit Price"*tab_vklz.Quantity),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,11,FORMAT(tab_vklz."Unit Cost (LCY)"),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,12,FORMAT(tab_vklz."Unit Cost (LCY)"*tab_vklz.Quantity),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,13,FORMAT(tab_vklz."Order No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(tab_vklz."Order Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,15,FORMAT(tab_vklz."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,16,FORMAT(tab_vklz."Manufacturer Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          herstell.RESET;
          herstell.SETFILTER(herstell.Code,'%1',tab_vklz."Manufacturer Code");
          IF herstell.FINDFIRST THEN BEGIN
            EnterCell(RowNo,17,FORMAT(herstell.Name),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          rech.RESET;
          rech.SETFILTER(rech."Order No.",'%1',tab_vklz."Order No.");
          rech.SETFILTER(rech."Order Line No.",'%1',tab_vklz."Order Line No.");
          rech.SETFILTER(rech.Quantity,'<>%1',0);
          IF rech.FINDFIRST THEN BEGIN
            EnterCell(RowNo,18,FORMAT(rech."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,19,FORMAT(rech."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          tab_service.RESET;
          tab_service.SETFILTER(tab_service."Nr.",'%1',tab_vklz."Document No.");
          tab_service.SETFILTER(tab_service."Belegzeilennr.",'%1',tab_vklz."Line No.");
          IF tab_service.FINDFIRST THEN BEGIN
            EnterCell(RowNo,21,FORMAT(tab_service."Nr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,22,FORMAT(tab_service."Belegzeilennr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,23,FORMAT(tab_service."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,24,FORMAT(tab_service."Hauptwartungsvertragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,25,FORMAT(tab_service."Wartungsvertragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,26,FORMAT(tab_service.Lizenzdatum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,27,FORMAT(tab_service."Ablaufdatum Serviceleistung"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,28,FORMAT(tab_service.Art),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,29,FORMAT(tab_service.Basisger„t),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,30,FORMAT(tab_service.Verl„ngerung),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF tab_service.Lizenzdatum<>0D THEN BEGIN
              Jahr:=DATE2DMY(tab_service.Lizenzdatum,3);
              Monat:=DATE2DMY(tab_service.Lizenzdatum,2);
            END;
            IF Monat>6 THEN BEGIN
              JahrGJ:=(Jahr + 1);
            END ELSE BEGIN
              JahrGJ:=Jahr;
            END;
            IF ((Monat>0) AND (Monat<10)) THEN BEGIN
              EnterCell(RowNo,31,FORMAT(Jahr)+'/0'+FORMAT(Monat),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              EnterCell(RowNo,31,FORMAT(Jahr)+'/'+FORMAT(Monat),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            END;
            EnterCell(RowNo,32,FORMAT(Monat),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,33,FORMAT(Jahr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,34,FORMAT(JahrGJ),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            //      IF tab_service."Hauptwartungsvertragsnr."=tab_service."Wartungsvertragsnr." THEN BEGIN
            //        EnterCell(RowNo,27,'JA','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //      END ELSE BEGIN
            //        EnterCell(RowNo,27,'NEIN','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //        tab_service1.RESET;
            //        tab_service1.SETFILTER(tab_service1."Hauptwartungsvertragsnr.",'%1',tab_service."Hauptwartungsvertragsnr.");
            //        IF tab_service1.FINDFIRST THEN BEGIN
            //          REPEAT
            //            EnterCell(RowNo,27,FORMAT(tab_service."Ablaufdatum Serviceleistung"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //          UNTIL tab_service1.NEXT=0;
            //        END;
            //      END;
          END;
          RowNo := RowNo +1;
        UNTIL tab_vklz.NEXT = 0;
      END;
      CloseExcel('Servicepositionen','Servicepositionen','');
    END;

    LOCAL PROCEDURE Serviceums„tze@1000000025();
    BEGIN
      //PeriodStartDate[1] := 010718D;
      var_jahr[1] := 010710D;
      Abgrenz_Datum := 010718D;

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Champsvertr„ge Herstellercode 57 ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(4,2,'Start des GJ ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo:=2;

      FOR i:=1 TO 20 DO BEGIN
        var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);
        ColumnNo:=ColumnNo+1;
        EnterCell(4,ColumnNo,'GJ '+FORMAT(var_jahr[i]),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,4,'GJ '+FORMAT(var_jahr[2]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,5,'GJ '+FORMAT(var_jahr[3]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,6,'GJ '+FORMAT(var_jahr[4]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,7,'GJ '+FORMAT(var_jahr[5]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,8,'GJ '+FORMAT(var_jahr[6]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,9,'GJ '+FORMAT(var_jahr[7]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,10,'GJ '+FORMAT(var_jahr[8]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,11,'GJ '+FORMAT(var_jahr[9]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,12,'GJ '+FORMAT(var_jahr[10]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,13,'GJ '+FORMAT(var_jahr[11]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,14,'GJ '+FORMAT(var_jahr[12]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      END;

      //  Ende šberschriftenanlage
      RowNo := 5;
      tab_service.RESET;
      tab_service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      tab_service.SETFILTER(tab_service.Art,'%1',tab_service.Art::Service);
      tab_service.SETFILTER(tab_service.Inaktiv,'%1',FALSE);
      tab_service.SETFILTER(tab_service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      //tab_Service.SETFILTER(tab_Service."Hauptwartungsvertragsnr.",'%1|%2','SV101035','SV101119');
      IF tab_service.FIND('-') THEN BEGIN  //xx1
        REPEAT
          LZ_Rest:=0;
          Artikel.RESET;
          Artikel.SETFILTER(Artikel."No.",'%1',tab_service."SUP Artikelnr.");
          Artikel.SETFILTER(Artikel."Manufacturer Code",'%1','57');
          IF Artikel.FINDFIRST THEN BEGIN   //xx2
            tab_vklz.RESET;
            tab_vklz.SETFILTER(tab_vklz."Document No.",'%1',tab_service."Nr.");
            tab_vklz.SETFILTER(tab_vklz."Line No.",'%1',tab_service."Belegzeilennr.");
            tab_vklz.SETFILTER(tab_vklz.Quantity,'<>%1',0);
            tab_vklz.SETFILTER(tab_vklz."Manufacturer Code",'%1','57');
            tab_vklz.SETFILTER(tab_vklz."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
            IF tab_vklz.FINDFIRST THEN BEGIN  //xx3
              IF (liefnr=tab_vklz."Document No.") AND (liefzeilennr=tab_vklz."Line No.") THEN BEGIN   //xx4
              END ELSE BEGIN  //xx4_1
                liefnr:=tab_vklz."Document No.";
                liefzeilennr:=tab_vklz."Line No.";
                FOR i:=1 TO 20 DO BEGIN   //xx5
                  LZ_tage:= (tab_service."Ablaufdatum Serviceleistung"- tab_service.Lizenzdatum);
                  var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);
                  //          Gesamt im Jahr abgeschlossen
                  //          Hier wird das Buchungsdatum benutzt
                  IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                  var_jahr_gesamt[i]:=var_jahr_gesamt[i]+(tab_vklz.Quantity*tab_vklz."VK-Preis (MW)");
                  //          Ende Gesamt im Jahr abgeschlossen
                  //          Gesamt im Jahr neu abgeschlossen
                  IF tab_service.Verl„ngerung=FALSE THEN BEGIN   //xx6
                    IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_neu[i]:=var_jahr_neu[i]+(tab_vklz.Quantity*tab_vklz."VK-Preis (MW)");
                  END;   //xx6
                  //          Ende Gesamt im Jahr neu abgeschlossen
                  //          Gesamt im Jahr verl„ngert
                  IF tab_service.Verl„ngerung=TRUE THEN BEGIN   //xx7
                    IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_verl„ng[i]:=var_jahr_verl„ng[i]+(tab_vklz.Quantity*tab_vklz."VK-Preis (MW)");
                  END;   //xx7
                  //          Ende Gesamt im Jahr verl„ngert
                  //          Gesamt im Jahr abgelaufen
                  IF (tab_service."Ablaufdatum Serviceleistung">(var_jahr[i])) AND (tab_service."Ablaufdatum Serviceleistung"<(var_jahr[i]+365)) THEN
                  var_jahr_abgelauf[i]:=var_jahr_abgelauf[i]+(tab_vklz.Quantity*tab_vklz."VK-Preis (MW)");
                  //          Ende Gesamt im Jahr abgelaufen
                  //          Laufzeitenberechnung  ******************************************************************
                  IF ((tab_service.Lizenzdatum>=(var_jahr[i])) AND (tab_service.Lizenzdatum<=(var_jahr[i]+365))) THEN BEGIN   //xx8
                    LZ_tage_jahr[i]:=var_jahr[i]+365-tab_service.Lizenzdatum;
                    var_jahr_wert[i]:=var_jahr_wert[i]+((tab_vklz.Quantity*tab_vklz."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx8
                  IF (tab_service."Ablaufdatum Serviceleistung">(var_jahr[i]+365)) AND ((var_jahr[i])>tab_service.Lizenzdatum) THEN BEGIN   //xx9
                    LZ_tage_jahr[i]:=var_jahr[i]+365-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((tab_vklz.Quantity*tab_vklz."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx9
                  IF ((tab_service."Ablaufdatum Serviceleistung"-1>(var_jahr[i])) AND (tab_service."Ablaufdatum Serviceleistung"-1<(var_jahr[i]+365))) THEN BEGIN   //xx10
                    LZ_tage_jahr[i]:=tab_service."Ablaufdatum Serviceleistung"-1-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((tab_vklz.Quantity*tab_vklz."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx10
                  //          ENDE Laufzeitenberechnung ******************************************************************
                END;  //xx5
              END; //xx4_1
            END;   //xx11
            //
            beleghis.RESET;
            beleghis.SETFILTER("Belegnr.",'%1',tab_service."Nr.");
            beleghis.SETFILTER("Zeilennr.",'%1',tab_service."Belegzeilennr.");
            beleghis.SETFILTER(Herstellercode,'%1','57');
            beleghis.SETFILTER(beleghis."Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATEMENT_FEE');
            IF beleghis.FINDFIRST THEN BEGIN
              IF (liefnr = beleghis."Belegnr.") AND (liefzeilennr = beleghis."Zeilennr.") THEN BEGIN
              END ELSE BEGIN
                liefnr:=beleghis."Belegnr.";
                liefzeilennr:=beleghis."Zeilennr.";
                FOR i:=1 TO 20 DO BEGIN   //xx5
                  LZ_tage:= (tab_service."Ablaufdatum Serviceleistung"- tab_service.Lizenzdatum);
                  var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);

                  IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                  var_jahr_gesamt[i]:=var_jahr_gesamt[i]+(beleghis.Menge*beleghis."VK-Preis");

                  IF tab_service.Verl„ngerung=FALSE THEN BEGIN   //xx6
                    IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_neu[i]:=var_jahr_neu[i]+(beleghis.Menge*beleghis."VK-Preis");
                  END;   //xx6

                  IF tab_service.Verl„ngerung=TRUE THEN BEGIN   //xx7
                    IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_verl„ng[i]:=var_jahr_verl„ng[i]+(beleghis.Menge*beleghis."VK-Preis");
                  END;   //xx7

                  IF (tab_service."Ablaufdatum Serviceleistung">(var_jahr[i])) AND (tab_service."Ablaufdatum Serviceleistung"<(var_jahr[i]+365)) THEN
                  var_jahr_abgelauf[i]:=var_jahr_abgelauf[i]+(beleghis.Menge*beleghis."VK-Preis");

                  IF ((tab_service.Lizenzdatum>=(var_jahr[i])) AND (tab_service.Lizenzdatum<=(var_jahr[i]+365))) THEN BEGIN   //xx8
                    LZ_tage_jahr[i]:=var_jahr[i]+365-tab_service.Lizenzdatum;
                    var_jahr_wert[i]:=var_jahr_wert[i]+((beleghis.Menge*beleghis."VK-Preis")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx8
                  IF (tab_service."Ablaufdatum Serviceleistung">(var_jahr[i]+365)) AND ((var_jahr[i])>tab_service.Lizenzdatum) THEN BEGIN   //xx9
                    LZ_tage_jahr[i]:=var_jahr[i]+365-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((beleghis.Menge*beleghis."VK-Preis")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx9
                  IF ((tab_service."Ablaufdatum Serviceleistung"-1>(var_jahr[i])) AND (tab_service."Ablaufdatum Serviceleistung"-1<(var_jahr[i]+365))) THEN BEGIN   //xx10
                    LZ_tage_jahr[i]:=tab_service."Ablaufdatum Serviceleistung"-1-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((beleghis.Menge*beleghis."VK-Preis")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx10
                END;
              END;
            END;
          END;   //xx3
        UNTIL tab_service.NEXT=0;
      END;   //xx1
      RowNo := 6;
      EnterCell(RowNo,1,'Gesamt Jahr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_gesamt[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_gesamt[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_gesamt[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_gesamt[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_gesamt[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_gesamt[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_gesamt[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_gesamt[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_gesamt[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_gesamt[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_gesamt[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_gesamt[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_gesamt[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_gesamt[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_gesamt[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_gesamt[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_gesamt[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_gesamt[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_gesamt[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_gesamt[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 7;
      EnterCell(RowNo,1,'Gesamt Jahr neu','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_neu[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_neu[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_neu[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_neu[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_neu[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_neu[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_neu[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_neu[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_neu[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_neu[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_neu[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_neu[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_neu[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_neu[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_neu[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_neu[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_neu[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_neu[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_neu[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_neu[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 8;
      EnterCell(RowNo,1,'Gesamt Jahr verl„ngert','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_verl„ng[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_verl„ng[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_verl„ng[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_verl„ng[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_verl„ng[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_verl„ng[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_verl„ng[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_verl„ng[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 10;
      EnterCell(RowNo,1,'im Jahr ablaufend','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_abgelauf[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_abgelauf[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_abgelauf[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_abgelauf[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_abgelauf[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_abgelauf[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_abgelauf[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_abgelauf[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_abgelauf[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_abgelauf[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_abgelauf[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_abgelauf[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_abgelauf[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_abgelauf[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_abgelauf[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_abgelauf[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_abgelauf[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_abgelauf[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_abgelauf[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_abgelauf[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 12;
      EnterCell(RowNo,1,'Neu in % von Gesamt Jahr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_gesamt[1]<>0) AND (var_jahr_neu[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_neu[1]/var_jahr_gesamt[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[2]<>0) AND (var_jahr_neu[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_neu[2]/var_jahr_gesamt[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[3]<>0) AND (var_jahr_neu[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_neu[3]/var_jahr_gesamt[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[4]<>0) AND (var_jahr_neu[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_neu[4]/var_jahr_gesamt[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[5]<>0) AND (var_jahr_neu[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_neu[5]/var_jahr_gesamt[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[6]<>0) AND (var_jahr_neu[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_neu[6]/var_jahr_gesamt[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[7]<>0) AND (var_jahr_neu[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_neu[7]/var_jahr_gesamt[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[8]<>0) AND (var_jahr_neu[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_neu[8]/var_jahr_gesamt[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[9]<>0) AND (var_jahr_neu[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_neu[9]/var_jahr_gesamt[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[10]<>0) AND (var_jahr_neu[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_neu[10]/var_jahr_gesamt[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[11]<>0) AND (var_jahr_neu[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_neu[11]/var_jahr_gesamt[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[12]<>0) AND (var_jahr_neu[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_neu[12]/var_jahr_gesamt[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[13]<>0) AND (var_jahr_neu[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_neu[13]/var_jahr_gesamt[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[14]<>0) AND (var_jahr_neu[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_neu[14]/var_jahr_gesamt[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[15]<>0) AND (var_jahr_neu[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_neu[15]/var_jahr_gesamt[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[16]<>0) AND (var_jahr_neu[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_neu[16]/var_jahr_gesamt[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[17]<>0) AND (var_jahr_neu[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_neu[17]/var_jahr_gesamt[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[18]<>0) AND (var_jahr_neu[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_neu[18]/var_jahr_gesamt[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[19]<>0) AND (var_jahr_neu[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_neu[19]/var_jahr_gesamt[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[20]<>0) AND (var_jahr_neu[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_neu[20]/var_jahr_gesamt[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 13;
      EnterCell(RowNo,1,'Verl„ngert in % von Gesamt Jahr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_gesamt[1]<>0) AND (var_jahr_verl„ng[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]/var_jahr_gesamt[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[2]<>0) AND (var_jahr_verl„ng[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]/var_jahr_gesamt[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[3]<>0) AND (var_jahr_verl„ng[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]/var_jahr_gesamt[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[4]<>0) AND (var_jahr_verl„ng[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]/var_jahr_gesamt[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[5]<>0) AND (var_jahr_verl„ng[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]/var_jahr_gesamt[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[6]<>0) AND (var_jahr_verl„ng[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]/var_jahr_gesamt[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[7]<>0) AND (var_jahr_verl„ng[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]/var_jahr_gesamt[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[8]<>0) AND (var_jahr_verl„ng[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]/var_jahr_gesamt[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[9]<>0) AND (var_jahr_verl„ng[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]/var_jahr_gesamt[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[10]<>0) AND (var_jahr_verl„ng[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]/var_jahr_gesamt[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[11]<>0) AND (var_jahr_verl„ng[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]/var_jahr_gesamt[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[12]<>0) AND (var_jahr_verl„ng[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]/var_jahr_gesamt[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[13]<>0) AND (var_jahr_verl„ng[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_verl„ng[13]/var_jahr_gesamt[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[14]<>0) AND (var_jahr_verl„ng[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_verl„ng[14]/var_jahr_gesamt[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[15]<>0) AND (var_jahr_verl„ng[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_verl„ng[15]/var_jahr_gesamt[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[16]<>0) AND (var_jahr_verl„ng[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_verl„ng[16]/var_jahr_gesamt[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[17]<>0) AND (var_jahr_verl„ng[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_verl„ng[17]/var_jahr_gesamt[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[18]<>0) AND (var_jahr_verl„ng[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_verl„ng[18]/var_jahr_gesamt[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[19]<>0) AND (var_jahr_verl„ng[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_verl„ng[19]/var_jahr_gesamt[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[20]<>0) AND (var_jahr_verl„ng[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_verl„ng[20]/var_jahr_gesamt[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 14;
      EnterCell(RowNo,1,'Ablaufend in % von Gesamt Jahr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_gesamt[1]<>0) AND (var_jahr_abgelauf[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_abgelauf[1]/var_jahr_gesamt[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[2]<>0) AND (var_jahr_abgelauf[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_abgelauf[2]/var_jahr_gesamt[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[3]<>0) AND (var_jahr_abgelauf[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_abgelauf[3]/var_jahr_gesamt[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[4]<>0) AND (var_jahr_abgelauf[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_abgelauf[4]/var_jahr_gesamt[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[5]<>0) AND (var_jahr_abgelauf[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_abgelauf[5]/var_jahr_gesamt[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[6]<>0) AND (var_jahr_abgelauf[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_abgelauf[6]/var_jahr_gesamt[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[7]<>0) AND (var_jahr_abgelauf[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_abgelauf[7]/var_jahr_gesamt[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[8]<>0) AND (var_jahr_abgelauf[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_abgelauf[8]/var_jahr_gesamt[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[9]<>0) AND (var_jahr_abgelauf[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_abgelauf[9]/var_jahr_gesamt[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[10]<>0) AND (var_jahr_abgelauf[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_abgelauf[10]/var_jahr_gesamt[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[11]<>0) AND (var_jahr_abgelauf[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_abgelauf[11]/var_jahr_gesamt[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[12]<>0) AND (var_jahr_abgelauf[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_abgelauf[12]/var_jahr_gesamt[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[13]<>0) AND (var_jahr_abgelauf[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_abgelauf[13]/var_jahr_gesamt[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[14]<>0) AND (var_jahr_abgelauf[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_abgelauf[14]/var_jahr_gesamt[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[15]<>0) AND (var_jahr_abgelauf[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_abgelauf[15]/var_jahr_gesamt[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[16]<>0) AND (var_jahr_abgelauf[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_abgelauf[16]/var_jahr_gesamt[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[17]<>0) AND (var_jahr_abgelauf[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_abgelauf[17]/var_jahr_gesamt[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[18]<>0) AND (var_jahr_abgelauf[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_abgelauf[18]/var_jahr_gesamt[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[19]<>0) AND (var_jahr_abgelauf[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_abgelauf[19]/var_jahr_gesamt[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[20]<>0) AND (var_jahr_abgelauf[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_abgelauf[20]/var_jahr_gesamt[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 15;
      EnterCell(RowNo,1,'Verl„ngert in % von Ablaufend','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_verl„ng[1]<>0) AND (var_jahr_abgelauf[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]/var_jahr_abgelauf[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[2]<>0) AND (var_jahr_abgelauf[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]/var_jahr_abgelauf[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[3]<>0) AND (var_jahr_abgelauf[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]/var_jahr_abgelauf[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[4]<>0) AND (var_jahr_abgelauf[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]/var_jahr_abgelauf[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[5]<>0) AND (var_jahr_abgelauf[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]/var_jahr_abgelauf[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[6]<>0) AND (var_jahr_abgelauf[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]/var_jahr_abgelauf[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[7]<>0) AND (var_jahr_abgelauf[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]/var_jahr_abgelauf[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[8]<>0) AND (var_jahr_abgelauf[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]/var_jahr_abgelauf[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[9]<>0) AND (var_jahr_abgelauf[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]/var_jahr_abgelauf[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[10]<>0) AND (var_jahr_abgelauf[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]/var_jahr_abgelauf[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[11]<>0) AND (var_jahr_abgelauf[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]/var_jahr_abgelauf[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[12]<>0) AND (var_jahr_abgelauf[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]/var_jahr_abgelauf[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[13]<>0) AND (var_jahr_abgelauf[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_verl„ng[13]/var_jahr_abgelauf[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[14]<>0) AND (var_jahr_abgelauf[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_verl„ng[14]/var_jahr_abgelauf[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[15]<>0) AND (var_jahr_abgelauf[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_verl„ng[15]/var_jahr_abgelauf[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[16]<>0) AND (var_jahr_abgelauf[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_verl„ng[16]/var_jahr_abgelauf[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[17]<>0) AND (var_jahr_abgelauf[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_verl„ng[17]/var_jahr_abgelauf[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[18]<>0) AND (var_jahr_abgelauf[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_verl„ng[18]/var_jahr_abgelauf[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[19]<>0) AND (var_jahr_abgelauf[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_verl„ng[19]/var_jahr_abgelauf[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[20]<>0) AND (var_jahr_abgelauf[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_verl„ng[20]/var_jahr_abgelauf[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 16;
      EnterCell(RowNo,1,'Verl„ngert in % von Jahreseingang','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_verl„ng[1]<>0) AND (var_jahr_gesamt[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]/var_jahr_gesamt[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[2]<>0) AND (var_jahr_gesamt[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]/var_jahr_gesamt[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[3]<>0) AND (var_jahr_gesamt[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]/var_jahr_gesamt[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[4]<>0) AND (var_jahr_gesamt[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]/var_jahr_gesamt[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[5]<>0) AND (var_jahr_gesamt[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]/var_jahr_gesamt[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[6]<>0) AND (var_jahr_gesamt[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]/var_jahr_gesamt[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[7]<>0) AND (var_jahr_gesamt[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]/var_jahr_gesamt[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[8]<>0) AND (var_jahr_gesamt[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]/var_jahr_gesamt[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[9]<>0) AND (var_jahr_gesamt[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]/var_jahr_gesamt[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[10]<>0) AND (var_jahr_gesamt[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]/var_jahr_gesamt[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[11]<>0) AND (var_jahr_gesamt[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]/var_jahr_gesamt[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[12]<>0) AND (var_jahr_gesamt[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]/var_jahr_gesamt[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[13]<>0) AND (var_jahr_gesamt[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_verl„ng[13]/var_jahr_gesamt[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[14]<>0) AND (var_jahr_gesamt[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_verl„ng[14]/var_jahr_gesamt[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[15]<>0) AND (var_jahr_gesamt[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_verl„ng[15]/var_jahr_gesamt[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[16]<>0) AND (var_jahr_gesamt[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_verl„ng[16]/var_jahr_gesamt[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[17]<>0) AND (var_jahr_gesamt[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_verl„ng[17]/var_jahr_gesamt[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[18]<>0) AND (var_jahr_gesamt[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_verl„ng[18]/var_jahr_gesamt[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[19]<>0) AND (var_jahr_gesamt[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_verl„ng[19]/var_jahr_gesamt[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[20]<>0) AND (var_jahr_gesamt[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_verl„ng[20]/var_jahr_gesamt[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 18;
      EnterCell(RowNo,1,'Auf Laufzeit verteilt','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_wert[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_wert[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_wert[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_wert[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_wert[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_wert[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_wert[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_wert[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_wert[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_wert[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_wert[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_wert[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_wert[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_wert[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_wert[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_wert[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_wert[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_wert[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_wert[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_wert[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      var_jahr_gesamt[1]:=0;
      var_jahr_gesamt[2]:=0;
      var_jahr_gesamt[3]:=0;
      var_jahr_gesamt[4]:=0;
      var_jahr_gesamt[5]:=0;
      var_jahr_gesamt[6]:=0;
      var_jahr_gesamt[7]:=0;
      var_jahr_gesamt[8]:=0;
      var_jahr_gesamt[9]:=0;
      var_jahr_gesamt[10]:=0;
      var_jahr_gesamt[11]:=0;
      var_jahr_gesamt[12]:=0;
      var_jahr_gesamt[13]:=0;
      var_jahr_gesamt[14]:=0;
      var_jahr_gesamt[15]:=0;
      var_jahr_gesamt[16]:=0;
      var_jahr_gesamt[16]:=0;
      var_jahr_gesamt[17]:=0;
      var_jahr_gesamt[18]:=0;
      var_jahr_gesamt[19]:=0;
      var_jahr_gesamt[20]:=0;


      var_jahr_neu[1]:=0;
      var_jahr_neu[2]:=0;
      var_jahr_neu[3]:=0;
      var_jahr_neu[4]:=0;
      var_jahr_neu[5]:=0;
      var_jahr_neu[6]:=0;
      var_jahr_neu[7]:=0;
      var_jahr_neu[8]:=0;
      var_jahr_neu[9]:=0;
      var_jahr_neu[10]:=0;
      var_jahr_neu[11]:=0;
      var_jahr_neu[12]:=0;
      var_jahr_neu[13]:=0;
      var_jahr_neu[14]:=0;
      var_jahr_neu[15]:=0;
      var_jahr_neu[16]:=0;
      var_jahr_neu[17]:=0;
      var_jahr_neu[18]:=0;
      var_jahr_neu[19]:=0;
      var_jahr_neu[20]:=0;

      var_jahr_verl„ng[1]:=0;
      var_jahr_verl„ng[2]:=0;
      var_jahr_verl„ng[3]:=0;
      var_jahr_verl„ng[4]:=0;
      var_jahr_verl„ng[5]:=0;
      var_jahr_verl„ng[6]:=0;
      var_jahr_verl„ng[7]:=0;
      var_jahr_verl„ng[8]:=0;
      var_jahr_verl„ng[9]:=0;
      var_jahr_verl„ng[10]:=0;
      var_jahr_verl„ng[11]:=0;
      var_jahr_verl„ng[12]:=0;
      var_jahr_verl„ng[13]:=0;
      var_jahr_verl„ng[14]:=0;
      var_jahr_verl„ng[15]:=0;
      var_jahr_verl„ng[16]:=0;
      var_jahr_verl„ng[17]:=0;
      var_jahr_verl„ng[18]:=0;
      var_jahr_verl„ng[19]:=0;
      var_jahr_verl„ng[20]:=0;

      var_jahr_abgelauf[1]:=0;
      var_jahr_abgelauf[2]:=0;
      var_jahr_abgelauf[3]:=0;
      var_jahr_abgelauf[4]:=0;
      var_jahr_abgelauf[5]:=0;
      var_jahr_abgelauf[6]:=0;
      var_jahr_abgelauf[7]:=0;
      var_jahr_abgelauf[8]:=0;
      var_jahr_abgelauf[9]:=0;
      var_jahr_abgelauf[10]:=0;
      var_jahr_abgelauf[11]:=0;
      var_jahr_abgelauf[12]:=0;
      var_jahr_abgelauf[13]:=0;
      var_jahr_abgelauf[14]:=0;
      var_jahr_abgelauf[15]:=0;
      var_jahr_abgelauf[16]:=0;
      var_jahr_abgelauf[17]:=0;
      var_jahr_abgelauf[18]:=0;
      var_jahr_abgelauf[19]:=0;
      var_jahr_abgelauf[20]:=0;

      var_jahr_wert[1]:=0;
      var_jahr_wert[2]:=0;
      var_jahr_wert[3]:=0;
      var_jahr_wert[4]:=0;
      var_jahr_wert[5]:=0;
      var_jahr_wert[6]:=0;
      var_jahr_wert[7]:=0;
      var_jahr_wert[8]:=0;
      var_jahr_wert[9]:=0;
      var_jahr_wert[10]:=0;
      var_jahr_wert[11]:=0;
      var_jahr_wert[12]:=0;
      var_jahr_wert[13]:=0;
      var_jahr_wert[14]:=0;
      var_jahr_wert[15]:=0;
      var_jahr_wert[16]:=0;
      var_jahr_wert[17]:=0;
      var_jahr_wert[18]:=0;
      var_jahr_wert[19]:=0;
      var_jahr_wert[20]:=0;


      FOR i:=1 TO 20 DO BEGIN
        var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);
        ColumnNo:=ColumnNo+1;
        EnterCell(4,ColumnNo,'GJ '+FORMAT(var_jahr[i]),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,4,'GJ '+FORMAT(var_jahr[2]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,5,'GJ '+FORMAT(var_jahr[3]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,6,'GJ '+FORMAT(var_jahr[4]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,7,'GJ '+FORMAT(var_jahr[5]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,8,'GJ '+FORMAT(var_jahr[6]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,9,'GJ '+FORMAT(var_jahr[7]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,10,'GJ '+FORMAT(var_jahr[8]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,11,'GJ '+FORMAT(var_jahr[9]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,12,'GJ '+FORMAT(var_jahr[10]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,13,'GJ '+FORMAT(var_jahr[11]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //  EnterCell(4,14,'GJ '+FORMAT(var_jahr[12]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      END;

      //  Ende šberschriftenanlage
      RowNo := 29;
      EnterCell(RowNo,1,'Champsvertr„ge Herstellercode 5710 + 5720 ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 30;
      tab_service.RESET;
      tab_service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      tab_service.SETFILTER(tab_service.Art,'%1',tab_service.Art::Service);
      tab_service.SETFILTER(tab_service.Inaktiv,'%1',FALSE);
      tab_service.SETFILTER(tab_service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      //tab_Service.SETFILTER(tab_Service."Hauptwartungsvertragsnr.",'%1|%2','SV101035','SV101119');
      IF tab_service.FIND('-') THEN BEGIN  //xx1
        REPEAT
          LZ_Rest:=0;
          Artikel.RESET;
          Artikel.SETFILTER(Artikel."No.",'%1',tab_service."SUP Artikelnr.");
          Artikel.SETFILTER(Artikel."Manufacturer Code",'%1|%2','5710','5720');
          IF Artikel.FINDFIRST THEN BEGIN   //xx2
            tab_vklz.RESET;
            tab_vklz.SETFILTER(tab_vklz."Document No.",'%1',tab_service."Nr.");
            tab_vklz.SETFILTER(tab_vklz."Line No.",'%1',tab_service."Belegzeilennr.");
            tab_vklz.SETFILTER(tab_vklz.Quantity,'<>%1',0);
            tab_vklz.SETFILTER(tab_vklz."Manufacturer Code",'%1|%2','5710','5720');
            tab_vklz.SETFILTER(tab_vklz."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
            IF tab_vklz.FINDFIRST THEN BEGIN  //xx3
              IF (liefnr=tab_vklz."Document No.") AND (liefzeilennr=tab_vklz."Line No.") THEN BEGIN   //xx4
              END ELSE BEGIN  //xx4_1
                liefnr:=tab_vklz."Document No.";
                liefzeilennr:=tab_vklz."Line No.";
                FOR i:=1 TO 20 DO BEGIN   //xx5
                  LZ_tage:= (tab_service."Ablaufdatum Serviceleistung"- tab_service.Lizenzdatum);
                  var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);
                  //          Gesamt im Jahr abgeschlossen
                  //          Hier wird das Buchungsdatum benutzt
                  IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                  var_jahr_gesamt[i]:=var_jahr_gesamt[i]+(tab_vklz.Quantity*tab_vklz."VK-Preis (MW)");
                  //          Ende Gesamt im Jahr abgeschlossen
                  //          Gesamt im Jahr neu abgeschlossen
                  IF tab_service.Verl„ngerung=FALSE THEN BEGIN   //xx6
                    IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_neu[i]:=var_jahr_neu[i]+(tab_vklz.Quantity*tab_vklz."VK-Preis (MW)");
                  END;   //xx6
                  //          Ende Gesamt im Jahr neu abgeschlossen
                  //          Gesamt im Jahr verl„ngert
                  IF tab_service.Verl„ngerung=TRUE THEN BEGIN   //xx7
                    IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_verl„ng[i]:=var_jahr_verl„ng[i]+(tab_vklz.Quantity*tab_vklz."VK-Preis (MW)");
                  END;   //xx7
                  //          Ende Gesamt im Jahr verl„ngert
                  //          Gesamt im Jahr abgelaufen
                  IF (tab_service."Ablaufdatum Serviceleistung">(var_jahr[i])) AND (tab_service."Ablaufdatum Serviceleistung"<(var_jahr[i]+365)) THEN
                  var_jahr_abgelauf[i]:=var_jahr_abgelauf[i]+(tab_vklz.Quantity*tab_vklz."VK-Preis (MW)");
                  //          Ende Gesamt im Jahr abgelaufen
                  //          Laufzeitenberechnung  ******************************************************************
                  IF ((tab_service.Lizenzdatum>=(var_jahr[i])) AND (tab_service.Lizenzdatum<=(var_jahr[i]+365))) THEN BEGIN   //xx8
                    LZ_tage_jahr[i]:=var_jahr[i]+365-tab_service.Lizenzdatum;
                    var_jahr_wert[i]:=var_jahr_wert[i]+((tab_vklz.Quantity*tab_vklz."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx8
                  IF (tab_service."Ablaufdatum Serviceleistung">(var_jahr[i]+365)) AND ((var_jahr[i])>tab_service.Lizenzdatum) THEN BEGIN   //xx9
                    LZ_tage_jahr[i]:=var_jahr[i]+365-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((tab_vklz.Quantity*tab_vklz."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx9
                  IF ((tab_service."Ablaufdatum Serviceleistung"-1>(var_jahr[i])) AND (tab_service."Ablaufdatum Serviceleistung"-1<(var_jahr[i]+365))) THEN BEGIN   //xx10
                    LZ_tage_jahr[i]:=tab_service."Ablaufdatum Serviceleistung"-1-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((tab_vklz.Quantity*tab_vklz."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx10
                  //          ENDE Laufzeitenberechnung ******************************************************************
                END;  //xx5
              END; //xx4_1
            END;   //xx11
            //
            beleghis.RESET;
            beleghis.SETFILTER("Belegnr.",'%1',tab_service."Nr.");
            beleghis.SETFILTER("Zeilennr.",'%1',tab_service."Belegzeilennr.");
            beleghis.SETFILTER(Herstellercode,'%1|%2','5710','5720');
            beleghis.SETFILTER(beleghis."Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATEMENT_FEE');
            IF beleghis.FINDFIRST THEN BEGIN
              IF (liefnr = beleghis."Belegnr.") AND (liefzeilennr = beleghis."Zeilennr.") THEN BEGIN
              END ELSE BEGIN
                liefnr:=beleghis."Belegnr.";
                liefzeilennr:=beleghis."Zeilennr.";
                FOR i:=1 TO 20 DO BEGIN   //xx5
                  LZ_tage:= (tab_service."Ablaufdatum Serviceleistung"- tab_service.Lizenzdatum);
                  var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);

                  IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                  var_jahr_gesamt[i]:=var_jahr_gesamt[i]+(beleghis.Menge*beleghis."VK-Preis");

                  IF tab_service.Verl„ngerung=FALSE THEN BEGIN   //xx6
                    IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_neu[i]:=var_jahr_neu[i]+(beleghis.Menge*beleghis."VK-Preis");
                  END;   //xx6

                  IF tab_service.Verl„ngerung=TRUE THEN BEGIN   //xx7
                    IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_verl„ng[i]:=var_jahr_verl„ng[i]+(beleghis.Menge*beleghis."VK-Preis");
                  END;   //xx7

                  IF (tab_service."Ablaufdatum Serviceleistung">(var_jahr[i])) AND (tab_service."Ablaufdatum Serviceleistung"<(var_jahr[i]+365)) THEN
                  var_jahr_abgelauf[i]:=var_jahr_abgelauf[i]+(beleghis.Menge*beleghis."VK-Preis");

                  IF ((tab_service.Lizenzdatum>=(var_jahr[i])) AND (tab_service.Lizenzdatum<=(var_jahr[i]+365))) THEN BEGIN   //xx8
                    LZ_tage_jahr[i]:=var_jahr[i]+365-tab_service.Lizenzdatum;
                    var_jahr_wert[i]:=var_jahr_wert[i]+((beleghis.Menge*beleghis."VK-Preis")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx8
                  IF (tab_service."Ablaufdatum Serviceleistung">(var_jahr[i]+365)) AND ((var_jahr[i])>tab_service.Lizenzdatum) THEN BEGIN   //xx9
                    LZ_tage_jahr[i]:=var_jahr[i]+365-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((beleghis.Menge*beleghis."VK-Preis")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx9
                  IF ((tab_service."Ablaufdatum Serviceleistung"-1>(var_jahr[i])) AND (tab_service."Ablaufdatum Serviceleistung"-1<(var_jahr[i]+365))) THEN BEGIN   //xx10
                    LZ_tage_jahr[i]:=tab_service."Ablaufdatum Serviceleistung"-1-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((beleghis.Menge*beleghis."VK-Preis")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx10
                END;
              END;
            END;
          END;   //xx3
        UNTIL tab_service.NEXT=0;
      END;   //xx1
      RowNo := 31;
      EnterCell(RowNo,1,'Gesamt Jahr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_gesamt[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_gesamt[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_gesamt[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_gesamt[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_gesamt[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_gesamt[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_gesamt[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_gesamt[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_gesamt[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_gesamt[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_gesamt[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_gesamt[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_gesamt[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_gesamt[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_gesamt[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_gesamt[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_gesamt[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_gesamt[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_gesamt[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_gesamt[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 32;
      EnterCell(RowNo,1,'Gesamt Jahr neu','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_neu[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_neu[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_neu[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_neu[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_neu[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_neu[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_neu[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_neu[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_neu[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_neu[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_neu[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_neu[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_neu[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_neu[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_neu[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_neu[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_neu[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_neu[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_neu[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_neu[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 33;
      EnterCell(RowNo,1,'Gesamt Jahr verl„ngert','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_verl„ng[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_verl„ng[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_verl„ng[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_verl„ng[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_verl„ng[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_verl„ng[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_verl„ng[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_verl„ng[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 35;
      EnterCell(RowNo,1,'im Jahr ablaufend','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_abgelauf[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_abgelauf[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_abgelauf[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_abgelauf[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_abgelauf[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_abgelauf[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_abgelauf[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_abgelauf[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_abgelauf[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_abgelauf[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_abgelauf[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_abgelauf[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_abgelauf[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_abgelauf[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_abgelauf[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_abgelauf[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_abgelauf[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_abgelauf[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_abgelauf[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_abgelauf[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 37;
      EnterCell(RowNo,1,'Neu in % von Gesamt Jahr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_gesamt[1]<>0) AND (var_jahr_neu[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_neu[1]/var_jahr_gesamt[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[2]<>0) AND (var_jahr_neu[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_neu[2]/var_jahr_gesamt[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[3]<>0) AND (var_jahr_neu[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_neu[3]/var_jahr_gesamt[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[4]<>0) AND (var_jahr_neu[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_neu[4]/var_jahr_gesamt[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[5]<>0) AND (var_jahr_neu[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_neu[5]/var_jahr_gesamt[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[6]<>0) AND (var_jahr_neu[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_neu[6]/var_jahr_gesamt[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[7]<>0) AND (var_jahr_neu[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_neu[7]/var_jahr_gesamt[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[8]<>0) AND (var_jahr_neu[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_neu[8]/var_jahr_gesamt[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[9]<>0) AND (var_jahr_neu[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_neu[9]/var_jahr_gesamt[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[10]<>0) AND (var_jahr_neu[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_neu[10]/var_jahr_gesamt[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[11]<>0) AND (var_jahr_neu[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_neu[11]/var_jahr_gesamt[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[12]<>0) AND (var_jahr_neu[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_neu[12]/var_jahr_gesamt[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[13]<>0) AND (var_jahr_neu[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_neu[13]/var_jahr_gesamt[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[14]<>0) AND (var_jahr_neu[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_neu[14]/var_jahr_gesamt[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[15]<>0) AND (var_jahr_neu[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_neu[15]/var_jahr_gesamt[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[16]<>0) AND (var_jahr_neu[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_neu[16]/var_jahr_gesamt[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[17]<>0) AND (var_jahr_neu[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_neu[17]/var_jahr_gesamt[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[18]<>0) AND (var_jahr_neu[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_neu[18]/var_jahr_gesamt[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[19]<>0) AND (var_jahr_neu[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_neu[19]/var_jahr_gesamt[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[20]<>0) AND (var_jahr_neu[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_neu[20]/var_jahr_gesamt[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 38;
      EnterCell(RowNo,1,'Verl„ngert in % von Gesamt Jahr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_gesamt[1]<>0) AND (var_jahr_verl„ng[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]/var_jahr_gesamt[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[2]<>0) AND (var_jahr_verl„ng[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]/var_jahr_gesamt[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[3]<>0) AND (var_jahr_verl„ng[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]/var_jahr_gesamt[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[4]<>0) AND (var_jahr_verl„ng[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]/var_jahr_gesamt[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[5]<>0) AND (var_jahr_verl„ng[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]/var_jahr_gesamt[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[6]<>0) AND (var_jahr_verl„ng[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]/var_jahr_gesamt[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[7]<>0) AND (var_jahr_verl„ng[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]/var_jahr_gesamt[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[8]<>0) AND (var_jahr_verl„ng[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]/var_jahr_gesamt[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[9]<>0) AND (var_jahr_verl„ng[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]/var_jahr_gesamt[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[10]<>0) AND (var_jahr_verl„ng[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]/var_jahr_gesamt[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[11]<>0) AND (var_jahr_verl„ng[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]/var_jahr_gesamt[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[12]<>0) AND (var_jahr_verl„ng[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]/var_jahr_gesamt[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[13]<>0) AND (var_jahr_verl„ng[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_verl„ng[13]/var_jahr_gesamt[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[14]<>0) AND (var_jahr_verl„ng[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_verl„ng[14]/var_jahr_gesamt[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[15]<>0) AND (var_jahr_verl„ng[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_verl„ng[15]/var_jahr_gesamt[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[16]<>0) AND (var_jahr_verl„ng[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_verl„ng[16]/var_jahr_gesamt[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[17]<>0) AND (var_jahr_verl„ng[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_verl„ng[17]/var_jahr_gesamt[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[18]<>0) AND (var_jahr_verl„ng[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_verl„ng[18]/var_jahr_gesamt[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[19]<>0) AND (var_jahr_verl„ng[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_verl„ng[19]/var_jahr_gesamt[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[20]<>0) AND (var_jahr_verl„ng[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_verl„ng[20]/var_jahr_gesamt[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 39;
      EnterCell(RowNo,1,'Ablaufend in % von Gesamt Jahr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_gesamt[1]<>0) AND (var_jahr_abgelauf[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_abgelauf[1]/var_jahr_gesamt[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[2]<>0) AND (var_jahr_abgelauf[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_abgelauf[2]/var_jahr_gesamt[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[3]<>0) AND (var_jahr_abgelauf[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_abgelauf[3]/var_jahr_gesamt[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[4]<>0) AND (var_jahr_abgelauf[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_abgelauf[4]/var_jahr_gesamt[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[5]<>0) AND (var_jahr_abgelauf[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_abgelauf[5]/var_jahr_gesamt[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[6]<>0) AND (var_jahr_abgelauf[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_abgelauf[6]/var_jahr_gesamt[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[7]<>0) AND (var_jahr_abgelauf[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_abgelauf[7]/var_jahr_gesamt[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[8]<>0) AND (var_jahr_abgelauf[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_abgelauf[8]/var_jahr_gesamt[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[9]<>0) AND (var_jahr_abgelauf[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_abgelauf[9]/var_jahr_gesamt[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[10]<>0) AND (var_jahr_abgelauf[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_abgelauf[10]/var_jahr_gesamt[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[11]<>0) AND (var_jahr_abgelauf[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_abgelauf[11]/var_jahr_gesamt[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[12]<>0) AND (var_jahr_abgelauf[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_abgelauf[12]/var_jahr_gesamt[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[13]<>0) AND (var_jahr_abgelauf[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_abgelauf[13]/var_jahr_gesamt[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[14]<>0) AND (var_jahr_abgelauf[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_abgelauf[14]/var_jahr_gesamt[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[15]<>0) AND (var_jahr_abgelauf[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_abgelauf[15]/var_jahr_gesamt[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[16]<>0) AND (var_jahr_abgelauf[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_abgelauf[16]/var_jahr_gesamt[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[17]<>0) AND (var_jahr_abgelauf[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_abgelauf[17]/var_jahr_gesamt[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[18]<>0) AND (var_jahr_abgelauf[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_abgelauf[18]/var_jahr_gesamt[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[19]<>0) AND (var_jahr_abgelauf[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_abgelauf[19]/var_jahr_gesamt[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[20]<>0) AND (var_jahr_abgelauf[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_abgelauf[20]/var_jahr_gesamt[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 40;
      EnterCell(RowNo,1,'Verl„ngert in % von Ablaufend','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_verl„ng[1]<>0) AND (var_jahr_abgelauf[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]/var_jahr_abgelauf[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[2]<>0) AND (var_jahr_abgelauf[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]/var_jahr_abgelauf[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[3]<>0) AND (var_jahr_abgelauf[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]/var_jahr_abgelauf[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[4]<>0) AND (var_jahr_abgelauf[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]/var_jahr_abgelauf[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[5]<>0) AND (var_jahr_abgelauf[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]/var_jahr_abgelauf[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[6]<>0) AND (var_jahr_abgelauf[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]/var_jahr_abgelauf[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[7]<>0) AND (var_jahr_abgelauf[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]/var_jahr_abgelauf[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[8]<>0) AND (var_jahr_abgelauf[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]/var_jahr_abgelauf[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[9]<>0) AND (var_jahr_abgelauf[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]/var_jahr_abgelauf[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[10]<>0) AND (var_jahr_abgelauf[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]/var_jahr_abgelauf[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[11]<>0) AND (var_jahr_abgelauf[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]/var_jahr_abgelauf[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[12]<>0) AND (var_jahr_abgelauf[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]/var_jahr_abgelauf[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[13]<>0) AND (var_jahr_abgelauf[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_verl„ng[13]/var_jahr_abgelauf[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[14]<>0) AND (var_jahr_abgelauf[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_verl„ng[14]/var_jahr_abgelauf[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[15]<>0) AND (var_jahr_abgelauf[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_verl„ng[15]/var_jahr_abgelauf[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[16]<>0) AND (var_jahr_abgelauf[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_verl„ng[16]/var_jahr_abgelauf[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[17]<>0) AND (var_jahr_abgelauf[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_verl„ng[17]/var_jahr_abgelauf[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[18]<>0) AND (var_jahr_abgelauf[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_verl„ng[18]/var_jahr_abgelauf[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[19]<>0) AND (var_jahr_abgelauf[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_verl„ng[19]/var_jahr_abgelauf[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[20]<>0) AND (var_jahr_abgelauf[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_verl„ng[20]/var_jahr_abgelauf[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 41;
      EnterCell(RowNo,1,'Verl„ngert in % von Jahreseingang','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_verl„ng[1]<>0) AND (var_jahr_gesamt[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]/var_jahr_gesamt[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[2]<>0) AND (var_jahr_gesamt[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]/var_jahr_gesamt[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[3]<>0) AND (var_jahr_gesamt[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]/var_jahr_gesamt[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[4]<>0) AND (var_jahr_gesamt[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]/var_jahr_gesamt[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[5]<>0) AND (var_jahr_gesamt[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]/var_jahr_gesamt[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[6]<>0) AND (var_jahr_gesamt[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]/var_jahr_gesamt[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[7]<>0) AND (var_jahr_gesamt[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]/var_jahr_gesamt[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[8]<>0) AND (var_jahr_gesamt[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]/var_jahr_gesamt[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[9]<>0) AND (var_jahr_gesamt[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]/var_jahr_gesamt[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[10]<>0) AND (var_jahr_gesamt[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]/var_jahr_gesamt[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[11]<>0) AND (var_jahr_gesamt[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]/var_jahr_gesamt[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[12]<>0) AND (var_jahr_gesamt[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]/var_jahr_gesamt[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[13]<>0) AND (var_jahr_gesamt[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_verl„ng[13]/var_jahr_gesamt[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[14]<>0) AND (var_jahr_gesamt[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_verl„ng[14]/var_jahr_gesamt[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[15]<>0) AND (var_jahr_gesamt[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_verl„ng[15]/var_jahr_gesamt[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[16]<>0) AND (var_jahr_gesamt[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_verl„ng[16]/var_jahr_gesamt[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[17]<>0) AND (var_jahr_gesamt[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_verl„ng[17]/var_jahr_gesamt[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[18]<>0) AND (var_jahr_gesamt[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_verl„ng[18]/var_jahr_gesamt[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[19]<>0) AND (var_jahr_gesamt[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_verl„ng[19]/var_jahr_gesamt[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[20]<>0) AND (var_jahr_gesamt[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_verl„ng[20]/var_jahr_gesamt[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 43;
      EnterCell(RowNo,1,'Auf Laufzeit verteilt','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_wert[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_wert[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_wert[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_wert[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_wert[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_wert[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_wert[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_wert[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_wert[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_wert[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_wert[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_wert[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_wert[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_wert[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_wert[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_wert[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_wert[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_wert[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_wert[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_wert[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);


      var_jahr_gesamt[1]:=0;
      var_jahr_gesamt[2]:=0;
      var_jahr_gesamt[3]:=0;
      var_jahr_gesamt[4]:=0;
      var_jahr_gesamt[5]:=0;
      var_jahr_gesamt[6]:=0;
      var_jahr_gesamt[7]:=0;
      var_jahr_gesamt[8]:=0;
      var_jahr_gesamt[9]:=0;
      var_jahr_gesamt[10]:=0;
      var_jahr_gesamt[11]:=0;
      var_jahr_gesamt[12]:=0;
      var_jahr_gesamt[13]:=0;
      var_jahr_gesamt[14]:=0;
      var_jahr_gesamt[15]:=0;
      var_jahr_gesamt[16]:=0;
      var_jahr_gesamt[16]:=0;
      var_jahr_gesamt[17]:=0;
      var_jahr_gesamt[18]:=0;
      var_jahr_gesamt[19]:=0;
      var_jahr_gesamt[20]:=0;


      var_jahr_neu[1]:=0;
      var_jahr_neu[2]:=0;
      var_jahr_neu[3]:=0;
      var_jahr_neu[4]:=0;
      var_jahr_neu[5]:=0;
      var_jahr_neu[6]:=0;
      var_jahr_neu[7]:=0;
      var_jahr_neu[8]:=0;
      var_jahr_neu[9]:=0;
      var_jahr_neu[10]:=0;
      var_jahr_neu[11]:=0;
      var_jahr_neu[12]:=0;
      var_jahr_neu[13]:=0;
      var_jahr_neu[14]:=0;
      var_jahr_neu[15]:=0;
      var_jahr_neu[16]:=0;
      var_jahr_neu[17]:=0;
      var_jahr_neu[18]:=0;
      var_jahr_neu[19]:=0;
      var_jahr_neu[20]:=0;

      var_jahr_verl„ng[1]:=0;
      var_jahr_verl„ng[2]:=0;
      var_jahr_verl„ng[3]:=0;
      var_jahr_verl„ng[4]:=0;
      var_jahr_verl„ng[5]:=0;
      var_jahr_verl„ng[6]:=0;
      var_jahr_verl„ng[7]:=0;
      var_jahr_verl„ng[8]:=0;
      var_jahr_verl„ng[9]:=0;
      var_jahr_verl„ng[10]:=0;
      var_jahr_verl„ng[11]:=0;
      var_jahr_verl„ng[12]:=0;
      var_jahr_verl„ng[13]:=0;
      var_jahr_verl„ng[14]:=0;
      var_jahr_verl„ng[15]:=0;
      var_jahr_verl„ng[16]:=0;
      var_jahr_verl„ng[17]:=0;
      var_jahr_verl„ng[18]:=0;
      var_jahr_verl„ng[19]:=0;
      var_jahr_verl„ng[20]:=0;

      var_jahr_abgelauf[1]:=0;
      var_jahr_abgelauf[2]:=0;
      var_jahr_abgelauf[3]:=0;
      var_jahr_abgelauf[4]:=0;
      var_jahr_abgelauf[5]:=0;
      var_jahr_abgelauf[6]:=0;
      var_jahr_abgelauf[7]:=0;
      var_jahr_abgelauf[8]:=0;
      var_jahr_abgelauf[9]:=0;
      var_jahr_abgelauf[10]:=0;
      var_jahr_abgelauf[11]:=0;
      var_jahr_abgelauf[12]:=0;
      var_jahr_abgelauf[13]:=0;
      var_jahr_abgelauf[14]:=0;
      var_jahr_abgelauf[15]:=0;
      var_jahr_abgelauf[16]:=0;
      var_jahr_abgelauf[17]:=0;
      var_jahr_abgelauf[18]:=0;
      var_jahr_abgelauf[19]:=0;
      var_jahr_abgelauf[20]:=0;

      var_jahr_wert[1]:=0;
      var_jahr_wert[2]:=0;
      var_jahr_wert[3]:=0;
      var_jahr_wert[4]:=0;
      var_jahr_wert[5]:=0;
      var_jahr_wert[6]:=0;
      var_jahr_wert[7]:=0;
      var_jahr_wert[8]:=0;
      var_jahr_wert[9]:=0;
      var_jahr_wert[10]:=0;
      var_jahr_wert[11]:=0;
      var_jahr_wert[12]:=0;
      var_jahr_wert[13]:=0;
      var_jahr_wert[14]:=0;
      var_jahr_wert[15]:=0;
      var_jahr_wert[16]:=0;
      var_jahr_wert[17]:=0;
      var_jahr_wert[18]:=0;
      var_jahr_wert[19]:=0;
      var_jahr_wert[20]:=0;


      FOR i:=1 TO 20 DO BEGIN
        var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);
        ColumnNo:=ColumnNo+1;
        EnterCell(4,ColumnNo,'GJ '+FORMAT(var_jahr[i]),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,4,'GJ '+FORMAT(var_jahr[2]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,5,'GJ '+FORMAT(var_jahr[3]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,6,'GJ '+FORMAT(var_jahr[4]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,7,'GJ '+FORMAT(var_jahr[5]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,8,'GJ '+FORMAT(var_jahr[6]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,9,'GJ '+FORMAT(var_jahr[7]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,10,'GJ '+FORMAT(var_jahr[8]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,11,'GJ '+FORMAT(var_jahr[9]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,12,'GJ '+FORMAT(var_jahr[10]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,13,'GJ '+FORMAT(var_jahr[11]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(4,14,'GJ '+FORMAT(var_jahr[12]),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      END;

      //  Ende šberschriftenanlage
      RowNo := 49;
      EnterCell(RowNo,1,'Champsvertr„ge Herstellercode 57 + 5710 + 5720 ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 50;
      tab_service.RESET;
      tab_service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      tab_service.SETFILTER(tab_service.Art,'%1',tab_service.Art::Service);
      tab_service.SETFILTER(tab_service.Inaktiv,'%1',FALSE);
      tab_service.SETFILTER(tab_service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      //tab_Service.SETFILTER(tab_Service."Hauptwartungsvertragsnr.",'%1|%2','SV101035','SV101119');
      IF tab_service.FIND('-') THEN BEGIN  //xx1
        REPEAT
          LZ_Rest:=0;
          Artikel.RESET;
          Artikel.SETFILTER(Artikel."No.",'%1',tab_service."SUP Artikelnr.");
          Artikel.SETFILTER(Artikel."Manufacturer Code",'%1|%2|%3','57','5710','5720');
          IF Artikel.FINDFIRST THEN BEGIN   //xx2
            tab_vklz.RESET;
            tab_vklz.SETFILTER(tab_vklz."Document No.",'%1',tab_service."Nr.");
            tab_vklz.SETFILTER(tab_vklz."Line No.",'%1',tab_service."Belegzeilennr.");
            tab_vklz.SETFILTER(tab_vklz.Quantity,'<>%1',0);
            tab_vklz.SETFILTER(tab_vklz."Manufacturer Code",'%1|%2|%3','57','5710','5720');
            tab_vklz.SETFILTER(tab_vklz."No.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
            IF tab_vklz.FINDFIRST THEN BEGIN  //xx3
              IF (liefnr=tab_vklz."Document No.") AND (liefzeilennr=tab_vklz."Line No.") THEN BEGIN   //xx4
              END ELSE BEGIN  //xx4_1
                liefnr:=tab_vklz."Document No.";
                liefzeilennr:=tab_vklz."Line No.";
                FOR i:=1 TO 20 DO BEGIN   //xx5
                  LZ_tage:= (tab_service."Ablaufdatum Serviceleistung"- tab_service.Lizenzdatum);
                  var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);
                  //          Gesamt im Jahr abgeschlossen
                  //          Hier wird das Buchungsdatum benutzt
                  IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                  var_jahr_gesamt[i]:=var_jahr_gesamt[i]+(tab_vklz.Quantity*tab_vklz."VK-Preis (MW)");
                  //          Ende Gesamt im Jahr abgeschlossen
                  //          Gesamt im Jahr neu abgeschlossen
                  IF tab_service.Verl„ngerung=FALSE THEN BEGIN   //xx6
                    IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_neu[i]:=var_jahr_neu[i]+(tab_vklz.Quantity*tab_vklz."VK-Preis (MW)");
                  END;   //xx6
                  //          Ende Gesamt im Jahr neu abgeschlossen
                  //          Gesamt im Jahr verl„ngert
                  IF tab_service.Verl„ngerung=TRUE THEN BEGIN   //xx7
                    IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_verl„ng[i]:=var_jahr_verl„ng[i]+(tab_vklz.Quantity*tab_vklz."VK-Preis (MW)");
                  END;   //xx7
                  //          Ende Gesamt im Jahr verl„ngert
                  //          Gesamt im Jahr abgelaufen
                  IF (tab_service."Ablaufdatum Serviceleistung">(var_jahr[i])) AND (tab_service."Ablaufdatum Serviceleistung"<(var_jahr[i]+365)) THEN
                  var_jahr_abgelauf[i]:=var_jahr_abgelauf[i]+(tab_vklz.Quantity*tab_vklz."VK-Preis (MW)");
                  //          Ende Gesamt im Jahr abgelaufen
                  //          Laufzeitenberechnung  ******************************************************************
                  IF ((tab_service.Lizenzdatum>=(var_jahr[i])) AND (tab_service.Lizenzdatum<=(var_jahr[i]+365))) THEN BEGIN   //xx8
                    LZ_tage_jahr[i]:=var_jahr[i]+365-tab_service.Lizenzdatum;
                    var_jahr_wert[i]:=var_jahr_wert[i]+((tab_vklz.Quantity*tab_vklz."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx8
                  IF (tab_service."Ablaufdatum Serviceleistung">(var_jahr[i]+365)) AND ((var_jahr[i])>tab_service.Lizenzdatum) THEN BEGIN   //xx9
                    LZ_tage_jahr[i]:=var_jahr[i]+365-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((tab_vklz.Quantity*tab_vklz."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx9
                  IF ((tab_service."Ablaufdatum Serviceleistung"-1>(var_jahr[i])) AND (tab_service."Ablaufdatum Serviceleistung"-1<(var_jahr[i]+365))) THEN BEGIN   //xx10
                    LZ_tage_jahr[i]:=tab_service."Ablaufdatum Serviceleistung"-1-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((tab_vklz.Quantity*tab_vklz."VK-Preis (MW)")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx10
                  //          ENDE Laufzeitenberechnung ******************************************************************
                END;  //xx5
              END; //xx4_1
            END;   //xx11
            //
            beleghis.RESET;
            beleghis.SETFILTER("Belegnr.",'%1',tab_service."Nr.");
            beleghis.SETFILTER("Zeilennr.",'%1',tab_service."Belegzeilennr.");
            beleghis.SETFILTER(Herstellercode,'%1|%2|%3','57','5710','5720');
            beleghis.SETFILTER(beleghis."Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATEMENT_FEE');
            IF beleghis.FINDFIRST THEN BEGIN
              IF (liefnr = beleghis."Belegnr.") AND (liefzeilennr = beleghis."Zeilennr.") THEN BEGIN
              END ELSE BEGIN
                liefnr:=beleghis."Belegnr.";
                liefzeilennr:=beleghis."Zeilennr.";
                FOR i:=1 TO 20 DO BEGIN   //xx5
                  LZ_tage:= (tab_service."Ablaufdatum Serviceleistung"- tab_service.Lizenzdatum);
                  var_jahr[i+1] := CALCDATE('1J',var_jahr[i]);

                  IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                  var_jahr_gesamt[i]:=var_jahr_gesamt[i]+(beleghis.Menge*beleghis."VK-Preis");

                  IF tab_service.Verl„ngerung=FALSE THEN BEGIN   //xx6
                    IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_neu[i]:=var_jahr_neu[i]+(beleghis.Menge*beleghis."VK-Preis");
                  END;   //xx6

                  IF tab_service.Verl„ngerung=TRUE THEN BEGIN   //xx7
                    IF (tab_service.Belegdatum>(var_jahr[i])) AND (tab_service.Belegdatum<(var_jahr[i]+365)) THEN
                    var_jahr_verl„ng[i]:=var_jahr_verl„ng[i]+(beleghis.Menge*beleghis."VK-Preis");
                  END;   //xx7

                  IF (tab_service."Ablaufdatum Serviceleistung">(var_jahr[i])) AND (tab_service."Ablaufdatum Serviceleistung"<(var_jahr[i]+365)) THEN
                  var_jahr_abgelauf[i]:=var_jahr_abgelauf[i]+(beleghis.Menge*beleghis."VK-Preis");

                  IF ((tab_service.Lizenzdatum>=(var_jahr[i])) AND (tab_service.Lizenzdatum<=(var_jahr[i]+365))) THEN BEGIN   //xx8
                    LZ_tage_jahr[i]:=var_jahr[i]+365-tab_service.Lizenzdatum;
                    var_jahr_wert[i]:=var_jahr_wert[i]+((beleghis.Menge*beleghis."VK-Preis")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx8
                  IF (tab_service."Ablaufdatum Serviceleistung">(var_jahr[i]+365)) AND ((var_jahr[i])>tab_service.Lizenzdatum) THEN BEGIN   //xx9
                    LZ_tage_jahr[i]:=var_jahr[i]+365-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((beleghis.Menge*beleghis."VK-Preis")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx9
                  IF ((tab_service."Ablaufdatum Serviceleistung"-1>(var_jahr[i])) AND (tab_service."Ablaufdatum Serviceleistung"-1<(var_jahr[i]+365))) THEN BEGIN   //xx10
                    LZ_tage_jahr[i]:=tab_service."Ablaufdatum Serviceleistung"-1-var_jahr[i];
                    var_jahr_wert[i]:=var_jahr_wert[i]+((beleghis.Menge*beleghis."VK-Preis")/LZ_tage*LZ_tage_jahr[i]);
                  END;   //xx10
                END;
              END;
            END;
          END;   //xx3
        UNTIL tab_service.NEXT=0;
      END;   //xx1





      RowNo := 51;
      EnterCell(RowNo,1,'Gesamt Jahr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_gesamt[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_gesamt[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_gesamt[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_gesamt[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_gesamt[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_gesamt[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_gesamt[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_gesamt[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_gesamt[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_gesamt[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_gesamt[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_gesamt[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_gesamt[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_gesamt[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_gesamt[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_gesamt[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_gesamt[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_gesamt[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_gesamt[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_gesamt[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 52;
      EnterCell(RowNo,1,'Gesamt Jahr neu','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_neu[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_neu[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_neu[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_neu[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_neu[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_neu[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_neu[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_neu[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_neu[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_neu[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_neu[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_neu[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_neu[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_neu[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_neu[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_neu[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_neu[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_neu[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_neu[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_neu[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 53;
      EnterCell(RowNo,1,'Gesamt Jahr verl„ngert','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_verl„ng[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_verl„ng[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_verl„ng[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_verl„ng[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_verl„ng[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_verl„ng[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_verl„ng[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_verl„ng[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 55;
      EnterCell(RowNo,1,'im Jahr ablaufend','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_abgelauf[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_abgelauf[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_abgelauf[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_abgelauf[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_abgelauf[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_abgelauf[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_abgelauf[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_abgelauf[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_abgelauf[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_abgelauf[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_abgelauf[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_abgelauf[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_abgelauf[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_abgelauf[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_abgelauf[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_abgelauf[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_abgelauf[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_abgelauf[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_abgelauf[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_abgelauf[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 57;
      EnterCell(RowNo,1,'Neu in % von Gesamt Jahr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_gesamt[1]<>0) AND (var_jahr_neu[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_neu[1]/var_jahr_gesamt[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[2]<>0) AND (var_jahr_neu[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_neu[2]/var_jahr_gesamt[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[3]<>0) AND (var_jahr_neu[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_neu[3]/var_jahr_gesamt[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[4]<>0) AND (var_jahr_neu[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_neu[4]/var_jahr_gesamt[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[5]<>0) AND (var_jahr_neu[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_neu[5]/var_jahr_gesamt[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[6]<>0) AND (var_jahr_neu[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_neu[6]/var_jahr_gesamt[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[7]<>0) AND (var_jahr_neu[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_neu[7]/var_jahr_gesamt[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[8]<>0) AND (var_jahr_neu[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_neu[8]/var_jahr_gesamt[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[9]<>0) AND (var_jahr_neu[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_neu[9]/var_jahr_gesamt[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[10]<>0) AND (var_jahr_neu[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_neu[10]/var_jahr_gesamt[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[11]<>0) AND (var_jahr_neu[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_neu[11]/var_jahr_gesamt[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[12]<>0) AND (var_jahr_neu[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_neu[12]/var_jahr_gesamt[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[13]<>0) AND (var_jahr_neu[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_neu[13]/var_jahr_gesamt[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[14]<>0) AND (var_jahr_neu[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_neu[14]/var_jahr_gesamt[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[15]<>0) AND (var_jahr_neu[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_neu[15]/var_jahr_gesamt[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[16]<>0) AND (var_jahr_neu[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_neu[16]/var_jahr_gesamt[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[17]<>0) AND (var_jahr_neu[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_neu[17]/var_jahr_gesamt[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[18]<>0) AND (var_jahr_neu[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_neu[18]/var_jahr_gesamt[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[19]<>0) AND (var_jahr_neu[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_neu[19]/var_jahr_gesamt[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[20]<>0) AND (var_jahr_neu[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_neu[20]/var_jahr_gesamt[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 58;
      EnterCell(RowNo,1,'Verl„ngert in % von Gesamt Jahr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_gesamt[1]<>0) AND (var_jahr_verl„ng[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]/var_jahr_gesamt[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[2]<>0) AND (var_jahr_verl„ng[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]/var_jahr_gesamt[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[3]<>0) AND (var_jahr_verl„ng[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]/var_jahr_gesamt[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[4]<>0) AND (var_jahr_verl„ng[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]/var_jahr_gesamt[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[5]<>0) AND (var_jahr_verl„ng[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]/var_jahr_gesamt[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[6]<>0) AND (var_jahr_verl„ng[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]/var_jahr_gesamt[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[7]<>0) AND (var_jahr_verl„ng[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]/var_jahr_gesamt[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[8]<>0) AND (var_jahr_verl„ng[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]/var_jahr_gesamt[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[9]<>0) AND (var_jahr_verl„ng[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]/var_jahr_gesamt[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[10]<>0) AND (var_jahr_verl„ng[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]/var_jahr_gesamt[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[11]<>0) AND (var_jahr_verl„ng[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]/var_jahr_gesamt[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[12]<>0) AND (var_jahr_verl„ng[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]/var_jahr_gesamt[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[13]<>0) AND (var_jahr_verl„ng[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_verl„ng[13]/var_jahr_gesamt[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[14]<>0) AND (var_jahr_verl„ng[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_verl„ng[14]/var_jahr_gesamt[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[15]<>0) AND (var_jahr_verl„ng[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_verl„ng[15]/var_jahr_gesamt[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[16]<>0) AND (var_jahr_verl„ng[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_verl„ng[16]/var_jahr_gesamt[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[17]<>0) AND (var_jahr_verl„ng[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_verl„ng[17]/var_jahr_gesamt[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[18]<>0) AND (var_jahr_verl„ng[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_verl„ng[18]/var_jahr_gesamt[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[19]<>0) AND (var_jahr_verl„ng[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_verl„ng[19]/var_jahr_gesamt[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[20]<>0) AND (var_jahr_verl„ng[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_verl„ng[20]/var_jahr_gesamt[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 59;
      EnterCell(RowNo,1,'Ablaufend in % von Gesamt Jahr','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_gesamt[1]<>0) AND (var_jahr_abgelauf[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_abgelauf[1]/var_jahr_gesamt[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[2]<>0) AND (var_jahr_abgelauf[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_abgelauf[2]/var_jahr_gesamt[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[3]<>0) AND (var_jahr_abgelauf[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_abgelauf[3]/var_jahr_gesamt[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[4]<>0) AND (var_jahr_abgelauf[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_abgelauf[4]/var_jahr_gesamt[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[5]<>0) AND (var_jahr_abgelauf[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_abgelauf[5]/var_jahr_gesamt[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[6]<>0) AND (var_jahr_abgelauf[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_abgelauf[6]/var_jahr_gesamt[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[7]<>0) AND (var_jahr_abgelauf[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_abgelauf[7]/var_jahr_gesamt[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[8]<>0) AND (var_jahr_abgelauf[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_abgelauf[8]/var_jahr_gesamt[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[9]<>0) AND (var_jahr_abgelauf[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_abgelauf[9]/var_jahr_gesamt[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[10]<>0) AND (var_jahr_abgelauf[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_abgelauf[10]/var_jahr_gesamt[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[11]<>0) AND (var_jahr_abgelauf[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_abgelauf[11]/var_jahr_gesamt[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[12]<>0) AND (var_jahr_abgelauf[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_abgelauf[12]/var_jahr_gesamt[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[13]<>0) AND (var_jahr_abgelauf[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_abgelauf[13]/var_jahr_gesamt[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[14]<>0) AND (var_jahr_abgelauf[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_abgelauf[14]/var_jahr_gesamt[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[15]<>0) AND (var_jahr_abgelauf[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_abgelauf[15]/var_jahr_gesamt[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[16]<>0) AND (var_jahr_abgelauf[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_abgelauf[16]/var_jahr_gesamt[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[17]<>0) AND (var_jahr_abgelauf[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_abgelauf[17]/var_jahr_gesamt[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[18]<>0) AND (var_jahr_abgelauf[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_abgelauf[18]/var_jahr_gesamt[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[19]<>0) AND (var_jahr_abgelauf[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_abgelauf[19]/var_jahr_gesamt[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_gesamt[20]<>0) AND (var_jahr_abgelauf[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_abgelauf[20]/var_jahr_gesamt[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 60;
      EnterCell(RowNo,1,'Verl„ngert in % von Ablaufend','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_verl„ng[1]<>0) AND (var_jahr_abgelauf[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]/var_jahr_abgelauf[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[2]<>0) AND (var_jahr_abgelauf[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]/var_jahr_abgelauf[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[3]<>0) AND (var_jahr_abgelauf[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]/var_jahr_abgelauf[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[4]<>0) AND (var_jahr_abgelauf[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]/var_jahr_abgelauf[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[5]<>0) AND (var_jahr_abgelauf[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]/var_jahr_abgelauf[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[6]<>0) AND (var_jahr_abgelauf[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]/var_jahr_abgelauf[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[7]<>0) AND (var_jahr_abgelauf[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]/var_jahr_abgelauf[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[8]<>0) AND (var_jahr_abgelauf[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]/var_jahr_abgelauf[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[9]<>0) AND (var_jahr_abgelauf[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]/var_jahr_abgelauf[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[10]<>0) AND (var_jahr_abgelauf[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]/var_jahr_abgelauf[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[11]<>0) AND (var_jahr_abgelauf[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]/var_jahr_abgelauf[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[12]<>0) AND (var_jahr_abgelauf[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]/var_jahr_abgelauf[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[13]<>0) AND (var_jahr_abgelauf[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_verl„ng[13]/var_jahr_abgelauf[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[14]<>0) AND (var_jahr_abgelauf[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_verl„ng[14]/var_jahr_abgelauf[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[15]<>0) AND (var_jahr_abgelauf[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_verl„ng[15]/var_jahr_abgelauf[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[16]<>0) AND (var_jahr_abgelauf[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_verl„ng[16]/var_jahr_abgelauf[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[17]<>0) AND (var_jahr_abgelauf[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_verl„ng[17]/var_jahr_abgelauf[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[18]<>0) AND (var_jahr_abgelauf[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_verl„ng[18]/var_jahr_abgelauf[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[19]<>0) AND (var_jahr_abgelauf[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_verl„ng[19]/var_jahr_abgelauf[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[20]<>0) AND (var_jahr_abgelauf[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_verl„ng[20]/var_jahr_abgelauf[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 61;
      EnterCell(RowNo,1,'Verl„ngert in % von Jahreseingang','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      IF ((var_jahr_verl„ng[1]<>0) AND (var_jahr_gesamt[1]<>0)) THEN
      EnterCell(RowNo,3,FORMAT(var_jahr_verl„ng[1]/var_jahr_gesamt[1]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[2]<>0) AND (var_jahr_gesamt[2]<>0)) THEN
      EnterCell(RowNo,4,FORMAT(var_jahr_verl„ng[2]/var_jahr_gesamt[2]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[3]<>0) AND (var_jahr_gesamt[3]<>0)) THEN
      EnterCell(RowNo,5,FORMAT(var_jahr_verl„ng[3]/var_jahr_gesamt[3]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[4]<>0) AND (var_jahr_gesamt[4]<>0)) THEN
      EnterCell(RowNo,6,FORMAT(var_jahr_verl„ng[4]/var_jahr_gesamt[4]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[5]<>0) AND (var_jahr_gesamt[5]<>0)) THEN
      EnterCell(RowNo,7,FORMAT(var_jahr_verl„ng[5]/var_jahr_gesamt[5]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[6]<>0) AND (var_jahr_gesamt[6]<>0)) THEN
      EnterCell(RowNo,8,FORMAT(var_jahr_verl„ng[6]/var_jahr_gesamt[6]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[7]<>0) AND (var_jahr_gesamt[7]<>0)) THEN
      EnterCell(RowNo,9,FORMAT(var_jahr_verl„ng[7]/var_jahr_gesamt[7]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[8]<>0) AND (var_jahr_gesamt[8]<>0)) THEN
      EnterCell(RowNo,10,FORMAT(var_jahr_verl„ng[8]/var_jahr_gesamt[8]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[9]<>0) AND (var_jahr_gesamt[9]<>0)) THEN
      EnterCell(RowNo,11,FORMAT(var_jahr_verl„ng[9]/var_jahr_gesamt[9]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[10]<>0) AND (var_jahr_gesamt[10]<>0)) THEN
      EnterCell(RowNo,12,FORMAT(var_jahr_verl„ng[10]/var_jahr_gesamt[10]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[11]<>0) AND (var_jahr_gesamt[11]<>0)) THEN
      EnterCell(RowNo,13,FORMAT(var_jahr_verl„ng[11]/var_jahr_gesamt[11]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[12]<>0) AND (var_jahr_gesamt[12]<>0)) THEN
      EnterCell(RowNo,14,FORMAT(var_jahr_verl„ng[12]/var_jahr_gesamt[12]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[13]<>0) AND (var_jahr_gesamt[13]<>0)) THEN
      EnterCell(RowNo,15,FORMAT(var_jahr_verl„ng[13]/var_jahr_gesamt[13]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[14]<>0) AND (var_jahr_gesamt[14]<>0)) THEN
      EnterCell(RowNo,16,FORMAT(var_jahr_verl„ng[14]/var_jahr_gesamt[14]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[15]<>0) AND (var_jahr_gesamt[15]<>0)) THEN
      EnterCell(RowNo,17,FORMAT(var_jahr_verl„ng[15]/var_jahr_gesamt[15]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[16]<>0) AND (var_jahr_gesamt[16]<>0)) THEN
      EnterCell(RowNo,18,FORMAT(var_jahr_verl„ng[16]/var_jahr_gesamt[16]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[17]<>0) AND (var_jahr_gesamt[17]<>0)) THEN
      EnterCell(RowNo,19,FORMAT(var_jahr_verl„ng[17]/var_jahr_gesamt[17]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[18]<>0) AND (var_jahr_gesamt[18]<>0)) THEN
      EnterCell(RowNo,20,FORMAT(var_jahr_verl„ng[18]/var_jahr_gesamt[18]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[19]<>0) AND (var_jahr_gesamt[19]<>0)) THEN
      EnterCell(RowNo,21,FORMAT(var_jahr_verl„ng[19]/var_jahr_gesamt[19]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      IF ((var_jahr_verl„ng[20]<>0) AND (var_jahr_gesamt[20]<>0)) THEN
      EnterCell(RowNo,22,FORMAT(var_jahr_verl„ng[20]/var_jahr_gesamt[20]*100),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 63;
      EnterCell(RowNo,1,'Auf Laufzeit verteilt','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(var_jahr_wert[1]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(var_jahr_wert[2]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(var_jahr_wert[3]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(var_jahr_wert[4]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,FORMAT(var_jahr_wert[5]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(var_jahr_wert[6]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,9,FORMAT(var_jahr_wert[7]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,10,FORMAT(var_jahr_wert[8]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,11,FORMAT(var_jahr_wert[9]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(var_jahr_wert[10]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,FORMAT(var_jahr_wert[11]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,14,FORMAT(var_jahr_wert[12]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,FORMAT(var_jahr_wert[13]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,16,FORMAT(var_jahr_wert[14]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,17,FORMAT(var_jahr_wert[15]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(var_jahr_wert[16]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,19,FORMAT(var_jahr_wert[17]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,20,FORMAT(var_jahr_wert[18]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,21,FORMAT(var_jahr_wert[19]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,22,FORMAT(var_jahr_wert[20]),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('Serviceums„zte','Serviceums„tze','');
      //MESSAGE(Text003);
    END;

    LOCAL PROCEDURE Verk„ufercode_„ndern@1000000026();
    BEGIN
      {
      zaehler  := 0;
      zaehler2 := 0;

      kontakt.RESET;
      kontakt.SETRANGE(Type,kontakt.Type::Person);
      kontakt.SETRANGE(kontakt."Salesperson Code",'ESK');
      kontakt.SETRANGE(kontakt.Gesperrt,FALSE);
      IF kontakt.FIND('-') THEN
        REPEAT
          zaehler += 1;
          IF kontakt."Salesperson Code" = 'ESK' THEN BEGIN
            kontakt."Salesperson Code" := 'NM';
            kontakt.MODIFY;
            zaehler2 += 1;
          END;
        UNTIL kontakt.NEXT = 0;

      MESSAGE('Ge„nderte Kontakte : %1 (von %2)',zaehler2, zaehler);
      }


      {
      kontakt.RESET;
      kontakt.SETRANGE(Type,kontakt.Type::Company);
      kontakt.SETRANGE(kontakt."Salesperson Code",'ESK');
      kontakt.SETRANGE(kontakt.Gesperrt,FALSE);
      IF kontakt.FIND('-') THEN
        REPEAT
          zaehler += 1;
          IF kontakt."Salesperson Code" = 'ESK' THEN BEGIN
            kontakt."Salesperson Code" := 'NM';
            kontakt.MODIFY;
            zaehler2 += 1;
          END;
        UNTIL kontakt.NEXT = 0;
      }
      zaehler  := 0;
      zaehler2 := 0;

      deb.RESET;
      deb.SETRANGE(deb."Salesperson Code",'ESK');
      IF deb.FIND('-') THEN
        REPEAT
          zaehler += 1;
          IF deb."Salesperson Code" = 'ESK' THEN BEGIN
            deb."Salesperson Code" := 'NM';
            deb.MODIFY;
            zaehler2 += 1;
          END;
        UNTIL deb.NEXT = 0;

      MESSAGE('Ge„nderte Kontakte : %1 (von %2)',zaehler2, zaehler);
    END;

    LOCAL PROCEDURE Test_Auto_Start_AU@1000000027() var_AU_Nr_Test : Code[10];
    VAR
      var_AU_Nr_Test_1@1000000000 : Code[10];
    BEGIN
      //   Auftragsnummer in Tabelle zwischenspeichern und Report aufrufen, der aus der Tabelle die AU-Nr wieder liest
      //tab_ab_bw.RESET;







      //var_AU_Nr_Test:='AU248642';

      REPORT.RUN (50125,FALSE,FALSE);
    END;

    LOCAL PROCEDURE Rechnungsberprfung@1000000030();
    BEGIN
      // ANFANG t„gliche Rechnungsausg„nge aus Tabelle "Sales Invoice Header" in Excel ausgeben

      CreateExcel;
      RowNo := 1;

      EnterCell(RowNo,1,'Rechnungsausgang per','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(AE_holen_Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      //EnterCell(RowNo,3,'12.10.2021','',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,18,'DAMOVO: bei mehreren Rechnungen pro LS nur 1 x Lieferschein senden','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      //EnterCell(RowNo,3,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo +1;
      EnterCell(RowNo,1,'Re-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Lager','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Verk an','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Rech an','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Rech an Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Lief an Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'USt-ID','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Lief an','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Lief an Ort','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Betrag','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'W„hrung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Rahmen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Rahmen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'MWSt 13B2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Zolltarifnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'keine Rech drucken','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'Rech via Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'Rech Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'Champs Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'Serv via Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'Serv Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'Kunden Referenz','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      RowNo := RowNo +1;

      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1',AE_holen_Datum);
      //vkrk.SETFILTER(vkrk."Posting Date",'%1',12102021d);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          v_19MWSt:=FALSE;
          v_16MWSt:=FALSE;
          EnterCell(RowNo,1,vkrk."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,vkrk."Location Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,vkrk."Sell-to Customer No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,vkrk."Bill-to Customer No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,vkrk."Bill-to Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,vkrk."Ship-to Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF vkrk."Ship-to Country/Region Code" = 'DE' THEN BEGIN
            EnterCell(RowNo,7,vkrk."VAT Registration No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,8,vkrk."Ship-to Country/Region Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,7,FORMAT(vkrk."VAT Registration No."),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(vkrk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          END;
          EnterCell(RowNo,9,vkrk."Ship-to City",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          rech.RESET;
          rech.SETFILTER(rech."Document No.",'%1',vkrk."No.");
          rech.SETFILTER(rech.Type,'%1',rech.Type::Item);
          rech.SETFILTER(rech.Quantity,'<>%1',0);
          IF rech.FIND('-') THEN BEGIN
            REPEAT
              AE_t„gl_gesamt := AE_t„gl_gesamt + rech.Amount;
              IF rech."VAT Prod. Posting Group"='13B2' THEN var_text1 := rech."VAT Prod. Posting Group";
              IF rech."VAT Prod. Posting Group"='16_13B2' THEN var_text1 := rech."VAT Prod. Posting Group";
              //        var_text1 := rech."VAT Prod. Posting Group";
              IF ((rech."VAT Identifier"='16') OR (rech."VAT Identifier"='16_SYS') OR (rech."VAT Identifier"='16_DL') OR (rech."VAT Identifier"='16_13B2')) THEN v_16MWSt:=TRUE;
              IF ((rech."VAT Identifier"='19') OR (rech."VAT Identifier"='19SYS') OR (rech."VAT Identifier"='19DL') OR (rech."VAT Identifier"='13B2')) THEN v_19MWSt:=TRUE;
              Artikel.RESET;
              Artikel.SETFILTER(Artikel."No.",'%1',rech."No.");
              IF Artikel.FINDFIRST THEN BEGIN
                IF Artikel."Tariff No."='8542 3190 000' THEN var_text2:=Artikel."Tariff No.";
              END;
              IF v_rahmennr='' THEN v_rahmennr:=rech."Blanket Order No.";
              IF var_text3='' THEN BEGIN
                IF rech."Manufacturer Code"='57' THEN BEGIN
                 IF STRPOS(rech."No.",'CHAMPS')<>0 THEN var_text3 := 'CHAMPS Servicevertrag';
                 IF var_text3='CHAMPS Servicevertrag' THEN BEGIN
                 END ELSE BEGIN
                   IF STRPOS(rech."No.",'ACHAT')<>0 THEN  var_text3 := 'ACHAT Servicevertrag';
                 END;
                END;
                IF rech."Manufacturer Code"='5710' THEN BEGIN
                  IF var_text3='CHAMPS Servicevertrag' THEN BEGIN
                  END ELSE BEGIN
                    IF STRPOS(rech."No.",'ACTS')<>0 THEN  var_text3 := 'ACTS Servicevertrag';
                  END;
                  IF var_text3='' THEN var_text3 := 'SW Upgrade Protection';
                END;
              END ELSE BEGIN
                IF rech."Manufacturer Code"='57' THEN BEGIN
                 IF STRPOS(rech."No.",'CHAMPS')<>0 THEN var_text3 := 'CHAMPS Servicevertrag';
                 IF var_text3='CHAMPS Servicevertrag' THEN BEGIN
                 END ELSE BEGIN
                   IF STRPOS(rech."No.",'ACHAT')<>0 THEN  var_text3 := 'ACHAT Servicevertrag';
                 END;
                END;
                IF rech."Manufacturer Code"='5710' THEN BEGIN
                  IF var_text3='CHAMPS Servicevertrag' THEN BEGIN
                  END ELSE BEGIN
                    IF STRPOS(rech."No.",'ACTS')<>0 THEN  var_text3 := 'ACTS Servicevertrag';
                  END;
                  IF var_text3='' THEN var_text3 := 'SW Upgrade Protection';
                END;
              END;
            UNTIL rech.NEXT = 0;
          END;
      // AA1 Anfang  Wenn Variable AE_t„gl_gesamt = 0 ist, dann nach Sachkonto suchen und Variable mit Werten des Sachkto fllen
          IF AE_t„gl_gesamt= 0 THEN BEGIN
            rech1.RESET;
            rech1.SETFILTER(rech1."Document No.",'%1',vkrk."No.");
            rech1.SETFILTER(rech1.Type,'%1',rech1.Type::"G/L Account");
            rech1.SETFILTER(rech1.Quantity,'<>%1',0);
            IF rech1.FIND('-') THEN BEGIN
              REPEAT
                AE_t„gl_gesamt := AE_t„gl_gesamt + rech1.Amount;
              UNTIL rech1.NEXT=0;
            END;
          END;
      // AA1 ENDE

          EnterCell(RowNo,10,FORMAT(AE_t„gl_gesamt),'',FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,11,vkrk."Currency Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(vkrk."Currency Factor"),'',FALSE,FALSE,FALSE,'#,##0.00000',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,13,FORMAT(vkrk."Order No."),'',FALSE,FALSE,FALSE,'#,##0.00000',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,14,FORMAT(v_rahmennr),'',FALSE,FALSE,FALSE,'#,##0.00000',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,15,FORMAT(var_text1),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,16,FORMAT(var_text2),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);

          EnterCell(RowNo,23,vkrk."External Document No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,24,vkrk."Your Reference",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          deb.RESET;
          deb.SETFILTER(deb."No.",'%1',vkrk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            IF deb."Original RE nicht drucken" = TRUE THEN BEGIN
              EnterCell(RowNo,17,FORMAT(deb."Original RE nicht drucken"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              EnterCell(RowNo,17,FORMAT(deb."Original RE nicht drucken"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            END;
            IF deb."Rech via EMail" = TRUE THEN BEGIN
              EnterCell(RowNo,18,FORMAT(deb."Rech via EMail"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Rech EMail-Adresse" = '' THEN BEGIN
                EnterCell(RowNo,19,FORMAT(deb."Rech EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,19,vkrk."Rech EMail-Adresse",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
            END ELSE BEGIN
              EnterCell(RowNo,18,FORMAT(deb."Rech via EMail"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            END;

            IF deb."Service via EMail" = TRUE THEN BEGIN
              EnterCell(RowNo,21,FORMAT(deb."Service via EMail"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);

              IF var_text3<>'' THEN BEGIN
                EnterCell(RowNo,20,FORMAT(var_text3),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);

                IF vkrk."Service EMail-Adresse" ='' THEN BEGIN
                  EnterCell(RowNo,22,deb."Service EMail-Adresse",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,22,vkrk."Service EMail-Adresse",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END ELSE BEGIN
                EnterCell(RowNo,20,'.','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

            END ELSE BEGIN
              EnterCell(RowNo,20,'.','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,21,FORMAT(deb."Service via EMail"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            END;
          END;

          IF v_16MWSt=TRUE THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,5,'Rechnung enth„lt mind. eine 16% MWSt-Zeile!','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;

          AE_t„gl_gesamt := 0;
          var_text1 := '';
          var_text2 := '';
          var_text3 := '';
          v_rahmennr:='';
          RowNo := RowNo +1;
        UNTIL vkrk.NEXT = 0;
      END;
      RowNo := RowNo +2;
      EnterCell(RowNo,1,'anbei erhalten Sie eine Kopie Ihrer Rechnung, da das Original per Post an Sie gesendet wurde.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      CloseExcel('tgl_Rech_šberwachung_'+FORMAT(AE_holen_Datum),'tgl_Rech_šberwachung_'+FORMAT(AE_holen_Datum),'F:\Daten Neu\User\Joachim\AB-Differenzen\Rechnungsausgang\2021_2022');
      //CloseExcel('tgl_Rech_šberwachung_'+'13102021','tgl_Rech_šberwachung_'+'13102021','F:\Daten Neu\User\Joachim\AB-Differenzen\Rechnungsausgang\2021_2022');

      //CloseExcel('Uwetest','Uwetest','F:\Daten Neu\User\Uwe\Uwe\');
    END;

    LOCAL PROCEDURE Bestelldatumberprfung@1000000031();
    BEGIN

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Datum-šberprfung bei Bestellungen  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,'Es werden alle Bestellungen gelistet, Erw. Versanddatum = 31.12.2055; zugesagter WE <> 31.12.2055!','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,1,'Bestellnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Bestelldatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Bestellzeile','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'gewnschter WE','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'zugesagter WE','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Erwart. Versand','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;

      ekz.RESET;
      ekz.SETFILTER(ekz."Document Type",'%1',ekz."Document Type"::Order);
      ekz.SETFILTER(ekz.Type,'%1',ekz.Type::Item);
      ekz.SETFILTER(ekz."Outstanding Quantity",'<>%1',0);
      ekz.SETFILTER(ekz."Expected Receipt Date",'%1',31122055D);
      ekz.SETFILTER(ekz."Promised Receipt Date",'<>%1',31122055D);
      IF ekz.FIND('-') THEN BEGIN
        REPEAT
          //    IF ekz."Requested Receipt Date" <> 31122055d THEN BEGIN
          //    END ELSE BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT(ekz."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,FORMAT(ekz."Order Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,3,FORMAT(ekz."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,4,FORMAT(ekz."Requested Receipt Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,5,FORMAT(ekz."Promised Receipt Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,6,FORMAT(ekz."Expected Receipt Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,8,FORMAT(ekz."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    END;
        UNTIL ekz.NEXT=0;
      END;


      Pfad_tag :=FORMAT(DATE2DMY(WORKDATE,1));
      Pfad_monat := FORMAT(DATE2DMY(WORKDATE,2));
      Pfad_jahr := FORMAT(DATE2DMY(WORKDATE,3));
      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;

      CloseExcel('BE_Datums_Kontolle'+Pfaddatum,'BE_Datums_Kontrolle'+Pfaddatum,'F:\Daten Neu\User\Joachim\BE-šberprfung\2021_2022');
    END;

    LOCAL PROCEDURE AU_Žnd_Best„t_šberprfung@1000000034();
    BEGIN
      //MESSAGE('Es funktioniert!');

      // ANFANG Als erstes Datum einfgen -> Sicherstellung Ausfhrung nur 1 x pro Tag
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','šBSY');
      tab_ab_bw.SETFILTER(Datum,'%1',31122222D);
      tab_ab_bw.SETFILTER(AU_Nr,'%1','AU999998');
      tab_ab_bw.SETFILTER(POS_Nr,'%1',10000);
      IF tab_ab_bw.FINDFIRST THEN BEGIN
      IF tab_ab_bw.Wunschdatum = WORKDATE THEN BEGIN
        ERROR('Der Job wurde heute bereits ausgefhrt');
      END ELSE BEGIN
      //  MESSAGE('Am Ende kommt ein Best„tigungsfenster. Wird dieses nicht angezeigt ist der Job fehlerhaft beendet. IT informieren!');
        tab_ab_bw.Wunschdatum := WORKDATE;
        tab_ab_bw.MODIFY;
      END;
      // ENDE Als erstes Datum einfgen

      //  ANFANG  L”schen und umbenennen von alten S„tzen
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','KONA');
      tab_ab_bw.SETFILTER(Art,'%1','AL2');
      IF tab_ab_bw.FINDFIRST THEN tab_ab_bw.DELETEALL;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','KONA');
      tab_ab_bw.SETFILTER(Art,'%1','AL1');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Art := 'AL2';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','KONA');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Art := 'AL1';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','KONA');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Art := 'ALT';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','KONA');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'NN';
          tab_ab_bw.Stat_Artikel := 'NN';
          tab_ab_bw.Stat_Menge := 'NN';
          tab_ab_bw.Stat_EK := 'NN';
          tab_ab_bw.Stat_VK := 'NN';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE  L”schen und umbenennen von alten S„tzen


      // ANFANG Einfgen von neuem AB
      tab_ab.RESET;
      tab_ab.SETFILTER("Document Type",'%1', tab_ab."Document Type"::Order);
      tab_ab.SETFILTER(Type,'%1',tab_ab.Type::Item);
      tab_ab.SETFILTER("Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
      //tab_ab.SETFILTER(tab_ab."Outstanding Quantity",'>%1',0);
      IF tab_ab.FIND('-')  THEN
        REPEAT
          tab_ab_bw.INIT;
          tab_ab_bw.Belegart := 'KONA';
          //    tab_ab_bw.Datum := 290220D;
          tab_ab_bw.Datum := AE_holen_Datum;
          tab_ab_bw.AU_Nr := tab_ab."Document No.";
          tab_ab_bw.POS_Nr := tab_ab."Line No.";
          tab_ab_bw.Deb_Nr := tab_ab."Sell-to Customer No.";
          tab_ab_bw.Artikel := tab_ab."No.";
          tab_ab_bw.Menge := tab_ab.Quantity;
          tab_ab_bw.Restmenge := tab_ab."Outstanding Quantity";
          tab_ab_bw.EK := tab_ab."Unit Cost (LCY)";
          tab_ab_bw.VK := tab_ab."Unit Price";
          tab_ab_bw."Best„tigt LD" := tab_ab."Promised Delivery Date";
          tab_ab_bw.Wunschdatum := tab_ab."Requested Delivery Date";
          tab_ab_bw.Status := 'NN';
          tab_ab_bw.Art := 'NEU';
          tab_ab_bw."EK Gesamt" := ROUND(((tab_ab.Quantity) * (tab_ab."Unit Cost (LCY)")),0.01);
          tab_ab_bw."VK Gesamt" := ROUND(((tab_ab.Quantity) * (tab_ab."Unit Price")),0.01);
          tab_ab_bw.Lager := tab_ab."Location Code";
          tab_ab_bw."DB %" := tab_ab."Profit %";
          tab_ab_bw.Linie := tab_ab."Manufacturer Code";
          tab_ab_bw.Endkunde := tab_ab.Endkunde;
          IF tab_ab."Blanket Order No." <> '' THEN tab_ab_bw."AU aus Rahmen" := TRUE;

          tab_vkk.RESET;
          tab_vkk.SETFILTER("No.",'%1',tab_ab_bw.AU_Nr);
          IF tab_vkk.FINDFIRST THEN BEGIN
            tab_ab_bw.Debitor := tab_vkk."Sell-to Customer Name";
            tab_ab_bw.W„hrungscode := tab_vkk."Currency Code";
            tab_ab_bw.Auftragsdatum := tab_vkk."Order Date";
            tab_ab_bw.Buchungsdatum := tab_vkk."Posting Date";
            tab_ab_bw.Belegdatum := tab_vkk."Document Date";
            tab_ab_bw.Betreuer := tab_vkk."Betreuer Innendienst";
            tab_ab_bw.Vertreter := tab_vkk."Salesperson Code";
            tab_ab_bw.Teams := tab_vkk.Teams;
            tab_ab_bw.Plz := tab_vkk."Sell-to Post Code";
            tab_ab_bw.Gebietscode := tab_vkk."Territory Code";
            tab_ab_bw."Rech. an Deb.-Nr." := tab_vkk."Bill-to Customer No.";
            tab_ab_bw."Rech. an Name" := tab_vkk."Bill-to Name";
            tab_ab_bw."Rech. an Name 2" := tab_vkk."Bill-to Name 2";
            tab_ab_bw."Rech. an Adresse" := tab_vkk."Bill-to Address";
            tab_ab_bw."Rech. an Adresse 2" := tab_vkk."Bill-to Address 2";
            tab_ab_bw."Rech. an Ort" := tab_vkk."Bill-to City";
            tab_ab_bw."Rech. an Bundesregion" := tab_vkk."Bill-to County";
            tab_ab_bw."Rech. an PLZ-Code" := tab_vkk."Bill-to Post Code";
            tab_ab_bw."Rech. an L„nder-/Regionscode" := tab_vkk."Bill-to Country/Region Code";
            tab_ab_bw."Lief. an Code" := tab_vkk."Ship-to Code";
            tab_ab_bw."Lief. an Name" := tab_vkk."Ship-to Name";
            tab_ab_bw."Lief. an Name 2" := tab_vkk."Ship-to Name 2";
            tab_ab_bw."Lief. an Adresse" := tab_vkk."Ship-to Address";
            tab_ab_bw."Lief. an Adresse 2" := tab_vkk."Ship-to Address 2";
            tab_ab_bw."Lief. an Ort" := tab_vkk."Ship-to City";
            tab_ab_bw."Lief. an Bundesregion" := tab_vkk."Ship-to County";
            tab_ab_bw."Lief. an PLZ-Code" := tab_vkk."Ship-to Post Code";
            tab_ab_bw."Lief. an L„nder-/Regionscode" := tab_vkk."Ship-to Country/Region Code";

          END;
          tab_ab_bw.INSERT;
        UNTIL tab_ab.NEXT = 0;
      END;
      //  ENDE Einfgen von neuem AB

      // ANFANG Kurse des AU holen
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','KONA');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(W„hrungscode,'<>%1','');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_kurse.RESET;
          tab_kurse.SETFILTER("Starting Date",'%1',tab_ab_bw.Auftragsdatum);
          tab_kurse.SETFILTER("Currency Code",'%1',tab_ab_bw.W„hrungscode);
          IF tab_kurse.FINDFIRST THEN BEGIN
            tab_ab_bw.w„_faktor := tab_kurse."Exchange Rate Amount";
            tab_ab_bw."VK Gesamt" := ROUND((((tab_ab.Quantity) * (tab_ab."Unit Price")) / (tab_kurse."Exchange Rate Amount")),2);
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      // ENDE Kurse des AU holen


      "Linien umsetzen";


      // ANFANG Als letztes wird dieses Datum berprft -> Sicherstellung Ausfhrung nur 1 x pro Tag
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','šBSY');
      tab_ab_bw.SETFILTER(Datum,'%1',31122222D);
      tab_ab_bw.SETFILTER(AU_Nr,'%1','AU999998');
      tab_ab_bw.SETFILTER(POS_Nr,'%1',10000);
      IF tab_ab_bw.FINDFIRST THEN BEGIN
       IF tab_ab_bw.Wunschdatum <> WORKDATE THEN BEGIN
         ERROR(' Der JOB wurde nicht ordnungsgem„á beendet. Fehler bitte beheben!');
       END;

      END;
      //  Als letztes wird dieses Datum berprft und eine Meldung erzeugt. Kommt eine Meldung ist der Job nicht durchgelaufen!!!
      // ENDE Als letztes Datum berprfen


      AU_Žnd_Best„t_šberprfung2;
    END;

    LOCAL PROCEDURE AU_Žnd_Best„t_šberprfung2@1000000035();
    BEGIN

      //  ANFANG Feststellen, ob neuer Auftrag/Pos vorliegt
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','KONA');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      //tab_ab_bw.SETFILTER(Status,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          prf.RESET;
          tab_ab_bw.SETFILTER(Belegart,'%1','KONA');
          prf.SETFILTER(Art,'%1','ALT');
          prf.SETFILTER(AU_Nr,'%1',tab_ab_bw.AU_Nr);
          IF prf.FINDFIRST THEN BEGIN
      //  Neue Position zu altem Auftrag
            tab_ab_bw.Status := 'NP';
            tab_ab_bw.MODIFY;
          END ELSE BEGIN
      //  Neuer Auftrag
      //      tab_ab_bw.Status := 'NA';
      //      tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE   Feststellen, ob neuer Auftrag/Pos vorliegt
      //  ANFANG Vergleich zwischen NEU und ALT (tab_ab_bw=NEU  und prf=ALT)
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','KONA');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          prf.RESET;
          prf.SETFILTER(Belegart,'%1','KONA');
          prf.SETFILTER(AU_Nr,'%1',tab_ab_bw.AU_Nr);
          prf.SETFILTER(POS_Nr,'%1',tab_ab_bw.POS_Nr);
          prf.SETFILTER(Art,'%1','ALT');
          IF prf.FINDFIRST THEN BEGIN
            tab_ab_bw.Status := '';
            IF prf."Rech. an Deb.-Nr." = tab_ab_bw."Rech. an Deb.-Nr." THEN BEGIN
              tab_ab_bw.Stat_DebNr := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_DebNr := 'Deb_Fehler';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Rech. an Name" = tab_ab_bw."Rech. an Name" THEN BEGIN
              tab_ab_bw.Stat_Name := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Name := 'Name_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Rech. an Name 2" = tab_ab_bw."Rech. an Name 2" THEN BEGIN
              tab_ab_bw.Stat_Name2 := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Name2 := 'Name2_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Rech. an Adresse" = tab_ab_bw."Rech. an Adresse" THEN BEGIN
              tab_ab_bw.Stat_Adresse := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Adresse := 'Adr_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Rech. an Adresse 2" = tab_ab_bw."Rech. an Adresse 2" THEN BEGIN
              tab_ab_bw.Stat_adresse2 := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_adresse2 := 'Adr2_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Rech. an Ort" = tab_ab_bw."Rech. an Ort" THEN BEGIN
              tab_ab_bw.Stat_Ort := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Ort := 'Ort_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Rech. an PLZ-Code" = tab_ab_bw."Rech. an PLZ-Code" THEN BEGIN
              tab_ab_bw.Stat_PLZ := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_PLZ := 'PLZ_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Rech. an Bundesregion" = tab_ab_bw."Rech. an Bundesregion" THEN BEGIN
              tab_ab_bw.Stat_Region := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Region := 'Region_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Rech. an L„nder-/Regionscode" = tab_ab_bw."Rech. an L„nder-/Regionscode" THEN BEGIN
              tab_ab_bw.Stat_Land := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Land := 'Land_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;


            IF prf. "Lief. an Code" = tab_ab_bw."Lief. an Code" THEN BEGIN
              tab_ab_bw.Stat_Li_Code := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Li_Code := 'Lief_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Lief. an Name" = tab_ab_bw."Lief. an Name" THEN BEGIN
              tab_ab_bw.Stat_Li_Name := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Li_Name := 'Name_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Lief. an Name 2" = tab_ab_bw."Lief. an Name 2" THEN BEGIN
              tab_ab_bw.Stat_Li_Name2 := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Li_Name2 := 'Name2_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Lief. an Adresse" = tab_ab_bw."Lief. an Adresse" THEN BEGIN
              tab_ab_bw.Stat_Li_Adresse := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Li_Adresse := 'Adr_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Lief. an Adresse 2" = tab_ab_bw."Lief. an Adresse 2" THEN BEGIN
              tab_ab_bw.Stat_Li_Adresse2 := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Li_Adresse2 := 'Adr2_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Lief. an Ort" = tab_ab_bw."Lief. an Ort" THEN BEGIN
              tab_ab_bw.Stat_Li_Ort := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Li_Ort := 'Ort_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Lief. an PLZ-Code" = tab_ab_bw."Lief. an PLZ-Code" THEN BEGIN
              tab_ab_bw.Stat_Li_PLZ := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Li_PLZ := 'PLZ_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Lief. an Bundesregion" = tab_ab_bw."Lief. an Bundesregion" THEN BEGIN
              tab_ab_bw.Stat_Li_Region := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Li_Region := 'Region_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf."Lief. an L„nder-/Regionscode" = tab_ab_bw."Lief. an L„nder-/Regionscode" THEN BEGIN
              tab_ab_bw.Stat_Li_Land := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Li_Land := 'Land_Fehl';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf.Menge = tab_ab_bw.Menge THEN BEGIN
              tab_ab_bw.Stat_Menge := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Menge:= 'MF';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf.VK = tab_ab_bw.VK THEN BEGIN
              tab_ab_bw.Stat_VK := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_VK:= 'VF';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;


            IF prf.Artikel = tab_ab_bw.Artikel THEN BEGIN
              tab_ab_bw.Stat_Artikel := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Artikel:= 'AF';
              tab_ab_bw.Status := 'FF';
              prf.Status := 'FF';
            END;

            IF prf.Wunschdatum = tab_ab_bw.Wunschdatum THEN BEGIN
              tab_ab_bw.Stat_Wunsch := 'OK';
            END ELSE BEGIN
              IF tab_ab_bw.Status = 'FF' THEN BEGIN
                tab_ab_bw.Stat_Wunsch := 'WF';
              END ELSE BEGIN
                IF tab_ab_bw.Belegdatum=v_au_„nd_best_datum THEN BEGIN
                  tab_ab_bw.Stat_Wunsch := 'WF';
                  tab_ab_bw.Status := 'FD';
                END;
              END;
              prf.Status := 'FF';
            END;

            IF prf."Best„tigt LD" = tab_ab_bw."Best„tigt LD" THEN BEGIN
              tab_ab_bw.Stat_Best„t := 'OK';
            END ELSE BEGIN
              IF tab_ab_bw.Status = 'FF' THEN BEGIN
                tab_ab_bw.Stat_Best„t := 'BF';
              END ELSE BEGIN
                IF tab_ab_bw.Belegdatum=v_au_„nd_best_datum THEN BEGIN
                  tab_ab_bw.Stat_Best„t := 'BF';
                  tab_ab_bw.Status := 'FD';
                END;
              END;
              prf.Status := 'FF';
            END;
            tab_ab_bw.MODIFY;
            prf.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      // Alle Fehler erhalten den Status FF, nur ungleiches "Best„tigtes Lieferdatum" erh„lt den Status FD, wenn sonst noch kein Fehler vorlag.(Gilt auch fr Wunschdatum)
      // Es k”nnen somit alle Žnderungen angezeigt werden oder Fehler ohne ge„ndertes Best„tigtes Lieferdatum. (Gilt auch fr Wunschdatum)
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Auftrag„nderungsbest„tigungsberwachung  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Pos-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Debitor','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Lager','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'EK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'VK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Status','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Best.Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Wunschdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Debitor Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'Name2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'Adresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'Adresse2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'PLZ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'Ort','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'Region','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'Lief_Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,25,'Lief_Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,26,'Lief_Name2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,27,'Lief_Adresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,28,'Lief_Adresse2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,29,'Lief_PLZ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,30,'Lief_Ort','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,31,'Lief_Region','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,32,'Lief_Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,33,'Buchungsdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,34,'Auftragsdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,35,'Belegdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      var_AU_Nr := 'AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(Belegart,'%1','KONA');
      tab_ab_bw.SETFILTER(Art,'%1', 'NEU');
      IF v_au_„nd_best_alle = TRUE THEN BEGIN
        tab_ab_bw.SETFILTER(Status,'%1', 'FF');
      END ELSE BEGIN
        tab_ab_bw.SETFILTER(Status,'%1|%2|%3', 'FF','FD','NP');
      END;
      IF tab_ab_bw.FIND('-') THEN BEGIN
      RowNo := RowNo +1;
        REPEAT
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,2,tab_ab_bw.AU_Nr,TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk.TABLENAME,1,42,tab_vkk."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,4,tab_ab_bw.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_ab_bw.Stat_Artikel = 'OK' THEN BEGIN
            //      EnterCell(RowNo,5,tab_ab_bw.Stat_Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,5,tab_ab_bw.Stat_Artikel,'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Menge = 'OK' THEN BEGIN
            //      EnterCell(RowNo,6,tab_ab_bw.Stat_Menge,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,6,tab_ab_bw.Stat_Menge,'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,tab_ab_bw.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);

          IF tab_ab_bw.Stat_VK = 'OK' THEN BEGIN
            //      EnterCell(RowNo,10,tab_ab_bw.Stat_VK,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,10,tab_ab_bw.Stat_VK,'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          EnterCell(RowNo,11,tab_ab_bw.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,tab_ab_bw.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          IF tab_ab_bw.Stat_Best„t = 'OK' THEN BEGIN
            //      EnterCell(RowNo,13,tab_ab_bw.Stat_Best„t,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,13,tab_ab_bw.Stat_Best„t,'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Wunsch = 'OK' THEN BEGIN
            //      EnterCell(RowNo,14,tab_ab_bw.Stat_Wunsch,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,14,tab_ab_bw.Stat_Wunsch,'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_DebNr='OK' THEN BEGIN
            //      EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_DebNr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_DebNr),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Name='OK' THEN BEGIN
            //      EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_Name),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_Name),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Name2='OK' THEN BEGIN
            //      EnterCell(RowNo,17,FORMAT(tab_ab_bw.Stat_Name2),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,17,FORMAT(tab_ab_bw.Stat_Name2),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Adresse='OK' THEN BEGIN
            //      EnterCell(RowNo,18,FORMAT(tab_ab_bw.Stat_Adresse),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,18,FORMAT(tab_ab_bw.Stat_Adresse),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_adresse2='OK' THEN BEGIN
            //      EnterCell(RowNo,19,FORMAT(tab_ab_bw.Stat_adresse2),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.Stat_adresse2),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_PLZ='OK' THEN BEGIN
            //      EnterCell(RowNo,20,FORMAT(tab_ab_bw.Stat_PLZ),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.Stat_PLZ),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Ort='OK' THEN BEGIN
            //      EnterCell(RowNo,21,FORMAT(tab_ab_bw.Stat_Ort),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,21,FORMAT(tab_ab_bw.Stat_Ort),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Region='OK' THEN BEGIN
            //      EnterCell(RowNo,22,FORMAT(tab_ab_bw.Stat_Region),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,22,FORMAT(tab_ab_bw.Stat_Region),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Land='OK' THEN BEGIN
            //      EnterCell(RowNo,23,FORMAT(tab_ab_bw.Stat_Land),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,23,FORMAT(tab_ab_bw.Stat_Land),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Li_Code='OK' THEN BEGIN
            //       EnterCell(RowNo,24,FORMAT(tab_ab_bw.Stat_Li_Code),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
             EnterCell(RowNo,24,FORMAT(tab_ab_bw.Stat_Li_Code),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Li_Name='OK' THEN BEGIN
            //      EnterCell(RowNo,25,FORMAT(tab_ab_bw.Stat_Li_Name),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,25,FORMAT(tab_ab_bw.Stat_Li_Name),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Li_Name2='OK' THEN BEGIN
            //      EnterCell(RowNo,26,FORMAT(tab_ab_bw.Stat_Li_Name2),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,26,FORMAT(tab_ab_bw.Stat_Li_Name2),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Li_Adresse='OK' THEN BEGIN
            //      EnterCell(RowNo,27,FORMAT(tab_ab_bw.Stat_Li_Adresse),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,27,FORMAT(tab_ab_bw.Stat_Li_Adresse),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Li_Adresse2='OK' THEN BEGIN
            //      EnterCell(RowNo,28,FORMAT(tab_ab_bw.Stat_Li_Adresse2),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,28,FORMAT(tab_ab_bw.Stat_Li_Adresse2),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Li_PLZ='OK' THEN BEGIN
            //      EnterCell(RowNo,29,FORMAT(tab_ab_bw.Stat_Li_PLZ),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,29,FORMAT(tab_ab_bw.Stat_Li_PLZ),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Li_Ort='OK' THEN BEGIN
            //      EnterCell(RowNo,30,FORMAT(tab_ab_bw.Stat_Li_Ort),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,30,FORMAT(tab_ab_bw.Stat_Li_Ort),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Li_Region='OK' THEN BEGIN
            //      EnterCell(RowNo,31,FORMAT(tab_ab_bw.Stat_Li_Region),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,31,FORMAT(tab_ab_bw.Stat_Li_Region),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_ab_bw.Stat_Li_Land='OK' THEN BEGIN
            //      EnterCell(RowNo,32,FORMAT(tab_ab_bw.Stat_Li_Land),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,32,FORMAT(tab_ab_bw.Stat_Li_Land),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          var_AU_Nr1 := 'AU200000';
          prf.RESET;
          prf.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
          prf.SETFILTER(prf.AU_Nr,'%1',tab_ab_bw.AU_Nr);
          prf.SETFILTER(prf.POS_Nr,'%1',tab_ab_bw.POS_Nr);
          prf.SETFILTER(Belegart,'%1','KONA');
          prf.SETFILTER(Art,'%1|%2', 'NEU','ALT');
          //"prf".SETFILTER(Status,'%1', 'FF');
          IF prf.FIND('-') THEN BEGIN
            REPEAT
              IF prf.AU_Nr = var_AU_Nr1 THEN BEGIN
                EnterCell(RowNo,1,FORMAT(prf.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,2,prf.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,3,FORMAT(prf.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,4,prf.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,5,prf.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,6,FORMAT(prf.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,7,FORMAT(prf.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,8,prf.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,9,FORMAT(prf.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,10,FORMAT(prf.VK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,11,prf.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,12,prf.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,13,FORMAT(prf."Best„tigt LD"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,14,FORMAT(prf.Wunschdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,15,FORMAT(prf."Rech. an Deb.-Nr."),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,16,FORMAT(prf."Rech. an Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,17,FORMAT(prf."Rech. an Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,18,FORMAT(prf."Rech. an Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,19,FORMAT(prf."Rech. an Adresse 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,20,FORMAT(prf."Rech. an PLZ-Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,21,FORMAT(prf."Rech. an Ort"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,22,FORMAT(prf."Rech. an Bundesregion"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,23,FORMAT(prf."Rech. an L„nder-/Regionscode"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,24,FORMAT(prf."Lief. an Code"),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,25,FORMAT(prf."Lief. an Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,26,FORMAT(prf."Lief. an Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,27,FORMAT(prf."Lief. an Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,28,FORMAT(prf."Lief. an Adresse 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,29,FORMAT(prf."Lief. an PLZ-Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,30,FORMAT(prf."Lief. an Ort"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,31,FORMAT(prf."Lief. an Bundesregion"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,32,FORMAT(prf."Lief. an L„nder-/Regionscode"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,33,FORMAT(prf.Buchungsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,34,FORMAT(prf.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,35,FORMAT(prf.Belegdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                RowNo := RowNo +1;
              END ELSE BEGIN
                RowNo := RowNo +1;
                EnterCell(RowNo,1,FORMAT(prf.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,2,prf.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,3,FORMAT(prf.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,4,prf.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,5,prf.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,6,FORMAT(prf.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,7,FORMAT(prf.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,8,prf.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,9,FORMAT(prf.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,10,FORMAT(prf.VK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,11,prf.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,12,prf.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,13,FORMAT(prf."Best„tigt LD"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,14,FORMAT(prf.Wunschdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,15,FORMAT(prf."Rech. an Deb.-Nr."),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,16,FORMAT(prf."Rech. an Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,17,FORMAT(prf."Rech. an Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,18,FORMAT(prf."Rech. an Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,19,FORMAT(prf."Rech. an Adresse 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,20,FORMAT(prf."Rech. an PLZ-Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,21,FORMAT(prf."Rech. an Ort"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,22,FORMAT(prf."Rech. an Bundesregion"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,23,FORMAT(prf."Rech. an L„nder-/Regionscode"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,24,FORMAT(prf."Lief. an Code"),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,25,FORMAT(prf."Lief. an Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,26,FORMAT(prf."Lief. an Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,27,FORMAT(prf."Lief. an Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,28,FORMAT(prf."Lief. an Adresse 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,29,FORMAT(prf."Lief. an PLZ-Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,30,FORMAT(prf."Lief. an Ort"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,31,FORMAT(prf."Lief. an Bundesregion"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,32,FORMAT(prf."Lief. an L„nder-/Regionscode"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,33,FORMAT(prf.Buchungsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,34,FORMAT(prf.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,35,FORMAT(prf.Belegdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                RowNo := RowNo +1;
                var_AU_Nr1 := prf.AU_Nr;
              END;
            UNTIL prf.NEXT = 0;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      Pfad_tag := FORMAT(DATE2DMY(AE_holen_Datum,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      CloseExcel('ŽN_AB_Diff'+Pfaddatum,'ŽN_AB_Diff'+Pfaddatum,'F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022');
    END;

    LOCAL PROCEDURE AB_PDF_KONTROLLE@1000000032();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Auftragsbest„tigungen per PDF ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(v_au_„nd_best_datum1),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,6,'Versandhinweise in rot','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Debitor','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(RowNo,5,'Lagerort','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Zahl.Beding.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Ext. Belegnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Keine AB ohne Termin','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'AV mitschicken','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'EMail Adr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'AB via EMail','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Keine AB','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Nur bei Abweichung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'AB vor Wandlung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Best„t. Internet','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'SerNr. via EMail','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'Keine Rahmen-AB via EMail','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'Keine Rahmen-AB an Kunden','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'Rech via Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      tab_vkk.RESET;
      tab_vkk.SETFILTER(tab_vkk."Document Type",'%1|%2', tab_vkk."Document Type"::"Blanket Order",tab_vkk."Document Type"::Order);
      tab_vkk.SETFILTER(tab_vkk."Order Date",'%1',v_au_„nd_best_datum1);
      tab_vkk.SETFILTER(tab_vkk."Location Code",'%1|%2', 'ZENT','KONSI');
      tab_vkk.SETAUTOCALCFIELDS("AB via EMail",Comment);
      IF tab_vkk.FIND('-') THEN BEGIN
        RowNo := RowNo +1;
        REPEAT
          zaehler:=0;
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT(tab_vkk."Document Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          //    EnterCell(RowNo,2,tab_vkk."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,tab_vkk."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk.TABLENAME,1,42,tab_vkk."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,tab_vkk."Sell-to Customer No.",'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,4,tab_vkk."Sell-to Customer Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,tab_vkk."Location Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,tab_vkk."Payment Terms Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,tab_vkk."External Document No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          deb.RESET;
          deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            IF deb."AB nur best„tigt" = TRUE THEN EnterCell(RowNo,8,'Keine AB ohne Termin','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb.ADV = FALSE THEN BEGIN
              IF deb."Territory Code"='SYSTEM' THEN BEGIN
                tab_ab.RESET;
                tab_ab.SETFILTER(tab_ab."Document No.",'%1',tab_vkk."No.");
                tab_ab.SETFILTER(tab_ab.Type,'%1',tab_ab.Type::Item);
                tab_ab.SETFILTER(tab_ab.Quantity,'<>%1',0);
                IF tab_ab.FIND('-') THEN BEGIN
                  REPEAT

                    Artikel.RESET;
                    Artikel.SETFILTER(Artikel."No.",'%1',tab_ab."No.");
                    IF Artikel.FINDFIRST THEN BEGIN
                      IF Artikel.Artikelgruppe='CHAMPS' THEN BEGIN
                        IF zaehler=0 THEN EnterCell(RowNo,9,'AV mitschicken','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                         zaehler:=1;
                      END;
                    END;
                  UNTIL tab_ab.NEXT=0;
                END;
              END;
            END;
          END;

          EnterCell(RowNo,10,tab_vkk."AB EMail-Adresse",'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          IF tab_vkk."AB via EMail" = TRUE THEN  EnterCell(RowNo,11,'AB via EMail','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF tab_vkk."keine Rahmen-AB via Email" = TRUE THEN  EnterCell(RowNo,17,'Keine Rahmen-AB via EMail','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF tab_vkk."keine Rahmen-AB an Kunden" = TRUE THEN  EnterCell(RowNo,18,'Keine Rahmen-AB an Kunden','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF tab_vkk."Keine AB an Kunden" = TRUE THEN  EnterCell(RowNo,12,'Keine AB an Kunden','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          deb.RESET;
          deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            IF deb."AB nur bei Abweichungen" = TRUE THEN EnterCell(RowNo,13,'AB nur bei Abweichung','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb."AB vor Wandlung" = TRUE THEN EnterCell(RowNo,14,'AB vor Wandlung','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb."SerNr. via EMail" = TRUE THEN EnterCell(RowNo,16,'SerNr. via EMail','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Best„tigung via Internet" = TRUE THEN EnterCell(RowNo,15,'Best„tigung via Internet','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Rech via EMail" = TRUE THEN EnterCell(RowNo,19,'Rech via EMail','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
        UNTIL tab_vkk.NEXT = 0;
      END;

      Pfad_tag := FORMAT(DATE2DMY(AE_holen_Datum,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      CloseExcel('AB_Versand'+Pfaddatum,'AB_Versand'+Pfaddatum,'F:\Daten Neu\Gemeinsame Ordner\Customer Service\EMailVersand\pdfVersandKontrolle\2022');
    END;

    LOCAL PROCEDURE AEND_AB_PDF_KONTROLLE@1000000033();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Žnderungs-Auftragsbest„tigungen per PDF ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(v_au_„nd_best_datum1),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,6,'Versandhinweise in rot','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Debitor','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Lagerort','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(RowNo,6,'Zahl.Beding.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Ext. Belegnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Keine AB ohne Termin','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'AV mitschicken','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'EMail Adr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'AB via EMail','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Keine AB','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Nur bei Abweichung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'AB vor Wandlung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Best„t. Internet','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'SerNr. via EMail','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'Keine Rahmen-AB via EMail','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'Keine Rahmen-AB an Kunden','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'Rech via Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      tab_vkk.RESET;
      tab_vkk.SETFILTER(tab_vkk."Document Type",'%1|%2', tab_vkk."Document Type"::"Blanket Order",tab_vkk."Document Type"::Order);
      tab_vkk.SETFILTER(tab_vkk."Order Date",'<>%1',v_au_„nd_best_datum1);
      tab_vkk.SETFILTER(tab_vkk."Document Date",'%1',v_au_„nd_best_datum1);
      tab_vkk.SETFILTER(tab_vkk."Posting Date",'<>%1',v_au_„nd_best_datum1);
      tab_vkk.SETFILTER(tab_vkk."Location Code",'%1|%2', 'ZENT','KONSI');
      tab_vkk.SETAUTOCALCFIELDS("AB via EMail");
      IF tab_vkk.FIND('-') THEN BEGIN
       RowNo := RowNo +1;
        REPEAT
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT(tab_vkk."Document Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          //    EnterCell(RowNo,2,tab_vkk."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,tab_vkk."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk.TABLENAME,1,42,tab_vkk."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,tab_vkk."Sell-to Customer No.",'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,4,tab_vkk."Sell-to Customer Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,tab_vkk."Location Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,tab_vkk."Payment Terms Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,tab_vkk."External Document No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          //    deb.RESET;
          //    deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          //    IF deb.FINDFIRST THEN BEGIN
          //      IF deb."AB nur best„tigt" = TRUE THEN EnterCell(RowNo,7,'Keine AB ohne Termin','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          //      IF deb.ADV = FALSE THEN BEGIN
          //        IF deb."Territory Code"='SYSTEM' THEN EnterCell(RowNo,8,'AV mitschicken','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          //      END;
          //    END;

          deb.RESET;
          deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            IF deb."AB nur best„tigt" = TRUE THEN EnterCell(RowNo,8,'Keine AB ohne Termin','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb.ADV = FALSE THEN BEGIN
              IF deb."Territory Code"='SYSTEM' THEN BEGIN
                tab_ab.RESET;
                tab_ab.SETFILTER(tab_ab."Document No.",'%1',tab_vkk."No.");
                tab_ab.SETFILTER(tab_ab.Type,'%1',tab_ab.Type::Item);
                tab_ab.SETFILTER(tab_ab.Quantity,'<>%1',0);
                IF tab_ab.FIND('-') THEN BEGIN
                  REPEAT
                    Artikel.RESET;
                    Artikel.SETFILTER(Artikel."No.",'%1',tab_ab."No.");
                    IF Artikel.FINDFIRST THEN BEGIN
                      IF Artikel.Artikelgruppe='CHAMPS' THEN BEGIN
                        IF zaehler=0 THEN EnterCell(RowNo,9,'AV mitschicken','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                         zaehler:=1;
                      END;
                    END;
                  UNTIL tab_ab.NEXT=0;
                END;
              END;
            END;
          END;





          EnterCell(RowNo,10,tab_vkk."AB EMail-Adresse",'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          IF tab_vkk."AB via EMail" = TRUE THEN  EnterCell(RowNo,11,'AB via EMail','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF tab_vkk."keine Rahmen-AB via Email" = TRUE THEN  EnterCell(RowNo,17,'Keine Rahmen-AB via EMail','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF tab_vkk."keine Rahmen-AB an Kunden" = TRUE THEN  EnterCell(RowNo,18,'Keine Rahmen-AB an Kunden','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF tab_vkk."Keine AB an Kunden" = TRUE THEN  EnterCell(RowNo,12,'Keine AB an Kunden','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          deb.RESET;
          deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            IF deb."AB nur bei Abweichungen" = TRUE THEN EnterCell(RowNo,13,'AB nur bei Abweichung','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb."AB vor Wandlung" = TRUE THEN EnterCell(RowNo,14,'AB vor Wandlung','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb."SerNr. via EMail" = TRUE THEN EnterCell(RowNo,16,'SerNr. via EMail','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Best„tigung via Internet" = TRUE THEN EnterCell(RowNo,15,'Best„tigung via Internet','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Rech via EMail" = TRUE THEN EnterCell(RowNo,19,'Rech via EMail','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
        UNTIL tab_vkk.NEXT = 0;
      END;

      Pfad_tag := FORMAT(DATE2DMY(AE_holen_Datum,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      CloseExcel('Žnd_AB_Versand'+Pfaddatum,'Žnd_AB_Versand'+Pfaddatum,'F:\Daten Neu\Gemeinsame Ordner\Customer Service\EMailVersand\pdfVersandKontrolle\2022');
    END;

    LOCAL PROCEDURE Preislistenstatus_anzeigen@1000000037();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Statusliste aller Auftr„ge mit alter Preilistenversion ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,1,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Deb-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Preisliste','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Preiliste Version','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Betreuer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Teams','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo +1;
      tab_vkk.RESET;
      tab_vkk.SETFILTER(tab_vkk."Document Type",'%1',tab_vkk."Document Type"::Order);
      tab_vkk.SETFILTER(tab_vkk."Preislisten Kalkulation",'%1',tab_vkk."Preislisten Kalkulation"::alt);
      IF tab_vkk.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,FORMAT(tab_vkk."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk."Sell-to Customer Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(tab_vkk."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_vkk."Preislisten Kalkulation"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk.Preisliste),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT(tab_vkk."Betreuer Innendienst"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(tab_vkk.Teams),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
        UNTIL tab_vkk.NEXT = 0;
      END;

      CloseExcel('Preislistenversion','Preislistenversion','');
    END;

    LOCAL PROCEDURE Sachktoabstimmung_mit_Debitorposten@1000000036();
    BEGIN

      {
      sum_kont4021:=0;
      sum_kont4022:=0;
      sum_kont4023:=0;
      sum_kont4025:=0;
      sum_kont4100:=0;
      sum_kont4110:=0;
      sum_kont4118:=0;
      sum_kont4120:=0;
      sum_kont4122:=0;
      sum_kont4150:=0;
      sum_kont4221:=0;
      sum_kont4222:=0;
      sum_kont4223:=0;
      sum_kont4225:=0;
      sum_kont4317:=0;
      sum_kont4338:=0;
      sum_kont4407:=0;
      sum_kont4406:=0;
      sum_kont4408:=0;
      sum_kont4412:=0;
      sum_kont4409:=0;
      sum_kont4416:=0;
      sum_kont4418:=0;
      sum_kont4421:=0;
      sum_kont4422:=0;
      sum_kont4423:=0;
      sum_kont4424:=0;
      sum_kont4425:=0;
      sum_kont4501:=0;
      sum_kont4502:=0;
      sum_kont4503:=0;
      sum_kont4504:=0;
      sum_kont4505:=0;
      sum_kont4506:=0;
      sum_kont4507:=0;
      sum_kont4508:=0;
      sum_kont4509:=0;
      sum_kont4510:=0;
      sum_kont4512:=0;
      sum_kont4513:=0;
      sum_kont4690:=0;
      sum_kont4763:=0;
      sum_konten1:=0;
      sum_konten2:=0;
      sum_konten3:=0;

      CreateExcel;
      //EnterCell(1,1,'Sachpostenabstimmung  Jul/2020','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(1,1,'Sachpostenabstimmung  Aug/2020','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(1,1,'Sachpostenabstimmung  Sep/2020','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(1,1,'Sachpostenabstimmung  Okt/2020','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(1,1,'Sachpostenabstimmung  Nov/2020','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(1,1,'Sachpostenabstimmung  Dez/2020','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(1,1,'Sachpostenabstimmung  Jan/2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(1,1,'Sachpostenabstimmung  Feb/2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,1,'Sachpostenabstimmung  Mrz/2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //EnterCell(1,1,'Sachpostenabstimmung  Apr/2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(1,1,'Sachpostenabstimmung  Mai/2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(1,1,'Sachpostenabstimmung  Jun/2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,4,'Sachposten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,6,'Belege','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  insgesamt sind 4 Žnderungen vorzunehmen. Zum Beispiel: 1x Monat Feb/2021 und 3x Datum von bis 010221D,280221D
      EnterCell(3,1,'4021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,2,'Erl. Ausl. Schulung n.stb.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,1,'4022','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,2,'Erl. Ausl. Service n.stb.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,1,'4023','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,2,'Erl. Ausl. Std.-Pool n.stb.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,1,'4025','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,2,'Erl. Ausl. Systeme n.stb.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(7,1,'4100','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(7,2,'Stfr. Ums„tze õ4 nr.8 ff. UStG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,1,'4110','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,2,'Sonst. stfr. Ums. Inland','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,1,'4118','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,2,'Stfr. Ums„tze õ13b 2/10 UStG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,1,'4120','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,2,'Stfr. Ums„tze õ4 Nr. 1a UStG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,1,'4122','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,2,'Porto 0%','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,1,'4150','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,2,'Stfr. Ums„tz õ4 Nr. 2-7 UStG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(13,1,'4221','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(13,2,'Erl. EU Schulung 19%','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(14,1,'4222','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(14,2,'Erl. EU Service 19%','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(15,1,'4223','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(15,2,'Erl. EU Std.-Pool 19%','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(16,1,'4225','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(16,2,'Erl. EU Systeme 19%','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(17,1,'4317','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(17,2,'Erl”se a. EG Lief. UStG õ 4/1b','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(18,1,'4338','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(18,2,'nicht steuerbare Ums„tze','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(19,1,'4406','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(19,2,'Erl”se Pkw Nutzung 19%','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(20,1,'4407','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(20,2,'W„hrungsab- u. aufschlag','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(21,1,'4408','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(21,2,'W„hrungsab- u. aufschlag 13B2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(22,1,'4409','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(22,2,'Erl”se Pkw Nutzung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(23,1,'4412','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(23,2,'Erl”se 19%','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(24,1,'4416','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(24,2,'Porto','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(25,1,'4418','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(25,2,'Porto 13b','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(26,1,'4421','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(26,2,'Erl. Inl. Schulung 19%','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(27,1,'4422','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(27,2,'Erl. Inl. Service 19%','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(28,1,'4423','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(28,2,'Erl. Inl. Std.-Pool 19%','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(29,1,'4424','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(29,2,'Collateral Cost Training','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(30,1,'4425','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(30,2,'Erl. Inl. Systeme 19%','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(31,1,'4501','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(31,2,'Prov HALO','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(32,1,'4502','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(32,2,'Prov Audio Codes','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(33,1,'4503','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(33,2,'ETC Agreement AudioCodes','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(34,1,'4504','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(34,2,'Collateral Cost','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(35,1,'4505','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(35,2,'Prov Wolfson','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(36,1,'4506','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(36,2,'sonst. Ertr„ge ohne Steuer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(37,1,'4507','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(37,2,'Prov OmniVision','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(38,1,'4508','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(38,2,'Compensation fee','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(39,1,'4509','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(39,2,'Prov Geo Semi','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(40,1,'4510','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(40,2,'Prov EXAR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(41,1,'4512','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(41,2,'Prov Ricoh','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(42,1,'4513','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(42,2,'Provision 19%','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(43,1,'4690','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(43,2,'Ums„tze õ4 Nr. 1a UStG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(44,1,'4763','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(44,2,'Gew„hrte Boni','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(45,1,'Gesamt mtl','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      v_RE_mtl_gesamt:=0;
      sachposten.RESET;
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010720D,310720D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010820D,310820D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010920D,300920D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',011020D,311020D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',011120D,301120D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',011220D,311220D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010121D,310121D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010221D,280221D);
      sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010321D,310321D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010421D,300421D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010521D,310521D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010621D,300621D);
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT

      //    sum_konten1:=sum_konten1+sachposten.Amount;  // alle Betr„ge addiert ergeben Null.  Diff. noch rechnen

          IF sachposten."G/L Account No."='4021' THEN sum_kont4021:=sum_kont4021+sachposten.Amount;
          IF sachposten."G/L Account No."='4022' THEN sum_kont4022:=sum_kont4022+sachposten.Amount;
          IF sachposten."G/L Account No."='4023' THEN sum_kont4023:=sum_kont4023+sachposten.Amount;
          IF sachposten."G/L Account No."='4025' THEN sum_kont4025:=sum_kont4025+sachposten.Amount;
          IF sachposten."G/L Account No."='4100' THEN sum_kont4100:=sum_kont4100+sachposten.Amount;
          IF sachposten."G/L Account No."='4110' THEN sum_kont4110:=sum_kont4110+sachposten.Amount;
          IF sachposten."G/L Account No."='4118' THEN sum_kont4118:=sum_kont4118+sachposten.Amount;
          IF sachposten."G/L Account No."='4120' THEN sum_kont4120:=sum_kont4120+sachposten.Amount;
          IF sachposten."G/L Account No."='4122' THEN sum_kont4122:=sum_kont4122+sachposten.Amount;
          IF sachposten."G/L Account No."='4150' THEN sum_kont4150:=sum_kont4150+sachposten.Amount;
          IF sachposten."G/L Account No."='4221' THEN sum_kont4221:=sum_kont4221+sachposten.Amount;
          IF sachposten."G/L Account No."='4222' THEN sum_kont4222:=sum_kont4222+sachposten.Amount;
          IF sachposten."G/L Account No."='4223' THEN sum_kont4223:=sum_kont4223+sachposten.Amount;
          IF sachposten."G/L Account No."='4225' THEN sum_kont4225:=sum_kont4225+sachposten.Amount;
          IF sachposten."G/L Account No."='4317' THEN sum_kont4317:=sum_kont4317+sachposten.Amount;
          IF sachposten."G/L Account No."='4338' THEN sum_kont4338:=sum_kont4338+sachposten.Amount;
          IF sachposten."G/L Account No."='4406' THEN sum_kont4406:=sum_kont4406+sachposten.Amount;
          IF sachposten."G/L Account No."='4407' THEN sum_kont4407:=sum_kont4407+sachposten.Amount;
          IF sachposten."G/L Account No."='4408' THEN sum_kont4408:=sum_kont4408+sachposten.Amount;
          IF sachposten."G/L Account No."='4409' THEN sum_kont4409:=sum_kont4409+sachposten.Amount;
          IF sachposten."G/L Account No."='4412' THEN sum_kont4412:=sum_kont4412+sachposten.Amount;
          IF sachposten."G/L Account No."='4416' THEN sum_kont4416:=sum_kont4416+sachposten.Amount;
          IF sachposten."G/L Account No."='4418' THEN sum_kont4418:=sum_kont4418+sachposten.Amount;
          IF sachposten."G/L Account No."='4421' THEN sum_kont4421:=sum_kont4421+sachposten.Amount;
          IF sachposten."G/L Account No."='4422' THEN sum_kont4422:=sum_kont4422+sachposten.Amount;
          IF sachposten."G/L Account No."='4423' THEN sum_kont4423:=sum_kont4423+sachposten.Amount;
          IF sachposten."G/L Account No."='4424' THEN sum_kont4424:=sum_kont4424+sachposten.Amount;
          IF sachposten."G/L Account No."='4425' THEN sum_kont4425:=sum_kont4425+sachposten.Amount;
          IF sachposten."G/L Account No."='4501' THEN sum_kont4501:=sum_kont4501+sachposten.Amount;
          IF sachposten."G/L Account No."='4502' THEN sum_kont4502:=sum_kont4502+sachposten.Amount;
          IF sachposten."G/L Account No."='4503' THEN sum_kont4503:=sum_kont4503+sachposten.Amount;
          IF sachposten."G/L Account No."='4504' THEN sum_kont4504:=sum_kont4504+sachposten.Amount;
          IF sachposten."G/L Account No."='4505' THEN sum_kont4505:=sum_kont4505+sachposten.Amount;
          IF sachposten."G/L Account No."='4506' THEN sum_kont4506:=sum_kont4506+sachposten.Amount;
          IF sachposten."G/L Account No."='4507' THEN sum_kont4507:=sum_kont4507+sachposten.Amount;
          IF sachposten."G/L Account No."='4508' THEN sum_kont4508:=sum_kont4508+sachposten.Amount;
          IF sachposten."G/L Account No."='4509' THEN sum_kont4509:=sum_kont4509+sachposten.Amount;
          IF sachposten."G/L Account No."='4510' THEN sum_kont4510:=sum_kont4510+sachposten.Amount;
          IF sachposten."G/L Account No."='4512' THEN sum_kont4512:=sum_kont4512+sachposten.Amount;
          IF sachposten."G/L Account No."='4513' THEN sum_kont4513:=sum_kont4513+sachposten.Amount;
          IF sachposten."G/L Account No."='4690' THEN sum_kont4690:=sum_kont4690+sachposten.Amount;
          IF sachposten."G/L Account No."='4763' THEN sum_kont4690:=sum_kont4690+sachposten.Amount;
      //  Gesamtsumme errechnen
          IF sachposten."G/L Account No."='4021' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4022' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4023' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4025' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4100' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4110' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4118' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4120' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4122' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4150' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4221' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4222' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4223' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4225' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4317' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4338' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4406' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4407' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4408' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4409' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4412' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4416' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4418' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4421' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4422' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4423' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4424' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4425' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4501' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4502' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4503' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4504' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4505' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4506' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4507' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4508' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4509' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4510' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4512' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4513' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4690' THEN sum_konten1:=sum_konten1+sachposten.Amount;
          IF sachposten."G/L Account No."='4763' THEN sum_konten1:=sum_konten1+sachposten.Amount;
        UNTIL sachposten.NEXT = 0;
      END;
      EnterCell(3,4,FORMAT(sum_kont4021),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(4,4,FORMAT(sum_kont4022),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(5,4,FORMAT(sum_kont4023),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(6,4,FORMAT(sum_kont4025),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(7,4,FORMAT(sum_kont4100),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(8,4,FORMAT(sum_kont4110),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(9,4,FORMAT(sum_kont4118),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(10,4,FORMAT(sum_kont4120),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(11,4,FORMAT(sum_kont4122),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(12,4,FORMAT(sum_kont4150),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(13,4,FORMAT(sum_kont4221),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(14,4,FORMAT(sum_kont4222),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(15,4,FORMAT(sum_kont4223),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(16,4,FORMAT(sum_kont4225),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(17,4,FORMAT(sum_kont4317),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(18,4,FORMAT(sum_kont4338),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(19,4,FORMAT(sum_kont4406),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(20,4,FORMAT(sum_kont4407),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(21,4,FORMAT(sum_kont4408),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(22,4,FORMAT(sum_kont4409),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(23,4,FORMAT(sum_kont4412),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(24,4,FORMAT(sum_kont4416),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(25,4,FORMAT(sum_kont4418),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(26,4,FORMAT(sum_kont4421),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(27,4,FORMAT(sum_kont4422),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(28,4,FORMAT(sum_kont4423),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,4,FORMAT(sum_kont4424),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(30,4,FORMAT(sum_kont4425),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,4,FORMAT(sum_kont4501),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(32,4,FORMAT(sum_kont4502),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,4,FORMAT(sum_kont4503),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(34,4,FORMAT(sum_kont4504),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,4,FORMAT(sum_kont4505),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(36,4,FORMAT(sum_kont4506),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,4,FORMAT(sum_kont4507),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(38,4,FORMAT(sum_kont4508),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,4,FORMAT(sum_kont4509),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(40,4,FORMAT(sum_kont4510),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,4,FORMAT(sum_kont4512),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(42,4,FORMAT(sum_kont4513),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(43,4,FORMAT(sum_kont4690),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(44,4,FORMAT(sum_kont4763),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(45,4,FORMAT(sum_konten1),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      sum_kont4021:=0;
      sum_kont4022:=0;
      sum_kont4023:=0;
      sum_kont4025:=0;
      sum_kont4100:=0;
      sum_kont4110:=0;
      sum_kont4118:=0;
      sum_kont4120:=0;
      sum_kont4122:=0;
      sum_kont4150:=0;
      sum_kont4221:=0;
      sum_kont4222:=0;
      sum_kont4223:=0;
      sum_kont4225:=0;
      sum_kont4317:=0;
      sum_kont4338:=0;
      sum_kont4407:=0;
      sum_kont4406:=0;
      sum_kont4408:=0;
      sum_kont4412:=0;
      sum_kont4409:=0;
      sum_kont4416:=0;
      sum_kont4418:=0;
      sum_kont4421:=0;
      sum_kont4422:=0;
      sum_kont4423:=0;
      sum_kont4424:=0;
      sum_kont4425:=0;
      sum_kont4501:=0;
      sum_kont4502:=0;
      sum_kont4503:=0;
      sum_kont4504:=0;
      sum_kont4505:=0;
      sum_kont4506:=0;
      sum_kont4507:=0;
      sum_kont4508:=0;
      sum_kont4509:=0;
      sum_kont4510:=0;
      sum_kont4512:=0;
      sum_kont4513:=0;
      sum_kont4690:=0;
      sum_kont4763:=0;
      sum_konten1:=0;
      sum_konten2:=0;
      sum_konten3:=0;


      RowNo := 50;
      EnterCell(50,1,'Sachposten des lfd. Monats','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      //  Hier Zeitraum und Sachkto Nr. ab„ndern    *****************************************************************************
      v_RE_mtl_gesamt:=0;
      sachposten.RESET;
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010720D,310720D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010820D,310820D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010920D,300920D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',011020D,311020D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',011120D,301120D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',011220D,311220D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010121D,310121D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010221D,280221D);
      sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010321D,310321D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010421D,300421D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010521D,310521D);
      //sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',010621D,300621D);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1..%2','4000','4763');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          RowNo := RowNo +1;
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+sachposten.Amount;
          EnterCell(RowNo,1,FORMAT(sachposten."Posting Date"),'',FALSE,FALSE,FALSE,'DD.MM.YYYY',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,2,FORMAT(sachposten."G/L Account No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(sachposten.Amount),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        UNTIL sachposten.NEXT = 0;
      END;
      RowNo := RowNo +2;
      EnterCell(RowNo,3,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 50;
      EnterCell(50,5,'Debitorposten des lfd. Monats','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  Hier Zeitraum und Sachkto Nr. ab„ndern    *****************************************************************************
      v_RE_mtl_gesamt:=0;
      debpos.RESET;
      //debpos.SETFILTER(debpos."Posting Date",'%1..%2',010720D,310720D);
      //debpos.SETFILTER(debpos."Posting Date",'%1..%2',010820D,310820D);
      //debpos.SETFILTER(debpos."Posting Date",'%1..%2',010920D,300920D);
      //debpos.SETFILTER(debpos."Posting Date",'%1..%2',011020D,311020D);
      //debpos.SETFILTER(debpos."Posting Date",'%1..%2',011120D,301120D);
      //debpos.SETFILTER(debpos."Posting Date",'%1..%2',011220D,311220D);
      //debpos.SETFILTER(debpos."Posting Date",'%1..%2',010121D,310121D);
      //debpos.SETFILTER(debpos."Posting Date",'%1..%2',010221D,280221D);
      debpos.SETFILTER(debpos."Posting Date",'%1..%2',010321D,310321D);
      //debpos.SETFILTER(debpos."Posting Date",'%1..%2',010421D,300421D);
      //debpos.SETFILTER(debpos."Posting Date",'%1..%2',010521D,310521D);
      //debpos.SETFILTER(debpos."Posting Date",'%1..%2',010621D,300621D);
      debpos.SETFILTER(debpos."Document Type",'%1|%2',debpos."Document Type"::"Credit Memo",debpos."Document Type"::Invoice);
      IF debpos.FIND('-') THEN BEGIN
        REPEAT
          RowNo := RowNo +1;
          v_RE_mtl_gesamt:=v_RE_mtl_gesamt+debpos."Sales (LCY)";
          EnterCell(RowNo,5,FORMAT(debpos."Posting Date"),'',FALSE,FALSE,FALSE,'DD.MM.YYYY',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,6,FORMAT(debpos."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(debpos."Sales (LCY)"),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(debpos."Bal. Account No."),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        UNTIL debpos.NEXT = 0;
      END;
      RowNo := RowNo +2;
      EnterCell(RowNo,7,FORMAT(v_RE_mtl_gesamt),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      }
      {
      sum_konten1:=0;
      CreateExcel;
      RowNo :=1;
      EnterCell(RowNo,1,'Sachpostenabstimmung 03/2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      Beleg.RESET;
      Beleg.SETFILTER(Beleg.Belegart,'%1|%2',Beleg.Belegart::Invoice,Beleg.Belegart::"Credit Memo");
      Beleg.SETFILTER(Beleg.Belegdatum,'%1..%2',010321D,310321D);
      IF Beleg.FIND('-') THEN BEGIN
        REPEAT
      //  RowNo := RowNo +1;
          IF Beleg.Belegart=Beleg.Belegart::Invoice THEN BEGIN
          RowNo := RowNo +1;
            sum_konten1:=sum_konten1+Beleg.Betrag;
            EnterCell(RowNo,1,FORMAT(Beleg.Belegdatum),'',FALSE,FALSE,FALSE,'DD.MM.YYYY',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,FORMAT(Beleg.Belegart),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(Beleg.Betrag),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END ELSE BEGIN
          RowNo := RowNo +1;
            sum_konten1:=sum_konten1-Beleg.Betrag;
            EnterCell(RowNo,1,FORMAT(Beleg.Belegdatum),'',FALSE,FALSE,FALSE,'DD.MM.YYYY',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,FORMAT(Beleg.Belegart),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(Beleg.Betrag*(-1)),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
        UNTIL Beleg.NEXT=0;
      END;
      RowNo := RowNo +2;
      EnterCell(2,1,'Monat gesamt','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,2,FORMAT(sum_konten1),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      }

      sum_konten1:=0;
      CreateExcel;
      RowNo :=1;
      EnterCell(RowNo,1,'Sachpostenabstimmung 12/2021','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo +1;

      EnterCell(RowNo,1,'Konto','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Beleg','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Betrag','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',011221D,311221D);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1..%2','4021','4425');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
      //    RowNo := RowNo +1;
      //    EnterCell(RowNo,1,FORMAT(sachposten."G/L Account No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //    EnterCell(RowNo,2,FORMAT(sachposten."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      //    EnterCell(RowNo,3,FORMAT(sachposten."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //    EnterCell(RowNo,4,FORMAT(sachposten.Amount),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //    EnterCell(RowNo,5,FORMAT(sachposten."Document Type"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          sum_konten1:=sum_konten1+sachposten.Amount;
        UNTIL sachposten.NEXT=0;
      END;
      RowNo := RowNo +1;
      EnterCell(RowNo,1,'Gesamtbetrag Monat:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(sum_konten1),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,'Abstimmung mit Excelblatt: Umsatz Aktuell','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      // Listen der einzelnen Belege
      RowNo := RowNo +3;
      EnterCell(RowNo,1,'Sachposten mit Tabelle Belege abstimmen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      v_Belegnr:='RE111111';
      sum_konten1:=0;
      sum_konten2:=0;
      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',011221D,311221D);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1..%2','4021','4425');
      sachposten.SETFILTER(sachposten.Amount,'<>%1',0);
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
      // Ausschluá der Portokosten aus den Sachposten-Belegsummen
          IF ((sachposten."G/L Account No."='4416') OR (sachposten."G/L Account No."='4418') OR (sachposten."G/L Account No."='4122')) THEN BEGIN
          END ELSE BEGIN
              IF v_Belegnr=sachposten."Document No." THEN BEGIN
                sum_konten1:=sum_konten1+sachposten.Amount;

              END ELSE BEGIN
      // Ausgabe eines Sachposten-Beleges nach Excel
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(v_kontonr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(v_date),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,3,FORMAT(v_Belegnr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,FORMAT(sum_konten1),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(v_belegart),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Ausgabe eines Sachposten-Beleges nach Excel Ende

      // Verknpfung mit Tabelle Belege
              sum_konten3:=0;
              Beleg.RESET;
              Beleg.SETFILTER(Beleg."Belegnr.",'%1',v_Belegnr);
              IF Beleg.FIND('-') THEN BEGIN
                REPEAT
                  IF Beleg.Belegart=Beleg.Belegart::"Credit Memo" THEN BEGIN
                    sum_konten3:=sum_konten3+((Beleg."Betrag MW ohne Mwst.")*(-1));
                  END ELSE BEGIN
                    sum_konten3:=sum_konten3+Beleg."Betrag MW ohne Mwst.";
                  END;
                UNTIL Beleg.NEXT=0;
              END;
              EnterCell(RowNo,7,FORMAT(v_Belegnr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(sum_konten3),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      // Verknpfung mit Tabelle Belege ENDE

      // Ab hier wird ein neuer Sachposten-Beleg addiert
                sum_konten1:=0;
                sum_konten1:=sum_konten1+sachposten.Amount;
                v_Belegnr:=sachposten."Document No.";
                v_kontonr:=sachposten."G/L Account No.";
                v_date:=sachposten."Posting Date";
                v_belegart:=sachposten."Document Type";

              END;
      //        sum_konten2:=sum_konten2+sachposten.Amount;


          END;
        UNTIL sachposten.NEXT=0;
      END;



      // Andruck Gesamtsumme
      RowNo := RowNo +5;
      //EnterCell(RowNo,1,'Gesamtbetrag Monat ohne Porto:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,4,FORMAT(sum_konten2),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      // Andruck Gesamtsumme Ende

      sachposten.RESET;
      sachposten.SETFILTER(sachposten."Posting Date",'%1..%2',011221D,311221D);
      sachposten.SETFILTER(sachposten."G/L Account No.",'%1..%2','4021','4425');
      IF sachposten.FIND('-') THEN BEGIN
        REPEAT
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT(sachposten."G/L Account No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(sachposten."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,3,FORMAT(sachposten."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(sachposten.Amount),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,5,FORMAT(sachposten."Document Type"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        UNTIL sachposten.NEXT=0;
      END;




      CloseExcel('Sachkontoabstimm','Sachkontoabstimm','F:\Daten Neu\User\Uwe\Navision_2016');
      MESSAGE('%1 Erfolgreich gespeichert.','F:\Daten Neu\User\Uwe\Navision_2016\Sachkontoabstimm');
    END;

    EVENT Sheet@1140161::SelectionChange@1543(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1140161::BeforeDoubleClick@1537(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140161::BeforeRightClick@1534(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140161::Activate@304();
    BEGIN
    END;

    EVENT Sheet@1140161::Deactivate@1530();
    BEGIN
    END;

    EVENT Sheet@1140161::Calculate@279();
    BEGIN
    END;

    EVENT Sheet@1140161::Change@1545(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1140161::FollowHyperlink@1470(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Sheet@1140161::PivotTableUpdate@2156(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Sheet@1140161::PivotTableAfterValueChange@2886(TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1140161::PivotTableBeforeAllocateChanges@2889(TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140161::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140161::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140001 : Integer;ValueChangeEnd@1140000 : Integer);
    BEGIN
    END;

    EVENT Sheet@1140161::PivotTableChangeSync@2894(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140163::Open@1923();
    BEGIN
    END;

    EVENT Book@1140163::Activate@304();
    BEGIN
    END;

    EVENT Book@1140163::Deactivate@1530();
    BEGIN
    END;

    EVENT Book@1140163::BeforeClose@1546(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::BeforeSave@1547(SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::BeforePrint@1549(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::NewSheet@1550(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140163::AddinInstall@1552();
    BEGIN
    END;

    EVENT Book@1140163::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Book@1140163::WindowResize@1554(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1140163::WindowActivate@1556(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1140163::WindowDeactivate@1557(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1140163::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1140163::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140163::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140163::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140163::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1140163::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Book@1140163::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140163::PivotTableCloseConnection@2158(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140163::PivotTableOpenConnection@2159(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140163::Sync@2266(SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140163::BeforeXmlImport@2283(Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::AfterXmlImport@2285(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140163::BeforeXmlExport@2287(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::AfterXmlExport@2288(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140163::RowsetComplete@2610(Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::SheetPivotTableAfterValueChange@2895(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1140163::SheetPivotTableBeforeAllocateChanges@2896(Sh@1140004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::SheetPivotTableBeforeCommitChanges@2897(Sh@1140004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::SheetPivotTableBeforeDiscardChanges@2898(Sh@1140003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140001 : Integer;ValueChangeEnd@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140163::SheetPivotTableChangeSync@2899(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140163::AfterSave@2900(Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::NewChart@2901(Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart");
    BEGIN
    END;

    EVENT Excel@1140164::NewWorkbook@1565(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140164::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1140164::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140164::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140164::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140164::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookOpen@1567(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookActivate@1568(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookDeactivate@1569(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookBeforeClose@1570(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookBeforeSave@1571(Wb@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookBeforePrint@1572(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookNewSheet@1573(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookAddinInstall@1574(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookAddinUninstall@1575(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140164::WindowResize@1554(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1140164::WindowActivate@1556(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1140164::WindowDeactivate@1557(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1140164::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Excel@1140164::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookPivotTableCloseConnection@2160(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookPivotTableOpenConnection@2161(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookSync@2289(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookBeforeXmlImport@2290(Wb@1140004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookAfterXmlImport@2291(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookBeforeXmlExport@2292(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookAfterXmlExport@2293(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookRowsetComplete@2611(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::AfterCalculate@2612();
    BEGIN
    END;

    EVENT Excel@1140164::SheetPivotTableAfterValueChange@2895(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1140164::SheetPivotTableBeforeCommitChanges@2897(Sh@1140004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::ProtectedViewWindowOpen@2903(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140164::ProtectedViewWindowResize@2908(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140164::ProtectedViewWindowActivate@2909(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140164::ProtectedViewWindowDeactivate@2910(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookAfterSave@2911(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookNewChart@2912(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart");
    BEGIN
    END;

    BEGIN
    {
      // Lfd.Nr.  Version  Datum          User Beschreibung
      =================================================================
      1        TOP1.00  23.04.2018     UB   Umstellung auf neue Excel-Version. Wenn Programm ohne Fehler l„uft, k”nnen Bemerkungszeilen gel”scht werden!!!
      2        TOP2.00  01.03.2020     UB   Erweiterung um eine Auftragsberprfung mit Vortag zwecks Žnderungsauftragsbest„tigung
      3        TOP3.00  07.04.2020     UB   Erweiterung um eine AB-PDF-Versand-Kontrolle
    }
    END.
  }
}

