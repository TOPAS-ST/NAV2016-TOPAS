OBJECT Page 50108 TOPAS POS Reports Hersteller
{
  OBJECT-PROPERTIES
  {
    Date=05.01.18;
    Time=15:33:42;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    LinksAllowed=No;
    OnOpenPage=BEGIN
                 v_day := DATE2DMY(WORKDATE,1);         //Tag ermitteln
                 v_datum_bis := WORKDATE-v_day;         //letzter Tag des Vormonats ermitteln
                 v_day := DATE2DMY(v_datum_bis,1);      //Anzahl Tage des Monats ermitteln
                 v_datum_von := v_datum_bis-v_day + 1;  //Erster Tag des Monats ermitteln
                 v_day := 0;
               END;

    ActionList=ACTIONS
    {
      { 1000000000;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000001;1 ;Action    ;
                      Name=Ausfhren;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ExecuteBatch;
                      PromotedCategory=Process;
                      OnAction=BEGIN

                                 IF v_Lin_ACS=TRUE THEN ACS;
                                 IF v_Lin_ACS_neu=TRUE THEN ACS_neu;
                                 IF v_Lin_ACL=TRUE THEN ACL;
                                 IF v_Lin_GSI=TRUE THEN GSI;
                                 IF v_Lin_XMO=TRUE THEN XMO;
                                 IF v_Lin_RIC=TRUE THEN RIC;
                                 IF v_Lin_GAIN=TRUE THEN GAIN;
                                 IF v_Lin_FOX=TRUE THEN FOX;
                                 IF v_Lin_HAL=TRUE THEN HALO;
                                 IF v_Lin_CIR=TRUE THEN CIRRUS;
                                 IF v_Lin_CIR_neu=TRUE THEN CIRRUS_neu;
                                 IF v_Lin_AKROS=TRUE THEN AKROS;
                                 IF v_Lin_FER=TRUE THEN FERRARI;
                                 IF v_Lin_DSP=TRUE THEN DSP;
                                 IF v_Lin_GSI_2=TRUE THEN GSI_2;
                                 IF v_bank=TRUE THEN Bankposten_suchen;
                                 IF v_Abgrenz=TRUE THEN Stichtagsabgrenzung;

                                 IF v_TEST=TRUE THEN TEST;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000002;;Container;
                Name=TOPAS POS Reports Hersteller;
                ContainerType=ContentArea }

    { 1000000003;1;Group  ;
                Name=Allgemein;
                GroupType=Group }

    { 1000000004;2;Field  ;
                Name=Datum von :;
                SourceExpr=v_datum_von }

    { 1000000005;2;Field  ;
                Name=Datum bis :;
                SourceExpr=v_datum_bis }

    { 1000000006;1;Group  ;
                Name=Linien;
                GroupType=Group }

    { 1000000007;2;Field  ;
                Name=GSI Report ausfhren;
                SourceExpr=v_Lin_GSI }

    { 1000000008;2;Field  ;
                Name=XMOS Report ausfhren;
                SourceExpr=v_Lin_XMO }

    { 1000000009;2;Field  ;
                Name=RIC Report ausfhren;
                SourceExpr=v_Lin_RIC }

    { 1000000010;2;Field  ;
                Name=GAIN Report ausfhren;
                SourceExpr=v_Lin_GAIN }

    { 1000000011;2;Field  ;
                Name=FOX Report ausfhren;
                SourceExpr=v_Lin_FOX }

    { 1000000012;2;Field  ;
                Name=HALO Report ausfhren;
                SourceExpr=v_Lin_HAL }

    { 1000000013;2;Field  ;
                Name=ACS Report ausfhren;
                SourceExpr=v_Lin_ACS }

    { 1000000024;2;Field  ;
                Name=ACS Report ausfhren NEU;
                SourceExpr=v_Lin_ACS_neu }

    { 1000000014;2;Field  ;
                Name=ACL Report ausfhren;
                SourceExpr=v_Lin_ACL }

    { 1000000015;2;Field  ;
                Name=AKROS Report ausfhren;
                SourceExpr=v_Lin_AKROS }

    { 1000000016;2;Field  ;
                Name=CIRRUS Report ausfhren;
                SourceExpr=v_Lin_CIR }

    { 1000000023;2;Field  ;
                Name=CIRRUS Report ausfhren NEU;
                SourceExpr=v_Lin_CIR_neu }

    { 1000000017;2;Field  ;
                Name=FERRARI Report ausfhren;
                SourceExpr=v_Lin_FER }

    { 1000000018;2;Field  ;
                Name=DSP GROUP Report ausfhren;
                SourceExpr=v_Lin_DSP }

    { 1000000019;2;Field  ;
                Name=GSI Report ohne Q-Vk ausfhren;
                SourceExpr=v_Lin_GSI_2 }

    { 1000000020;2;Field  ;
                Name=Test-Report ausfhren;
                SourceExpr=v_TEST }

    { 1000000021;1;Group  ;
                Name=Bankposten;
                GroupType=Group }

    { 1000000022;2;Field  ;
                Name=(Datum von - bis eintragen);
                SourceExpr=v_bank }

    { 1000000025;1;Group  ;
                Name=Service Abgrenzung;
                GroupType=Group }

    { 1000000027;2;Field  ;
                Name=Abgrenzung ausfhren;
                SourceExpr=v_Abgrenz }

    { 1000000026;2;Field  ;
                Name=Abgrenz;
                CaptionML=DEU=Abgrenzungsdatum (z.B.: 30.06.2018):;
                SourceExpr=Abgrenz_Datum }

  }
  CODE
  {
    VAR
      wshFile@1000000107 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      Excel@1000000106 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Book@1000000105 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Range@1000000104 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Sheet@1000000103 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      j@1000000102 : Text[30];
      Word@1000000100 : Integer;
      betragmw@1000000099 : Decimal;
      waehrung@1000000098 : Text[30];
      waecode@1000000097 : Text[30];
      betragmw2@1000000096 : Decimal;
      waehrung2@1000000095 : Text[30];
      vkrk@1000000094 : Record 112;
      vkrz@1000000093 : Record 113;
      vklk@1000000092 : Record 110;
      vklz@1000000091 : Record 111;
      vkgk@1000000090 : Record 114;
      vkgz@1000000089 : Record 115;
      Debitor@1000000088 : Record 18;
      quotedaten@1000000087 : Record 50014;
      "Ek-Preise"@1000000086 : Record 7012;
      Artikel@1000000085 : Record 27;
      Artikelposten@1000000084 : Record 32;
      Artpost@1000000083 : Record 32;
      EK_Lief@1000000082 : Record 121;
      Kontakt@1000000081 : Record 5050;
      vkk@1000000080 : Record 36;
      vkz@1000000079 : Record 37;
      w„kurs@1000000078 : Record 330;
      v_endkunde@1000000077 : Text[30];
      artre@1000000076 : Text[30];
      artgu@1000000075 : Text[30];
      v_datum_von@1000000074 : Date;
      v_datum_bis@1000000073 : Date;
      v_Lin_ACL@1000000072 : Boolean;
      v_Lin_ACS@1000000071 : Boolean;
      v_Lin_ACS_neu@1000000124 : Boolean;
      v_Lin_AKROS@1000000070 : Boolean;
      v_Lin_GSI@1000000069 : Boolean;
      v_Lin_GSI_2@1000000068 : Boolean;
      v_Lin_XMO@1000000067 : Boolean;
      v_Lin_RIC@1000000066 : Boolean;
      v_Lin_GAIN@1000000065 : Boolean;
      v_Lin_FOX@1000000064 : Boolean;
      v_Lin_HAL@1000000063 : Boolean;
      v_Lin_CIR@1000000062 : Boolean;
      v_Lin_CIR_neu@1000000101 : Boolean;
      v_Lin_FER@1000000061 : Boolean;
      v_Lin_DSP@1000000060 : Boolean;
      v_TEST@1000000059 : Boolean;
      v_Total_Sum@1000000058 : Decimal;
      v_Total_sum1@1000000057 : Decimal;
      v_day@1000000056 : Integer;
      v_day1@1000000055 : Text[2];
      v_month@1000000054 : Integer;
      v_month1@1000000053 : Text[2];
      v_year@1000000052 : Integer;
      v_year1@1000000051 : Text[2];
      v_datum_1@1000000050 : Text[9];
      v_ACL_SP_A@1000000049 : Text[20];
      v_ACL_SP_B@1000000048 : Text[30];
      v_ACL_SP_C@1000000047 : Text[20];
      v_ACL_SP_D@1000000046 : Text[20];
      v_ACL_SP_E@1000000045 : Text[8];
      v_ACL_SP_F@1000000044 : Text[20];
      v_ACL_SP_G@1000000043 : Text[30];
      v_ACL_SP_H@1000000042 : Text[30];
      v_ACL_SP_I@1000000041 : Text[30];
      v_ACL_SP_J@1000000040 : Text[2];
      v_ACL_SP_K@1000000039 : Text[10];
      v_ACL_SP_L@1000000038 : Text[2];
      v_ACL_SP_M@1000000037 : Text[30];
      v_ACL_SP_N@1000000036 : Text[30];
      v_ACL_SP_O@1000000035 : Text[30];
      v_ACL_SP_P@1000000034 : Text[2];
      v_ACL_SP_Q@1000000033 : Text[10];
      v_ACL_SP_R@1000000032 : Text[2];
      v_ACL_SP_S@1000000031 : Text[30];
      v_ACL_SP_T@1000000030 : Text[30];
      v_ACL_SP_U@1000000029 : Text[30];
      v_ACL_SP_V@1000000028 : Text[2];
      v_ACL_SP_W@1000000027 : Text[10];
      v_ACL_SP_X@1000000026 : Text[2];
      v_ACL_SP_Y@1000000025 : Text[30];
      v_ACL_SP_Z@1000000024 : Text[30];
      v_ACL_SP_AA@1000000023 : Text[30];
      v_ACL_SP_AB@1000000022 : Text[30];
      v_ACL_SP_AC@1000000021 : Integer;
      v_ACL_SP_AD@1000000020 : Decimal;
      v_ACL_SP_AE@1000000019 : Decimal;
      v_ACL_SP_AF@1000000018 : Decimal;
      v_ACL_SP_AG@1000000017 : Text[20];
      v_ACL_SP_AH@1000000016 : Text[20];
      v_ACL_SP_AI@1000000015 : Text[30];
      v_ACL_SP_AJ@1000000014 : Text[10];
      v_lagerbestand@1000000013 : Integer;
      v_aubestand@1000000012 : Integer;
      v_au_name@1000000011 : Text[50];
      v_au_debnr@1000000010 : Code[10];
      v_herstell_VK_Preis@1000000009 : Decimal;
      tab6507@1000000008 : Record 6507;
      sachpo@1000000007 : Record 17;
      v_bank@1000000006 : Boolean;
      v_banksaldo@1000000005 : Decimal;
      v_bankzu@1000000004 : Decimal;
      v_bankab@1000000003 : Decimal;
      v_bankart@1000000002 : Text[10];
      v_bankdatum@1000000001 : Date;
      v_bankw„@1000000000 : Code[10];
      Text000@1000000115 : TextConst 'DEU=Daten werden analysiert ...\\;ENU=Analyzing Data...\\';
      Text001@1000000114 : TextConst 'DEU=Hersteller;ENU=Manufacturer';
      Text002@1000000113 : TextConst 'DEU=Arbeitsmappe aktualisieren;ENU=Update Workbook';
      ExcelFileExtensionTok@1000000117 : TextConst '@@@={Locked};DEU=.xlsx;ENU=.xlsx';
      NewFileDirectory@1000000116 : TextConst 'DEU=F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\';
      TempExcelBuffer@1000000112 : TEMPORARY Record 370;
      FileMgt@1000000108 : Codeunit 419;
      ServerFileName@1000000111 : Text;
      SheetName@1000000110 : Text[250];
      DoUpdateExistingWorksheet@1000000109 : Boolean;
      Testmode@1000000123 : Boolean;
      Window@1000000122 : Dialog;
      RecNo@1000000121 : Integer;
      TotalRecNo@1000000120 : Integer;
      RowNo@1000000119 : Integer;
      ColumnNo@1000000118 : Integer;
      Abgrenz_Datum@1000000125 : Date;
      Service@1000000126 : Record 50024;
      sum_ek@1000000127 : Decimal;
      sum_vk@1000000128 : Decimal;
      liefnr@1000000129 : Code[10];
      liefzeilennr@1000000130 : Integer;
      LZ_tage@1000000131 : Integer;
      LZ_tage_stich@1000000132 : Integer;
      LZ_tage_bewert@1000000133 : Integer;
      LZ_tage_abgrenz@1000000134 : Integer;
      LZ_rest@1000000135 : Integer;
      v_Abgrenz@1000000136 : Boolean;
      beleghis@1000000137 : Record 50008;
      beleghis_ek@1000000138 : Decimal;

    PROCEDURE ACS@1140010();
    BEGIN
      v_Total_Sum := 0;
      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      //Sheet.StandardWidth := 30;
      Sheet.Range('A:A').ColumnWidth := 20;
      Sheet.Range('C:D').ColumnWidth := 20;
      Sheet.Range('E:E').ColumnWidth := 8;
      Sheet.Range('F:F').ColumnWidth := 20;
      Sheet.Range('G:G').ColumnWidth := 10;
      Sheet.Range('J:J').ColumnWidth := 2;
      Sheet.Range('L:L').ColumnWidth := 2;
      Sheet.Range('P:P').ColumnWidth := 2;
      Sheet.Range('R:R').ColumnWidth := 2;
      Sheet.Range('V:V').ColumnWidth := 2;
      Sheet.Range('X:X').ColumnWidth := 2;
      Sheet.Range('AC:AC').ColumnWidth := 4;
      //Sheet.Range('AD:AF').ColumnWidth := 10;
      Sheet.Range('AG:AH').ColumnWidth := 20;

      Sheet.Range('AD:AF').NumberFormat:='#.##0,00';

      Sheet.Range('A1').Value := 'POS Vendor Number';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Sales Rep Name';
      Sheet.Range('C1').Value := 'Bill To Acct# or Customer #';
      Sheet.Range('D1').Value := 'Invoice Number';
      Sheet.Range('E1').Value := 'Invoice or Ship Date';
      Sheet.Range('F1').Value := 'PO Number';
      Sheet.Range('G1').Value := 'Bill To Name';
      Sheet.Range('H1').Value := 'Bill To Adress';
      Sheet.Range('I1').Value := 'Bill To City';
      Sheet.Range('J1').Value := 'Bill To State';
      Sheet.Range('K1').Value := 'Bill To Zip';
      Sheet.Range('L1').Value := 'Bill To Country';
      Sheet.Range('M1').Value := 'Ship To Name';
      Sheet.Range('N1').Value := 'Ship To Adress';
      Sheet.Range('O1').Value := 'Ship To City';
      Sheet.Range('P1').Value := 'Ship To State';
      Sheet.Range('Q1').Value := 'Ship To Zip';
      Sheet.Range('R1').Value := 'Ship To Country';
      Sheet.Range('S1').Value := 'EndUser Name';
      Sheet.Range('T1').Value := 'EndUser Adress';
      Sheet.Range('U1').Value := 'EndUser City';
      Sheet.Range('V1').Value := 'EndUser State';
      Sheet.Range('W1').Value := 'EndUser Zip';
      Sheet.Range('X1').Value := 'EndUser Country';
      Sheet.Range('Y1').Value := 'Distributer Item #';
      Sheet.Range('Z1').Value := 'AudioCodes Item #';
      Sheet.Range('AA1').Value := 'Item Description';
      Sheet.Range('AB1').Value := 'Serial #';
      Sheet.Range('AC1').Value := 'Quantity';
      Sheet.Range('AD1').Value := 'Extended Cost (Euro)';
      Sheet.Range('AE1').Value := 'Extended Net Cost (Euro)';
      Sheet.Range('AF1').Value := 'Discounts/Rebates (Euro)';
      Sheet.Range('AG1').Value := 'DPA Number';
      Sheet.Range('AH1').Value := 'DPA Description';
      Sheet.Range('AI1').Value := 'End User Application';
      Sheet.Range('AJ1').Value := 'Kreditornr';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      Artikelposten.RESET;
      Artikelposten.SETFILTER(Artikelposten."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER(Artikelposten."Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      Artikelposten.SETFILTER(Artikelposten."Invoiced Quantity",'<>%1',0);
      IF Artikelposten.FINDFIRST() THEN BEGIN
      REPEAT
      v_ACL_SP_A:='';
      v_ACL_SP_B:='';
      v_ACL_SP_C:='';
      v_ACL_SP_D:='';
      v_ACL_SP_E:='';
      v_ACL_SP_F:='';
      v_ACL_SP_G:='';
      v_ACL_SP_H:='';
      v_ACL_SP_I:='';
      v_ACL_SP_J:='';
      v_ACL_SP_K:='';
      v_ACL_SP_L:='';
      v_ACL_SP_M:='';
      v_ACL_SP_N:='';
      v_ACL_SP_O:='';
      v_ACL_SP_P:='';
      v_ACL_SP_Q:='';
      v_ACL_SP_R:='';
      v_ACL_SP_S:='';
      v_ACL_SP_T:='';
      v_ACL_SP_U:='';
      v_ACL_SP_V:='';
      v_ACL_SP_W:='';
      v_ACL_SP_X:='';
      v_ACL_SP_Y:='';
      v_ACL_SP_Z:='';
      v_ACL_SP_AA:='';
      v_ACL_SP_AB:='';
      v_ACL_SP_AC:=0;
      v_ACL_SP_AD:=0;
      v_ACL_SP_AE:=0;
      v_ACL_SP_AF:=0;
      v_ACL_SP_AG:='';
      v_ACL_SP_AH:='';
      v_ACL_SP_AI:='';
      v_ACL_SP_AJ:='';
      v_day:=0;
      v_month:=0;
      v_year:=0;


      vklz.RESET;
      vklz.SETFILTER(vklz."Document No.",'%1',Artikelposten."Document No.");
      //  **********************************************************************************************************************
      vklz.SETFILTER(vklz."Manufacturer Code",'%1','59');
      //  ***************************************************************************************************************************
      vklz.SETFILTER(vklz.Quantity,'<>%1',0);
      vklz.SETFILTER(vklz."No.",'%1',Artikelposten."Item No.");
      vklz.SETFILTER(vklz."Line No.",'%1',Artikelposten."Document Line No.");
      IF vklz.FINDFIRST() THEN BEGIN
        REPEAT

          vklk.RESET;
          vklk.SETFILTER(vklk."No.",'%1',vklz."Document No.");
          IF vklk.FINDFIRST() THEN BEGIN
            Sheet.Range('A'+j).Value := '';
            //v_ACL_SP_A:=PADSTR('Nico Kossuch',20);
            //Sheet.Range('A'+j).Value := v_ACL_SP_A;

            //Sheet.Range('B'+j).Value := 'Nico Kossuch';
            v_ACL_SP_B:='Nico Kossuch';
            Sheet.Range('B'+j).Value := v_ACL_SP_B;

            //Sheet.Range('C'+j).Value := vklk."Sell-to Customer No.";
            v_ACL_SP_C:=PADSTR(vklk."Sell-to Customer No.",20);
            Sheet.Range('C'+j).Value := v_ACL_SP_C;

            //Sheet.Range('D'+j).Value := vklk."No.";
            v_ACL_SP_D:= PADSTR(vklk."No.",20);
            Sheet.Range('D'+j).Value := v_ACL_SP_D;

            v_day:=DATE2DMY(vklk."Posting Date",1);
            v_month:=DATE2DMY(vklk."Posting Date",2);
            v_year:=DATE2DMY(vklk."Posting Date",3)-2000;

            IF v_day=1 THEN v_day1:='01';
            IF v_day=2 THEN v_day1:='02';
            IF v_day=3 THEN v_day1:='03';
            IF v_day=4 THEN v_day1:='04';
            IF v_day=5 THEN v_day1:='05';
            IF v_day=6 THEN v_day1:='06';
            IF v_day=7 THEN v_day1:='07';
            IF v_day=8 THEN v_day1:='08';
            IF v_day=9 THEN v_day1:='09';
            IF v_day=10 THEN v_day1:='10';
            IF v_day=11 THEN v_day1:='11';
            IF v_day=12 THEN v_day1:='12';
            IF v_day=13 THEN v_day1:='13';
            IF v_day=14 THEN v_day1:='14';
            IF v_day=15 THEN v_day1:='15';
            IF v_day=16 THEN v_day1:='16';
            IF v_day=17 THEN v_day1:='17';
            IF v_day=18 THEN v_day1:='18';
            IF v_day=19 THEN v_day1:='19';
            IF v_day=20 THEN v_day1:='20';
            IF v_day=21 THEN v_day1:='21';
            IF v_day=22 THEN v_day1:='22';
            IF v_day=23 THEN v_day1:='23';
            IF v_day=24 THEN v_day1:='24';
            IF v_day=25 THEN v_day1:='25';
            IF v_day=26 THEN v_day1:='26';
            IF v_day=27 THEN v_day1:='27';
            IF v_day=28 THEN v_day1:='28';
            IF v_day=29 THEN v_day1:='29';
            IF v_day=30 THEN v_day1:='30';
            IF v_day=31 THEN v_day1:='31';

            IF v_month=1 THEN v_month1:='01';
            IF v_month=2 THEN v_month1:='02';
            IF v_month=3 THEN v_month1:='03';
            IF v_month=4 THEN v_month1:='04';
            IF v_month=5 THEN v_month1:='05';
            IF v_month=6 THEN v_month1:='06';
            IF v_month=7 THEN v_month1:='07';
            IF v_month=8 THEN v_month1:='08';
            IF v_month=9 THEN v_month1:='09';
            IF v_month=10 THEN v_month1:='10';
            IF v_month=11 THEN v_month1:='11';
            IF v_month=12 THEN v_month1:='12';

            IF v_year=15 THEN v_year1:='15';
            IF v_year=16 THEN v_year1:='16';
            IF v_year=17 THEN v_year1:='17';
            IF v_year=18 THEN v_year1:='18';
            IF v_year=19 THEN v_year1:='19';
            IF v_year=20 THEN v_year1:='20';
            IF v_year=21 THEN v_year1:='21';

            //Sheet.Range('E'+j).Value :=FORMAT(v_month)+'/'+FORMAT(v_day)+'/'+FORMAT(v_year);
            //v_ACL_SP_E:=FORMAT((v_month1)+'/'+(v_day1)+'/'+(v_year1));
            v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
            //v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/');
            Sheet.Range('E'+j).Value := FORMAT(v_ACL_SP_E);
            Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';


            //Sheet.Range('E'+j).Value := vklk."Posting Date";
            //Sheet.Range('F'+j).Value := vklk."External Document No.";
            v_ACL_SP_F := PADSTR(vklk."External Document No.",20);
            Sheet.Range('F'+j).Value := v_ACL_SP_F;

            //Sheet.Range('G'+j).Value := vklk."Bill-to Name";
            v_ACL_SP_G :=PADSTR(vklk."Bill-to Name",30);
            Sheet.Range('G'+j).Value := v_ACL_SP_G;

            //Sheet.Range('H'+j).Value := vklk."Bill-to Address";
            v_ACL_SP_H := PADSTR(vklk."Bill-to Address",30);
            Sheet.Range('H'+j).Value := v_ACL_SP_H;

            //Sheet.Range('I'+j).Value := vklk."Bill-to City";
            v_ACL_SP_I := PADSTR(vklk."Bill-to City",30);
            Sheet.Range('I'+j).Value := v_ACL_SP_I;

            //Sheet.Range('J'+j).Value := vklk."Bill-to County";
            v_ACL_SP_J := PADSTR(vklk."Bill-to County",2);
            Sheet.Range('J'+j).Value := v_ACL_SP_J;

            //Sheet.Range('K'+j).Value := vklk."Bill-to Post Code";
            v_ACL_SP_K := PADSTR(vklk."Bill-to Post Code",10);
            Sheet.Range('K'+j).Value := v_ACL_SP_K;

            //Sheet.Range('L'+j).Value := vklk."Bill-to Country/Region Code";
            v_ACL_SP_L := PADSTR(vklk."Bill-to Country/Region Code",2);
            Sheet.Range('L'+j).Value := v_ACL_SP_L;

            //Sheet.Range('M'+j).Value := vklk."Ship-to Name";
            v_ACL_SP_M := PADSTR(vklk."Ship-to Name",30);
            Sheet.Range('M'+j).Value := v_ACL_SP_M;

            //Sheet.Range('N'+j).Value := vklk."Ship-to Address";
            v_ACL_SP_N := PADSTR(vklk."Ship-to Address",30);
            Sheet.Range('N'+j).Value := v_ACL_SP_N;

            //Sheet.Range('O'+j).Value := vklk."Ship-to City";
            v_ACL_SP_O := PADSTR(vklk."Ship-to City",30);
            Sheet.Range('O'+j).Value := v_ACL_SP_O;

            //Sheet.Range('P'+j).Value := vklk."Ship-to County";
            v_ACL_SP_P := PADSTR(vklk."Ship-to County",2);
            Sheet.Range('P'+j).Value := v_ACL_SP_P;

            //Sheet.Range('Q'+j).Value := vklk."Ship-to Post Code";
            v_ACL_SP_Q := PADSTR(vklk."Ship-to Post Code",10);
            Sheet.Range('Q'+j).Value := v_ACL_SP_Q;

            //Sheet.Range('R'+j).Value := vklk."Ship-to Country/Region Code";
            v_ACL_SP_R := PADSTR(vklk."Ship-to Country/Region Code",2);
            Sheet.Range('R'+j).Value := v_ACL_SP_R;

            //Sheet.Range('S'+j).Value := vklk.Endkunde;
            v_ACL_SP_S := PADSTR(vklk.Endkunde,30);
            Sheet.Range('S'+j).Value := v_ACL_SP_S;

            //Sheet.Range('T'+j).Value := vklk."Endkunde Adresse";
            v_ACL_SP_T := PADSTR(vklk."Endkunde Adresse",30);
            Sheet.Range('T'+j).Value := v_ACL_SP_T;

            //Sheet.Range('U'+j).Value := vklk."Endkunde Ort";
            v_ACL_SP_U := PADSTR(vklk."Endkunde Ort",30);
            Sheet.Range('U'+j).Value := v_ACL_SP_U;

            Sheet.Range('V'+j).Value := '';
            //v_ACL_SP_V := PADSTR('',2);
            //Sheet.Range('V'+j).Value := v_ACL_SP_V;

            //Sheet.Range('W'+j).Value := vklk."Endkunde PLZ-Code";
            v_ACL_SP_W := PADSTR(vklk."Endkunde PLZ-Code",10);
            Sheet.Range('W'+j).Value := v_ACL_SP_W;

            //Sheet.Range('X'+j).Value := vklk."Endkunde Land";
            v_ACL_SP_X := PADSTR(vklk."Endkunde Land",2);
            Sheet.Range('X'+j).Value := v_ACL_SP_X;

            //Sheet.Range('Y'+j).Value := vklz."No.";
            v_ACL_SP_Y := PADSTR(vklz."No.",30);
            Sheet.Range('Y'+j).Value := v_ACL_SP_Y;

            //Sheet.Range('Z'+j).Value := vklz."No.";
            v_ACL_SP_Z := PADSTR(vklz."No.",30);
            Sheet.Range('Z'+j).Value := v_ACL_SP_Z;

            //Sheet.Range('AA'+j).Value := vklz.Description;
            v_ACL_SP_AA := PADSTR(vklz.Description,30);
            Sheet.Range('AA'+j).Value := v_ACL_SP_AA;

            //Sheet.Range('AB'+j).Value := Artikelposten."Serial No.";
            v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
            Sheet.Range('AB'+j).Value := v_ACL_SP_AB;

            //Sheet.Range('AC'+j).Value := FORMAT(Artikelposten.Quantity*(-1));
            v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
            Sheet.Range('AC'+j).Value := v_ACL_SP_AC;
          END;

          Debitor.RESET;
          Debitor.SETFILTER(Debitor."No.",'%1',vklz."Sell-to Customer No.");
          IF Debitor.FINDFIRST() THEN BEGIN
            //Sheet.Range('AI'+j).Value := Debitor.AC_Solutionpartner;
            v_ACL_SP_AI := Debitor.AC_Solutionpartner;
            Sheet.Range('AI'+j).Value := Debitor.AC_Solutionpartner;
          END;


          //  **************************************  EK aus Preisliste  ******************************
          "Ek-Preise".RESET;
          "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vklz."No.");
          "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
          //"Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');

          "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
          IF "Ek-Preise".FINDFIRST() THEN BEGIN
            //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
            v_ACL_SP_AD := ("Ek-Preise"."Direct Unit Cost"*((Artikelposten.Quantity)*(-1)));
            Sheet.Range('AD'+j).Value := v_ACL_SP_AD;
            // END ELSE BEGIN
            // "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
            // "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
            // IF "Ek-Preise".FINDFIRST() THEN BEGIN
            // //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
            // v_ACL_SP_AD :=("Ek-Preise"."Direct Unit Cost");
            // Sheet.Range('AD'+j).Value := FORMAT(v_ACL_SP_AD);
            // //Sheet.Range('AD'+j).NumberFormat := '0.00';
            // END;
          END;


          //v_ACL_SP_AD:=(vklz."DC-Preis (MW)");
          //Sheet.Range('AD'+j).Value := v_ACL_SP_AD;

          v_ACL_SP_AE:=((vklz."DC-Preis (MW)"*Artikelposten.Quantity)*(-1));
          Sheet.Range('AE'+j).Value := v_ACL_SP_AE;

          // Falls DC-Preis fehlt **** *************************************
          IF v_ACL_SP_AE = 0 THEN BEGIN
            "Ek-Preise".RESET;
            "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vklz."No.");
            "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
            "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
            IF "Ek-Preise".FINDFIRST() THEN BEGIN
              //v_ACL_SP_AD :=(("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity)*(-1));
              //Sheet.Range('AD'+j).Value := v_ACL_SP_AD;
              v_ACL_SP_AE := (("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity)*(-1));
              Sheet.Range('AE'+j).Value := v_ACL_SP_AE;
            END;

          END;

          "Ek-Preise".RESET;
          "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vklz."No.");
          "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
          "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
          IF "Ek-Preise".FINDFIRST() THEN BEGIN
            v_ACL_SP_AF := (((("Ek-Preise"."Direct Unit Cost")*(Artikelposten.Quantity)*(-1)))-v_ACL_SP_AE);
            Sheet.Range('AF'+j).Value := v_ACL_SP_AF;
          END;



          quotedaten.RESET;
          quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vklz."Quotenr.");
          IF quotedaten.FINDFIRST() THEN BEGIN
            //Sheet.Range('AE'+j).Value :=FORMAT(quotedaten.Quotepreis);
            //v_ACL_SP_AE :=(quotedaten.Quotepreis);
            //Sheet.Range('AE'+j).Value := v_ACL_SP_AE;

            //Sheet.Range('AF'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis);
            //v_ACL_SP_AF :=("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis);
            //Sheet.Range('AF'+j).Value := v_ACL_SP_AF;


            //Sheet.Range('AG'+j).Value := quotedaten."Quotenr. Hersteller";
            v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
            Sheet.Range('AG'+j).Value := v_ACL_SP_AG;

            //Sheet.Range('AH'+j).Value := quotedaten.Genehmigungstext;
            v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
            Sheet.Range('AH'+j).Value := v_ACL_SP_AH;
          END;

          // Herausfinden ber wen eingekauft wurde
          IF Artikelposten."Serial No."<>'' THEN BEGIN
            v_ACL_SP_AJ:='';
            Artpost.RESET;
            Artpost.SETFILTER(Artpost."Serial No.",'%1',Artikelposten."Serial No.");
            Artpost.SETFILTER(Artpost."Entry Type",'%1',Artpost."Entry Type"::Purchase);
            IF Artpost.FINDFIRST() THEN BEGIN
                v_ACL_SP_AJ := Artpost."Source No.";
            END;
          END;
          Sheet.Range('AJ'+j).Value := v_ACL_SP_AJ;
          // Ende herausfinden ber wen bezogen wurde

          j := INCSTR (j);
          UNTIL vklz.NEXT = 0;

        END;

        UNTIL Artikelposten.NEXT = 0;
      END;
      //  Ende Ums„tze


      // Anfang Gutschriften
      Artikelposten.RESET;
      Artikelposten.SETFILTER(Artikelposten."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER(Artikelposten."Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      IF Artikelposten.FINDFIRST() THEN BEGIN
        REPEAT

        v_ACL_SP_A:='';
        v_ACL_SP_B:='';
        v_ACL_SP_C:='';
        v_ACL_SP_D:='';
        v_ACL_SP_E:='';
        v_ACL_SP_F:='';
        v_ACL_SP_G:='';
        v_ACL_SP_H:='';
        v_ACL_SP_I:='';
        v_ACL_SP_J:='';
        v_ACL_SP_K:='';
        v_ACL_SP_L:='';
        v_ACL_SP_M:='';
        v_ACL_SP_N:='';
        v_ACL_SP_O:='';
        v_ACL_SP_P:='';
        v_ACL_SP_Q:='';
        v_ACL_SP_R:='';
        v_ACL_SP_S:='';
        v_ACL_SP_T:='';
        v_ACL_SP_U:='';
        v_ACL_SP_V:='';
        v_ACL_SP_W:='';
        v_ACL_SP_X:='';
        v_ACL_SP_Y:='';
        v_ACL_SP_Z:='';
        v_ACL_SP_AA:='';
        v_ACL_SP_AB:='';
        v_ACL_SP_AC:=0;
        v_ACL_SP_AD:=0;
        v_ACL_SP_AE:=0;
        v_ACL_SP_AF:=0;
        v_ACL_SP_AG:='';
        v_ACL_SP_AH:='';
        v_ACL_SP_AI:='';
        v_ACL_SP_AJ:='';
        v_day:=0;
        v_month:=0;
        v_year:=0;


        vkgz.RESET;
        vkgz.SETFILTER(vkgz."Document No.",'%1',Artikelposten."Document No.");
        vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','59');
        vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
        vkgz.SETFILTER(vkgz."No.",'%1',Artikelposten."Item No.");
        IF vkgz.FINDFIRST() THEN BEGIN
          REPEAT

            vkgk.RESET;
            vkgk.SETFILTER(vkgk."No.",'%1',vkgz."Document No.");
            IF vkgk.FINDFIRST() THEN BEGIN
              Sheet.Range('A'+j).Value := '';
              Sheet.Range('B'+j).Value := 'Nico Kossuch';

              //Sheet.Range('C'+j).Value := vkgk."Sell-to Customer No.";
              v_ACL_SP_C := PADSTR(vkgk."Sell-to Customer No.",20);
              Sheet.Range('C'+j).Value := v_ACL_SP_C;

              //Sheet.Range('D'+j).Value := vkgk."No.";
              v_ACL_SP_D := PADSTR(vkgk."No.",20);
              Sheet.Range('D'+j).Value := v_ACL_SP_D;

              Sheet.Range('E'+j).Value := vkgk."Posting Date";
              //v_ACL_SP_E := vkgk."Posting Date";
              //Sheet.Range('E'+j).Value := v_ACL_SP_E;

              v_day := DATE2DMY(vkgk."Posting Date",1);
              v_month := DATE2DMY(vkgk."Posting Date",2);
              v_year := DATE2DMY(vkgk."Posting Date",3)-2000;

              IF v_day=1 THEN v_day1:='01';
              IF v_day=2 THEN v_day1:='02';
              IF v_day=3 THEN v_day1:='03';
              IF v_day=4 THEN v_day1:='04';
              IF v_day=5 THEN v_day1:='05';
              IF v_day=6 THEN v_day1:='06';
              IF v_day=7 THEN v_day1:='07';
              IF v_day=8 THEN v_day1:='08';
              IF v_day=9 THEN v_day1:='09';
              IF v_day=10 THEN v_day1:='10';
              IF v_day=11 THEN v_day1:='11';
              IF v_day=12 THEN v_day1:='12';
              IF v_day=13 THEN v_day1:='13';
              IF v_day=14 THEN v_day1:='14';
              IF v_day=15 THEN v_day1:='15';
              IF v_day=16 THEN v_day1:='16';
              IF v_day=17 THEN v_day1:='17';
              IF v_day=18 THEN v_day1:='18';
              IF v_day=19 THEN v_day1:='19';
              IF v_day=20 THEN v_day1:='20';
              IF v_day=21 THEN v_day1:='21';
              IF v_day=22 THEN v_day1:='22';
              IF v_day=23 THEN v_day1:='23';
              IF v_day=24 THEN v_day1:='24';
              IF v_day=25 THEN v_day1:='25';
              IF v_day=26 THEN v_day1:='26';
              IF v_day=27 THEN v_day1:='27';
              IF v_day=28 THEN v_day1:='28';
              IF v_day=29 THEN v_day1:='29';
              IF v_day=30 THEN v_day1:='30';
              IF v_day=31 THEN v_day1:='31';

              IF v_month=1 THEN v_month1:='01';
              IF v_month=2 THEN v_month1:='02';
              IF v_month=3 THEN v_month1:='03';
              IF v_month=4 THEN v_month1:='04';
              IF v_month=5 THEN v_month1:='05';
              IF v_month=6 THEN v_month1:='06';
              IF v_month=7 THEN v_month1:='07';
              IF v_month=8 THEN v_month1:='08';
              IF v_month=9 THEN v_month1:='09';
              IF v_month=10 THEN v_month1:='10';
              IF v_month=11 THEN v_month1:='11';
              IF v_month=12 THEN v_month1:='12';

              IF v_year=15 THEN v_year1:='15';
              IF v_year=16 THEN v_year1:='16';
              IF v_year=17 THEN v_year1:='17';
              IF v_year=18 THEN v_year1:='18';
              IF v_year=19 THEN v_year1:='19';
              IF v_year=20 THEN v_year1:='20';
              IF v_year=21 THEN v_year1:='21';


              //Sheet.Range('E'+j).Value :=FORMAT(v_month)+'/'+FORMAT(v_day)+'/'+FORMAT(v_year);
              v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
              //v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/');
              Sheet.Range('E'+j).Value := FORMAT(v_ACL_SP_E);
              Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';

              //Sheet.Range('F'+j).Value := '';
              //*********************************************************************************************************************************
              //Sheet.Range('G'+j).Value := vkgk."Bill-to Name";
              v_ACL_SP_G := PADSTR(vkgk."Bill-to Name",30);
              Sheet.Range('G'+j).Value := v_ACL_SP_G;

              //Sheet.Range('H'+j).Value := vkgk."Bill-to Address";
              v_ACL_SP_H := PADSTR(vkgk."Bill-to Address",30);
              Sheet.Range('H'+j).Value := v_ACL_SP_H;

              //Sheet.Range('I'+j).Value := vkgk."Bill-to City";
              v_ACL_SP_I := PADSTR(vkgk."Bill-to City",30);
              Sheet.Range('I'+j).Value := v_ACL_SP_I;

              //Sheet.Range('J'+j).Value := vkgk."Bill-to County";
              v_ACL_SP_J := PADSTR(vkgk."Bill-to County",2);
              Sheet.Range('J'+j).Value := v_ACL_SP_J;

              //Sheet.Range('K'+j).Value := vkgk."Bill-to Post Code";
              v_ACL_SP_K := PADSTR(vkgk."Bill-to Post Code",10);
              Sheet.Range('K'+j).Value := v_ACL_SP_K;

              //Sheet.Range('L'+j).Value := vkgk."Bill-to Country/Region Code";
              v_ACL_SP_L := PADSTR(vkgk."Bill-to Country/Region Code",2);
              Sheet.Range('L'+j).Value := v_ACL_SP_L;

              //Sheet.Range('M'+j).Value := vkgk."Ship-to Name";
              v_ACL_SP_M := PADSTR(vkgk."Ship-to Name",30);
              Sheet.Range('M'+j).Value := v_ACL_SP_M;

              //Sheet.Range('N'+j).Value := vkgk."Ship-to Address";
              v_ACL_SP_N := PADSTR(vkgk."Ship-to Address",30);
              Sheet.Range('N'+j).Value := v_ACL_SP_N;

              //Sheet.Range('O'+j).Value := vkgk."Ship-to City";
              v_ACL_SP_O := PADSTR(vkgk."Ship-to City",30);
              Sheet.Range('O'+j).Value := v_ACL_SP_O;

              //Sheet.Range('P'+j).Value := vkgk."Ship-to County";
              v_ACL_SP_P := PADSTR(vkgk."Ship-to County",2);
              Sheet.Range('P'+j).Value := v_ACL_SP_P;

              //Sheet.Range('Q'+j).Value := vkgk."Ship-to Post Code";
              v_ACL_SP_Q := PADSTR(vkgk."Ship-to Post Code",10);
              Sheet.Range('Q'+j).Value := v_ACL_SP_Q;

              //Sheet.Range('R'+j).Value := vkgk."Ship-to Country/Region Code";
              v_ACL_SP_R := PADSTR(vkgk."Ship-to Country/Region Code",2);
              Sheet.Range('R'+j).Value := v_ACL_SP_R;

              //Sheet.Range('S'+j).Value := vkgk.Endkunde;
              //Sheet.Range('T'+j).Value := vkgk."Endkunde Adresse";
              //Sheet.Range('U'+j).Value := vkgk."Endkunde Ort";
              //Sheet.Range('V'+j).Value := '';
              //Sheet.Range('W'+j).Value := vkgk."Endkunde PLZ-Code";
              //Sheet.Range('X'+j).Value := vkgk."Endkunde Land";

              //Sheet.Range('Y'+j).Value := vkgz."No.";
              v_ACL_SP_Y := PADSTR(vkgz."No.",30);
              Sheet.Range('Y'+j).Value := v_ACL_SP_Y;

              //Sheet.Range('Z'+j).Value := vkgz."No.";
              v_ACL_SP_Z := PADSTR(vkgz."No.",30);
              Sheet.Range('Z'+j).Value := v_ACL_SP_Z;

              //Sheet.Range('AA'+j).Value := vkgz.Description;
              v_ACL_SP_AA := PADSTR(vkgz.Description,30);
              Sheet.Range('AA'+j).Value := v_ACL_SP_AA;

              //Sheet.Range('AB'+j).Value := Artikelposten."Serial No.";
              v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
              Sheet.Range('AB'+j).Value := v_ACL_SP_AB;

              //Sheet.Range('AC'+j).Value := FORMAT(Artikelposten.Quantity*(-1));
              v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
              Sheet.Range('AC'+j).Value := v_ACL_SP_AC;
            END;

            Debitor.RESET;
            IF Debitor.GET(vkgz."Sell-to Customer No.") THEN BEGIN
              //Sheet.Range('AI'+j).Value := Debitor.AC_Solutionpartner;
              v_ACL_SP_AI := PADSTR(Debitor.AC_Solutionpartner,30);
              Sheet.Range('AI'+j).Value := v_ACL_SP_AI;
            END;

            "Ek-Preise".RESET;
            "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
            "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
            "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
            IF "Ek-Preise".FINDFIRST() THEN BEGIN
              //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
              v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*Artikelposten.Quantity*(-1));
              Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
              // END ELSE BEGIN
              // "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
              // "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              // IF "Ek-Preise".FINDFIRST() THEN BEGIN
              // //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
              // v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*(-1));
              // Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
              // END;
            END;

            // v_ACL_SP_AD:=(vkgz."DC-Preis (MW)"*(-1));
            // Sheet.Range('AD'+j).Value := v_ACL_SP_AD;

            v_ACL_SP_AE:=((vkgz."DC-Preis (MW)"*Artikelposten.Quantity)*(-1));
            Sheet.Range('AE'+j).Value := v_ACL_SP_AE;
            // Falls DC-Preis fehlt ****
            IF v_ACL_SP_AE = 0 THEN BEGIN
              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
              "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST() THEN BEGIN
                // v_ACL_SP_AD :=("Ek-Preise"."Direct Unit Cost")*(-1);
                // Sheet.Range('AD'+j).Value := v_ACL_SP_AD;
                v_ACL_SP_AE := (("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity)*(-1));
                Sheet.Range('AE'+j).Value := v_ACL_SP_AE;
                END;
            END;

            "Ek-Preise".RESET;
            "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
            "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
            "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
            IF "Ek-Preise".FINDFIRST() THEN BEGIN
              v_ACL_SP_AF := (((("Ek-Preise"."Direct Unit Cost")*Artikelposten.Quantity)*(-1))-v_ACL_SP_AE);
              Sheet.Range('AF'+j).Value := v_ACL_SP_AF;
            END;

            {
            "Ek-Preise".RESET;
            "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
            "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
            "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
            IF "Ek-Preise".FINDFIRST() THEN BEGIN
            //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
            v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*(-1));
            Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
            END ELSE BEGIN
            "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
            "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
            IF "Ek-Preise".FINDFIRST() THEN BEGIN
            //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
            v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*(-1));
            Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
            END;
            END;
            }

            quotedaten.RESET;
            quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkgz."Quotenr.");
            IF quotedaten.FINDFIRST() THEN BEGIN
            IF  quotedaten.Quotepreis <> 0 THEN BEGIN
              //Sheet.Range('AE'+j).Value :=FORMAT((quotedaten.Quotepreis)*(-1));
              //v_ACL_SP_AE := ((quotedaten.Quotepreis)*(-1));
              //Sheet.Range('AE'+j).Value :=v_ACL_SP_AE;

              //Sheet.Range('AF'+j).Value :=FORMAT(("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis)*(-1));
              //v_ACL_SP_AF := (("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis)*(-1));
              //Sheet.Range('AF'+j).Value :=v_ACL_SP_AF;

              //Sheet.Range('AG'+j).Value := quotedaten."Quotenr. Hersteller";
              v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
              Sheet.Range('AG'+j).Value := v_ACL_SP_AG;

              //Sheet.Range('AH'+j).Value := quotedaten.Genehmigungstext;
              v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
              Sheet.Range('AH'+j).Value := v_ACL_SP_AH;
              END;
            END;

            j := INCSTR (j);
          UNTIL vkgz.NEXT = 0;
        END;

        UNTIL Artikelposten.NEXT = 0;
      END;
      // Ende Gutschriften



      //  Ab hier ACTS ****************************************************************************************
      // Anfang Ums„tze
      Artikelposten.RESET;
      Artikelposten.SETFILTER(Artikelposten."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER(Artikelposten."Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      Artikelposten.SETFILTER(Artikelposten."Invoiced Quantity",'<>%1',0);
      IF Artikelposten.FINDFIRST() THEN BEGIN
        REPEAT
          v_ACL_SP_A:='';
          v_ACL_SP_B:='';
          v_ACL_SP_C:='';
          v_ACL_SP_D:='';
          v_ACL_SP_E:='';
          v_ACL_SP_F:='';
          v_ACL_SP_G:='';
          v_ACL_SP_H:='';
          v_ACL_SP_I:='';
          v_ACL_SP_J:='';
          v_ACL_SP_K:='';
          v_ACL_SP_L:='';
          v_ACL_SP_M:='';
          v_ACL_SP_N:='';
          v_ACL_SP_O:='';
          v_ACL_SP_P:='';
          v_ACL_SP_Q:='';
          v_ACL_SP_R:='';
          v_ACL_SP_S:='';
          v_ACL_SP_T:='';
          v_ACL_SP_U:='';
          v_ACL_SP_V:='';
          v_ACL_SP_W:='';
          v_ACL_SP_X:='';
          v_ACL_SP_Y:='';
          v_ACL_SP_Z:='';
          v_ACL_SP_AA:='';
          v_ACL_SP_AB:='';
          v_ACL_SP_AC:=0;
          v_ACL_SP_AD:=0;
          v_ACL_SP_AE:=0;
          v_ACL_SP_AF:=0;
          v_ACL_SP_AG:='';
          v_ACL_SP_AH:='';
          v_ACL_SP_AI:='';
          v_day:=0;
          v_month:=0;
          v_year:=0;


          v_day:=DATE2DMY(vklk."Posting Date",1);
          v_month:=DATE2DMY(vklk."Posting Date",2);
          v_year:=DATE2DMY(vklk."Posting Date",3)-2000;



          //tab6507.RESET;
          //tab6507.SETFILTER(tab6507."Item Entry No.",'%1',Artikelposten."Entry No.");
          //IF tab6507.FINDFIRST() THEN BEGIN


          vklz.RESET;
          //vklz.SETFILTER(vklz."Document No.",'%1',tab6507."Source ID");
          vklz.SETFILTER(vklz."Document No.",'%1',Artikelposten."Document No.");
          //  **********************************************************************************************************************
          vklz.SETFILTER(vklz."Manufacturer Code",'%1|%2|%3|%4','57','5710','5720','5730');
          //  ***************************************************************************************************************************
          vklz.SETFILTER(vklz.Quantity,'<>%1',0);
          vklz.SETFILTER(vklz."No.",'%1',Artikelposten."Item No.");
          vklz.SETFILTER(vklz."Item Shpt. Entry No.",'%1',Artikelposten."Entry No.");
          IF vklz.FINDFIRST() THEN BEGIN
            REPEAT

              vklk.RESET;
              vklk.SETFILTER(vklk."No.",'%1',vklz."Document No.");
              IF vklk.FINDFIRST() THEN BEGIN
                Sheet.Range('A'+j).Value := '';
                v_ACL_SP_B:='Nico Kossuch';
                Sheet.Range('B'+j).Value := v_ACL_SP_B;
                v_ACL_SP_C:=PADSTR(vklk."Sell-to Customer No.",20);
                Sheet.Range('C'+j).Value := v_ACL_SP_C;
                v_ACL_SP_D:= PADSTR(vklk."No.",20);
                Sheet.Range('D'+j).Value := v_ACL_SP_D;

                IF v_day=1 THEN v_day1:='01';
                IF v_day=2 THEN v_day1:='02';
                IF v_day=3 THEN v_day1:='03';
                IF v_day=4 THEN v_day1:='04';
                IF v_day=5 THEN v_day1:='05';
                IF v_day=6 THEN v_day1:='06';
                IF v_day=7 THEN v_day1:='07';
                IF v_day=8 THEN v_day1:='08';
                IF v_day=9 THEN v_day1:='09';
                IF v_day=10 THEN v_day1:='10';
                IF v_day=11 THEN v_day1:='11';
                IF v_day=12 THEN v_day1:='12';
                IF v_day=13 THEN v_day1:='13';
                IF v_day=14 THEN v_day1:='14';
                IF v_day=15 THEN v_day1:='15';
                IF v_day=16 THEN v_day1:='16';
                IF v_day=17 THEN v_day1:='17';
                IF v_day=18 THEN v_day1:='18';
                IF v_day=19 THEN v_day1:='19';
                IF v_day=20 THEN v_day1:='20';
                IF v_day=21 THEN v_day1:='21';
                IF v_day=22 THEN v_day1:='22';
                IF v_day=23 THEN v_day1:='23';
                IF v_day=24 THEN v_day1:='24';
                IF v_day=25 THEN v_day1:='25';
                IF v_day=26 THEN v_day1:='26';
                IF v_day=27 THEN v_day1:='27';
                IF v_day=28 THEN v_day1:='28';
                IF v_day=29 THEN v_day1:='29';
                IF v_day=30 THEN v_day1:='30';
                IF v_day=31 THEN v_day1:='31';

                IF v_month=1 THEN v_month1:='01';
                IF v_month=2 THEN v_month1:='02';
                IF v_month=3 THEN v_month1:='03';
                IF v_month=4 THEN v_month1:='04';
                IF v_month=5 THEN v_month1:='05';
                IF v_month=6 THEN v_month1:='06';
                IF v_month=7 THEN v_month1:='07';
                IF v_month=8 THEN v_month1:='08';
                IF v_month=9 THEN v_month1:='09';
                IF v_month=10 THEN v_month1:='10';
                IF v_month=11 THEN v_month1:='11';
                IF v_month=12 THEN v_month1:='12';

                IF v_year=15 THEN v_year1:='15';
                IF v_year=16 THEN v_year1:='16';
                IF v_year=17 THEN v_year1:='17';
                IF v_year=18 THEN v_year1:='18';
                IF v_year=19 THEN v_year1:='19';
                IF v_year=20 THEN v_year1:='20';
                IF v_year=21 THEN v_year1:='21';


                v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
                Sheet.Range('E'+j).Value := FORMAT(v_ACL_SP_E);
                Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';

                v_ACL_SP_F := PADSTR(vklk."External Document No.",20);
                Sheet.Range('F'+j).Value := v_ACL_SP_F;

                v_ACL_SP_G :=PADSTR(vklk."Bill-to Name",30);
                Sheet.Range('G'+j).Value := v_ACL_SP_G;

                v_ACL_SP_H := PADSTR(vklk."Bill-to Address",30);
                Sheet.Range('H'+j).Value := v_ACL_SP_H;

                v_ACL_SP_I := PADSTR(vklk."Bill-to City",30);
                Sheet.Range('I'+j).Value := v_ACL_SP_I;

                v_ACL_SP_J := PADSTR(vklk."Bill-to County",2);
                Sheet.Range('J'+j).Value := v_ACL_SP_J;

                v_ACL_SP_K := PADSTR(vklk."Bill-to Post Code",10);
                Sheet.Range('K'+j).Value := v_ACL_SP_K;

                v_ACL_SP_L := PADSTR(vklk."Bill-to Country/Region Code",2);
                Sheet.Range('L'+j).Value := v_ACL_SP_L;

                v_ACL_SP_M := PADSTR(vklk."Ship-to Name",30);
                Sheet.Range('M'+j).Value := v_ACL_SP_M;

                v_ACL_SP_N := PADSTR(vklk."Ship-to Address",30);
                Sheet.Range('N'+j).Value := v_ACL_SP_N;

                v_ACL_SP_O := PADSTR(vklk."Ship-to City",30);
                Sheet.Range('O'+j).Value := v_ACL_SP_O;

                v_ACL_SP_P := PADSTR(vklk."Ship-to County",2);
                Sheet.Range('P'+j).Value := v_ACL_SP_P;

                v_ACL_SP_Q := PADSTR(vklk."Ship-to Post Code",10);
                Sheet.Range('Q'+j).Value := v_ACL_SP_Q;

                v_ACL_SP_R := PADSTR(vklk."Ship-to Country/Region Code",2);
                Sheet.Range('R'+j).Value := v_ACL_SP_R;

                v_ACL_SP_S := PADSTR(vklk.Endkunde,30);
                Sheet.Range('S'+j).Value := v_ACL_SP_S;

                v_ACL_SP_T := PADSTR(vklk."Endkunde Adresse",30);
                Sheet.Range('T'+j).Value := v_ACL_SP_T;

                v_ACL_SP_U := PADSTR(vklk."Endkunde Ort",30);
                Sheet.Range('U'+j).Value := v_ACL_SP_U;

                Sheet.Range('V'+j).Value := '';
                //v_ACL_SP_V := PADSTR('',2);
                //Sheet.Range('V'+j).Value := v_ACL_SP_V;

                v_ACL_SP_W := PADSTR(vklk."Endkunde PLZ-Code",10);
                Sheet.Range('W'+j).Value := v_ACL_SP_W;

                v_ACL_SP_X := PADSTR(vklk."Endkunde Land",2);
                Sheet.Range('X'+j).Value := v_ACL_SP_X;

                v_ACL_SP_Y := PADSTR(vklz."No.",30);
                Sheet.Range('Y'+j).Value := v_ACL_SP_Y;

                v_ACL_SP_Z := PADSTR(vklz."No.",30);
                Sheet.Range('Z'+j).Value := v_ACL_SP_Z;

                v_ACL_SP_AA := PADSTR(vklz.Description,30);
                Sheet.Range('AA'+j).Value := v_ACL_SP_AA;

                v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
                Sheet.Range('AB'+j).Value := v_ACL_SP_AB;

                v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
                Sheet.Range('AC'+j).Value := v_ACL_SP_AC;
              END;

              Debitor.RESET;
              IF Debitor.GET(vklz."Sell-to Customer No.") THEN BEGIN
                v_ACL_SP_AI := Debitor.AC_Solutionpartner;
                Sheet.Range('AI'+j).Value := Debitor.AC_Solutionpartner;
              END;

              //  **************************************  EK aus Preisliste  ******************************
              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST() THEN BEGIN
                v_ACL_SP_AD :=("Ek-Preise"."Direct Unit Cost"*((Artikelposten.Quantity)*(-1)));
                Sheet.Range('AD'+j).Value := v_ACL_SP_AD;
              END;

              v_ACL_SP_AE:=((vklz."DC-Preis (MW)"*Artikelposten.Quantity)*(-1));
              Sheet.Range('AE'+j).Value := v_ACL_SP_AE;

              // Falls DC-Preis fehlt **** *************************************
              IF v_ACL_SP_AE = 0 THEN BEGIN
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vklz."No.");
                "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
                "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST() THEN BEGIN
                  v_ACL_SP_AE :=(("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity)*(-1));
                  Sheet.Range('AE'+j).Value := v_ACL_SP_AE;
                END;
              END;

              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST() THEN BEGIN
                v_ACL_SP_AF :=(((("Ek-Preise"."Direct Unit Cost")*(Artikelposten.Quantity)*(-1)))-v_ACL_SP_AE);
                Sheet.Range('AF'+j).Value := v_ACL_SP_AF;
              END;

              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vklz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
                Sheet.Range('AG'+j).Value := v_ACL_SP_AG;
                v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
                Sheet.Range('AH'+j).Value := v_ACL_SP_AH;
              END;

              j := INCSTR (j);
            UNTIL vklz.NEXT = 0;
          END;
          //END;
        UNTIL Artikelposten.NEXT=0;
      END;
      //  Ende Ums„tze


      // Anfang Gutschriften
      Artikelposten.RESET;
      Artikelposten.SETFILTER(Artikelposten."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER(Artikelposten."Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      IF Artikelposten.FINDFIRST() THEN BEGIN
        REPEAT

        v_ACL_SP_A:='';
        v_ACL_SP_B:='';
        v_ACL_SP_C:='';
        v_ACL_SP_D:='';
        v_ACL_SP_E:='';
        v_ACL_SP_F:='';
        v_ACL_SP_G:='';
        v_ACL_SP_H:='';
        v_ACL_SP_I:='';
        v_ACL_SP_J:='';
        v_ACL_SP_K:='';
        v_ACL_SP_L:='';
        v_ACL_SP_M:='';
        v_ACL_SP_N:='';
        v_ACL_SP_O:='';
        v_ACL_SP_P:='';
        v_ACL_SP_Q:='';
        v_ACL_SP_R:='';
        v_ACL_SP_S:='';
        v_ACL_SP_T:='';
        v_ACL_SP_U:='';
        v_ACL_SP_V:='';
        v_ACL_SP_W:='';
        v_ACL_SP_X:='';
        v_ACL_SP_Y:='';
        v_ACL_SP_Z:='';
        v_ACL_SP_AA:='';
        v_ACL_SP_AB:='';
        v_ACL_SP_AC:=0;
        v_ACL_SP_AD:=0;
        v_ACL_SP_AE:=0;
        v_ACL_SP_AF:=0;
        v_ACL_SP_AG:='';
        v_ACL_SP_AH:='';
        v_ACL_SP_AI:='';
        v_day:=0;
        v_month:=0;
        v_year:=0;


        vkgz.RESET;
        vkgz.SETFILTER(vkgz."Document No.",'%1',Artikelposten."Document No.");
        vkgz.SETFILTER(vkgz."Manufacturer Code",'%1|%2|%3|%4','57','5710','5720','5730');
        vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
        vkgz.SETFILTER(vkgz."No.",'%1',Artikelposten."Item No.");
        IF vkgz.FINDFIRST() THEN BEGIN
          REPEAT

            vkgk.RESET;
            vkgk.SETFILTER(vkgk."No.",'%1',vkgz."Document No.");
            IF vkgk.FINDFIRST() THEN BEGIN
              Sheet.Range('A'+j).Value := '';
              Sheet.Range('B'+j).Value := 'Nico Kossuch';

              //Sheet.Range('C'+j).Value := vkgk."Sell-to Customer No.";
              v_ACL_SP_C := PADSTR(vkgk."Sell-to Customer No.",20);
              Sheet.Range('C'+j).Value := v_ACL_SP_C;

              //Sheet.Range('D'+j).Value := vkgk."No.";
              v_ACL_SP_D := PADSTR(vkgk."No.",20);
              Sheet.Range('D'+j).Value := v_ACL_SP_D;

              Sheet.Range('E'+j).Value := vkgk."Posting Date";
              //v_ACL_SP_E := vkgk."Posting Date";
              //Sheet.Range('E'+j).Value := v_ACL_SP_E;

              v_day:=DATE2DMY(vkgk."Posting Date",1);
              v_month:=DATE2DMY(vkgk."Posting Date",2);
              v_year:=DATE2DMY(vkgk."Posting Date",3)-2000;

              IF v_day=1 THEN v_day1:='01';
              IF v_day=2 THEN v_day1:='02';
              IF v_day=3 THEN v_day1:='03';
              IF v_day=4 THEN v_day1:='04';
              IF v_day=5 THEN v_day1:='05';
              IF v_day=6 THEN v_day1:='06';
              IF v_day=7 THEN v_day1:='07';
              IF v_day=8 THEN v_day1:='08';
              IF v_day=9 THEN v_day1:='09';
              IF v_day=10 THEN v_day1:='10';
              IF v_day=11 THEN v_day1:='11';
              IF v_day=12 THEN v_day1:='12';
              IF v_day=13 THEN v_day1:='13';
              IF v_day=14 THEN v_day1:='14';
              IF v_day=15 THEN v_day1:='15';
              IF v_day=16 THEN v_day1:='16';
              IF v_day=17 THEN v_day1:='17';
              IF v_day=18 THEN v_day1:='18';
              IF v_day=19 THEN v_day1:='19';
              IF v_day=20 THEN v_day1:='20';
              IF v_day=21 THEN v_day1:='21';
              IF v_day=22 THEN v_day1:='22';
              IF v_day=23 THEN v_day1:='23';
              IF v_day=24 THEN v_day1:='24';
              IF v_day=25 THEN v_day1:='25';
              IF v_day=26 THEN v_day1:='26';
              IF v_day=27 THEN v_day1:='27';
              IF v_day=28 THEN v_day1:='28';
              IF v_day=29 THEN v_day1:='29';
              IF v_day=30 THEN v_day1:='30';
              IF v_day=31 THEN v_day1:='31';

              IF v_month=1 THEN v_month1:='01';
              IF v_month=2 THEN v_month1:='02';
              IF v_month=3 THEN v_month1:='03';
              IF v_month=4 THEN v_month1:='04';
              IF v_month=5 THEN v_month1:='05';
              IF v_month=6 THEN v_month1:='06';
              IF v_month=7 THEN v_month1:='07';
              IF v_month=8 THEN v_month1:='08';
              IF v_month=9 THEN v_month1:='09';
              IF v_month=10 THEN v_month1:='10';
              IF v_month=11 THEN v_month1:='11';
              IF v_month=12 THEN v_month1:='12';

              IF v_year=15 THEN v_year1:='15';
              IF v_year=16 THEN v_year1:='16';
              IF v_year=17 THEN v_year1:='17';
              IF v_year=18 THEN v_year1:='18';
              IF v_year=19 THEN v_year1:='19';
              IF v_year=20 THEN v_year1:='20';
              IF v_year=21 THEN v_year1:='21';


              //Sheet.Range('E'+j).Value :=FORMAT(v_month)+'/'+FORMAT(v_day)+'/'+FORMAT(v_year);
              v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
              //v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/');
              Sheet.Range('E'+j).Value := FORMAT(v_ACL_SP_E);
              Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';

              //Sheet.Range('F'+j).Value := '';
              //**************************************************************************************
              //Sheet.Range('G'+j).Value := vkgk."Bill-to Name";
              v_ACL_SP_G := PADSTR(vkgk."Bill-to Name",30);
              Sheet.Range('G'+j).Value := v_ACL_SP_G;

              //Sheet.Range('H'+j).Value := vkgk."Bill-to Address";
              v_ACL_SP_H := PADSTR(vkgk."Bill-to Address",30);
              Sheet.Range('H'+j).Value := v_ACL_SP_H;

              //Sheet.Range('I'+j).Value := vkgk."Bill-to City";
              v_ACL_SP_I := PADSTR(vkgk."Bill-to City",30);
              Sheet.Range('I'+j).Value := v_ACL_SP_I;

              //Sheet.Range('J'+j).Value := vkgk."Bill-to County";
              v_ACL_SP_J := PADSTR(vkgk."Bill-to County",2);
              Sheet.Range('J'+j).Value := v_ACL_SP_J;

              //Sheet.Range('K'+j).Value := vkgk."Bill-to Post Code";
              v_ACL_SP_K := PADSTR(vkgk."Bill-to Post Code",10);
              Sheet.Range('K'+j).Value := v_ACL_SP_K;

              //Sheet.Range('L'+j).Value := vkgk."Bill-to Country/Region Code";
              v_ACL_SP_L := PADSTR(vkgk."Bill-to Country/Region Code",2);
              Sheet.Range('L'+j).Value := v_ACL_SP_L;

              //Sheet.Range('M'+j).Value := vkgk."Ship-to Name";
              v_ACL_SP_M := PADSTR(vkgk."Ship-to Name",30);
              Sheet.Range('M'+j).Value := v_ACL_SP_M;

              //Sheet.Range('N'+j).Value := vkgk."Ship-to Address";
              v_ACL_SP_N := PADSTR(vkgk."Ship-to Address",30);
              Sheet.Range('N'+j).Value := v_ACL_SP_N;

              //Sheet.Range('O'+j).Value := vkgk."Ship-to City";
              v_ACL_SP_O := PADSTR(vkgk."Ship-to City",30);
              Sheet.Range('O'+j).Value := v_ACL_SP_O;

              //Sheet.Range('P'+j).Value := vkgk."Ship-to County";
              v_ACL_SP_P := PADSTR(vkgk."Ship-to County",2);
              Sheet.Range('P'+j).Value := v_ACL_SP_P;

              //Sheet.Range('Q'+j).Value := vkgk."Ship-to Post Code";
              v_ACL_SP_Q := PADSTR(vkgk."Ship-to Post Code",10);
              Sheet.Range('Q'+j).Value := v_ACL_SP_Q;

              //Sheet.Range('R'+j).Value := vkgk."Ship-to Country/Region Code";
              v_ACL_SP_R := PADSTR(vkgk."Ship-to Country/Region Code",2);
              Sheet.Range('R'+j).Value := v_ACL_SP_R;

              //Sheet.Range('S'+j).Value := vkgk.Endkunde;
              //Sheet.Range('T'+j).Value := vkgk."Endkunde Adresse";
              //Sheet.Range('U'+j).Value := vkgk."Endkunde Ort";
              //Sheet.Range('V'+j).Value := '';
              //Sheet.Range('W'+j).Value := vkgk."Endkunde PLZ-Code";
              //Sheet.Range('X'+j).Value := vkgk."Endkunde Land";

              //Sheet.Range('Y'+j).Value := vkgz."No.";
              v_ACL_SP_Y := PADSTR(vkgz."No.",30);
              Sheet.Range('Y'+j).Value := v_ACL_SP_Y;

              //Sheet.Range('Z'+j).Value := vkgz."No.";
              v_ACL_SP_Z := PADSTR(vkgz."No.",30);
              Sheet.Range('Z'+j).Value := v_ACL_SP_Z;

              //Sheet.Range('AA'+j).Value := vkgz.Description;
              v_ACL_SP_AA := PADSTR(vkgz.Description,30);
              Sheet.Range('AA'+j).Value := v_ACL_SP_AA;

              //Sheet.Range('AB'+j).Value := Artikelposten."Serial No.";
              v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
              Sheet.Range('AB'+j).Value := v_ACL_SP_AB;

              //Sheet.Range('AC'+j).Value := FORMAT(Artikelposten.Quantity*(-1));
              v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
              Sheet.Range('AC'+j).Value := v_ACL_SP_AC;
              END;

              Debitor.RESET;
              IF Debitor.GET(vkgz."Sell-to Customer No.") THEN BEGIN
                //Sheet.Range('AI'+j).Value := Debitor.AC_Solutionpartner;
                v_ACL_SP_AI := PADSTR(Debitor.AC_Solutionpartner,30);
                Sheet.Range('AI'+j).Value := v_ACL_SP_AI;
              END;


              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
              "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
              "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST() THEN BEGIN
                //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
                v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*Artikelposten.Quantity*(-1));
                Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
                // END ELSE BEGIN
                // "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
                // "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
                // IF "Ek-Preise".FINDFIRST() THEN BEGIN
                // //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
                // v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*(-1));
                // Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
                // END;
              END;

              // v_ACL_SP_AD:=(vkgz."DC-Preis (MW)"*(-1));
              // Sheet.Range('AD'+j).Value := v_ACL_SP_AD;

              v_ACL_SP_AE := ((vkgz."DC-Preis (MW)"*Artikelposten.Quantity)*(-1));
              Sheet.Range('AE'+j).Value := v_ACL_SP_AE;
              // Falls DC-Preis fehlt ****
              IF v_ACL_SP_AE = 0 THEN BEGIN

                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
                "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
                "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST() THEN BEGIN
                  // v_ACL_SP_AD :=("Ek-Preise"."Direct Unit Cost")*(-1);
                  // Sheet.Range('AD'+j).Value := v_ACL_SP_AD;
                  v_ACL_SP_AE:=(("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity)*(-1));
                  Sheet.Range('AE'+j).Value := v_ACL_SP_AE;
                  END;
              END;

              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
              "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST() THEN BEGIN
                v_ACL_SP_AF :=(((("Ek-Preise"."Direct Unit Cost")*Artikelposten.Quantity)*(-1))-v_ACL_SP_AE);
                Sheet.Range('AF'+j).Value := v_ACL_SP_AF;
              END;

              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkgz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                IF  quotedaten.Quotepreis <> 0 THEN BEGIN
                  //Sheet.Range('AE'+j).Value :=FORMAT((quotedaten.Quotepreis)*(-1));
                  //v_ACL_SP_AE := ((quotedaten.Quotepreis)*(-1));
                  //Sheet.Range('AE'+j).Value :=v_ACL_SP_AE;

                  //Sheet.Range('AF'+j).Value :=FORMAT(("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis)*(-1));
                  //v_ACL_SP_AF := (("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis)*(-1));
                  //Sheet.Range('AF'+j).Value :=v_ACL_SP_AF;

                  //Sheet.Range('AG'+j).Value := quotedaten."Quotenr. Hersteller";
                  v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
                  Sheet.Range('AG'+j).Value := v_ACL_SP_AG;

                  //Sheet.Range('AH'+j).Value := quotedaten.Genehmigungstext;
                  v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
                  Sheet.Range('AH'+j).Value := v_ACL_SP_AH;
                END;
              END;

              j := INCSTR (j);
            UNTIL vkgz.NEXT=0;
          END;

        UNTIL Artikelposten.NEXT=0;
      END;
      // Ende Gutschriften

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_POS_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);

      //ACS2
    END;

    PROCEDURE ACS_neu@1000000001();
    BEGIN
      v_Total_Sum := 0;

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);

      RecNo := 0;
      RowNo := 1;
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,'POS Vendor Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Sales Rep Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To Acct# or Customer #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Invoice Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Invoice or Ship Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'PO Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To Adress',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To State',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To Zip',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ship To Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ship To Adress',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ship To City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ship To State',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ship To Zip',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ship To Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'EndUser Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'EndUser Adress',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'EndUser City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'EndUser State',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'EndUser Zip',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'EndUser Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Distributer Item #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'AudioCodes Item #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Item Description',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Serial #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Quantity',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Extended Cost (Euro)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Extended Net Cost (Euro)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Discounts/Rebates (Euro)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'DPA Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'DPA Description',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'End User Application',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Vendor No',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);

      RowNo := RowNo + 1;

      // Anfang Ums„tze
      Artikelposten.RESET;
      Artikelposten.SETFILTER("Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER("Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      Artikelposten.SETFILTER("Invoiced Quantity",'<>%1',0);
      IF Artikelposten.FIND('-') THEN BEGIN
        TotalRecNo := Artikelposten.COUNT;
        REPEAT
          v_ACL_SP_A:='';
          v_ACL_SP_B:='';
          v_ACL_SP_C:='';
          v_ACL_SP_D:='';
          v_ACL_SP_E:='';
          v_ACL_SP_F:='';
          v_ACL_SP_G:='';
          v_ACL_SP_H:='';
          v_ACL_SP_I:='';
          v_ACL_SP_J:='';
          v_ACL_SP_K:='';
          v_ACL_SP_L:='';
          v_ACL_SP_M:='';
          v_ACL_SP_N:='';
          v_ACL_SP_O:='';
          v_ACL_SP_P:='';
          v_ACL_SP_Q:='';
          v_ACL_SP_R:='';
          v_ACL_SP_S:='';
          v_ACL_SP_T:='';
          v_ACL_SP_U:='';
          v_ACL_SP_V:='';
          v_ACL_SP_W:='';
          v_ACL_SP_X:='';
          v_ACL_SP_Y:='';
          v_ACL_SP_Z:='';
          v_ACL_SP_AA:='';
          v_ACL_SP_AB:='';
          v_ACL_SP_AC:=0;
          v_ACL_SP_AD:=0;
          v_ACL_SP_AE:=0;
          v_ACL_SP_AF:=0;
          v_ACL_SP_AG:='';
          v_ACL_SP_AH:='';
          v_ACL_SP_AI:='';
          v_ACL_SP_AJ:='';
          v_day:=0;
          v_month:=0;
          v_year:=0;


          vklz.RESET;
          vklz.SETFILTER("Document No.",'%1',Artikelposten."Document No.");
          //  **********************************************************************************************************************
          vklz.SETFILTER("Manufacturer Code",'%1','59');
          //  ***************************************************************************************************************************
          vklz.SETFILTER(Quantity,'<>%1',0);
          vklz.SETFILTER("No.",'%1',Artikelposten."Item No.");
          vklz.SETFILTER("Line No.",'%1',Artikelposten."Document Line No.");
          IF vklz.FINDFIRST THEN BEGIN
            REPEAT
            //wieder l”schen
            //EnterCell(RowNo,,,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              vklk.RESET;
              vklk.SETFILTER("No.",'%1',vklz."Document No.");
              IF vklk.FINDFIRST THEN BEGIN

                v_ACL_SP_B := 'Nico Kossuch';
                EnterCell(RowNo,2,v_ACL_SP_B,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_C := PADSTR(vklk."Sell-to Customer No.",20);
                EnterCell(RowNo,3,v_ACL_SP_C,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_D := PADSTR(vklk."No.",20);
                EnterCell(RowNo,4,v_ACL_SP_D,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_day := DATE2DMY(vklk."Posting Date",1);
                v_month := DATE2DMY(vklk."Posting Date",2);
                v_year := DATE2DMY(vklk."Posting Date",3)-2000;

                IF v_day=1 THEN v_day1:='01';
                IF v_day=2 THEN v_day1:='02';
                IF v_day=3 THEN v_day1:='03';
                IF v_day=4 THEN v_day1:='04';
                IF v_day=5 THEN v_day1:='05';
                IF v_day=6 THEN v_day1:='06';
                IF v_day=7 THEN v_day1:='07';
                IF v_day=8 THEN v_day1:='08';
                IF v_day=9 THEN v_day1:='09';
                IF v_day=10 THEN v_day1:='10';
                IF v_day=11 THEN v_day1:='11';
                IF v_day=12 THEN v_day1:='12';
                IF v_day=13 THEN v_day1:='13';
                IF v_day=14 THEN v_day1:='14';
                IF v_day=15 THEN v_day1:='15';
                IF v_day=16 THEN v_day1:='16';
                IF v_day=17 THEN v_day1:='17';
                IF v_day=18 THEN v_day1:='18';
                IF v_day=19 THEN v_day1:='19';
                IF v_day=20 THEN v_day1:='20';
                IF v_day=21 THEN v_day1:='21';
                IF v_day=22 THEN v_day1:='22';
                IF v_day=23 THEN v_day1:='23';
                IF v_day=24 THEN v_day1:='24';
                IF v_day=25 THEN v_day1:='25';
                IF v_day=26 THEN v_day1:='26';
                IF v_day=27 THEN v_day1:='27';
                IF v_day=28 THEN v_day1:='28';
                IF v_day=29 THEN v_day1:='29';
                IF v_day=30 THEN v_day1:='30';
                IF v_day=31 THEN v_day1:='31';

                IF v_month=1 THEN v_month1:='01';
                IF v_month=2 THEN v_month1:='02';
                IF v_month=3 THEN v_month1:='03';
                IF v_month=4 THEN v_month1:='04';
                IF v_month=5 THEN v_month1:='05';
                IF v_month=6 THEN v_month1:='06';
                IF v_month=7 THEN v_month1:='07';
                IF v_month=8 THEN v_month1:='08';
                IF v_month=9 THEN v_month1:='09';
                IF v_month=10 THEN v_month1:='10';
                IF v_month=11 THEN v_month1:='11';
                IF v_month=12 THEN v_month1:='12';

                IF v_year=15 THEN v_year1:='15';
                IF v_year=16 THEN v_year1:='16';
                IF v_year=17 THEN v_year1:='17';
                IF v_year=18 THEN v_year1:='18';
                IF v_year=19 THEN v_year1:='19';
                IF v_year=20 THEN v_year1:='20';
                IF v_year=21 THEN v_year1:='21';

                v_ACL_SP_E:= FORMAT(FORMAT(v_day1) + '/' + FORMAT(v_month1) + '/' + FORMAT(v_year1));
                {
                Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';
                }
                EnterCell(RowNo,5,FORMAT(v_ACL_SP_E),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);

                v_ACL_SP_F := PADSTR(vklk."External Document No.",20);
                EnterCell(RowNo,6,v_ACL_SP_F,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_G :=PADSTR(vklk."Bill-to Name",30);
                EnterCell(RowNo,7,v_ACL_SP_G,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_H := PADSTR(vklk."Bill-to Address",30);
                EnterCell(RowNo,8,v_ACL_SP_H,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_I := PADSTR(vklk."Bill-to City",30);
                EnterCell(RowNo,9,v_ACL_SP_I,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_J := PADSTR(vklk."Bill-to County",2);
                EnterCell(RowNo,10,v_ACL_SP_J,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_K := PADSTR(vklk."Bill-to Post Code",10);
                EnterCell(RowNo,11,v_ACL_SP_K,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_L := PADSTR(vklk."Bill-to Country/Region Code",2);
                EnterCell(RowNo,12,v_ACL_SP_L,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_M := PADSTR(vklk."Ship-to Name",30);
                EnterCell(RowNo,13,v_ACL_SP_M,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_N := PADSTR(vklk."Ship-to Address",30);
                EnterCell(RowNo,14,v_ACL_SP_N,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_O := PADSTR(vklk."Ship-to City",30);
                EnterCell(RowNo,15,v_ACL_SP_O,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_P := PADSTR(vklk."Ship-to County",2);
                EnterCell(RowNo,16,v_ACL_SP_P,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Q := PADSTR(vklk."Ship-to Post Code",10);
                EnterCell(RowNo,17,v_ACL_SP_Q,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_R := PADSTR(vklk."Ship-to Country/Region Code",2);
                EnterCell(RowNo,18,v_ACL_SP_R,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_S := PADSTR(vklk.Endkunde,30);
                EnterCell(RowNo,19,v_ACL_SP_S,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_T := PADSTR(vklk."Endkunde Adresse",30);
                EnterCell(RowNo,20,v_ACL_SP_T,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_U := PADSTR(vklk."Endkunde Ort",30);
                EnterCell(RowNo,21,v_ACL_SP_U,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_W := PADSTR(vklk."Endkunde PLZ-Code",10);
                EnterCell(RowNo,23,v_ACL_SP_W,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_X := PADSTR(vklk."Endkunde Land",2);
                EnterCell(RowNo,24,v_ACL_SP_X,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Y := PADSTR(vklz."No.",30);
                EnterCell(RowNo,25,v_ACL_SP_Y,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Z := PADSTR(vklz."No.",30);
                EnterCell(RowNo,26,v_ACL_SP_Z,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AA := PADSTR(vklz.Description,30);
                EnterCell(RowNo,27,v_ACL_SP_AA,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
                EnterCell(RowNo,28,v_ACL_SP_AB,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
                EnterCell(RowNo,29,FORMAT(v_ACL_SP_AC),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              //  **************************************  EK aus Preisliste  ******************************
              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST THEN BEGIN
                v_ACL_SP_AD := ("Ek-Preise"."Direct Unit Cost" * ((Artikelposten.Quantity) * (-1)));
                EnterCell(RowNo,30,FORMAT(v_ACL_SP_AD),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              v_ACL_SP_AE := ((vklz."DC-Preis (MW)" * Artikelposten.Quantity) * (-1));
              // Falls DC-Preis fehlt **** *************************************
              IF v_ACL_SP_AE = 0 THEN BEGIN
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
                "Ek-Preise".SETFILTER("Currency Code",'%1','');
                "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  v_ACL_SP_AE := ("Ek-Preise"."Direct Unit Cost" * Artikelposten.Quantity) * (-1);
                END;
              END;
              EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);

              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST THEN BEGIN
                v_ACL_SP_AF := (("Ek-Preise"."Direct Unit Cost") * (Artikelposten.Quantity) * (-1)) - v_ACL_SP_AE;
                EnterCell(RowNo,32,FORMAT(v_ACL_SP_AF),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              quotedaten.RESET;
              quotedaten.SETFILTER("Quotenr.",'%1',vklz."Quotenr.");
              IF quotedaten.FINDFIRST THEN BEGIN
                v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
                EnterCell(RowNo,33,v_ACL_SP_AG,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
                EnterCell(RowNo,34,v_ACL_SP_AH,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              IF Debitor.GET(vklz."Sell-to Customer No.") THEN BEGIN
                v_ACL_SP_AI := Debitor.AC_Solutionpartner;
                EnterCell(RowNo,35,v_ACL_SP_AI,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              // Herausfinden ber wen eingekauft wurde
              IF Artikelposten."Serial No."<>'' THEN BEGIN
                v_ACL_SP_AJ := '';
                Artpost.RESET;
                Artpost.SETFILTER("Serial No.",'%1',Artikelposten."Serial No.");
                Artpost.SETFILTER("Entry Type",'%1',Artpost."Entry Type"::Purchase);
                IF Artpost.FINDFIRST THEN BEGIN
                    v_ACL_SP_AJ := Artpost."Source No.";
                END;
              END;
              EnterCell(RowNo,36,v_ACL_SP_AJ,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              // Ende herausfinden ber wen bezogen wurde

              RowNo := RowNo + 1;

            UNTIL vklz.NEXT = 0;

          END;

          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));

        UNTIL Artikelposten.NEXT = 0;
      END;
      //  Ende Ums„tze


      // Anfang Gutschriften
      Artikelposten.RESET;
      Artikelposten.SETFILTER("Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER("Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      IF Artikelposten.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := Artikelposten.COUNT;
        REPEAT
          v_ACL_SP_A:='';
          v_ACL_SP_B:='';
          v_ACL_SP_C:='';
          v_ACL_SP_D:='';
          v_ACL_SP_E:='';
          v_ACL_SP_F:='';
          v_ACL_SP_G:='';
          v_ACL_SP_H:='';
          v_ACL_SP_I:='';
          v_ACL_SP_J:='';
          v_ACL_SP_K:='';
          v_ACL_SP_L:='';
          v_ACL_SP_M:='';
          v_ACL_SP_N:='';
          v_ACL_SP_O:='';
          v_ACL_SP_P:='';
          v_ACL_SP_Q:='';
          v_ACL_SP_R:='';
          v_ACL_SP_S:='';
          v_ACL_SP_T:='';
          v_ACL_SP_U:='';
          v_ACL_SP_V:='';
          v_ACL_SP_W:='';
          v_ACL_SP_X:='';
          v_ACL_SP_Y:='';
          v_ACL_SP_Z:='';
          v_ACL_SP_AA:='';
          v_ACL_SP_AB:='';
          v_ACL_SP_AC:=0;
          v_ACL_SP_AD:=0;
          v_ACL_SP_AE:=0;
          v_ACL_SP_AF:=0;
          v_ACL_SP_AG:='';
          v_ACL_SP_AH:='';
          v_ACL_SP_AI:='';
          v_ACL_SP_AJ:='';
          v_day:=0;
          v_month:=0;
          v_year:=0;


          vkgz.RESET;
          vkgz.SETFILTER("Document No.",'%1',Artikelposten."Document No.");
          vkgz.SETFILTER("Manufacturer Code",'%1','59');
          vkgz.SETFILTER(Quantity,'<>%1',0);
          vkgz.SETFILTER("No.",'%1',Artikelposten."Item No.");
          IF vkgz.FINDFIRST THEN BEGIN
            REPEAT

              vkgk.RESET;
              vkgk.SETFILTER("No.",'%1',vkgz."Document No.");
              IF vkgk.FINDFIRST THEN BEGIN

                v_ACL_SP_B := 'Nico Kossuch';
                EnterCell(RowNo,2,v_ACL_SP_B,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_C := PADSTR(vkgk."Sell-to Customer No.",20);
                EnterCell(RowNo,3,v_ACL_SP_C,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_D := PADSTR(vkgk."No.",20);
                EnterCell(RowNo,4,v_ACL_SP_D,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_day := DATE2DMY(vkgk."Posting Date",1);
                v_month := DATE2DMY(vkgk."Posting Date",2);
                v_year := DATE2DMY(vkgk."Posting Date",3)-2000;

                IF v_day=1 THEN v_day1:='01';
                IF v_day=2 THEN v_day1:='02';
                IF v_day=3 THEN v_day1:='03';
                IF v_day=4 THEN v_day1:='04';
                IF v_day=5 THEN v_day1:='05';
                IF v_day=6 THEN v_day1:='06';
                IF v_day=7 THEN v_day1:='07';
                IF v_day=8 THEN v_day1:='08';
                IF v_day=9 THEN v_day1:='09';
                IF v_day=10 THEN v_day1:='10';
                IF v_day=11 THEN v_day1:='11';
                IF v_day=12 THEN v_day1:='12';
                IF v_day=13 THEN v_day1:='13';
                IF v_day=14 THEN v_day1:='14';
                IF v_day=15 THEN v_day1:='15';
                IF v_day=16 THEN v_day1:='16';
                IF v_day=17 THEN v_day1:='17';
                IF v_day=18 THEN v_day1:='18';
                IF v_day=19 THEN v_day1:='19';
                IF v_day=20 THEN v_day1:='20';
                IF v_day=21 THEN v_day1:='21';
                IF v_day=22 THEN v_day1:='22';
                IF v_day=23 THEN v_day1:='23';
                IF v_day=24 THEN v_day1:='24';
                IF v_day=25 THEN v_day1:='25';
                IF v_day=26 THEN v_day1:='26';
                IF v_day=27 THEN v_day1:='27';
                IF v_day=28 THEN v_day1:='28';
                IF v_day=29 THEN v_day1:='29';
                IF v_day=30 THEN v_day1:='30';
                IF v_day=31 THEN v_day1:='31';

                IF v_month=1 THEN v_month1:='01';
                IF v_month=2 THEN v_month1:='02';
                IF v_month=3 THEN v_month1:='03';
                IF v_month=4 THEN v_month1:='04';
                IF v_month=5 THEN v_month1:='05';
                IF v_month=6 THEN v_month1:='06';
                IF v_month=7 THEN v_month1:='07';
                IF v_month=8 THEN v_month1:='08';
                IF v_month=9 THEN v_month1:='09';
                IF v_month=10 THEN v_month1:='10';
                IF v_month=11 THEN v_month1:='11';
                IF v_month=12 THEN v_month1:='12';

                IF v_year=15 THEN v_year1:='15';
                IF v_year=16 THEN v_year1:='16';
                IF v_year=17 THEN v_year1:='17';
                IF v_year=18 THEN v_year1:='18';
                IF v_year=19 THEN v_year1:='19';
                IF v_year=20 THEN v_year1:='20';
                IF v_year=21 THEN v_year1:='21';

                v_ACL_SP_E:= FORMAT(FORMAT(v_day1) + '/' + FORMAT(v_month1) + '/' + FORMAT(v_year1));
                EnterCell(RowNo,5,v_ACL_SP_E,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                //Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';

                v_ACL_SP_G := PADSTR(vkgk."Bill-to Name",30);
                EnterCell(RowNo,7,v_ACL_SP_G,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_H := PADSTR(vkgk."Bill-to Address",30);
                EnterCell(RowNo,8,v_ACL_SP_H,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_I := PADSTR(vkgk."Bill-to City",30);
                EnterCell(RowNo,9,v_ACL_SP_I,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_J := PADSTR(vkgk."Bill-to County",2);
                EnterCell(RowNo,10,v_ACL_SP_J,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_K := PADSTR(vkgk."Bill-to Post Code",10);
                EnterCell(RowNo,11,v_ACL_SP_K,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_L := PADSTR(vkgk."Bill-to Country/Region Code",2);
                EnterCell(RowNo,12,v_ACL_SP_L,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_M := PADSTR(vkgk."Ship-to Name",30);
                EnterCell(RowNo,13,v_ACL_SP_M,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_N := PADSTR(vkgk."Ship-to Address",30);
                EnterCell(RowNo,14,v_ACL_SP_N,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_O := PADSTR(vkgk."Ship-to City",30);
                EnterCell(RowNo,15,v_ACL_SP_O,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_P := PADSTR(vkgk."Ship-to County",2);
                EnterCell(RowNo,16,v_ACL_SP_P,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Q := PADSTR(vkgk."Ship-to Post Code",10);
                EnterCell(RowNo,17,v_ACL_SP_Q,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_R := PADSTR(vkgk."Ship-to Country/Region Code",2);
                EnterCell(RowNo,18,v_ACL_SP_R,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Y := PADSTR(vkgz."No.",30);
                EnterCell(RowNo,25,v_ACL_SP_Y,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Z := PADSTR(vkgz."No.",30);
                EnterCell(RowNo,26,v_ACL_SP_Z,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AA := PADSTR(vkgz.Description,30);
                EnterCell(RowNo,27,v_ACL_SP_AA,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
                EnterCell(RowNo,28,v_ACL_SP_AB,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AC := Artikelposten.Quantity * (-1);
                EnterCell(RowNo,29,FORMAT(v_ACL_SP_AC),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vkgz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','USD');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST THEN BEGIN
                v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost") * Artikelposten.Quantity * (-1));
                EnterCell(RowNo,30,FORMAT(v_ACL_SP_AD),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              v_ACL_SP_AE := ((vkgz."DC-Preis (MW)" * Artikelposten.Quantity) * (-1));
              EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              // Falls DC-Preis fehlt ****
              IF v_ACL_SP_AE = 0 THEN BEGIN
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Item No.",'%1',vkgz."No.");
                "Ek-Preise".SETFILTER("Currency Code",'%1','');
                "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  v_ACL_SP_AE := (("Ek-Preise"."Direct Unit Cost" * Artikelposten.Quantity) * (-1));
                  EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  END;
              END;

              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vkgz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST THEN BEGIN
                v_ACL_SP_AF := ((("Ek-Preise"."Direct Unit Cost") * Artikelposten.Quantity) * (-1)) - v_ACL_SP_AE;
                EnterCell(RowNo,32,FORMAT(v_ACL_SP_AF),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              quotedaten.RESET;
              quotedaten.SETFILTER("Quotenr.",'%1',vkgz."Quotenr.");
              IF quotedaten.FINDFIRST THEN BEGIN
              IF  quotedaten.Quotepreis <> 0 THEN BEGIN
                v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
                EnterCell(RowNo,33,v_ACL_SP_AG,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
                EnterCell(RowNo,34,v_ACL_SP_AH,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END;

              IF Debitor.GET(vkgz."Sell-to Customer No.") THEN BEGIN
                v_ACL_SP_AI := PADSTR(Debitor.AC_Solutionpartner,30);
                EnterCell(RowNo,35,v_ACL_SP_AI,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              RowNo := RowNo + 1;
            UNTIL vkgz.NEXT = 0;
          END;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
        UNTIL Artikelposten.NEXT = 0;
      END;
      // Ende Gutschriften



      //  Ab hier ACTS ****************************************************************************************
      // Anfang Ums„tze
      Artikelposten.RESET;
      Artikelposten.SETFILTER("Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER("Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      Artikelposten.SETFILTER("Invoiced Quantity",'<>%1',0);
      IF Artikelposten.FIND('-') THEN BEGIN
        RecNo := 1;
        TotalRecNo := Artikelposten.COUNT;
        REPEAT
          v_ACL_SP_A:='';
          v_ACL_SP_B:='';
          v_ACL_SP_C:='';
          v_ACL_SP_D:='';
          v_ACL_SP_E:='';
          v_ACL_SP_F:='';
          v_ACL_SP_G:='';
          v_ACL_SP_H:='';
          v_ACL_SP_I:='';
          v_ACL_SP_J:='';
          v_ACL_SP_K:='';
          v_ACL_SP_L:='';
          v_ACL_SP_M:='';
          v_ACL_SP_N:='';
          v_ACL_SP_O:='';
          v_ACL_SP_P:='';
          v_ACL_SP_Q:='';
          v_ACL_SP_R:='';
          v_ACL_SP_S:='';
          v_ACL_SP_T:='';
          v_ACL_SP_U:='';
          v_ACL_SP_V:='';
          v_ACL_SP_W:='';
          v_ACL_SP_X:='';
          v_ACL_SP_Y:='';
          v_ACL_SP_Z:='';
          v_ACL_SP_AA:='';
          v_ACL_SP_AB:='';
          v_ACL_SP_AC:=0;
          v_ACL_SP_AD:=0;
          v_ACL_SP_AE:=0;
          v_ACL_SP_AF:=0;
          v_ACL_SP_AG:='';
          v_ACL_SP_AH:='';
          v_ACL_SP_AI:='';
          v_day:=0;
          v_month:=0;
          v_year:=0;

          v_day:=DATE2DMY(Artikelposten."Posting Date",1);
          v_month:=DATE2DMY(Artikelposten."Posting Date",2);
          v_year:=DATE2DMY(Artikelposten."Posting Date",3)-2000;

          //tab6507.RESET;
          //tab6507.SETFILTER(tab6507."Item Entry No.",'%1',Artikelposten."Entry No.");
          //IF tab6507.FINDFIRST() THEN BEGIN

          vklz.RESET;
          //vklz.SETFILTER("Document No.",'%1',tab6507."Source ID");
          vklz.SETFILTER("Document No.",'%1',Artikelposten."Document No.");
          //  **********************************************************************************************************************
          vklz.SETFILTER("Manufacturer Code",'%1|%2|%3|%4','57','5710','5720','5730');
          //  ***************************************************************************************************************************
          vklz.SETFILTER(Quantity,'<>%1',0);
          vklz.SETFILTER("No.",'%1',Artikelposten."Item No.");
          vklz.SETFILTER("Item Shpt. Entry No.",'%1',Artikelposten."Entry No.");
          IF vklz.FINDFIRST THEN BEGIN
            REPEAT

              vklk.RESET;
              vklk.SETFILTER("No.",'%1',vklz."Document No.");
              IF vklk.FINDFIRST THEN BEGIN

                v_ACL_SP_B := 'Nico Kossuch';
                EnterCell(RowNo,2,v_ACL_SP_B,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_C := PADSTR(vklk."Sell-to Customer No.",20);
                EnterCell(RowNo,3,v_ACL_SP_C,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_D := PADSTR(vklk."No.",20);
                EnterCell(RowNo,4,v_ACL_SP_D,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                IF v_day=1 THEN v_day1:='01';
                IF v_day=2 THEN v_day1:='02';
                IF v_day=3 THEN v_day1:='03';
                IF v_day=4 THEN v_day1:='04';
                IF v_day=5 THEN v_day1:='05';
                IF v_day=6 THEN v_day1:='06';
                IF v_day=7 THEN v_day1:='07';
                IF v_day=8 THEN v_day1:='08';
                IF v_day=9 THEN v_day1:='09';
                IF v_day=10 THEN v_day1:='10';
                IF v_day=11 THEN v_day1:='11';
                IF v_day=12 THEN v_day1:='12';
                IF v_day=13 THEN v_day1:='13';
                IF v_day=14 THEN v_day1:='14';
                IF v_day=15 THEN v_day1:='15';
                IF v_day=16 THEN v_day1:='16';
                IF v_day=17 THEN v_day1:='17';
                IF v_day=18 THEN v_day1:='18';
                IF v_day=19 THEN v_day1:='19';
                IF v_day=20 THEN v_day1:='20';
                IF v_day=21 THEN v_day1:='21';
                IF v_day=22 THEN v_day1:='22';
                IF v_day=23 THEN v_day1:='23';
                IF v_day=24 THEN v_day1:='24';
                IF v_day=25 THEN v_day1:='25';
                IF v_day=26 THEN v_day1:='26';
                IF v_day=27 THEN v_day1:='27';
                IF v_day=28 THEN v_day1:='28';
                IF v_day=29 THEN v_day1:='29';
                IF v_day=30 THEN v_day1:='30';
                IF v_day=31 THEN v_day1:='31';

                IF v_month=1 THEN v_month1:='01';
                IF v_month=2 THEN v_month1:='02';
                IF v_month=3 THEN v_month1:='03';
                IF v_month=4 THEN v_month1:='04';
                IF v_month=5 THEN v_month1:='05';
                IF v_month=6 THEN v_month1:='06';
                IF v_month=7 THEN v_month1:='07';
                IF v_month=8 THEN v_month1:='08';
                IF v_month=9 THEN v_month1:='09';
                IF v_month=10 THEN v_month1:='10';
                IF v_month=11 THEN v_month1:='11';
                IF v_month=12 THEN v_month1:='12';

                IF v_year=15 THEN v_year1:='15';
                IF v_year=16 THEN v_year1:='16';
                IF v_year=17 THEN v_year1:='17';
                IF v_year=18 THEN v_year1:='18';
                IF v_year=19 THEN v_year1:='19';
                IF v_year=20 THEN v_year1:='20';
                IF v_year=21 THEN v_year1:='21';

                v_ACL_SP_E:= FORMAT(FORMAT(v_day1) + '/' + FORMAT(v_month1) + '/' + FORMAT(v_year1));
                //Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';
                EnterCell(RowNo,5,v_ACL_SP_E,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);

                v_ACL_SP_F := PADSTR(vklk."External Document No.",20);
                EnterCell(RowNo,6,v_ACL_SP_F,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_G :=PADSTR(vklk."Bill-to Name",30);
                EnterCell(RowNo,7,v_ACL_SP_G,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_H := PADSTR(vklk."Bill-to Address",30);
                EnterCell(RowNo,8,v_ACL_SP_H,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_I := PADSTR(vklk."Bill-to City",30);
                EnterCell(RowNo,9,v_ACL_SP_I,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_J := PADSTR(vklk."Bill-to County",2);
                EnterCell(RowNo,10,v_ACL_SP_J,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_K := PADSTR(vklk."Bill-to Post Code",10);
                EnterCell(RowNo,11,v_ACL_SP_K,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_L := PADSTR(vklk."Bill-to Country/Region Code",2);
                EnterCell(RowNo,12,v_ACL_SP_L,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_M := PADSTR(vklk."Ship-to Name",30);
                EnterCell(RowNo,13,v_ACL_SP_M,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_N := PADSTR(vklk."Ship-to Address",30);
                EnterCell(RowNo,14,v_ACL_SP_N,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_O := PADSTR(vklk."Ship-to City",30);
                EnterCell(RowNo,15,v_ACL_SP_O,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_P := PADSTR(vklk."Ship-to County",2);
                EnterCell(RowNo,16,v_ACL_SP_P,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Q := PADSTR(vklk."Ship-to Post Code",10);
                EnterCell(RowNo,17,v_ACL_SP_Q,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_R := PADSTR(vklk."Ship-to Country/Region Code",2);
                EnterCell(RowNo,18,v_ACL_SP_R,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_S := PADSTR(vklk.Endkunde,30);
                EnterCell(RowNo,19,v_ACL_SP_S,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_T := PADSTR(vklk."Endkunde Adresse",30);
                EnterCell(RowNo,20,v_ACL_SP_T,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_U := PADSTR(vklk."Endkunde Ort",30);
                EnterCell(RowNo,21,v_ACL_SP_U,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_W := PADSTR(vklk."Endkunde PLZ-Code",10);
                EnterCell(RowNo,23,v_ACL_SP_W,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_X := PADSTR(vklk."Endkunde Land",2);
                EnterCell(RowNo,24,v_ACL_SP_X,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Y := PADSTR(vklz."No.",30);
                EnterCell(RowNo,25,v_ACL_SP_Y,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Z := PADSTR(vklz."No.",30);
                EnterCell(RowNo,26,v_ACL_SP_Z,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AA := PADSTR(vklz.Description,30);
                EnterCell(RowNo,27,v_ACL_SP_AA,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
                EnterCell(RowNo,28,v_ACL_SP_AB,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
                EnterCell(RowNo,29,FORMAT(v_ACL_SP_AC),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              //  **************************************  EK aus Preisliste  ******************************
              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST THEN BEGIN
                v_ACL_SP_AD := ("Ek-Preise"."Direct Unit Cost" * ((Artikelposten.Quantity) * (-1)));
                EnterCell(RowNo,30,FORMAT(v_ACL_SP_AD),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              v_ACL_SP_AE := ((vklz."DC-Preis (MW)" * Artikelposten.Quantity) * (-1));
              EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);

              // Falls DC-Preis fehlt **** *************************************
              IF v_ACL_SP_AE = 0 THEN BEGIN
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
                "Ek-Preise".SETFILTER("Currency Code",'%1','');
                "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  v_ACL_SP_AE := ("Ek-Preise"."Direct Unit Cost" * Artikelposten.Quantity) * (-1);
                  EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;
              END;

              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST THEN BEGIN
                v_ACL_SP_AF := (("Ek-Preise"."Direct Unit Cost") * (Artikelposten.Quantity) * (-1)) - v_ACL_SP_AE;
                EnterCell(RowNo,32,FORMAT(v_ACL_SP_AF),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              quotedaten.RESET;
              quotedaten.SETFILTER("Quotenr.",'%1',vklz."Quotenr.");
              IF quotedaten.FINDFIRST THEN BEGIN
                v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
                EnterCell(RowNo,33,v_ACL_SP_AG,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
                EnterCell(RowNo,34,v_ACL_SP_AH,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              IF Debitor.GET(vklz."Sell-to Customer No.") THEN BEGIN
                v_ACL_SP_AI := Debitor.AC_Solutionpartner;
                EnterCell(RowNo,35,v_ACL_SP_AI,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              RowNo := RowNo + 1;
            UNTIL vklz.NEXT = 0;
          END;
          //END;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
        UNTIL Artikelposten.NEXT = 0;
      END;
      //  Ende Ums„tze


      // Anfang Gutschriften
      Artikelposten.RESET;
      Artikelposten.SETFILTER("Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER("Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      IF Artikelposten.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := Artikelposten.COUNT;
        REPEAT
          v_ACL_SP_A:='';
          v_ACL_SP_B:='';
          v_ACL_SP_C:='';
          v_ACL_SP_D:='';
          v_ACL_SP_E:='';
          v_ACL_SP_F:='';
          v_ACL_SP_G:='';
          v_ACL_SP_H:='';
          v_ACL_SP_I:='';
          v_ACL_SP_J:='';
          v_ACL_SP_K:='';
          v_ACL_SP_L:='';
          v_ACL_SP_M:='';
          v_ACL_SP_N:='';
          v_ACL_SP_O:='';
          v_ACL_SP_P:='';
          v_ACL_SP_Q:='';
          v_ACL_SP_R:='';
          v_ACL_SP_S:='';
          v_ACL_SP_T:='';
          v_ACL_SP_U:='';
          v_ACL_SP_V:='';
          v_ACL_SP_W:='';
          v_ACL_SP_X:='';
          v_ACL_SP_Y:='';
          v_ACL_SP_Z:='';
          v_ACL_SP_AA:='';
          v_ACL_SP_AB:='';
          v_ACL_SP_AC:=0;
          v_ACL_SP_AD:=0;
          v_ACL_SP_AE:=0;
          v_ACL_SP_AF:=0;
          v_ACL_SP_AG:='';
          v_ACL_SP_AH:='';
          v_ACL_SP_AI:='';
          v_day:=0;
          v_month:=0;
          v_year:=0;

          vkgz.RESET;
          vkgz.SETFILTER("Document No.",'%1',Artikelposten."Document No.");
          vkgz.SETFILTER("Manufacturer Code",'%1|%2|%3|%4','57','5710','5720','5730');
          vkgz.SETFILTER(Quantity,'<>%1',0);
          vkgz.SETFILTER("No.",'%1',Artikelposten."Item No.");
          IF vkgz.FINDFIRST THEN BEGIN
            REPEAT

              vkgk.RESET;
              vkgk.SETFILTER("No.",'%1',vkgz."Document No.");
              IF vkgk.FINDFIRST THEN BEGIN
                v_ACL_SP_B := 'Nico Kossuch';
                EnterCell(RowNo,2,v_ACL_SP_B,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_C := PADSTR(vkgk."Sell-to Customer No.",20);
                EnterCell(RowNo,3,v_ACL_SP_C,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_D := PADSTR(vkgk."No.",20);
                EnterCell(RowNo,4,v_ACL_SP_D,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_day:=DATE2DMY(vkgk."Posting Date",1);
                v_month:=DATE2DMY(vkgk."Posting Date",2);
                v_year:=DATE2DMY(vkgk."Posting Date",3)-2000;

                IF v_day=1 THEN v_day1:='01';
                IF v_day=2 THEN v_day1:='02';
                IF v_day=3 THEN v_day1:='03';
                IF v_day=4 THEN v_day1:='04';
                IF v_day=5 THEN v_day1:='05';
                IF v_day=6 THEN v_day1:='06';
                IF v_day=7 THEN v_day1:='07';
                IF v_day=8 THEN v_day1:='08';
                IF v_day=9 THEN v_day1:='09';
                IF v_day=10 THEN v_day1:='10';
                IF v_day=11 THEN v_day1:='11';
                IF v_day=12 THEN v_day1:='12';
                IF v_day=13 THEN v_day1:='13';
                IF v_day=14 THEN v_day1:='14';
                IF v_day=15 THEN v_day1:='15';
                IF v_day=16 THEN v_day1:='16';
                IF v_day=17 THEN v_day1:='17';
                IF v_day=18 THEN v_day1:='18';
                IF v_day=19 THEN v_day1:='19';
                IF v_day=20 THEN v_day1:='20';
                IF v_day=21 THEN v_day1:='21';
                IF v_day=22 THEN v_day1:='22';
                IF v_day=23 THEN v_day1:='23';
                IF v_day=24 THEN v_day1:='24';
                IF v_day=25 THEN v_day1:='25';
                IF v_day=26 THEN v_day1:='26';
                IF v_day=27 THEN v_day1:='27';
                IF v_day=28 THEN v_day1:='28';
                IF v_day=29 THEN v_day1:='29';
                IF v_day=30 THEN v_day1:='30';
                IF v_day=31 THEN v_day1:='31';

                IF v_month=1 THEN v_month1:='01';
                IF v_month=2 THEN v_month1:='02';
                IF v_month=3 THEN v_month1:='03';
                IF v_month=4 THEN v_month1:='04';
                IF v_month=5 THEN v_month1:='05';
                IF v_month=6 THEN v_month1:='06';
                IF v_month=7 THEN v_month1:='07';
                IF v_month=8 THEN v_month1:='08';
                IF v_month=9 THEN v_month1:='09';
                IF v_month=10 THEN v_month1:='10';
                IF v_month=11 THEN v_month1:='11';
                IF v_month=12 THEN v_month1:='12';

                IF v_year=15 THEN v_year1:='15';
                IF v_year=16 THEN v_year1:='16';
                IF v_year=17 THEN v_year1:='17';
                IF v_year=18 THEN v_year1:='18';
                IF v_year=19 THEN v_year1:='19';
                IF v_year=20 THEN v_year1:='20';
                IF v_year=21 THEN v_year1:='21';

                v_ACL_SP_E:= FORMAT(FORMAT(v_day1) + '/' + FORMAT(v_month1) + '/' + FORMAT(v_year1));
                //Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';
                EnterCell(RowNo,5,v_ACL_SP_E,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);

                v_ACL_SP_G := PADSTR(vkgk."Bill-to Name",30);
                EnterCell(RowNo,7,v_ACL_SP_G,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_H := PADSTR(vkgk."Bill-to Address",30);
                EnterCell(RowNo,8,v_ACL_SP_H,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_I := PADSTR(vkgk."Bill-to City",30);
                EnterCell(RowNo,9,v_ACL_SP_I,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_J := PADSTR(vkgk."Bill-to County",2);
                EnterCell(RowNo,10,v_ACL_SP_J,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_K := PADSTR(vkgk."Bill-to Post Code",10);
                EnterCell(RowNo,11,v_ACL_SP_K,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_L := PADSTR(vkgk."Bill-to Country/Region Code",2);
                EnterCell(RowNo,12,v_ACL_SP_L,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_M := PADSTR(vkgk."Ship-to Name",30);
                EnterCell(RowNo,13,v_ACL_SP_M,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_N := PADSTR(vkgk."Ship-to Address",30);
                EnterCell(RowNo,14,v_ACL_SP_N,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_O := PADSTR(vkgk."Ship-to City",30);
                EnterCell(RowNo,15,v_ACL_SP_O,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_P := PADSTR(vkgk."Ship-to County",2);
                EnterCell(RowNo,16,v_ACL_SP_P,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Q := PADSTR(vkgk."Ship-to Post Code",10);
                EnterCell(RowNo,17,v_ACL_SP_Q,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_R := PADSTR(vkgk."Ship-to Country/Region Code",2);
                EnterCell(RowNo,18,v_ACL_SP_R,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Y := PADSTR(vkgz."No.",30);
                EnterCell(RowNo,25,v_ACL_SP_Y,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Z := PADSTR(vkgz."No.",30);
                EnterCell(RowNo,26,v_ACL_SP_Z,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AA := PADSTR(vkgz.Description,30);
                EnterCell(RowNo,27,v_ACL_SP_AA,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
                EnterCell(RowNo,28,v_ACL_SP_AB,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
                EnterCell(RowNo,29,FORMAT(v_ACL_SP_AC),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;

                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Item No.",'%1',vkgz."No.");
                "Ek-Preise".SETFILTER("Currency Code",'%1','USD');
                "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  v_ACL_SP_AD := ("Ek-Preise"."Direct Unit Cost") * Artikelposten.Quantity * (-1);
                  EnterCell(RowNo,30,FORMAT(v_ACL_SP_AD),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;

                v_ACL_SP_AE := (vkgz."DC-Preis (MW)" * Artikelposten.Quantity) * (-1);
                EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                // Falls DC-Preis fehlt ****
                IF v_ACL_SP_AE = 0 THEN BEGIN
                  "Ek-Preise".RESET;
                  "Ek-Preise".SETFILTER("Item No.",'%1',vkgz."No.");
                  "Ek-Preise".SETFILTER("Currency Code",'%1','');
                  "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                  IF "Ek-Preise".FINDFIRST THEN BEGIN
                    v_ACL_SP_AE := ("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity) * (-1);
                    EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                    END;
                END;

                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Item No.",'%1',vkgz."No.");
                "Ek-Preise".SETFILTER("Currency Code",'%1','');
                "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  v_ACL_SP_AF := ((("Ek-Preise"."Direct Unit Cost")*Artikelposten.Quantity) * (-1)) - v_ACL_SP_AE;
                  EnterCell(RowNo,32,FORMAT(v_ACL_SP_AF),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;

                quotedaten.RESET;
                quotedaten.SETFILTER("Quotenr.",'%1',vkgz."Quotenr.");
                IF quotedaten.FINDFIRST THEN BEGIN
                  IF  quotedaten.Quotepreis <> 0 THEN BEGIN
                    v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
                    EnterCell(RowNo,33,v_ACL_SP_AG,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
                    EnterCell(RowNo,34,v_ACL_SP_AH,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  END;
                END;

                IF Debitor.GET(vkgz."Sell-to Customer No.") THEN BEGIN
                  v_ACL_SP_AI := PADSTR(Debitor.AC_Solutionpartner,30);
                  EnterCell(RowNo,35,v_ACL_SP_AI,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;

                RowNo := RowNo + 1;
              UNTIL vkgz.NEXT = 0;
          END;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
        UNTIL Artikelposten.NEXT = 0;
      END;
      // Ende Gutschriften

      CREATE(wshFile,FALSE,TRUE);
      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_POS_lfd.xlsx');
      CLEAR(wshFile);

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,'AudioCodes');
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2','AudioCodes',''),30),COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          //TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          TempExcelBuffer.OpenExcelWithoutAutoFit('AudioCodes','ACS_TOPAS_POS_lfd' + ExcelFileExtensionTok,NewFileDirectory,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    PROCEDURE ACL@1140000();
    BEGIN
      v_Total_Sum := 0;
      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('A1:G1').Interior.Color := '14136213';
      Sheet.Range('A1:G1').Font.Bold := TRUE;

      //Sheet.Range('A1:G1').Borders.Item(2).LineStyle(1);
      //Sheet.Range('A1:O1').Borders.Item(4).LineStyle(1);

      Sheet.Range('E:F').NumberFormat:='#.##0,00';
      Sheet.Range('G:G').NumberFormat:='#.##0,00';

      Sheet.Range('A1').Value := 'Shipping Date';
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'ACL Product';
      Sheet.Range('D1').Value := 'Qty Shipped';
      Sheet.Range('E1').Value := 'Resale Unit Price';
      Sheet.Range('F1').Value := 'Currency';
      Sheet.Range('G1').Value := 'Total EUR';

      j := '2';

      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','58');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FINDFIRST() THEN BEGIN
            REPEAT

              v_day:=0;
              v_month:=0;
              v_year:=0;

              v_day:=DATE2DMY(vkrk."Posting Date",1);
              v_month:=DATE2DMY(vkrk."Posting Date",2);
              v_year:=DATE2DMY(vkrk."Posting Date",3)-2000;

              IF v_day=1 THEN v_day1:='01';
              IF v_day=2 THEN v_day1:='02';
              IF v_day=3 THEN v_day1:='03';
              IF v_day=4 THEN v_day1:='04';
              IF v_day=5 THEN v_day1:='05';
              IF v_day=6 THEN v_day1:='06';
              IF v_day=7 THEN v_day1:='07';
              IF v_day=8 THEN v_day1:='08';
              IF v_day=9 THEN v_day1:='09';
              IF v_day=10 THEN v_day1:='10';
              IF v_day=11 THEN v_day1:='11';
              IF v_day=12 THEN v_day1:='12';
              IF v_day=13 THEN v_day1:='13';
              IF v_day=14 THEN v_day1:='14';
              IF v_day=15 THEN v_day1:='15';
              IF v_day=16 THEN v_day1:='16';
              IF v_day=17 THEN v_day1:='17';
              IF v_day=18 THEN v_day1:='18';
              IF v_day=19 THEN v_day1:='19';
              IF v_day=20 THEN v_day1:='20';
              IF v_day=21 THEN v_day1:='21';
              IF v_day=22 THEN v_day1:='22';
              IF v_day=23 THEN v_day1:='23';
              IF v_day=24 THEN v_day1:='24';
              IF v_day=25 THEN v_day1:='25';
              IF v_day=26 THEN v_day1:='26';
              IF v_day=27 THEN v_day1:='27';
              IF v_day=28 THEN v_day1:='28';
              IF v_day=29 THEN v_day1:='29';
              IF v_day=30 THEN v_day1:='30';
              IF v_day=31 THEN v_day1:='31';

              IF v_month=1 THEN v_month1:='01';
              IF v_month=2 THEN v_month1:='02';
              IF v_month=3 THEN v_month1:='03';
              IF v_month=4 THEN v_month1:='04';
              IF v_month=5 THEN v_month1:='05';
              IF v_month=6 THEN v_month1:='06';
              IF v_month=7 THEN v_month1:='07';
              IF v_month=8 THEN v_month1:='08';
              IF v_month=9 THEN v_month1:='09';
              IF v_month=10 THEN v_month1:='10';
              IF v_month=11 THEN v_month1:='11';
              IF v_month=12 THEN v_month1:='12';
              IF v_year=15 THEN v_year1:='15';
              IF v_year=16 THEN v_year1:='16';
              IF v_year=17 THEN v_year1:='17';
              IF v_year=18 THEN v_year1:='18';
              IF v_year=19 THEN v_year1:='19';
              IF v_year=20 THEN v_year1:='20';
              IF v_year=21 THEN v_year1:='21';

              v_ACL_SP_E := FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
              Sheet.Range('A'+j).Value := FORMAT(v_ACL_SP_E);
              Sheet.Range('A'+j).NumberFormat := 'TT/MM/JJ';
              Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkrz."No.";
              Sheet.Range('D'+j).Value := FORMAT(vkrz.Quantity);
              Sheet.Range('E'+j).Value := FORMAT(vkrz."Unit Price");
              IF vkrk."Currency Code" = '' THEN BEGIN
                Sheet.Range('F'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('F'+j).Value := vkrk."Currency Code";
              END;
              Sheet.Range('G'+j).Value := FORMAT(vkrz."VK-Preis (MW)"*vkrz.Quantity);
              v_Total_Sum := v_Total_Sum+(vkrz."VK-Preis (MW)"*vkrz.Quantity);
              j := INCSTR (j);
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;
          //  Ende Ums„tze


      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','58');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FINDFIRST() THEN BEGIN
            REPEAT

              v_day:=0;
              v_month:=0;
              v_year:=0;

              v_day:=DATE2DMY(vkgk."Posting Date",1);
              v_month:=DATE2DMY(vkgk."Posting Date",2);
              v_year:=DATE2DMY(vkgk."Posting Date",3)-2000;

              IF v_day=1 THEN v_day1:='01';
              IF v_day=2 THEN v_day1:='02';
              IF v_day=3 THEN v_day1:='03';
              IF v_day=4 THEN v_day1:='04';
              IF v_day=5 THEN v_day1:='05';
              IF v_day=6 THEN v_day1:='06';
              IF v_day=7 THEN v_day1:='07';
              IF v_day=8 THEN v_day1:='08';
              IF v_day=9 THEN v_day1:='09';
              IF v_day=10 THEN v_day1:='10';
              IF v_day=11 THEN v_day1:='11';
              IF v_day=12 THEN v_day1:='12';
              IF v_day=13 THEN v_day1:='13';
              IF v_day=14 THEN v_day1:='14';
              IF v_day=15 THEN v_day1:='15';
              IF v_day=16 THEN v_day1:='16';
              IF v_day=17 THEN v_day1:='17';
              IF v_day=18 THEN v_day1:='18';
              IF v_day=19 THEN v_day1:='19';
              IF v_day=20 THEN v_day1:='20';
              IF v_day=21 THEN v_day1:='21';
              IF v_day=22 THEN v_day1:='22';
              IF v_day=23 THEN v_day1:='23';
              IF v_day=24 THEN v_day1:='24';
              IF v_day=25 THEN v_day1:='25';
              IF v_day=26 THEN v_day1:='26';
              IF v_day=27 THEN v_day1:='27';
              IF v_day=28 THEN v_day1:='28';
              IF v_day=29 THEN v_day1:='29';
              IF v_day=30 THEN v_day1:='30';
              IF v_day=31 THEN v_day1:='31';

              IF v_month=1 THEN v_month1:='01';
              IF v_month=2 THEN v_month1:='02';
              IF v_month=3 THEN v_month1:='03';
              IF v_month=4 THEN v_month1:='04';
              IF v_month=5 THEN v_month1:='05';
              IF v_month=6 THEN v_month1:='06';
              IF v_month=7 THEN v_month1:='07';
              IF v_month=8 THEN v_month1:='08';
              IF v_month=9 THEN v_month1:='09';
              IF v_month=10 THEN v_month1:='10';
              IF v_month=11 THEN v_month1:='11';
              IF v_month=12 THEN v_month1:='12';
              IF v_year=15 THEN v_year1:='15';
              IF v_year=16 THEN v_year1:='16';
              IF v_year=17 THEN v_year1:='17';
              IF v_year=18 THEN v_year1:='18';
              IF v_year=19 THEN v_year1:='19';
              IF v_year=20 THEN v_year1:='20';
              IF v_year=21 THEN v_year1:='21';

              v_ACL_SP_E:= (FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
              Sheet.Range('A'+j).Value := (v_ACL_SP_E);
              Sheet.Range('A'+j).NumberFormat := 'TT/MM/JJ';
              Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkgz."No.";
              Sheet.Range('D'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              Sheet.Range('E'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
              IF vkgk."Currency Code" = '' THEN BEGIN
                Sheet.Range('F'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('F'+j).Value := vkgk."Currency Code";
              END;
              Sheet.Range('G'+j).Value := FORMAT((vkgz."VK-Preis (MW)"*vkgz.Quantity)*(-1));
              v_Total_Sum := v_Total_Sum+((vkrz."VK-Preis (MW)"*vkrz.Quantity)*(-1));
              j := INCSTR (j);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('G'+j).Value := v_Total_Sum;

      j := INCSTR (j);
      j := INCSTR (j);
      Sheet.Range('C'+j).Value := 'Stock Information';
      Sheet.Range('C'+j).Font.Bold := TRUE;
      Sheet.Range('E'+j).Value :='Qty allocated to Customer';
      Sheet.Range('E'+j).Font.Bold := TRUE;
      Sheet.Range('F'+j).Value :='Customer Name';
      Sheet.Range('F'+j).Font.Bold := TRUE;
      Sheet.Range('G'+j).Value :='Free Stock';
      Sheet.Range('G'+j).Font.Bold := TRUE;
      //j := INCSTR (j);
      //  Suchen aller Artikel mit Lagerbestand ungleich Null nur fr ACL
      //  ******************************************************************************
      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1','58');
      IF Artikel.FINDFIRST THEN BEGIN
        v_aubestand := 0;
        v_au_name := '';
        v_lagerbestand := 0;
        REPEAT
          Artikelposten.RESET;
          Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
          //Artikelposten.SETFILTER(Artikelposten."Item No.",'%1','AC48204AE3-CBL');
          Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
          Artikelposten.SETFILTER(Artikelposten."Location Code",'%1|%2','ZENT','KONSI');
          IF Artikelposten.FIND('-') THEN BEGIN
            //IF Artikelposten.FINDFIRST THEN BEGIN

            v_aubestand:=0;
            v_au_name:='';
            v_lagerbestand:=0;
            v_au_debnr:='0';
            REPEAT
              v_lagerbestand := v_lagerbestand+Artikelposten."Remaining Quantity";
            UNTIL Artikelposten.NEXT = 0;
            j := INCSTR (j);
            Sheet.Range('C'+j).Value := Artikel."No.";
          //END;
            Sheet.Range('D'+j).Value := v_lagerbestand;

            vkz.RESET;
            vkz.SETFILTER(vkz."No.",'%1',Artikel."No.");
            vkz.SETFILTER(vkz."Document Type",'%1',vkz."Document Type"::Order);
            vkz.SETFILTER(vkz."Outstanding Quantity",'>%1',0);
            vkz.SETFILTER(vkz."Location Code",'%1|%2','ZENT','KONSI');
            IF vkz.FIND('-') THEN BEGIN
              //IF vkz.FINDFIRST THEN BEGIN
              REPEAT
                v_aubestand := v_aubestand + vkz."Outstanding Quantity";
                IF v_au_debnr = vkz."Sell-to Customer No." THEN BEGIN
                  END ELSE BEGIN
                    IF v_au_debnr = '0' THEN BEGIN
                      v_au_name := vkz.Endkunde;
                  END ELSE BEGIN
                    v_au_name := v_au_name + '/' + vkz.Endkunde;
                  END;
                END;
                v_au_debnr := vkz."Sell-to Customer No.";
              UNTIL vkz.NEXT = 0;
            END;
              Sheet.Range('E'+j).Value := FORMAT(v_aubestand);
              Sheet.Range('E'+j).NumberFormat:= '###.###';
              Sheet.Range('F'+j).Value := FORMAT(v_au_name);
              Sheet.Range('G'+j).Value :='=WENN(D21>E21;D21-E21;0)'
          END;
        UNTIL Artikel.NEXT=0;

      END;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACL_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACL_TOPAS_POS_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACL_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE GSI@1140002();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','54');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FINDFIRST() THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
              Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkrk."No.";
              Sheet.Range('D'+j).Value := vkrz."No.";
              Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
              v_herstell_VK_Preis := 0;

              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkrz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
                IF quotedaten."Hersteller-VK-Preis" < vkrz."VK-Preis (EKW)" THEN BEGIN
              //   Sheet.Range('M'+j).Value := quotedaten."Hersteller-VK-Preis";
              //   Sheet.Range('N'+j).Value := 'USD';
                  v_herstell_VK_Preis := quotedaten."Hersteller-VK-Preis";
                END;
                END;
              END;


              IF v_herstell_VK_Preis = 0 THEN BEGIN
                Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
              END ELSE BEGIN
                Sheet.Range('F'+j).Value := FORMAT(v_herstell_VK_Preis);
              END;

              IF vkrk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkrk."Currency Code";
              END;

              IF vkrk."Currency Factor"<>0 THEN BEGIN
                IF v_herstell_VK_Preis = 0 THEN BEGIN
                  Sheet.Range('H'+j).Value := ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
                  v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
                END ELSE BEGIN
                  Sheet.Range('H'+j).Value := ((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor"));
                  v_Total_Sum:=v_Total_Sum+ ((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor"));
                END;
              END ELSE BEGIN
                IF v_herstell_VK_Preis = 0 THEN BEGIN
                  Sheet.Range('H'+j).Value := (vkrz."Unit Price") * (vkrz.Quantity);
                  v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
                END ELSE BEGIN
                  Sheet.Range('H'+j).Value := (v_herstell_VK_Preis) * (vkrz.Quantity);
                  v_Total_Sum := v_Total_Sum + ((v_herstell_VK_Preis) * (vkrz.Quantity));
                END;
              END;

              Sheet.Range('I'+j).Value := vkrk."Posting Date";

              j := INCSTR (j);
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','54');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FINDFIRST() THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
              Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkgk."No.";
              Sheet.Range('D'+j).Value := vkgz."No.";
              Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
              IF vkgk."Currency Code"='' THEN BEGIN
              Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
              Sheet.Range('G'+j).Value := vkgk."Currency Code";
              END;
              IF vkgk."Currency Factor"<>0 THEN
              BEGIN
              Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              v_Total_Sum := v_Total_Sum + ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkgz.Amount) * (-1);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount) * (-1));
              END;

              //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
              Sheet.Range('I'+j).Value := vkgk."Posting Date";
              j := INCSTR (j);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GSI_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GSI_TOPAS_POS_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GSI_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE XMO@1140031();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);


      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
      REPEAT
      vkrz.RESET;
      vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
      vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','04');
      vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
      vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkrz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkrk."No.";
      Sheet.Range('D'+j).Value := vkrz."No.";
      Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
      Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
      IF vkrk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkrk."Currency Code";
      END;
      IF vkrk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
      v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkrz.Amount);
      v_Total_Sum:=v_Total_Sum+(vkrz.Amount);
      END;
      //Sheet.Range('H'+j).Value := Format(vkrz."Unit Price"* vkrz.Quantity);
      Sheet.Range('I'+j).Value := vkrk."Posting Date";
      j := INCSTR (j);
      UNTIL vkrz.NEXT=0;
      END;
      UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
      REPEAT
      vkgz.RESET;
      vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
      vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','04');
      vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
      vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkgz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertribs-GmbH';
      Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkgk."No.";
      Sheet.Range('D'+j).Value := vkgz."No.";
      Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
      Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
      IF vkgk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkgk."Currency Code";
      END;
      IF vkgk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
      END;

      //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
      Sheet.Range('I'+j).Value := vkgk."Posting Date";
      j := INCSTR (j);
      UNTIL vkgz.NEXT=0;
      END;
      UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\XMOS_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\XMOS_TOPAS_POS_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\XMOS_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE RIC@1140005();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
      REPEAT
      vkrz.RESET;
      vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
      vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','40');
      vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
      vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkrz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkrk."No.";
      Sheet.Range('D'+j).Value := vkrz."No.";
      Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
      Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
      IF vkrk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkrk."Currency Code";
      END;
      IF vkrk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
      v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkrz.Amount);
      v_Total_Sum:=v_Total_Sum+(vkrz.Amount);
      END;
      //Sheet.Range('H'+j).Value := Format(vkrz."Unit Price"* vkrz.Quantity);
      Sheet.Range('I'+j).Value := vkrk."Posting Date";
      j := INCSTR (j);
      UNTIL vkrz.NEXT=0;
      END;
      UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
      REPEAT
      vkgz.RESET;
      vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
      vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','40');
      vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
      vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkgz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkgk."No.";
      Sheet.Range('D'+j).Value := vkgz."No.";
      Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
      Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
      IF vkgk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkgk."Currency Code";
      END;
      IF vkgk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
      END;

      //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
      Sheet.Range('I'+j).Value := vkgk."Posting Date";
      j := INCSTR (j);
      UNTIL vkgz.NEXT=0;
      END;
      UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\RIC_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\RIC_TOPAS_POS_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\RIC_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE GAIN@1140004();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
      REPEAT
      vkrz.RESET;
      vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
      vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','08');
      vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
      vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkrz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkrk."No.";
      Sheet.Range('D'+j).Value := vkrz."No.";
      Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
      Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
      IF vkrk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkrk."Currency Code";
      END;
      IF vkrk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
      v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkrz.Amount);
      v_Total_Sum:=v_Total_Sum+(vkrz.Amount);
      END;
      //Sheet.Range('H'+j).Value := Format(vkrz."Unit Price"* vkrz.Quantity);
      Sheet.Range('I'+j).Value := vkrk."Posting Date";
      j := INCSTR (j);
      UNTIL vkrz.NEXT=0;
      END;
      UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
      REPEAT
      vkgz.RESET;
      vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
      vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','08');
      vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
      vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkgz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkgk."No.";
      Sheet.Range('D'+j).Value := vkgz."No.";
      Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
      Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
      IF vkgk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkgk."Currency Code";
      END;
      IF vkgk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
      END;

      //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
      Sheet.Range('I'+j).Value := vkgk."Posting Date";
      j := INCSTR (j);
      UNTIL vkgz.NEXT=0;
      END;
      UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GAIN_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GAIN_TOPAS_POS_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GAIN_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE FOX@1140009();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('J:J').NumberFormat:='###.###,00';
      Sheet.Range('L:L').NumberFormat:='###.###,00';
      Sheet.Range('M:M').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Cust City';
      Sheet.Range('D1').Value := 'Cust State';
      Sheet.Range('E1').Value := 'Cust Zip';
      Sheet.Range('F1').Value := 'Cust Country';
      Sheet.Range('G1').Value := 'Disti Invoice #';
      Sheet.Range('H1').Value := 'Part Number';
      Sheet.Range('I1').Value := 'Qty Sold';
      Sheet.Range('J1').Value := 'Resale';
      Sheet.Range('K1').Value := 'Currency';
      Sheet.Range('L1').Value := 'Total Resale EUR';
      Sheet.Range('M1').Value := 'Cost USD';
      Sheet.Range('N1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
      REPEAT
      vkrz.RESET;
      vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
      vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','14');
      vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
      vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkrz.FINDFIRST() THEN BEGIN
      REPEAT
      v_Total_sum1:=0;
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkrk."Sell-to City";
      Sheet.Range('D'+j).Value := vkrk."Sell-to Country/Region Code";
      Sheet.Range('E'+j).Value := vkrk."Sell-to Post Code";
      Sheet.Range('F'+j).Value := vkrk."Sell-to County";
      Sheet.Range('G'+j).Value := vkrk."No.";
      Sheet.Range('H'+j).Value := vkrz."No.";
      Sheet.Range('I'+j).Value := FORMAT(vkrz.Quantity);
      Sheet.Range('J'+j).Value := FORMAT(vkrz."Unit Price");
      IF vkrk."Currency Code"='' THEN BEGIN
      Sheet.Range('K'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('K'+j).Value := vkrk."Currency Code";
      END;
      IF vkrk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('L'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
      v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
      END ELSE
      BEGIN
      //v_Total_sum1:=(vkrz.Amount)*(-1);
      Sheet.Range('L'+j).Value :=FORMAT(vkrz.Amount);
      v_Total_Sum:=v_Total_Sum+(vkrz.Amount);
      END;
      //Sheet.Range('L'+j).Value := Format(vkrz."Unit Price"* vkrz.Quantity);
      //Sheet.Range('M'+j).Value := Format(vkrz."DC-Preis (W„hrung)");
      Sheet.Range('M'+j).Value := FORMAT(vkrz."DC-Preis (EKW)");
      Sheet.Range('N'+j).Value := vkrk."Posting Date";


      j := INCSTR (j);
      UNTIL vkrz.NEXT=0;
      END;
      UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
      REPEAT
      vkgz.RESET;
      vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
      vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','14');
      vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
      vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkgz.FINDFIRST() THEN BEGIN
      REPEAT
      v_Total_sum1:=0;
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkgk."Sell-to City";
      Sheet.Range('D'+j).Value := vkgk."Sell-to Country/Region Code";
      Sheet.Range('E'+j).Value := vkgk."Sell-to Post Code";
      Sheet.Range('F'+j).Value := vkgk."Sell-to County";
      Sheet.Range('G'+j).Value := vkgk."No.";
      Sheet.Range('H'+j).Value := vkgz."No.";
      Sheet.Range('I'+j).Value := FORMAT((vkgz.Quantity)*(-1));
      Sheet.Range('J'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
      IF vkgk."Currency Code"='' THEN BEGIN
      Sheet.Range('K'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('K'+j).Value := vkgk."Currency Code";
      END;
      IF vkgk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('L'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      END ELSE
      BEGIN
      v_Total_sum1:=(vkgz.Amount)*(-1);
      Sheet.Range('L'+j).Value := FORMAT(v_Total_sum1);
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
      END;

      //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
      //Sheet.Range('M'+j).Value := Format(vkgz."DC-Preis (W„hrung)");
      Sheet.Range('M'+j).Value := FORMAT(vkgz."DC-Preis (EKW)");
      Sheet.Range('N'+j).Value := vkgk."Posting Date";
      j := INCSTR (j);
      UNTIL vkgz.NEXT=0;
      END;
      UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\FOX_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\FOX_TOPAS_POS_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\FOX_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE HALO@1140001();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';
      Sheet.Range('J:J').NumberFormat:='###.###,00';
      Sheet.Range('K:K').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';
      Sheet.Range('J1').Value := 'Total Cost USD';
      Sheet.Range('K1').Value := 'Total Resale USD';
      Sheet.Range('L1').Value := 'Country';
      Sheet.Range('M1').Value := 'City';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
      REPEAT
      vkrz.RESET;
      vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
      vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','78');
      vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
      vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkrz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkrk."No.";
      Sheet.Range('D'+j).Value := vkrz."No.";
      Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
      Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
      IF vkrk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkrk."Currency Code";
      END;
      IF vkrk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
      v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
      Sheet.Range('K'+j).Value := FORMAT(vkrz.Amount);
      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkrz.Amount);
      v_Total_Sum:=v_Total_Sum+(vkrz.Amount);

      w„kurs.RESET;
      w„kurs.SETFILTER(w„kurs."Currency Code",'%1','USD');
      w„kurs.SETFILTER(w„kurs."Starting Date",'%1',vkrk."Posting Date");
      IF w„kurs.FINDFIRST() THEN BEGIN
      Sheet.Range('K'+j).Value := FORMAT((vkrz.Amount)*(w„kurs."Exchange Rate Amount"));
      END;
      END;
      //Sheet.Range('H'+j).Value := Format(vkrz."Unit Price"* vkrz.Quantity);
      Sheet.Range('I'+j).Value := vkrk."Posting Date";
      Sheet.Range('J'+j).Value := FORMAT(vkrz."DC-Preis (EKW)"*(vkrz.Quantity));
      Sheet.Range('L'+j).Value := vkrk."Ship-to Country/Region Code";
      Sheet.Range('M'+j).Value := vkrk."Ship-to City";

      j := INCSTR (j);
      UNTIL vkrz.NEXT=0;
      END;
      UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
      REPEAT
      vkgz.RESET;
      vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
      vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','78');
      vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
      vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkgz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkgk."No.";
      Sheet.Range('D'+j).Value := vkgz."No.";
      Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
      Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
      IF vkgk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkgk."Currency Code";
      END;
      IF vkgk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      Sheet.Range('K'+j).Value := FORMAT((vkgz.Amount)*(-1));

      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));

      //Sheet.Range('K'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      w„kurs.RESET;
      w„kurs.SETFILTER(w„kurs."Currency Code",'%1','USD');
      w„kurs.SETFILTER(w„kurs."Starting Date",'%1',vkgk."Posting Date");
      IF w„kurs.FINDFIRST() THEN BEGIN
      Sheet.Range('K'+j).Value := FORMAT((vkgz.Amount)*(w„kurs."Exchange Rate Amount")*(-1));
      END;

      END;

      //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
      Sheet.Range('I'+j).Value := vkgk."Posting Date";
      Sheet.Range('J'+j).Value := FORMAT(vkgz."DC-Preis (EKW)"*(vkgz.Quantity)*(-1));
      Sheet.Range('L'+j).Value := vkgk."Sell-to Country/Region Code";
      Sheet.Range('M'+j).Value := vkgk."Sell-to City";

      j := INCSTR (j);
      UNTIL vkgz.NEXT=0;
      END;
      UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\HALO_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\HALO_TOPAS_POS_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\HALO_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE CIRRUS@1140007();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('O:O').NumberFormat:='###.###,000';
      Sheet.Range('P:Q').NumberFormat:='###.###,000';

      Sheet.Range('A1').Value := 'Disti';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Purchasing Customer Number';
      Sheet.Range('C1').Value := 'Purchasing Customer Name';
      Sheet.Range('D1').Value := 'Purchasing Customer City';
      Sheet.Range('E1').Value := 'Purchasing Customer Province';
      Sheet.Range('F1').Value := 'Purchasing Customer Postal Code';
      Sheet.Range('G1').Value := 'Branch';
      Sheet.Range('H1').Value := 'End Customer Name';
      Sheet.Range('I1').Value := 'End Customer City';
      Sheet.Range('J1').Value := 'End Customer Province';
      Sheet.Range('K1').Value := 'End Customer Postal Code';
      Sheet.Range('L1').Value := 'End Customer Country';
      Sheet.Range('M1').Value := 'Part Number';
      Sheet.Range('N1').Value := 'Qty';
      Sheet.Range('O1').Value := 'Adjusted Cost (USD)';
      Sheet.Range('P1').Value := 'Resale (USD)';
      Sheet.Range('Q1').Value := 'Per Unit Cost (USD)';
      Sheet.Range('R1').Value := 'Invoice Date';
      Sheet.Range('S1').Value := 'Cust PO#';
      Sheet.Range('T1').Value := 'Disti Invoice # to Customer';
      Sheet.Range('U1').Value := 'Quote #/Debit #';
      Sheet.Range('V1').Value := 'Ship & Debit Claim Number';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
      REPEAT
      vkrz.RESET;
      vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
      vkrz.SETFILTER(vkrz."Manufacturer Code",'%1|%2','68','69');
      vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
      vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkrz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkrk."Sell-to Customer No.";
      Sheet.Range('C'+j).Value := vkrk."Sell-to Customer Name";
      Sheet.Range('D'+j).Value := vkrk."Sell-to City";
      Sheet.Range('E'+j).Value := vkrk."Sell-to County";
      Sheet.Range('F'+j).Value := vkrk."Sell-to Post Code";
      Sheet.Range('G'+j).Value := vkrk."Sell-to Country/Region Code";
      Sheet.Range('H'+j).Value := vkrz.Endkunde;

      Kontakt.RESET;
      Kontakt.SETFILTER(Kontakt."No.",'%1',vkrz."Endkundennr.");
      IF Kontakt.FINDFIRST() THEN BEGIN
      Sheet.Range('I'+j).Value := Kontakt.City;
      Sheet.Range('J'+j).Value := Kontakt.County;
      Sheet.Range('K'+j).Value := Kontakt."Post Code";
      Sheet.Range('L'+j).Value := Kontakt."Country/Region Code";
      END;

      Sheet.Range('M'+j).Value := vkrz."No.";
      Sheet.Range('N'+j).Value := FORMAT(vkrz.Quantity);

      Sheet.Range('O'+j).Value := vkrz."DC-Preis (EKW)";
      Sheet.Range('P'+j).Value := vkrz."VK-Preis (EKW)";
      Sheet.Range('Q'+j).Value := vkrz."DC-Preis (EKW)";
      Sheet.Range('R'+j).Value := vkrk."Posting Date";
      Sheet.Range('S'+j).Value := vkrk."External Document No.";
      Sheet.Range('T'+j).Value := vkrk."No.";

      quotedaten.RESET;
      quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkrz."Quotenr.");
      IF quotedaten.FINDFIRST() THEN BEGIN
      Sheet.Range('U'+j).Value := quotedaten."Quotenr. Hersteller";
      Sheet.Range('V'+j).Value := '';
      // IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
      //  IF quotedaten."Hersteller-VK-Preis" < vkrz."VK-Preis (EKW)" THEN BEGIN
      //   Sheet.Range('P'+j).Value := quotedaten."Hersteller-VK-Preis";
      //  END;
      // END;
      END;
      j := INCSTR (j);
      UNTIL vkrz.NEXT=0;
      END;
      UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften

      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
      REPEAT
      vkgz.RESET;
      vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
      vkgz.SETFILTER(vkgz."Manufacturer Code",'%1|%2','68','69');
      vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
      vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkgz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkgk."Sell-to Customer No.";
      Sheet.Range('C'+j).Value := vkgk."Sell-to Customer Name";
      Sheet.Range('D'+j).Value := vkgk."Sell-to City";
      Sheet.Range('E'+j).Value := vkgk."Sell-to County";
      Sheet.Range('F'+j).Value := vkgk."Sell-to Post Code";
      Sheet.Range('G'+j).Value := vkgk."Sell-to Country/Region Code";
      Sheet.Range('H'+j).Value := vkgz.Endkunde;

      Kontakt.RESET;
      Kontakt.SETFILTER(Kontakt."No.",'%1',vkgz."Endkundennr.");
      IF Kontakt.FINDFIRST() THEN BEGIN
      Sheet.Range('I'+j).Value := Kontakt.City;
      Sheet.Range('J'+j).Value := Kontakt.County;
      Sheet.Range('K'+j).Value := Kontakt."Post Code";
      Sheet.Range('L'+j).Value := Kontakt."Country/Region Code";
      END;

      Sheet.Range('M'+j).Value := vkgz."No.";
      Sheet.Range('N'+j).Value := FORMAT((vkgz.Quantity)*(-1));

      Sheet.Range('O'+j).Value := vkgz."DC-Preis (EKW)"*(-1);
      Sheet.Range('P'+j).Value := vkgz."VK-Preis (EKW)"*(-1);
      Sheet.Range('Q'+j).Value := vkgz."DC-Preis (EKW)"*(-1);
      Sheet.Range('R'+j).Value := vkgk."Posting Date";
      Sheet.Range('S'+j).Value := vkgk."External Document No.";
      Sheet.Range('T'+j).Value := vkgk."No.";

      quotedaten.RESET;
      quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkgz."Quotenr.");
      IF quotedaten.FINDFIRST() THEN BEGIN
      Sheet.Range('U'+j).Value := quotedaten."Quotenr. Hersteller";
      Sheet.Range('V'+j).Value := '';

      // IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
      //  IF quotedaten."Hersteller-VK-Preis" < vkgz."VK-Preis (EKW)" THEN BEGIN
      //   Sheet.Range('P'+j).Value := quotedaten."Hersteller-VK-Preis";
      //  END;
      // END;


      END;

      j := INCSTR (j);
      UNTIL vkgz.NEXT=0;
      END;
      UNTIL vkgk.NEXT=0;
      END;

      // Ende Gutschriften
      //j := INCSTR (j);
      //Sheet.Range('H'+j).Value := v_Total_Sum;
      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_POS_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);

      CLEAR(Excel);
      CLEAR(wshFile);

      CIRRUS2;
    END;

    PROCEDURE CIRRUS2@1140012();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet


      Sheet.Range('A1').Value := 'Disti';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Part Number';
      Sheet.Range('C1').Value := 'Qty';
      Sheet.Range('D1').Value := 'Per Unit Cost (USD)';
      Sheet.Range('E1').Value := 'Warehouse Location';
      Sheet.Range('F1').Value := 'Date';

      j := '2';                                                   // <- Import in excel ab Zeile 2
      //  Suchen aller Artikel mit Lagerbestand ungleich Null nur fr CIR
      //  ******************************************************************************
      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1|%2','68','69');
      IF Artikel.FINDFIRST THEN BEGIN
      v_lagerbestand:=0;
      REPEAT
      Artikelposten.RESET;
      Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
      Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
      Artikelposten.SETFILTER(Artikelposten."Location Code",'%1|%2','ZENT','KONSI');
      IF Artikelposten.FINDFIRST THEN BEGIN
      v_lagerbestand:=0;
        REPEAT
        v_lagerbestand:=v_lagerbestand+Artikelposten."Remaining Quantity";
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := Artikel."No.";
      Sheet.Range('C'+j).Value := FORMAT(Artikelposten."Remaining Quantity");
      //Sheet.Range('D'+j).Value :='';
      Sheet.Range('E'+j).Value := 'DE';
      Sheet.Range('F'+j).Value := WORKDATE-2;
       EK_Lief.RESET;
       EK_Lief.SETFILTER(EK_Lief."Document No.",'%1',Artikelposten."Document No.");
       EK_Lief.SETFILTER(EK_Lief."Line No.",'%1',Artikelposten."Document Line No.");
       IF EK_Lief.FINDFIRST THEN BEGIN
        Sheet.Range('D'+j).Value := FORMAT(EK_Lief."Direct Unit Cost");
       END ELSE BEGIN
         Sheet.Range('H'+j).Value := 'Disti holen';

         "Ek-Preise".RESET;
         "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',EK_Lief."No.");
         "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
         "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
         IF "Ek-Preise".FINDFIRST THEN BEGIN
         Sheet.Range('D'+j).Value := FORMAT("Ek-Preise"."Direct Unit Cost");
         END;
       END;
       j := INCSTR (j);
      UNTIL Artikelposten.NEXT=0;
      END;
      v_lagerbestand:=0;
      //UNTIL Artikel.NEXT=0;
      //END;

      // j := INCSTR (j);
      //  j := INCSTR (j);

      vkz.RESET;


      vkz.SETFILTER(vkz."No.",'%1',Artikel."No.");

      vkz.SETFILTER(vkz."Manufacturer Code",'%1|%2','68','69');
      vkz.SETFILTER(vkz."Location Code",'%1','KONSI');
      vkz.SETFILTER(vkz."Qty. to Invoice",'>%1',0);
      IF vkz.FINDFIRST THEN BEGIN
      REPEAT
        IF vkz."Qty. to Invoice"-vkz."Qty. to Ship">0 THEN BEGIN
          Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
          Sheet.Range('B'+j).Value := vkz."No.";
          Sheet.Range('C'+j).Value := FORMAT(vkz."Qty. to Invoice"-vkz."Qty. to Ship");
          Sheet.Range('D'+j).Value := FORMAT(vkz."DC-Preis (EKW)");
          Sheet.Range('E'+j).Value := 'DE';
          Sheet.Range('F'+j).Value := WORKDATE-2;
            j := INCSTR (j);
        END;
      UNTIL vkz.NEXT=0;
      END;

      UNTIL Artikel.NEXT=0;
      END;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_INV_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_INV_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_INV_lfd.xlsx',51,'','',FALSE,FALSE);

      CLEAR(Excel);
      CLEAR(wshFile);

      CIRRUS3;
    END;

    PROCEDURE CIRRUS3@1140013();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('O:O').NumberFormat:='###.###,000';
      Sheet.Range('P:Q').NumberFormat:='###.###,000';

      Sheet.Range('A1').Value := 'Disti';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Purchasing Customer Number';
      Sheet.Range('C1').Value := 'Purchasing Customer Name';
      Sheet.Range('D1').Value := 'Purchasing Customer City';
      Sheet.Range('E1').Value := 'Purchasing Customer Province';
      Sheet.Range('F1').Value := 'Purchasing Customer Potal Code';
      Sheet.Range('G1').Value := 'Branch';
      Sheet.Range('H1').Value := 'End Customer Name';
      Sheet.Range('I1').Value := 'End Customer City';
      Sheet.Range('J1').Value := 'End Customer Province';
      Sheet.Range('K1').Value := 'End Customer Postal Code';
      Sheet.Range('L1').Value := 'End Customer Country';
      Sheet.Range('M1').Value := 'Part Number';
      Sheet.Range('N1').Value := 'Qty';
      Sheet.Range('O1').Value := 'Adjusted Cost (USD)';
      Sheet.Range('P1').Value := 'Adjusted Cost (Local Currency)';
      Sheet.Range('Q1').Value := 'Resale (USD)';
      Sheet.Range('R1').Value := 'Resale (Local Currency)';
      Sheet.Range('S1').Value := 'Exchange Rate';
      Sheet.Range('T1').Value := 'Per Unit Cost (USD)';
      Sheet.Range('U1').Value := 'Customer Requested Date';
      Sheet.Range('V1').Value := 'Commit Date to Customer';
      Sheet.Range('W1').Value := 'Customer Book Date';
      Sheet.Range('X1').Value := 'Cust PO to Disti';
      Sheet.Range('Y1').Value := 'Quote #/Debit #';

      j := '2';                                                    // <- Import in excel ab Zeile 2

      vkz.RESET;
      vkz.SETFILTER(vkz."Manufacturer Code",'%1|%2','68','69');
      vkz.SETFILTER(vkz."Outstanding Quantity",'>%1',0);
      vkz.SETFILTER(vkz."Location Code",'%1','ZENT');
      vkz.SETFILTER(vkz."Document Type",'%1',vkz."Document Type"::Order);
      IF vkz.FINDFIRST() THEN BEGIN
      REPEAT
      vkk.RESET;
      vkk.SETFILTER(vkk."No.",'%1',vkz."Document No.");
      IF vkk.FINDFIRST() THEN BEGIN
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkk."Sell-to Customer No.";
      Sheet.Range('C'+j).Value := vkk."Sell-to Customer Name";
      Sheet.Range('D'+j).Value := vkk."Sell-to City";
      Sheet.Range('E'+j).Value := vkk."Sell-to County";
      Sheet.Range('F'+j).Value := vkk."Sell-to Post Code";
      Sheet.Range('G'+j).Value := vkk."Sell-to Country/Region Code";
      Sheet.Range('W'+j).Value := vkk."Posting Date";
      Sheet.Range('X'+j).Value := vkk."External Document No.";




      Sheet.Range('H'+j).Value := vkz.Endkunde;

      Kontakt.RESET;
      Kontakt.SETFILTER(Kontakt."No.",'%1',vkz."Endkundennr.");
      IF Kontakt.FINDFIRST() THEN BEGIN
      Sheet.Range('I'+j).Value := Kontakt.City;
      Sheet.Range('J'+j).Value := Kontakt.County;
      Sheet.Range('K'+j).Value := Kontakt."Post Code";
      Sheet.Range('L'+j).Value := Kontakt."Country/Region Code";
      END;

      Sheet.Range('M'+j).Value := vkz."No.";
      Sheet.Range('N'+j).Value := FORMAT(vkz."Outstanding Quantity");
      Sheet.Range('O'+j).Value := FORMAT(vkz."DC-Preis (EKW)");
      Sheet.Range('P'+j).Value := FORMAT(vkz."DC-Preis (MW)");
      Sheet.Range('Q'+j).Value := FORMAT(vkz."VK-Preis (EKW)");
      Sheet.Range('R'+j).Value := FORMAT(vkz."VK-Preis (MW)");
      Sheet.Range('S'+j).Value := FORMAT(vkz.Einkaufsw„hrungsfaktor);
      Sheet.Range('T'+j).Value := FORMAT(vkz."DC-Preis (EKW)");
      Sheet.Range('U'+j).Value := FORMAT(vkz."Requested Delivery Date");
      Sheet.Range('V'+j).Value := FORMAT(vkz."Promised Delivery Date");

      quotedaten.RESET;
      quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkz."Quotenr.");
      IF quotedaten.FINDFIRST() THEN BEGIN
      Sheet.Range('Y'+j).Value := quotedaten."Quotenr. Hersteller";

      // IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
      //  IF quotedaten."Hersteller-VK-Preis" < vkz."VK-Preis (EKW)" THEN BEGIN
      //   Sheet.Range('Q'+j).Value := quotedaten."Hersteller-VK-Preis";
      //   Sheet.Range('R'+j).Value := FORMAT(quotedaten."Hersteller-VK-Preis"*vkz.Einkaufsw„hrungsfaktor);
      //  END;
      // END;
      END;

      END;   // Hier Kopfdaten-ENDE

      j := INCSTR (j);
      UNTIL vkz.NEXT=0;
      END;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_Bklg_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_Bklg_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_Bklg_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible(TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE CIRRUS_neu@1000000000();
    BEGIN
      v_Total_Sum := 0;

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);

      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
        RecNo := 0;
        TotalRecNo := vkrk.COUNT;
        RowNo := 1;
        ColumnNo := 1;
        EnterCell(RowNo,ColumnNo,'Disti',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Province',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Postal Code',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Branch',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Province',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Postal Code',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Part Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Qty.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Adjusted Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Resale (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Per Unit Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Invoice Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Cust PO#',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Disti Invoice # to Customer',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Quote #/Debit #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Ship & Debit Claim Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);

        RowNo := RowNo + 1;

        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1|%2','68','69');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FINDFIRST() THEN BEGIN
            REPEAT
              EnterCell(RowNo,1,'TOPAS electronic Vertriebs-GmbH',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkrk."Sell-to Customer No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkrk."Sell-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,vkrk."Sell-to County",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,vkrk."Sell-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,vkrk."Sell-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,vkrz.Endkunde,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              Kontakt.RESET;
              Kontakt.SETFILTER(Kontakt."No.",'%1',vkrz."Endkundennr.");
              IF Kontakt.FINDFIRST() THEN BEGIN
                EnterCell(RowNo,9,Kontakt.City,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,10,Kontakt.County,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,11,Kontakt."Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,12,Kontakt."Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              EnterCell(RowNo,13,vkrz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,15,FORMAT(vkrz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,16,FORMAT(vkrz."VK-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,17,FORMAT(vkrz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,18,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,19,vkrk."External Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,20,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkrz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                EnterCell(RowNo,21,quotedaten."Quotenr. Hersteller",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,22,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                // IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
                //   IF quotedaten."Hersteller-VK-Preis" < vkrz."VK-Preis (EKW)" THEN BEGIN
                //     EnterCell(RowNo,23,FORMAT(quotedaten."Hersteller-VK-Preis"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                //   END;
                // END;
              END;
              RowNo := RowNo + 1;
              RecNo := RecNo + 1;
              Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften

      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1|%2','68','69');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FINDFIRST() THEN BEGIN
            REPEAT
              EnterCell(RowNo,1,'TOPAS electronic Vertriebs-GmbH',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Customer No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgk."Sell-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,vkgk."Sell-to County",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,vkgk."Sell-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,vkgk."Sell-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,vkgz.Endkunde,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              Kontakt.RESET;
              Kontakt.SETFILTER(Kontakt."No.",'%1',vkgz."Endkundennr.");
              IF Kontakt.FINDFIRST() THEN BEGIN
                EnterCell(RowNo,9,Kontakt.City,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,10,Kontakt.County,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,11,Kontakt."Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,12,Kontakt."Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              EnterCell(RowNo,13,vkgz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,FORMAT((vkgz.Quantity)*(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,15,FORMAT(vkgz."DC-Preis (EKW)"*(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,16,FORMAT(vkgz."VK-Preis (EKW)"*(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,17,FORMAT(vkgz."DC-Preis (EKW)"*(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,18,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,19,vkgk."External Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,20,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkgz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                EnterCell(RowNo,21,quotedaten."Quotenr. Hersteller",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,22,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                // IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
                //   IF quotedaten."Hersteller-VK-Preis" < vkgz."VK-Preis (EKW)" THEN BEGIN
                //     EnterCell(RowNo,23,FORMAT(quotedaten."Hersteller-VK-Preis"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                //   END;
                // END;
              END;
              RowNo := RowNo + 1;
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;

      // Ende Gutschriften

      CREATE(wshFile,FALSE,TRUE);
      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_POS_lfd.xlsx');
      CLEAR(wshFile);

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,'Cirrus');
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2','CIRRUS',''),30),COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          //TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          TempExcelBuffer.OpenExcelWithoutAutoFit('Cirrus','CIR_TOPAS_POS_lfd' + ExcelFileExtensionTok,NewFileDirectory,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;

      CIRRUS2_neu;
    END;

    PROCEDURE CIRRUS2_neu@1000000045();
    BEGIN
      v_Total_Sum := 0;

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);

      //  Suchen aller Artikel mit Lagerbestand ungleich Null nur fr CIR
      //  ******************************************************************************

      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1|%2','68','69');
      IF Artikel.FINDFIRST THEN BEGIN
        v_lagerbestand := 0;
        RecNo := 0;
        TotalRecNo := Artikel.COUNT;
        RowNo := 1;
        ColumnNo := 1;
        EnterCell(RowNo,ColumnNo,'Disti',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Part Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Qty.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Per Unit Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Warehouse Location',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo + 1;

        REPEAT

          Artikelposten.RESET;
          Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
          Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
          Artikelposten.SETFILTER(Artikelposten."Location Code",'%1|%2','ZENT','KONSI');
          IF Artikelposten.FINDFIRST THEN BEGIN
            v_lagerbestand := 0;
            REPEAT
              v_lagerbestand := v_lagerbestand + Artikelposten."Remaining Quantity";

              EnterCell(RowNo,1,'TOPAS electronic Vertriebs-GmbH',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,Artikel."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(Artikelposten."Remaining Quantity"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,'DE',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(WORKDATE - 2),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);

              EK_Lief.RESET;
              EK_Lief.SETFILTER(EK_Lief."Document No.",'%1',Artikelposten."Document No.");
              EK_Lief.SETFILTER(EK_Lief."Line No.",'%1',Artikelposten."Document Line No.");
              IF EK_Lief.FINDFIRST THEN BEGIN
                EnterCell(RowNo,4,FORMAT(EK_Lief."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,8,'Disti holen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',EK_Lief."No.");
                "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
                "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  EnterCell(RowNo,4,FORMAT("Ek-Preise"."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              RowNo := RowNo + 1;
            UNTIL Artikelposten.NEXT = 0;
          END;

          v_lagerbestand := 0;

          vkz.RESET;
          vkz.SETFILTER(vkz."No.",'%1',Artikel."No.");
          vkz.SETFILTER(vkz."Manufacturer Code",'%1|%2','68','69');
          vkz.SETFILTER(vkz."Location Code",'%1','KONSI');
          vkz.SETFILTER(vkz."Qty. to Invoice",'>%1',0);
          IF vkz.FINDFIRST THEN BEGIN
            REPEAT
              IF vkz."Qty. to Invoice" - vkz."Qty. to Ship" > 0 THEN BEGIN
                EnterCell(RowNo,1,'TOPAS electronic Vertriebs-GmbH',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,2,vkz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,3,FORMAT(vkz."Qty. to Invoice" - vkz."Qty. to Ship"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,4,FORMAT(vkz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,5,'DE',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,6,FORMAT(WORKDATE - 2),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                RowNo := RowNo + 1;
              END;
            UNTIL vkz.NEXT = 0;
          END;

          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));

        UNTIL Artikel.NEXT = 0;
      END;

      CREATE(wshFile,FALSE,TRUE);
      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_INV_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_INV_lfd.xlsx');
      CLEAR(wshFile);

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,'Cirrus');
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2','CIRRUS',''),30),COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          //TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          TempExcelBuffer.OpenExcelWithoutAutoFit('Cirrus','CIR_TOPAS_INV_lfd' + ExcelFileExtensionTok,NewFileDirectory,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;

      CIRRUS3_neu;
    END;

    PROCEDURE CIRRUS3_neu@1000000046();
    BEGIN
      v_Total_Sum := 0;

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);

      vkz.RESET;
      vkz.SETFILTER(vkz."Manufacturer Code",'%1|%2','68','69');
      vkz.SETFILTER(vkz."Outstanding Quantity",'>%1',0);
      vkz.SETFILTER(vkz."Location Code",'%1','ZENT');
      vkz.SETFILTER(vkz."Document Type",'%1',vkz."Document Type"::Order);
      IF vkz.FINDFIRST() THEN BEGIN
        RecNo := 0;
        TotalRecNo := vkz.COUNT;
        RowNo := 1;
        ColumnNo := 1;
        EnterCell(RowNo,ColumnNo,'Disti',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Province',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Postal Code',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Branch',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Province',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Postal Code',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Part Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Qty.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Adjusted Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Adjusted Cost (Local Currency)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Resale (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Resale (Local Currency)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Exchange Rate',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Per Unit Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Customer Requested Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Commit Date to Customer',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Customer Book Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Cust PO to Disti',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Quote #/Debit #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo + 1;

        REPEAT

          vkk.RESET;
          vkk.SETFILTER(vkk."No.",'%1',vkz."Document No.");
          IF vkk.FINDFIRST() THEN BEGIN
            EnterCell(RowNo,1,'TOPAS electronic Vertriebs-GmbH',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,vkk."Sell-to Customer No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,vkk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,vkk."Sell-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,vkk."Sell-to County",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,vkk."Sell-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,7,vkk."Sell-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,8,vkz.Endkunde,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

            Kontakt.RESET;
            Kontakt.SETFILTER(Kontakt."No.",'%1',vkz."Endkundennr.");
            IF Kontakt.FINDFIRST() THEN BEGIN
              EnterCell(RowNo,9,Kontakt.City,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,10,Kontakt.County,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,Kontakt."Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,12,Kontakt."Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;

            EnterCell(RowNo,13,vkz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,FORMAT(vkz."Outstanding Quantity"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(vkz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,FORMAT(vkz."DC-Preis (MW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,17,FORMAT(vkz."VK-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,18,FORMAT(vkz."VK-Preis (MW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,19,FORMAT(vkz.Einkaufsw„hrungsfaktor),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(vkz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(vkz."Requested Delivery Date"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,22,FORMAT(vkz."Promised Delivery Date"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,23,FORMAT(vkk."Posting Date"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,24,vkk."External Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

            quotedaten.RESET;
            quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkz."Quotenr.");
            IF quotedaten.FINDFIRST() THEN BEGIN
              EnterCell(RowNo,25,quotedaten."Quotenr. Hersteller",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
          END;   // Hier Kopfdaten-ENDE

          RowNo := RowNo + 1;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));

        UNTIL vkz.NEXT = 0;
      END;

      CREATE(wshFile,FALSE,TRUE);
      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_Bklg_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_Bklg_lfd.xlsx');
      CLEAR(wshFile);

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,'Cirrus');
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2','CIRRUS',''),30),COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          //TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          TempExcelBuffer.OpenExcelWithoutAutoFit('Cirrus','CIR_TOPAS_Bklg_lfd' + ExcelFileExtensionTok,NewFileDirectory,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    PROCEDURE AKROS@1140003();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:J').NumberFormat:='###.###,00';

      Sheet.Range('D1').Value := 'P.O.S. Report';
      Sheet.Range('B3').Value := 'Distributor Name:';
      Sheet.Range('C3').Value := 'Topas electronic Vertriebs GmbH';

      Sheet.Range('B4').Value := '            Date:';
      Sheet.Range('C4').Value := WORKDATE;

      Sheet.Range('F5').Value := 'USD $$$';
      Sheet.Range('G5').Value := 'USD $$$';
      Sheet.Range('H5').Value := 'USD $$$';
      Sheet.Range('I5').Value := 'USD $$$';


      Sheet.Range('A6').Value := 'Invoice Date';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B6').Value := 'Contract Manufacturer';
      Sheet.Range('C6').Value := 'Design Customer';
      Sheet.Range('D6').Value := 'Product';
      Sheet.Range('E6').Value := 'Qty';
      Sheet.Range('F6').Value := 'Cost';
      Sheet.Range('G6').Value := 'Resale';
      Sheet.Range('H6').Value := 'Cost Value';
      Sheet.Range('I6').Value := 'Resale Value';
      Sheet.Range('J6').Value := 'Margin %';

      j := '7';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
      REPEAT
      vkrz.RESET;
      vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
      vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','55');
      vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
      vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkrz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := vkrk."Posting Date";
      Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
      Sheet.Range('D'+j).Value := vkrz."No.";
      Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
      //Sheet.Range('F'+j).Value := FORMAT(vkrz."DC-Preis (MW)"*vkrz.Einkaufsw„hrungsfaktor);
      Sheet.Range('F'+j).Value := FORMAT(vkrz."DC-Preis (EKW)");

      Sheet.Range('G'+j).Value := FORMAT(vkrz."VK-Preis (EKW)");

      Sheet.Range('H'+j).Value :=FORMAT((vkrz.Quantity)*(vkrz."DC-Preis (EKW)"));
      Sheet.Range('I'+j).Value :=FORMAT((vkrz.Quantity)*(vkrz."VK-Preis (EKW)"));
      IF vkrz.Quantity<>0 THEN BEGIN
        IF vkrz."DC-Preis (EKW)" <>0 THEN BEGIN
          IF vkrz."VK-Preis (EKW)" <>0 THEN BEGIN
           Sheet.Range('J'+j).Value :=FORMAT((((vkrz.Quantity)*(vkrz."VK-Preis (EKW)"))-((vkrz.Quantity)*(vkrz."DC-Preis (EKW)")))/
           ((vkrz.Quantity)*(vkrz."VK-Preis (EKW)"))*100);
          END;
        END;
      END;
      j := INCSTR (j);
      UNTIL vkrz.NEXT=0;
      END;
      UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
      REPEAT
      vkgz.RESET;
      vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
      vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','55');
      vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
      vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkgz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := vkgk."Posting Date";
      Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkgk."No.";
      Sheet.Range('D'+j).Value := vkgz."No.";
      Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));

      Sheet.Range('F'+j).Value := FORMAT((vkgz."DC-Preis (MW)"*vkgz.Einkaufsw„hrungsfaktor)*(-1));
      Sheet.Range('G'+j).Value := FORMAT((vkgz."VK-Preis (EKW)")*(-1));

      //Sheet.Range('H'+j).Value :='Spalte E * Spalte F';
      //Sheet.Range('I'+j).Value :='Spalte E * Spalte G';
      //Sheet.Range('J'+j).Value :='Formel(=WENN(I7=0;0;(1-(H7/I7)))';
      Sheet.Range('H'+j).Value :=FORMAT((vkgz.Quantity)*(vkgz."DC-Preis (EKW)")*(-1));
      Sheet.Range('I'+j).Value :=FORMAT((vkgz.Quantity)*(vkgz."VK-Preis (EKW)")*(-1));
      IF vkrz.Quantity<>0 THEN BEGIN
        IF vkrz."DC-Preis (EKW)" <>0 THEN BEGIN
          IF vkrz."VK-Preis (EKW)" <>0 THEN BEGIN
           Sheet.Range('J'+j).Value :=FORMAT((((vkrz.Quantity)*(vkrz."VK-Preis (EKW)"))-((vkrz.Quantity)*(vkrz."DC-Preis (EKW)")))/
           ((vkrz.Quantity)*(vkrz."VK-Preis (EKW)"))*100);
          END;
        END;
      END;



      {
      Sheet.Range('F'+j).Value := FORMAT(vkgz."Unit Price");
      IF vkgk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkgk."Currency Code";
      END;
      IF vkgk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
      END;

      //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
      Sheet.Range('I'+j).Value := vkgk."Posting Date";
      }


      j := INCSTR (j);
      UNTIL vkgz.NEXT=0;
      END;
      UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\AKROS_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\AKROS_TOPAS_POS_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\AKROS_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE FERRARI@1140008();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      //Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Reseller name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Address';
      Sheet.Range('C1').Value := 'Zip';
      Sheet.Range('D1').Value := 'City';
      Sheet.Range('E1').Value := 'Country';
      Sheet.Range('F1').Value := 'Ferrari electronic item-nr.';
      Sheet.Range('G1').Value := 'Quantity shipped';
      Sheet.Range('H1').Value := 'Total Amount';
      Sheet.Range('I1').Value := 'Currency';
      Sheet.Range('J1').Value := 'Month/Day/Year';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
      REPEAT
      vkrz.RESET;
      vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
      vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','85');
      vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
      vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkrz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := vkrk."Sell-to Customer Name";
      Sheet.Range('B'+j).Value := vkrk."Sell-to Address";
      Sheet.Range('C'+j).Value := vkrk."Sell-to Post Code";
      Sheet.Range('D'+j).Value := vkrk."Sell-to City";
      Sheet.Range('E'+j).Value := vkrk."Sell-to Country/Region Code";
      Sheet.Range('F'+j).Value := FORMAT(vkrz."No.");
      Sheet.Range('G'+j).Value := FORMAT(vkrz.Quantity);
      IF vkrk."Currency Code" = '' THEN BEGIN
      Sheet.Range('H'+j).Value := FORMAT(vkrz.Amount);
      v_Total_Sum:=v_Total_Sum+ (vkrz.Amount);
      END ELSE BEGIN
      Sheet.Range('H'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
      v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
      END;


      Sheet.Range('I'+j).Value := 'EUR';
      //Sheet.Range('J'+j).Value := vkrk."Posting Date";

      v_day:=DATE2DMY(vkrk."Posting Date",1);
      v_month:=DATE2DMY(vkrk."Posting Date",2);
      v_year:=DATE2DMY(vkrk."Posting Date",3)-2000;

      IF v_day=1 THEN v_day1:='01';
      IF v_day=2 THEN v_day1:='02';
      IF v_day=3 THEN v_day1:='03';
      IF v_day=4 THEN v_day1:='04';
      IF v_day=5 THEN v_day1:='05';
      IF v_day=6 THEN v_day1:='06';
      IF v_day=7 THEN v_day1:='07';
      IF v_day=8 THEN v_day1:='08';
      IF v_day=9 THEN v_day1:='09';
      IF v_day=10 THEN v_day1:='10';
      IF v_day=11 THEN v_day1:='11';
      IF v_day=12 THEN v_day1:='12';
      IF v_day=13 THEN v_day1:='13';
      IF v_day=14 THEN v_day1:='14';
      IF v_day=15 THEN v_day1:='15';
      IF v_day=16 THEN v_day1:='16';
      IF v_day=17 THEN v_day1:='17';
      IF v_day=18 THEN v_day1:='18';
      IF v_day=19 THEN v_day1:='19';
      IF v_day=20 THEN v_day1:='20';
      IF v_day=21 THEN v_day1:='21';
      IF v_day=22 THEN v_day1:='22';
      IF v_day=23 THEN v_day1:='23';
      IF v_day=24 THEN v_day1:='24';
      IF v_day=25 THEN v_day1:='25';
      IF v_day=26 THEN v_day1:='26';
      IF v_day=27 THEN v_day1:='27';
      IF v_day=28 THEN v_day1:='28';
      IF v_day=29 THEN v_day1:='29';
      IF v_day=30 THEN v_day1:='30';
      IF v_day=31 THEN v_day1:='31';

      IF v_month=1 THEN v_month1:='01';
      IF v_month=2 THEN v_month1:='02';
      IF v_month=3 THEN v_month1:='03';
      IF v_month=4 THEN v_month1:='04';
      IF v_month=5 THEN v_month1:='05';
      IF v_month=6 THEN v_month1:='06';
      IF v_month=7 THEN v_month1:='07';
      IF v_month=8 THEN v_month1:='08';
      IF v_month=9 THEN v_month1:='09';
      IF v_month=10 THEN v_month1:='10';
      IF v_month=11 THEN v_month1:='11';
      IF v_month=12 THEN v_month1:='12';

      IF v_year=15 THEN v_year1:='15';
      IF v_year=16 THEN v_year1:='16';
      IF v_year=17 THEN v_year1:='17';
      IF v_year=18 THEN v_year1:='18';
      IF v_year=19 THEN v_year1:='19';
      IF v_year=20 THEN v_year1:='20';
      IF v_year=21 THEN v_year1:='21';

      v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
      Sheet.Range('J'+j).Value := FORMAT(v_ACL_SP_E);
      Sheet.Range('J'+j).NumberFormat := 'TT/MM/JJ';









      j := INCSTR (j);
      UNTIL vkrz.NEXT=0;
      END;
      UNTIL vkrk.NEXT=0;
      END;


      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
      REPEAT
      vkgz.RESET;
      vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
      vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','85');
      vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
      vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkgz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := vkgk."Sell-to Customer Name";
      Sheet.Range('B'+j).Value := vkgk."Sell-to Address";
      Sheet.Range('C'+j).Value := vkgk."Sell-to Post Code";
      Sheet.Range('D'+j).Value := vkgk."Sell-to City";
      Sheet.Range('E'+j).Value := vkgk."Sell-to Country/Region Code";
      Sheet.Range('F'+j).Value := FORMAT(vkgz."No.");
      Sheet.Range('G'+j).Value := FORMAT((vkgz.Quantity)*(-1));
      IF vkgk."Currency Code" = '' THEN BEGIN
      Sheet.Range('H'+j).Value := FORMAT((vkgz.Amount)*(-1));
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
      END ELSE BEGIN
      Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      v_Total_Sum:=v_Total_Sum+ ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      END;


      Sheet.Range('I'+j).Value := 'EUR';
      //Sheet.Range('J'+j).Value := vkgk."Posting Date";

      v_day:=DATE2DMY(vkgk."Posting Date",1);
      v_month:=DATE2DMY(vkgk."Posting Date",2);
      v_year:=DATE2DMY(vkgk."Posting Date",3)-2000;

      IF v_day=1 THEN v_day1:='01';
      IF v_day=2 THEN v_day1:='02';
      IF v_day=3 THEN v_day1:='03';
      IF v_day=4 THEN v_day1:='04';
      IF v_day=5 THEN v_day1:='05';
      IF v_day=6 THEN v_day1:='06';
      IF v_day=7 THEN v_day1:='07';
      IF v_day=8 THEN v_day1:='08';
      IF v_day=9 THEN v_day1:='09';
      IF v_day=10 THEN v_day1:='10';
      IF v_day=11 THEN v_day1:='11';
      IF v_day=12 THEN v_day1:='12';
      IF v_day=13 THEN v_day1:='13';
      IF v_day=14 THEN v_day1:='14';
      IF v_day=15 THEN v_day1:='15';
      IF v_day=16 THEN v_day1:='16';
      IF v_day=17 THEN v_day1:='17';
      IF v_day=18 THEN v_day1:='18';
      IF v_day=19 THEN v_day1:='19';
      IF v_day=20 THEN v_day1:='20';
      IF v_day=21 THEN v_day1:='21';
      IF v_day=22 THEN v_day1:='22';
      IF v_day=23 THEN v_day1:='23';
      IF v_day=24 THEN v_day1:='24';
      IF v_day=25 THEN v_day1:='25';
      IF v_day=26 THEN v_day1:='26';
      IF v_day=27 THEN v_day1:='27';
      IF v_day=28 THEN v_day1:='28';
      IF v_day=29 THEN v_day1:='29';
      IF v_day=30 THEN v_day1:='30';
      IF v_day=31 THEN v_day1:='31';

      IF v_month=1 THEN v_month1:='01';
      IF v_month=2 THEN v_month1:='02';
      IF v_month=3 THEN v_month1:='03';
      IF v_month=4 THEN v_month1:='04';
      IF v_month=5 THEN v_month1:='05';
      IF v_month=6 THEN v_month1:='06';
      IF v_month=7 THEN v_month1:='07';
      IF v_month=8 THEN v_month1:='08';
      IF v_month=9 THEN v_month1:='09';
      IF v_month=10 THEN v_month1:='10';
      IF v_month=11 THEN v_month1:='11';
      IF v_month=12 THEN v_month1:='12';

      IF v_year=15 THEN v_year1:='15';
      IF v_year=16 THEN v_year1:='16';
      IF v_year=17 THEN v_year1:='17';
      IF v_year=18 THEN v_year1:='18';
      IF v_year=19 THEN v_year1:='19';
      IF v_year=20 THEN v_year1:='20';
      IF v_year=21 THEN v_year1:='21';

      v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
      Sheet.Range('J'+j).Value := FORMAT(v_ACL_SP_E);
      Sheet.Range('J'+j).NumberFormat := 'TT/MM/JJ';
      j := INCSTR (j);
      UNTIL vkgz.NEXT=0;
      END;
      UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften

      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\FERRARI_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\FERRARI_TOPAS_POS_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\FERRARI_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE TEST@1140006();
    BEGIN
    END;

    PROCEDURE DSP@1140011();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
      REPEAT
      vkrz.RESET;
      vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
      vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','17');
      vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
      vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkrz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkrk."No.";
      Sheet.Range('D'+j).Value := vkrz."No.";
      Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
      Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
      IF vkrk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkrk."Currency Code";
      END;
      IF vkrk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
      v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkrz.Amount);
      v_Total_Sum:=v_Total_Sum+(vkrz.Amount);
      END;
      //Sheet.Range('H'+j).Value := Format(vkrz."Unit Price"* vkrz.Quantity);
      Sheet.Range('I'+j).Value := vkrk."Posting Date";
      j := INCSTR (j);
      UNTIL vkrz.NEXT=0;
      END;
      UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
      REPEAT
      vkgz.RESET;
      vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
      vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','17');
      vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
      vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkgz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkgk."No.";
      Sheet.Range('D'+j).Value := vkgz."No.";
      Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
      Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
      IF vkgk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkgk."Currency Code";
      END;
      IF vkgk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
      END;

      //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
      Sheet.Range('I'+j).Value := vkgk."Posting Date";
      j := INCSTR (j);
      UNTIL vkgz.NEXT=0;
      END;
      UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\DSP_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\DSP_TOPAS_POS_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\DSP_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE ACS2@1140014();
    BEGIN
      v_Total_Sum := 0;

      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);



      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      //Sheet.StandardWidth := 30;
      Sheet.Range('A:A').ColumnWidth := 20;
      Sheet.Range('C:D').ColumnWidth := 20;
      Sheet.Range('E:E').ColumnWidth := 8;
      Sheet.Range('F:F').ColumnWidth := 20;
      Sheet.Range('G:G').ColumnWidth := 10;
      Sheet.Range('J:J').ColumnWidth := 2;
      Sheet.Range('L:L').ColumnWidth := 2;
      Sheet.Range('P:P').ColumnWidth := 2;
      Sheet.Range('R:R').ColumnWidth := 2;
      Sheet.Range('V:V').ColumnWidth := 2;
      Sheet.Range('X:X').ColumnWidth := 2;
      Sheet.Range('AC:AC').ColumnWidth := 4;
      //Sheet.Range('AD:AF').ColumnWidth := 10;
      Sheet.Range('AG:AH').ColumnWidth := 20;

      Sheet.Range('AD:AF').NumberFormat:='#.##0,00';

      Sheet.Range('A1').Value := 'POS Vendor Number';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Sales Rep Name';
      Sheet.Range('C1').Value := 'Bill To Acct# or Customer #';
      Sheet.Range('D1').Value := 'Invoice Number';
      Sheet.Range('E1').Value := 'Invoice or Ship Date';
      Sheet.Range('F1').Value := 'PO Number';
      Sheet.Range('G1').Value := 'Bill To Name';
      Sheet.Range('H1').Value := 'Bill To Adress';
      Sheet.Range('I1').Value := 'Bill To City';
      Sheet.Range('J1').Value := 'Bill To State';
      Sheet.Range('K1').Value := 'Bill To Zip';
      Sheet.Range('L1').Value := 'Bill To Country';
      Sheet.Range('M1').Value := 'Ship To Name';
      Sheet.Range('N1').Value := 'Ship To Adress';
      Sheet.Range('O1').Value := 'Ship To City';
      Sheet.Range('P1').Value := 'Ship To State';
      Sheet.Range('Q1').Value := 'Ship To Zip';
      Sheet.Range('R1').Value := 'Ship To Country';
      Sheet.Range('S1').Value := 'EndUser Name';
      Sheet.Range('T1').Value := 'EndUser Adress';
      Sheet.Range('U1').Value := 'EndUser City';
      Sheet.Range('V1').Value := 'EndUser State';
      Sheet.Range('W1').Value := 'EndUser Zip';
      Sheet.Range('X1').Value := 'EndUser Country';
      Sheet.Range('Y1').Value := 'Distributer Item #';
      Sheet.Range('Z1').Value := 'AudioCodes Item #';
      Sheet.Range('AA1').Value := 'Item Description';
      Sheet.Range('AB1').Value := 'Serial #';
      Sheet.Range('AC1').Value := 'Quantity';
      Sheet.Range('AD1').Value := 'Extended Cost (Euro)';
      Sheet.Range('AE1').Value := 'Extended Net Cost (Euro)';
      Sheet.Range('AF1').Value := 'Discounts/Rebates (Euro)';
      Sheet.Range('AG1').Value := 'DPA Number';
      Sheet.Range('AH1').Value := 'DPA Description';
      Sheet.Range('AI1').Value := 'End User Application';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      Artikelposten.RESET;
      Artikelposten.SETFILTER(Artikelposten."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER(Artikelposten."Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      Artikelposten.SETFILTER(Artikelposten."Invoiced Quantity",'<>%1',0);
      IF Artikelposten.FINDFIRST() THEN BEGIN
      REPEAT
      v_ACL_SP_A:='';
      v_ACL_SP_B:='';
      v_ACL_SP_C:='';
      v_ACL_SP_D:='';
      v_ACL_SP_E:='';
      v_ACL_SP_F:='';
      v_ACL_SP_G:='';
      v_ACL_SP_H:='';
      v_ACL_SP_I:='';
      v_ACL_SP_J:='';
      v_ACL_SP_K:='';
      v_ACL_SP_L:='';
      v_ACL_SP_M:='';
      v_ACL_SP_N:='';
      v_ACL_SP_O:='';
      v_ACL_SP_P:='';
      v_ACL_SP_Q:='';
      v_ACL_SP_R:='';
      v_ACL_SP_S:='';
      v_ACL_SP_T:='';
      v_ACL_SP_U:='';
      v_ACL_SP_V:='';
      v_ACL_SP_W:='';
      v_ACL_SP_X:='';
      v_ACL_SP_Y:='';
      v_ACL_SP_Z:='';
      v_ACL_SP_AA:='';
      v_ACL_SP_AB:='';
      v_ACL_SP_AC:=0;
      v_ACL_SP_AD:=0;
      v_ACL_SP_AE:=0;
      v_ACL_SP_AF:=0;
      v_ACL_SP_AG:='';
      v_ACL_SP_AH:='';
      v_ACL_SP_AI:='';
      v_day:=0;
      v_month:=0;
      v_year:=0;


      vklz.RESET;
      vklz.SETFILTER(vklz."Document No.",'%1',Artikelposten."Document No.");
      //  **********************************************************************************************************************
      vklz.SETFILTER(vklz."Manufacturer Code",'%1|%2|%3|%4','57','5710','5720','5730');
      //  ***************************************************************************************************************************
      vklz.SETFILTER(vklz.Quantity,'<>%1',0);
      vklz.SETFILTER(vklz."No.",'%1',Artikelposten."Item No.");
      vklz.SETFILTER(vklz."Item Shpt. Entry No.",'%1',Artikelposten."Entry No.");
      IF vklz.FINDFIRST() THEN BEGIN
      REPEAT

      vklk.RESET;
      vklk.SETFILTER(vklk."No.",'%1',vklz."Document No.");
      IF vklk.FINDFIRST() THEN BEGIN
      Sheet.Range('A'+j).Value := '';
      //v_ACL_SP_A:=PADSTR('Nico Kossuch',20);
      //Sheet.Range('A'+j).Value := v_ACL_SP_A;

      //Sheet.Range('B'+j).Value := 'Nico Kossuch';
      v_ACL_SP_B:='Nico Kossuch';
      Sheet.Range('B'+j).Value := v_ACL_SP_B;

      //Sheet.Range('C'+j).Value := vklk."Sell-to Customer No.";
      v_ACL_SP_C:=PADSTR(vklk."Sell-to Customer No.",20);
      Sheet.Range('C'+j).Value := v_ACL_SP_C;

      //Sheet.Range('D'+j).Value := vklk."No.";
      v_ACL_SP_D:= PADSTR(vklk."No.",20);
      Sheet.Range('D'+j).Value := v_ACL_SP_D;



      //v_day:=DATE2DMY(vklk."Posting Date",1);
      //v_month:=DATE2DMY(vklk."Posting Date",2);
      //v_year:=DATE2DMY(vklk."Posting Date",3)-2000;

      IF v_day=1 THEN v_day1:='01';
      IF v_day=2 THEN v_day1:='02';
      IF v_day=3 THEN v_day1:='03';
      IF v_day=4 THEN v_day1:='04';
      IF v_day=5 THEN v_day1:='05';
      IF v_day=6 THEN v_day1:='06';
      IF v_day=7 THEN v_day1:='07';
      IF v_day=8 THEN v_day1:='08';
      IF v_day=9 THEN v_day1:='09';
      IF v_day=10 THEN v_day1:='10';
      IF v_day=11 THEN v_day1:='11';
      IF v_day=12 THEN v_day1:='12';
      IF v_day=13 THEN v_day1:='13';
      IF v_day=14 THEN v_day1:='14';
      IF v_day=15 THEN v_day1:='15';
      IF v_day=16 THEN v_day1:='16';
      IF v_day=17 THEN v_day1:='17';
      IF v_day=18 THEN v_day1:='18';
      IF v_day=19 THEN v_day1:='19';
      IF v_day=20 THEN v_day1:='20';
      IF v_day=21 THEN v_day1:='21';
      IF v_day=22 THEN v_day1:='22';
      IF v_day=23 THEN v_day1:='23';
      IF v_day=24 THEN v_day1:='24';
      IF v_day=25 THEN v_day1:='25';
      IF v_day=26 THEN v_day1:='26';
      IF v_day=27 THEN v_day1:='27';
      IF v_day=28 THEN v_day1:='28';
      IF v_day=29 THEN v_day1:='29';
      IF v_day=30 THEN v_day1:='30';
      IF v_day=31 THEN v_day1:='31';

      IF v_month=1 THEN v_month1:='01';
      IF v_month=2 THEN v_month1:='02';
      IF v_month=3 THEN v_month1:='03';
      IF v_month=4 THEN v_month1:='04';
      IF v_month=5 THEN v_month1:='05';
      IF v_month=6 THEN v_month1:='06';
      IF v_month=7 THEN v_month1:='07';
      IF v_month=8 THEN v_month1:='08';
      IF v_month=9 THEN v_month1:='09';
      IF v_month=10 THEN v_month1:='10';
      IF v_month=11 THEN v_month1:='11';
      IF v_month=12 THEN v_month1:='12';

      IF v_year=15 THEN v_year1:='15';
      IF v_year=16 THEN v_year1:='16';
      IF v_year=17 THEN v_year1:='17';
      IF v_year=18 THEN v_year1:='18';
      IF v_year=19 THEN v_year1:='19';
      IF v_year=20 THEN v_year1:='20';
      IF v_year=21 THEN v_year1:='21';


      //Sheet.Range('E'+j).Value :=FORMAT(v_month)+'/'+FORMAT(v_day)+'/'+FORMAT(v_year);
      //v_ACL_SP_E:=FORMAT((v_month1)+'/'+(v_day1)+'/'+(v_year1));
      v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
      //v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/');
      Sheet.Range('E'+j).Value := FORMAT(v_ACL_SP_E);
      Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';


      //Sheet.Range('E'+j).Value := vklk."Posting Date";
      //Sheet.Range('F'+j).Value := vklk."External Document No.";
      v_ACL_SP_F := PADSTR(vklk."External Document No.",20);
      Sheet.Range('F'+j).Value := v_ACL_SP_F;

      //Sheet.Range('G'+j).Value := vklk."Bill-to Name";
      v_ACL_SP_G :=PADSTR(vklk."Bill-to Name",30);
      Sheet.Range('G'+j).Value := v_ACL_SP_G;

      //Sheet.Range('H'+j).Value := vklk."Bill-to Address";
      v_ACL_SP_H := PADSTR(vklk."Bill-to Address",30);
      Sheet.Range('H'+j).Value := v_ACL_SP_H;

      //Sheet.Range('I'+j).Value := vklk."Bill-to City";
      v_ACL_SP_I := PADSTR(vklk."Bill-to City",30);
      Sheet.Range('I'+j).Value := v_ACL_SP_I;

      //Sheet.Range('J'+j).Value := vklk."Bill-to County";
      v_ACL_SP_J := PADSTR(vklk."Bill-to County",2);
      Sheet.Range('J'+j).Value := v_ACL_SP_J;

      //Sheet.Range('K'+j).Value := vklk."Bill-to Post Code";
      v_ACL_SP_K := PADSTR(vklk."Bill-to Post Code",10);
      Sheet.Range('K'+j).Value := v_ACL_SP_K;

      //Sheet.Range('L'+j).Value := vklk."Bill-to Country/Region Code";
      v_ACL_SP_L := PADSTR(vklk."Bill-to Country/Region Code",2);
      Sheet.Range('L'+j).Value := v_ACL_SP_L;

      //Sheet.Range('M'+j).Value := vklk."Ship-to Name";
      v_ACL_SP_M := PADSTR(vklk."Ship-to Name",30);
      Sheet.Range('M'+j).Value := v_ACL_SP_M;

      //Sheet.Range('N'+j).Value := vklk."Ship-to Address";
      v_ACL_SP_N := PADSTR(vklk."Ship-to Address",30);
      Sheet.Range('N'+j).Value := v_ACL_SP_N;

      //Sheet.Range('O'+j).Value := vklk."Ship-to City";
      v_ACL_SP_O := PADSTR(vklk."Ship-to City",30);
      Sheet.Range('O'+j).Value := v_ACL_SP_O;

      //Sheet.Range('P'+j).Value := vklk."Ship-to County";
      v_ACL_SP_P := PADSTR(vklk."Ship-to County",2);
      Sheet.Range('P'+j).Value := v_ACL_SP_P;

      //Sheet.Range('Q'+j).Value := vklk."Ship-to Post Code";
      v_ACL_SP_Q := PADSTR(vklk."Ship-to Post Code",10);
      Sheet.Range('Q'+j).Value := v_ACL_SP_Q;

      //Sheet.Range('R'+j).Value := vklk."Ship-to Country/Region Code";
      v_ACL_SP_R := PADSTR(vklk."Ship-to Country/Region Code",2);
      Sheet.Range('R'+j).Value := v_ACL_SP_R;

      //Sheet.Range('S'+j).Value := vklk.Endkunde;
      v_ACL_SP_S := PADSTR(vklk.Endkunde,30);
      Sheet.Range('S'+j).Value := v_ACL_SP_S;

      //Sheet.Range('T'+j).Value := vklk."Endkunde Adresse";
      v_ACL_SP_T := PADSTR(vklk."Endkunde Adresse",30);
      Sheet.Range('T'+j).Value := v_ACL_SP_T;

      //Sheet.Range('U'+j).Value := vklk."Endkunde Ort";
      v_ACL_SP_U := PADSTR(vklk."Endkunde Ort",30);
      Sheet.Range('U'+j).Value := v_ACL_SP_U;

      Sheet.Range('V'+j).Value := '';
      //v_ACL_SP_V := PADSTR('',2);
      //Sheet.Range('V'+j).Value := v_ACL_SP_V;

      //Sheet.Range('W'+j).Value := vklk."Endkunde PLZ-Code";
      v_ACL_SP_W := PADSTR(vklk."Endkunde PLZ-Code",10);
      Sheet.Range('W'+j).Value := v_ACL_SP_W;

      //Sheet.Range('X'+j).Value := vklk."Endkunde Land";
      v_ACL_SP_X := PADSTR(vklk."Endkunde Land",2);
      Sheet.Range('X'+j).Value := v_ACL_SP_X;

      //Sheet.Range('Y'+j).Value := vklz."No.";
      v_ACL_SP_Y := PADSTR(vklz."No.",30);
      Sheet.Range('Y'+j).Value := v_ACL_SP_Y;

      //Sheet.Range('Z'+j).Value := vklz."No.";
      v_ACL_SP_Z := PADSTR(vklz."No.",30);
      Sheet.Range('Z'+j).Value := v_ACL_SP_Z;

      //Sheet.Range('AA'+j).Value := vklz.Description;
      v_ACL_SP_AA := PADSTR(vklz.Description,30);
      Sheet.Range('AA'+j).Value := v_ACL_SP_AA;

      //Sheet.Range('AB'+j).Value := Artikelposten."Serial No.";
      v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
      Sheet.Range('AB'+j).Value := v_ACL_SP_AB;

      //Sheet.Range('AC'+j).Value := FORMAT(Artikelposten.Quantity*(-1));
      v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
      Sheet.Range('AC'+j).Value := v_ACL_SP_AC;
      END;

      Debitor.RESET;
      Debitor.SETFILTER(Debitor."No.",'%1',vklz."Sell-to Customer No.");
      IF Debitor.FINDFIRST() THEN BEGIN
      //Sheet.Range('AI'+j).Value := Debitor.AC_Solutionpartner;
      v_ACL_SP_AI := Debitor.AC_Solutionpartner;
      Sheet.Range('AI'+j).Value := Debitor.AC_Solutionpartner;
      END;





      //  **************************************  EK aus Preisliste  ******************************
      "Ek-Preise".RESET;
      "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vklz."No.");
      "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
      //"Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');

      "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
      IF "Ek-Preise".FINDFIRST() THEN BEGIN
      //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
      v_ACL_SP_AD :=("Ek-Preise"."Direct Unit Cost"*((Artikelposten.Quantity)*(-1)));
      Sheet.Range('AD'+j).Value := v_ACL_SP_AD;
      // END ELSE BEGIN
      // "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
      // "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
      // IF "Ek-Preise".FINDFIRST() THEN BEGIN
      // //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
      // v_ACL_SP_AD :=("Ek-Preise"."Direct Unit Cost");
      // Sheet.Range('AD'+j).Value := FORMAT(v_ACL_SP_AD);
      // //Sheet.Range('AD'+j).NumberFormat := '0.00';
      // END;
      END;







      //v_ACL_SP_AD:=(vklz."DC-Preis (MW)");
      //Sheet.Range('AD'+j).Value := v_ACL_SP_AD;

      v_ACL_SP_AE:=((vklz."DC-Preis (MW)"*Artikelposten.Quantity)*(-1));
      Sheet.Range('AE'+j).Value := v_ACL_SP_AE;

      // Falls DC-Preis fehlt **** *************************************
      IF v_ACL_SP_AE=0 THEN BEGIN

      "Ek-Preise".RESET;
      "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vklz."No.");
      "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
      "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
      IF "Ek-Preise".FINDFIRST() THEN BEGIN
      // v_ACL_SP_AD :=(("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity)*(-1));
      // Sheet.Range('AD'+j).Value := v_ACL_SP_AD;
      v_ACL_SP_AE :=(("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity)*(-1));
      Sheet.Range('AE'+j).Value := v_ACL_SP_AE;

      END;






      END;

      "Ek-Preise".RESET;
      "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vklz."No.");
      "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
      "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
      IF "Ek-Preise".FINDFIRST() THEN BEGIN
      v_ACL_SP_AF :=(((("Ek-Preise"."Direct Unit Cost")*(Artikelposten.Quantity)*(-1)))-v_ACL_SP_AE);
      Sheet.Range('AF'+j).Value := v_ACL_SP_AF;
      END;



      quotedaten.RESET;
      quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vklz."Quotenr.");
      IF quotedaten.FINDFIRST() THEN BEGIN
      //Sheet.Range('AE'+j).Value :=FORMAT(quotedaten.Quotepreis);
      //v_ACL_SP_AE :=(quotedaten.Quotepreis);
      //Sheet.Range('AE'+j).Value := v_ACL_SP_AE;

      //Sheet.Range('AF'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis);
      //v_ACL_SP_AF :=("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis);
      //Sheet.Range('AF'+j).Value := v_ACL_SP_AF;




      //Sheet.Range('AG'+j).Value := quotedaten."Quotenr. Hersteller";
      v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
      Sheet.Range('AG'+j).Value := v_ACL_SP_AG;

      //Sheet.Range('AH'+j).Value := quotedaten.Genehmigungstext;
      v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
      Sheet.Range('AH'+j).Value := v_ACL_SP_AH;
      END;

      j := INCSTR (j);
      UNTIL vklz.NEXT=0;
      END;

      UNTIL Artikelposten.NEXT=0;
      END;
      //  Ende Ums„tze


      // Anfang Gutschriften
      Artikelposten.RESET;
      Artikelposten.SETFILTER(Artikelposten."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER(Artikelposten."Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      IF Artikelposten.FINDFIRST() THEN BEGIN
      REPEAT

      v_ACL_SP_A:='';
      v_ACL_SP_B:='';
      v_ACL_SP_C:='';
      v_ACL_SP_D:='';
      v_ACL_SP_E:='';
      v_ACL_SP_F:='';
      v_ACL_SP_G:='';
      v_ACL_SP_H:='';
      v_ACL_SP_I:='';
      v_ACL_SP_J:='';
      v_ACL_SP_K:='';
      v_ACL_SP_L:='';
      v_ACL_SP_M:='';
      v_ACL_SP_N:='';
      v_ACL_SP_O:='';
      v_ACL_SP_P:='';
      v_ACL_SP_Q:='';
      v_ACL_SP_R:='';
      v_ACL_SP_S:='';
      v_ACL_SP_T:='';
      v_ACL_SP_U:='';
      v_ACL_SP_V:='';
      v_ACL_SP_W:='';
      v_ACL_SP_X:='';
      v_ACL_SP_Y:='';
      v_ACL_SP_Z:='';
      v_ACL_SP_AA:='';
      v_ACL_SP_AB:='';
      v_ACL_SP_AC:=0;
      v_ACL_SP_AD:=0;
      v_ACL_SP_AE:=0;
      v_ACL_SP_AF:=0;
      v_ACL_SP_AG:='';
      v_ACL_SP_AH:='';
      v_ACL_SP_AI:='';
      v_day:=0;
      v_month:=0;
      v_year:=0;


      vkgz.RESET;
      vkgz.SETFILTER(vkgz."Document No.",'%1',Artikelposten."Document No.");
      vkgz.SETFILTER(vkgz."Manufacturer Code",'%1|%2|%3|%4','57','5710','5720','5730');
      vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
      vkgz.SETFILTER(vkgz."No.",'%1',Artikelposten."Item No.");
      //vkgz.SETFILTER(vkgz."Item Shpt. Entry No.",'%1',Artikelposten."Entry No.");
      IF vkgz.FINDFIRST() THEN BEGIN
      REPEAT

      vkgk.RESET;
      vkgk.SETFILTER(vkgk."No.",'%1',vkgz."Document No.");
      IF vkgk.FINDFIRST() THEN BEGIN
      Sheet.Range('A'+j).Value := '';
      Sheet.Range('B'+j).Value := 'Nico Kossuch';

      //Sheet.Range('C'+j).Value := vkgk."Sell-to Customer No.";
      v_ACL_SP_C := PADSTR(vkgk."Sell-to Customer No.",20);
      Sheet.Range('C'+j).Value := v_ACL_SP_C;

      //Sheet.Range('D'+j).Value := vkgk."No.";
      v_ACL_SP_D := PADSTR(vkgk."No.",20);
      Sheet.Range('D'+j).Value := v_ACL_SP_D;

      Sheet.Range('E'+j).Value := vkgk."Posting Date";
      //v_ACL_SP_E := vkgk."Posting Date";
      //Sheet.Range('E'+j).Value := v_ACL_SP_E;

      v_day:=DATE2DMY(vkgk."Posting Date",1);
      v_month:=DATE2DMY(vkgk."Posting Date",2);
      v_year:=DATE2DMY(vkgk."Posting Date",3)-2000;

      IF v_day=1 THEN v_day1:='01';
      IF v_day=2 THEN v_day1:='02';
      IF v_day=3 THEN v_day1:='03';
      IF v_day=4 THEN v_day1:='04';
      IF v_day=5 THEN v_day1:='05';
      IF v_day=6 THEN v_day1:='06';
      IF v_day=7 THEN v_day1:='07';
      IF v_day=8 THEN v_day1:='08';
      IF v_day=9 THEN v_day1:='09';
      IF v_day=10 THEN v_day1:='10';
      IF v_day=11 THEN v_day1:='11';
      IF v_day=12 THEN v_day1:='12';
      IF v_day=13 THEN v_day1:='13';
      IF v_day=14 THEN v_day1:='14';
      IF v_day=15 THEN v_day1:='15';
      IF v_day=16 THEN v_day1:='16';
      IF v_day=17 THEN v_day1:='17';
      IF v_day=18 THEN v_day1:='18';
      IF v_day=19 THEN v_day1:='19';
      IF v_day=20 THEN v_day1:='20';
      IF v_day=21 THEN v_day1:='21';
      IF v_day=22 THEN v_day1:='22';
      IF v_day=23 THEN v_day1:='23';
      IF v_day=24 THEN v_day1:='24';
      IF v_day=25 THEN v_day1:='25';
      IF v_day=26 THEN v_day1:='26';
      IF v_day=27 THEN v_day1:='27';
      IF v_day=28 THEN v_day1:='28';
      IF v_day=29 THEN v_day1:='29';
      IF v_day=30 THEN v_day1:='30';
      IF v_day=31 THEN v_day1:='31';

      IF v_month=1 THEN v_month1:='01';
      IF v_month=2 THEN v_month1:='02';
      IF v_month=3 THEN v_month1:='03';
      IF v_month=4 THEN v_month1:='04';
      IF v_month=5 THEN v_month1:='05';
      IF v_month=6 THEN v_month1:='06';
      IF v_month=7 THEN v_month1:='07';
      IF v_month=8 THEN v_month1:='08';
      IF v_month=9 THEN v_month1:='09';
      IF v_month=10 THEN v_month1:='10';
      IF v_month=11 THEN v_month1:='11';
      IF v_month=12 THEN v_month1:='12';

      IF v_year=15 THEN v_year1:='15';
      IF v_year=16 THEN v_year1:='16';
      IF v_year=17 THEN v_year1:='17';
      IF v_year=18 THEN v_year1:='18';
      IF v_year=19 THEN v_year1:='19';
      IF v_year=20 THEN v_year1:='20';
      IF v_year=21 THEN v_year1:='21';


      //Sheet.Range('E'+j).Value :=FORMAT(v_month)+'/'+FORMAT(v_day)+'/'+FORMAT(v_year);
      v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
      //v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/');
      Sheet.Range('E'+j).Value := FORMAT(v_ACL_SP_E);
      Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';





      //Sheet.Range('F'+j).Value := '';
      //*********************************************************************************************************************************
      //Sheet.Range('G'+j).Value := vkgk."Bill-to Name";
      v_ACL_SP_G := PADSTR(vkgk."Bill-to Name",30);
      Sheet.Range('G'+j).Value := v_ACL_SP_G;

      //Sheet.Range('H'+j).Value := vkgk."Bill-to Address";
      v_ACL_SP_H := PADSTR(vkgk."Bill-to Address",30);
      Sheet.Range('H'+j).Value := v_ACL_SP_H;

      //Sheet.Range('I'+j).Value := vkgk."Bill-to City";
      v_ACL_SP_I := PADSTR(vkgk."Bill-to City",30);
      Sheet.Range('I'+j).Value := v_ACL_SP_I;

      //Sheet.Range('J'+j).Value := vkgk."Bill-to County";
      v_ACL_SP_J := PADSTR(vkgk."Bill-to County",2);
      Sheet.Range('J'+j).Value := v_ACL_SP_J;

      //Sheet.Range('K'+j).Value := vkgk."Bill-to Post Code";
      v_ACL_SP_K := PADSTR(vkgk."Bill-to Post Code",10);
      Sheet.Range('K'+j).Value := v_ACL_SP_K;

      //Sheet.Range('L'+j).Value := vkgk."Bill-to Country/Region Code";
      v_ACL_SP_L := PADSTR(vkgk."Bill-to Country/Region Code",2);
      Sheet.Range('L'+j).Value := v_ACL_SP_L;

      //Sheet.Range('M'+j).Value := vkgk."Ship-to Name";
      v_ACL_SP_M := PADSTR(vkgk."Ship-to Name",30);
      Sheet.Range('M'+j).Value := v_ACL_SP_M;

      //Sheet.Range('N'+j).Value := vkgk."Ship-to Address";
      v_ACL_SP_N := PADSTR(vkgk."Ship-to Address",30);
      Sheet.Range('N'+j).Value := v_ACL_SP_N;

      //Sheet.Range('O'+j).Value := vkgk."Ship-to City";
      v_ACL_SP_O := PADSTR(vkgk."Ship-to City",30);
      Sheet.Range('O'+j).Value := v_ACL_SP_O;

      //Sheet.Range('P'+j).Value := vkgk."Ship-to County";
      v_ACL_SP_P := PADSTR(vkgk."Ship-to County",2);
      Sheet.Range('P'+j).Value := v_ACL_SP_P;

      //Sheet.Range('Q'+j).Value := vkgk."Ship-to Post Code";
      v_ACL_SP_Q := PADSTR(vkgk."Ship-to Post Code",10);
      Sheet.Range('Q'+j).Value := v_ACL_SP_Q;

      //Sheet.Range('R'+j).Value := vkgk."Ship-to Country/Region Code";
      v_ACL_SP_R := PADSTR(vkgk."Ship-to Country/Region Code",2);
      Sheet.Range('R'+j).Value := v_ACL_SP_R;

      //Sheet.Range('S'+j).Value := vkgk.Endkunde;
      //Sheet.Range('T'+j).Value := vkgk."Endkunde Adresse";
      //Sheet.Range('U'+j).Value := vkgk."Endkunde Ort";
      //Sheet.Range('V'+j).Value := '';
      //Sheet.Range('W'+j).Value := vkgk."Endkunde PLZ-Code";
      //Sheet.Range('X'+j).Value := vkgk."Endkunde Land";

      //Sheet.Range('Y'+j).Value := vkgz."No.";
      v_ACL_SP_Y := PADSTR(vkgz."No.",30);
      Sheet.Range('Y'+j).Value := v_ACL_SP_Y;

      //Sheet.Range('Z'+j).Value := vkgz."No.";
      v_ACL_SP_Z := PADSTR(vkgz."No.",30);
      Sheet.Range('Z'+j).Value := v_ACL_SP_Z;

      //Sheet.Range('AA'+j).Value := vkgz.Description;
      v_ACL_SP_AA := PADSTR(vkgz.Description,30);
      Sheet.Range('AA'+j).Value := v_ACL_SP_AA;

      //Sheet.Range('AB'+j).Value := Artikelposten."Serial No.";
      v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
      Sheet.Range('AB'+j).Value := v_ACL_SP_AB;

      //Sheet.Range('AC'+j).Value := FORMAT(Artikelposten.Quantity*(-1));
      v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
      Sheet.Range('AC'+j).Value := v_ACL_SP_AC;
      END;

      Debitor.RESET;
      Debitor.SETFILTER(Debitor."No.",'%1',vkgz."Sell-to Customer No.");
      IF Debitor.FINDFIRST() THEN BEGIN
      //Sheet.Range('AI'+j).Value := Debitor.AC_Solutionpartner;
      v_ACL_SP_AI := PADSTR(Debitor.AC_Solutionpartner,30);
      Sheet.Range('AI'+j).Value := v_ACL_SP_AI;
      END;




      "Ek-Preise".RESET;
      "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
      "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
      "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
      IF "Ek-Preise".FINDFIRST() THEN BEGIN
      //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
      v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*Artikelposten.Quantity*(-1));
      Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
      // END ELSE BEGIN
      // "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
      // "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
      // IF "Ek-Preise".FINDFIRST() THEN BEGIN
      // //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
      // v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*(-1));
      // Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
      // END;
      END;






      // v_ACL_SP_AD:=(vkgz."DC-Preis (MW)"*(-1));
      // Sheet.Range('AD'+j).Value := v_ACL_SP_AD;

      v_ACL_SP_AE:=((vkgz."DC-Preis (MW)"*Artikelposten.Quantity)*(-1));
      Sheet.Range('AE'+j).Value := v_ACL_SP_AE;
      // Falls DC-Preis fehlt ****
      IF v_ACL_SP_AE=0 THEN BEGIN

      "Ek-Preise".RESET;
      "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
      "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
      "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
      IF "Ek-Preise".FINDFIRST() THEN BEGIN
      // v_ACL_SP_AD :=("Ek-Preise"."Direct Unit Cost")*(-1);
      // Sheet.Range('AD'+j).Value := v_ACL_SP_AD;
      v_ACL_SP_AE:=(("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity)*(-1));
      Sheet.Range('AE'+j).Value := v_ACL_SP_AE;

      END;






      END;

      "Ek-Preise".RESET;
      "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
      "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
      "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
      IF "Ek-Preise".FINDFIRST() THEN BEGIN
      v_ACL_SP_AF :=(((("Ek-Preise"."Direct Unit Cost")*Artikelposten.Quantity)*(-1))-v_ACL_SP_AE);
      Sheet.Range('AF'+j).Value := v_ACL_SP_AF;
      END;



      {
      "Ek-Preise".RESET;
      "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
      "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
      "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
      IF "Ek-Preise".FINDFIRST() THEN BEGIN
      //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
      v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*(-1));
      Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
      END ELSE BEGIN
      "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
      "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
      IF "Ek-Preise".FINDFIRST() THEN BEGIN
      //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
      v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*(-1));
      Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
      END;
      END;

      }





      quotedaten.RESET;
      quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkgz."Quotenr.");
      IF quotedaten.FINDFIRST() THEN BEGIN
      IF  quotedaten.Quotepreis<>0 THEN BEGIN
      //Sheet.Range('AE'+j).Value :=FORMAT((quotedaten.Quotepreis)*(-1));
      //v_ACL_SP_AE := ((quotedaten.Quotepreis)*(-1));
      //Sheet.Range('AE'+j).Value :=v_ACL_SP_AE;

      //Sheet.Range('AF'+j).Value :=FORMAT(("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis)*(-1));
      //v_ACL_SP_AF := (("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis)*(-1));
      //Sheet.Range('AF'+j).Value :=v_ACL_SP_AF;

      //Sheet.Range('AG'+j).Value := quotedaten."Quotenr. Hersteller";
      v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
      Sheet.Range('AG'+j).Value := v_ACL_SP_AG;

      //Sheet.Range('AH'+j).Value := quotedaten.Genehmigungstext;
      v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
      Sheet.Range('AH'+j).Value := v_ACL_SP_AH;
      END;
      END;

      j := INCSTR (j);
      UNTIL vkgz.NEXT=0;
      END;

      UNTIL Artikelposten.NEXT=0;
      END;
      // Ende Gutschriften

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_ACT_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_ACT_lfd.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_ACT_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE GSI_2@1140015();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FINDFIRST() THEN BEGIN
      REPEAT
      vkrz.RESET;
      vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
      vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','54');
      vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
      vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkrz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkrk."No.";
      Sheet.Range('D'+j).Value := vkrz."No.";
      Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
      v_herstell_VK_Preis:=0;

      {   //
      quotedaten.RESET;
      quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkrz."Quotenr.");
      IF quotedaten.FINDFIRST() THEN BEGIN
       IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
        IF quotedaten."Hersteller-VK-Preis" < vkrz."VK-Preis (EKW)" THEN BEGIN
      //   Sheet.Range('M'+j).Value := quotedaten."Hersteller-VK-Preis";
      //   Sheet.Range('N'+j).Value := 'USD';
         v_herstell_VK_Preis:= quotedaten."Hersteller-VK-Preis";
        END;
       END;
      END;
      }

      IF v_herstell_VK_Preis = 0 THEN BEGIN
      Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
      END ELSE BEGIN
      Sheet.Range('F'+j).Value := FORMAT(v_herstell_VK_Preis);
      END;

      IF vkrk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkrk."Currency Code";
      END;


      IF vkrk."Currency Factor"<>0 THEN BEGIN
        IF v_herstell_VK_Preis = 0 THEN BEGIN
         Sheet.Range('H'+j).Value := ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
         v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
        END ELSE BEGIN
         Sheet.Range('H'+j).Value := ((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor"));
         v_Total_Sum:=v_Total_Sum+ ((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor"));
        END;
      END ELSE BEGIN
        IF v_herstell_VK_Preis = 0 THEN BEGIN
          Sheet.Range('H'+j).Value := (vkrz."Unit Price")*(vkrz.Quantity);
          v_Total_Sum:=v_Total_Sum+((vkrz."Unit Price")*(vkrz.Quantity));
        END ELSE BEGIN
          Sheet.Range('H'+j).Value := (v_herstell_VK_Preis)*(vkrz.Quantity);
          v_Total_Sum:=v_Total_Sum+((v_herstell_VK_Preis)*(vkrz.Quantity));
        END;
      END;




      Sheet.Range('I'+j).Value := vkrk."Posting Date";





      j := INCSTR (j);
      UNTIL vkrz.NEXT=0;
      END;
      UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
      REPEAT
      vkgz.RESET;
      vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
      vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','54');
      vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
      vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
      IF vkgz.FINDFIRST() THEN BEGIN
      REPEAT
      Sheet.Range('A'+j).Value := 'TOPAS electronic Vertriebs-GmbH';
      Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
      Sheet.Range('C'+j).Value := vkgk."No.";
      Sheet.Range('D'+j).Value := vkgz."No.";
      Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
      Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
      IF vkgk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkgk."Currency Code";
      END;
      IF vkgk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
      END;

      //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
      Sheet.Range('I'+j).Value := vkgk."Posting Date";
      j := INCSTR (j);
      UNTIL vkgz.NEXT=0;
      END;
      UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;
      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GSI_TOPAS_POS_lfd_ohne_Quote-VK.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GSI_TOPAS_POS_lfd_ohne_Quote-VK.xlsx');
      Book.SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GSI_TOPAS_POS_lfd_ohne_Quote-VK.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE Bankposten_suchen@1140016();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('C:E').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Bankkto';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Datum';
      Sheet.Range('C1').Value := 'Betrag';
      Sheet.Range('D1').Value := 'Zugang';
      Sheet.Range('E1').Value := 'Abgang';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Banksaldo ausrechnen
      v_banksaldo:=0;
      sachpo.RESET;
      sachpo.SETCURRENTKEY("Posting Date");
      sachpo.SETFILTER(sachpo."G/L Account No.",'%1..%2','1700','1895');
      sachpo.SETFILTER(sachpo."Posting Date",'<=%1',v_datum_von);
      IF sachpo.FINDFIRST() THEN BEGIN
      REPEAT
      v_banksaldo:=v_banksaldo+sachpo.Amount;
      UNTIL sachpo.NEXT=0;
      END;
      v_bankw„:='EUR';
      v_bankzu:=0;
      v_bankab:=0;
      // Ende Banksaldo ausrechnen
      // Anfang Bankums„tze ausrechnen
      sachpo.RESET;
      sachpo.SETCURRENTKEY("Posting Date");
      sachpo.SETFILTER(sachpo."G/L Account No.",'%1..%2','1700','1895');

      v_bankdatum:=v_datum_von;
      sachpo.SETFILTER(sachpo."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF sachpo.FIND('-') THEN BEGIN
      REPEAT
        IF v_bankdatum>v_datum_bis THEN BEGIN
        END ELSE BEGIN
          IF v_bankdatum=sachpo."Posting Date" THEN BEGIN
           IF sachpo.Amount > 0 THEN v_bankzu := v_bankzu + sachpo.Amount;
           IF sachpo.Amount < 0 THEN v_bankab := v_bankab + sachpo.Amount;
          END ELSE BEGIN
            v_banksaldo := v_banksaldo + v_bankzu + v_bankab;
            Sheet.Range('A'+j).Value := sachpo."G/L Account No.";
            Sheet.Range('B'+j).Value := v_bankdatum;
            Sheet.Range('C'+j).Value := v_banksaldo;
            Sheet.Range('D'+j).Value := v_bankzu;
            Sheet.Range('E'+j).Value := v_bankab*(-1);
            j := INCSTR (j);
            v_bankzu := 0;
            v_bankab := 0;
            v_bankdatum := sachpo."Posting Date";
           IF sachpo.Amount > 0 THEN v_bankzu := v_bankzu + sachpo.Amount;
           IF sachpo.Amount < 0 THEN v_bankab := v_bankab + sachpo.Amount;

          END;
        END;
      UNTIL sachpo.NEXT = 0;
      END;

          Sheet.Range('A'+j).Value := sachpo."G/L Account No.";
          Sheet.Range('B'+j).Value := v_bankdatum;
          Sheet.Range('C'+j).Value := (v_banksaldo+v_bankzu+v_bankab);
          Sheet.Range('D'+j).Value := v_bankzu;
          Sheet.Range('E'+j).Value := v_bankab*(-1);
          j := INCSTR (j);

      Excel.Visible(TRUE);

      CLEAR(Excel);
    END;

    PROCEDURE Bankposten_ausgeben@1140017();
    BEGIN
    END;

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;Italic@1004 : Boolean;UnderLine@1005 : Boolean;NumberFormat@1006 : Text[30];CellType@1007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    LOCAL PROCEDURE Stichtagsabgrenzung@1000000002();
    BEGIN
      IF Abgrenz_Datum = 0D THEN
        ERROR('Es wurde kein Datum eingegeben. Report abgebrochen!');

      //Variablenbelegung
      liefnr:='LS00';
      liefzeilennr:=10;

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);

      {
      CREATE(Excel,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('M:O').NumberFormat:='0,00';
      Sheet.Range('AB:AC').NumberFormat:='0,00';

      Sheet.Range('A1').Value := 'Abgrenz_Ek';
      Sheet.Range('D1').Value := 'Abgrenz_Vk';

      Sheet.Range('A3').Value := 'Abgrenzung der stichtagsbergreifenden Champsvereinbarungen zum  '; // šberschriftszeile
      Sheet.Range('F3').Value := Abgrenz_Datum;

      Sheet.Range('A4').Value := 'Lfd.Nr.';
      Sheet.Range('B4').Value := 'Ablauf-Datum';
      Sheet.Range('C4').Value := 'Art';
      Sheet.Range('D4').Value := 'Nr.';
      Sheet.Range('E4').Value := 'ZeilenNr.';
      Sheet.Range('F4').Value := 'Belegdatum';
      Sheet.Range('G4').Value := 'Artikelnr';
      Sheet.Range('H4').Value := 'Seriennr';
      Sheet.Range('I4').Value := 'Debitorennr';
      Sheet.Range('J4').Value := 'Debitorname';
      Sheet.Range('K4').Value := 'ChampsNr';
      Sheet.Range('L4').Value := 'WartVertragNr';
      Sheet.Range('M4').Value := 'Menge';
      Sheet.Range('N4').Value := 'Einstandspreis';
      Sheet.Range('O4').Value := 'VK';
      Sheet.Range('P4').Value := 'Lizenzdatum';
      Sheet.Range('Q4').Value := 'Ablaufdatum';
      Sheet.Range('R4').Value := 'LZ in Tagen';
      Sheet.Range('S4').Value := 'Abgr in Tagen';
      Sheet.Range('T4').Value := 'Abgr EK';
      Sheet.Range('U4').Value := 'Abgr VK';
      Sheet.Range('W4').Value := 'WartVertragNr2';
      Sheet.Range('X4').Value := 'BET-Nr.';
      Sheet.Range('Y4').Value := 'ACO-Nr.';

      j := '5';                                   // <- Import in excel ab Zeile 3
      }

      RecNo := 0;

      EnterCell(1,1,'Abgrenz_Ek',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,4,'Abgrenz_Vk',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(3,1,'Abgrenzung der stichtagsbergreifenden Servicevereinbarungen zum ',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text); // šberschriftszeile
      EnterCell(3,6,FORMAT(Abgrenz_Datum),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);

      RowNo := 4;
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,'Lfd.Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ablaufdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Art',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Zeilennr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Belegdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Artikelnr',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Seriennr',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Debitorennr',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Debitorname',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Serviceartikel',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Vertragsnr',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Menge',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Einstandspreis',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'VK',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Startdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ablaufdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'LZ in Tagen',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Abgr in Tagen',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Abgr EK',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Abgr VK',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Vertragsnr2',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'BET-Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'ACO-Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);

      RowNo := 5;

      Service.RESET;
      Service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      Service.SETFILTER(Service.Art,'%1',Service.Art::Service);
      Service.SETFILTER(Service."Ablaufdatum Serviceleistung",'>%1',Abgrenz_Datum);
      Service.SETFILTER(Service.Belegdatum,'<=%1',Abgrenz_Datum);
      Service.SETFILTER(Service.Inaktiv,'%1',FALSE);

      //Eingrezungen auf bestimmte Artikel
      Service.SETFILTER(Service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      IF Service.FINDFIRST THEN BEGIN
        TotalRecNo := Service.COUNT;
        REPEAT
          Artikel.RESET;
          Artikel.SETFILTER(Artikel."No.",'%1',Service."SUP Artikelnr.");
          Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
          //   artikel.SETFILTER(artikel.Artikelgruppe,'<>%1','CHAMPS_FEE');
          IF Artikel.FINDFIRST THEN BEGIN
            LZ_rest := 0;
            vklz.RESET;
            vklz.SETFILTER(vklz."Document No.",'%1',Service."Nr.");
            vklz.SETFILTER(vklz."Line No.",'%1',Service."Belegzeilennr.");
            vklz.SETFILTER(vklz."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
            IF vklz.FINDFIRST THEN BEGIN
              {
              Sheet.Range('A'+j).Value := Service."Lfd. Nr.";
              Sheet.Range('B'+j).Value := Service."Ablaufdatum Serviceleistung";
              Sheet.Range('C'+j).Value := FORMAT(Service.Art);
              Sheet.Range('D'+j).Value := Service."Nr.";
              Sheet.Range('E'+j).Value := Service."Belegzeilennr.";
              Sheet.Range('F'+j).Value := Service.Belegdatum;
              Sheet.Range('G'+j).Value := Service."Artikelnr.";
              Sheet.Range('H'+j).Value := Service."Seriennr.";
              Sheet.Range('I'+j).Value := Service."Debitornr.";
              Sheet.Range('J'+j).Value := Service.Debitorname;
              Sheet.Range('K'+j).Value := Service."SUP Artikelnr.";
              Sheet.Range('L'+j).Value := Service."Hauptwartungsvertragsnr.";
              }
              ColumnNo := 1;
              EnterCell(RowNo,ColumnNo,Service."Lfd. Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;
              EnterCell(RowNo,ColumnNo,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
              ColumnNo := ColumnNo + 1;
              EnterCell(RowNo,ColumnNo,FORMAT(Service.Art),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;
              EnterCell(RowNo,ColumnNo,Service."Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;
              EnterCell(RowNo,ColumnNo,FORMAT(Service."Belegzeilennr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              ColumnNo := ColumnNo + 1;
              EnterCell(RowNo,ColumnNo,FORMAT(Service.Belegdatum),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
              ColumnNo := ColumnNo + 1;
              EnterCell(RowNo,ColumnNo,Service."Artikelnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;
              EnterCell(RowNo,ColumnNo,Service."Seriennr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;
              EnterCell(RowNo,ColumnNo,Service."Debitornr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;
              EnterCell(RowNo,ColumnNo,Service.Debitorname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;
              EnterCell(RowNo,ColumnNo,Service."SUP Artikelnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;
              EnterCell(RowNo,ColumnNo,Service."Hauptwartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;

              IF (liefnr = vklz."Document No.") AND (liefzeilennr = vklz."Line No.") THEN BEGIN
              END ELSE BEGIN
                {
                Sheet.Range('M'+j).Value := vklz.Quantity;
                Sheet.Range('N'+j).Value := vklz."Unit Cost (LCY)";
                Sheet.Range('O'+j).Value := vklz."Unit Price";
                }
                EnterCell(RowNo,ColumnNo,FORMAT(vklz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,FORMAT(vklz."Unit Cost (LCY)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,FORMAT(vklz."Unit Price"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;

                LZ_tage := (Service."Ablaufdatum Serviceleistung" - Service.Lizenzdatum - 1);
                LZ_tage_stich := (Service."Ablaufdatum Serviceleistung" - Abgrenz_Datum - 1);
                LZ_tage_bewert := 0;
                {
                Sheet.Range('P'+j).Value := Service.Lizenzdatum;
                Sheet.Range('Q'+j).Value := Service."Ablaufdatum Serviceleistung";
                Sheet.Range('R'+j).Value := LZ_tage;
                }
                EnterCell(RowNo,ColumnNo,FORMAT(Service.Lizenzdatum),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,FORMAT(LZ_tage),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;

                IF LZ_tage_stich > LZ_tage THEN BEGIN
                  LZ_tage_bewert := LZ_tage;
                END ELSE BEGIN
                  LZ_tage_bewert := LZ_tage_stich;
                END;
                {
                Sheet.Range('S'+j).Value := LZ_tage_bewert;
                Sheet.Range('T'+j).Value := ROUND((vklz."Unit Cost (LCY)" / LZ_tage * LZ_tage_bewert * vklz.Quantity),0.01);
                Sheet.Range('U'+j).Value := ROUND((vklz."VK-Preis (MW)" / LZ_tage * LZ_tage_bewert * vklz.Quantity),0.01);
                }
                EnterCell(RowNo,ColumnNo,FORMAT(LZ_tage_bewert),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,FORMAT(ROUND((vklz."Unit Cost (LCY)" / LZ_tage * LZ_tage_bewert * vklz.Quantity),0.01)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,FORMAT(ROUND((vklz."VK-Preis (MW)" / LZ_tage * LZ_tage_bewert * vklz.Quantity),0.01)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;

                sum_ek := (sum_ek + (ROUND(vklz."Unit Cost (LCY)" / LZ_tage * LZ_tage_bewert * vklz.Quantity)));
                sum_vk := (sum_vk + (ROUND(vklz."VK-Preis (MW)" / LZ_tage * LZ_tage_bewert * vklz.Quantity)));
                liefnr := vklz."Document No.";
                liefzeilennr := vklz."Line No.";
                {
                Sheet.Range('W'+j).Value := Service."Wartungsvertragsnr.";
                Sheet.Range('X'+j).Value := Service."BET-Nr.";
                Sheet.Range('Y'+j).Value := Service."ACO Nr.";
                }
                EnterCell(RowNo,ColumnNo,Service."Wartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,Service."BET-Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,Service."ACO Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;
              END;
              {
              j := INCSTR(j);
              }
              RowNo := RowNo + 1;
            END;
            // Anfang Lieferscheine aus Beleghistorie
              LZ_rest := 0;
              beleghis_ek := 0;
              beleghis.RESET;
              beleghis.SETFILTER("Belegnr.",'%1',Service."Nr.");
              beleghis.SETFILTER("Zeilennr.",'%1',Service."Belegzeilennr.");
              beleghis.SETFILTER(Herstellercode,'<>%1&<>%2&<>%3','5710','5720','5730');
              IF beleghis.FINDFIRST THEN BEGIN
                {
                Sheet.Range('A'+j).Value := Service."Lfd. Nr.";
                Sheet.Range('B'+j).Value := Service."Ablaufdatum Serviceleistung";
                Sheet.Range('C'+j).Value := FORMAT(Service.Art);
                Sheet.Range('D'+j).Value := Service."Nr.";
                Sheet.Range('E'+j).Value := Service."Belegzeilennr.";
                Sheet.Range('F'+j).Value := Service.Belegdatum;
                Sheet.Range('G'+j).Value := Service."Artikelnr.";
                Sheet.Range('H'+j).Value := Service."Seriennr.";
                Sheet.Range('I'+j).Value := Service."Debitornr.";
                Sheet.Range('J'+j).Value := Service.Debitorname;
                Sheet.Range('K'+j).Value := Service."SUP Artikelnr.";
                Sheet.Range('L'+j).Value := Service."Hauptwartungsvertragsnr.";
                }
                ColumnNo := 1;
                EnterCell(RowNo,ColumnNo,Service."Lfd. Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,FORMAT(Service.Art),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,Service."Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,FORMAT(Service."Belegzeilennr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,FORMAT(Service.Belegdatum),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,Service."Artikelnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,Service."Seriennr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,Service."Debitornr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,Service.Debitorname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,Service."SUP Artikelnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;
                EnterCell(RowNo,ColumnNo,Service."Hauptwartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;

                IF (liefnr = beleghis."Belegnr.") AND (liefzeilennr = beleghis."Zeilennr.") THEN BEGIN
                END ELSE BEGIN
                  {
                  Sheet.Range('M'+j).Value := beleghis.Menge;
                  }
                  EnterCell(RowNo,ColumnNo,FORMAT(beleghis.Menge),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  ColumnNo := ColumnNo + 1;
                  beleghis_ek := ROUND((beleghis."Einstandspreis MW" / ((100 + Artikel."Handlingskosten %" + Artikel."Zollsatz %") / 100)),0.01);
                  {
                  Sheet.Range('N'+j).Value := beleghis_ek;
                  Sheet.Range('O'+j).Value := beleghis."VK-Preis";
                  }
                  EnterCell(RowNo,ColumnNo,FORMAT(beleghis_ek),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,FORMAT(beleghis."VK-Preis"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  ColumnNo := ColumnNo + 1;

                  LZ_tage := (Service."Ablaufdatum Serviceleistung" - Service.Lizenzdatum - 1);
                  LZ_tage_stich := (Service."Ablaufdatum Serviceleistung" - Abgrenz_Datum - 1);
                  LZ_tage_bewert := 0;
                  {
                  Sheet.Range('P'+j).Value := Service.Lizenzdatum;
                  Sheet.Range('Q'+j).Value := Service."Ablaufdatum Serviceleistung";
                  Sheet.Range('R'+j).Value := LZ_tage;
                  }
                  EnterCell(RowNo,ColumnNo,FORMAT(Service.Lizenzdatum),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,FORMAT(LZ_tage),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  ColumnNo := ColumnNo + 1;

                  IF LZ_tage_stich > LZ_tage THEN BEGIN
                    LZ_tage_bewert := LZ_tage;
                  END ELSE BEGIN
                    LZ_tage_bewert := LZ_tage_stich;
                  END;
                  {
                  Sheet.Range('S'+j).Value := LZ_tage_bewert;
                  Sheet.Range('T'+j).Value := ROUND((beleghis_ek / LZ_tage * LZ_tage_bewert * beleghis.Menge),0.01);
                  Sheet.Range('U'+j).Value := ROUND((beleghis."VK-Preis" / LZ_tage * LZ_tage_bewert * beleghis.Menge),0.01);
                  }
                  EnterCell(RowNo,ColumnNo,FORMAT(LZ_tage_bewert),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,FORMAT(ROUND((beleghis_ek / LZ_tage * LZ_tage_bewert * beleghis.Menge),0.01)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,FORMAT(ROUND((beleghis."VK-Preis" / LZ_tage * LZ_tage_bewert * beleghis.Menge),0.01)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  ColumnNo := ColumnNo + 1;

                  sum_ek := (sum_ek + (ROUND(beleghis_ek / LZ_tage * LZ_tage_bewert * beleghis.Menge)));
                  sum_vk := (sum_vk + (ROUND(beleghis."VK-Preis" / LZ_tage * LZ_tage_bewert * beleghis.Menge)));
                  liefnr := beleghis."Belegnr.";
                  liefzeilennr := beleghis."Zeilennr.";
                  {
                  Sheet.Range('W'+j).Value := Service."Wartungsvertragsnr.";
                  Sheet.Range('X'+j).Value := Service."BET-Nr.";
                  Sheet.Range('Y'+j).Value := Service."ACO Nr.";
                  }
                  EnterCell(RowNo,ColumnNo,Service."Wartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Service."BET-Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                  EnterCell(RowNo,ColumnNo,Service."ACO Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  ColumnNo := ColumnNo + 1;
                END;
                {
                j := INCSTR(j);
                }
                RowNo := RowNo + 1;
              END;
      //  Ende Lieferscheine holen aus Beleghistorie
          END;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
        UNTIL Service.NEXT = 0;
      END;
      {
      Sheet.Range('B1').Value := sum_ek;
      Sheet.Range('E1').Value := sum_vk;
      }

      EnterCell(1,2,FORMAT(sum_ek),FALSE,FALSE,FALSE,'0,00#0.00 °',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,5,FORMAT(sum_vk),FALSE,FALSE,FALSE,'0,00#0.00 °',TempExcelBuffer."Cell Type"::Number);

      {
      Excel.Visible(TRUE);
      }

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,'Serviceabgrenzung');
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2','Serviceabgrenzung',''),30),COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          //TempExcelBuffer.OpenExcelWithoutAutoFit('Serviceabgrenzung','Serviceabgrenzung' + ExcelFileExtensionTok,'',TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    EVENT Sheet@1000000103::SelectionChange@1543(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Sheet@1000000103::BeforeDoubleClick@1537(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000103::BeforeRightClick@1534(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000103::Activate@304();
    BEGIN
    END;

    EVENT Sheet@1000000103::Deactivate@1530();
    BEGIN
    END;

    EVENT Sheet@1000000103::Calculate@279();
    BEGIN
    END;

    EVENT Sheet@1000000103::Change@1545(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Sheet@1000000103::FollowHyperlink@1470(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Sheet@1000000103::PivotTableUpdate@2156(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Sheet@1000000103::PivotTableAfterValueChange@2886(TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Sheet@1000000103::PivotTableBeforeAllocateChanges@2889(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000103::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000103::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Sheet@1000000103::PivotTableChangeSync@2894(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000105::Open@1923();
    BEGIN
    END;

    EVENT Book@1000000105::Activate@304();
    BEGIN
    END;

    EVENT Book@1000000105::Deactivate@1530();
    BEGIN
    END;

    EVENT Book@1000000105::BeforeClose@1546(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::BeforeSave@1547(SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::BeforePrint@1549(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::NewSheet@1550(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000105::AddinInstall@1552();
    BEGIN
    END;

    EVENT Book@1000000105::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Book@1000000105::WindowResize@1554(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Book@1000000105::WindowActivate@1556(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Book@1000000105::WindowDeactivate@1557(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Book@1000000105::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Book@1000000105::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000105::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000105::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000105::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Book@1000000105::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Book@1000000105::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000105::PivotTableCloseConnection@2158(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000105::PivotTableOpenConnection@2159(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000105::Sync@2266(SyncEventType@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000105::BeforeXmlImport@2283(Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::AfterXmlImport@2285(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000105::BeforeXmlExport@2287(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::AfterXmlExport@2288(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000105::RowsetComplete@2610(Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Book@1000000105::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000105::SheetPivotTableChangeSync@2899(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000105::AfterSave@2900(Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::NewChart@2901(Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    EVENT Excel@1000000106::NewWorkbook@1565(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookOpen@1567(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookActivate@1568(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookDeactivate@1569(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookBeforeClose@1570(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookBeforeSave@1571(Wb@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookBeforePrint@1572(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookNewSheet@1573(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookAddinInstall@1574(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookAddinUninstall@1575(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000106::WindowResize@1554(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Excel@1000000106::WindowActivate@1556(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Excel@1000000106::WindowDeactivate@1557(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookPivotTableCloseConnection@2160(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookPivotTableOpenConnection@2161(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookSync@2289(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SyncEventType@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookBeforeXmlImport@2290(Wb@1000000004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookAfterXmlImport@2291(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookBeforeXmlExport@2292(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookAfterXmlExport@2293(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookRowsetComplete@2611(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::AfterCalculate@2612();
    BEGIN
    END;

    EVENT Excel@1000000106::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000106::ProtectedViewWindowOpen@2903(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000106::ProtectedViewWindowBeforeEdit@2905(Pvw@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::ProtectedViewWindowBeforeClose@2906(Pvw@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";Reason@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::ProtectedViewWindowResize@2908(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000106::ProtectedViewWindowActivate@2909(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000106::ProtectedViewWindowDeactivate@2910(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookAfterSave@2911(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookNewChart@2912(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    BEGIN
    END.
  }
}

