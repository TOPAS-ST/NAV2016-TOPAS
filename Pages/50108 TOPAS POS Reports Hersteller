OBJECT Page 50108 TOPAS POS Reports Hersteller
{
  OBJECT-PROPERTIES
  {
    Date=02.09.24;
    Time=11:16:22;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    LinksAllowed=No;
    OnOpenPage=BEGIN
                 v_day := DATE2DMY(WORKDATE,1);         //Tag ermitteln
                 v_datum_bis := WORKDATE-v_day;         //letzter Tag des Vormonats ermitteln
                 v_day := DATE2DMY(v_datum_bis,1);      //Anzahl Tage des Monats ermitteln
                 v_datum_von := v_datum_bis-v_day + 1;  //Erster Tag des Monats ermitteln
                 v_day := 0;
               END;

    ActionList=ACTIONS
    {
      { 1000000000;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000001;1 ;Action    ;
                      Name=Ausfhren;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ExecuteBatch;
                      PromotedCategory=Process;
                      OnAction=BEGIN

                                 // ANFANG šberprfung ob mehrere H„kchen gesetzt sind
                                 var_anzahl_h„kchen:=0;
                                 IF (v_Lin_ACS=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (v_Lin_ACL=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (v_Lin_GSI=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (v_Lin_XMO=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (v_Lin_ICplus=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (v_Lin_NIS=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (v_Lin_GAIN=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (v_Lin_FOX=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (v_Lin_HAL=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (v_Lin_CIR=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_Lin_AKROS=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_Lin_DIGI=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_Lin_FER=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_Lin_DSP=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_Lin_OVT=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF v_anlkartei=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF v_anlber=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF v_anlspiegel=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_Lin_GSI_2=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_bank=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_Abgrenz=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_Prov=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_TEST=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_offene_posten=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_prov_belege=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_stat_bund=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_kre_stat_bund=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_deb_service_MWSt_umstell=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_deb_service_MWSt_umstell_gesamtliste=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_deb_service_MWSt_umstell_test=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF var_anzahl_h„kchen>1 THEN

                                 ERROR('Es wurden mehrere H„kchen gesetzt. Report abgebrochen!');
                                 // ENDE šberprfung ob mehrere H„kchen gesetzt sind

                                 IF v_Lin_ACS=TRUE THEN ACS;
                                 //IF v_Lin_ACL=TRUE THEN ACL;
                                 IF v_Lin_ACL=TRUE THEN ACL_Neu;
                                 IF v_Lin_DIGI=TRUE THEN DIGI_Neu;
                                 //IF v_Lin_GSI=TRUE THEN GSI;
                                 IF v_Lin_GSI=TRUE THEN GSI_Neu;
                                 //IF v_Lin_XMO=TRUE THEN XMO;
                                 IF v_Lin_XMO=TRUE THEN XMO_Neu;
                                 //IF v_Lin_RIC=TRUE THEN RIC;
                                 IF v_Lin_ICplus=TRUE THEN ICplus;
                                 IF v_Lin_NIS=TRUE THEN NIS_Neu;
                                 //IF v_Lin_GAIN=TRUE THEN GAIN;
                                 IF v_Lin_GAIN=TRUE THEN GAIN_Neu;
                                 //IF v_Lin_FOX=TRUE THEN FOX;
                                 IF v_Lin_FOX=TRUE THEN FOX_Neu;
                                 //IF v_Lin_HAL=TRUE THEN HALO;
                                 IF v_Lin_HAL=TRUE THEN HALO_Neu;
                                 IF v_Lin_CIR=TRUE THEN CIRRUS;
                                 //IF v_Lin_AKROS=TRUE THEN AKROS;
                                 IF v_Lin_AKROS=TRUE THEN AKROS_Neu;
                                 //IF v_Lin_FER=TRUE THEN FERRARI;
                                 IF v_Lin_FER=TRUE THEN FERRARI_Neu;
                                 //IF v_Lin_DSP=TRUE THEN DSP;
                                 IF v_Lin_DSP=TRUE THEN DSP_Neu;
                                 IF v_Lin_OVT=TRUE THEN OVT_Neu;
                                 IF v_Lin_GSI_2=TRUE THEN GSI_2;
                                 IF v_bank=TRUE THEN Bankposten_suchen;
                                 IF v_Abgrenz=TRUE THEN Stichtagsabgrenzung;
                                 IF v_Prov=TRUE THEN "Provisionsabrechnung VK-Umsatz";
                                 IF v_TEST=TRUE THEN TEST;
                                 IF v_offene_posten=TRUE THEN offene_Posten_ausgeben;
                                 IF v_prov_belege=TRUE THEN "Provisionsabrechnung VK-Umsatz aus Tabelle Belege";
                                 IF v_stat_bund=TRUE THEN Prf_Meld_Stat_Bundesamt;
                                 IF v_kre_stat_bund=TRUE THEN Prf_Meld_Kre_Stat_Bundesamt;
                                 //IF v_kre_stat_bund=TRUE THEN Meld_Kre_Stat_Bundesamt;
                                 IF v_deb_service_MWSt_umstell=TRUE THEN MWSt_Umstell_auslauf_Service;
                                 IF v_deb_service_MWSt_umstell_gesamtliste=TRUE THEN MWSt_Umstell_auslauf_Service_Gesamtliste;
                                 IF v_deb_service_MWSt_umstell_test=TRUE THEN MWSt_Umstell_TEST;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000002;;Container;
                Name=TOPAS POS Reports Hersteller;
                ContainerType=ContentArea }

    { 1000000003;1;Group  ;
                Name=Allgemein;
                GroupType=Group }

    { 1000000004;2;Field  ;
                Name=Datum von :;
                SourceExpr=v_datum_von }

    { 1000000005;2;Field  ;
                Name=Datum bis :;
                SourceExpr=v_datum_bis }

    { 1000000039;2;Field  ;
                Name=Mit EK-Werten ausfhren;
                SourceExpr=v_ek_mit_ausgeben }

    { 1000000006;1;Group  ;
                Name=Linien;
                GroupType=Group }

    { 1000000046;2;Field  ;
                Name=DIGI Report ausfhren;
                SourceExpr=v_Lin_DIGI }

    { 1000000007;2;Field  ;
                Name=GSI Report ausfhren;
                SourceExpr=v_Lin_GSI }

    { 1000000008;2;Field  ;
                Name=XMOS Report ausfhren;
                SourceExpr=v_Lin_XMO }

    { 1000000045;2;Field  ;
                Name=NIS Report ausfhren;
                SourceExpr=v_Lin_NIS }

    { 1000000009;2;Field  ;
                Name=IC+ Report ausfhren;
                SourceExpr=v_Lin_ICplus }

    { 1000000010;2;Field  ;
                Name=GAIN Report ausfhren;
                SourceExpr=v_Lin_GAIN }

    { 1000000011;2;Field  ;
                Name=FOX Report ausfhren;
                SourceExpr=v_Lin_FOX }

    { 1000000012;2;Field  ;
                Name=HALO Report ausfhren;
                SourceExpr=v_Lin_HAL }

    { 1000000013;2;Field  ;
                Name=ACS Report ausfhren;
                SourceExpr=v_Lin_ACS }

    { 1000000014;2;Field  ;
                Name=ACL Report ausfhren;
                SourceExpr=v_Lin_ACL }

    { 1000000015;2;Field  ;
                Name=AKROS Report ausfhren;
                SourceExpr=v_Lin_AKROS }

    { 1000000016;2;Field  ;
                Name=CIRRUS Report ausfhren;
                SourceExpr=v_Lin_CIR }

    { 1000000017;2;Field  ;
                Name=FERRARI Report ausfhren;
                SourceExpr=v_Lin_FER }

    { 1000000018;2;Field  ;
                Name=DSP GROUP Report ausfhren;
                SourceExpr=v_Lin_DSP }

    { 1000000019;2;Field  ;
                Name=GSI Report ohne Q-Vk ausfhren;
                SourceExpr=v_Lin_GSI_2 }

    { 1000000036;2;Field  ;
                Name=OVT Report ausfhren;
                SourceExpr=v_Lin_OVT }

    { 1000000020;2;Field  ;
                Name=Test-Report ausfhren;
                SourceExpr=v_TEST }

    { 1000000021;1;Group  ;
                Name=Bankposten;
                GroupType=Group }

    { 1000000022;2;Field  ;
                Name=(Datum von - bis eintragen);
                SourceExpr=v_bank }

    { 1000000035;2;Field  ;
                CaptionML=DEU=nur ausfllen wenn 1 Bankkonto gelistet werden soll;
                SourceExpr=v_bankkto }

    { 1000000025;1;Group  ;
                Name=Service Abgrenzung;
                GroupType=Group }

    { 1000000027;2;Field  ;
                Name=Abgrenzung ausfhren;
                SourceExpr=v_Abgrenz }

    { 1000000026;2;Field  ;
                Name=Abgrenz;
                CaptionML=DEU=Abgrenzungsdatum (z.B.: 30.06.2018):;
                SourceExpr=Abgrenz_Datum }

    { 1000000023;1;Group  ;
                CaptionML=DEU=Provisionsabrechnung;
                GroupType=Group }

    { 1000000024;2;Field  ;
                Name=Prov;
                CaptionML=DEU=Prov ausfhren (Datum oben eingeben);
                SourceExpr=v_Prov }

    { 1000000028;1;Group  ;
                Name=Offene Posten Liste;
                GroupType=Group }

    { 1000000029;2;Field  ;
                Name=OP Liste starten;
                SourceExpr=v_offene_posten }

    { 1000000030;1;Group  ;
                Name=Prov Abrech VK-Umsatz Tab Belege;
                GroupType=Group }

    { 1000000031;2;Field  ;
                Name=Prov. Ausw. VK-Umsatz Tab Belege;
                SourceExpr=v_prov_belege }

    { 1000000032;1;Group  ;
                Name=Meldungen;
                GroupType=Group }

    { 1000000033;2;Field  ;
                Name=Meldung Stat. Bundesamt;
                SourceExpr=v_stat_bund }

    { 1000000034;2;Field  ;
                Name=Meldung Kre Stat. Bundesamt;
                SourceExpr=v_kre_stat_bund }

    { 1000000037;1;Group  ;
                Name=MWSt-Umstell ausl S-Vertr„ge;
                CaptionML=DEU=MWSt-Umstellung auslaufende Service-Vertr„ge;
                GroupType=Group }

    { 1000000038;2;Field  ;
                CaptionML=DEU=<Debitor-Nr. nach der gesucht werden soll :>;
                SourceExpr=v_deb_nr }

    { 1000000040;2;Field  ;
                CaptionML=DEU=<Ablauf-Datum von :>;
                SourceExpr=v_datum_von1 }

    { 1000000042;2;Field  ;
                CaptionML=DEU=Programm ausfhren;
                SourceExpr=v_deb_service_MWSt_umstell }

    { 1000000041;2;Field  ;
                CaptionML=DEU=<Ablauf-Datum bis :>;
                SourceExpr=v_datum_bis1 }

    { 1000000043;2;Field  ;
                Name=<v_deb_service_MWSt_umstell_ge>;
                CaptionML=DEU=Programm Beleghistorie ausfhren;
                SourceExpr=v_deb_service_MWSt_umstell_gesamtliste }

    { 1000000044;2;Field  ;
                Name=<v_deb_service_MWSt:umstell_te>;
                CaptionML=DEU=Programm Testversion ausfhren;
                SourceExpr=v_deb_service_MWSt_umstell_test }

  }
  CODE
  {
    VAR
      wshFile@1000000107 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      Excel@1000000106 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Book@1000000105 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Range@1000000104 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Sheet@1000000103 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      j@1000000102 : Text[30];
      Word@1000000100 : Integer;
      betragmw@1000000099 : Decimal;
      waehrung@1000000098 : Text[30];
      waecode@1000000097 : Text[30];
      betragmw2@1000000096 : Decimal;
      waehrung2@1000000095 : Text[30];
      vkrk@1000000094 : Record 112;
      vkrz@1000000093 : Record 113;
      vklk@1000000092 : Record 110;
      vklz@1000000091 : Record 111;
      vkgk@1000000090 : Record 114;
      vkgz@1000000089 : Record 115;
      Debitor@1000000088 : Record 18;
      quotedaten@1000000087 : Record 50014;
      "Ek-Preise"@1000000086 : Record 7012;
      Artikel@1000000085 : Record 27;
      Artikelposten@1000000084 : Record 32;
      Artpost@1000000083 : Record 32;
      EK_Lief@1000000082 : Record 121;
      Kontakt@1000000081 : Record 5050;
      vkk@1000000080 : Record 36;
      vkz@1000000079 : Record 37;
      w„kurs@1000000078 : Record 330;
      ValueEntryRelation@1000000196 : Record 6508;
      ValueEntry@1000000195 : Record 5802;
      ItemLedgerEntry@1000000194 : Record 32;
      v_endkunde@1000000077 : Text[30];
      artre@1000000076 : Text[30];
      artgu@1000000075 : Text[30];
      v_datum_von@1000000074 : Date;
      v_datum_von1@1000000178 : Date;
      v_datum_bis@1000000073 : Date;
      v_datum_bis1@1000000179 : Date;
      v_Lin_ACL@1000000072 : Boolean;
      v_Lin_ACS@1000000071 : Boolean;
      v_Lin_AKROS@1000000070 : Boolean;
      v_Lin_DIGI@1000000192 : Boolean;
      v_Lin_GSI@1000000069 : Boolean;
      v_Lin_GSI_2@1000000068 : Boolean;
      v_Lin_XMO@1000000067 : Boolean;
      v_Lin_ICplus@1000000066 : Boolean;
      v_Lin_NIS@1000000191 : Boolean;
      v_Lin_GAIN@1000000065 : Boolean;
      v_Lin_FOX@1000000064 : Boolean;
      v_Lin_HAL@1000000063 : Boolean;
      v_Lin_CIR@1000000062 : Boolean;
      v_Lin_FER@1000000061 : Boolean;
      v_Lin_DSP@1000000060 : Boolean;
      v_Lin_OVT@1000000175 : Boolean;
      v_TEST@1000000059 : Boolean;
      v_Total_Sum@1000000058 : Decimal;
      v_Total_sum1@1000000057 : Decimal;
      v_day@1000000056 : Integer;
      v_day1@1000000055 : Text[2];
      v_month@1000000054 : Integer;
      v_month1@1000000053 : Text[2];
      v_month3@1000000176 : Text[3];
      v_year@1000000052 : Integer;
      v_year1@1000000051 : Text[2];
      v_datum_1@1000000050 : Text[9];
      v_ACL_SP_A@1000000049 : Text[20];
      v_ACL_SP_B@1000000048 : Text[30];
      v_ACL_SP_C@1000000047 : Text[20];
      v_ACL_SP_D@1000000046 : Text[20];
      v_ACL_SP_E@1000000045 : Text[8];
      v_ACL_SP_F@1000000044 : Text[20];
      v_ACL_SP_G@1000000043 : Text[30];
      v_ACL_SP_H@1000000042 : Text[30];
      v_ACL_SP_I@1000000041 : Text[30];
      v_ACL_SP_J@1000000040 : Text[2];
      v_ACL_SP_K@1000000039 : Text[10];
      v_ACL_SP_L@1000000038 : Text[2];
      v_ACL_SP_M@1000000037 : Text[30];
      v_ACL_SP_N@1000000036 : Text[30];
      v_ACL_SP_O@1000000035 : Text[30];
      v_ACL_SP_P@1000000034 : Text[2];
      v_ACL_SP_Q@1000000033 : Text[10];
      v_ACL_SP_R@1000000032 : Text[2];
      v_ACL_SP_S@1000000031 : Text[30];
      v_ACL_SP_T@1000000030 : Text[30];
      v_ACL_SP_U@1000000029 : Text[30];
      v_ACL_SP_V@1000000028 : Text[2];
      v_ACL_SP_W@1000000027 : Text[10];
      v_ACL_SP_X@1000000026 : Text[2];
      v_ACL_SP_Y@1000000025 : Text[30];
      v_ACL_SP_Z@1000000024 : Text[30];
      v_ACL_SP_AA@1000000023 : Text[30];
      v_ACL_SP_AB@1000000022 : Text[30];
      v_ACL_SP_AC@1000000021 : Decimal;
      v_ACL_SP_AD@1000000020 : Decimal;
      v_ACL_SP_AE@1000000019 : Decimal;
      v_ACL_SP_AF@1000000018 : Decimal;
      v_ACL_SP_AG@1000000017 : Text[20];
      v_ACL_SP_AH@1000000016 : Text[20];
      v_ACL_SP_AI@1000000015 : Text[30];
      v_ACL_SP_AJ@1000000014 : Text[10];
      v_ACL_SP_AK@1000000146 : Decimal;
      v_ACL_SP_AL@1000000147 : Decimal;
      v_ACL_SP_AM@1000000148 : Decimal;
      v_lagerbestand@1000000013 : Decimal;
      v_aubestand@1000000012 : Decimal;
      v_au_name@1000000011 : Text[50];
      v_au_debnr@1000000010 : Code[10];
      v_herstell_VK_Preis@1000000009 : Decimal;
      tab6507@1000000008 : Record 6507;
      sachpo@1000000007 : Record 17;
      bankpo@1000000145 : Record 271;
      bankkto@1000000170 : Record 270;
      v_bankkto@1000000171 : Code[10];
      v_bank@1000000006 : Boolean;
      v_banksaldo@1000000005 : Decimal;
      v_bankzu@1000000004 : Decimal;
      v_bankab@1000000003 : Decimal;
      v_bankbewert@1000000144 : Decimal;
      v_bankart@1000000002 : Text[10];
      v_bankdatum@1000000001 : Date;
      v_bankw„@1000000000 : Code[10];
      Text000@1000000115 : TextConst 'DEU=Daten werden analysiert ...\\;ENU=Analyzing Data...\\';
      Text001@1000000114 : TextConst 'DEU=Hersteller;ENU=Manufacturer';
      Text002@1000000113 : TextConst 'DEU=Arbeitsmappe aktualisieren;ENU=Update Workbook';
      ExcelFileExtensionTok@1000000117 : TextConst '@@@={Locked};DEU=.xlsx;ENU=.xlsx';
      NewFileDirectory@1000000116 : TextConst 'DEU=F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\';
      TempExcelBuffer@1000000112 : TEMPORARY Record 370;
      FileMgt@1000000108 : Codeunit 419;
      ServerFileName@1000000111 : Text;
      SheetName@1000000110 : Text[250];
      DoUpdateExistingWorksheet@1000000109 : Boolean;
      Testmode@1000000123 : Boolean;
      Window@1000000122 : Dialog;
      RecNo@1000000121 : Integer;
      TotalRecNo@1000000120 : Integer;
      RowNo@1000000119 : Integer;
      ColumnNo@1000000118 : Integer;
      Abgrenz_Datum@1000000125 : Date;
      Service@1000000126 : Record 50024;
      sum_ek@1000000127 : Decimal;
      sum_vk@1000000128 : Decimal;
      sum_vk_EUR@1000000183 : Decimal;
      sum_vk_USD@1000000182 : Decimal;
      liefnr@1000000129 : Code[10];
      liefzeilennr@1000000130 : Integer;
      LZ_tage@1000000131 : Integer;
      LZ_tage_stich@1000000132 : Integer;
      LZ_tage_bewert@1000000133 : Integer;
      LZ_tage_abgrenz@1000000134 : Integer;
      LZ_rest@1000000135 : Integer;
      v_Abgrenz@1000000136 : Boolean;
      beleghis@1000000137 : Record 50008;
      beleghis1@1000000180 : Record 50008;
      beleghis_ek@1000000138 : Decimal;
      Text003@1000000101 : TextConst 'DEU=Excel Export erfolgreich abgeschlossen.';
      v_betrag@1000000139 : Decimal;
      v_marge@1000000140 : Decimal;
      v_margePro@1000000141 : Decimal;
      v_Prov@1000000142 : Boolean;
      Deb_Pos@1000000124 : Record 21;
      v_offene_posten@1000000143 : Boolean;
      tab_belege@1000000149 : Record 50010;
      v_prov_belege@1000000150 : Boolean;
      vkk_arch@1000000151 : Record 5107;
      v_stat_bund@1000000152 : Boolean;
      v_kre_stat_bund@1000000153 : Boolean;
      var_kurs@1000000154 : Decimal;
      ekrk@1000000155 : Record 122;
      ekrz@1000000156 : Record 123;
      ekgk@1000000157 : Record 124;
      ekgz@1000000158 : Record 125;
      var_anzahl_h„kchen@1000000159 : Integer;
      v_zollpos@1000000160 : Record 260;
      v_zollposnr@1000000161 : Code[20];
      Kreditor@1000000162 : Record 23;
      v_message@1000000163 : Boolean;
      Mess01@1000000164 : TextConst 'DEU=Es wurden fr die Meldung keine Artikel ohne Zolltarif-Nr. gefunden. Programm l„uft weiter .....';
      v_message1@1000000165 : Boolean;
      v_sum_wert@1000000166 : Decimal;
      v_sum_wert2@1000000193 : Decimal;
      v_sum_gewicht@1000000167 : Decimal;
      v_sum_menge@1000000169 : Decimal;
      v_deb_nr@1000000168 : Code[20];
      v_ek_mit_ausgeben@1000000172 : Boolean;
      tab_ausgl_posten@1000000173 : Record 339;
      tab_eklz@1000000174 : Record 121;
      v_deb_service_MWSt_umstell@1000000177 : Boolean;
      v_deb_service_MWSt_umstell_gesamtliste@1000000181 : Boolean;
      v_deb_service_MWSt_umstell_test@1000000184 : Boolean;
      doppel_art@1000000185 : Code[20];
      doppel_au@1000000186 : Code[10];
      doppel_re@1000000187 : Code[10];
      v_artpos_reqty@1000000188 : Decimal;
      v_ek_epreis@1000000189 : Decimal;
      v_l„nge@1000000190 : Integer;
      InvoiceRowID@1000000197 : Text;
      serial_datecode_text@1000000198 : Text;

    PROCEDURE ACS@1000000001();
    BEGIN
      v_Total_Sum := 0;

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);

      RecNo := 0;
      RowNo := 1;
      {
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,'POS Vendor Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Sales Rep Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To Acct# or Customer #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Invoice Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Invoice or Ship Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'PO Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To Adress',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To State',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To Zip',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Bill To Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ship To Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ship To Adress',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ship To City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ship To State',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ship To Zip',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Ship To Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'EndUser Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'EndUser Adress',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'EndUser City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'EndUser State',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'EndUser Zip',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'EndUser Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Distributer Item #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'AudioCodes Item #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Item Description',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Serial #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Quantity',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Extended Cost (Euro)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Extended Net Cost (Euro)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Discounts/Rebates (Euro)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'DPA Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'DPA Description',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'End User Application',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,'Vendor No',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      }

      EnterCell(RowNo,1,'POS Vendor Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Sales Rep Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Bill To Acct# or Customer #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Invoice Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Invoice or Ship Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'PO Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Bill To Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Bill To Adress',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Bill To City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Bill To State',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Bill To Zip',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Bill To Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Ship To Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Ship To Adress',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Ship To City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Ship To State',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'Ship To Zip',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'Ship To Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'EndUser Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'EndUser Adress',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'EndUser City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'EndUser State',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'EndUser Zip',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'EndUser Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,25,'Distributer Item #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,26,'AudioCodes Item #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,27,'Item Description',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,28,'Serial #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,29,'Quantity',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,30,'Extended Cost',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,31,'Extended Net Cost',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,32,'Discounts/Rebates',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,30,'Extended Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,31,'Extended Net Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,32,'Discounts/Rebates (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,33,'DPA Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,34,'DPA Description',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,35,'End User Application',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,36,'Vendor No',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(RowNo,40,FORMAT('=WENN(AG2="";0;AD2-AL2)'),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  Teststellung  *********************************************************************************************
      //EnterCell(RowNo,37,'Ex Cost USD',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,38,'Ex Net Cost USD',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,39,'Dis/Reb USD',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  ***********************************************************************************************************
      RowNo := RowNo + 1;

      // Anfang Ums„tze
      Artikelposten.RESET;
      Artikelposten.SETFILTER("Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER("Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      Artikelposten.SETFILTER("Invoiced Quantity",'<>%1',0);
      IF Artikelposten.FIND('-') THEN BEGIN
        TotalRecNo := Artikelposten.COUNT;
        REPEAT
          v_ACL_SP_A:='';
          v_ACL_SP_B:='';
          v_ACL_SP_C:='';
          v_ACL_SP_D:='';
          v_ACL_SP_E:='';
          v_ACL_SP_F:='';
          v_ACL_SP_G:='';
          v_ACL_SP_H:='';
          v_ACL_SP_I:='';
          v_ACL_SP_J:='';
          v_ACL_SP_K:='';
          v_ACL_SP_L:='';
          v_ACL_SP_M:='';
          v_ACL_SP_N:='';
          v_ACL_SP_O:='';
          v_ACL_SP_P:='';
          v_ACL_SP_Q:='';
          v_ACL_SP_R:='';
          v_ACL_SP_S:='';
          v_ACL_SP_T:='';
          v_ACL_SP_U:='';
          v_ACL_SP_V:='';
          v_ACL_SP_W:='';
          v_ACL_SP_X:='';
          v_ACL_SP_Y:='';
          v_ACL_SP_Z:='';
          v_ACL_SP_AA:='';
          v_ACL_SP_AB:='';
          v_ACL_SP_AC:=0;
          v_ACL_SP_AD:=0;
          v_ACL_SP_AE:=0;
          v_ACL_SP_AF:=0;
          v_ACL_SP_AG:='';
          v_ACL_SP_AH:='';
          v_ACL_SP_AI:='';
          v_ACL_SP_AJ:='';
          v_day:=0;
          v_month:=0;
          v_year:=0;

          vklz.RESET;
          vklz.SETFILTER("Document No.",'%1',Artikelposten."Document No.");
          //  **********************************************************************************************************************
          vklz.SETFILTER("Manufacturer Code",'%1','59');
          //  ***************************************************************************************************************************
          vklz.SETFILTER(Quantity,'<>%1',0);
          vklz.SETFILTER("No.",'%1',Artikelposten."Item No.");
          vklz.SETFILTER("Line No.",'%1',Artikelposten."Document Line No.");
          IF vklz.FIND('-') THEN BEGIN
            REPEAT
              //wieder l”schen
              //EnterCell(RowNo,,,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              vklk.RESET;
              vklk.SETFILTER("No.",'%1',vklz."Document No.");
              IF vklk.FINDFIRST THEN BEGIN
                v_ACL_SP_B := 'Johannes Weiss';
                EnterCell(RowNo,2,v_ACL_SP_B,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_C := PADSTR(vklk."Sell-to Customer No.",20);
                EnterCell(RowNo,3,v_ACL_SP_C,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_D := PADSTR(vklk."No.",20);
                EnterCell(RowNo,4,v_ACL_SP_D,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_day := DATE2DMY(vklk."Posting Date",1);
                v_month := DATE2DMY(vklk."Posting Date",2);
                v_year := DATE2DMY(vklk."Posting Date",3)-2000;

                IF v_day=1 THEN v_day1:='01';
                IF v_day=2 THEN v_day1:='02';
                IF v_day=3 THEN v_day1:='03';
                IF v_day=4 THEN v_day1:='04';
                IF v_day=5 THEN v_day1:='05';
                IF v_day=6 THEN v_day1:='06';
                IF v_day=7 THEN v_day1:='07';
                IF v_day=8 THEN v_day1:='08';
                IF v_day=9 THEN v_day1:='09';
                IF v_day=10 THEN v_day1:='10';
                IF v_day=11 THEN v_day1:='11';
                IF v_day=12 THEN v_day1:='12';
                IF v_day=13 THEN v_day1:='13';
                IF v_day=14 THEN v_day1:='14';
                IF v_day=15 THEN v_day1:='15';
                IF v_day=16 THEN v_day1:='16';
                IF v_day=17 THEN v_day1:='17';
                IF v_day=18 THEN v_day1:='18';
                IF v_day=19 THEN v_day1:='19';
                IF v_day=20 THEN v_day1:='20';
                IF v_day=21 THEN v_day1:='21';
                IF v_day=22 THEN v_day1:='22';
                IF v_day=23 THEN v_day1:='23';
                IF v_day=24 THEN v_day1:='24';
                IF v_day=25 THEN v_day1:='25';
                IF v_day=26 THEN v_day1:='26';
                IF v_day=27 THEN v_day1:='27';
                IF v_day=28 THEN v_day1:='28';
                IF v_day=29 THEN v_day1:='29';
                IF v_day=30 THEN v_day1:='30';
                IF v_day=31 THEN v_day1:='31';

                IF v_month=1 THEN v_month1:='01';
                IF v_month=2 THEN v_month1:='02';
                IF v_month=3 THEN v_month1:='03';
                IF v_month=4 THEN v_month1:='04';
                IF v_month=5 THEN v_month1:='05';
                IF v_month=6 THEN v_month1:='06';
                IF v_month=7 THEN v_month1:='07';
                IF v_month=8 THEN v_month1:='08';
                IF v_month=9 THEN v_month1:='09';
                IF v_month=10 THEN v_month1:='10';
                IF v_month=11 THEN v_month1:='11';
                IF v_month=12 THEN v_month1:='12';

                IF v_year=15 THEN v_year1:='15';
                IF v_year=16 THEN v_year1:='16';
                IF v_year=17 THEN v_year1:='17';
                IF v_year=18 THEN v_year1:='18';
                IF v_year=19 THEN v_year1:='19';
                IF v_year=20 THEN v_year1:='20';
                IF v_year=21 THEN v_year1:='21';
                IF v_year=22 THEN v_year1:='22';
                IF v_year=23 THEN v_year1:='23';
                IF v_year=24 THEN v_year1:='24';
                IF v_year=25 THEN v_year1:='25';
                IF v_year=26 THEN v_year1:='26';
                IF v_year=27 THEN v_year1:='27';
                IF v_year=28 THEN v_year1:='28';
                IF v_year=29 THEN v_year1:='29';
                IF v_year=30 THEN v_year1:='30';
                IF v_year=31 THEN v_year1:='31';
                IF v_year=32 THEN v_year1:='32';
                IF v_year=33 THEN v_year1:='33';
                IF v_year=34 THEN v_year1:='34';
                IF v_year=35 THEN v_year1:='35';

                v_ACL_SP_E:= FORMAT(FORMAT(v_day1) + '/' + FORMAT(v_month1) + '/' + FORMAT(v_year1));
                {
                Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';
                }
                EnterCell(RowNo,5,FORMAT(v_ACL_SP_E),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);

                v_ACL_SP_F := PADSTR(vklk."External Document No.",20);
                EnterCell(RowNo,6,v_ACL_SP_F,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_G :=PADSTR(vklk."Bill-to Name",30);
                EnterCell(RowNo,7,v_ACL_SP_G,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_H := PADSTR(vklk."Bill-to Address",30);
                EnterCell(RowNo,8,v_ACL_SP_H,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_I := PADSTR(vklk."Bill-to City",30);
                EnterCell(RowNo,9,v_ACL_SP_I,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_J := PADSTR(vklk."Bill-to County",2);
                EnterCell(RowNo,10,v_ACL_SP_J,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_K := PADSTR(vklk."Bill-to Post Code",10);
                EnterCell(RowNo,11,v_ACL_SP_K,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_L := PADSTR(vklk."Bill-to Country/Region Code",2);
                EnterCell(RowNo,12,v_ACL_SP_L,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_M := PADSTR(vklk."Ship-to Name",30);
                EnterCell(RowNo,13,v_ACL_SP_M,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_N := PADSTR(vklk."Ship-to Address",30);
                EnterCell(RowNo,14,v_ACL_SP_N,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_O := PADSTR(vklk."Ship-to City",30);
                EnterCell(RowNo,15,v_ACL_SP_O,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_P := PADSTR(vklk."Ship-to County",2);
                EnterCell(RowNo,16,v_ACL_SP_P,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Q := PADSTR(vklk."Ship-to Post Code",10);
                EnterCell(RowNo,17,v_ACL_SP_Q,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_R := PADSTR(vklk."Ship-to Country/Region Code",2);
                EnterCell(RowNo,18,v_ACL_SP_R,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_S := PADSTR(vklz.Endkunde,30);
                EnterCell(RowNo,19,v_ACL_SP_S,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_T := PADSTR(vklk."Endkunde Adresse",30);
                EnterCell(RowNo,20,v_ACL_SP_T,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_U := PADSTR(vklk."Endkunde Ort",30);
                EnterCell(RowNo,21,v_ACL_SP_U,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_W := PADSTR(vklk."Endkunde PLZ-Code",10);
                EnterCell(RowNo,23,v_ACL_SP_W,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_X := PADSTR(vklk."Endkunde Land",2);

                IF v_ACL_SP_X = '  ' THEN BEGIN
                  EnterCell(RowNo,24,v_ACL_SP_R,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,24,v_ACL_SP_X,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;

                v_ACL_SP_Y := PADSTR(vklz."Artikelnr. 2",30);
                EnterCell(RowNo,25,v_ACL_SP_Y,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Z := PADSTR(vklz."Artikelnr. 2",30);
                EnterCell(RowNo,26,v_ACL_SP_Z,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AA := PADSTR(vklz.Description,30);
                EnterCell(RowNo,27,v_ACL_SP_AA,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
                EnterCell(RowNo,28,v_ACL_SP_AB,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
                EnterCell(RowNo,29,FORMAT(v_ACL_SP_AC),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              //  EK Preis in EUR

              {
              //  **************************************  EK aus Preisliste  ******************************
              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDLAST THEN BEGIN
                v_ACL_SP_AD := ("Ek-Preise"."Direct Unit Cost" * ((Artikelposten.Quantity) * (-1)));
                EnterCell(RowNo,30,FORMAT(v_ACL_SP_AD),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              v_ACL_SP_AE := ((vklz."DC-Preis (MW)" * Artikelposten.Quantity) * (-1));
              // Falls DC-Preis fehlt **** *************************************
              IF v_ACL_SP_AE = 0 THEN BEGIN
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
                "Ek-Preise".SETFILTER("Currency Code",'%1','');
                "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                IF "Ek-Preise".FINDLAST THEN BEGIN
                  v_ACL_SP_AE := ("Ek-Preise"."Direct Unit Cost" * Artikelposten.Quantity) * (-1);
                END;
              END;
              EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);

              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDLAST THEN BEGIN
                v_ACL_SP_AF := (("Ek-Preise"."Direct Unit Cost") * (Artikelposten.Quantity) * (-1)) - v_ACL_SP_AE;
                EnterCell(RowNo,32,FORMAT(v_ACL_SP_AF),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;
              //  ENDE EK Preise in EUR
              }

              //   USD Preise   *****************************************************************************************************************

              //  **************************************  EK aus Preisliste  ******************************
              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','USD');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDLAST THEN BEGIN
                v_ACL_SP_AD := ("Ek-Preise"."Direct Unit Cost" * ((Artikelposten.Quantity) * (-1)));
                EnterCell(RowNo,30,FORMAT(v_ACL_SP_AD),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

            // **********************************  EK aus Verkaufslieferung  ******************************
              v_ACL_SP_AE := (vklz."DC-Preis (EKW)" * ((Artikelposten.Quantity) * (-1)));
              EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              {
              v_ACL_SP_AE := ((vklz."DC-Preis (EKW)" * Artikelposten.Quantity) * (-1));
              // Falls DC-Preis fehlt **** *************************************
              IF v_ACL_SP_AE = 0 THEN BEGIN
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
                "Ek-Preise".SETFILTER("Currency Code",'%1','USD');
                "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                IF "Ek-Preise".FINDLAST THEN BEGIN
                  v_ACL_SP_AE := ("Ek-Preise"."Direct Unit Cost" * Artikelposten.Quantity) * (-1);
                END;
              END;
              EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              }

              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','USD');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDLAST THEN BEGIN
                v_ACL_SP_AF := v_ACL_SP_AD - v_ACL_SP_AE;
                EnterCell(RowNo,32,FORMAT(v_ACL_SP_AF),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              //  USD Preise  ENDE *****************************************************************************************************************

              quotedaten.RESET;
              quotedaten.SETFILTER("Quotenr.",'%1',vklz."Quotenr.");
              IF quotedaten.FINDFIRST THEN BEGIN
                v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
                EnterCell(RowNo,33,v_ACL_SP_AG,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
                EnterCell(RowNo,34,v_ACL_SP_AH,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              IF Debitor.GET(vklz."Sell-to Customer No.") THEN BEGIN
                v_ACL_SP_AI := Debitor.AC_Solutionpartner;
                IF v_ACL_SP_AI ='' THEN BEGIN
                  EnterCell(RowNo,35,'MICROSOFT',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,35,v_ACL_SP_AI,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END;

              // Herausfinden ber wen eingekauft wurde
              IF Artikelposten."Serial No."<>'' THEN BEGIN
                v_ACL_SP_AJ := '';
                Artpost.RESET;
                Artpost.SETFILTER("Serial No.",'%1',Artikelposten."Serial No.");
                Artpost.SETFILTER("Entry Type",'%1',Artpost."Entry Type"::Purchase);
                IF Artpost.FINDFIRST THEN BEGIN
                    v_ACL_SP_AJ := Artpost."Source No.";
                END;
              END;
              EnterCell(RowNo,36,v_ACL_SP_AJ,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              // Ende herausfinden ber wen bezogen wurde

              // šber Tabelle Ausgleichsposten die EK-Preise fr Verkaufpositionen ermitteln
              tab_ausgl_posten.RESET;
              tab_ausgl_posten.SETFILTER(tab_ausgl_posten."Item Ledger Entry No.",'%1',Artikelposten."Entry No.");
              IF tab_ausgl_posten.FINDFIRST THEN BEGIN
                Artpost.RESET;
                Artpost.SETFILTER(Artpost."Entry No.",'%1',tab_ausgl_posten."Inbound Item Entry No.");
                IF Artpost.FINDFIRST THEN BEGIN
                  tab_eklz.RESET;
                  tab_eklz.SETFILTER(tab_eklz."Document No.",'%1',Artpost."Document No.");
                  tab_eklz.SETFILTER(tab_eklz."Line No.",'%1',Artpost."Document Line No.");
                  IF tab_eklz.FINDFIRST THEN BEGIN
                    EnterCell(RowNo,38,FORMAT(tab_eklz."Direct Unit Cost"),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  END;
                END;
              END;
              RowNo := RowNo + 1;
            UNTIL vklz.NEXT = 0;
          END;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
        UNTIL Artikelposten.NEXT = 0;
      END;
      //  Ende Ums„tze


      // Anfang Gutschriften
      Artikelposten.RESET;
      Artikelposten.SETFILTER("Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER("Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      IF Artikelposten.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := Artikelposten.COUNT;
        REPEAT
          v_ACL_SP_A:='';
          v_ACL_SP_B:='';
          v_ACL_SP_C:='';
          v_ACL_SP_D:='';
          v_ACL_SP_E:='';
          v_ACL_SP_F:='';
          v_ACL_SP_G:='';
          v_ACL_SP_H:='';
          v_ACL_SP_I:='';
          v_ACL_SP_J:='';
          v_ACL_SP_K:='';
          v_ACL_SP_L:='';
          v_ACL_SP_M:='';
          v_ACL_SP_N:='';
          v_ACL_SP_O:='';
          v_ACL_SP_P:='';
          v_ACL_SP_Q:='';
          v_ACL_SP_R:='';
          v_ACL_SP_S:='';
          v_ACL_SP_T:='';
          v_ACL_SP_U:='';
          v_ACL_SP_V:='';
          v_ACL_SP_W:='';
          v_ACL_SP_X:='';
          v_ACL_SP_Y:='';
          v_ACL_SP_Z:='';
          v_ACL_SP_AA:='';
          v_ACL_SP_AB:='';
          v_ACL_SP_AC:=0;
          v_ACL_SP_AD:=0;
          v_ACL_SP_AE:=0;
          v_ACL_SP_AF:=0;
          v_ACL_SP_AG:='';
          v_ACL_SP_AH:='';
          v_ACL_SP_AI:='';
          v_ACL_SP_AJ:='';
          v_day:=0;
          v_month:=0;
          v_year:=0;

          vkgz.RESET;
          vkgz.SETFILTER("Document No.",'%1',Artikelposten."Document No.");
          vkgz.SETFILTER("Manufacturer Code",'%1','59');
          vkgz.SETFILTER(Quantity,'<>%1',0);
          vkgz.SETFILTER("Line No.",'%1',Artikelposten."Document Line No.");
          vkgz.SETFILTER("No.",'%1',Artikelposten."Item No.");
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              vkgk.RESET;
              vkgk.SETFILTER("No.",'%1',vkgz."Document No.");
              IF vkgk.FINDFIRST THEN BEGIN

                v_ACL_SP_B := 'Johannes Weiss';
                EnterCell(RowNo,2,v_ACL_SP_B,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_C := PADSTR(vkgk."Sell-to Customer No.",20);
                EnterCell(RowNo,3,v_ACL_SP_C,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_D := PADSTR(vkgk."No.",20);
                EnterCell(RowNo,4,v_ACL_SP_D,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_day := DATE2DMY(vkgk."Posting Date",1);
                v_month := DATE2DMY(vkgk."Posting Date",2);
                v_year := DATE2DMY(vkgk."Posting Date",3)-2000;

                IF v_day=1 THEN v_day1:='01';
                IF v_day=2 THEN v_day1:='02';
                IF v_day=3 THEN v_day1:='03';
                IF v_day=4 THEN v_day1:='04';
                IF v_day=5 THEN v_day1:='05';
                IF v_day=6 THEN v_day1:='06';
                IF v_day=7 THEN v_day1:='07';
                IF v_day=8 THEN v_day1:='08';
                IF v_day=9 THEN v_day1:='09';
                IF v_day=10 THEN v_day1:='10';
                IF v_day=11 THEN v_day1:='11';
                IF v_day=12 THEN v_day1:='12';
                IF v_day=13 THEN v_day1:='13';
                IF v_day=14 THEN v_day1:='14';
                IF v_day=15 THEN v_day1:='15';
                IF v_day=16 THEN v_day1:='16';
                IF v_day=17 THEN v_day1:='17';
                IF v_day=18 THEN v_day1:='18';
                IF v_day=19 THEN v_day1:='19';
                IF v_day=20 THEN v_day1:='20';
                IF v_day=21 THEN v_day1:='21';
                IF v_day=22 THEN v_day1:='22';
                IF v_day=23 THEN v_day1:='23';
                IF v_day=24 THEN v_day1:='24';
                IF v_day=25 THEN v_day1:='25';
                IF v_day=26 THEN v_day1:='26';
                IF v_day=27 THEN v_day1:='27';
                IF v_day=28 THEN v_day1:='28';
                IF v_day=29 THEN v_day1:='29';
                IF v_day=30 THEN v_day1:='30';
                IF v_day=31 THEN v_day1:='31';

                IF v_month=1 THEN v_month1:='01';
                IF v_month=2 THEN v_month1:='02';
                IF v_month=3 THEN v_month1:='03';
                IF v_month=4 THEN v_month1:='04';
                IF v_month=5 THEN v_month1:='05';
                IF v_month=6 THEN v_month1:='06';
                IF v_month=7 THEN v_month1:='07';
                IF v_month=8 THEN v_month1:='08';
                IF v_month=9 THEN v_month1:='09';
                IF v_month=10 THEN v_month1:='10';
                IF v_month=11 THEN v_month1:='11';
                IF v_month=12 THEN v_month1:='12';

                IF v_year=15 THEN v_year1:='15';
                IF v_year=16 THEN v_year1:='16';
                IF v_year=17 THEN v_year1:='17';
                IF v_year=18 THEN v_year1:='18';
                IF v_year=19 THEN v_year1:='19';
                IF v_year=20 THEN v_year1:='20';
                IF v_year=21 THEN v_year1:='21';
                IF v_year=22 THEN v_year1:='22';
                IF v_year=23 THEN v_year1:='23';
                IF v_year=24 THEN v_year1:='24';
                IF v_year=25 THEN v_year1:='25';
                IF v_year=26 THEN v_year1:='26';
                IF v_year=27 THEN v_year1:='27';
                IF v_year=28 THEN v_year1:='28';
                IF v_year=29 THEN v_year1:='29';
                IF v_year=30 THEN v_year1:='30';
                IF v_year=31 THEN v_year1:='31';
                IF v_year=32 THEN v_year1:='32';
                IF v_year=33 THEN v_year1:='33';
                IF v_year=34 THEN v_year1:='34';
                IF v_year=35 THEN v_year1:='35';

                v_ACL_SP_E:= FORMAT(FORMAT(v_day1) + '/' + FORMAT(v_month1) + '/' + FORMAT(v_year1));
                EnterCell(RowNo,5,v_ACL_SP_E,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
                //Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';

                v_ACL_SP_G := PADSTR(vkgk."Bill-to Name",30);
                EnterCell(RowNo,7,v_ACL_SP_G,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_H := PADSTR(vkgk."Bill-to Address",30);
                EnterCell(RowNo,8,v_ACL_SP_H,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_I := PADSTR(vkgk."Bill-to City",30);
                EnterCell(RowNo,9,v_ACL_SP_I,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_J := PADSTR(vkgk."Bill-to County",2);
                EnterCell(RowNo,10,v_ACL_SP_J,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_K := PADSTR(vkgk."Bill-to Post Code",10);
                EnterCell(RowNo,11,v_ACL_SP_K,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_L := PADSTR(vkgk."Bill-to Country/Region Code",2);
                EnterCell(RowNo,12,v_ACL_SP_L,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_M := PADSTR(vkgk."Ship-to Name",30);
                EnterCell(RowNo,13,v_ACL_SP_M,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_N := PADSTR(vkgk."Ship-to Address",30);
                EnterCell(RowNo,14,v_ACL_SP_N,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_O := PADSTR(vkgk."Ship-to City",30);
                EnterCell(RowNo,15,v_ACL_SP_O,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_P := PADSTR(vkgk."Ship-to County",2);
                EnterCell(RowNo,16,v_ACL_SP_P,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Q := PADSTR(vkgk."Ship-to Post Code",10);
                EnterCell(RowNo,17,v_ACL_SP_Q,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_R := PADSTR(vkgk."Ship-to Country/Region Code",2);
                EnterCell(RowNo,18,v_ACL_SP_R,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Y := PADSTR(vkgz."Artikelnr. 2",30);
                EnterCell(RowNo,25,v_ACL_SP_Y,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Z := PADSTR(vkgz."Artikelnr. 2",30);
                EnterCell(RowNo,26,v_ACL_SP_Z,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AA := PADSTR(vkgz.Description,30);
                EnterCell(RowNo,27,v_ACL_SP_AA,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
                EnterCell(RowNo,28,v_ACL_SP_AB,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AC := Artikelposten.Quantity * (-1);
                EnterCell(RowNo,29,FORMAT(v_ACL_SP_AC),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vkgz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','USD');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST THEN BEGIN
                v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost") * Artikelposten.Quantity * (-1));
                EnterCell(RowNo,30,FORMAT(v_ACL_SP_AD),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              v_ACL_SP_AE := ((vkgz."DC-Preis (MW)" * Artikelposten.Quantity) * (-1));
              //        EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              // Falls DC-Preis fehlt ****
              IF v_ACL_SP_AE = 0 THEN BEGIN
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Item No.",'%1',vkgz."No.");
                "Ek-Preise".SETFILTER("Currency Code",'%1','');
                "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  v_ACL_SP_AE := (("Ek-Preise"."Direct Unit Cost" * Artikelposten.Quantity) * (-1));
                  END;
              END;
              EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vkgz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST THEN BEGIN
                v_ACL_SP_AF := ((("Ek-Preise"."Direct Unit Cost") * Artikelposten.Quantity) * (-1)) - v_ACL_SP_AE;
                EnterCell(RowNo,32,FORMAT(v_ACL_SP_AF),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              quotedaten.RESET;
              quotedaten.SETFILTER("Quotenr.",'%1',vkgz."Quotenr.");
              IF quotedaten.FINDFIRST THEN BEGIN
              IF  quotedaten.Quotepreis <> 0 THEN BEGIN
                v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
                EnterCell(RowNo,33,v_ACL_SP_AG,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
                EnterCell(RowNo,34,v_ACL_SP_AH,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END;

              IF Debitor.GET(vkgz."Sell-to Customer No.") THEN BEGIN
                v_ACL_SP_AI := PADSTR(Debitor.AC_Solutionpartner,30);
                IF v_ACL_SP_AI ='' THEN BEGIN
                  EnterCell(RowNo,35,'MICROSOFT',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,35,v_ACL_SP_AI,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END;

              RowNo := RowNo + 1;
            UNTIL vkgz.NEXT = 0;
          END;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
        UNTIL Artikelposten.NEXT = 0;
      END;
      // Ende Gutschriften

      //  Ab hier ACTS ****************************************************************************************
      // Anfang Ums„tze
      Artikelposten.RESET;
      Artikelposten.SETFILTER("Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER("Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      Artikelposten.SETFILTER("Invoiced Quantity",'<>%1',0);
      IF Artikelposten.FIND('-') THEN BEGIN
        RecNo := 1;
        TotalRecNo := Artikelposten.COUNT;
        REPEAT
          v_ACL_SP_A:='';
          v_ACL_SP_B:='';
          v_ACL_SP_C:='';
          v_ACL_SP_D:='';
          v_ACL_SP_E:='';
          v_ACL_SP_F:='';
          v_ACL_SP_G:='';
          v_ACL_SP_H:='';
          v_ACL_SP_I:='';
          v_ACL_SP_J:='';
          v_ACL_SP_K:='';
          v_ACL_SP_L:='';
          v_ACL_SP_M:='';
          v_ACL_SP_N:='';
          v_ACL_SP_O:='';
          v_ACL_SP_P:='';
          v_ACL_SP_Q:='';
          v_ACL_SP_R:='';
          v_ACL_SP_S:='';
          v_ACL_SP_T:='';
          v_ACL_SP_U:='';
          v_ACL_SP_V:='';
          v_ACL_SP_W:='';
          v_ACL_SP_X:='';
          v_ACL_SP_Y:='';
          v_ACL_SP_Z:='';
          v_ACL_SP_AA:='';
          v_ACL_SP_AB:='';
          v_ACL_SP_AC:=0;
          v_ACL_SP_AD:=0;
          v_ACL_SP_AE:=0;
          v_ACL_SP_AF:=0;
          v_ACL_SP_AG:='';
          v_ACL_SP_AH:='';
          v_ACL_SP_AI:='';
          v_day:=0;
          v_month:=0;
          v_year:=0;

          v_day:=DATE2DMY(Artikelposten."Posting Date",1);
          v_month:=DATE2DMY(Artikelposten."Posting Date",2);
          v_year:=DATE2DMY(Artikelposten."Posting Date",3)-2000;

          //tab6507.RESET;
          //tab6507.SETFILTER(tab6507."Item Entry No.",'%1',Artikelposten."Entry No.");
          //IF tab6507.FINDFIRST() THEN BEGIN

          vklz.RESET;
          //vklz.SETFILTER("Document No.",'%1',tab6507."Source ID");
          vklz.SETFILTER("Document No.",'%1',Artikelposten."Document No.");
          //  **********************************************************************************************************************
          vklz.SETFILTER("Manufacturer Code",'%1|%2|%3|%4','57','5710','5720','5730');
          //  ***************************************************************************************************************************
          vklz.SETFILTER(Quantity,'<>%1',0);
          vklz.SETFILTER("No.",'%1',Artikelposten."Item No.");
          vklz.SETFILTER("Item Shpt. Entry No.",'%1',Artikelposten."Entry No.");
          IF vklz.FIND('-') THEN BEGIN
            REPEAT
              vklk.RESET;
              vklk.SETFILTER("No.",'%1',vklz."Document No.");
              IF vklk.FINDFIRST THEN BEGIN
                v_ACL_SP_B := 'Johannes Weiss';
                EnterCell(RowNo,2,v_ACL_SP_B,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_C := PADSTR(vklk."Sell-to Customer No.",20);
                EnterCell(RowNo,3,v_ACL_SP_C,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_D := PADSTR(vklk."No.",20);
                EnterCell(RowNo,4,v_ACL_SP_D,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                IF v_day=1 THEN v_day1:='01';
                IF v_day=2 THEN v_day1:='02';
                IF v_day=3 THEN v_day1:='03';
                IF v_day=4 THEN v_day1:='04';
                IF v_day=5 THEN v_day1:='05';
                IF v_day=6 THEN v_day1:='06';
                IF v_day=7 THEN v_day1:='07';
                IF v_day=8 THEN v_day1:='08';
                IF v_day=9 THEN v_day1:='09';
                IF v_day=10 THEN v_day1:='10';
                IF v_day=11 THEN v_day1:='11';
                IF v_day=12 THEN v_day1:='12';
                IF v_day=13 THEN v_day1:='13';
                IF v_day=14 THEN v_day1:='14';
                IF v_day=15 THEN v_day1:='15';
                IF v_day=16 THEN v_day1:='16';
                IF v_day=17 THEN v_day1:='17';
                IF v_day=18 THEN v_day1:='18';
                IF v_day=19 THEN v_day1:='19';
                IF v_day=20 THEN v_day1:='20';
                IF v_day=21 THEN v_day1:='21';
                IF v_day=22 THEN v_day1:='22';
                IF v_day=23 THEN v_day1:='23';
                IF v_day=24 THEN v_day1:='24';
                IF v_day=25 THEN v_day1:='25';
                IF v_day=26 THEN v_day1:='26';
                IF v_day=27 THEN v_day1:='27';
                IF v_day=28 THEN v_day1:='28';
                IF v_day=29 THEN v_day1:='29';
                IF v_day=30 THEN v_day1:='30';
                IF v_day=31 THEN v_day1:='31';

                IF v_month=1 THEN v_month1:='01';
                IF v_month=2 THEN v_month1:='02';
                IF v_month=3 THEN v_month1:='03';
                IF v_month=4 THEN v_month1:='04';
                IF v_month=5 THEN v_month1:='05';
                IF v_month=6 THEN v_month1:='06';
                IF v_month=7 THEN v_month1:='07';
                IF v_month=8 THEN v_month1:='08';
                IF v_month=9 THEN v_month1:='09';
                IF v_month=10 THEN v_month1:='10';
                IF v_month=11 THEN v_month1:='11';
                IF v_month=12 THEN v_month1:='12';

                IF v_year=15 THEN v_year1:='15';
                IF v_year=16 THEN v_year1:='16';
                IF v_year=17 THEN v_year1:='17';
                IF v_year=18 THEN v_year1:='18';
                IF v_year=19 THEN v_year1:='19';
                IF v_year=20 THEN v_year1:='20';
                IF v_year=21 THEN v_year1:='21';
                IF v_year=22 THEN v_year1:='22';
                IF v_year=23 THEN v_year1:='23';
                IF v_year=24 THEN v_year1:='24';
                IF v_year=25 THEN v_year1:='25';
                IF v_year=26 THEN v_year1:='26';
                IF v_year=27 THEN v_year1:='27';
                IF v_year=28 THEN v_year1:='28';
                IF v_year=29 THEN v_year1:='29';
                IF v_year=30 THEN v_year1:='30';
                IF v_year=31 THEN v_year1:='31';
                IF v_year=32 THEN v_year1:='32';
                IF v_year=33 THEN v_year1:='33';
                IF v_year=34 THEN v_year1:='34';
                IF v_year=35 THEN v_year1:='35';

                v_ACL_SP_E:= FORMAT(FORMAT(v_day1) + '/' + FORMAT(v_month1) + '/' + FORMAT(v_year1));
                //Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';
                EnterCell(RowNo,5,v_ACL_SP_E,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);

                v_ACL_SP_F := PADSTR(vklk."External Document No.",20);
                EnterCell(RowNo,6,v_ACL_SP_F,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_G :=PADSTR(vklk."Bill-to Name",30);
                EnterCell(RowNo,7,v_ACL_SP_G,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_H := PADSTR(vklk."Bill-to Address",30);
                EnterCell(RowNo,8,v_ACL_SP_H,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_I := PADSTR(vklk."Bill-to City",30);
                EnterCell(RowNo,9,v_ACL_SP_I,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_J := PADSTR(vklk."Bill-to County",2);
                EnterCell(RowNo,10,v_ACL_SP_J,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_K := PADSTR(vklk."Bill-to Post Code",10);
                EnterCell(RowNo,11,v_ACL_SP_K,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_L := PADSTR(vklk."Bill-to Country/Region Code",2);
                EnterCell(RowNo,12,v_ACL_SP_L,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_M := PADSTR(vklk."Ship-to Name",30);
                EnterCell(RowNo,13,v_ACL_SP_M,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_N := PADSTR(vklk."Ship-to Address",30);
                EnterCell(RowNo,14,v_ACL_SP_N,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_O := PADSTR(vklk."Ship-to City",30);
                EnterCell(RowNo,15,v_ACL_SP_O,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_P := PADSTR(vklk."Ship-to County",2);
                EnterCell(RowNo,16,v_ACL_SP_P,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Q := PADSTR(vklk."Ship-to Post Code",10);
                EnterCell(RowNo,17,v_ACL_SP_Q,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_R := PADSTR(vklk."Ship-to Country/Region Code",2);
                EnterCell(RowNo,18,v_ACL_SP_R,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_S := PADSTR(vklz.Endkunde,30);
                EnterCell(RowNo,19,v_ACL_SP_S,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_T := PADSTR(vklk."Endkunde Adresse",30);
                EnterCell(RowNo,20,v_ACL_SP_T,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_U := PADSTR(vklk."Endkunde Ort",30);
                EnterCell(RowNo,21,v_ACL_SP_U,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_W := PADSTR(vklk."Endkunde PLZ-Code",10);
                EnterCell(RowNo,23,v_ACL_SP_W,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_X := PADSTR(vklk."Endkunde Land",2);
                IF v_ACL_SP_X= '  ' THEN BEGIN
                  EnterCell(RowNo,24,v_ACL_SP_R,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,24,v_ACL_SP_X,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;

                v_ACL_SP_Y := PADSTR(vklz."Artikelnr. 2",30);
                EnterCell(RowNo,25,v_ACL_SP_Y,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Z := PADSTR(vklz."Artikelnr. 2",30);
                EnterCell(RowNo,26,v_ACL_SP_Z,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AA := PADSTR(vklz.Description,30);
                EnterCell(RowNo,27,v_ACL_SP_AA,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
                EnterCell(RowNo,28,v_ACL_SP_AB,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
                EnterCell(RowNo,29,FORMAT(v_ACL_SP_AC),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              //  **************************************  EK aus Preisliste  ******************************
              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST THEN BEGIN
                v_ACL_SP_AD := ("Ek-Preise"."Direct Unit Cost" * ((Artikelposten.Quantity) * (-1)));
                EnterCell(RowNo,30,FORMAT(v_ACL_SP_AD),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              v_ACL_SP_AE := ((vklz."DC-Preis (MW)" * Artikelposten.Quantity) * (-1));
              //        EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              // Falls DC-Preis fehlt **** *************************************
              IF v_ACL_SP_AE = 0 THEN BEGIN
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
                "Ek-Preise".SETFILTER("Currency Code",'%1','');
                "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  v_ACL_SP_AE := ("Ek-Preise"."Direct Unit Cost" * Artikelposten.Quantity) * (-1);
                END;
              END;
              EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);

              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST THEN BEGIN
                v_ACL_SP_AF := (("Ek-Preise"."Direct Unit Cost") * (Artikelposten.Quantity) * (-1)) - v_ACL_SP_AE;
                EnterCell(RowNo,32,FORMAT(v_ACL_SP_AF),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;

              quotedaten.RESET;
              quotedaten.SETFILTER("Quotenr.",'%1',vklz."Quotenr.");
              IF quotedaten.FINDFIRST THEN BEGIN
                v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
                EnterCell(RowNo,33,v_ACL_SP_AG,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
                EnterCell(RowNo,34,v_ACL_SP_AH,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              IF Debitor.GET(vklz."Sell-to Customer No.") THEN BEGIN
                v_ACL_SP_AI := Debitor.AC_Solutionpartner;
                IF v_ACL_SP_AI ='' THEN BEGIN
                  EnterCell(RowNo,35,'MICROSOFT',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,35,v_ACL_SP_AI,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END;

              RowNo := RowNo + 1;
            UNTIL vklz.NEXT = 0;
          END;
          //END;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
        UNTIL Artikelposten.NEXT = 0;
      END;
      //  Ende Ums„tze


      // Anfang Gutschriften
      Artikelposten.RESET;
      Artikelposten.SETFILTER("Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER("Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      IF Artikelposten.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := Artikelposten.COUNT;
        REPEAT
          v_ACL_SP_A:='';
          v_ACL_SP_B:='';
          v_ACL_SP_C:='';
          v_ACL_SP_D:='';
          v_ACL_SP_E:='';
          v_ACL_SP_F:='';
          v_ACL_SP_G:='';
          v_ACL_SP_H:='';
          v_ACL_SP_I:='';
          v_ACL_SP_J:='';
          v_ACL_SP_K:='';
          v_ACL_SP_L:='';
          v_ACL_SP_M:='';
          v_ACL_SP_N:='';
          v_ACL_SP_O:='';
          v_ACL_SP_P:='';
          v_ACL_SP_Q:='';
          v_ACL_SP_R:='';
          v_ACL_SP_S:='';
          v_ACL_SP_T:='';
          v_ACL_SP_U:='';
          v_ACL_SP_V:='';
          v_ACL_SP_W:='';
          v_ACL_SP_X:='';
          v_ACL_SP_Y:='';
          v_ACL_SP_Z:='';
          v_ACL_SP_AA:='';
          v_ACL_SP_AB:='';
          v_ACL_SP_AC:=0;
          v_ACL_SP_AD:=0;
          v_ACL_SP_AE:=0;
          v_ACL_SP_AF:=0;
          v_ACL_SP_AG:='';
          v_ACL_SP_AH:='';
          v_ACL_SP_AI:='';
          v_day:=0;
          v_month:=0;
          v_year:=0;

          vkgz.RESET;
          vkgz.SETFILTER("Document No.",'%1',Artikelposten."Document No.");
          vkgz.SETFILTER("Manufacturer Code",'%1|%2|%3|%4','57','5710','5720','5730');
          vkgz.SETFILTER(Quantity,'<>%1',0);
          vkgz.SETFILTER("Line No.",'%1',Artikelposten."Document Line No.");
          vkgz.SETFILTER("No.",'%1',Artikelposten."Item No.");
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              vkgk.RESET;
              vkgk.SETFILTER("No.",'%1',vkgz."Document No.");
              IF vkgk.FINDFIRST THEN BEGIN
                v_ACL_SP_B := 'Johannes Weiss';
                EnterCell(RowNo,2,v_ACL_SP_B,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_C := PADSTR(vkgk."Sell-to Customer No.",20);
                EnterCell(RowNo,3,v_ACL_SP_C,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_D := PADSTR(vkgk."No.",20);
                EnterCell(RowNo,4,v_ACL_SP_D,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_day:=DATE2DMY(vkgk."Posting Date",1);
                v_month:=DATE2DMY(vkgk."Posting Date",2);
                v_year:=DATE2DMY(vkgk."Posting Date",3)-2000;

                IF v_day=1 THEN v_day1:='01';
                IF v_day=2 THEN v_day1:='02';
                IF v_day=3 THEN v_day1:='03';
                IF v_day=4 THEN v_day1:='04';
                IF v_day=5 THEN v_day1:='05';
                IF v_day=6 THEN v_day1:='06';
                IF v_day=7 THEN v_day1:='07';
                IF v_day=8 THEN v_day1:='08';
                IF v_day=9 THEN v_day1:='09';
                IF v_day=10 THEN v_day1:='10';
                IF v_day=11 THEN v_day1:='11';
                IF v_day=12 THEN v_day1:='12';
                IF v_day=13 THEN v_day1:='13';
                IF v_day=14 THEN v_day1:='14';
                IF v_day=15 THEN v_day1:='15';
                IF v_day=16 THEN v_day1:='16';
                IF v_day=17 THEN v_day1:='17';
                IF v_day=18 THEN v_day1:='18';
                IF v_day=19 THEN v_day1:='19';
                IF v_day=20 THEN v_day1:='20';
                IF v_day=21 THEN v_day1:='21';
                IF v_day=22 THEN v_day1:='22';
                IF v_day=23 THEN v_day1:='23';
                IF v_day=24 THEN v_day1:='24';
                IF v_day=25 THEN v_day1:='25';
                IF v_day=26 THEN v_day1:='26';
                IF v_day=27 THEN v_day1:='27';
                IF v_day=28 THEN v_day1:='28';
                IF v_day=29 THEN v_day1:='29';
                IF v_day=30 THEN v_day1:='30';
                IF v_day=31 THEN v_day1:='31';

                IF v_month=1 THEN v_month1:='01';
                IF v_month=2 THEN v_month1:='02';
                IF v_month=3 THEN v_month1:='03';
                IF v_month=4 THEN v_month1:='04';
                IF v_month=5 THEN v_month1:='05';
                IF v_month=6 THEN v_month1:='06';
                IF v_month=7 THEN v_month1:='07';
                IF v_month=8 THEN v_month1:='08';
                IF v_month=9 THEN v_month1:='09';
                IF v_month=10 THEN v_month1:='10';
                IF v_month=11 THEN v_month1:='11';
                IF v_month=12 THEN v_month1:='12';

                IF v_year=15 THEN v_year1:='15';
                IF v_year=16 THEN v_year1:='16';
                IF v_year=17 THEN v_year1:='17';
                IF v_year=18 THEN v_year1:='18';
                IF v_year=19 THEN v_year1:='19';
                IF v_year=20 THEN v_year1:='20';
                IF v_year=21 THEN v_year1:='21';
                IF v_year=22 THEN v_year1:='22';
                IF v_year=23 THEN v_year1:='23';
                IF v_year=24 THEN v_year1:='24';
                IF v_year=25 THEN v_year1:='25';
                IF v_year=26 THEN v_year1:='26';
                IF v_year=27 THEN v_year1:='27';
                IF v_year=28 THEN v_year1:='28';
                IF v_year=29 THEN v_year1:='29';
                IF v_year=30 THEN v_year1:='30';
                IF v_year=31 THEN v_year1:='31';
                IF v_year=32 THEN v_year1:='32';
                IF v_year=33 THEN v_year1:='33';
                IF v_year=34 THEN v_year1:='34';
                IF v_year=35 THEN v_year1:='35';


                v_ACL_SP_E:= FORMAT(FORMAT(v_day1) + '/' + FORMAT(v_month1) + '/' + FORMAT(v_year1));
                //Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';
                EnterCell(RowNo,5,v_ACL_SP_E,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);

                v_ACL_SP_G := PADSTR(vkgk."Bill-to Name",30);
                EnterCell(RowNo,7,v_ACL_SP_G,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_H := PADSTR(vkgk."Bill-to Address",30);
                EnterCell(RowNo,8,v_ACL_SP_H,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_I := PADSTR(vkgk."Bill-to City",30);
                EnterCell(RowNo,9,v_ACL_SP_I,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_J := PADSTR(vkgk."Bill-to County",2);
                EnterCell(RowNo,10,v_ACL_SP_J,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_K := PADSTR(vkgk."Bill-to Post Code",10);
                EnterCell(RowNo,11,v_ACL_SP_K,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_L := PADSTR(vkgk."Bill-to Country/Region Code",2);
                EnterCell(RowNo,12,v_ACL_SP_L,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_M := PADSTR(vkgk."Ship-to Name",30);
                EnterCell(RowNo,13,v_ACL_SP_M,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_N := PADSTR(vkgk."Ship-to Address",30);
                EnterCell(RowNo,14,v_ACL_SP_N,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_O := PADSTR(vkgk."Ship-to City",30);
                EnterCell(RowNo,15,v_ACL_SP_O,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_P := PADSTR(vkgk."Ship-to County",2);
                EnterCell(RowNo,16,v_ACL_SP_P,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Q := PADSTR(vkgk."Ship-to Post Code",10);
                EnterCell(RowNo,17,v_ACL_SP_Q,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_R := PADSTR(vkgk."Ship-to Country/Region Code",2);
                EnterCell(RowNo,18,v_ACL_SP_R,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Y := PADSTR(vkgz."Artikelnr. 2",30);
                EnterCell(RowNo,25,v_ACL_SP_Y,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_Z := PADSTR(vkgz."Artikelnr. 2",30);
                EnterCell(RowNo,26,v_ACL_SP_Z,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AA := PADSTR(vkgz.Description,30);
                EnterCell(RowNo,27,v_ACL_SP_AA,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
                EnterCell(RowNo,28,v_ACL_SP_AB,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

                v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
                EnterCell(RowNo,29,FORMAT(v_ACL_SP_AC),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;

                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Item No.",'%1',vkgz."No.");
                "Ek-Preise".SETFILTER("Currency Code",'%1','');
                //          "Ek-Preise".SETFILTER("Currency Code",'%1','USD');
                "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  v_ACL_SP_AD := ("Ek-Preise"."Direct Unit Cost") * Artikelposten.Quantity * (-1);
                  EnterCell(RowNo,30,FORMAT(v_ACL_SP_AD),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;

                v_ACL_SP_AE := (vkgz."DC-Preis (MW)" * Artikelposten.Quantity) * (-1);
                //          EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                // Falls DC-Preis fehlt ****
                IF v_ACL_SP_AE = 0 THEN BEGIN
                  "Ek-Preise".RESET;
                  "Ek-Preise".SETFILTER("Item No.",'%1',vkgz."No.");
                  "Ek-Preise".SETFILTER("Currency Code",'%1','');
                  "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                  IF "Ek-Preise".FINDFIRST THEN BEGIN
                    v_ACL_SP_AE := ("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity) * (-1);
                    END;
                END;
                EnterCell(RowNo,31,FORMAT(v_ACL_SP_AE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);

                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Item No.",'%1',vkgz."No.");
                "Ek-Preise".SETFILTER("Currency Code",'%1','');
                "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  v_ACL_SP_AF := ((("Ek-Preise"."Direct Unit Cost")*Artikelposten.Quantity) * (-1)) - v_ACL_SP_AE;
                  EnterCell(RowNo,32,FORMAT(v_ACL_SP_AF),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;

                quotedaten.RESET;
                quotedaten.SETFILTER("Quotenr.",'%1',vkgz."Quotenr.");
                IF quotedaten.FINDFIRST THEN BEGIN
                  IF  quotedaten.Quotepreis <> 0 THEN BEGIN
                    v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
                    EnterCell(RowNo,33,v_ACL_SP_AG,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
                    EnterCell(RowNo,34,v_ACL_SP_AH,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  END;
                END;

                IF Debitor.GET(vkgz."Sell-to Customer No.") THEN BEGIN
                  v_ACL_SP_AI := PADSTR(Debitor.AC_Solutionpartner,30);
                  IF v_ACL_SP_AI ='' THEN BEGIN
                    EnterCell(RowNo,35,'MICROSOFT',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  END ELSE BEGIN
                    EnterCell(RowNo,35,v_ACL_SP_AI,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  END;
                END;

                RowNo := RowNo + 1;
              UNTIL vkgz.NEXT = 0;
          END;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
        UNTIL Artikelposten.NEXT = 0;
      END;
      // Ende Gutschriften

      CREATE(wshFile,FALSE,TRUE);
      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_POS_lfd.xlsx');
      CLEAR(wshFile);

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,'AudioCodes');
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2','AudioCodes',''),30),COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          //TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          TempExcelBuffer.OpenExcelWithoutAutoFit('AudioCodes','ACS_TOPAS_POS_lfd' + ExcelFileExtensionTok,NewFileDirectory,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;

      ACS3;
    END;

    PROCEDURE ACL@1140000();
    BEGIN
      v_Total_Sum := 0;
      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('A1:G1').Interior.Color := '14136213';
      Sheet.Range('A1:G1').Font.Bold := TRUE;

      //Sheet.Range('A1:G1').Borders.Item(2).LineStyle(1);
      //Sheet.Range('A1:O1').Borders.Item(4).LineStyle(1);

      Sheet.Range('E:F').NumberFormat:='#.##0,00';
      Sheet.Range('G:G').NumberFormat:='#.##0,00';

      Sheet.Range('A1').Value := 'Shipping Date';
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'ACL Product';
      Sheet.Range('D1').Value := 'Qty Shipped';
      Sheet.Range('E1').Value := 'Resale Unit Price';
      Sheet.Range('F1').Value := 'Currency';
      Sheet.Range('G1').Value := 'Total EUR';

      j := '2';

      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','58');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              v_day:=0;
              v_month:=0;
              v_year:=0;

              v_day:=DATE2DMY(vkrk."Posting Date",1);
              v_month:=DATE2DMY(vkrk."Posting Date",2);
              v_year:=DATE2DMY(vkrk."Posting Date",3)-2000;

              IF v_day=1 THEN v_day1:='01';
              IF v_day=2 THEN v_day1:='02';
              IF v_day=3 THEN v_day1:='03';
              IF v_day=4 THEN v_day1:='04';
              IF v_day=5 THEN v_day1:='05';
              IF v_day=6 THEN v_day1:='06';
              IF v_day=7 THEN v_day1:='07';
              IF v_day=8 THEN v_day1:='08';
              IF v_day=9 THEN v_day1:='09';
              IF v_day=10 THEN v_day1:='10';
              IF v_day=11 THEN v_day1:='11';
              IF v_day=12 THEN v_day1:='12';
              IF v_day=13 THEN v_day1:='13';
              IF v_day=14 THEN v_day1:='14';
              IF v_day=15 THEN v_day1:='15';
              IF v_day=16 THEN v_day1:='16';
              IF v_day=17 THEN v_day1:='17';
              IF v_day=18 THEN v_day1:='18';
              IF v_day=19 THEN v_day1:='19';
              IF v_day=20 THEN v_day1:='20';
              IF v_day=21 THEN v_day1:='21';
              IF v_day=22 THEN v_day1:='22';
              IF v_day=23 THEN v_day1:='23';
              IF v_day=24 THEN v_day1:='24';
              IF v_day=25 THEN v_day1:='25';
              IF v_day=26 THEN v_day1:='26';
              IF v_day=27 THEN v_day1:='27';
              IF v_day=28 THEN v_day1:='28';
              IF v_day=29 THEN v_day1:='29';
              IF v_day=30 THEN v_day1:='30';
              IF v_day=31 THEN v_day1:='31';

              IF v_month=1 THEN v_month1:='01';
              IF v_month=2 THEN v_month1:='02';
              IF v_month=3 THEN v_month1:='03';
              IF v_month=4 THEN v_month1:='04';
              IF v_month=5 THEN v_month1:='05';
              IF v_month=6 THEN v_month1:='06';
              IF v_month=7 THEN v_month1:='07';
              IF v_month=8 THEN v_month1:='08';
              IF v_month=9 THEN v_month1:='09';
              IF v_month=10 THEN v_month1:='10';
              IF v_month=11 THEN v_month1:='11';
              IF v_month=12 THEN v_month1:='12';
              IF v_year=15 THEN v_year1:='15';
              IF v_year=16 THEN v_year1:='16';
              IF v_year=17 THEN v_year1:='17';
              IF v_year=18 THEN v_year1:='18';
              IF v_year=19 THEN v_year1:='19';
              IF v_year=20 THEN v_year1:='20';
              IF v_year=21 THEN v_year1:='21';

              v_ACL_SP_E := FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
              Sheet.Range('A'+j).Value := FORMAT(v_ACL_SP_E);
              Sheet.Range('A'+j).NumberFormat := 'TT/MM/JJ';
              Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkrz."No.";
              Sheet.Range('D'+j).Value := FORMAT(vkrz.Quantity);
              Sheet.Range('E'+j).Value := FORMAT(vkrz."Unit Price");
              IF vkrk."Currency Code" = '' THEN BEGIN
                Sheet.Range('F'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('F'+j).Value := vkrk."Currency Code";
              END;
              Sheet.Range('G'+j).Value := FORMAT(vkrz."VK-Preis (MW)"*vkrz.Quantity);
              v_Total_Sum := v_Total_Sum+(vkrz."VK-Preis (MW)"*vkrz.Quantity);
              j := INCSTR (j);
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze


      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','58');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              v_day:=0;
              v_month:=0;
              v_year:=0;
              v_day:=DATE2DMY(vkgk."Posting Date",1);
              v_month:=DATE2DMY(vkgk."Posting Date",2);
              v_year:=DATE2DMY(vkgk."Posting Date",3)-2000;
              IF v_day=1 THEN v_day1:='01';
              IF v_day=2 THEN v_day1:='02';
              IF v_day=3 THEN v_day1:='03';
              IF v_day=4 THEN v_day1:='04';
              IF v_day=5 THEN v_day1:='05';
              IF v_day=6 THEN v_day1:='06';
              IF v_day=7 THEN v_day1:='07';
              IF v_day=8 THEN v_day1:='08';
              IF v_day=9 THEN v_day1:='09';
              IF v_day=10 THEN v_day1:='10';
              IF v_day=11 THEN v_day1:='11';
              IF v_day=12 THEN v_day1:='12';
              IF v_day=13 THEN v_day1:='13';
              IF v_day=14 THEN v_day1:='14';
              IF v_day=15 THEN v_day1:='15';
              IF v_day=16 THEN v_day1:='16';
              IF v_day=17 THEN v_day1:='17';
              IF v_day=18 THEN v_day1:='18';
              IF v_day=19 THEN v_day1:='19';
              IF v_day=20 THEN v_day1:='20';
              IF v_day=21 THEN v_day1:='21';
              IF v_day=22 THEN v_day1:='22';
              IF v_day=23 THEN v_day1:='23';
              IF v_day=24 THEN v_day1:='24';
              IF v_day=25 THEN v_day1:='25';
              IF v_day=26 THEN v_day1:='26';
              IF v_day=27 THEN v_day1:='27';
              IF v_day=28 THEN v_day1:='28';
              IF v_day=29 THEN v_day1:='29';
              IF v_day=30 THEN v_day1:='30';
              IF v_day=31 THEN v_day1:='31';

              IF v_month=1 THEN v_month1:='01';
              IF v_month=2 THEN v_month1:='02';
              IF v_month=3 THEN v_month1:='03';
              IF v_month=4 THEN v_month1:='04';
              IF v_month=5 THEN v_month1:='05';
              IF v_month=6 THEN v_month1:='06';
              IF v_month=7 THEN v_month1:='07';
              IF v_month=8 THEN v_month1:='08';
              IF v_month=9 THEN v_month1:='09';
              IF v_month=10 THEN v_month1:='10';
              IF v_month=11 THEN v_month1:='11';
              IF v_month=12 THEN v_month1:='12';
              IF v_year=15 THEN v_year1:='15';
              IF v_year=16 THEN v_year1:='16';
              IF v_year=17 THEN v_year1:='17';
              IF v_year=18 THEN v_year1:='18';
              IF v_year=19 THEN v_year1:='19';
              IF v_year=20 THEN v_year1:='20';
              IF v_year=21 THEN v_year1:='21';

              v_ACL_SP_E:= (FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
              Sheet.Range('A'+j).Value := (v_ACL_SP_E);
              Sheet.Range('A'+j).NumberFormat := 'TT/MM/JJ';
              Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkgz."No.";
              Sheet.Range('D'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              Sheet.Range('E'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
              IF vkgk."Currency Code" = '' THEN BEGIN
                Sheet.Range('F'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('F'+j).Value := vkgk."Currency Code";
              END;
              Sheet.Range('G'+j).Value := FORMAT((vkgz."VK-Preis (MW)"*vkgz.Quantity)*(-1));
              v_Total_Sum := v_Total_Sum+((vkrz."VK-Preis (MW)"*vkrz.Quantity)*(-1));
              j := INCSTR (j);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('G'+j).Value := v_Total_Sum;

      j := INCSTR (j);
      j := INCSTR (j);
      Sheet.Range('C'+j).Value := 'Stock Information';
      Sheet.Range('C'+j).Font.Bold := TRUE;
      Sheet.Range('E'+j).Value :='Qty allocated to Customer';
      Sheet.Range('E'+j).Font.Bold := TRUE;
      Sheet.Range('F'+j).Value :='Customer Name';
      Sheet.Range('F'+j).Font.Bold := TRUE;
      Sheet.Range('G'+j).Value :='Free Stock';
      Sheet.Range('G'+j).Font.Bold := TRUE;
      //j := INCSTR (j);
      //  Suchen aller Artikel mit Lagerbestand ungleich Null nur fr ACL
      //  ******************************************************************************
      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1','58');
      IF Artikel.FIND('-') THEN BEGIN
        v_aubestand := 0;
        v_au_name := '';
        v_lagerbestand := 0;
        REPEAT
          Artikelposten.RESET;
          Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
          //Artikelposten.SETFILTER(Artikelposten."Item No.",'%1','AC48204AE3-CBL');
          Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
          Artikelposten.SETFILTER(Artikelposten."Location Code",'%1|%2','ZENT','KONSI');
          IF Artikelposten.FIND('-') THEN BEGIN
            //IF Artikelposten.FINDFIRST THEN BEGIN

            v_aubestand:=0;
            v_au_name:='';
            v_lagerbestand:=0;
            v_au_debnr:='0';
            REPEAT
              v_lagerbestand := v_lagerbestand+Artikelposten."Remaining Quantity";
            UNTIL Artikelposten.NEXT = 0;
            j := INCSTR (j);
            Sheet.Range('C'+j).Value := Artikel."No.";
            //END;
            Sheet.Range('D'+j).Value := v_lagerbestand;

            vkz.RESET;
            vkz.SETFILTER(vkz."No.",'%1',Artikel."No.");
            vkz.SETFILTER(vkz."Document Type",'%1',vkz."Document Type"::Order);
            vkz.SETFILTER(vkz."Outstanding Quantity",'>%1',0);
            vkz.SETFILTER(vkz."Location Code",'%1|%2','ZENT','KONSI');
            IF vkz.FIND('-') THEN BEGIN
              //IF vkz.FINDFIRST THEN BEGIN
              REPEAT
                v_aubestand := v_aubestand + vkz."Outstanding Quantity";
                IF v_au_debnr = vkz."Sell-to Customer No." THEN BEGIN
                  END ELSE BEGIN
                    IF v_au_debnr = '0' THEN BEGIN
                      v_au_name := vkz.Endkunde;
                  END ELSE BEGIN
                    v_au_name := v_au_name + '/' + vkz.Endkunde;
                  END;
                END;
                v_au_debnr := vkz."Sell-to Customer No.";
              UNTIL vkz.NEXT = 0;
            END;
              Sheet.Range('E'+j).Value := FORMAT(v_aubestand);
              Sheet.Range('E'+j).NumberFormat:= '###.###';
              Sheet.Range('F'+j).Value := FORMAT(v_au_name);
              Sheet.Range('G'+j).Value :='=WENN(D21>E21;D21-E21;0)'
          END;
        UNTIL Artikel.NEXT=0;

      END;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACL_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACL_TOPAS_POS_lfd.xlsx');
      Book._SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACL_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE GSI@1140002();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','54');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkrk."No.";
              Sheet.Range('D'+j).Value := vkrz."No.";
              Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
              v_herstell_VK_Preis := 0;

              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkrz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
                IF quotedaten."Hersteller-VK-Preis" < vkrz."VK-Preis (EKW)" THEN BEGIN
                  //   Sheet.Range('M'+j).Value := quotedaten."Hersteller-VK-Preis";
                  //   Sheet.Range('N'+j).Value := 'USD';
                  v_herstell_VK_Preis := quotedaten."Hersteller-VK-Preis";
                END;
                END;
              END;


              IF v_herstell_VK_Preis = 0 THEN BEGIN
                Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
              END ELSE BEGIN
                Sheet.Range('F'+j).Value := FORMAT(v_herstell_VK_Preis);
              END;

              IF vkrk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkrk."Currency Code";
              END;

              IF vkrk."Currency Factor"<>0 THEN BEGIN
                IF v_herstell_VK_Preis = 0 THEN BEGIN
                  Sheet.Range('H'+j).Value := ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
                  v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
                END ELSE BEGIN
                  Sheet.Range('H'+j).Value := ((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor"));
                  v_Total_Sum:=v_Total_Sum+ ((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor"));
                END;
              END ELSE BEGIN
                IF v_herstell_VK_Preis = 0 THEN BEGIN
                  Sheet.Range('H'+j).Value := (vkrz."Unit Price") * (vkrz.Quantity);
                  v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
                END ELSE BEGIN
                  Sheet.Range('H'+j).Value := (v_herstell_VK_Preis) * (vkrz.Quantity);
                  v_Total_Sum := v_Total_Sum + ((v_herstell_VK_Preis) * (vkrz.Quantity));
                END;
              END;

              Sheet.Range('I'+j).Value := vkrk."Posting Date";

              j := INCSTR (j);
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','54');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkgk."No.";
              Sheet.Range('D'+j).Value := vkgz."No.";
              Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
              IF vkgk."Currency Code"='' THEN BEGIN
              Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
              Sheet.Range('G'+j).Value := vkgk."Currency Code";
              END;
              IF vkgk."Currency Factor"<>0 THEN
              BEGIN
              Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              v_Total_Sum := v_Total_Sum + ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkgz.Amount) * (-1);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount) * (-1));
              END;

              //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
              Sheet.Range('I'+j).Value := vkgk."Posting Date";
              j := INCSTR (j);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GSI_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GSI_TOPAS_POS_lfd.xlsx');
      Book._SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GSI_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE XMO@1140031();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);


      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','04');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkrk."No.";
              Sheet.Range('D'+j).Value := vkrz."No.";
              Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
              Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
              IF vkrk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkrk."Currency Code";
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('H'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
                v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkrz.Amount);
                v_Total_Sum:=v_Total_Sum+(vkrz.Amount);
              END;
              //Sheet.Range('H'+j).Value := Format(vkrz."Unit Price"* vkrz.Quantity);
              Sheet.Range('I'+j).Value := vkrk."Posting Date";
              j := INCSTR (j);
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','04');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkgk."No.";
              Sheet.Range('D'+j).Value := vkgz."No.";
              Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
              IF vkgk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkgk."Currency Code";
              END;
              IF vkgk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
              END;

              //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
              Sheet.Range('I'+j).Value := vkgk."Posting Date";
              j := INCSTR (j);
            UNTIL vkgz.NEXT=0;
          END;
        UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\XMOS_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\XMOS_TOPAS_POS_lfd.xlsx');
      Book._SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\XMOS_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE RIC@1140005();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','40');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkrk."No.";
              Sheet.Range('D'+j).Value := vkrz."No.";
              Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
              Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
              IF vkrk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkrk."Currency Code";
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('H'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
                v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkrz.Amount);
                v_Total_Sum:=v_Total_Sum+(vkrz.Amount);
              END;
              //Sheet.Range('H'+j).Value := Format(vkrz."Unit Price"* vkrz.Quantity);
              Sheet.Range('I'+j).Value := vkrk."Posting Date";
              j := INCSTR (j);
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','40');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkgk."No.";
              Sheet.Range('D'+j).Value := vkgz."No.";
              Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
              IF vkgk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkgk."Currency Code";
              END;
              IF vkgk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
              END;
              //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
              Sheet.Range('I'+j).Value := vkgk."Posting Date";
              j := INCSTR (j);
            UNTIL vkgz.NEXT=0;
          END;
        UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\RIC_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\RIC_TOPAS_POS_lfd.xlsx');
      Book._SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\RIC_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE GAIN@1140004();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','08');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkrk."No.";
              Sheet.Range('D'+j).Value := vkrz."No.";
              Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
              Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
              IF vkrk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkrk."Currency Code";
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('H'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
                v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkrz.Amount);
                v_Total_Sum:=v_Total_Sum+(vkrz.Amount);
              END;
              //Sheet.Range('H'+j).Value := Format(vkrz."Unit Price"* vkrz.Quantity);
              Sheet.Range('I'+j).Value := vkrk."Posting Date";
              j := INCSTR (j);
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','08');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkgk."No.";
              Sheet.Range('D'+j).Value := vkgz."No.";
              Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
              IF vkgk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkgk."Currency Code";
              END;
              IF vkgk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
              END;
              //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
              Sheet.Range('I'+j).Value := vkgk."Posting Date";
              j := INCSTR (j);
            UNTIL vkgz.NEXT=0;
          END;
        UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GAIN_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GAIN_TOPAS_POS_lfd.xlsx');
      Book._SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GAIN_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE FOX@1140009();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('J:J').NumberFormat:='###.###,00';
      Sheet.Range('L:L').NumberFormat:='###.###,00';
      Sheet.Range('M:M').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Cust City';
      Sheet.Range('D1').Value := 'Cust State';
      Sheet.Range('E1').Value := 'Cust Zip';
      Sheet.Range('F1').Value := 'Cust Country';
      Sheet.Range('G1').Value := 'Disti Invoice #';
      Sheet.Range('H1').Value := 'Part Number';
      Sheet.Range('I1').Value := 'Qty Sold';
      Sheet.Range('J1').Value := 'Resale';
      Sheet.Range('K1').Value := 'Currency';
      Sheet.Range('L1').Value := 'Total Resale EUR';
      Sheet.Range('M1').Value := 'Cost USD';
      Sheet.Range('N1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','14');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              v_Total_sum1:=0;
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkrk."Sell-to City";
              Sheet.Range('D'+j).Value := vkrk."Sell-to Country/Region Code";
              Sheet.Range('E'+j).Value := vkrk."Sell-to Post Code";
              Sheet.Range('F'+j).Value := vkrk."Sell-to County";
              Sheet.Range('G'+j).Value := vkrk."No.";
              Sheet.Range('H'+j).Value := vkrz."No.";
              Sheet.Range('I'+j).Value := FORMAT(vkrz.Quantity);
              Sheet.Range('J'+j).Value := FORMAT(vkrz."Unit Price");
              IF vkrk."Currency Code"='' THEN BEGIN
                Sheet.Range('K'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('K'+j).Value := vkrk."Currency Code";
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('L'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
                v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
              END ELSE BEGIN
                //v_Total_sum1:=(vkrz.Amount)*(-1);
                Sheet.Range('L'+j).Value :=FORMAT(vkrz.Amount);
                v_Total_Sum:=v_Total_Sum+(vkrz.Amount);
              END;
              //Sheet.Range('L'+j).Value := Format(vkrz."Unit Price"* vkrz.Quantity);
              //Sheet.Range('M'+j).Value := Format(vkrz."DC-Preis (W„hrung)");
              Sheet.Range('M'+j).Value := FORMAT(vkrz."DC-Preis (EKW)");
              Sheet.Range('N'+j).Value := vkrk."Posting Date";
              j := INCSTR (j);
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','14');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              v_Total_sum1:=0;
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkgk."Sell-to City";
              Sheet.Range('D'+j).Value := vkgk."Sell-to Country/Region Code";
              Sheet.Range('E'+j).Value := vkgk."Sell-to Post Code";
              Sheet.Range('F'+j).Value := vkgk."Sell-to County";
              Sheet.Range('G'+j).Value := vkgk."No.";
              Sheet.Range('H'+j).Value := vkgz."No.";
              Sheet.Range('I'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              Sheet.Range('J'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
              IF vkgk."Currency Code"='' THEN BEGIN
                Sheet.Range('K'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('K'+j).Value := vkgk."Currency Code";
              END;
              IF vkgk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('L'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
              END ELSE BEGIN
                v_Total_sum1:=(vkgz.Amount)*(-1);
                Sheet.Range('L'+j).Value := FORMAT(v_Total_sum1);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
              END;
              //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
              //Sheet.Range('M'+j).Value := Format(vkgz."DC-Preis (W„hrung)");
              Sheet.Range('M'+j).Value := FORMAT(vkgz."DC-Preis (EKW)");
              Sheet.Range('N'+j).Value := vkgk."Posting Date";
              j := INCSTR (j);
            UNTIL vkgz.NEXT=0;
          END;
        UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\FOX_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\FOX_TOPAS_POS_lfd.xlsx');
      Book._SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\FOX_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE HALO@1140001();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';
      Sheet.Range('J:J').NumberFormat:='###.###,00';
      Sheet.Range('K:K').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';
      Sheet.Range('J1').Value := 'Total Cost USD';
      Sheet.Range('K1').Value := 'Total Resale USD';
      Sheet.Range('L1').Value := 'Country';
      Sheet.Range('M1').Value := 'City';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','78');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkrk."No.";
              Sheet.Range('D'+j).Value := vkrz."No.";
              Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
              Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
              IF vkrk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkrk."Currency Code";
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('H'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
                v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
                Sheet.Range('K'+j).Value := FORMAT(vkrz.Amount);
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkrz.Amount);
                v_Total_Sum:=v_Total_Sum+(vkrz.Amount);
                w„kurs.RESET;
                w„kurs.SETFILTER(w„kurs."Currency Code",'%1','USD');
                w„kurs.SETFILTER(w„kurs."Starting Date",'%1',vkrk."Posting Date");
                IF w„kurs.FINDFIRST() THEN BEGIN
                  Sheet.Range('K'+j).Value := FORMAT((vkrz.Amount)*(w„kurs."Exchange Rate Amount"));
                END;
              END;
              //Sheet.Range('H'+j).Value := Format(vkrz."Unit Price"* vkrz.Quantity);
              Sheet.Range('I'+j).Value := vkrk."Posting Date";
              Sheet.Range('J'+j).Value := FORMAT(vkrz."DC-Preis (EKW)"*(vkrz.Quantity));
              Sheet.Range('L'+j).Value := vkrk."Ship-to Country/Region Code";
              Sheet.Range('M'+j).Value := vkrk."Ship-to City";
              j := INCSTR (j);
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','78');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkgk."No.";
              Sheet.Range('D'+j).Value := vkgz."No.";
              Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
              IF vkgk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkgk."Currency Code";
              END;
              IF vkgk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
                Sheet.Range('K'+j).Value := FORMAT((vkgz.Amount)*(-1));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
                //Sheet.Range('K'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
                w„kurs.RESET;
                w„kurs.SETFILTER(w„kurs."Currency Code",'%1','USD');
                w„kurs.SETFILTER(w„kurs."Starting Date",'%1',vkgk."Posting Date");
                IF w„kurs.FINDFIRST() THEN BEGIN
                  Sheet.Range('K'+j).Value := FORMAT((vkgz.Amount)*(w„kurs."Exchange Rate Amount")*(-1));
                END;
              END;
              //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
              Sheet.Range('I'+j).Value := vkgk."Posting Date";
              Sheet.Range('J'+j).Value := FORMAT(vkgz."DC-Preis (EKW)"*(vkgz.Quantity)*(-1));
              Sheet.Range('L'+j).Value := vkgk."Sell-to Country/Region Code";
              Sheet.Range('M'+j).Value := vkgk."Sell-to City";
              j := INCSTR (j);
            UNTIL vkgz.NEXT=0;
          END;
        UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\HALO_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\HALO_TOPAS_POS_lfd.xlsx');
      Book._SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\HALO_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE CIRRUS@1000000000();
    BEGIN
      v_Total_Sum := 0;

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);

      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := vkrk.COUNT;
        RowNo := 1;
        ColumnNo := 1;
        EnterCell(RowNo,ColumnNo,'Disti',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Province',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Postal Code',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Branch',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Province',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Postal Code',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Part Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Qty.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Adjusted Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Resale (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Per Unit Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Invoice Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Cust PO#',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Disti Invoice # to Customer',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Quote #/Debit #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Ship & Debit Claim Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);

        RowNo := RowNo + 1;

        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1|%2','68','69');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkrk."Sell-to Customer No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkrk."Sell-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,vkrk."Sell-to County",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,vkrk."Sell-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,vkrk."Sell-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,vkrz.Endkunde,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              Kontakt.RESET;
              Kontakt.SETFILTER(Kontakt."No.",'%1',vkrz."Endkundennr.");
              IF Kontakt.FINDFIRST() THEN BEGIN
                EnterCell(RowNo,9,Kontakt.City,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,10,Kontakt.County,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,11,Kontakt."Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,12,Kontakt."Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              EnterCell(RowNo,13,vkrz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,15,FORMAT(vkrz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,16,FORMAT(vkrz."VK-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,17,FORMAT(vkrz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,18,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,19,vkrk."External Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,20,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkrz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                EnterCell(RowNo,21,quotedaten."Quotenr. Hersteller",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,22,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                // IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
                //   IF quotedaten."Hersteller-VK-Preis" < vkrz."VK-Preis (EKW)" THEN BEGIN
                //     EnterCell(RowNo,23,FORMAT(quotedaten."Hersteller-VK-Preis"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                //   END;
                // END;
              END;
              RowNo := RowNo + 1;
              RecNo := RecNo + 1;
              Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften

      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1|%2','68','69');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Customer No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgk."Sell-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,vkgk."Sell-to County",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,vkgk."Sell-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,vkgk."Sell-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,vkgz.Endkunde,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              Kontakt.RESET;
              Kontakt.SETFILTER(Kontakt."No.",'%1',vkgz."Endkundennr.");
              IF Kontakt.FINDFIRST() THEN BEGIN
                EnterCell(RowNo,9,Kontakt.City,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,10,Kontakt.County,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,11,Kontakt."Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,12,Kontakt."Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              EnterCell(RowNo,13,vkgz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,FORMAT((vkgz.Quantity)*(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,15,FORMAT(vkgz."DC-Preis (EKW)"*(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,16,FORMAT(vkgz."VK-Preis (EKW)"*(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,17,FORMAT(vkgz."DC-Preis (EKW)"*(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,18,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,19,vkgk."External Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,20,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkgz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                EnterCell(RowNo,21,quotedaten."Quotenr. Hersteller",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,22,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                // IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
                //   IF quotedaten."Hersteller-VK-Preis" < vkgz."VK-Preis (EKW)" THEN BEGIN
                //     EnterCell(RowNo,23,FORMAT(quotedaten."Hersteller-VK-Preis"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                //   END;
                // END;
              END;
              RowNo := RowNo + 1;
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;

      // Ende Gutschriften

      CREATE(wshFile,FALSE,TRUE);
      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_POS_lfd.xlsx');
      CLEAR(wshFile);

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,'Cirrus');
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2','CIRRUS',''),30),COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          //TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          TempExcelBuffer.OpenExcelWithoutAutoFit('Cirrus','CIR_TOPAS_POS_lfd' + ExcelFileExtensionTok,NewFileDirectory,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;

      CIRRUS2;
    END;

    PROCEDURE CIRRUS2@1000000045();
    BEGIN
      v_Total_Sum := 0;

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);

      //  Suchen aller Artikel mit Lagerbestand ungleich Null nur fr CIR
      //  ******************************************************************************

      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1|%2','68','69');
      IF Artikel.FIND('-') THEN BEGIN
        v_lagerbestand := 0;
        RecNo := 0;
        TotalRecNo := Artikel.COUNT;
        RowNo := 1;
        ColumnNo := 1;
        EnterCell(RowNo,ColumnNo,'Disti',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Part Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Qty.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Per Unit Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Warehouse Location',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo + 1;

        REPEAT

          Artikelposten.RESET;
          Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
          Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
          Artikelposten.SETFILTER(Artikelposten."Location Code",'%1|%2','ZENT','KONSI');
          IF Artikelposten.FIND('-') THEN BEGIN
            v_lagerbestand := 0;
            REPEAT
              v_lagerbestand := v_lagerbestand + Artikelposten."Remaining Quantity";

              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,Artikel."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(Artikelposten."Remaining Quantity"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,'DE',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(WORKDATE - 2),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

              EK_Lief.RESET;
              EK_Lief.SETFILTER(EK_Lief."Document No.",'%1',Artikelposten."Document No.");
              EK_Lief.SETFILTER(EK_Lief."Line No.",'%1',Artikelposten."Document Line No.");
              IF EK_Lief.FINDFIRST THEN BEGIN
                EnterCell(RowNo,4,FORMAT(EK_Lief."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,8,'Disti holen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',EK_Lief."No.");
                "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
                "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  EnterCell(RowNo,4,FORMAT("Ek-Preise"."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              RowNo := RowNo + 1;
            UNTIL Artikelposten.NEXT = 0;
          END;

          v_lagerbestand := 0;

          vkz.RESET;
          vkz.SETFILTER(vkz."No.",'%1',Artikel."No.");
          vkz.SETFILTER(vkz."Manufacturer Code",'%1|%2','68','69');
          vkz.SETFILTER(vkz."Location Code",'%1','KONSI');
          vkz.SETFILTER(vkz."Qty. to Invoice",'>%1',0);
          IF vkz.FIND('-') THEN BEGIN
            REPEAT
              IF vkz."Qty. to Invoice" - vkz."Qty. to Ship" > 0 THEN BEGIN
                EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,2,vkz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,3,FORMAT(vkz."Qty. to Invoice" - vkz."Qty. to Ship"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,4,FORMAT(vkz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,5,'DE',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,6,FORMAT(WORKDATE - 2),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                RowNo := RowNo + 1;
              END;
            UNTIL vkz.NEXT = 0;
          END;

          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));

        UNTIL Artikel.NEXT = 0;
      END;

      CREATE(wshFile,FALSE,TRUE);
      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_INV_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_INV_lfd.xlsx');
      CLEAR(wshFile);

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,'Cirrus');
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2','CIRRUS',''),30),COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          //TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          TempExcelBuffer.OpenExcelWithoutAutoFit('Cirrus','CIR_TOPAS_INV_lfd' + ExcelFileExtensionTok,NewFileDirectory,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;

      CIRRUS3;
    END;

    PROCEDURE CIRRUS3@1000000046();
    BEGIN
      v_Total_Sum := 0;

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);

      vkz.RESET;
      vkz.SETFILTER(vkz."Manufacturer Code",'%1|%2','68','69');
      vkz.SETFILTER(vkz."Outstanding Quantity",'>%1',0);
      vkz.SETFILTER(vkz."Location Code",'%1|%2','ZENT','KONSI');
      vkz.SETFILTER(vkz."Document Type",'%1',vkz."Document Type"::Order);
      IF vkz.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := vkz.COUNT;
        RowNo := 1;
        ColumnNo := 1;
        EnterCell(RowNo,ColumnNo,'Disti',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Province',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Purchasing Customer Postal Code',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Branch',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer City',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Province',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Postal Code',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer Country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Part Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Qty.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Adjusted Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Adjusted Cost (Local Currency)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Resale (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Resale (Local Currency)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Exchange Rate',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Per Unit Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Customer Requested Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Commit Date to Customer',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Customer Book Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Cust PO to Disti',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Quote #/Debit #',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo + 1;
        REPEAT
          vkk.RESET;
          vkk.SETFILTER(vkk."No.",'%1',vkz."Document No.");
          IF vkk.FIND('-') THEN BEGIN
            EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,vkk."Sell-to Customer No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,vkk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,vkk."Sell-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,vkk."Sell-to County",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,vkk."Sell-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,7,vkk."Sell-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,8,vkz.Endkunde,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

            Kontakt.RESET;
            Kontakt.SETFILTER(Kontakt."No.",'%1',vkz."Endkundennr.");
            IF Kontakt.FINDFIRST() THEN BEGIN
              EnterCell(RowNo,9,Kontakt.City,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,10,Kontakt.County,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,Kontakt."Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,12,Kontakt."Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;

            EnterCell(RowNo,13,vkz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,FORMAT(vkz."Outstanding Quantity"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(vkz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,FORMAT(vkz."DC-Preis (MW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,17,FORMAT(vkz."VK-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,18,FORMAT(vkz."VK-Preis (MW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,19,FORMAT(vkz.Einkaufsw„hrungsfaktor),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(vkz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(vkz."Requested Delivery Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,22,FORMAT(vkz."Promised Delivery Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,23,FORMAT(vkk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,24,vkk."External Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

            quotedaten.RESET;
            quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkz."Quotenr.");
            IF quotedaten.FINDFIRST() THEN BEGIN
              EnterCell(RowNo,25,quotedaten."Quotenr. Hersteller",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
          END;   // Hier Kopfdaten-ENDE

          RowNo := RowNo + 1;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));

        UNTIL vkz.NEXT = 0;
      END;

      CREATE(wshFile,FALSE,TRUE);
      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_Bklg_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\CIR_TOPAS_Bklg_lfd.xlsx');
      CLEAR(wshFile);

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,'Cirrus');
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2','CIRRUS',''),30),COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          //TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          TempExcelBuffer.OpenExcelWithoutAutoFit('Cirrus','CIR_TOPAS_Bklg_lfd' + ExcelFileExtensionTok,NewFileDirectory,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    PROCEDURE AKROS@1140003();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:J').NumberFormat:='###.###,00';

      Sheet.Range('D1').Value := 'P.O.S. Report';
      Sheet.Range('B3').Value := 'Distributor Name:';
      Sheet.Range('C3').Value := 'Topas electronic AG';

      Sheet.Range('B4').Value := '            Date:';
      Sheet.Range('C4').Value := WORKDATE;

      Sheet.Range('F5').Value := 'USD $$$';
      Sheet.Range('G5').Value := 'USD $$$';
      Sheet.Range('H5').Value := 'USD $$$';
      Sheet.Range('I5').Value := 'USD $$$';


      Sheet.Range('A6').Value := 'Invoice Date';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B6').Value := 'Contract Manufacturer';
      Sheet.Range('C6').Value := 'Design Customer';
      Sheet.Range('D6').Value := 'Product';
      Sheet.Range('E6').Value := 'Qty';
      Sheet.Range('F6').Value := 'Cost';
      Sheet.Range('G6').Value := 'Resale';
      Sheet.Range('H6').Value := 'Cost Value';
      Sheet.Range('I6').Value := 'Resale Value';
      Sheet.Range('J6').Value := 'Margin %';

      j := '7';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','55');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := vkrk."Posting Date";
              Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('D'+j).Value := vkrz."No.";
              Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
              //Sheet.Range('F'+j).Value := FORMAT(vkrz."DC-Preis (MW)"*vkrz.Einkaufsw„hrungsfaktor);
              Sheet.Range('F'+j).Value := FORMAT(vkrz."DC-Preis (EKW)");
              Sheet.Range('G'+j).Value := FORMAT(vkrz."VK-Preis (EKW)");
              Sheet.Range('H'+j).Value :=FORMAT((vkrz.Quantity)*(vkrz."DC-Preis (EKW)"));
              Sheet.Range('I'+j).Value :=FORMAT((vkrz.Quantity)*(vkrz."VK-Preis (EKW)"));
              IF vkrz.Quantity<>0 THEN BEGIN
                IF vkrz."DC-Preis (EKW)" <>0 THEN BEGIN
                  IF vkrz."VK-Preis (EKW)" <>0 THEN BEGIN
                    Sheet.Range('J'+j).Value :=FORMAT((((vkrz.Quantity)*(vkrz."VK-Preis (EKW)"))-((vkrz.Quantity)*(vkrz."DC-Preis (EKW)")))/((vkrz.Quantity)*(vkrz."VK-Preis (EKW)"))*100);
                  END;
                END;
              END;
              j := INCSTR (j);
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FINDFIRST() THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','55');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FINDFIRST() THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := vkgk."Posting Date";
              Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkgk."No.";
              Sheet.Range('D'+j).Value := vkgz."No.";
              Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              Sheet.Range('F'+j).Value := FORMAT((vkgz."DC-Preis (MW)"*vkgz.Einkaufsw„hrungsfaktor)*(-1));
              Sheet.Range('G'+j).Value := FORMAT((vkgz."VK-Preis (EKW)")*(-1));
              //Sheet.Range('H'+j).Value :='Spalte E * Spalte F';
              //Sheet.Range('I'+j).Value :='Spalte E * Spalte G';
              //Sheet.Range('J'+j).Value :='Formel(=WENN(I7=0;0;(1-(H7/I7)))';
              Sheet.Range('H'+j).Value :=FORMAT((vkgz.Quantity)*(vkgz."DC-Preis (EKW)")*(-1));
              Sheet.Range('I'+j).Value :=FORMAT((vkgz.Quantity)*(vkgz."VK-Preis (EKW)")*(-1));
              IF vkrz.Quantity<>0 THEN BEGIN
                IF vkrz."DC-Preis (EKW)" <>0 THEN BEGIN
                  IF vkrz."VK-Preis (EKW)" <>0 THEN BEGIN
                    Sheet.Range('J'+j).Value :=FORMAT((((vkrz.Quantity)*(vkrz."VK-Preis (EKW)"))-((vkrz.Quantity)*(vkrz."DC-Preis (EKW)")))/((vkrz.Quantity)*(vkrz."VK-Preis (EKW)"))*100);
                  END;
                END;
              END;



      {
      Sheet.Range('F'+j).Value := FORMAT(vkgz."Unit Price");
      IF vkgk."Currency Code"='' THEN BEGIN
      Sheet.Range('G'+j).Value := 'EUR';
      END ELSE BEGIN
      Sheet.Range('G'+j).Value := vkgk."Currency Code";
      END;
      IF vkgk."Currency Factor"<>0 THEN
      BEGIN
      Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
      END ELSE
      BEGIN
      Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
      v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
      END;

      //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
      Sheet.Range('I'+j).Value := vkgk."Posting Date";
      }


              j := INCSTR (j);
            UNTIL vkgz.NEXT=0;
          END;
        UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\AKROS_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\AKROS_TOPAS_POS_lfd.xlsx');
      Book._SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\AKROS_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE FERRARI@1140008();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      //Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Reseller name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Address';
      Sheet.Range('C1').Value := 'Zip';
      Sheet.Range('D1').Value := 'City';
      Sheet.Range('E1').Value := 'Country';
      Sheet.Range('F1').Value := 'Ferrari electronic item-nr.';
      Sheet.Range('G1').Value := 'Quantity shipped';
      Sheet.Range('H1').Value := 'Total Amount';
      Sheet.Range('I1').Value := 'Currency';
      Sheet.Range('J1').Value := 'Month/Day/Year';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','85');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('B'+j).Value := vkrk."Sell-to Address";
              Sheet.Range('C'+j).Value := vkrk."Sell-to Post Code";
              Sheet.Range('D'+j).Value := vkrk."Sell-to City";
              Sheet.Range('E'+j).Value := vkrk."Sell-to Country/Region Code";
              Sheet.Range('F'+j).Value := FORMAT(vkrz."No.");
              Sheet.Range('G'+j).Value := FORMAT(vkrz.Quantity);
              IF vkrk."Currency Code" = '' THEN BEGIN
                Sheet.Range('H'+j).Value := FORMAT(vkrz.Amount);
                v_Total_Sum:=v_Total_Sum+ (vkrz.Amount);
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
                v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
              END;
              Sheet.Range('I'+j).Value := 'EUR';
              //Sheet.Range('J'+j).Value := vkrk."Posting Date";
              v_day:=DATE2DMY(vkrk."Posting Date",1);
              v_month:=DATE2DMY(vkrk."Posting Date",2);
              v_year:=DATE2DMY(vkrk."Posting Date",3)-2000;

              IF v_day=1 THEN v_day1:='01';
              IF v_day=2 THEN v_day1:='02';
              IF v_day=3 THEN v_day1:='03';
              IF v_day=4 THEN v_day1:='04';
              IF v_day=5 THEN v_day1:='05';
              IF v_day=6 THEN v_day1:='06';
              IF v_day=7 THEN v_day1:='07';
              IF v_day=8 THEN v_day1:='08';
              IF v_day=9 THEN v_day1:='09';
              IF v_day=10 THEN v_day1:='10';
              IF v_day=11 THEN v_day1:='11';
              IF v_day=12 THEN v_day1:='12';
              IF v_day=13 THEN v_day1:='13';
              IF v_day=14 THEN v_day1:='14';
              IF v_day=15 THEN v_day1:='15';
              IF v_day=16 THEN v_day1:='16';
              IF v_day=17 THEN v_day1:='17';
              IF v_day=18 THEN v_day1:='18';
              IF v_day=19 THEN v_day1:='19';
              IF v_day=20 THEN v_day1:='20';
              IF v_day=21 THEN v_day1:='21';
              IF v_day=22 THEN v_day1:='22';
              IF v_day=23 THEN v_day1:='23';
              IF v_day=24 THEN v_day1:='24';
              IF v_day=25 THEN v_day1:='25';
              IF v_day=26 THEN v_day1:='26';
              IF v_day=27 THEN v_day1:='27';
              IF v_day=28 THEN v_day1:='28';
              IF v_day=29 THEN v_day1:='29';
              IF v_day=30 THEN v_day1:='30';
              IF v_day=31 THEN v_day1:='31';

              IF v_month=1 THEN v_month1:='01';
              IF v_month=2 THEN v_month1:='02';
              IF v_month=3 THEN v_month1:='03';
              IF v_month=4 THEN v_month1:='04';
              IF v_month=5 THEN v_month1:='05';
              IF v_month=6 THEN v_month1:='06';
              IF v_month=7 THEN v_month1:='07';
              IF v_month=8 THEN v_month1:='08';
              IF v_month=9 THEN v_month1:='09';
              IF v_month=10 THEN v_month1:='10';
              IF v_month=11 THEN v_month1:='11';
              IF v_month=12 THEN v_month1:='12';

              IF v_year=15 THEN v_year1:='15';
              IF v_year=16 THEN v_year1:='16';
              IF v_year=17 THEN v_year1:='17';
              IF v_year=18 THEN v_year1:='18';
              IF v_year=19 THEN v_year1:='19';
              IF v_year=20 THEN v_year1:='20';
              IF v_year=21 THEN v_year1:='21';

              v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
              Sheet.Range('J'+j).Value := FORMAT(v_ACL_SP_E);
              Sheet.Range('J'+j).NumberFormat := 'TT/MM/JJ';
              j := INCSTR (j);
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','85');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('B'+j).Value := vkgk."Sell-to Address";
              Sheet.Range('C'+j).Value := vkgk."Sell-to Post Code";
              Sheet.Range('D'+j).Value := vkgk."Sell-to City";
              Sheet.Range('E'+j).Value := vkgk."Sell-to Country/Region Code";
              Sheet.Range('F'+j).Value := FORMAT(vkgz."No.");
              Sheet.Range('G'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              IF vkgk."Currency Code" = '' THEN BEGIN
                Sheet.Range('H'+j).Value := FORMAT((vkgz.Amount)*(-1));
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
                v_Total_Sum:=v_Total_Sum+ ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
              END;
              Sheet.Range('I'+j).Value := 'EUR';
              //Sheet.Range('J'+j).Value := vkgk."Posting Date";
              v_day:=DATE2DMY(vkgk."Posting Date",1);
              v_month:=DATE2DMY(vkgk."Posting Date",2);
              v_year:=DATE2DMY(vkgk."Posting Date",3)-2000;

              IF v_day=1 THEN v_day1:='01';
              IF v_day=2 THEN v_day1:='02';
              IF v_day=3 THEN v_day1:='03';
              IF v_day=4 THEN v_day1:='04';
              IF v_day=5 THEN v_day1:='05';
              IF v_day=6 THEN v_day1:='06';
              IF v_day=7 THEN v_day1:='07';
              IF v_day=8 THEN v_day1:='08';
              IF v_day=9 THEN v_day1:='09';
              IF v_day=10 THEN v_day1:='10';
              IF v_day=11 THEN v_day1:='11';
              IF v_day=12 THEN v_day1:='12';
              IF v_day=13 THEN v_day1:='13';
              IF v_day=14 THEN v_day1:='14';
              IF v_day=15 THEN v_day1:='15';
              IF v_day=16 THEN v_day1:='16';
              IF v_day=17 THEN v_day1:='17';
              IF v_day=18 THEN v_day1:='18';
              IF v_day=19 THEN v_day1:='19';
              IF v_day=20 THEN v_day1:='20';
              IF v_day=21 THEN v_day1:='21';
              IF v_day=22 THEN v_day1:='22';
              IF v_day=23 THEN v_day1:='23';
              IF v_day=24 THEN v_day1:='24';
              IF v_day=25 THEN v_day1:='25';
              IF v_day=26 THEN v_day1:='26';
              IF v_day=27 THEN v_day1:='27';
              IF v_day=28 THEN v_day1:='28';
              IF v_day=29 THEN v_day1:='29';
              IF v_day=30 THEN v_day1:='30';
              IF v_day=31 THEN v_day1:='31';

              IF v_month=1 THEN v_month1:='01';
              IF v_month=2 THEN v_month1:='02';
              IF v_month=3 THEN v_month1:='03';
              IF v_month=4 THEN v_month1:='04';
              IF v_month=5 THEN v_month1:='05';
              IF v_month=6 THEN v_month1:='06';
              IF v_month=7 THEN v_month1:='07';
              IF v_month=8 THEN v_month1:='08';
              IF v_month=9 THEN v_month1:='09';
              IF v_month=10 THEN v_month1:='10';
              IF v_month=11 THEN v_month1:='11';
              IF v_month=12 THEN v_month1:='12';

              IF v_year=15 THEN v_year1:='15';
              IF v_year=16 THEN v_year1:='16';
              IF v_year=17 THEN v_year1:='17';
              IF v_year=18 THEN v_year1:='18';
              IF v_year=19 THEN v_year1:='19';
              IF v_year=20 THEN v_year1:='20';
              IF v_year=21 THEN v_year1:='21';

              v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
              Sheet.Range('J'+j).Value := FORMAT(v_ACL_SP_E);
              Sheet.Range('J'+j).NumberFormat := 'TT/MM/JJ';
              j := INCSTR (j);
            UNTIL vkgz.NEXT=0;
          END;
        UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften

      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\FERRARI_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\FERRARI_TOPAS_POS_lfd.xlsx');
      Book._SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\FERRARI_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE TEST@1140006();
    BEGIN
    END;

    PROCEDURE DSP@1140011();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','17');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkrk."No.";
              Sheet.Range('D'+j).Value := vkrz."No.";
              Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
              Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
              IF vkrk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkrk."Currency Code";
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('H'+j).Value := ((vkrz.Amount)/(vkrk."Currency Factor"));
                v_Total_Sum:=v_Total_Sum+ ((vkrz.Amount)/(vkrk."Currency Factor"));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkrz.Amount);
                v_Total_Sum:=v_Total_Sum+(vkrz.Amount);
              END;
              //Sheet.Range('H'+j).Value := Format(vkrz."Unit Price"* vkrz.Quantity);
              Sheet.Range('I'+j).Value := vkrk."Posting Date";
              j := INCSTR (j);
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','17');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkgk."No.";
              Sheet.Range('D'+j).Value := vkgz."No.";
              Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
              IF vkgk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkgk."Currency Code";
              END;
              IF vkgk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
              END;
                //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
                Sheet.Range('I'+j).Value := vkgk."Posting Date";
                j := INCSTR (j);
            UNTIL vkgz.NEXT=0;
          END;
        UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\DSP_TOPAS_POS_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\DSP_TOPAS_POS_lfd.xlsx');
      Book._SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\DSP_TOPAS_POS_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE ACS2@1140014();
    BEGIN
      v_Total_Sum := 0;

      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      //Sheet.StandardWidth := 30;
      Sheet.Range('A:A').ColumnWidth := 20;
      Sheet.Range('C:D').ColumnWidth := 20;
      Sheet.Range('E:E').ColumnWidth := 8;
      Sheet.Range('F:F').ColumnWidth := 20;
      Sheet.Range('G:G').ColumnWidth := 10;
      Sheet.Range('J:J').ColumnWidth := 2;
      Sheet.Range('L:L').ColumnWidth := 2;
      Sheet.Range('P:P').ColumnWidth := 2;
      Sheet.Range('R:R').ColumnWidth := 2;
      Sheet.Range('V:V').ColumnWidth := 2;
      Sheet.Range('X:X').ColumnWidth := 2;
      Sheet.Range('AC:AC').ColumnWidth := 4;
      //Sheet.Range('AD:AF').ColumnWidth := 10;
      Sheet.Range('AG:AH').ColumnWidth := 20;

      Sheet.Range('AD:AF').NumberFormat:='#.##0,00';

      Sheet.Range('A1').Value := 'POS Vendor Number';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Sales Rep Name';
      Sheet.Range('C1').Value := 'Bill To Acct# or Customer #';
      Sheet.Range('D1').Value := 'Invoice Number';
      Sheet.Range('E1').Value := 'Invoice or Ship Date';
      Sheet.Range('F1').Value := 'PO Number';
      Sheet.Range('G1').Value := 'Bill To Name';
      Sheet.Range('H1').Value := 'Bill To Adress';
      Sheet.Range('I1').Value := 'Bill To City';
      Sheet.Range('J1').Value := 'Bill To State';
      Sheet.Range('K1').Value := 'Bill To Zip';
      Sheet.Range('L1').Value := 'Bill To Country';
      Sheet.Range('M1').Value := 'Ship To Name';
      Sheet.Range('N1').Value := 'Ship To Adress';
      Sheet.Range('O1').Value := 'Ship To City';
      Sheet.Range('P1').Value := 'Ship To State';
      Sheet.Range('Q1').Value := 'Ship To Zip';
      Sheet.Range('R1').Value := 'Ship To Country';
      Sheet.Range('S1').Value := 'EndUser Name';
      Sheet.Range('T1').Value := 'EndUser Adress';
      Sheet.Range('U1').Value := 'EndUser City';
      Sheet.Range('V1').Value := 'EndUser State';
      Sheet.Range('W1').Value := 'EndUser Zip';
      Sheet.Range('X1').Value := 'EndUser Country';
      Sheet.Range('Y1').Value := 'Distributer Item #';
      Sheet.Range('Z1').Value := 'AudioCodes Item #';
      Sheet.Range('AA1').Value := 'Item Description';
      Sheet.Range('AB1').Value := 'Serial #';
      Sheet.Range('AC1').Value := 'Quantity';
      Sheet.Range('AD1').Value := 'Extended Cost (Euro)';
      Sheet.Range('AE1').Value := 'Extended Net Cost (Euro)';
      Sheet.Range('AF1').Value := 'Discounts/Rebates (Euro)';
      Sheet.Range('AG1').Value := 'DPA Number';
      Sheet.Range('AH1').Value := 'DPA Description';
      Sheet.Range('AI1').Value := 'End User Application';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      Artikelposten.RESET;
      Artikelposten.SETFILTER(Artikelposten."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER(Artikelposten."Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      Artikelposten.SETFILTER(Artikelposten."Invoiced Quantity",'<>%1',0);
      IF Artikelposten.FIND('-') THEN BEGIN
        REPEAT
          v_ACL_SP_A:='';
          v_ACL_SP_B:='';
          v_ACL_SP_C:='';
          v_ACL_SP_D:='';
          v_ACL_SP_E:='';
          v_ACL_SP_F:='';
          v_ACL_SP_G:='';
          v_ACL_SP_H:='';
          v_ACL_SP_I:='';
          v_ACL_SP_J:='';
          v_ACL_SP_K:='';
          v_ACL_SP_L:='';
          v_ACL_SP_M:='';
          v_ACL_SP_N:='';
          v_ACL_SP_O:='';
          v_ACL_SP_P:='';
          v_ACL_SP_Q:='';
          v_ACL_SP_R:='';
          v_ACL_SP_S:='';
          v_ACL_SP_T:='';
          v_ACL_SP_U:='';
          v_ACL_SP_V:='';
          v_ACL_SP_W:='';
          v_ACL_SP_X:='';
          v_ACL_SP_Y:='';
          v_ACL_SP_Z:='';
          v_ACL_SP_AA:='';
          v_ACL_SP_AB:='';
          v_ACL_SP_AC:=0;
          v_ACL_SP_AD:=0;
          v_ACL_SP_AE:=0;
          v_ACL_SP_AF:=0;
          v_ACL_SP_AG:='';
          v_ACL_SP_AH:='';
          v_ACL_SP_AI:='';
          v_day:=0;
          v_month:=0;
          v_year:=0;

          vklz.RESET;
          vklz.SETFILTER(vklz."Document No.",'%1',Artikelposten."Document No.");
          //  **********************************************************************************************************************
          vklz.SETFILTER(vklz."Manufacturer Code",'%1|%2|%3|%4','57','5710','5720','5730');
          //  ***************************************************************************************************************************
          vklz.SETFILTER(vklz.Quantity,'<>%1',0);
          vklz.SETFILTER(vklz."No.",'%1',Artikelposten."Item No.");
          vklz.SETFILTER(vklz."Item Shpt. Entry No.",'%1',Artikelposten."Entry No.");
          IF vklz.FIND('-') THEN BEGIN
            REPEAT
              vklk.RESET;
              vklk.SETFILTER(vklk."No.",'%1',vklz."Document No.");
              IF vklk.FINDFIRST() THEN BEGIN
              Sheet.Range('A'+j).Value := '';
              //v_ACL_SP_A:=PADSTR('Johannes Weiss',20);
              //Sheet.Range('A'+j).Value := v_ACL_SP_A;
              //Sheet.Range('B'+j).Value := 'Johannes Weiss';
              v_ACL_SP_B:='Johannes Weiss';
              Sheet.Range('B'+j).Value := v_ACL_SP_B;
              //Sheet.Range('C'+j).Value := vklk."Sell-to Customer No.";
              v_ACL_SP_C:=PADSTR(vklk."Sell-to Customer No.",20);
              Sheet.Range('C'+j).Value := v_ACL_SP_C;
              //Sheet.Range('D'+j).Value := vklk."No.";
              v_ACL_SP_D:= PADSTR(vklk."No.",20);
              Sheet.Range('D'+j).Value := v_ACL_SP_D;
              //v_day:=DATE2DMY(vklk."Posting Date",1);
              //v_month:=DATE2DMY(vklk."Posting Date",2);
              //v_year:=DATE2DMY(vklk."Posting Date",3)-2000;

              IF v_day=1 THEN v_day1:='01';
              IF v_day=2 THEN v_day1:='02';
              IF v_day=3 THEN v_day1:='03';
              IF v_day=4 THEN v_day1:='04';
              IF v_day=5 THEN v_day1:='05';
              IF v_day=6 THEN v_day1:='06';
              IF v_day=7 THEN v_day1:='07';
              IF v_day=8 THEN v_day1:='08';
              IF v_day=9 THEN v_day1:='09';
              IF v_day=10 THEN v_day1:='10';
              IF v_day=11 THEN v_day1:='11';
              IF v_day=12 THEN v_day1:='12';
              IF v_day=13 THEN v_day1:='13';
              IF v_day=14 THEN v_day1:='14';
              IF v_day=15 THEN v_day1:='15';
              IF v_day=16 THEN v_day1:='16';
              IF v_day=17 THEN v_day1:='17';
              IF v_day=18 THEN v_day1:='18';
              IF v_day=19 THEN v_day1:='19';
              IF v_day=20 THEN v_day1:='20';
              IF v_day=21 THEN v_day1:='21';
              IF v_day=22 THEN v_day1:='22';
              IF v_day=23 THEN v_day1:='23';
              IF v_day=24 THEN v_day1:='24';
              IF v_day=25 THEN v_day1:='25';
              IF v_day=26 THEN v_day1:='26';
              IF v_day=27 THEN v_day1:='27';
              IF v_day=28 THEN v_day1:='28';
              IF v_day=29 THEN v_day1:='29';
              IF v_day=30 THEN v_day1:='30';
              IF v_day=31 THEN v_day1:='31';

              IF v_month=1 THEN v_month1:='01';
              IF v_month=2 THEN v_month1:='02';
              IF v_month=3 THEN v_month1:='03';
              IF v_month=4 THEN v_month1:='04';
              IF v_month=5 THEN v_month1:='05';
              IF v_month=6 THEN v_month1:='06';
              IF v_month=7 THEN v_month1:='07';
              IF v_month=8 THEN v_month1:='08';
              IF v_month=9 THEN v_month1:='09';
              IF v_month=10 THEN v_month1:='10';
              IF v_month=11 THEN v_month1:='11';
              IF v_month=12 THEN v_month1:='12';

              IF v_year=15 THEN v_year1:='15';
              IF v_year=16 THEN v_year1:='16';
              IF v_year=17 THEN v_year1:='17';
              IF v_year=18 THEN v_year1:='18';
              IF v_year=19 THEN v_year1:='19';
              IF v_year=20 THEN v_year1:='20';
              IF v_year=21 THEN v_year1:='21';
              IF v_year=22 THEN v_year1:='22';
              IF v_year=23 THEN v_year1:='23';
              IF v_year=24 THEN v_year1:='24';
              IF v_year=25 THEN v_year1:='25';
              IF v_year=26 THEN v_year1:='26';
              IF v_year=27 THEN v_year1:='27';
              IF v_year=28 THEN v_year1:='28';
              IF v_year=29 THEN v_year1:='29';
              IF v_year=30 THEN v_year1:='30';
              IF v_year=31 THEN v_year1:='31';
              IF v_year=32 THEN v_year1:='32';
              IF v_year=33 THEN v_year1:='33';
              IF v_year=34 THEN v_year1:='34';
              IF v_year=35 THEN v_year1:='35';

              //Sheet.Range('E'+j).Value :=FORMAT(v_month)+'/'+FORMAT(v_day)+'/'+FORMAT(v_year);
              //v_ACL_SP_E:=FORMAT((v_month1)+'/'+(v_day1)+'/'+(v_year1));
              v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
              //v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/');
              Sheet.Range('E'+j).Value := FORMAT(v_ACL_SP_E);
              Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';


              //Sheet.Range('E'+j).Value := vklk."Posting Date";
              //Sheet.Range('F'+j).Value := vklk."External Document No.";
              v_ACL_SP_F := PADSTR(vklk."External Document No.",20);
              Sheet.Range('F'+j).Value := v_ACL_SP_F;

              //Sheet.Range('G'+j).Value := vklk."Bill-to Name";
              v_ACL_SP_G :=PADSTR(vklk."Bill-to Name",30);
              Sheet.Range('G'+j).Value := v_ACL_SP_G;

              //Sheet.Range('H'+j).Value := vklk."Bill-to Address";
              v_ACL_SP_H := PADSTR(vklk."Bill-to Address",30);
              Sheet.Range('H'+j).Value := v_ACL_SP_H;

              //Sheet.Range('I'+j).Value := vklk."Bill-to City";
              v_ACL_SP_I := PADSTR(vklk."Bill-to City",30);
              Sheet.Range('I'+j).Value := v_ACL_SP_I;

              //Sheet.Range('J'+j).Value := vklk."Bill-to County";
              v_ACL_SP_J := PADSTR(vklk."Bill-to County",2);
              Sheet.Range('J'+j).Value := v_ACL_SP_J;

              //Sheet.Range('K'+j).Value := vklk."Bill-to Post Code";
              v_ACL_SP_K := PADSTR(vklk."Bill-to Post Code",10);
              Sheet.Range('K'+j).Value := v_ACL_SP_K;

              //Sheet.Range('L'+j).Value := vklk."Bill-to Country/Region Code";
              v_ACL_SP_L := PADSTR(vklk."Bill-to Country/Region Code",2);
              Sheet.Range('L'+j).Value := v_ACL_SP_L;

              //Sheet.Range('M'+j).Value := vklk."Ship-to Name";
              v_ACL_SP_M := PADSTR(vklk."Ship-to Name",30);
              Sheet.Range('M'+j).Value := v_ACL_SP_M;

              //Sheet.Range('N'+j).Value := vklk."Ship-to Address";
              v_ACL_SP_N := PADSTR(vklk."Ship-to Address",30);
              Sheet.Range('N'+j).Value := v_ACL_SP_N;

              //Sheet.Range('O'+j).Value := vklk."Ship-to City";
              v_ACL_SP_O := PADSTR(vklk."Ship-to City",30);
              Sheet.Range('O'+j).Value := v_ACL_SP_O;

              //Sheet.Range('P'+j).Value := vklk."Ship-to County";
              v_ACL_SP_P := PADSTR(vklk."Ship-to County",2);
              Sheet.Range('P'+j).Value := v_ACL_SP_P;

              //Sheet.Range('Q'+j).Value := vklk."Ship-to Post Code";
              v_ACL_SP_Q := PADSTR(vklk."Ship-to Post Code",10);
              Sheet.Range('Q'+j).Value := v_ACL_SP_Q;

              //Sheet.Range('R'+j).Value := vklk."Ship-to Country/Region Code";
              v_ACL_SP_R := PADSTR(vklk."Ship-to Country/Region Code",2);
              Sheet.Range('R'+j).Value := v_ACL_SP_R;

              //Sheet.Range('S'+j).Value := vklk.Endkunde;
              v_ACL_SP_S := PADSTR(vklk.Endkunde,30);
              Sheet.Range('S'+j).Value := v_ACL_SP_S;

              //Sheet.Range('T'+j).Value := vklk."Endkunde Adresse";
              v_ACL_SP_T := PADSTR(vklk."Endkunde Adresse",30);
              Sheet.Range('T'+j).Value := v_ACL_SP_T;

              //Sheet.Range('U'+j).Value := vklk."Endkunde Ort";
              v_ACL_SP_U := PADSTR(vklk."Endkunde Ort",30);
              Sheet.Range('U'+j).Value := v_ACL_SP_U;

              Sheet.Range('V'+j).Value := '';
              //v_ACL_SP_V := PADSTR('',2);
              //Sheet.Range('V'+j).Value := v_ACL_SP_V;

              //Sheet.Range('W'+j).Value := vklk."Endkunde PLZ-Code";
              v_ACL_SP_W := PADSTR(vklk."Endkunde PLZ-Code",10);
              Sheet.Range('W'+j).Value := v_ACL_SP_W;

              //Sheet.Range('X'+j).Value := vklk."Endkunde Land";
              v_ACL_SP_X := PADSTR(vklk."Endkunde Land",2);
              Sheet.Range('X'+j).Value := v_ACL_SP_X;

              //Sheet.Range('Y'+j).Value := vklz."No.";
              v_ACL_SP_Y := PADSTR(vklz."No.",30);
              Sheet.Range('Y'+j).Value := v_ACL_SP_Y;

              //Sheet.Range('Z'+j).Value := vklz."No.";
              v_ACL_SP_Z := PADSTR(vklz."No.",30);
              Sheet.Range('Z'+j).Value := v_ACL_SP_Z;

              //Sheet.Range('AA'+j).Value := vklz.Description;
              v_ACL_SP_AA := PADSTR(vklz.Description,30);
              Sheet.Range('AA'+j).Value := v_ACL_SP_AA;

              //Sheet.Range('AB'+j).Value := Artikelposten."Serial No.";
              v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
              Sheet.Range('AB'+j).Value := v_ACL_SP_AB;

              //Sheet.Range('AC'+j).Value := FORMAT(Artikelposten.Quantity*(-1));
              v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
              Sheet.Range('AC'+j).Value := v_ACL_SP_AC;
            END;

            Debitor.RESET;
            Debitor.SETFILTER(Debitor."No.",'%1',vklz."Sell-to Customer No.");
            IF Debitor.FINDFIRST() THEN BEGIN
              //Sheet.Range('AI'+j).Value := Debitor.AC_Solutionpartner;
              v_ACL_SP_AI := Debitor.AC_Solutionpartner;
              Sheet.Range('AI'+j).Value := Debitor.AC_Solutionpartner;
            END;

            //  **************************************  EK aus Preisliste  ******************************
            "Ek-Preise".RESET;
            "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vklz."No.");
            "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
            //"Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');

            "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
            IF "Ek-Preise".FINDFIRST() THEN BEGIN
              //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
              v_ACL_SP_AD :=("Ek-Preise"."Direct Unit Cost"*((Artikelposten.Quantity)*(-1)));
              Sheet.Range('AD'+j).Value := v_ACL_SP_AD;
              // END ELSE BEGIN
              // "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
              // "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              // IF "Ek-Preise".FINDFIRST() THEN BEGIN
              // //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
              // v_ACL_SP_AD :=("Ek-Preise"."Direct Unit Cost");
              // Sheet.Range('AD'+j).Value := FORMAT(v_ACL_SP_AD);
              // //Sheet.Range('AD'+j).NumberFormat := '0.00';
              // END;
            END;

            //v_ACL_SP_AD:=(vklz."DC-Preis (MW)");
            //Sheet.Range('AD'+j).Value := v_ACL_SP_AD;

            v_ACL_SP_AE:=((vklz."DC-Preis (MW)"*Artikelposten.Quantity)*(-1));
            Sheet.Range('AE'+j).Value := v_ACL_SP_AE;

            // Falls DC-Preis fehlt **** *************************************
            IF v_ACL_SP_AE=0 THEN BEGIN

              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vklz."No.");
              "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST() THEN BEGIN
                // v_ACL_SP_AD :=(("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity)*(-1));
                // Sheet.Range('AD'+j).Value := v_ACL_SP_AD;
                v_ACL_SP_AE :=(("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity)*(-1));
                Sheet.Range('AE'+j).Value := v_ACL_SP_AE;
              END;
            END;
            "Ek-Preise".RESET;
            "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vklz."No.");
            "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
            "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
            IF "Ek-Preise".FINDFIRST() THEN BEGIN
              v_ACL_SP_AF :=(((("Ek-Preise"."Direct Unit Cost")*(Artikelposten.Quantity)*(-1)))-v_ACL_SP_AE);
              Sheet.Range('AF'+j).Value := v_ACL_SP_AF;
            END;
            quotedaten.RESET;
            quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vklz."Quotenr.");
            IF quotedaten.FINDFIRST() THEN BEGIN
              //Sheet.Range('AE'+j).Value :=FORMAT(quotedaten.Quotepreis);
              //v_ACL_SP_AE :=(quotedaten.Quotepreis);
              //Sheet.Range('AE'+j).Value := v_ACL_SP_AE;

              //Sheet.Range('AF'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis);
              //v_ACL_SP_AF :=("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis);
              //Sheet.Range('AF'+j).Value := v_ACL_SP_AF;

              //Sheet.Range('AG'+j).Value := quotedaten."Quotenr. Hersteller";
              v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
              Sheet.Range('AG'+j).Value := v_ACL_SP_AG;

              //Sheet.Range('AH'+j).Value := quotedaten.Genehmigungstext;
              v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
              Sheet.Range('AH'+j).Value := v_ACL_SP_AH;
            END;
            j := INCSTR (j);
          UNTIL vklz.NEXT=0;
        END;

      UNTIL Artikelposten.NEXT=0;
      END;
      //  Ende Ums„tze


      // Anfang Gutschriften
      Artikelposten.RESET;
      Artikelposten.SETFILTER(Artikelposten."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      Artikelposten.SETFILTER(Artikelposten."Entry Type",'%1',Artikelposten."Entry Type"::Sale);
      IF Artikelposten.FIND('-') THEN BEGIN
        REPEAT
          v_ACL_SP_A:='';
          v_ACL_SP_B:='';
          v_ACL_SP_C:='';
          v_ACL_SP_D:='';
          v_ACL_SP_E:='';
          v_ACL_SP_F:='';
          v_ACL_SP_G:='';
          v_ACL_SP_H:='';
          v_ACL_SP_I:='';
          v_ACL_SP_J:='';
          v_ACL_SP_K:='';
          v_ACL_SP_L:='';
          v_ACL_SP_M:='';
          v_ACL_SP_N:='';
          v_ACL_SP_O:='';
          v_ACL_SP_P:='';
          v_ACL_SP_Q:='';
          v_ACL_SP_R:='';
          v_ACL_SP_S:='';
          v_ACL_SP_T:='';
          v_ACL_SP_U:='';
          v_ACL_SP_V:='';
          v_ACL_SP_W:='';
          v_ACL_SP_X:='';
          v_ACL_SP_Y:='';
          v_ACL_SP_Z:='';
          v_ACL_SP_AA:='';
          v_ACL_SP_AB:='';
          v_ACL_SP_AC:=0;
          v_ACL_SP_AD:=0;
          v_ACL_SP_AE:=0;
          v_ACL_SP_AF:=0;
          v_ACL_SP_AG:='';
          v_ACL_SP_AH:='';
          v_ACL_SP_AI:='';
          v_day:=0;
          v_month:=0;
          v_year:=0;
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',Artikelposten."Document No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1|%2|%3|%4','57','5710','5720','5730');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."No.",'%1',Artikelposten."Item No.");
          //vkgz.SETFILTER(vkgz."Item Shpt. Entry No.",'%1',Artikelposten."Entry No.");
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              vkgk.RESET;
              vkgk.SETFILTER(vkgk."No.",'%1',vkgz."Document No.");
              IF vkgk.FINDFIRST() THEN BEGIN
                Sheet.Range('A'+j).Value := '';
                Sheet.Range('B'+j).Value := 'Johannes Weiss';
                //Sheet.Range('C'+j).Value := vkgk."Sell-to Customer No.";
                v_ACL_SP_C := PADSTR(vkgk."Sell-to Customer No.",20);
                Sheet.Range('C'+j).Value := v_ACL_SP_C;
                //Sheet.Range('D'+j).Value := vkgk."No.";
                v_ACL_SP_D := PADSTR(vkgk."No.",20);
                Sheet.Range('D'+j).Value := v_ACL_SP_D;
                Sheet.Range('E'+j).Value := vkgk."Posting Date";
                //v_ACL_SP_E := vkgk."Posting Date";
                //Sheet.Range('E'+j).Value := v_ACL_SP_E;
                v_day:=DATE2DMY(vkgk."Posting Date",1);
                v_month:=DATE2DMY(vkgk."Posting Date",2);
                v_year:=DATE2DMY(vkgk."Posting Date",3)-2000;

                IF v_day=1 THEN v_day1:='01';
                IF v_day=2 THEN v_day1:='02';
                IF v_day=3 THEN v_day1:='03';
                IF v_day=4 THEN v_day1:='04';
                IF v_day=5 THEN v_day1:='05';
                IF v_day=6 THEN v_day1:='06';
                IF v_day=7 THEN v_day1:='07';
                IF v_day=8 THEN v_day1:='08';
                IF v_day=9 THEN v_day1:='09';
                IF v_day=10 THEN v_day1:='10';
                IF v_day=11 THEN v_day1:='11';
                IF v_day=12 THEN v_day1:='12';
                IF v_day=13 THEN v_day1:='13';
                IF v_day=14 THEN v_day1:='14';
                IF v_day=15 THEN v_day1:='15';
                IF v_day=16 THEN v_day1:='16';
                IF v_day=17 THEN v_day1:='17';
                IF v_day=18 THEN v_day1:='18';
                IF v_day=19 THEN v_day1:='19';
                IF v_day=20 THEN v_day1:='20';
                IF v_day=21 THEN v_day1:='21';
                IF v_day=22 THEN v_day1:='22';
                IF v_day=23 THEN v_day1:='23';
                IF v_day=24 THEN v_day1:='24';
                IF v_day=25 THEN v_day1:='25';
                IF v_day=26 THEN v_day1:='26';
                IF v_day=27 THEN v_day1:='27';
                IF v_day=28 THEN v_day1:='28';
                IF v_day=29 THEN v_day1:='29';
                IF v_day=30 THEN v_day1:='30';
                IF v_day=31 THEN v_day1:='31';

                IF v_month=1 THEN v_month1:='01';
                IF v_month=2 THEN v_month1:='02';
                IF v_month=3 THEN v_month1:='03';
                IF v_month=4 THEN v_month1:='04';
                IF v_month=5 THEN v_month1:='05';
                IF v_month=6 THEN v_month1:='06';
                IF v_month=7 THEN v_month1:='07';
                IF v_month=8 THEN v_month1:='08';
                IF v_month=9 THEN v_month1:='09';
                IF v_month=10 THEN v_month1:='10';
                IF v_month=11 THEN v_month1:='11';
                IF v_month=12 THEN v_month1:='12';

                IF v_year=15 THEN v_year1:='15';
                IF v_year=16 THEN v_year1:='16';
                IF v_year=17 THEN v_year1:='17';
                IF v_year=18 THEN v_year1:='18';
                IF v_year=19 THEN v_year1:='19';
                IF v_year=20 THEN v_year1:='20';
                IF v_year=21 THEN v_year1:='21';
                IF v_year=22 THEN v_year1:='22';
                IF v_year=23 THEN v_year1:='23';
                IF v_year=24 THEN v_year1:='24';
                IF v_year=25 THEN v_year1:='25';
                IF v_year=26 THEN v_year1:='26';
                IF v_year=27 THEN v_year1:='27';
                IF v_year=28 THEN v_year1:='28';
                IF v_year=29 THEN v_year1:='29';
                IF v_year=30 THEN v_year1:='30';
                IF v_year=31 THEN v_year1:='31';
                IF v_year=32 THEN v_year1:='32';
                IF v_year=33 THEN v_year1:='33';
                IF v_year=34 THEN v_year1:='34';
                IF v_year=35 THEN v_year1:='35';

                //Sheet.Range('E'+j).Value :=FORMAT(v_month)+'/'+FORMAT(v_day)+'/'+FORMAT(v_year);
                v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/'+FORMAT(v_year1));
                //v_ACL_SP_E:= FORMAT(FORMAT(v_month1)+'/'+FORMAT(v_day1)+'/');
                Sheet.Range('E'+j).Value := FORMAT(v_ACL_SP_E);
                Sheet.Range('E'+j).NumberFormat := 'TT/MM/JJ';

                //Sheet.Range('F'+j).Value := '';
                //*********************************************************************************************************************************
                //Sheet.Range('G'+j).Value := vkgk."Bill-to Name";
                v_ACL_SP_G := PADSTR(vkgk."Bill-to Name",30);
                Sheet.Range('G'+j).Value := v_ACL_SP_G;
                //Sheet.Range('H'+j).Value := vkgk."Bill-to Address";
                v_ACL_SP_H := PADSTR(vkgk."Bill-to Address",30);
                Sheet.Range('H'+j).Value := v_ACL_SP_H;
                //Sheet.Range('I'+j).Value := vkgk."Bill-to City";
                v_ACL_SP_I := PADSTR(vkgk."Bill-to City",30);
                Sheet.Range('I'+j).Value := v_ACL_SP_I;
                //Sheet.Range('J'+j).Value := vkgk."Bill-to County";
                v_ACL_SP_J := PADSTR(vkgk."Bill-to County",2);
                Sheet.Range('J'+j).Value := v_ACL_SP_J;
                //Sheet.Range('K'+j).Value := vkgk."Bill-to Post Code";
                v_ACL_SP_K := PADSTR(vkgk."Bill-to Post Code",10);
                Sheet.Range('K'+j).Value := v_ACL_SP_K;
                //Sheet.Range('L'+j).Value := vkgk."Bill-to Country/Region Code";
                v_ACL_SP_L := PADSTR(vkgk."Bill-to Country/Region Code",2);
                Sheet.Range('L'+j).Value := v_ACL_SP_L;
                //Sheet.Range('M'+j).Value := vkgk."Ship-to Name";
                v_ACL_SP_M := PADSTR(vkgk."Ship-to Name",30);
                Sheet.Range('M'+j).Value := v_ACL_SP_M;
                //Sheet.Range('N'+j).Value := vkgk."Ship-to Address";
                v_ACL_SP_N := PADSTR(vkgk."Ship-to Address",30);
                Sheet.Range('N'+j).Value := v_ACL_SP_N;
                //Sheet.Range('O'+j).Value := vkgk."Ship-to City";
                v_ACL_SP_O := PADSTR(vkgk."Ship-to City",30);
                Sheet.Range('O'+j).Value := v_ACL_SP_O;
                //Sheet.Range('P'+j).Value := vkgk."Ship-to County";
                v_ACL_SP_P := PADSTR(vkgk."Ship-to County",2);
                Sheet.Range('P'+j).Value := v_ACL_SP_P;
                //Sheet.Range('Q'+j).Value := vkgk."Ship-to Post Code";
                v_ACL_SP_Q := PADSTR(vkgk."Ship-to Post Code",10);
                Sheet.Range('Q'+j).Value := v_ACL_SP_Q;
                //Sheet.Range('R'+j).Value := vkgk."Ship-to Country/Region Code";
                v_ACL_SP_R := PADSTR(vkgk."Ship-to Country/Region Code",2);
                Sheet.Range('R'+j).Value := v_ACL_SP_R;
                //Sheet.Range('S'+j).Value := vkgk.Endkunde;
                //Sheet.Range('T'+j).Value := vkgk."Endkunde Adresse";
                //Sheet.Range('U'+j).Value := vkgk."Endkunde Ort";
                //Sheet.Range('V'+j).Value := '';
                //Sheet.Range('W'+j).Value := vkgk."Endkunde PLZ-Code";
                //Sheet.Range('X'+j).Value := vkgk."Endkunde Land";
                //Sheet.Range('Y'+j).Value := vkgz."No.";
                v_ACL_SP_Y := PADSTR(vkgz."No.",30);
                Sheet.Range('Y'+j).Value := v_ACL_SP_Y;
                //Sheet.Range('Z'+j).Value := vkgz."No.";
                v_ACL_SP_Z := PADSTR(vkgz."No.",30);
                Sheet.Range('Z'+j).Value := v_ACL_SP_Z;
                //Sheet.Range('AA'+j).Value := vkgz.Description;
                v_ACL_SP_AA := PADSTR(vkgz.Description,30);
                Sheet.Range('AA'+j).Value := v_ACL_SP_AA;
                //Sheet.Range('AB'+j).Value := Artikelposten."Serial No.";
                v_ACL_SP_AB := PADSTR(Artikelposten."Serial No.",30);
                Sheet.Range('AB'+j).Value := v_ACL_SP_AB;
                //Sheet.Range('AC'+j).Value := FORMAT(Artikelposten.Quantity*(-1));
                v_ACL_SP_AC := (Artikelposten.Quantity*(-1));
                Sheet.Range('AC'+j).Value := v_ACL_SP_AC;
              END;
              Debitor.RESET;
              Debitor.SETFILTER(Debitor."No.",'%1',vkgz."Sell-to Customer No.");
              IF Debitor.FINDFIRST() THEN BEGIN
                //Sheet.Range('AI'+j).Value := Debitor.AC_Solutionpartner;
                v_ACL_SP_AI := PADSTR(Debitor.AC_Solutionpartner,30);
               Sheet.Range('AI'+j).Value := v_ACL_SP_AI;
              END;
              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
              "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
              "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST() THEN BEGIN
                //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
                v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*Artikelposten.Quantity*(-1));
                Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
                // END ELSE BEGIN
                // "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
                // "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
                // IF "Ek-Preise".FINDFIRST() THEN BEGIN
                // //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
                // v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*(-1));
                // Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
                // END;
              END;
              // v_ACL_SP_AD:=(vkgz."DC-Preis (MW)"*(-1));
              // Sheet.Range('AD'+j).Value := v_ACL_SP_AD;

              v_ACL_SP_AE:=((vkgz."DC-Preis (MW)"*Artikelposten.Quantity)*(-1));
              Sheet.Range('AE'+j).Value := v_ACL_SP_AE;
              // Falls DC-Preis fehlt ****
              IF v_ACL_SP_AE=0 THEN BEGIN
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
                "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
                "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST() THEN BEGIN
                  // v_ACL_SP_AD :=("Ek-Preise"."Direct Unit Cost")*(-1);
                  // Sheet.Range('AD'+j).Value := v_ACL_SP_AD;
                  v_ACL_SP_AE:=(("Ek-Preise"."Direct Unit Cost"*Artikelposten.Quantity)*(-1));
                  Sheet.Range('AE'+j).Value := v_ACL_SP_AE;
                END;
              END;
              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
              "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST() THEN BEGIN
                v_ACL_SP_AF :=(((("Ek-Preise"."Direct Unit Cost")*Artikelposten.Quantity)*(-1))-v_ACL_SP_AE);
                Sheet.Range('AF'+j).Value := v_ACL_SP_AF;
              END;
              {
              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',vkgz."No.");
              "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
              "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST() THEN BEGIN
              //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
              v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*(-1));
              Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
              END ELSE BEGIN
              "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','');
              "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST() THEN BEGIN
              //Sheet.Range('AD'+j).Value :=FORMAT("Ek-Preise"."Direct Unit Cost");
              v_ACL_SP_AD := (("Ek-Preise"."Direct Unit Cost")*(-1));
              Sheet.Range('AD'+j).Value :=v_ACL_SP_AD;
              END;
              END;
              }
              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkgz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                IF quotedaten.Quotepreis<>0 THEN BEGIN
                  //Sheet.Range('AE'+j).Value :=FORMAT((quotedaten.Quotepreis)*(-1));
                  //v_ACL_SP_AE := ((quotedaten.Quotepreis)*(-1));
                  //Sheet.Range('AE'+j).Value :=v_ACL_SP_AE;
                  //Sheet.Range('AF'+j).Value :=FORMAT(("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis)*(-1));
                  //v_ACL_SP_AF := (("Ek-Preise"."Direct Unit Cost"-quotedaten.Quotepreis)*(-1));
                  //Sheet.Range('AF'+j).Value :=v_ACL_SP_AF;
                  //Sheet.Range('AG'+j).Value := quotedaten."Quotenr. Hersteller";
                  v_ACL_SP_AG := PADSTR(quotedaten."Quotenr. Hersteller",20);
                  Sheet.Range('AG'+j).Value := v_ACL_SP_AG;
                  //Sheet.Range('AH'+j).Value := quotedaten.Genehmigungstext;
                  v_ACL_SP_AH := PADSTR(quotedaten.Genehmigungstext,20);
                  Sheet.Range('AH'+j).Value := v_ACL_SP_AH;
                END;
              END;
              j := INCSTR (j);
            UNTIL vkgz.NEXT=0;
          END;
        UNTIL Artikelposten.NEXT=0;
      END;
      // Ende Gutschriften

      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_ACT_lfd.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_ACT_lfd.xlsx');
      Book._SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\ACS_TOPAS_ACT_lfd.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE ACS3@1000000026();
    BEGIN
      v_Total_Sum := 0;

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);

      //  Suchen aller Artikel mit Lagerbestand ungleich Null nur fr ACS
      //  ******************************************************************************

      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1','59');
      IF Artikel.FIND('-') THEN BEGIN
        v_lagerbestand := 0;
        RecNo := 0;
        TotalRecNo := Artikel.COUNT;
        RowNo := 1;
        ColumnNo := 1;
        EnterCell(RowNo,ColumnNo,'Disti',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Part Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Qty.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Per Unit Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Warehouse Location',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo + 1;
        REPEAT
          Artikelposten.RESET;
          Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
          Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
          Artikelposten.SETFILTER(Artikelposten."Location Code",'%1','ZENT');
          IF Artikelposten.FIND('-') THEN BEGIN
            v_lagerbestand := 0;
            REPEAT
              v_lagerbestand := v_lagerbestand + Artikelposten."Remaining Quantity";
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,Artikel."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(Artikelposten."Remaining Quantity"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,'DE',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(WORKDATE - 2),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EK_Lief.RESET;
              EK_Lief.SETFILTER(EK_Lief."Document No.",'%1',Artikelposten."Document No.");
              EK_Lief.SETFILTER(EK_Lief."Line No.",'%1',Artikelposten."Document Line No.");
              IF EK_Lief.FINDFIRST THEN BEGIN
                EnterCell(RowNo,4,FORMAT(EK_Lief."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,8,'Disti holen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',EK_Lief."No.");
                "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
                "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  EnterCell(RowNo,4,FORMAT("Ek-Preise"."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              RowNo := RowNo + 1;
            UNTIL Artikelposten.NEXT = 0;
          END;
          v_lagerbestand := 0;
          vkz.RESET;
          vkz.SETFILTER(vkz."No.",'%1',Artikel."No.");
          vkz.SETFILTER(vkz."Manufacturer Code",'%1','59');
          vkz.SETFILTER(vkz."Location Code",'%1','ZENT');
          vkz.SETFILTER(vkz."Qty. to Invoice",'>%1',0);
          IF vkz.FIND('-') THEN BEGIN
            REPEAT
              IF vkz."Qty. to Invoice" - vkz."Qty. to Ship" > 0 THEN BEGIN
                EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,2,vkz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,3,FORMAT(vkz."Qty. to Invoice" - vkz."Qty. to Ship"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,4,FORMAT(vkz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,5,'DE',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,6,FORMAT(WORKDATE - 2),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                RowNo := RowNo + 1;
              END;
            UNTIL vkz.NEXT = 0;
          END;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
        UNTIL Artikel.NEXT = 0;
      END;

      CREATE(wshFile,FALSE,TRUE);
      IF wshFile.FileExists(NewFileDirectory + 'ACS_TOPAS_INV_lfd' + ExcelFileExtensionTok) THEN
        wshFile.DeleteFile(NewFileDirectory + 'ACS_TOPAS_INV_lfd' + ExcelFileExtensionTok);
      CLEAR(wshFile);

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,'AudioCodes');
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2','AUDIOCODES',''),30),COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          //TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          TempExcelBuffer.OpenExcelWithoutAutoFit('AudioCodes','ACS_TOPAS_INV_lfd' + ExcelFileExtensionTok,NewFileDirectory,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    PROCEDURE GSI_2@1140015();
    BEGIN
      v_Total_Sum := 0;
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);

      CREATE(Excel,FALSE,TRUE);                                    //erzeugt excel
      CREATE(wshFile,FALSE,TRUE);
      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet

      Sheet.Range('F:F').NumberFormat:='###.###,00';
      Sheet.Range('H:H').NumberFormat:='###.###,00';

      Sheet.Range('A1').Value := 'Disti Name';                          // definiert die beschriftung der berschriftszeile
      Sheet.Range('B1').Value := 'Customer Name';
      Sheet.Range('C1').Value := 'Disti Invoice #';
      Sheet.Range('D1').Value := 'Part Number';
      Sheet.Range('E1').Value := 'Qty Sold';
      Sheet.Range('F1').Value := 'Resale';
      Sheet.Range('G1').Value := 'Currency';
      Sheet.Range('H1').Value := 'Total Resale EUR';
      Sheet.Range('I1').Value := 'Date of Sale';

      j := '2';                                                    // <- Import in excel ab Zeile 2
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','54');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkrk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkrk."No.";
              Sheet.Range('D'+j).Value := vkrz."No.";
              Sheet.Range('E'+j).Value := FORMAT(vkrz.Quantity);
              v_herstell_VK_Preis:=0;
              {   //
              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkrz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
               IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
                IF quotedaten."Hersteller-VK-Preis" < vkrz."VK-Preis (EKW)" THEN BEGIN
              //   Sheet.Range('M'+j).Value := quotedaten."Hersteller-VK-Preis";
              //   Sheet.Range('N'+j).Value := 'USD';
                 v_herstell_VK_Preis:= quotedaten."Hersteller-VK-Preis";
                END;
               END;
              END;
              }
              IF v_herstell_VK_Preis = 0 THEN BEGIN
                Sheet.Range('F'+j).Value := FORMAT(vkrz."Unit Price");
              END ELSE BEGIN
                Sheet.Range('F'+j).Value := FORMAT(v_herstell_VK_Preis);
              END;
              IF vkrk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkrk."Currency Code";
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                IF v_herstell_VK_Preis = 0 THEN BEGIN
                  Sheet.Range('H'+j).Value := ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
                  v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
                END ELSE BEGIN
                  Sheet.Range('H'+j).Value := ((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor"));
                  v_Total_Sum:=v_Total_Sum+ ((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor"));
                END;
              END ELSE BEGIN
                IF v_herstell_VK_Preis = 0 THEN BEGIN
                  Sheet.Range('H'+j).Value := (vkrz."Unit Price")*(vkrz.Quantity);
                  v_Total_Sum:=v_Total_Sum+((vkrz."Unit Price")*(vkrz.Quantity));
                END ELSE BEGIN
                  Sheet.Range('H'+j).Value := (v_herstell_VK_Preis)*(vkrz.Quantity);
                  v_Total_Sum:=v_Total_Sum+((v_herstell_VK_Preis)*(vkrz.Quantity));
                END;
              END;
              Sheet.Range('I'+j).Value := vkrk."Posting Date";
              j := INCSTR (j);
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','54');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              Sheet.Range('A'+j).Value := 'TOPAS electronic AG';
              Sheet.Range('B'+j).Value := vkgk."Sell-to Customer Name";
              Sheet.Range('C'+j).Value := vkgk."No.";
              Sheet.Range('D'+j).Value := vkgz."No.";
              Sheet.Range('E'+j).Value := FORMAT((vkgz.Quantity)*(-1));
              Sheet.Range('F'+j).Value := FORMAT((vkgz."Unit Price")*(-1));
              IF vkgk."Currency Code"='' THEN BEGIN
                Sheet.Range('G'+j).Value := 'EUR';
              END ELSE BEGIN
                Sheet.Range('G'+j).Value := vkgk."Currency Code";
              END;
              IF vkgk."Currency Factor"<>0 THEN BEGIN
                Sheet.Range('H'+j).Value := ((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)/(vkgk."Currency Factor")*(-1));
              END ELSE BEGIN
                Sheet.Range('H'+j).Value := (vkgz.Amount)*(-1);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount)*(-1));
              END;
              //Sheet.Range('H'+j).Value := Format(vkgz."Unit Price"*vkgz.Quantity);
              Sheet.Range('I'+j).Value := vkgk."Posting Date";
              j := INCSTR (j);
            UNTIL vkgz.NEXT=0;
          END;
        UNTIL vkgk.NEXT=0;
      END;
      // Ende Gutschriften
      j := INCSTR (j);
      Sheet.Range('H'+j).Value := v_Total_Sum;
      IF wshFile.FileExists('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GSI_TOPAS_POS_lfd_ohne_Quote-VK.xlsx') THEN
        wshFile.DeleteFile('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GSI_TOPAS_POS_lfd_ohne_Quote-VK.xlsx');
      Book._SaveAs('F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016\GSI_TOPAS_POS_lfd_ohne_Quote-VK.xlsx',51,'','',FALSE,FALSE);
      Excel.Visible (TRUE);

      CLEAR(Excel);
      CLEAR(wshFile);
    END;

    PROCEDURE Bankposten_suchen@1140016();
    BEGIN
      CreateExcel;

      RowNo := 1;
      EnterCell(RowNo,1,'Bankkto',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Datum',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Anfangssaldo',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Zugang',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Abgang',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Endsaldo',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      bankkto.RESET;
      IF v_bankkto <> '' THEN BEGIN
        bankkto.SETFILTER(bankkto."No.",'%1',v_bankkto);
      END ELSE BEGIN
        bankkto.SETFILTER(bankkto."No.",'<>%1','1850');
      END;
      IF bankkto.FIND('-') THEN BEGIN
        REPEAT
          // Anfang Banksaldo ausrechnen
          v_banksaldo:=0;
          sachpo.RESET;
          sachpo.SETCURRENTKEY("Posting Date");
          sachpo.SETFILTER(sachpo."G/L Account No.",'%1',bankkto."No.");
          sachpo.SETFILTER(sachpo."Posting Date",'<%1',v_datum_von);
          IF sachpo.FIND('-') THEN BEGIN
            REPEAT
              v_banksaldo:=v_banksaldo+sachpo.Amount;
            UNTIL sachpo.NEXT=0;
          END;
          v_bankw„:='EUR';
          v_bankzu:=0;
          v_bankab:=0;
          v_bankbewert:=0;
          // Ende Banksaldo ausrechnen
          // Anfang Bankums„tze ausrechnen
          sachpo.RESET;
          sachpo.SETCURRENTKEY("Posting Date");
          sachpo.SETFILTER(sachpo."G/L Account No.",'%1',bankkto."No.");
          // sachpo.SETFILTER(sachpo."G/L Account No.",'%1..%2','1700','1895');
          v_bankdatum:=v_datum_von;
          sachpo.SETFILTER(sachpo."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
          IF sachpo.FIND('-') THEN BEGIN
            REPEAT
              IF v_bankdatum>v_datum_bis THEN BEGIN
              END ELSE BEGIN
                IF v_bankdatum=sachpo."Posting Date" THEN BEGIN
                  IF sachpo.Amount < 0 THEN v_bankab := v_bankab + sachpo.Amount;
                  IF sachpo.Amount > 0 THEN v_bankzu := v_bankzu + sachpo.Amount;
                END ELSE BEGIN
                  RowNo := RowNo + 1;
                  EnterCell(RowNo,1,sachpo."G/L Account No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,2,FORMAT(v_bankdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                  EnterCell(RowNo,3,FORMAT(v_banksaldo),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,4,FORMAT(v_bankzu),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,5,FORMAT(v_bankab*(-1)),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,6,FORMAT(v_banksaldo+v_bankzu+v_bankab),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_banksaldo := v_banksaldo + v_bankzu + v_bankab;
                  v_bankzu := 0;
                  v_bankab := 0;
                  v_bankbewert :=0;
                  v_bankdatum := sachpo."Posting Date";
                 IF sachpo.Amount < 0 THEN v_bankab := v_bankab + sachpo.Amount;
                 IF sachpo.Amount > 0 THEN v_bankzu := v_bankzu + sachpo.Amount;
                END;
              END;
            UNTIL sachpo.NEXT = 0;
          END;
        UNTIL bankkto.NEXT=0;
      END;
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,sachpo."G/L Account No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT(v_bankdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,3,FORMAT(v_banksaldo),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(v_bankzu),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,5,FORMAT(v_bankab*(-1)),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,FORMAT(v_banksaldo+v_bankzu+v_bankab),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('Banksalden','Banksalden','F:\Daten Neu\User\Uwe\NAV2016');
      MESSAGE(Text003);
    END;

    PROCEDURE Bankposten_ausgeben@1140017();
    BEGIN
    END;

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;Italic@1004 : Boolean;UnderLine@1005 : Boolean;NumberFormat@1006 : Text[30];CellType@1007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    LOCAL PROCEDURE Stichtagsabgrenzung@1000000002();
    BEGIN
      IF Abgrenz_Datum = 0D THEN
        ERROR('Es wurde kein Datum eingegeben. Report abgebrochen!');

      //Variablenbelegung
      liefnr:='LS00';
      liefzeilennr:=10;

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);

      RecNo := 0;

      EnterCell(1,1,'Abgrenz_Ek',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,4,'Abgrenz_Vk',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(3,1,'Abgrenzung der stichtagsbergreifenden Servicevereinbarungen zum ',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text); // šberschriftszeile
      EnterCell(3,6,FORMAT(Abgrenz_Datum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

      RowNo := 4;
      ColumnNo := 1;  // 1 A
      EnterCell(RowNo,ColumnNo,'Lfd.Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   //  2 B
      EnterCell(RowNo,ColumnNo,'Ablaufdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   //  3 C
      EnterCell(RowNo,ColumnNo,'Art',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   //  4 D
      EnterCell(RowNo,ColumnNo,'Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   //  5 E
      EnterCell(RowNo,ColumnNo,'Zeilennr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   //  6 F
      EnterCell(RowNo,ColumnNo,'Belegdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   //  7 G
      EnterCell(RowNo,ColumnNo,'Artikelnr',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   //  8 H
      EnterCell(RowNo,ColumnNo,'Seriennr',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   //  9 I
      EnterCell(RowNo,ColumnNo,'Debitorennr',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 10 J
      EnterCell(RowNo,ColumnNo,'Debitorname',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 11 K
      EnterCell(RowNo,ColumnNo,'Serviceartikel',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 12 L
      EnterCell(RowNo,ColumnNo,'Vertragsnr',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 13 M
      EnterCell(RowNo,ColumnNo,'Menge',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 14 N
      EnterCell(RowNo,ColumnNo,'Einstandspreis',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 15 O
      EnterCell(RowNo,ColumnNo,'VK',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 16 P
      EnterCell(RowNo,ColumnNo,'Startdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 17 Q
      EnterCell(RowNo,ColumnNo,'Ablaufdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 18 R
      EnterCell(RowNo,ColumnNo,'LZ in Tagen',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 19 S
      EnterCell(RowNo,ColumnNo,'Abgr in Tagen',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 20 T
      EnterCell(RowNo,ColumnNo,'Abgr EK',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 21 U
      EnterCell(RowNo,ColumnNo,'Abgr VK',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 22 V
      EnterCell(RowNo,ColumnNo,'Vertragsnr2',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 23 W
      EnterCell(RowNo,ColumnNo,'BET-Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;   // 24 X
      EnterCell(RowNo,ColumnNo,'ACO-Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);

      RowNo := 5;

      Service.RESET;
      Service.SETCURRENTKEY("Wartungsvertragsnr.","Nr.","Belegzeilennr.");
      Service.SETFILTER(Service.Art,'%1',Service.Art::Service);
      Service.SETFILTER(Service."Ablaufdatum Serviceleistung",'>%1',Abgrenz_Datum);
      Service.SETFILTER(Service.Belegdatum,'<=%1',Abgrenz_Datum);
      Service.SETFILTER(Service.Inaktiv,'%1',FALSE);

      //Eingrezungen auf bestimmte Artikel
      Service.SETFILTER(Service."SUP Artikelnr.",'<>%1&<>%2','RE_INSTATEMENT_FEE','CHAMPS-RE_INSTATE#01');
      IF Service.FIND('-') THEN BEGIN
        TotalRecNo := Service.COUNT;
        REPEAT
          Artikel.RESET;
          Artikel.SETFILTER(Artikel."No.",'%1',Service."SUP Artikelnr.");
          Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
          //   artikel.SETFILTER(artikel.Artikelgruppe,'<>%1','CHAMPS_FEE');
          IF Artikel.FINDFIRST THEN BEGIN
            LZ_rest := 0;
            vklz.RESET;
            vklz.SETFILTER(vklz."Document No.",'%1',Service."Nr.");
            vklz.SETFILTER(vklz."Line No.",'%1',Service."Belegzeilennr.");
            vklz.SETFILTER(vklz."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
            IF vklz.FINDFIRST THEN BEGIN
              ColumnNo := 1;   //  1 A
              EnterCell(RowNo,ColumnNo,Service."Lfd. Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;    //  2 B
              EnterCell(RowNo,ColumnNo,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              ColumnNo := ColumnNo + 1;    //  3 C
              EnterCell(RowNo,ColumnNo,FORMAT(Service.Art),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;    //  4 D
              EnterCell(RowNo,ColumnNo,Service."Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;    //  5 E
              EnterCell(RowNo,ColumnNo,FORMAT(Service."Belegzeilennr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              ColumnNo := ColumnNo + 1;    //  6 F
              EnterCell(RowNo,ColumnNo,FORMAT(Service.Belegdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              ColumnNo := ColumnNo + 1;    //  7 G
              EnterCell(RowNo,ColumnNo,Service."Artikelnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;    //  8 H
              EnterCell(RowNo,ColumnNo,Service."Seriennr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;    //  9 I
              EnterCell(RowNo,ColumnNo,Service."Debitornr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;    // 10 J
              EnterCell(RowNo,ColumnNo,Service.Debitorname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;    // 11 K
              EnterCell(RowNo,ColumnNo,Service."SUP Artikelnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;    // 12 L
              EnterCell(RowNo,ColumnNo,Service."Hauptwartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;    // 13 M

              IF (liefnr = vklz."Document No.") AND (liefzeilennr = vklz."Line No.") THEN BEGIN
              END ELSE BEGIN

                EnterCell(RowNo,ColumnNo,FORMAT(vklz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;  // 14 N
                EnterCell(RowNo,ColumnNo,FORMAT(vklz."Unit Cost (LCY)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;  // 15 O
                EnterCell(RowNo,ColumnNo,FORMAT(vklz."Unit Price"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;  // 16 P

                LZ_tage := (Service."Ablaufdatum Serviceleistung" - Service.Lizenzdatum - 1);
                LZ_tage_stich := (Service."Ablaufdatum Serviceleistung" - Abgrenz_Datum - 1);
                LZ_tage_bewert := 0;

                EnterCell(RowNo,ColumnNo,FORMAT(Service.Lizenzdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                ColumnNo := ColumnNo + 1;  // 17 Q
                EnterCell(RowNo,ColumnNo,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                ColumnNo := ColumnNo + 1;  // 18 R
                EnterCell(RowNo,ColumnNo,FORMAT(LZ_tage),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;  // 19 S

                IF LZ_tage_stich > LZ_tage THEN BEGIN
                  LZ_tage_bewert := LZ_tage;
                END ELSE BEGIN
                  LZ_tage_bewert := LZ_tage_stich;
                END;
                EnterCell(RowNo,ColumnNo,FORMAT(LZ_tage_bewert),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;  // 20 T
                EnterCell(RowNo,ColumnNo,FORMAT(ROUND((vklz."Unit Cost (LCY)" / LZ_tage * LZ_tage_bewert * vklz.Quantity),0.01)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;  // 21 U
                EnterCell(RowNo,ColumnNo,FORMAT(ROUND((vklz."VK-Preis (MW)" / LZ_tage * LZ_tage_bewert * vklz.Quantity),0.01)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;  // 22 V

                sum_ek := (sum_ek + (ROUND(vklz."Unit Cost (LCY)" / LZ_tage * LZ_tage_bewert * vklz.Quantity)));
                sum_vk := (sum_vk + (ROUND(vklz."VK-Preis (MW)" / LZ_tage * LZ_tage_bewert * vklz.Quantity)));
                liefnr := vklz."Document No.";
                liefzeilennr := vklz."Line No.";

                EnterCell(RowNo,ColumnNo,Service."Wartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;  // 23 W
                EnterCell(RowNo,ColumnNo,Service."BET-Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;  // 24 X
                EnterCell(RowNo,ColumnNo,Service."ACO Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;  // 25 Y
                EnterCell(RowNo,26,FORMAT(vklz."VK-Preis (MW)"),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                IF ((vklz."Unit Price"<>0) AND (vklz."VK-Preis (MW)"<>0)) THEN EnterCell(RowNo,27,FORMAT(vklz."Unit Price"/vklz."VK-Preis (MW)"),FALSE,FALSE,FALSE,'0.####',TempExcelBuffer."Cell Type"::Number);
              END;
              RowNo := RowNo + 1;
            END;
            // Anfang Lieferscheine aus Beleghistorie
            LZ_rest := 0;
            beleghis_ek := 0;
            beleghis.RESET;
            beleghis.SETFILTER("Belegnr.",'%1',Service."Nr.");
            beleghis.SETFILTER("Zeilennr.",'%1',Service."Belegzeilennr.");
            beleghis.SETFILTER(Herstellercode,'<>%1&<>%2&<>%3','5710','5720','5730');
            IF beleghis.FINDFIRST THEN BEGIN
              ColumnNo := 1;                //  1 A
              EnterCell(RowNo,ColumnNo,Service."Lfd. Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;     //  2 B
              EnterCell(RowNo,ColumnNo,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              ColumnNo := ColumnNo + 1;     //  3 C
              EnterCell(RowNo,ColumnNo,FORMAT(Service.Art),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;     //  4 D
              EnterCell(RowNo,ColumnNo,Service."Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;     //  5 E
              EnterCell(RowNo,ColumnNo,FORMAT(Service."Belegzeilennr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              ColumnNo := ColumnNo + 1;     //  6 F
              EnterCell(RowNo,ColumnNo,FORMAT(Service.Belegdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              ColumnNo := ColumnNo + 1;     //  7 G
              EnterCell(RowNo,ColumnNo,Service."Artikelnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;     //  8 H
              EnterCell(RowNo,ColumnNo,Service."Seriennr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;     //  9 I
              EnterCell(RowNo,ColumnNo,Service."Debitornr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;     // 10 J
              EnterCell(RowNo,ColumnNo,Service.Debitorname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;     // 11 K
              EnterCell(RowNo,ColumnNo,Service."SUP Artikelnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;     // 12 L
              EnterCell(RowNo,ColumnNo,Service."Hauptwartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo := ColumnNo + 1;     // 13 M
              IF (liefnr = beleghis."Belegnr.") AND (liefzeilennr = beleghis."Zeilennr.") THEN BEGIN
              END ELSE BEGIN
                EnterCell(RowNo,ColumnNo,FORMAT(beleghis.Menge),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;   // 14 N
                beleghis_ek := ROUND((beleghis."Einstandspreis MW" / ((100 + Artikel."Handlingskosten %" + Artikel."Zollsatz %") / 100)),0.01);
                EnterCell(RowNo,ColumnNo,FORMAT(beleghis_ek),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;   // 15 O
                EnterCell(RowNo,ColumnNo,FORMAT(beleghis."VK-Preis"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;   // 16 P
                LZ_tage := (Service."Ablaufdatum Serviceleistung" - Service.Lizenzdatum - 1);
                LZ_tage_stich := (Service."Ablaufdatum Serviceleistung" - Abgrenz_Datum - 1);
                LZ_tage_bewert := 0;
                EnterCell(RowNo,ColumnNo,FORMAT(Service.Lizenzdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                ColumnNo := ColumnNo + 1;   // 17 Q
                EnterCell(RowNo,ColumnNo,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                ColumnNo := ColumnNo + 1;   // 18 R
                EnterCell(RowNo,ColumnNo,FORMAT(LZ_tage),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;   // 19 S
                IF LZ_tage_stich > LZ_tage THEN BEGIN
                  LZ_tage_bewert := LZ_tage;
                END ELSE BEGIN
                  LZ_tage_bewert := LZ_tage_stich;
                END;
                EnterCell(RowNo,ColumnNo,FORMAT(LZ_tage_bewert),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;   // 20 T
                EnterCell(RowNo,ColumnNo,FORMAT(ROUND((beleghis_ek / LZ_tage * LZ_tage_bewert * beleghis.Menge),0.01)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;   // 21 U
                EnterCell(RowNo,ColumnNo,FORMAT(ROUND((beleghis."VK-Preis" / LZ_tage * LZ_tage_bewert * beleghis.Menge),0.01)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo := ColumnNo + 1;   // 22 V
                sum_ek := (sum_ek + (ROUND(beleghis_ek / LZ_tage * LZ_tage_bewert * beleghis.Menge)));
                sum_vk := (sum_vk + (ROUND(beleghis."VK-Preis" / LZ_tage * LZ_tage_bewert * beleghis.Menge)));
                liefnr := beleghis."Belegnr.";
                liefzeilennr := beleghis."Zeilennr.";
                EnterCell(RowNo,ColumnNo,Service."Wartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;   // 23 W
                EnterCell(RowNo,ColumnNo,Service."BET-Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;   // 24 X
                EnterCell(RowNo,ColumnNo,Service."ACO Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo := ColumnNo + 1;   // 25 Y
                EnterCell(RowNo,26,FORMAT(beleghis."VK-Preis"),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                IF beleghis."VK-Preis"<>0 THEN EnterCell(RowNo,27,FORMAT(beleghis."VK-Preis"/beleghis."VK-Preis"),FALSE,FALSE,FALSE,'0.####',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,28,'Beleghistorie',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              RowNo := RowNo + 1;
            END;
            //  Ende Lieferscheine holen aus Beleghistorie
          END;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
        UNTIL Service.NEXT = 0;
      END;

      EnterCell(1,2,FORMAT(sum_ek),FALSE,FALSE,FALSE,'0,00#0.00 °',TempExcelBuffer."Cell Type"::Number);
      EnterCell(1,5,FORMAT(sum_vk),FALSE,FALSE,FALSE,'0,00#0.00 °',TempExcelBuffer."Cell Type"::Number);

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,'Serviceabgrenzung');
        TempExcelBuffer.WriteSheet(PADSTR(STRSUBSTNO('%1 %2','Serviceabgrenzung',''),30),COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          //TempExcelBuffer.OpenExcelWithoutAutoFit('Serviceabgrenzung','Serviceabgrenzung' + ExcelFileExtensionTok,'',TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE CreateExcel@1000000003();
    BEGIN
      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);
    END;

    LOCAL PROCEDURE CloseExcel@1000000004(Sheetname@1000000000 : Text;FileName@1000000001 : Text;FilePath@1000000002 : Text);
    BEGIN
      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet(Sheetname,COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          IF (FileName = '') OR (FilePath = '') THEN
            TempExcelBuffer.OpenExcel //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
          ELSE
            TempExcelBuffer.OpenExcelWithoutAutoFit(Sheetname,FileName + ExcelFileExtensionTok,FilePath,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE UpdateCellValue@1000000005(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text);
    BEGIN
      IF TempExcelBuffer.GET(RowNo,ColumnNo)  THEN BEGIN
        TempExcelBuffer."Cell Value as Text" := CellValue;
        TempExcelBuffer.MODIFY;
      END;
    END;

    LOCAL PROCEDURE "Provisionsabrechnung VK-Umsatz"@1000000006();
    BEGIN
      CreateExcel;
      EnterCell(1,1,'Re_Nummer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,2,'Re_Datum',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,3,'Artikelnr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,4,'Menge',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,5,'Kunde',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,6,'Verk„ufer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,7,'Innen',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,8,'Team',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,9,'Gebiet',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,10,'Betrag',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,11,'Marge',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,12,'Marge %',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,13,'Hersteller',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      vkrk.RESET;
      // Testfilter Anfang
      //vkrk.SETFILTER(vkrk."No.",'%1|%2|%3','RE252352','RE252447','RE252524');
      // Testfilter Ende
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      vkrk.SETFILTER(vkrk."Location Code",'%1|%2','ZENT','KONSI');
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz.Type,'%1',vkrz.Type::Item);
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              v_betrag:=0;
              v_marge:=0;
              v_margePro:=0;
              EnterCell(RowNo,1,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,3,vkrz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(vkrk."Bill-to Name"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(vkrk."Salesperson Code"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,FORMAT(vkrk."Betreuer Innendienst"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(vkrk.Teams),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,FORMAT(vkrk."Territory Code"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF ((vkrk."Currency Factor"=0) OR (vkrk."Currency Factor"=1)) THEN BEGIN
                v_betrag:=ROUND(vkrz."Unit Price"*vkrz.Quantity,0.01);
                v_marge:=ROUND(v_betrag-(vkrz."Unit Cost (LCY)"*vkrz.Quantity),0.01);
                IF v_betrag <> 0 THEN v_margePro:=ROUND(v_marge/v_betrag*100,0.01);
              END ELSE BEGIN
                v_betrag:=ROUND(vkrz."Unit Price"*vkrz.Quantity/vkrk."Currency Factor",0.01);
                v_marge:=ROUND(v_betrag-(vkrz."Unit Cost (LCY)"*vkrz.Quantity),0.01);
                IF v_betrag <> 0 THEN v_margePro:=ROUND(v_marge/v_betrag*100,0.01);
              END;
              EnterCell(RowNo,10,FORMAT(v_betrag),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,11,FORMAT(v_marge),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(v_margePro),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(vkrz."Manufacturer Code"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              RowNo := RowNo + 1;
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      // Gutschriften listen
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      vkgk.SETFILTER(vkgk."Location Code",'%1|%2','ZENT','KONSI');
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz.Type,'%1',vkgz.Type::Item);
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              v_betrag:=0;
              v_marge:=0;
              v_margePro:=0;
              EnterCell(RowNo,1,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,3,vkgz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,FORMAT(vkgz.Quantity*(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(vkgk."Bill-to Name"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(vkgk."Salesperson Code"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,FORMAT(vkgk."Betreuer Innendienst"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(vkgk.Teams),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,FORMAT(vkgk."Territory Code"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF ((vkgk."Currency Factor"=0) OR (vkgk."Currency Factor"=1)) THEN BEGIN
                v_betrag:=ROUND(vkgz."Unit Price"*vkgz.Quantity*(-1),0.01);
                v_marge:=ROUND(v_betrag-(vkgz."Unit Cost (LCY)"*vkgz.Quantity*(-1)),0.01);
                IF v_betrag <> 0 THEN v_margePro:=ROUND(v_marge/v_betrag*100,0.01);
              END ELSE BEGIN
                v_betrag:=ROUND(vkgz."Unit Price"*vkgz.Quantity/vkgk."Currency Factor"*(-1),0.01);
                v_marge:=ROUND(v_betrag-(vkgz."Unit Cost (LCY)"*vkgz.Quantity*(-1)),0.01);
                IF v_betrag <> 0 THEN v_margePro:=ROUND(v_marge/v_betrag*100,0.01);
              END;
              EnterCell(RowNo,10,FORMAT(v_betrag),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,11,FORMAT(v_marge),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(v_margePro),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(vkgz."Manufacturer Code"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              RowNo := RowNo + 1;
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;


      CloseExcel('Provisionsabrechnung','','');
      //CloseExcel(Sheetname(=Provisionsabrechnung),Filename(=leer),Filepath(=leer)(Wenn leer, dann tempor„r)

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE ACL_Neu@1000000007();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Shipping Date',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Customer Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'ACL Product',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Qty Shipped',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Resale Unit Price',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Currency',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Total EUR',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      IF v_ek_mit_ausgeben=TRUE THEN BEGIN
        EnterCell(RowNo,9,'DC',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,10,'Fremdw„hrung',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,11,'Kurs',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,12,'Betrag in FW',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,13,'Betrag in EUR',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      END;

      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','58');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              v_day:=DATE2DMY(vkrk."Posting Date",1);
              v_month:=DATE2DMY(vkrk."Posting Date",2);
              v_year:=DATE2DMY(vkrk."Posting Date",3)-2000;
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,FORMAT(FORMAT(v_month)+'/'+FORMAT(v_day)+'/'+FORMAT(v_year)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //EnterCell(RowNo,1,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,6,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,6,vkrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,7,FORMAT(vkrz."VK-Preis (MW)"*vkrz.Quantity),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              v_Total_Sum := v_Total_Sum+(vkrz."VK-Preis (MW)"*vkrz.Quantity);
              IF v_ek_mit_ausgeben=TRUE THEN BEGIN
                IF vkrz.Einkaufsw„hrungscode<>'' THEN BEGIN
                  EnterCell(RowNo,9,FORMAT(vkrz."DC-Preis (W„hrung)"),FALSE,FALSE,FALSE,'##0.00##',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,10,vkrz.Einkaufsw„hrungscode,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,11,FORMAT(vkrz.Einkaufsw„hrungsfaktor),FALSE,FALSE,FALSE,'##0.00##',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,12,FORMAT(vkrz."DC-Preis (EKW)"*vkrz.Quantity),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,13,FORMAT(vkrz."DC-Preis (MW)"*vkrz.Quantity),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,9,FORMAT(vkrz."DC-Preis (MW)"),FALSE,FALSE,FALSE,'##0.00##',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,13,FORMAT(vkrz."DC-Preis (MW)"*vkrz.Quantity),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','58');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,FORMAT(vkgz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(vkgz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkgk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,6,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,6,vkgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,7,FORMAT(vkgz."VK-Preis (MW)"*vkgz.Quantity*(-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              v_Total_Sum := v_Total_Sum+(vkgz."VK-Preis (MW)"*vkgz.Quantity*(-1));
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften

      RowNo := RowNo + 1;
      EnterCell(RowNo,7,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo + 3;

      EnterCell(RowNo,3,'Stock Information',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Qty Stock',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Qty allocated to Customer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Customer Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Free Stock',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //  Suchen aller Artikel mit Lagerbestand ungleich Null nur fr ACL
      //  ******************************************************************************
      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1','58');
      IF Artikel.FIND('-') THEN BEGIN
        v_aubestand := 0;
        v_au_name := '';
        v_lagerbestand := 0;
        REPEAT
          Artikelposten.RESET;
          Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
          Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
          Artikelposten.SETFILTER(Artikelposten."Location Code",'%1|%2','ZENT','KONSI');
          IF Artikelposten.FIND('-') THEN BEGIN
            v_aubestand:=0;
            v_au_name:='';
            v_lagerbestand:=0;
            v_au_debnr:='0';
            REPEAT
              v_lagerbestand := v_lagerbestand+Artikelposten."Remaining Quantity";
            UNTIL Artikelposten.NEXT = 0;
            vkz.RESET;
            vkz.SETFILTER(vkz."No.",'%1',Artikel."No.");
            vkz.SETFILTER(vkz."Document Type",'%1',vkz."Document Type"::Order);
            vkz.SETFILTER(vkz."Outstanding Quantity",'>%1',0);
            vkz.SETFILTER(vkz."Location Code",'%1|%2','ZENT','KONSI');
            IF vkz.FIND('-') THEN BEGIN
              REPEAT
                v_aubestand := v_aubestand + vkz."Outstanding Quantity";
                IF v_au_debnr = vkz."Sell-to Customer No." THEN BEGIN
                END ELSE BEGIN
                  IF v_au_debnr = '0' THEN BEGIN
                    v_au_name := vkz.Endkunde;
                  END ELSE BEGIN
                    v_au_name := v_au_name + '/' + vkz.Endkunde;
                  END;
                END;
                v_au_debnr := vkz."Sell-to Customer No.";
              UNTIL vkz.NEXT = 0;
            END;
            RowNo := RowNo + 1;
            EnterCell(RowNo,3,Artikel."No. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,FORMAT(v_lagerbestand),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(v_aubestand),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(v_au_name),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF v_lagerbestand>v_aubestand THEN BEGIN
              EnterCell(RowNo,7,FORMAT(v_lagerbestand-v_aubestand),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              EnterCell(RowNo,7,'0',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            END;
          END;
        UNTIL Artikel.NEXT=0;
      END;

      CloseExcel('ACL_TOPAS_POS_lfd','ACL_TOPAS_POS_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE GSI_Neu@1000000008();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;

      EnterCell(RowNo,1,'Disti Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Customer Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Disti Invoice #',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Part Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Qty Sold',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Resale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Currency',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Total Resale EUR',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Date of Sale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','54');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              v_herstell_VK_Preis := 0;
              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkrz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
                  IF quotedaten."Hersteller-VK-Preis" < vkrz."VK-Preis (EKW)" THEN BEGIN
                    // Quote-Preis: šberprfen, ob Hersteller-VK-Preis in Euro ist *****************************************************
                    v_herstell_VK_Preis := quotedaten."Hersteller-VK-Preis";
                  END;
                END;
              END;
              IF v_herstell_VK_Preis = 0 THEN BEGIN
                EnterCell(RowNo,6,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,6,FORMAT(v_herstell_VK_Preis),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              END;
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                IF v_herstell_VK_Preis = 0 THEN BEGIN
                  EnterCell(RowNo,8,FORMAT((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
                END ELSE BEGIN
                  EnterCell(RowNo,8,FORMAT((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_Total_Sum:=v_Total_Sum+ ((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor"));
                END;
              END ELSE BEGIN
                IF v_herstell_VK_Preis = 0 THEN BEGIN
                  EnterCell(RowNo,8,FORMAT((vkrz."Unit Price") * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
                END ELSE BEGIN
                  EnterCell(RowNo,8,FORMAT((v_herstell_VK_Preis) * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_Total_Sum := v_Total_Sum + ((v_herstell_VK_Preis) * (vkrz.Quantity));
                END;
              END;
              EnterCell(RowNo,9,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','54');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkgz.Quantity/(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkgz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkgk."Currency Factor"<>0 THEN
              BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount)/(vkgk."Currency Factor") * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum + ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount) * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount) * (-1));
              END;
              EnterCell(RowNo,9,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      RowNo := RowNo + 2;
      EnterCell(RowNo,8,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('GSI_TOPAS_POS_lfd','GSI_TOPAS_POS_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      //MESSAGE(Text003);
      GSI_Lager_Neu;
    END;

    LOCAL PROCEDURE GSI_Lager_Neu@1000000022();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften

      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1','54');
      IF Artikel.FIND('-') THEN BEGIN
        v_lagerbestand := 0;
        RecNo := 0;
        TotalRecNo := Artikel.COUNT;
        RowNo := 1;
        ColumnNo := 1;
        EnterCell(RowNo,ColumnNo,'Disti',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Part Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Qty.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Per Unit Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Warehouse Location',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo + 1;
        REPEAT
          Artikelposten.RESET;
          Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
          Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
          Artikelposten.SETFILTER(Artikelposten."Location Code",'%1|%2','ZENT','KONSI');
          IF Artikelposten.FIND('-') THEN BEGIN
            v_lagerbestand := 0;
            REPEAT
              v_lagerbestand := v_lagerbestand + Artikelposten."Remaining Quantity";
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,Artikel."No. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(Artikelposten."Remaining Quantity"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,'DE',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(WORKDATE - 2),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EK_Lief.RESET;
              EK_Lief.SETFILTER(EK_Lief."Document No.",'%1',Artikelposten."Document No.");
              EK_Lief.SETFILTER(EK_Lief."Line No.",'%1',Artikelposten."Document Line No.");
              IF EK_Lief.FINDFIRST THEN BEGIN
                EnterCell(RowNo,4,FORMAT(EK_Lief."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,8,'Disti holen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',EK_Lief."No.");
                "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
                "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  EnterCell(RowNo,4,FORMAT("Ek-Preise"."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              RowNo := RowNo + 1;
            UNTIL Artikelposten.NEXT = 0;
          END;
          v_lagerbestand := 0;
          vkz.RESET;
          vkz.SETFILTER(vkz."No.",'%1',Artikel."No.");
          vkz.SETFILTER(vkz."Manufacturer Code",'%1','54');
          vkz.SETFILTER(vkz."Location Code",'%1','KONSI');
          vkz.SETFILTER(vkz."Qty. to Invoice",'>%1',0);
          IF vkz.FIND('-') THEN BEGIN
            REPEAT
              IF vkz."Qty. to Invoice" - vkz."Qty. to Ship" > 0 THEN BEGIN
                EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,2,vkz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,3,FORMAT(vkz."Qty. to Invoice" - vkz."Qty. to Ship"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,4,FORMAT(vkz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,5,'DE',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,6,FORMAT(WORKDATE - 2),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                RowNo := RowNo + 1;
              END;
            UNTIL vkz.NEXT = 0;
          END;
          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
        UNTIL Artikel.NEXT = 0;
      END;

      CloseExcel('GSI_TOPAS_INV_lfd','GSI_TOPAS_INV_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE DIGI_Neu@1000000034();
    VAR
      firstline@1000000000 : Boolean;
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Digi Part Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Shipment Date',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Quantity',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Bill To Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Bill To Street Address',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Bill To City',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Bill To State',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Bill To Country',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Bill To Postal Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Ship To Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Ship To Street Address',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Ship To City',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Ship To State',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Ship To Country',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Ship To Postal Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'End Customer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'Distributor Customer ID',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'Cost Per Unit USD',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'Resell Per Unit USD',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'Invoice Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'Purchase Order Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'Registration Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'Ship & Debit Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'PEF Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,25,'Serial Number/IMEI#',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,26,'End User Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,27,'End User Street Address',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,28,'End User City',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,29,'End User State',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,30,'End User Country',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,31,'End User Postal Code',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,32,'Digi RM Account Owner Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,33,'Digi RM Account Owner E-mail address',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,34,'Digi RM Account ID# (CST ID#)',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','74');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,3,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,4,vkrk."Bill-to Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,vkrk."Bill-to Address",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,vkrk."Bill-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF vkrk."Bill-to Country/Region Code"='DE' THEN BEGIN
                EnterCell(RowNo,8,'DEU',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,8,vkrk."Bill-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,7,vkrk."Bill-to County",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,vkrk."Bill-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,10,vkrk."Ship-to Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,vkrk."Ship-to Address",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,12,vkrk."Ship-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //        EnterCell(RowNo,13,vkrk."Ship-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF vkrk."Ship-to Country/Region Code"='DE' THEN BEGIN
                EnterCell(RowNo,14,'DEU',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,14,vkrk."Bill-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,13,vkrk."Ship-to County",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,15,vkrk."Ship-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,16,vkrz.Endkunde,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,17,vkrk."Bill-to Customer No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              EnterCell(RowNo,18,FORMAT(vkrz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,19,FORMAT(vkrz."VK-Preis (EKW)"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);


              EnterCell(RowNo,20,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,21,vkrz."Order No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //        EnterCell(RowNo,22,'Registrierungsnummer',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //        EnterCell(RowNo,24,'Volume Discount Agreement',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);




      //        v_herstell_VK_Preis := 0;
              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkrz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                EnterCell(RowNo,23,quotedaten."Quotenr. Hersteller",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
      {
              IF v_herstell_VK_Preis = 0 THEN BEGIN
                EnterCell(RowNo,6,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,6,FORMAT(v_herstell_VK_Preis),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              END;
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                IF v_herstell_VK_Preis = 0 THEN BEGIN
                  EnterCell(RowNo,8,FORMAT((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
                END ELSE BEGIN
                  EnterCell(RowNo,8,FORMAT((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_Total_Sum:=v_Total_Sum+ ((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor"));
                END;
              END ELSE BEGIN
                IF v_herstell_VK_Preis = 0 THEN BEGIN
                  EnterCell(RowNo,8,FORMAT((vkrz."Unit Price") * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
                END ELSE BEGIN
                  EnterCell(RowNo,8,FORMAT((v_herstell_VK_Preis) * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_Total_Sum := v_Total_Sum + ((v_herstell_VK_Preis) * (vkrz.Quantity));
                END;
              END;
              EnterCell(RowNo,9,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

      }


              EnterCell(RowNo,26,vkrz.Endkunde,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF vkrk."Endkunde Adresse" <> '' THEN BEGIN
                EnterCell(RowNo,27,vkrk."Endkunde Adresse",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,28,vkrk."Endkunde Ort",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,29,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                IF vkrk."Endkunde Land" = 'DE' THEN
                  EnterCell(RowNo,30,'DEU',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text)
                ELSE
                  EnterCell(RowNo,30,vkrk."Endkunde Land",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,31,vkrk."Endkunde PLZ-Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                IF Kontakt.GET(vkrz."Endkundennr.") THEN BEGIN
                  EnterCell(RowNo,27,Kontakt.Address,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,28,Kontakt.City,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,29,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  IF Kontakt."Country/Region Code" = 'DE' THEN
                    EnterCell(RowNo,30,'DEU',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text)
                  ELSE
                    EnterCell(RowNo,30,Kontakt."Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,31,Kontakt."Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END;

              serial_datecode_text := '';
              InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,vkrz."Document No.",'',0,vkrz."Line No.");
              ValueEntryRelation.SETCURRENTKEY("Source RowId");
              ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
              IF ValueEntryRelation.FINDFIRST THEN BEGIN
                firstline := TRUE;
                REPEAT
                  ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
                  IF ValueEntry.FINDFIRST THEN BEGIN
                    ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
                    IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                      IF ItemLedgerEntry."Serial No." <> '' THEN BEGIN
                        IF serial_datecode_text <> '' THEN BEGIN
                          IF STRPOS(serial_datecode_text,ItemLedgerEntry."Serial No.") = 0 THEN
                          serial_datecode_text := serial_datecode_text + ';' + ItemLedgerEntry."Serial No.";
                        END ELSE
                          serial_datecode_text := ItemLedgerEntry."Serial No.";
                      END ELSE BEGIN
                        IF serial_datecode_text <> '' THEN BEGIN
                          IF STRPOS(serial_datecode_text,ItemLedgerEntry."Lot No.") = 0 THEN
                          serial_datecode_text := serial_datecode_text + ';' + ItemLedgerEntry."Lot No.";
                        END ELSE
                          serial_datecode_text := ItemLedgerEntry."Lot No.";
                      END;
                    END;
                  END;

                  //Neu Zwecks vieler Seriennr.  untereinander Darstellung
                  IF ItemLedgerEntry."Item Tracking" = ItemLedgerEntry."Item Tracking"::"Serial No." THEN BEGIN
                    IF firstline THEN BEGIN
                      EnterCell(RowNo,25,ItemLedgerEntry."Serial No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      firstline := FALSE;
                    END ELSE BEGIN
                      RowNo := RowNo + 1;
                      EnterCell(RowNo,1,GetCellValue(RowNo-1,1),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,2,GetCellValue(RowNo-1,2),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                      EnterCell(RowNo,3,GetCellValue(RowNo-1,3),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,4,GetCellValue(RowNo-1,4),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,5,GetCellValue(RowNo-1,5),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,6,GetCellValue(RowNo-1,6),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,7,GetCellValue(RowNo-1,7),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,8,GetCellValue(RowNo-1,8),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,9,GetCellValue(RowNo-1,9),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,10,GetCellValue(RowNo-1,10),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,11,GetCellValue(RowNo-1,11),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,12,GetCellValue(RowNo-1,12),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,13,GetCellValue(RowNo-1,13),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,14,GetCellValue(RowNo-1,14),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,15,GetCellValue(RowNo-1,15),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,16,GetCellValue(RowNo-1,16),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,17,GetCellValue(RowNo-1,17),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,18,GetCellValue(RowNo-1,18),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,19,GetCellValue(RowNo-1,19),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,20,GetCellValue(RowNo-1,20),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,21,GetCellValue(RowNo-1,21),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,22,GetCellValue(RowNo-1,22),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,23,GetCellValue(RowNo-1,23),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,24,GetCellValue(RowNo-1,24),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,25,ItemLedgerEntry."Serial No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,26,GetCellValue(RowNo-1,26),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,27,GetCellValue(RowNo-1,27),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,28,GetCellValue(RowNo-1,28),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,29,GetCellValue(RowNo-1,29),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,30,GetCellValue(RowNo-1,30),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,31,GetCellValue(RowNo-1,31),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    END;
                  END;
                UNTIL ValueEntryRelation.NEXT = 0;
              END;
              IF ItemLedgerEntry."Item Tracking" <> ItemLedgerEntry."Item Tracking"::"Serial No." THEN
                EnterCell(RowNo,25,serial_datecode_text,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;


      RowNo := RowNo + 3;
      EnterCell(RowNo,1,'Bemerkungszeile (ist zu l”schen)',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'L„ndercode muss 3-stellig sein',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'L„ndercode muss 3-stellig sein',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Endkunde aus Verkaufszeile',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'Registrierungsnummer eines Projekts',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'Ship & Debit Nr',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'Volume Discount Agreement',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Bemerkungszeile (ist zu l”schen)',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'lt. Ausfllbeschreibung von DIGI',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'lt. Ausfllbeschreibung von DIGI',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'muss noch programmiert werden!',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'Quotenummer des Herstellers aus der Quotetabelle',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'muss noch programmiert werden!',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //  Ende Ums„tze

      // Anfang Gutschriften          mssen noch angepasst werden !!!!!!!

      {
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','74');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkgz.Quantity/(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkgz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkgk."Currency Factor"<>0 THEN
              BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount)/(vkgk."Currency Factor") * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum + ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount) * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount) * (-1));
              END;
              EnterCell(RowNo,9,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;

      }
      // Ende Gutschriften
      RowNo := RowNo + 2;
      //EnterCell(RowNo,8,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('DIGI_TOPAS_POS_lfd','DIGI_TOPAS_POS_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      //MESSAGE(Text003);
      DIGI_Lager_Neu;
    END;

    LOCAL PROCEDURE DIGI_Lager_Neu@1000000035();
    BEGIN
      CreateExcel;
      //RecNo := 0;
      //v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Digi Part Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Part Description (optional)',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Total Qty On Hand (in Inv)',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Price Per Unit Local Currency (optional)',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Price Per Unit USD',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Ext Tot Local Currency (optional)',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Extended Tot USD',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Ab hier nur zur Information. Spalten mssen wieder gel”scht werden!',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1','74');
      Artikel.SETFILTER(Artikel.Inventory,'<>%1',0);
      IF Artikel.FIND('-') THEN BEGIN
        v_lagerbestand := 0;
        v_sum_wert2:=0;
        v_sum_wert:=0;
        RowNo := RowNo + 1;
        REPEAT
          Artikelposten.RESET;
          Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
          Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
      //    Artikelposten.SETFILTER(Artikelposten."Location Code",'%1|%2','ZENT','KONSI');
          IF Artikelposten.FIND('-') THEN BEGIN
            REPEAT
              v_sum_wert2:=0;
              v_sum_wert:=0;
              v_lagerbestand := v_lagerbestand + Artikelposten."Remaining Quantity";

              EK_Lief.RESET;
              EK_Lief.SETFILTER(EK_Lief."Document No.",'%1',Artikelposten."Document No.");
              EK_Lief.SETFILTER(EK_Lief."Line No.",'%1',Artikelposten."Document Line No.");
              IF EK_Lief.FINDFIRST THEN BEGIN
                v_sum_wert:= EK_Lief."Direct Unit Cost";
                v_sum_wert2:= EK_Lief."Direct Unit Cost"*v_lagerbestand;
              END;

            EnterCell(RowNo,1,Artikel."No. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Artikel.Description,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(v_lagerbestand),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,Artikelposten."Location Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      {      IF v_sum_wert2=0 THEN BEGIN
              "Ek-Preise".RESET;
              "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',EK_Lief."No.");
              "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
              "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
              IF "Ek-Preise".FINDFIRST THEN BEGIN
                v_sum_wert2:= "Ek-Preise"."Direct Unit Cost";
                v_sum_wert:= "Ek-Preise"."Direct Unit Cost"*v_lagerbestand;
              END;
            END ELSE BEGIN
              v_sum_wert2:=0;
              v_sum_wert:=0;
            END;
      }
            EnterCell(RowNo,5,FORMAT(v_sum_wert),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(v_sum_wert2),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

            EnterCell(RowNo,11,FORMAT(Artikelposten."Entry Type"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);                      // zur Info
            Artikel.CALCFIELDS(Artikel.Inventory,Artikel."DC-Preis");
            EnterCell(RowNo,12,FORMAT(Artikel.Inventory),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);                             // zur Info
            EnterCell(RowNo,13,FORMAT(Artikel."DC-Preis"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);                    // zur Info
            EnterCell(RowNo,14,FORMAT(Artikel.Inventory*Artikel."DC-Preis"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);  // zur Info
            EnterCell(RowNo,15,'LB + DC aus Artikelstamm',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);                              // zur Info

            RowNo += 1;

           UNTIL Artikelposten.NEXT = 0;
          END;
           v_lagerbestand := 0;
          //RowNo := RowNo + 1;
        UNTIL Artikel.NEXT = 0;
      END;

      //Ab hier Testbereich

      {
      RowNo := RowNo + 7;
      EnterCell(RowNo,1,'Ab hier nur zur Information. Zeilen mssen wieder gel”scht werden!',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1','74');
      Artikel.SETFILTER(Artikel.Inventory,'<>%1',0);
      IF Artikel.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,Artikel."No. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,Artikel.Description,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          Artikel.CALCFIELDS(Artikel.Inventory,Artikel."DC-Preis");
          EnterCell(RowNo,3,FORMAT(Artikel.Inventory),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,5,FORMAT(Artikel."DC-Preis"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,7,FORMAT(Artikel.Inventory*Artikel."DC-Preis"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,9,'LB + DC aus Artikelstamm',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo + 1;
        UNTIL Artikel.NEXT=0;
      END;
      }
      CloseExcel('DIGI_TOPAS_INV_lfd','DIGI_TOPAS_INV_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE XMO_Neu@1000000009();
    BEGIN
      {
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,'Disti Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'Customer Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'Disti Invoice #',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'Part Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'Qty Sold',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'Resale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'Currency',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'Total Resale EUR',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'Date of Sale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'DC',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'Currency Factor',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','04');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              ColumnNo := 1;
              EnterCell(RowNo,ColumnNo,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              ColumnNo += 1;
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,ColumnNo,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,ColumnNo,vkrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              ColumnNo += 1;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                EnterCell(RowNo,ColumnNo,FORMAT((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
              END ELSE BEGIN
                EnterCell(RowNo,ColumnNo,FORMAT((vkrz."Unit Price") * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
              END;
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,FORMAT(vkrz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,FORMAT(vkrz.Einkaufsw„hrungsfaktor),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','04');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              ColumnNo := 1;
              EnterCell(RowNo,ColumnNo,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,FORMAT(vkgz.Quantity/(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,FORMAT(vkgz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              ColumnNo += 1;
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,ColumnNo,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,ColumnNo,vkgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              ColumnNo += 1;
              IF vkgk."Currency Factor"<>0 THEN
              BEGIN
                EnterCell(RowNo,ColumnNo,FORMAT((vkgz.Amount)/(vkgk."Currency Factor") * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum + ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              END ELSE BEGIN
                EnterCell(RowNo,ColumnNo,FORMAT((vkgz.Amount) * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount) * (-1));
              END;
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,FORMAT(vkgz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,FORMAT(vkgz.Einkaufsw„hrungsfaktor),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      RowNo := RowNo + 2;
      EnterCell(RowNo,8,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      }

      CreateExcel;
      v_Total_Sum := 0;

      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER("Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := vkrk.COUNT;
        EnterCell(1,2,'POS Report',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(2,2,'Disti name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(2,3,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := 4;
        ColumnNo := 2;
        EnterCell(RowNo,ColumnNo,'Ship-to customer name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Ship-to customer address',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Ship-to customer city',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Ship-to customer state',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Ship-to customer zip code',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Ship-to customer country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'SupplierÉs part number as listed in the SupplierÉs price list',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Disti PO number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Date of Shipment/ return',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Quantity of shipment (negative, if return)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Resale price per unit (resale credit, if return) in USD',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Total shipment value (resale)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Buy price per unit from Supplier (Supplier cost in USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Total shipment value (buy)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Quote number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Name of end customer',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Design ID, if applicable',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Country of ultimate destination, if different from ship-to country',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo += 1;

        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER("Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER("Manufacturer Code",'%1','04');
          vkrz.SETFILTER(Quantity,'<>%1',0);
          vkrz.SETFILTER("Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              EnterCell(RowNo,2,vkrk."Ship-to Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrk."Ship-to Address",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkrk."Ship-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,vkrk."Ship-to County",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,vkrk."Ship-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,vkrk."Ship-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,vkrz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,vkrk."External Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,vkrz."Document No.",'',0,vkrz."Line No.");
              ValueEntryRelation.SETCURRENTKEY("Source RowId");
              ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
              IF ValueEntryRelation.FINDFIRST THEN BEGIN
                ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
                IF ValueEntry.FINDFIRST THEN BEGIN
                  ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
                  IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                    EnterCell(RowNo,10,FORMAT(ItemLedgerEntry."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date); //Date of Shipment
                  END;
                END;
              END;
              EnterCell(RowNo,11,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(ROUND(vkrz."VK-Preis (EKW)",0.01)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(ROUND(vkrz.Quantity * vkrz."VK-Preis (EKW)",0.01)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,14,FORMAT(vkrz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,15,FORMAT(ROUND(vkrz.Quantity * vkrz."DC-Preis (EKW)",0.01)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkrz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                EnterCell(RowNo,16,quotedaten."Quotenr. Hersteller",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              Kontakt.RESET;
              Kontakt.SETFILTER("No.",'%1',vkrz."Endkundennr.");
              IF Kontakt.FINDFIRST() THEN BEGIN
                EnterCell(RowNo,17,Kontakt.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              RowNo := RowNo + 1;
              RecNo := RecNo + 1;
              Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften

      vkgk.RESET;
      vkgk.SETFILTER("Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER("Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER("Manufacturer Code",'%1','04');
          vkgz.SETFILTER(Quantity,'<>%1',0);
          vkgz.SETFILTER("Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := 5;
              EnterCell(RowNo,2,vkgk."Ship-to Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."Ship-to Address",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgk."Ship-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,vkgk."Ship-to County",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,vkgk."Ship-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,vkgk."Ship-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,vkgz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,vkgk."External Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,10,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date); //Date of Shipment
              EnterCell(RowNo,11,FORMAT(vkgz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(ROUND(vkgz."VK-Preis (EKW)",0.01)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(vkgz.Quantity * vkgz."VK-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,14,FORMAT(vkgz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,15,FORMAT(vkgz.Quantity * vkgz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              IF quotedaten.GET(vkgz."Quotenr.") THEN BEGIN
                EnterCell(RowNo,16,quotedaten."Quotenr. Hersteller",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF Kontakt.GET(vkgz."Endkundennr.") THEN BEGIN
                EnterCell(RowNo,17,Kontakt.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              RowNo := RowNo + 1;
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;

      // Ende Gutschriften

      CloseExcel('XMOS_TOPAS_POS_lfd','XMOS_TOPAS_POS_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      //MESSAGE(Text003);
      XMO_Lager_Neu;
    END;

    LOCAL PROCEDURE XMO_Lager_Neu@1000000029();
    VAR
      InvoiceRowID@1000000000 : Text;
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften

      // ANFANG Lagerliste pro Artikel

      {
      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1','04');
      IF Artikel.FIND('-') THEN BEGIN
        v_lagerbestand := 0;
        RowNo := 1;
        ColumnNo := 1;
        EnterCell(RowNo,ColumnNo,'Disti',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo += 1;
        EnterCell(RowNo,ColumnNo,'Part Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo += 1;
        EnterCell(RowNo,ColumnNo,'Qty.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo += 1;
        EnterCell(RowNo,ColumnNo,'Per Unit Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo += 1;
        EnterCell(RowNo,ColumnNo,'Warehouse Location',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo += 1;
        EnterCell(RowNo,ColumnNo,'Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo + 1;
        REPEAT
          v_lagerbestand := 0;
          Artikelposten.RESET;
          Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
          Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
          Artikelposten.SETFILTER(Artikelposten."Location Code",'%1|%2','ZENT','KONSI');
          IF Artikelposten.FIND('-') THEN BEGIN
            REPEAT
              EK_Lief.RESET;
              EK_Lief.SETFILTER(EK_Lief."Document No.",'%1',Artikelposten."Document No.");
              EK_Lief.SETFILTER(EK_Lief."Line No.",'%1',Artikelposten."Document Line No.");
              IF EK_Lief.FINDFIRST THEN BEGIN
                v_ek_epreis:=EK_Lief."Direct Unit Cost";
              END;
            v_artpos_reqty:=v_artpos_reqty+Artikelposten."Remaining Quantity";
            UNTIL Artikelposten.NEXT = 0;
          END;
          IF v_artpos_reqty <> 0 THEN BEGIN
            ColumnNo := 1;
            EnterCell(RowNo,ColumnNo,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            ColumnNo += 1;
            EnterCell(RowNo,ColumnNo,Artikel."No. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            ColumnNo += 1;
            EnterCell(RowNo,ColumnNo,FORMAT(v_artpos_reqty),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            ColumnNo += 1;
            EnterCell(RowNo,ColumnNo,FORMAT(v_ek_epreis),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            ColumnNo += 1;
            EnterCell(RowNo,ColumnNo,'DE',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            ColumnNo += 1;
            EnterCell(RowNo,ColumnNo,FORMAT(WORKDATE - 2),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

            v_artpos_reqty := 0;
            RowNo := RowNo + 1;
          END;
        UNTIL Artikel.NEXT = 0;
      END;
      // ENDE Lagerliste pro Artikel


      RowNo := RowNo + 5;

      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,'Einzelpositionen zur šberprfung der oberen Preis pro Artikel. Danach l”schen!',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 2;
      // Lagerbestandsliste der einzelnen Artikelpositionen ( ein Artikel kann mehrmals vorkommen)
      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1','04');
      IF Artikel.FIND('-') THEN BEGIN
        v_lagerbestand := 0;
        ColumnNo := 1;
        EnterCell(RowNo,ColumnNo,'Disti',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo += 1;
        EnterCell(RowNo,ColumnNo,'Part Number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo += 1;
        EnterCell(RowNo,ColumnNo,'Qty.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo += 1;
        EnterCell(RowNo,ColumnNo,'Per Unit Cost (USD)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo += 1;
        EnterCell(RowNo,ColumnNo,'Warehouse Location',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo += 1;
        EnterCell(RowNo,ColumnNo,'Date',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo + 1;
        REPEAT
          Artikelposten.RESET;
          Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
          Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
          Artikelposten.SETFILTER(Artikelposten."Location Code",'%1|%2','ZENT','KONSI');
          IF Artikelposten.FIND('-') THEN BEGIN
            v_lagerbestand := 0;
            REPEAT
              v_lagerbestand := v_lagerbestand + Artikelposten."Remaining Quantity";
              ColumnNo := 1;
              EnterCell(RowNo,ColumnNo,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,Artikel."No. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,FORMAT(Artikelposten."Remaining Quantity"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              ColumnNo += 1;
              EK_Lief.RESET;
              EK_Lief.SETFILTER(EK_Lief."Document No.",'%1',Artikelposten."Document No.");
              EK_Lief.SETFILTER(EK_Lief."Line No.",'%1',Artikelposten."Document Line No.");
              IF EK_Lief.FINDFIRST THEN BEGIN
                EnterCell(RowNo,ColumnNo,FORMAT(EK_Lief."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,8,'Disti holen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',EK_Lief."No.");
                "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
                "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  EnterCell(RowNo,ColumnNo,FORMAT("Ek-Preise"."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,'DE',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              ColumnNo += 1;
              EnterCell(RowNo,ColumnNo,FORMAT(WORKDATE - 2),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              RowNo := RowNo + 1;
            UNTIL Artikelposten.NEXT = 0;
          END;
          v_lagerbestand := 0;
          vkz.RESET;
          vkz.SETFILTER(vkz."No.",'%1',Artikel."No.");
          vkz.SETFILTER(vkz."Manufacturer Code",'%1','04');
          vkz.SETFILTER(vkz."Location Code",'%1','KONSI');
          vkz.SETFILTER(vkz."Qty. to Invoice",'>%1',0);
          IF vkz.FIND('-') THEN BEGIN
            REPEAT
              IF vkz."Qty. to Invoice" - vkz."Qty. to Ship" > 0 THEN BEGIN
                ColumnNo := 1;
                EnterCell(RowNo,ColumnNo,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo += 1;
                EnterCell(RowNo,ColumnNo,vkz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo += 1;
                EnterCell(RowNo,ColumnNo,FORMAT(vkz."Qty. to Invoice" - vkz."Qty. to Ship"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo += 1;
                EnterCell(RowNo,ColumnNo,FORMAT(vkz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                ColumnNo += 1;
                EnterCell(RowNo,ColumnNo,'DE',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                ColumnNo += 1;
                EnterCell(RowNo,ColumnNo,FORMAT(WORKDATE - 2),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                RowNo := RowNo + 1;
              END;
            UNTIL vkz.NEXT = 0;
          END;
        UNTIL Artikel.NEXT = 0;
      END;
      // ENDE Lagerbestandsliste der einzelnen Artikelpositionen ( ein Artikel kann mehrmals vorkommen)
      }

      Artikel.RESET;
      Artikel.SETFILTER("Manufacturer Code",'%1','04');
      IF Artikel.FIND('-') THEN BEGIN
        v_lagerbestand := 0;
        RecNo := 0;
        TotalRecNo := Artikel.COUNT;

        EnterCell(1,2,'Inventory Report',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(2,2,'Disti name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(2,3,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(3,2,'Date',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(3,3,FORMAT(WORKDATE),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Date);
        RowNo := 5;
        ColumnNo := 2;
        EnterCell(RowNo,ColumnNo,'SupplierÉs part number as listed in the SupplierÉs price list',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Qty of product available to sell',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Disti buy price per unit',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Total value (buy price)',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'End Customer name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Disti PO number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Quote number',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        ColumnNo := ColumnNo + 1;
        EnterCell(RowNo,ColumnNo,'Date of receipt of goods',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo + 1;

        REPEAT

          Artikelposten.RESET;
          Artikelposten.SETFILTER("Item No.",'%1',Artikel."No.");
          Artikelposten.SETFILTER("Remaining Quantity",'<>%1',0);
          Artikelposten.SETFILTER("Location Code",'%1|%2','ZENT','KONSI');
          IF Artikelposten.FIND('-') THEN BEGIN
            v_lagerbestand := 0;
            REPEAT
              v_lagerbestand := v_lagerbestand + Artikelposten."Remaining Quantity";
              EnterCell(RowNo,2,Artikel."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(Artikelposten."Remaining Quantity"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EK_Lief.RESET;
              EK_Lief.SETFILTER("Document No.",'%1',Artikelposten."Document No.");
              EK_Lief.SETFILTER("Line No.",'%1',Artikelposten."Document Line No.");
              IF EK_Lief.FINDFIRST THEN BEGIN
                EnterCell(RowNo,4,FORMAT(EK_Lief."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,5,FORMAT(Artikelposten.Quantity * EK_Lief."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,10,'Disti holen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Item No.",'%1',EK_Lief."No.");
                "Ek-Preise".SETFILTER("Currency Code",'%1','USD');
                "Ek-Preise".SETFILTER("Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  EnterCell(RowNo,4,FORMAT("Ek-Preise"."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,5,FORMAT(Artikelposten.Quantity * "Ek-Preise"."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              EnterCell(RowNo,6,Artikelposten.Description,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,Artikelposten."External Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF quotedaten.GET(Artikelposten."Quotenr.") THEN BEGIN
                EnterCell(RowNo,8,quotedaten."Quotenr. Hersteller",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,9,FORMAT(Artikelposten."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              RowNo := RowNo + 1;
            UNTIL Artikelposten.NEXT = 0;
          END;

          v_lagerbestand := 0;

          vkz.RESET;
          vkz.SETFILTER("No.",'%1',Artikel."No.");
          vkz.SETFILTER("Manufacturer Code",'%1','04');
          vkz.SETFILTER("Location Code",'%1','KONSI');
          vkz.SETFILTER("Qty. to Invoice",'>%1',0);
          IF vkz.FIND('-') THEN BEGIN
            REPEAT
              IF vkz."Qty. to Invoice" - vkz."Qty. to Ship" > 0 THEN BEGIN
                vkk.GET(vkk."Document Type"::Order,vkz."Document No.");
                EnterCell(RowNo,2,vkz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,3,FORMAT(vkz."Qty. to Invoice" - vkz."Qty. to Ship"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,4,FORMAT(vkz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,5,FORMAT(vkz.Quantity * vkz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                IF Kontakt.GET(vkz."Endkundennr.") THEN BEGIN
                  EnterCell(RowNo,6,Kontakt.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                IF vkk.GET(vkk."Document Type"::Order,vkz."Document No.") THEN
                  EnterCell(RowNo,7,vkk."External Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                IF quotedaten.GET(vkz."Quotenr.") THEN BEGIN
                  EnterCell(RowNo,8,quotedaten."Quotenr. Hersteller",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                //EnterCell(RowNo,9,FORMAT(WORKDATE - 2),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                InvoiceRowID := STRSUBSTNO('"%1";"%2";"%3";"%4";"%5";"%6"',113,0,vkz."Document No.",'',0,vkz."Line No.");
                ValueEntryRelation.SETCURRENTKEY("Source RowId");
                ValueEntryRelation.SETRANGE("Source RowId",InvoiceRowID);
                IF ValueEntryRelation.FINDFIRST THEN BEGIN
                  ValueEntry.SETFILTER("Entry No.",'%1',ValueEntryRelation."Value Entry No.");
                  IF ValueEntry.FINDFIRST THEN BEGIN
                    ItemLedgerEntry.SETFILTER("Entry No.",'%1',ValueEntry."Item Ledger Entry No.");
                    IF ItemLedgerEntry.FINDFIRST THEN BEGIN
                      EnterCell(RowNo,9,FORMAT(ItemLedgerEntry."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                    END;
                  END;
                END;

                RowNo := RowNo + 1;
              END;
            UNTIL vkz.NEXT = 0;
          END;

          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));

        UNTIL Artikel.NEXT = 0;
      END;

      // ENDE Lagerbestandsliste der einzelnen Artikelpositionen ( ein Artikel kann mehrmals vorkommen)

      CloseExcel('XMOS_TOPAS_INV_lfd','XMOS_TOPAS_INV_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE ICplus@1000000011();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Disti Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Customer Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Disti Invoice #',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Part Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Qty Sold',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Resale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Currency',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Total Resale EUR',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Date of Sale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','30');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                EnterCell(RowNo,8,FORMAT((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkrz."Unit Price") * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
              END;
              EnterCell(RowNo,9,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','30');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkgz.Quantity/(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkgz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkgk."Currency Factor"<>0 THEN
              BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount)/(vkgk."Currency Factor") * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum + ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount) * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount) * (-1));
              END;
              EnterCell(RowNo,9,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      RowNo := RowNo + 2;
      EnterCell(RowNo,8,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('ICplus_TOPAS_POS_lfd','ICplus_TOPAS_POS_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE NIS_Neu@1000000030();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Disti Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Customer Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Disti Invoice #',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Part Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Qty Sold',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Resale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Currency',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Total Resale EUR',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Date of Sale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','41');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                EnterCell(RowNo,8,FORMAT((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkrz."Unit Price") * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
              END;
              EnterCell(RowNo,9,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','41');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkgz.Quantity/(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkgz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkgk."Currency Factor"<>0 THEN
              BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount)/(vkgk."Currency Factor") * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum + ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount) * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount) * (-1));
              END;
              EnterCell(RowNo,9,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      RowNo := RowNo + 2;
      EnterCell(RowNo,8,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('NIS_TOPAS_POS_lfd','NIS_TOPAS_POS_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE GAIN_Neu@1000000015();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Disti Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Customer Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Disti Invoice #',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Part Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Qty Sold',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Resale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Currency',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Total Resale EUR',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Date of Sale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','08');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                EnterCell(RowNo,8,FORMAT((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkrz."Unit Price") * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
              END;
              EnterCell(RowNo,9,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','08');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkgz.Quantity/(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkgz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkgk."Currency Factor"<>0 THEN
              BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount)/(vkgk."Currency Factor") * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum + ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount) * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount) * (-1));
              END;
              EnterCell(RowNo,9,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      RowNo := RowNo + 2;
      EnterCell(RowNo,8,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('GAIN_TOPAS_POS_lfd','GAIN_TOPAS_POS_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE FOX_Neu@1000000010();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Disti Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Customer Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Cust City',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Cust State',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Cust Zip',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Cust Country',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Disti Invoice #',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Part Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Qty Sold',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Resale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Currency',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Total Resale EUR',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Cost USD',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Date of Sale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','14');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrk."Sell-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkrk."Sell-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,vkrk."Sell-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,vkrk."Sell-to County",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,10,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,11,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,11,vkrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                EnterCell(RowNo,12,FORMAT((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
              END ELSE BEGIN
                EnterCell(RowNo,12,FORMAT((vkrz."Unit Price") * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
              END;
              EnterCell(RowNo,13,FORMAT(vkrz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','14');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."Sell-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgk."Sell-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,vkgk."Sell-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,vkgk."Sell-to County",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,FORMAT(vkgz.Quantity/(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,10,FORMAT(vkgz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,11,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,11,vkgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkgk."Currency Factor"<>0 THEN
              BEGIN
                EnterCell(RowNo,12,FORMAT((vkgz.Amount)/(vkgk."Currency Factor") * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum + ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              END ELSE BEGIN
                EnterCell(RowNo,12,FORMAT((vkgz.Amount) * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount) * (-1));
              END;
              EnterCell(RowNo,13,FORMAT(vkgz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      RowNo := RowNo + 2;
      EnterCell(RowNo,8,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('FOX_TOPAS_POS_lfd','FOX_TOPAS_POS_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE HALO_Neu@1000000016();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Disti Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Customer Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Disti Invoice #',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Part Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Qty Sold',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Resale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Currency',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Total Resale EUR',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Date of Sale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Total Cost USD',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Total Resale USD',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Country',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'City',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','78');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                EnterCell(RowNo,8,FORMAT((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
                EnterCell(RowNo,11,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkrz."Unit Price") * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
                w„kurs.RESET;
                w„kurs.SETFILTER(w„kurs."Currency Code",'%1','USD');
                w„kurs.SETFILTER(w„kurs."Starting Date",'%1',vkrk."Posting Date");
                IF w„kurs.FINDFIRST() THEN BEGIN
                  EnterCell(RowNo,11,FORMAT((vkrz.Amount)*(w„kurs."Exchange Rate Amount")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              EnterCell(RowNo,9,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,10,FORMAT(vkrz."DC-Preis (EKW)"*(vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(vkrk."Ship-to Country/Region Code"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,13,FORMAT(vkrk."Ship-to City"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','78');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkgz.Quantity/(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkgz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkgk."Currency Factor"<>0 THEN
              BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount)/(vkgk."Currency Factor") * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum + ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
                EnterCell(RowNo,11,FORMAT(vkgz.Amount),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount) * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount) * (-1));
                w„kurs.RESET;
                w„kurs.SETFILTER(w„kurs."Currency Code",'%1','USD');
                w„kurs.SETFILTER(w„kurs."Starting Date",'%1',vkgk."Posting Date");
                IF w„kurs.FINDFIRST() THEN BEGIN
                  EnterCell(RowNo,11,FORMAT((vkgz.Amount)*(w„kurs."Exchange Rate Amount")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              EnterCell(RowNo,9,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,10,FORMAT(vkgz."DC-Preis (EKW)"*(vkgz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(vkgk."Ship-to Country/Region Code"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,13,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      RowNo := RowNo + 2;
      EnterCell(RowNo,8,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('HALO_TOPAS_POS_lfd','HALO_TOPAS_POS_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE AKROS_Neu@1000000012();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,4,'P.O.S. Report',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 2;
      EnterCell(RowNo,2,'Distributor Name:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Topas electronic AG',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,2,'Date:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(WORKDATE),TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := RowNo + 1;
      EnterCell(RowNo,6,'USD $$$',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'USD $$$',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'USD $$$',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'USD $$$',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Invoice Date',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Contract Manufacturer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Design Customer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Product',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Qty',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Cost',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Resale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Cost Value',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Resale Value',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Margin %',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','55');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              EnterCell(RowNo,4,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkrz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(vkrz."VK-Preis (EKW)"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,8,FORMAT((vkrz.Quantity)*(vkrz."DC-Preis (EKW)")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT((vkrz.Quantity)*(vkrz."VK-Preis (EKW)")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF vkrz.Quantity<>0 THEN BEGIN
                IF vkrz."DC-Preis (EKW)" <>0 THEN BEGIN
                  IF vkrz."VK-Preis (EKW)" <>0 THEN BEGIN
                    EnterCell(RowNo,10,FORMAT((((vkrz.Quantity)*(vkrz."VK-Preis (EKW)"))-((vkrz.Quantity)*(vkrz."DC-Preis (EKW)")))/((vkrz.Quantity)*(vkrz."VK-Preis (EKW)"))*100),FALSE,FALSE,FALSE,'##0.00',TempExcelBuffer."Cell Type"::Number);
                  END;
                END;
              END;
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkrk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','55');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              EnterCell(RowNo,4,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkgz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkgz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(vkgz."VK-Preis (EKW)"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,8,FORMAT((vkgz.Quantity)*(vkrz."DC-Preis (EKW)")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT((vkgz.Quantity)*(vkrz."VK-Preis (EKW)")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF vkgz.Quantity<>0 THEN BEGIN
                IF vkgz."DC-Preis (EKW)" <>0 THEN BEGIN
                  IF vkgz."VK-Preis (EKW)" <>0 THEN BEGIN
                    EnterCell(RowNo,10,FORMAT((((vkgz.Quantity)*(vkgz."VK-Preis (EKW)"))-((vkgz.Quantity)*(vkgz."DC-Preis (EKW)")))/((vkgz.Quantity)*(vkgz."VK-Preis (EKW)"))*100),FALSE,FALSE,FALSE,'##0.00',TempExcelBuffer."Cell Type"::Number);
                  END;
                END;
              END;
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      RowNo := RowNo + 2;
      //EnterCell(RowNo,8,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('AKROS_TOPAS_POS_lfd','AKROS_TOPAS_POS_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE FERRARI_Neu@1000000013();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Reseller name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Address',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Zip',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'City',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Country',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Ferrari electronic item-no.',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Quantity shipped',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Total Amount',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Curreny',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Month/Day/Year',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','85');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkrk."Sell-to Address",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrk."Sell-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkrk."Sell-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,vkrk."Sell-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(vkrz."Artikelnr. 2"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                EnterCell(RowNo,8,FORMAT((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkrz."Unit Price") * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
              END;
              EnterCell(RowNo,9,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              v_day:=DATE2DMY(vkrk."Posting Date",1);
              v_month:=DATE2DMY(vkrk."Posting Date",2);
              v_year:=DATE2DMY(vkrk."Posting Date",3)-2000;
              EnterCell(RowNo,10,FORMAT(FORMAT(v_month)+'/'+FORMAT(v_day)+'/'+FORMAT(v_year)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','85');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Address",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."Sell-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgk."Sell-to City",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,vkgk."Sell-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(vkgz."Artikelnr. 2"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(vkgz.Quantity),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkgk."Currency Factor"<>0 THEN BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz."Unit Price")*(vkgz.Quantity)/(vkgk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+ ((vkgz."Unit Price")*(vkgz.Quantity)/(vkgk."Currency Factor"));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz."Unit Price") * (vkgz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum+ ((vkgz."Unit Price") * (vkgz.Quantity));
              END;
              EnterCell(RowNo,9,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              v_day:=DATE2DMY(vkgk."Posting Date",1);
              v_month:=DATE2DMY(vkgk."Posting Date",2);
              v_year:=DATE2DMY(vkgk."Posting Date",3)-2000;
              EnterCell(RowNo,10,FORMAT(FORMAT(v_month)+'/'+FORMAT(v_day)+'/'+FORMAT(v_year)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      RowNo := RowNo + 2;
      EnterCell(RowNo,8,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('FERRARI_TOPAS_POS_lfd','FERRARI_TOPAS_POS_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE DSP_Neu@1000000014();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Disti Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Customer Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Disti Invoice #',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Part Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Qty Sold',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Resale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Currency',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Total Resale EUR',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Date of Sale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','17');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                EnterCell(RowNo,8,FORMAT((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkrz."Unit Price") * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
              END;
              EnterCell(RowNo,9,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','17');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkgz.Quantity/(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkgz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkgk."Currency Factor"<>0 THEN
              BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount)/(vkgk."Currency Factor") * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum + ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount) * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount) * (-1));
              END;
              EnterCell(RowNo,9,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      RowNo := RowNo + 2;
      EnterCell(RowNo,8,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('DSP_TOPAS_POS_lfd','DSP_TOPAS_POS_lfd','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE GSI_2_Neu@1000000017();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Disti Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Customer Name',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Disti Invoice #',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Part Number',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Qty Sold',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Resale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Currency',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Total Resale EUR',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Date of Sale',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1','54');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              v_herstell_VK_Preis := 0;
      {
              quotedaten.RESET;
              quotedaten.SETFILTER(quotedaten."Quotenr.",'%1',vkrz."Quotenr.");
              IF quotedaten.FINDFIRST() THEN BEGIN
                IF quotedaten."Hersteller-VK-Preis" > 0 THEN BEGIN
                  IF quotedaten."Hersteller-VK-Preis" < vkrz."VK-Preis (EKW)" THEN BEGIN
      //            Quote-Preis: šberprfen, ob Hersteller-VK-Preis in Euro ist *****************************************************
                    v_herstell_VK_Preis := quotedaten."Hersteller-VK-Preis";
                  END;
                END;
              END;
      }
              IF v_herstell_VK_Preis = 0 THEN BEGIN
                EnterCell(RowNo,6,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,6,FORMAT(v_herstell_VK_Preis),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              END;
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF vkrk."Currency Factor"<>0 THEN BEGIN
                IF v_herstell_VK_Preis = 0 THEN BEGIN
                  EnterCell(RowNo,8,FORMAT((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_Total_Sum:=v_Total_Sum+ ((vkrz."Unit Price")*(vkrz.Quantity)/(vkrk."Currency Factor"));
                END ELSE BEGIN
                  EnterCell(RowNo,8,FORMAT((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_Total_Sum:=v_Total_Sum+ ((v_herstell_VK_Preis)*(vkrz.Quantity)/(vkrk."Currency Factor"));
                END;
              END ELSE BEGIN
                IF v_herstell_VK_Preis = 0 THEN BEGIN
                  EnterCell(RowNo,8,FORMAT((vkrz."Unit Price") * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_Total_Sum := v_Total_Sum+ ((vkrz."Unit Price") * (vkrz.Quantity));
                END ELSE BEGIN
                  EnterCell(RowNo,8,FORMAT((v_herstell_VK_Preis) * (vkrz.Quantity)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_Total_Sum := v_Total_Sum + ((v_herstell_VK_Preis) * (vkrz.Quantity));
                END;
              END;
              EnterCell(RowNo,9,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1','54');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,'TOPAS electronic AG',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(vkgz.Quantity/(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vkgz."Unit Price"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
              IF vkrk."Currency Code" = '' THEN BEGIN
                EnterCell(RowNo,7,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,7,vkgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              IF vkgk."Currency Factor"<>0 THEN
              BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount)/(vkgk."Currency Factor") * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum + ((vkgz.Amount)/(vkgk."Currency Factor") * (-1));
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT((vkgz.Amount) * (-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum:=v_Total_Sum+((vkgz.Amount) * (-1));
              END;
              EnterCell(RowNo,9,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      RowNo := RowNo + 2;
      EnterCell(RowNo,8,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('GSI_TOPAS_POS_lfd_ohne_Quote-VK','GSI_TOPAS_POS_lfd_ohne_Quote-VK','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE offene_Posten_ausgeben@1000000020();
    BEGIN
      CreateExcel;
      RecNo := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Debitor-Nr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Debitor',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Datum',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Beleg',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'W„hrung',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'offener Betrag',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Restbetrag',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'EUR Betrag',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      Deb_Pos.RESET;
      Deb_Pos.SETAUTOCALCFIELDS(Deb_Pos.Amount,Deb_Pos."Remaining Amount");
      Deb_Pos.SETFILTER(Deb_Pos.Open,'%1',TRUE);
      IF Deb_Pos.FIND('-') THEN BEGIN
        REPEAT
          RowNo := RowNo + 1;
          EnterCell(RowNo,1,Deb_Pos."Customer No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          Debitor.RESET;
          Debitor.SETFILTER(Debitor."No.",'%1',Deb_Pos."Customer No.");
          IF Debitor.FINDFIRST THEN BEGIN
             EnterCell(RowNo,2,Debitor.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          EnterCell(RowNo,3,FORMAT(Deb_Pos."Posting Date"),FALSE,FALSE,FALSE,'DD.MM.YYYY',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,4,FORMAT(Deb_Pos."Document No."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(Deb_Pos."Currency Code"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT(Deb_Pos.Amount),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,7,FORMAT(Deb_Pos."Remaining Amount"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(Deb_Pos."Sales (LCY)"),FALSE,FALSE,FALSE,'#,##0.00##',TempExcelBuffer."Cell Type"::Number);
        UNTIL Deb_Pos.NEXT=0;
      END;

      CloseExcel('offene_Posten','offene_Posten','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');
      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE "Provisionsabrechnung VK-Umsatz aus Tabelle Belege"@1000000018();
    BEGIN
      CreateExcel;
      EnterCell(1,1,'Re_Nummer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,2,'Re_Datum',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,3,'Artikelnr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,4,'Menge',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,5,'VK_W„hrung',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,6,'W„hrung',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,7,'VK_EUR',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,8,'Einstandspreis',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,9,'Kunde',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,10,'Kunden_Nr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,11,'PLZ',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,12,'Verk„ufercode',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,13,'Betreuer Innen',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,14,'Team',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,15,'Gebiet',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,16,'Betrag',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,17,'Marge',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,18,'Marge %',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,19,'Linie',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,20,'Hersteller',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,21,'AU-Nr.',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,22,'Rahmen',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,23,'Datum',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,24,'W„hrung',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,25,'Kurs',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,26,'EK',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,27,'VK',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,28,'Marge',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,29,'Marge %',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(1,30,'Abweich 1%',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      tab_belege.RESET;
      tab_belege.SETFILTER(tab_belege.Belegdatum,'%1..%2',v_datum_von, v_datum_bis);
      tab_belege.SETFILTER(tab_belege.Lagerortcode,'%1|%2','ZENT','KONSI');
      tab_belege.SETFILTER(tab_belege.Belegart,'%1|%2',tab_belege.Belegart::Invoice,tab_belege.Belegart::"Credit Memo");
      IF tab_belege.FIND('-') THEN BEGIN
        REPEAT
          v_betrag:=0;
          v_marge:=0;
          v_margePro:=0;
          EnterCell(RowNo,1,tab_belege."Belegnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_belege.Belegdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,3,tab_belege."Artikelnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_belege.Menge),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);

          IF tab_belege.Belegart=tab_belege.Belegart::Invoice THEN EnterCell(RowNo,5,FORMAT(tab_belege.Betrag),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          IF tab_belege.Belegart=tab_belege.Belegart::"Credit Memo" THEN EnterCell(RowNo,5,FORMAT((tab_belege.Betrag*(-1))),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          //    EnterCell(RowNo,5,FORMAT(tab_belege.Betrag),FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,6,FORMAT(tab_belege."VK-W„hrung"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          IF tab_belege.Belegart=tab_belege.Belegart::Invoice THEN EnterCell(RowNo,7,FORMAT(tab_belege.Betrag),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          IF tab_belege.Belegart=tab_belege.Belegart::"Credit Memo" THEN EnterCell(RowNo,7,FORMAT((tab_belege.Betrag*(-1))),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          //    EnterCell(RowNo,7,FORMAT(tab_belege."VK-Preis"),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(tab_belege."Einstandspreis MW"),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);

          IF tab_belege.Belegart=tab_belege.Belegart::Invoice THEN BEGIN
            vkrk.RESET;
            vkrk.SETFILTER(vkrk."No.",'%1',tab_belege."Belegnr.");
            IF vkrk.FINDFIRST THEN BEGIN
              EnterCell(RowNo,9,FORMAT(vkrk."Sell-to Customer Name"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,vkrk."Sell-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
          END;
          IF tab_belege.Belegart=tab_belege.Belegart::"Credit Memo" THEN BEGIN
            vkgk.RESET;
            vkgk.SETFILTER(vkgk."No.",'%1',tab_belege."Belegnr.");
            IF vkgk.FINDFIRST THEN BEGIN
              EnterCell(RowNo,9,FORMAT(vkgk."Sell-to Customer Name"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,vkgk."Sell-to Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
          END;

          EnterCell(RowNo,10,FORMAT(tab_belege."Debitornr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(tab_belege.Verk„ufercode),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,FORMAT(tab_belege."Betreuer Innendienst"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(tab_belege.Teams),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,15,FORMAT(tab_belege.Gebiet),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    IF (tab_belege."VK-W„hrung"='') THEN BEGIN

          IF tab_belege.Belegart=tab_belege.Belegart::Invoice THEN v_betrag:=tab_belege."Betrag MW ohne Mwst.";
          IF tab_belege.Belegart=tab_belege.Belegart::"Credit Memo" THEN v_betrag:=(tab_belege."Betrag MW ohne Mwst."*(-1));
          //    IF v_betrag <> 0 THEN v_marge:=ROUND(v_betrag-(tab_belege."Einstandspreis MW"*tab_belege.Menge),0.01);
          //    IF v_betrag <> 0 THEN v_margePro:=ROUND(v_marge/v_betrag*100,0.01);
          IF v_betrag <> 0 THEN BEGIN
            IF tab_belege.Belegart=tab_belege.Belegart::Invoice THEN v_marge:=ROUND(v_betrag-(tab_belege."Einstandspreis MW"*tab_belege.Menge),0.01);
            IF tab_belege.Belegart=tab_belege.Belegart::Invoice THEN v_margePro:=ROUND(v_marge/v_betrag*100,0.01);
            IF tab_belege.Belegart=tab_belege.Belegart::"Credit Memo" THEN v_marge:=ROUND(v_betrag+(tab_belege."Einstandspreis MW"*tab_belege.Menge),0.01);
            IF tab_belege.Belegart=tab_belege.Belegart::"Credit Memo" THEN BEGIN
              IF v_marge<0 THEN v_margePro:=ROUND((v_marge/v_betrag*100*(-1)),0.01);
              IF v_marge>0 THEN
                v_marge:=v_marge*(-1);
                v_margePro:=ROUND((v_marge/v_betrag*100*(-1)),0.01);
            END;
          END;
          //    END ELSE BEGIN
          //          v_betrag:=ROUND(vkrz."Unit Price"*vkrz.Quantity/vkrk."Currency Factor",0.01);
          //          v_marge:=ROUND(v_betrag-(vkrz."Unit Cost (LCY)"*vkrz.Quantity),0.01);
          //          IF v_betrag <> 0 THEN v_margePro:=ROUND(v_marge/v_betrag*100,0.01);
          //    END;
          //    IF tab_belege.Belegart=tab_belege.Belegart::Invoice THEN EnterCell(RowNo,16,FORMAT(v_betrag),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          //    IF tab_belege.Belegart=tab_belege.Belegart::"Credit Memo" THEN EnterCell(RowNo,16,FORMAT((v_betrag*(-1))),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,16,FORMAT(v_betrag),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          //    IF tab_belege.Belegart=tab_belege.Belegart::Invoice THEN EnterCell(RowNo,17,FORMAT(v_marge),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          //    IF tab_belege.Belegart=tab_belege.Belegart::"Credit Memo" THEN EnterCell(RowNo,17,FORMAT((v_marge*(-1))),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,17,FORMAT(v_marge),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,18,FORMAT(v_margePro),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,19,'Linie',FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,20,FORMAT(tab_belege.Herstellercode),FALSE,FALSE,FALSE,'#,##0',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,21,FORMAT(tab_belege."Auftragsnr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,22,FORMAT(tab_belege."Rahmenauftragsnr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,23,FORMAT(tab_belege.Belegdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          vkk.RESET;
          vkk.SETFILTER(vkk."No.",'%1',tab_belege."Auftragsnr.");
          vkk.SETFILTER(vkk."No.",'%1',tab_belege."Auftragsnr.");
          IF vkk.FINDFIRST THEN BEGIN
            EnterCell(RowNo,24,vkk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,25,FORMAT(vkk."Currency Factor"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          END ELSE BEGIN
            vkk_arch.RESET;
            vkk_arch.SETFILTER(vkk_arch."No.",'%1',tab_belege."Auftragsnr.");
            IF vkk_arch.FINDFIRST THEN BEGIN
              EnterCell(RowNo,24,vkk_arch."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,25,FORMAT(vkk_arch."Currency Factor"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
            END;
          END;
          IF tab_belege."EK-Preis" <> 9999 THEN EnterCell(RowNo,26,FORMAT(tab_belege."EK-Preis"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          IF tab_belege."EK-Preis" = 9999 THEN EnterCell(RowNo,26,FORMAT(0.0),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,27,FORMAT(tab_belege."VK-Preis"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          IF tab_belege."Betrag MW ohne Mwst." <> 0 THEN EnterCell(RowNo,28,FORMAT(tab_belege."Betrag MW ohne Mwst."-(tab_belege."Einstandspreis MW"*tab_belege.Menge)),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          IF tab_belege."Betrag MW ohne Mwst." <> 0 THEN EnterCell(RowNo,29,FORMAT(tab_belege."DB %"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
          IF tab_belege."Betrag MW ohne Mwst." = 0 THEN EnterCell(RowNo,28,FORMAT(0.0),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          IF tab_belege."Betrag MW ohne Mwst." = 0 THEN EnterCell(RowNo,29,FORMAT(0.0),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,30,'Abweich 1%',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo + 1;
        UNTIL tab_belege.NEXT = 0;
      END;
      {

      vkrk.RESET;
      // Testfilter Anfang
      //vkrk.SETFILTER(vkrk."No.",'%1|%2|%3','RE252352','RE252447','RE252524');
      // Testfilter Ende
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      vkrk.SETFILTER(vkrk."Location Code",'%1|%2','ZENT','KONSI');
      IF vkrk.FINDFIRST THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz.Type,'%1',vkrz.Type::Item);
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          IF vkrz.FINDFIRST THEN BEGIN
            REPEAT
              v_betrag:=0;
              v_marge:=0;
              v_margePro:=0;
              EnterCell(RowNo,1,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,3,vkrz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(vkrk."Bill-to Name"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(vkrk."Salesperson Code"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,FORMAT(vkrk."Betreuer Innendienst"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(vkrk.Teams),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,FORMAT(vkrk."Territory Code"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF ((vkrk."Currency Factor"=0) OR (vkrk."Currency Factor"=1)) THEN BEGIN
                v_betrag:=ROUND(vkrz."Unit Price"*vkrz.Quantity,0.01);
                v_marge:=ROUND(v_betrag-(vkrz."Unit Cost (LCY)"*vkrz.Quantity),0.01);
                IF v_betrag <> 0 THEN v_margePro:=ROUND(v_marge/v_betrag*100,0.01);
              END ELSE BEGIN
                v_betrag:=ROUND(vkrz."Unit Price"*vkrz.Quantity/vkrk."Currency Factor",0.01);
                v_marge:=ROUND(v_betrag-(vkrz."Unit Cost (LCY)"*vkrz.Quantity),0.01);
                IF v_betrag <> 0 THEN v_margePro:=ROUND(v_marge/v_betrag*100,0.01);
              END;
              EnterCell(RowNo,10,FORMAT(v_betrag),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,11,FORMAT(v_marge),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(v_margePro),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(vkrz."Manufacturer Code"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              RowNo := RowNo + 1;
            UNTIL vkrz.NEXT = 0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;

      // Gutschriften listen
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      vkgk.SETFILTER(vkgk."Location Code",'%1|%2','ZENT','KONSI');
      IF vkgk.FINDFIRST THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz.Type,'%1',vkgz.Type::Item);
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          IF vkgz.FINDFIRST THEN BEGIN
            REPEAT
              v_betrag:=0;
              v_marge:=0;
              v_margePro:=0;
              EnterCell(RowNo,1,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,3,vkgz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,FORMAT(vkgz.Quantity*(-1)),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(vkgk."Bill-to Name"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(vkgk."Salesperson Code"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,FORMAT(vkgk."Betreuer Innendienst"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(vkgk.Teams),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,FORMAT(vkgk."Territory Code"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF ((vkgk."Currency Factor"=0) OR (vkgk."Currency Factor"=1)) THEN BEGIN
                v_betrag:=ROUND(vkgz."Unit Price"*vkgz.Quantity*(-1),0.01);
                v_marge:=ROUND(v_betrag-(vkgz."Unit Cost (LCY)"*vkgz.Quantity*(-1)),0.01);
                IF v_betrag <> 0 THEN v_margePro:=ROUND(v_marge/v_betrag*100,0.01);
              END ELSE BEGIN
                v_betrag:=ROUND(vkgz."Unit Price"*vkgz.Quantity/vkgk."Currency Factor"*(-1),0.01);
                v_marge:=ROUND(v_betrag-(vkgz."Unit Cost (LCY)"*vkgz.Quantity*(-1)),0.01);
                IF v_betrag <> 0 THEN v_margePro:=ROUND(v_marge/v_betrag*100,0.01);
              END;
              EnterCell(RowNo,10,FORMAT(v_betrag),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,11,FORMAT(v_marge),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(v_margePro),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(vkgz."Manufacturer Code"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              RowNo := RowNo + 1;
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      }

      CloseExcel('Provisionsabrechnung aus Tabelle Belege','','');
      //CloseExcel(Sheetname(=Provisionsabrechnung aus Tabelle Belege),Filename(=leer),Filepath(=leer)(Wenn leer, dann tempor„r)

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE Prf_Meld_Stat_Bundesamt@1000000024();
    BEGIN

      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          sachpo.RESET;
          sachpo.SETFILTER(sachpo."Document No.",'%1',vkrk."No.");
          sachpo.SETFILTER(sachpo."G/L Account No.",'%1|%2','4225','4317');
          IF sachpo.FIND('-') THEN BEGIN
            REPEAT
              vkrz.RESET;
              vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
              vkrz.SETFILTER(vkrz."Location Code",'%1|%2','ZENT','KONSI');
              vkrz.SETFILTER(vkrz.Type,'%1',vkrz.Type::Item);
              vkrz.SETFILTER(vkrz.Quantity,'>%1',0);
              vkrz.SETFILTER(vkrz."Gen. Bus. Posting Group",'%1','EU');
              vkrz.SETFILTER(vkrz."Gen. Prod. Posting Group",'%1|%2|%3|%4','SYSTEM','HANDEL','16_SYSTEM','16_HANDEL');
              IF vkrz.FIND('-') THEN BEGIN
                REPEAT
                  Artikel.RESET;
                  Artikel.SETFILTER(Artikel."No.",'%1',vkrz."No.");
                  Artikel.SETFILTER(Artikel."Tariff No.",'<>%1','');
                  IF Artikel.FINDFIRST() THEN BEGIN
                    v_message:=TRUE;
                  END ELSE BEGIN
                    CreateExcel;
                    RowNo := 1;
                    EnterCell(RowNo,1,'Artikel ohne Warentarif-Nummer. Bitte einpflegen, ansonsten l„uft das Programm nicht weiter!',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    RowNo := RowNo + 2;
                    EnterCell(RowNo,1,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,2,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,3,FORMAT(vkrk."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                    CloseExcel('Artikel ohne ZolltarifNR','Artikel ohne ZolltarifNr','');
                    v_message1:=TRUE;
                  END;
                UNTIL vkrz.NEXT=0;
              END;
            UNTIL sachpo.NEXT=0;
          END;
        UNTIL vkrk.NEXT=0;
      END;

      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          sachpo.RESET;
          sachpo.SETFILTER(sachpo."Document No.",'%1',vkgk."No.");
          sachpo.SETFILTER(sachpo."G/L Account No.",'%1|%2','4225','4317');
          IF sachpo.FIND('-') THEN BEGIN
            REPEAT
              vkgz.RESET;
              vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
              vkgz.SETFILTER(vkgz."Location Code",'%1|%2','ZENT','KONSI');
              vkgz.SETFILTER(vkgz.Type,'%1',vkgz.Type::Item);
              vkgz.SETFILTER(vkgz.Quantity,'>%1',0);
              vkgz.SETFILTER(vkgz."Gen. Bus. Posting Group",'%1','EU');
              vkgz.SETFILTER(vkgz."Gen. Prod. Posting Group",'%1|%2','SYSTEM','HANDEL');
              IF vkgz.FIND('-') THEN BEGIN
                REPEAT
                  Artikel.RESET;
                  Artikel.SETFILTER(Artikel."No.",'%1',vkgz."No.");
                  Artikel.SETFILTER(Artikel."Tariff No.",'<>%1','');
                  IF Artikel.FINDFIRST() THEN BEGIN
                    v_message:=TRUE;
                  END ELSE BEGIN
                    CreateExcel;
                    RowNo := 1;
                    EnterCell(RowNo,1,'Artikel ohne Warentarif-Nummer. Bitte einpflegen, ansonsten l„uft das Programm nicht weiter!',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    RowNo := RowNo + 2;
                    EnterCell(RowNo,1,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,2,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,3,FORMAT(vkgk."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                    CloseExcel('Artikel ohne ZolltarifNr','Artikel ohne ZolltarifNr','');
                    v_message1:=TRUE;
                  END;
                UNTIL vkgz.NEXT=0;
              END;
            UNTIL sachpo.NEXT=0;
          END;
        UNTIL vkgk.NEXT=0;
      END;
      IF v_message1=TRUE THEN BEGIN
      END ELSE BEGIN
        IF v_message=TRUE THEN BEGIN
          MESSAGE(Mess01);
          Meld_Stat_Bundesamt;
        END;
      END;

      v_message:=FALSE;
      v_message1:=FALSE;
    END;

    LOCAL PROCEDURE Meld_Stat_Bundesamt@1000000019();
    BEGIN
      v_sum_wert:=0;
      v_sum_gewicht:=0;
      v_sum_menge:=0;

      CreateExcel;
      RecNo := 0;
      //šberschriften
      //{
      RowNo := 1;
      EnterCell(RowNo,1,'Firma',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Belegnr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'USt.-ID',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Artikel',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Menge',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,'Warentarifnummer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Deb.Buch-Gruppe',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Belegdatum',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Pos.Wert Euro',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Nettogewicht',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Bruttogewicht',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      v_zollpos.RESET;
      v_zollpos.SETFILTER(v_zollpos."No.",'<>%1','1');
      IF v_zollpos.FIND('-') THEN BEGIN
        REPEAT
          Debitor.RESET;
          Debitor.SETFILTER(Debitor."No.",'>%1','1');
          IF Debitor.FIND('-') THEN BEGIN
            REPEAT
              vkrk.RESET;
              vkrk.SETFILTER(vkrk."Sell-to Customer No.",'%1',Debitor."No.");
              vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
              IF vkrk.FIND('-') THEN BEGIN
                REPEAT
                  sachpo.RESET;
                  sachpo.SETFILTER(sachpo."Document No.",'%1',vkrk."No.");
                  sachpo.SETFILTER(sachpo."G/L Account No.",'%1|%2','4225','4317');
                  IF sachpo.FIND('-') THEN BEGIN
                    REPEAT
                      vkrz.RESET;
                      vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
                      vkrz.SETFILTER(vkrz."Location Code",'%1|%2','ZENT','KONSI');
                      vkrz.SETFILTER(vkrz.Type,'%1',vkrz.Type::Item);
                      vkrz.SETFILTER(vkrz.Quantity,'>%1',0);
                      IF vkrz.FIND('-') THEN BEGIN
                        REPEAT
                          Artikel.RESET;
                          Artikel.SETFILTER(Artikel."No.",'%1',vkrz."No.");
                          Artikel.SETFILTER(Artikel."Tariff No.",'%1',v_zollpos."No.");
                          IF Artikel.FINDFIRST() THEN BEGIN
                            RowNo := RowNo + 1;
                            IF v_deb_nr=Debitor."No." THEN BEGIN
                              IF v_zollposnr=v_zollpos."No." THEN BEGIN
                              END ELSE BEGIN
                                EnterCell(RowNo,9,FORMAT(v_sum_wert),TRUE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                                EnterCell(RowNo,5,FORMAT(v_sum_menge),TRUE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
                                v_sum_wert:=0;
                                v_sum_gewicht:=0;
                                v_sum_menge:=0;
                                RowNo := RowNo + 1;
                              END;
                            END ELSE BEGIN
                              EnterCell(RowNo,9,FORMAT(v_sum_wert),TRUE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                              EnterCell(RowNo,5,FORMAT(v_sum_menge),TRUE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
                              v_sum_wert:=0;
                              v_sum_gewicht:=0;
                              v_sum_menge:=0;
                              RowNo := RowNo + 2;
                            END;
                            EnterCell(RowNo,1,vkrk."Bill-to Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,2,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,3,vkrk."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,4,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,5,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
                            v_sum_menge:=v_sum_menge+(vkrz.Quantity);
                            EnterCell(RowNo,6,Artikel."Tariff No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,7,vkrk."Customer Posting Group",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,8,FORMAT(vkrk."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                            IF vkrk."Currency Factor"<>0 THEN BEGIN
                              EnterCell(RowNo,9,FORMAT(vkrz.Amount/vkrk."Currency Factor"),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                              v_sum_wert:=v_sum_wert+(vkrz.Amount/vkrk."Currency Factor");
                            END ELSE BEGIN
                              EnterCell(RowNo,9,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                              v_sum_wert:=v_sum_wert+(vkrz.Amount);
                            END;
                            EnterCell(RowNo,10,FORMAT(Artikel."Net Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                            EnterCell(RowNo,11,FORMAT(Artikel."Gross Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                            // EnterCell(RowNo,12,FORMAT(Artikel."Net Weight"*vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                            IF Artikel."Net Weight"=0 THEN BEGIN
                            END ELSE BEGIN
                              v_sum_gewicht:=v_sum_gewicht+(Artikel."Net Weight"*vkrz.Quantity);
                            END;
                            IF v_zollpos."No."='8473 3020' THEN EnterCell(RowNo,13,'8 Kanal Einsteckkarten',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8473 3080' THEN EnterCell(RowNo,13,'šbertragungs- und Filtermodule',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8504 9091' THEN EnterCell(RowNo,13,'Power over Ethernet Module',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8517 1800' THEN EnterCell(RowNo,13,'IP Telefone',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8517 6200' THEN EnterCell(RowNo,13,'Ger„te zum telefonieren ber das Internet mit Vermittlungsfunktion',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8529 9020' THEN EnterCell(RowNo,13,'Camera Ship Sensoren',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8541 4090' THEN EnterCell(RowNo,13,'lichtempfindliche Halbleiter',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8542 3190 000' THEN EnterCell(RowNo,13,'Steuer- und Kontrollbausteine',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF ((v_zollpos."No."='8542 3990') AND (Artikel."Manufacturer Code"='40')) THEN EnterCell(RowNo,13,'Leistungs- und Spannungsregler',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF ((v_zollpos."No."='8542 3990') AND (Artikel."Manufacturer Code"<>'40')) THEN EnterCell(RowNo,13,'elektronisch integrierte Schaltungen, andere, andere',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8543 9000' THEN EnterCell(RowNo,13,'Entwicklungsboard',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8544 4290' THEN EnterCell(RowNo,13,'Kabel mit Anschluá',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            v_zollposnr:=v_zollpos."No.";
                            v_deb_nr:=Debitor."No.";
                          END;
                        UNTIL vkrz.NEXT=0;
                      END;
                    UNTIL sachpo.NEXT=0;
                  END;
                UNTIL vkrk.NEXT=0;
              END;
            UNTIL Debitor.NEXT=0;
          END;
        UNTIL v_zollpos.NEXT=0;
      END;


      v_zollpos.RESET;
      v_zollpos.SETFILTER(v_zollpos."No.",'<>%1','1');
      IF v_zollpos.FIND('-') THEN BEGIN
        REPEAT
          Debitor.RESET;
          Debitor.SETFILTER(Debitor."No.",'>%1','1');
          IF Debitor.FIND('-') THEN BEGIN
            REPEAT
              vkgk.RESET;
              vkgk.SETFILTER(vkgk."Sell-to Customer No.",'%1',Debitor."No.");
              vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
              IF vkgk.FIND('-') THEN BEGIN
                REPEAT
                  sachpo.RESET;
                  sachpo.SETFILTER(sachpo."Document No.",'%1',vkgk."No.");
                  sachpo.SETFILTER(sachpo."G/L Account No.",'%1|%2','4225','4317');
                  IF sachpo.FIND('-') THEN BEGIN
                    REPEAT
                     vkgz.RESET;
                     vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
                     vkgz.SETFILTER(vkgz."Location Code",'%1|%2','ZENT','KONSI');
                     vkgz.SETFILTER(vkgz.Type,'%1',vkgz.Type::Item);
                     vkgz.SETFILTER(vkgz.Quantity,'>%1',0);
                     IF vkgz.FIND('-') THEN BEGIN
                       REPEAT
                        Artikel.RESET;
                        Artikel.SETFILTER(Artikel."No.",'%1',vkgz."No.");
                        Artikel.SETFILTER(Artikel."Tariff No.",'%1',v_zollpos."No.");
                        IF Artikel.FINDFIRST() THEN BEGIN
                          RowNo := RowNo + 1;
                          IF v_deb_nr=Debitor."No." THEN BEGIN
                            IF v_zollposnr=v_zollpos."No." THEN BEGIN
                            END ELSE BEGIN
                              EnterCell(RowNo,9,FORMAT(v_sum_wert),TRUE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                              EnterCell(RowNo,5,FORMAT(v_sum_menge),TRUE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
                              v_sum_wert:=0;
                              v_sum_gewicht:=0;
                              v_sum_menge:=0;
                              RowNo := RowNo + 1;
                            END;
                          END ELSE BEGIN
                            EnterCell(RowNo,9,FORMAT(v_sum_wert),TRUE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                            EnterCell(RowNo,5,FORMAT(v_sum_menge),TRUE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
                            v_sum_wert:=0;
                            v_sum_gewicht:=0;
                            v_sum_menge:=0;
                            RowNo := RowNo + 2;
                          END;
                          EnterCell(RowNo,1,vkgk."Bill-to Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                          EnterCell(RowNo,2,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                          EnterCell(RowNo,3,vkgk."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                          EnterCell(RowNo,4,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                          EnterCell(RowNo,5,FORMAT((vkgz.Quantity)*(-1)),FALSE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
                          v_sum_menge:=v_sum_menge+((vkgz.Quantity)*(-1));
                          EnterCell(RowNo,6,Artikel."Tariff No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                          EnterCell(RowNo,7,vkgk."Customer Posting Group",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                          EnterCell(RowNo,8,FORMAT(vkgk."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                          IF vkgk."Currency Factor"<>0 THEN BEGIN
                            EnterCell(RowNo,9,FORMAT((vkgz.Amount/vkgk."Currency Factor")*(-1)),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                            v_sum_wert:=v_sum_wert+((vkgz.Amount/vkrk."Currency Factor")*(-1));
                          END ELSE BEGIN
                            EnterCell(RowNo,9,FORMAT((vkgz.Amount)*(-1)),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                            v_sum_wert:=v_sum_wert+((vkgz.Amount)*(-1));
                          END;
                          EnterCell(RowNo,10,FORMAT(Artikel."Net Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                          EnterCell(RowNo,11,FORMAT(Artikel."Gross Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                          // EnterCell(RowNo,12,FORMAT(Artikel."Net Weight"*vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                          IF Artikel."Net Weight"=0 THEN BEGIN
                          END ELSE BEGIN
                            v_sum_gewicht:=v_sum_gewicht+(Artikel."Net Weight"*vkrz.Quantity);
                          END;
                            IF v_zollpos."No."='8473 3020' THEN EnterCell(RowNo,13,'8 Kanal Einsteckkarten',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8473 3080' THEN EnterCell(RowNo,13,'šbertragungs- und Filtermodule',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8504 9091' THEN EnterCell(RowNo,13,'Power over Ethernet Module',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8517 1800' THEN EnterCell(RowNo,13,'IP Telefone',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8517 6200' THEN EnterCell(RowNo,13,'Ger„te zum telefonieren ber das Internet mit Vermittlungsfunktion',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8529 9020' THEN EnterCell(RowNo,13,'Camera Ship Sensoren',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8541 4090' THEN EnterCell(RowNo,13,'lichtempfindliche Halbleiter',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8542 3190 000' THEN EnterCell(RowNo,13,'Steuer- und Kontrollbausteine',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF ((v_zollpos."No."='8542 3990') AND (Artikel."Manufacturer Code"='40')) THEN EnterCell(RowNo,13,'Leistungs- und Spannungsregler',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF ((v_zollpos."No."='8542 3990') AND (Artikel."Manufacturer Code"<>'40')) THEN EnterCell(RowNo,13,'elektronisch integrierte Schaltungen, andere, andere',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8543 9000' THEN EnterCell(RowNo,13,'Entwicklungsboard',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8544 4290' THEN EnterCell(RowNo,13,'Kabel mit Anschluá',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            v_zollposnr:=v_zollpos."No.";
                            v_deb_nr:=Debitor."No.";
                          END;
                        UNTIL vkgz.NEXT=0;
                      END;
                    UNTIL sachpo.NEXT=0
                  END;
                UNTIL vkgk.NEXT=0;
              END;
            UNTIL Debitor.NEXT=0;
          END;
        UNTIL v_zollpos.NEXT=0;
      END;
      //}
      {
      RowNo := 1;
      EnterCell(RowNo,1,'Kunden-Nr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Firma',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Belegnr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'USt.-ID',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Artikel',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Menge',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,'Wert',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'W„hrung',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Kurs',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Warentarifnummer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'W„',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Deb.Buch-Gruppe',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Belegdatum',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Pos.Wert Euro',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Nettogewicht',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Bruttogewicht',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2','ZENT','KONSI');
          vkrz.SETFILTER(vkrz.Type,'%1',vkrz.Type::Item);
          vkrz.SETFILTER(vkrz.Quantity,'>%1',0);
          IF vkrz.FIND('-') THEN BEGIN
           REPEAT
             Artikel.RESET;
             Artikel.SETFILTER(Artikel."No.",'%1',vkrz."No.");
             IF Artikel.FINDFIRST() THEN BEGIN
               RowNo := RowNo + 1;
               EnterCell(RowNo,1,vkrk."Bill-to Customer No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,2,vkrk."Bill-to Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,3,vkrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,4,vkrk."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,5,vkrz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,6,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,7,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,8,vkrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               var_kurs:=vkrk."Currency Factor";
               EnterCell(RowNo,9,FORMAT(var_kurs),FALSE,FALSE,FALSE,'#,###.#####',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,10,Artikel."Tariff No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,11,vkrk."Bill-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,12,vkrk."Customer Posting Group",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,13,FORMAT(vkrk."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
               IF vkrk."Currency Factor"<>0 THEN BEGIN
                 EnterCell(RowNo,14,FORMAT(vkrz.Amount/vkrk."Currency Factor"),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
               END ELSE BEGIN
                 EnterCell(RowNo,14,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
               END;
               EnterCell(RowNo,15,FORMAT(Artikel."Net Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,16,FORMAT(Artikel."Gross Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
             END;
           UNTIL vkrz.NEXT=0;
         END;
        UNTIL vkrk.NEXT=0;
      END;

      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2','ZENT','KONSI');
          vkgz.SETFILTER(vkgz.Type,'%1',vkgz.Type::Item);
          vkgz.SETFILTER(vkgz.Quantity,'>%1',0);
          IF vkgz.FINDFIRST() THEN BEGIN
           REPEAT
             Artikel.RESET;
             Artikel.SETFILTER(Artikel."No.",'%1',ekgz."No.");
             IF Artikel.FINDFIRST() THEN BEGIN
               RowNo := RowNo + 1;
               EnterCell(RowNo,1,vkgk."Bill-to Customer No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,2,vkgk."Bill-to Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,3,vkgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,4,vkgk."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,5,vkgz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,6,FORMAT(vkgz.Quantity),FALSE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,7,FORMAT(vkgz.Amount),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,8,vkgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               var_kurs:=vkgk."Currency Factor";
               EnterCell(RowNo,9,FORMAT(var_kurs),FALSE,FALSE,FALSE,'#,###.#####',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,10,Artikel."Tariff No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,11,vkgk."Bill-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,12,vkgk."Customer Posting Group",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,13,FORMAT(vkgk."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
               IF vkgk."Currency Factor"<>0 THEN BEGIN
                 EnterCell(RowNo,14,FORMAT(vkgz.Amount/vkgk."Currency Factor"),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
               END ELSE BEGIN
                 EnterCell(RowNo,14,FORMAT(vkgz.Amount),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
               END;
               EnterCell(RowNo,15,FORMAT(Artikel."Net Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,16,FORMAT(Artikel."Gross Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
             END;
           UNTIL vkgz.NEXT=0;
         END;
        UNTIL vkgk.NEXT=0;
      END;
      }
      CloseExcel('Meldung Stat.Bundesamt','Meldung Stat.Bundesamt','F:\Daten Neu\User\Joachim\Meldung_Intrastat\Meldung Stat.Bundesamt lfd Monat');
      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE Prf_Meld_Kre_Stat_Bundesamt@1000000025();
    BEGIN
      v_message1:=FALSE;

      ekrk.RESET;
      ekrk.SETFILTER(ekrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF ekrk.FIND('-') THEN BEGIN
        REPEAT
          sachpo.RESET;
          sachpo.SETFILTER(sachpo."Document No.",'%1',ekrk."No.");
          sachpo.SETFILTER(sachpo."G/L Account No.",'%1|%2','5422','5432');
          IF sachpo.FIND('-') THEN BEGIN
            REPEAT
              ekrz.RESET;
              ekrz.SETFILTER(ekrz."Document No.",'%1',ekrk."No.");
              ekrz.SETFILTER(ekrz."Location Code",'%1|%2','ZENT','KONSI');
              ekrz.SETFILTER(ekrz.Type,'%1',ekrz.Type::Item);
              ekrz.SETFILTER(ekrz.Quantity,'>%1',0);
              ekrz.SETFILTER(ekrz."Gen. Bus. Posting Group",'%1','EU');
              ekrz.SETFILTER(ekrz."Gen. Prod. Posting Group",'%1|%2|%3|%4','SYSTEM','HANDEL','16_SYSTEM','16_HANDEL');
              IF ekrz.FIND('-') THEN BEGIN
                REPEAT
                  Artikel.RESET;
                  Artikel.SETFILTER(Artikel."No.",'%1',ekrz."No.");
                  Artikel.SETFILTER(Artikel."Tariff No.",'<>%1','');
                  IF Artikel.FINDFIRST() THEN BEGIN
                    v_message:=TRUE;
                  END ELSE BEGIN
                    CreateExcel;
                    RowNo := 1;
                    EnterCell(RowNo,1,'Artikel ohne Warentarif-Nummer. Bitte einpflegen, ansonsten l„uft das Programm nicht weiter!',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    RowNo := RowNo + 2;
                    EnterCell(RowNo,1,ekrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,2,ekrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,3,FORMAT(ekrk."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                    CloseExcel('Artikel ohne ZolltarifNr','Artikel ohne ZolltarifNr','');
                    v_message1:=TRUE;
                  END;
                UNTIL ekrz.NEXT=0;
              END;
            UNTIL sachpo.NEXT=0;
          END;
        UNTIL ekrk.NEXT=0;
      END;

      ekgk.RESET;
      ekgk.SETFILTER(ekgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF ekgk.FIND('-') THEN BEGIN
        REPEAT
          sachpo.RESET;
          sachpo.SETFILTER(sachpo."Document No.",'%1',ekgk."No.");
          sachpo.SETFILTER(sachpo."G/L Account No.",'%1|%2','5422','5432');
          IF sachpo.FIND('-') THEN BEGIN
            REPEAT
              ekgz.RESET;
              ekgz.SETFILTER(ekgz."Document No.",'%1',ekgk."No.");
              ekgz.SETFILTER(ekgz."Location Code",'%1|%2','ZENT','KONSI');
              ekgz.SETFILTER(ekgz.Type,'%1',ekgz.Type::Item);
              ekgz.SETFILTER(ekgz.Quantity,'>%1',0);
              ekgz.SETFILTER(ekgz."Gen. Bus. Posting Group",'%1','EU');
              ekgz.SETFILTER(ekgz."Gen. Prod. Posting Group",'%1|%2|%3|%4','SYSTEM','HANDEL','16_SYSTEM','16_HANDEL');
              IF ekgz.FIND('-') THEN BEGIN
                REPEAT
                  Artikel.RESET;
                  Artikel.SETFILTER(Artikel."No.",'%1',ekgz."No.");
                  Artikel.SETFILTER(Artikel."Tariff No.",'<>%1','');
                  IF Artikel.FINDFIRST() THEN BEGIN
                    v_message:=TRUE;
                  END ELSE BEGIN
                    CreateExcel;
                    RowNo := 1;
                    EnterCell(RowNo,1,'Artikel ohne Warentarif-Nummer. Bitte einpflegen, ansonsten l„uft das Programm nicht weiter!',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    RowNo := RowNo + 2;
                    EnterCell(RowNo,1,ekgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,2,ekgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,3,FORMAT(ekgk."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                    CloseExcel('Artikel ohne ZolltarifNr','Artikel ohne ZolltarifNr','');
                    // v_message:=TRUE;
                  v_message1:=TRUE;
                  END;
                UNTIL ekgz.NEXT=0;
              END;
            UNTIL sachpo.NEXT=0;
          END;
        UNTIL ekgk.NEXT=0;
      END;

      IF v_message1=TRUE THEN BEGIN
      END ELSE BEGIN
        IF v_message=TRUE THEN BEGIN
          MESSAGE(Mess01);
          Meld_Kre_Stat_Bundesamt;
        END;
      END;

      v_message:=FALSE;
      v_message1:=FALSE;
    END;

    LOCAL PROCEDURE Meld_Kre_Stat_Bundesamt@1000000021();
    BEGIN
      v_sum_wert:=0;
      v_sum_gewicht:=0;
      v_sum_menge:=0;

      CreateExcel;
      RecNo := 0;
      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'Firma',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Belegnr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'USt.-ID',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Artikel',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Menge',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,6,'Warentarifnummer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Kred.Buch-Gruppe',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Belegdatum',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Pos.Wert Euro',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Nettogewicht',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Bruttogewicht',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      v_zollpos.RESET;
      v_zollpos.SETFILTER(v_zollpos."No.",'<>%1','1');
      IF v_zollpos.FIND('-') THEN BEGIN
        REPEAT
          Kreditor.RESET;
          Kreditor.SETFILTER(Kreditor."No.",'>%1','1');
          IF Kreditor.FIND('-') THEN BEGIN
            REPEAT
              ekrk.RESET;
              ekrk.SETFILTER(ekrk."Pay-to Vendor No.",'%1',Kreditor."No.");
              ekrk.SETFILTER(ekrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
              IF ekrk.FIND('-') THEN BEGIN
                REPEAT
                  sachpo.RESET;
                  sachpo.SETFILTER(sachpo."Document No.",'%1',ekrk."No.");
                  sachpo.SETFILTER(sachpo."G/L Account No.",'%1|%2','5422','5432');
                  IF sachpo.FIND('-') THEN BEGIN
                    REPEAT
                      ekrz.RESET;
                      ekrz.SETFILTER(ekrz."Document No.",'%1',ekrk."No.");
                      ekrz.SETFILTER(ekrz."Location Code",'%1|%2','ZENT','KONSI');
                      ekrz.SETFILTER(ekrz.Type,'%1',ekrz.Type::Item);
                      ekrz.SETFILTER(ekrz.Quantity,'>%1',0);
                      IF ekrz.FIND('-') THEN BEGIN
                        REPEAT
                          Artikel.RESET;
                          Artikel.SETFILTER(Artikel."No.",'%1',ekrz."No.");
                          Artikel.SETFILTER(Artikel."Tariff No.",'%1',v_zollpos."No.");
                          IF Artikel.FINDFIRST() THEN BEGIN
                            RowNo := RowNo + 1;
                            IF v_deb_nr=Kreditor."No." THEN BEGIN
                              IF v_zollposnr=v_zollpos."No." THEN BEGIN
                              END ELSE BEGIN
                                EnterCell(RowNo,5,FORMAT(v_sum_menge),TRUE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
                                EnterCell(RowNo,9,FORMAT(v_sum_wert),TRUE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                                v_sum_wert:=0;
                                v_sum_wert:=0;
                                v_sum_menge:=0;
                                RowNo := RowNo + 1;
                              END;
                            END ELSE BEGIN
                              EnterCell(RowNo,5,FORMAT(v_sum_menge),TRUE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
                              EnterCell(RowNo,9,FORMAT(v_sum_wert),TRUE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                              v_sum_wert:=0;
                              v_sum_gewicht:=0;
                              v_sum_menge:=0;
                              RowNo := RowNo + 2;
                            END;
                            EnterCell(RowNo,1,ekrk."Pay-to Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,2,ekrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,3,ekrk."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,4,ekrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,5,FORMAT(ekrz.Quantity),FALSE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
                            v_sum_menge:=v_sum_menge+(ekrz.Quantity);
                            EnterCell(RowNo,6,Artikel."Tariff No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,7,ekrk."Vendor Posting Group",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,8,FORMAT(ekrk."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                            IF ekrk."Currency Factor"<>0 THEN BEGIN
                              EnterCell(RowNo,9,FORMAT(ekrz.Amount/ekrk."Currency Factor"),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                              v_sum_wert:=v_sum_wert+(ekrz.Amount/ekrk."Currency Factor");
                            END ELSE BEGIN
                              EnterCell(RowNo,9,FORMAT(ekrz.Amount),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                              v_sum_wert:=v_sum_wert+(ekrz.Amount);
                            END;
                            EnterCell(RowNo,10,FORMAT(Artikel."Net Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                            EnterCell(RowNo,11,FORMAT(Artikel."Gross Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                            IF Artikel."Net Weight"=0 THEN BEGIN
                            END ELSE BEGIN
                               v_sum_gewicht:=v_sum_gewicht+(Artikel."Net Weight"*vkrz.Quantity);
                            END;
                            EnterCell(RowNo,12,Artikel."Country/Region of Origin Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8473 3020' THEN EnterCell(RowNo,14,'8 Kanal Einsteckkarten',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8473 3080' THEN EnterCell(RowNo,14,'šbertragungs- und Filtermodule',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8504 9091' THEN EnterCell(RowNo,14,'Power over Ethernet Module',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8517 1800' THEN EnterCell(RowNo,14,'IP Telefone',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8517 6200' THEN EnterCell(RowNo,14,'Ger„te zum telefonieren ber das Internet mit Vermittlungsfunktion',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8529 9020' THEN EnterCell(RowNo,14,'Camera Ship Sensoren',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8541 4090' THEN EnterCell(RowNo,14,'lichtempfindliche Halbleiter',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8542 3190 000' THEN EnterCell(RowNo,14,'Steuer- und Kontrollbausteine',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF ((v_zollpos."No."='8542 3990') AND (Artikel."Manufacturer Code"='40')) THEN EnterCell(RowNo,14,'Leistungs- und Spannungsregler',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF ((v_zollpos."No."='8542 3990') AND (Artikel."Manufacturer Code"<>'40')) THEN EnterCell(RowNo,14,'elektronisch integrierte Schaltungen, andere, andere',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8543 9000' THEN EnterCell(RowNo,14,'Entwicklungsboard',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8544 4290' THEN EnterCell(RowNo,14,'Kabel mit Anschluá',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            v_zollposnr:=v_zollpos."No.";
                            v_deb_nr:=Kreditor."No.";
                          END;
                        UNTIL ekrz.NEXT=0;
                      END;
                    UNTIL sachpo.NEXT=0;
                  END;
                UNTIL ekrk.NEXT=0;
              END;
            UNTIL Kreditor.NEXT=0;
          END;
        UNTIL v_zollpos.NEXT=0;
      END;


      v_zollpos.RESET;
      v_zollpos.SETFILTER(v_zollpos."No.",'<>%1','1');
      IF v_zollpos.FIND('-') THEN BEGIN
        REPEAT
          Kreditor.RESET;
          Kreditor.SETFILTER(Kreditor."No.",'>%1','1');
          IF Kreditor.FIND('-') THEN BEGIN
            REPEAT
              ekgk.RESET;
              ekgk.SETFILTER(ekgk."Pay-to Vendor No.",'%1',Kreditor."No.");
              ekgk.SETFILTER(ekgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
              IF ekgk.FIND('-') THEN BEGIN
                REPEAT
                  sachpo.RESET;
                  sachpo.SETFILTER(sachpo."Document No.",'%1',ekgk."No.");
                  sachpo.SETFILTER(sachpo."G/L Account No.",'%1|%2','5422','5432');
                  IF sachpo.FIND('-') THEN BEGIN
                    REPEAT
                      ekgz.RESET;
                      ekgz.SETFILTER(ekgz."Document No.",'%1',ekgk."No.");
                      ekgz.SETFILTER(ekgz."Location Code",'%1|%2','ZENT','KONSI');
                      ekgz.SETFILTER(ekgz.Type,'%1',ekgz.Type::Item);
                      ekgz.SETFILTER(ekgz.Quantity,'>%1',0);
                      IF ekgz.FIND('-') THEN BEGIN
                        REPEAT
                          Artikel.RESET;
                          Artikel.SETFILTER(Artikel."No.",'%1',ekgz."No.");
                          Artikel.SETFILTER(Artikel."Tariff No.",'%1',v_zollpos."No.");
                          IF Artikel.FINDFIRST() THEN BEGIN
                            RowNo := RowNo + 1;
                            IF v_deb_nr=Kreditor."No." THEN BEGIN
                              IF v_zollposnr=v_zollpos."No." THEN BEGIN
                              END ELSE BEGIN
                                EnterCell(RowNo,5,FORMAT(v_sum_menge),TRUE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
                                EnterCell(RowNo,9,FORMAT(v_sum_wert),TRUE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                                v_sum_wert:=0;
                                v_sum_gewicht:=0;
                                v_sum_menge:=0;
                                RowNo := RowNo + 1;
                              END;
                            END ELSE BEGIN
                              EnterCell(RowNo,5,FORMAT(v_sum_menge),TRUE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
                              EnterCell(RowNo,9,FORMAT(v_sum_wert),TRUE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                              v_sum_wert:=0;
                              v_sum_gewicht:=0;
                              v_sum_menge:=0;
                              RowNo := RowNo + 2;
                            END;
                            EnterCell(RowNo,1,ekgk."Pay-to Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,2,ekgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,3,ekgk."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,4,ekgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,5,FORMAT((ekgz.Quantity)*(-1)),FALSE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
                            v_sum_menge:=v_sum_menge+((ekgz.Quantity)*(-1));
                            EnterCell(RowNo,6,Artikel."Tariff No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,7,ekgk."Vendor Posting Group",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,8,FORMAT(ekgk."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                            IF ekgk."Currency Factor"<>0 THEN BEGIN
                              EnterCell(RowNo,9,FORMAT((ekgz.Amount/ekgk."Currency Factor")*(-1)),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                              v_sum_wert:=v_sum_wert+((ekgz.Amount/ekrk."Currency Factor")*(-1));
                            END ELSE BEGIN
                              EnterCell(RowNo,9,FORMAT(ekgz.Amount),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                              v_sum_wert:=v_sum_wert+(ekgz.Amount);
                            END;
                            EnterCell(RowNo,10,FORMAT(Artikel."Net Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                            EnterCell(RowNo,11,FORMAT(Artikel."Gross Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                            IF Artikel."Net Weight"=0 THEN BEGIN
                            END ELSE BEGIN
                              v_sum_gewicht:=v_sum_gewicht+(Artikel."Net Weight"*vkrz.Quantity);
                            END;
                            EnterCell(RowNo,12,ekrk."Buy-from Post Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,13,Artikel."Country/Region Purchased Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8473 3020' THEN EnterCell(RowNo,14,'8 Kanal Einsteckkarten',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8473 3080' THEN EnterCell(RowNo,14,'šbertragungs- und Filtermodule',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8504 9091' THEN EnterCell(RowNo,14,'Power over Ethernet Module',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8517 1800' THEN EnterCell(RowNo,14,'IP Telefone',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8517 6200' THEN EnterCell(RowNo,14,'Ger„te zum telefonieren ber das Internet mit Vermittlungsfunktion',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8529 9020' THEN EnterCell(RowNo,14,'Camera Ship Sensoren',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8541 4090' THEN EnterCell(RowNo,14,'lichtempfindliche Halbleiter',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8542 3190 000' THEN EnterCell(RowNo,14,'Steuer- und Kontrollbausteine',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF ((v_zollpos."No."='8542 3990') AND (Artikel."Manufacturer Code"='40')) THEN EnterCell(RowNo,14,'Leistungs- und Spannungsregler',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF ((v_zollpos."No."='8542 3990') AND (Artikel."Manufacturer Code"<>'40')) THEN EnterCell(RowNo,14,'elektronisch integrierte Schaltungen, andere, andere',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8543 9000' THEN EnterCell(RowNo,14,'Entwicklungsboard',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            IF v_zollpos."No."='8544 4290' THEN EnterCell(RowNo,14,'Kabel mit Anschluá',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            v_zollposnr:=v_zollpos."No.";
                            v_deb_nr:=Kreditor."No.";
                          END;
                        UNTIL ekgz.NEXT=0;
                      END;
                    UNTIL sachpo.NEXT=0
                  END;
                UNTIL ekgk.NEXT=0;
              END;
            UNTIL Kreditor.NEXT=0;
          END;
        UNTIL v_zollpos.NEXT=0;
      END;

      {
      EnterCell(RowNo,1,'Kunden-Nr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Firma',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Belegnr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'USt.-ID',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Artikel',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Menge',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,'Wert',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'W„hrung',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Kurs',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Warentarifnummer',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'W„',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Kred.Buch-Gruppe',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Belegdatum',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Pos.Wert Euro',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Nettogewicht',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Bruttogewicht',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      ekrk.RESET;
      ekrk.SETFILTER(ekrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF ekrk.FIND('-') THEN BEGIN
        REPEAT
          ekrz.RESET;
          ekrz.SETFILTER(ekrz."Document No.",'%1',ekrk."No.");
          ekrz.SETFILTER(ekrz."Location Code",'%1|%2','ZENT','KONSI');
          ekrz.SETFILTER(ekrz.Type,'%1',ekrz.Type::Item);
          ekrz.SETFILTER(ekrz.Quantity,'>%1',0);
          IF ekrz.FIND('-') THEN BEGIN
           REPEAT
             Artikel.RESET;
             Artikel.SETFILTER(Artikel."No.",'%1',ekrz."No.");
             IF Artikel.FINDFIRST() THEN BEGIN
               RowNo := RowNo + 1;
               EnterCell(RowNo,1,ekrk."Pay-to Vendor No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,2,ekrk."Pay-to Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,3,ekrk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,4,ekrk."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,5,ekrz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,6,FORMAT(ekrz.Quantity),FALSE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,7,FORMAT(ekrz.Amount),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,8,ekrk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               var_kurs:=ekrk."Currency Factor";
               EnterCell(RowNo,9,FORMAT(var_kurs),FALSE,FALSE,FALSE,'#,###.#####',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,10,Artikel."Tariff No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,11,ekrk."Pay-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,12,ekrk."Vendor Posting Group",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,13,FORMAT(ekrk."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
               IF ekrk."Currency Factor"<>0 THEN BEGIN
                 EnterCell(RowNo,14,FORMAT(ekrz.Amount/ekrk."Currency Factor"),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
               END ELSE BEGIN
                 EnterCell(RowNo,14,FORMAT(ekrz.Amount),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
               END;
               EnterCell(RowNo,15,FORMAT(Artikel."Net Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,16,FORMAT(Artikel."Gross Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
             END;
           UNTIL ekrz.NEXT=0;
         END;
        UNTIL ekrk.NEXT=0;
      END;

      ekgk.RESET;
      ekgk.SETFILTER(ekgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF ekgk.FIND('-') THEN BEGIN
        REPEAT
          ekgz.RESET;
          ekgz.SETFILTER(ekgz."Document No.",'%1',ekgk."No.");
          ekgz.SETFILTER(ekgz."Location Code",'%1|%2','ZENT','KONSI');
          ekgz.SETFILTER(ekgz.Type,'%1',ekgz.Type::Item);
          ekgz.SETFILTER(ekgz.Quantity,'>%1',0);
          IF ekgz.FIND('-') THEN BEGIN
           REPEAT
             Artikel.RESET;
             Artikel.SETFILTER(Artikel."No.",'%1',ekgz."No.");
             IF Artikel.FIND('-') THEN BEGIN
               RowNo := RowNo + 1;
               EnterCell(RowNo,1,ekgk."Pay-to Vendor No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,2,ekgk."Pay-to Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,3,ekgk."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,4,ekgk."VAT Registration No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,5,ekgz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,6,FORMAT(ekgz.Quantity),FALSE,FALSE,FALSE,'#,###,##0',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,7,FORMAT(ekgz.Amount),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,8,ekgk."Currency Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               var_kurs:=ekgk."Currency Factor";
               EnterCell(RowNo,9,FORMAT(var_kurs),FALSE,FALSE,FALSE,'#,###.#####',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,10,Artikel."Tariff No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,11,ekgk."Pay-to Country/Region Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,12,ekgk."Vendor Posting Group",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
               EnterCell(RowNo,13,FORMAT(ekgk."Document Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
               IF ekgk."Currency Factor"<>0 THEN BEGIN
                 EnterCell(RowNo,14,FORMAT(ekgz.Amount/ekgk."Currency Factor"),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
               END ELSE BEGIN
                 EnterCell(RowNo,14,FORMAT(ekgz.Amount),FALSE,FALSE,FALSE,'#,###,##0.00',TempExcelBuffer."Cell Type"::Number);
               END;
               EnterCell(RowNo,15,FORMAT(Artikel."Net Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
               EnterCell(RowNo,16,FORMAT(Artikel."Gross Weight"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
             END;
           UNTIL ekgz.NEXT=0;
         END;
        UNTIL ekgk.NEXT=0;
      END;
      }
      CloseExcel('Meldung Kred Stat.Bundesamt','Meldung Kred Stat.Bundesamt','F:\Daten Neu\User\Joachim\Meldung_Intrastat\Meldung Stat.Bundesamt lfd Monat');
      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE OVT_Neu@1000000023();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      v_Total_sum1 := 0;
      v_day:=0;
      v_month:=0;
      v_year:=0;

      v_day:=DATE2DMY(WORKDATE,1);
      v_month:=DATE2DMY(WORKDATE,2)-1;
      v_year:=DATE2DMY(WORKDATE,3)-2000;

      IF v_month= 1 THEN v_month3:='JAN';
      IF v_month= 2 THEN v_month3:='FEB';
      IF v_month= 3 THEN v_month3:='MAE';
      IF v_month= 4 THEN v_month3:='APR';
      IF v_month= 5 THEN v_month3:='MAY';
      IF v_month= 6 THEN v_month3:='JUN';
      IF v_month= 7 THEN v_month3:='JUL';
      IF v_month= 8 THEN v_month3:='AUG';
      IF v_month= 9 THEN v_month3:='SEP';
      IF v_month= 10 THEN v_month3:='OCT';
      IF v_month= 11 THEN v_month3:='NOV';
      IF v_month= 12 THEN v_month3:='DEC';

      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,5,'OmniVision(SG) Salesout & Credit Report',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Distributor:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'TOPAS electronic AG',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Report Month:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT(v_month3+' '+FORMAT(v_year)),TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Report Date:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT(WORKDATE),TRUE,FALSE,FALSE,'yyyy.mm.dd',TempExcelBuffer."Cell Type"::Date);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Currency:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'USD',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Diese Spalten sind zu l”schen',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      RowNo := RowNo + 1;

      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'SALE PART ID',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'CUSTOMER (ENG)',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'CUSTOMER',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'END CUSTOMER (ENG)',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'APPLICATION',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'INVOICE DATE',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'INVOICE NO',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'QTY',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'SALES PRICE',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'RESALES AMOUNT',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'DISTI COST',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      //Ab hier NEU 1.4.2021
      EnterCell(RowNo,12,'DELTA',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'EXTEND DELTA',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'COMM %',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'EXTEND COMM',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'TOTAL CREDIT',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      // bis hier NEU

      EnterCell(RowNo,17,'TOTAL DISTI COST',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'SHIPPING TERM',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'END PRICE',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(RowNo,21,'Liefnr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'Liefzeilennr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'AU-Nr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'Artpo Abgang',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,25,'Artpo Zugang',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,26,'Datum Zugang',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,27,'Externe Nr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,28,'Serien Nr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,29,'DateCode',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      {
      //Alte Variante vor 1.4.2021
      EnterCell(RowNo,12,'TOTAL DISTI COST',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'SHIPPING TERM',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'END PRICE',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(RowNo,16,'Liefnr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'Liefzeilennr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'AU-Nr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'Artpo Abgang',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'Artpo Zugang',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'Datum Zugang',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'Externe Nr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'Serien Nr',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'DateCode',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      }

      // Anfang Ums„tze
      vkrk.RESET;
      vkrk.SETFILTER(vkrk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkrk.FIND('-') THEN BEGIN
        REPEAT
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Document No.",'%1',vkrk."No.");
          vkrz.SETFILTER(vkrz."Manufacturer Code",'%1|%2','43','44');
          vkrz.SETFILTER(vkrz.Quantity,'<>%1',0);
          vkrz.SETFILTER(vkrz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkrz.FIND('-') THEN BEGIN
            REPEAT
              ////      vklk.RESET;
              ////      vklk.SETFILTER(vklk."Order No.",'%1',vkrz."Order No.");
              ////      IF vklk.FINDFIRST() THEN BEGIN
              vklz.RESET;
              //         vklz.SETFILTER(vklz."Document No.",'%1',vkrz."Shipment No.");
              ////        vklz.SETFILTER(vklz."Document No.",'%1',vklk."No.");
              ////        vklz.SETFILTER(vklz.Type,'%1',vklz.Type::Item);
              vklz.SETFILTER(vklz.Quantity,'<>%1',0);
              vklz.SETFILTER(vklz."Order No.",'%1',vkrz."Order No.");
              vklz.SETFILTER(vklz."Order Line No.",'%1',vkrz."Order Line No.");
              IF vklz.FIND('-') THEN BEGIN
                REPEAT
                  RowNo := RowNo + 1;
                  EnterCell(RowNo,1,vkrz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,2,vkrk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,3,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,4,vkrz.Endkunde,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,5,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,6,FORMAT(vkrk."Posting Date"),FALSE,FALSE,FALSE,'yyyy.mm.dd',TempExcelBuffer."Cell Type"::Date);
                  EnterCell(RowNo,7,FORMAT(vkrz."Document No."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,8,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,9,FORMAT(vkrz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,10,FORMAT((vkrz."DC-Preis (EKW)")*vkrz.Quantity),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_Total_Sum := v_Total_Sum + ((vkrz."DC-Preis (EKW)")*vkrz.Quantity);
                  EnterCell(RowNo,11,FORMAT(vkrz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

      // Neu ab 1.4.2021
      //            EnterCell(RowNo,12,FORMAT(vkrz."DC-Preis (EKW)"-vkrz."DC-Preis (EKW)"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
      //            EnterCell(RowNo,13,FORMAT(vkrz.Quantity*(vkrz."DC-Preis (EKW)"-vkrz."DC-Preis (EKW)")),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
      //            EnterCell(RowNo,14,'',FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
      //            EnterCell(RowNo,15,'',FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
      //            EnterCell(RowNo,16,'',FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
      // bis hier NEU




                  EnterCell(RowNo,17,FORMAT((vkrz."DC-Preis (EKW)")*vkrz.Quantity),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_Total_sum1 := v_Total_sum1 + ((vkrz."DC-Preis (EKW)")*vkrz.Quantity);
                  EnterCell(RowNo,18,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,19,FORMAT(vkrz."VK-Preis (EKW)"),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,21,FORMAT(vklz."Document No."),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(vklz."Line No."),FALSE,FALSE,FALSE,'########',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(vklz."Order No."),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);

                  Artikelposten.RESET;
                  Artikelposten.SETFILTER(Artikelposten."Document No.",'%1',vklz."Document No.");
                  Artikelposten.SETFILTER(Artikelposten."Document Line No.",'%1',vklz."Line No.");
                  IF Artikelposten.FINDFIRST() THEN BEGIN
                    EnterCell(RowNo,24,FORMAT(Artikelposten."Entry No."),FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
                    EnterCell(RowNo,27,FORMAT(Artikelposten."External Document No."),FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
                    EnterCell(RowNo,28,FORMAT(Artikelposten."Serial No."),FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
                    EnterCell(RowNo,29,FORMAT(Artikelposten."Lot No."),FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
                  END;

                  tab_ausgl_posten.RESET;
                  tab_ausgl_posten.SETFILTER(tab_ausgl_posten."Item Ledger Entry No.",'%1',Artikelposten."Entry No.");
                  IF tab_ausgl_posten.FINDFIRST() THEN BEGIN
                    EnterCell(RowNo,25,FORMAT(tab_ausgl_posten."Inbound Item Entry No."),FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
                  END;
                  Artpost.RESET;
                  Artpost.SETFILTER(Artpost."Entry No.",'%1',tab_ausgl_posten."Inbound Item Entry No.");
                  IF Artpost.FINDFIRST() THEN BEGIN
                    EnterCell(RowNo,26,FORMAT(Artpost."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                  END;
                    // RowNo := RowNo + 1;
                UNTIL vklz.NEXT=0;
              END;
              ////     END;
            UNTIL vkrz.NEXT=0;
          END;
        UNTIL vkrk.NEXT = 0;
      END;
      //  Ende Ums„tze

      // Anfang Gutschriften
      vkgk.RESET;
      vkgk.SETFILTER(vkgk."Posting Date",'%1..%2',v_datum_von,v_datum_bis);
      IF vkgk.FIND('-') THEN BEGIN
        REPEAT
          vkgz.RESET;
          vkgz.SETFILTER(vkgz."Document No.",'%1',vkgk."No.");
          vkgz.SETFILTER(vkgz."Manufacturer Code",'%1|%2','43','44');
          vkgz.SETFILTER(vkgz.Quantity,'<>%1',0);
          vkgz.SETFILTER(vkgz."Location Code",'%1|%2|%3','ZENT','KONSI','ERSATZ');
          IF vkgz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,vkgz."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,vkgk."Sell-to Customer Name",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,vkgz.Endkunde,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(vkgk."Posting Date"),FALSE,FALSE,FALSE,'yyyy.mm.dd',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,7,FORMAT(vkgz."Document No."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(vkgz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT((vkgz."DC-Preis (EKW)")*(-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,10,FORMAT((vkgz."DC-Preis (EKW)")*vkgz.Quantity*(-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_Sum := v_Total_Sum + ((vkgz."DC-Preis (EKW)")*vkgz.Quantity*(-1));
              EnterCell(RowNo,11,FORMAT((vkgz."DC-Preis (EKW)")*(-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT((vkgz."DC-Preis (EKW)")*vkgz.Quantity*(-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
                v_Total_sum1 := v_Total_sum1 + ((vkgz."DC-Preis (EKW)")*vkgz.Quantity*(-1));
              EnterCell(RowNo,13,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,FORMAT((vkgz."VK-Preis (EKW)")*(-1)),FALSE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
            UNTIL vkgz.NEXT = 0;
          END;
        UNTIL vkgk.NEXT = 0;
      END;
      // Ende Gutschriften
      RowNo := RowNo + 1;
      EnterCell(RowNo,7,'Total USD:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,12,FORMAT(v_Total_sum1),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
      CloseExcel('OVT_TOPAS_POS_lfd_Saleout_DE','OVT_TOPAS_POS_lfd_Saleout_DE','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      OVT_Neu1;
    END;

    LOCAL PROCEDURE OVT_Neu1@1000000038();
    BEGIN
      CreateExcel;
      RecNo := 0;
      v_Total_Sum := 0;
      v_Total_sum1 := 0;

      v_day:=0;
      v_month:=0;
      v_year:=0;

      v_day:=DATE2DMY(WORKDATE,1);
      v_month:=DATE2DMY(WORKDATE,2)-1;
      v_year:=DATE2DMY(WORKDATE,3)-2000;

      IF v_month= 1 THEN v_month3:='JAN';
      IF v_month= 2 THEN v_month3:='FEB';
      IF v_month= 3 THEN v_month3:='MAE';
      IF v_month= 4 THEN v_month3:='APR';
      IF v_month= 5 THEN v_month3:='MAY';
      IF v_month= 6 THEN v_month3:='JUN';
      IF v_month= 7 THEN v_month3:='JUL';
      IF v_month= 8 THEN v_month3:='AUG';
      IF v_month= 9 THEN v_month3:='SEP';
      IF v_month= 10 THEN v_month3:='OCT';
      IF v_month= 11 THEN v_month3:='NOV';
      IF v_month= 12 THEN v_month3:='DEC';

      //šberschriften
      RowNo := 1;
      EnterCell(RowNo,1,'OmniVision(SG) Inventory Report (In Stock / On Hand)',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Distributor:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'TOPAS electronic AG',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Report Month:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT(v_month3),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Report Date:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT(WORKDATE),FALSE,FALSE,FALSE,'yyyy.mm.dd',TempExcelBuffer."Cell Type"::Date);
      RowNo := RowNo + 2;

      //  Suchen aller Artikel mit Lagerbestand ungleich Null nur fr OVT
      //  ******************************************************************************

      EnterCell(RowNo,1,'SALE PART ID',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'DE QTY',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'DISTI COST USD',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'TOTAL COST USD',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      Artikel.RESET;
      Artikel.SETFILTER(Artikel."Manufacturer Code",'%1|%2','43','44');
      IF Artikel.FIND('-') THEN BEGIN
        v_lagerbestand := 0;
        v_Total_Sum:=0;
        RowNo := RowNo + 1;
        REPEAT
          Artikelposten.RESET;
          Artikelposten.SETFILTER(Artikelposten."Item No.",'%1',Artikel."No.");
          Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
          Artikelposten.SETFILTER(Artikelposten."Location Code",'%1|%2','ZENT','KONSI');
          IF Artikelposten.FIND('-') THEN BEGIN
            v_lagerbestand := 0;
            v_Total_Sum:=0;
            REPEAT
              v_Total_Sum:=0;
              v_lagerbestand := v_lagerbestand + Artikelposten."Remaining Quantity";
              EnterCell(RowNo,1,Artikel."No. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(Artikelposten."Remaining Quantity"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,Artikelposten."Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(Artikelposten."Posting Date"),FALSE,FALSE,FALSE,'yyyy.mm.dd',TempExcelBuffer."Cell Type"::Date);
              EK_Lief.RESET;
              EK_Lief.SETFILTER(EK_Lief."Document No.",'%1',Artikelposten."Document No.");
              EK_Lief.SETFILTER(EK_Lief."Line No.",'%1',Artikelposten."Document Line No.");
              IF EK_Lief.FINDFIRST THEN BEGIN
                EnterCell(RowNo,3,FORMAT(EK_Lief."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                IF EK_Lief."Direct Unit Cost"=9999 THEN BEGIN
                END ELSE BEGIN
                  v_Total_sum1:=v_Total_sum1+EK_Lief."Direct Unit Cost"*Artikelposten."Remaining Quantity";
                  v_Total_Sum:=EK_Lief."Direct Unit Cost"*Artikelposten."Remaining Quantity";
                  // EnterCell(RowNo,7,EK_Lief."Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END ELSE BEGIN
                EnterCell(RowNo,6,'Disti holen',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                "Ek-Preise".RESET;
                "Ek-Preise".SETFILTER("Ek-Preise"."Item No.",'%1',EK_Lief."No.");
                "Ek-Preise".SETFILTER("Ek-Preise"."Currency Code",'%1','USD');
                "Ek-Preise".SETFILTER("Ek-Preise"."Ending Date",'%1',0D);
                IF "Ek-Preise".FINDFIRST THEN BEGIN
                  EnterCell(RowNo,3,FORMAT("Ek-Preise"."Direct Unit Cost"),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  IF "Ek-Preise"."Direct Unit Cost"=9999 THEN BEGIN
                    // EnterCell(RowNo,7,EK_Lief."Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  END ELSE BEGIN
                    v_Total_Sum:="Ek-Preise"."Direct Unit Cost"*Artikelposten."Remaining Quantity";
                    v_Total_sum1:=v_Total_sum1+"Ek-Preise"."Direct Unit Cost"*Artikelposten."Remaining Quantity";
                    // EnterCell(RowNo,7,EK_Lief."Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  END;
                END;
              END;
              EnterCell(RowNo,4,FORMAT(v_Total_Sum),FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              v_Total_Sum:=0;
              RowNo := RowNo + 1;
            UNTIL Artikelposten.NEXT = 0;
          END;
          v_lagerbestand := 0;
          v_Total_Sum:=0;
          RecNo := RecNo + 1;
        UNTIL Artikel.NEXT = 0;
      END;

      EnterCell(RowNo,1,'Total USD:',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,2,FORMAT(v_Total_Sum),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,4,FORMAT(v_Total_sum1),TRUE,FALSE,FALSE,'#,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,7,'Summe Neu addieren',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      CloseExcel('OVT_TOPAS_INVENTORY_InStock','OVT_TOPAS_INVENTORY_InStock','F:\Daten Neu\User\Joachim\email_versand\POS Linien lfd\NAV2016');

      MESSAGE(Text003);
    END;

    LOCAL PROCEDURE MWSt_Umstell_auslauf_Service@1000000028();
    BEGIN
      {
      CreateExcel;
      RowNo := RowNo + 1;


      Debitor.RESET;
      Debitor.SETFILTER(Debitor."No.",'%1',v_deb_nr);
      IF Debitor.FINDFIRST THEN BEGIN

      {
        EnterCell(RowNo,1,'Lfd.Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,'Ablaufdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,3,'Art',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,4,'Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,5,'Zeilennr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,6,'Belegdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,7,'Artikelnr',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,8,'Seriennr',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,9,'Debitorennr',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,10,'Debitorname',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,11,'Serviceartikel',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,12,'Vertragsnr',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,13,'Menge',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,14,'Betrag',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,15,'Startdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,16,'Ablaufdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,17,'Rechnungsnr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,18,'Rechnungszeilennr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,19,'Betrag',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,20,'Menge',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,21,'Einzelpreis',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,22,'MW/ WŽ',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(RowNo,18,'LZ in Tagen',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(RowNo,19,'Abgr in Tagen',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(RowNo,20,'Abgr EK',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(RowNo,21,'Abgr VK',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(RowNo,22,'Vertragsnr2',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(RowNo,23,'BET-Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      //  EnterCell(RowNo,24,'ACO-Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo + 2;

        Service.RESET;
        Service.SETFILTER(Service."Debitornr.",'%1',Debitor."No.");
        Service.SETFILTER(Service.Art,'%1',Service.Art::Service);
        Service.SETFILTER(Service."Ablaufdatum Serviceleistung",'%1..%2',v_datum_von1,v_datum_bis1);
        IF Service.FIND('-') THEN BEGIN
          REPEAT
            Artikel.RESET;
            Artikel.SETFILTER(Artikel."No.",'%1',Service."SUP Artikelnr.");
            Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
            IF Artikel.FINDFIRST THEN BEGIN
              LZ_rest := 0;
              vklz.RESET;
              vklz.SETFILTER(vklz."Document No.",'%1',Service."Nr.");
              vklz.SETFILTER(vklz."Line No.",'%1',Service."Belegzeilennr.");
              vklz.SETFILTER(vklz."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
              IF vklz.FINDFIRST THEN BEGIN
                EnterCell(RowNo,1,Service."Lfd. Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,2,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,3,FORMAT(Service.Art),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,4,Service."Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,5,FORMAT(Service."Belegzeilennr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,6,FORMAT(Service.Belegdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,7,Service."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,8,Service."Seriennr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,9,Service."Debitornr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,10,Service.Debitorname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,11,Artikel."No. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,12,Service."Hauptwartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                RowNo := RowNo + 1;
                IF (liefnr = vklz."Document No.") AND (liefzeilennr = vklz."Line No.") THEN BEGIN
                END ELSE BEGIN
                  EnterCell(RowNo,13,FORMAT(vklz.Quantity),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,14,FORMAT(vklz."Unit Price"),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,15,FORMAT(Service.Lizenzdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                  EnterCell(RowNo,16,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                  sum_vk := (sum_vk + (ROUND(vklz."VK-Preis (MW)" * vklz.Quantity)));
                  liefnr := vklz."Document No.";
                  liefzeilennr := vklz."Line No.";
                  vkrz.RESET;
                  vkrz.SETFILTER(vkrz."Order No.",'%1',Service."Auftragsnr.");
                  vkrz.SETFILTER(vkrz."Order Line No.",'%1',Service."Auftragszeilennr.");
                  IF vkrz.FIND('-') THEN BEGIN
                    REPEAT
                      RowNo := RowNo + 1;
                      EnterCell(RowNo,17,FORMAT(vkrz."Document No."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,18,FORMAT(vkrz."Line No."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,19,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,20,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'### ###',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,21,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,22,FORMAT(vkrz."VK-Preis (MW)"),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                    UNTIL vkrz.NEXT=0;
                  END;
                END;
              END;
      //   Lieferscheine holen aus Beleghistorie
              beleghis.RESET;
              beleghis.SETFILTER("Belegnr.",'%1',Service."Nr.");
              beleghis.SETFILTER("Zeilennr.",'%1',Service."Belegzeilennr.");
              beleghis.SETFILTER(Herstellercode,'<>%1&<>%2&<>%3','5710','5720','5730');
              IF beleghis.FINDFIRST THEN BEGIN
                EnterCell(RowNo,1,Service."Lfd. Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,2,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,3,FORMAT(Service.Art),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,4,Service."Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,5,FORMAT(Service."Belegzeilennr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,6,FORMAT(Service.Belegdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,7,Service."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,8,Service."Seriennr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,9,Service."Debitornr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,10,Service.Debitorname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,11,Artikel."No. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,12,Service."Hauptwartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                IF (liefnr = beleghis."Belegnr.") AND (liefzeilennr = beleghis."Zeilennr.") THEN BEGIN
                END ELSE BEGIN
                  EnterCell(RowNo,13,FORMAT(beleghis.Menge),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,14,FORMAT(beleghis."VK-Preis"),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,15,FORMAT(Service.Lizenzdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                  EnterCell(RowNo,16,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                  sum_vk := (sum_vk + (ROUND(beleghis."VK-Preis" * beleghis.Menge)));
                  liefnr := beleghis."Belegnr.";
                  liefzeilennr := beleghis."Zeilennr.";
                  beleghis1.RESET;
                  beleghis1.SETFILTER(beleghis1."Auftragsnr.",'%1',Service."Auftragsnr.");
                  beleghis1.SETFILTER(beleghis1."Auftragszeilennr.",'%1',Service."Auftragszeilennr.");
                  IF vkrz.FIND('-') THEN BEGIN
                    REPEAT
                      RowNo := RowNo + 1;
                      EnterCell(RowNo,17,FORMAT(beleghis1."Belegnr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,18,FORMAT(beleghis1."Zeilennr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,19,FORMAT(beleghis1.Betrag),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,20,FORMAT(beleghis1.Menge),FALSE,FALSE,FALSE,'### ###',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,21,FORMAT(beleghis1."VK-Preis"),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,22,FORMAT(beleghis1."VK-W„hrung"),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                    UNTIL vkrz.NEXT=0;
                  END;
                END;
                RowNo := RowNo + 1;
              END;
        //  Ende Lieferscheine holen aus Beleghistorie
            END;
          UNTIL Service.NEXT = 0;
        END;
        RowNo := RowNo + 2;
        EnterCell(RowNo,14,'Gesamtbetrag',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,15,FORMAT(sum_vk),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      END;

      RowNo := RowNo + 5;
      }
      sum_vk_EUR :=0;
      sum_vk_USD :=0;
      sum_vk:=0;
      EnterCell(RowNo,1,'Debitor Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Debitor Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Rechnungsnummer',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Rechnungsdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Seviceleistung Start',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Serviceleistung Ende',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Betrag EUR',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Betrag USD',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;

      Service.RESET;
      Service.SETFILTER(Service."Debitornr.",'%1',Debitor."No.");
      Service.SETFILTER(Service.Art,'%1',Service.Art::Service);
      Service.SETFILTER(Service.Inaktiv,'%1',FALSE);
      //Service.SETFILTER(Service."Ablaufdatum Serviceleistung",'%1..%2',v_datum_von1,v_datum_bis1);
      Service.SETFILTER(Service."Ablaufdatum Serviceleistung",'%1..%2',01072020D,31122020D);
      IF Service.FIND('-') THEN BEGIN
        REPEAT
          Artikel.RESET;
          Artikel.SETFILTER(Artikel."No.",'%1',Service."SUP Artikelnr.");
          Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
          IF Artikel.FINDFIRST THEN BEGIN
            LZ_rest := 0;
            vklz.RESET;
            vklz.SETFILTER(vklz."Document No.",'%1',Service."Nr.");
            vklz.SETFILTER(vklz."Line No.",'%1',Service."Belegzeilennr.");
            vklz.SETFILTER(vklz."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
            IF vklz.FINDFIRST THEN BEGIN
              IF (liefnr = vklz."Document No.") AND (liefzeilennr = vklz."Line No.") THEN BEGIN

              END ELSE BEGIN
                liefnr := vklz."Document No.";
                liefzeilennr := vklz."Line No.";
                sum_vk := (sum_vk + (ROUND(vklz."VK-Preis (MW)" * vklz.Quantity)));
                vkrz.RESET;
                vkrz.SETFILTER(vkrz."Order No.",'%1',Service."Auftragsnr.");
                vkrz.SETFILTER(vkrz."Order Line No.",'%1',Service."Auftragszeilennr.");
                vkrz.SETFILTER(vkrz."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
                IF vkrz.FIND('-') THEN BEGIN
                  REPEAT
                    EnterCell(RowNo,1,Service."Debitornr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,2,Service.Debitorname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,3,FORMAT(vkrz."Document No."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                    EnterCell(RowNo,4,FORMAT(vkrz."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Number);
                    EnterCell(RowNo,5,FORMAT(Service.Lizenzdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                    EnterCell(RowNo,6,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

                    vkrk.RESET;
                    vkrk.SETFILTER(vkrk."No.",'%1',vkrz."Document No.");
                    IF vkrk.FINDFIRST THEN BEGIN
                      IF vkrk."Currency Code"='' THEN BEGIN
                        EnterCell(RowNo,7,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                        sum_vk_EUR := (sum_vk_EUR + (ROUND(vklz."VK-Preis (MW)" * vklz.Quantity)));
                      END ELSE BEGIN
                        IF vkrk."Currency Code"='USD' THEN BEGIN
                          sum_vk_USD := (sum_vk_USD + (ROUND(vkrz.Amount)));
                          EnterCell(RowNo,8,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,8,'Fehler, da unbekannte W„hrung',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                        END;
                      END;
                    END;
      //              RowNo := RowNo + 1;
                UNTIL vkrz.NEXT=0;
                END;
               RowNo := RowNo + 1;
              END;
              RowNo := RowNo + 1;
            END ELSE BEGIN
        RowNo := RowNo + 1;

      //EnterCell(RowNo,1,'TEST',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      // RowNo := RowNo + 1;
      {
      //   Lieferscheine holen aus Beleghistorie
              beleghis.RESET;
              beleghis.SETFILTER("Belegnr.",'%1',Service."Nr.");
              beleghis.SETFILTER("Zeilennr.",'%1',Service."Belegzeilennr.");
              beleghis.SETFILTER(Herstellercode,'<>%1&<>%2&<>%3','5710','5720','5730');
              IF beleghis.FINDFIRST THEN BEGIN
                RowNo := RowNo + 1;
                EnterCell(RowNo,1,Service."Lfd. Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,2,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,3,FORMAT(Service.Art),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,4,Service."Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,5,FORMAT(Service."Belegzeilennr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,6,FORMAT(Service.Belegdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,7,Service."Artikelnr. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,8,Service."Seriennr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,9,Service."Debitornr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,10,Service.Debitorname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,11,Artikel."No. 2",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,12,Service."Hauptwartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                IF (liefnr = beleghis."Belegnr.") AND (liefzeilennr = beleghis."Zeilennr.") THEN BEGIN
                END ELSE BEGIN
                  EnterCell(RowNo,13,FORMAT(beleghis.Menge),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,14,FORMAT(beleghis."VK-Preis"),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,15,FORMAT(Service.Lizenzdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                  EnterCell(RowNo,16,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                  sum_vk := (sum_vk + (ROUND(beleghis."VK-Preis" * beleghis.Menge)));
                  liefnr := beleghis."Belegnr.";
                  liefzeilennr := beleghis."Zeilennr.";
                  beleghis1.RESET;
                  beleghis1.SETFILTER(beleghis1."Auftragsnr.",'%1',Service."Auftragsnr.");
                  beleghis1.SETFILTER(beleghis1."Auftragszeilennr.",'%1',Service."Auftragszeilennr.");
                  IF vkrz.FIND('-') THEN BEGIN
                    REPEAT
                      RowNo := RowNo + 1;
                      EnterCell(RowNo,17,FORMAT(beleghis1."Belegnr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,18,FORMAT(beleghis1."Zeilennr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,19,FORMAT(beleghis1.Betrag),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,20,FORMAT(beleghis1.Menge),FALSE,FALSE,FALSE,'### ###',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,21,FORMAT(beleghis1."VK-Preis"),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,22,FORMAT(beleghis1."VK-W„hrung"),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                    UNTIL vkrz.NEXT=0;
                  END;
                END;
                RowNo := RowNo + 1;
              END;
        //  Ende Lieferscheine holen aus Beleghistorie
      }

            END;

          END;
        UNTIL Service.NEXT = 0;
      END;
      END;


      //RowNo := RowNo + 1;
      EnterCell(RowNo,6,'Gesamtbetrag',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,FORMAT(sum_vk_EUR),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(sum_vk_USD),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);



      CloseExcel('DebNr' +v_deb_nr ,'DebNr' +v_deb_nr,'F:\Daten Neu\User\Joachim\MWSt-Umstellung Service-Vertr„ge');
      RowNo := 0;

      }

      CreateExcel;
      RowNo := RowNo + 1;
      Debitor.RESET;
      Debitor.SETFILTER(Debitor."No.",'%1',v_deb_nr);
      IF Debitor.FINDFIRST THEN BEGIN
        sum_vk_EUR :=0;
        sum_vk_USD :=0;
        sum_vk:=0;
        EnterCell(RowNo,1,'Debitor Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,'Debitor Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,3,'Rechnungsnummer',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,4,'Rechnungsdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,5,'Seviceleistung Start',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,6,'Serviceleistung Ende',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,7,'Betrag EUR',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,8,'Betrag USD',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo + 1;
        Service.RESET;
        Service.SETFILTER(Service."Debitornr.",'%1',Debitor."No.");
        Service.SETFILTER(Service.Art,'%1',Service.Art::Service);
        Service.SETFILTER(Service.Inaktiv,'%1',FALSE);
        //Service.SETFILTER(Service."Ablaufdatum Serviceleistung",'%1..%2',v_datum_von1,v_datum_bis1);
        Service.SETFILTER(Service."Ablaufdatum Serviceleistung",'%1..%2',010720D,311220D);
        IF Service.FIND('-') THEN BEGIN
          REPEAT
            Artikel.RESET;
            Artikel.SETFILTER(Artikel."No.",'%1',Service."SUP Artikelnr.");
            Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
            IF Artikel.FINDFIRST THEN BEGIN
              vklz.RESET;
              vklz.SETFILTER(vklz."Document No.",'%1',Service."Nr.");
              vklz.SETFILTER(vklz."Line No.",'%1',Service."Belegzeilennr.");
              vklz.SETFILTER(vklz."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
              IF vklz.FINDFIRST THEN BEGIN
                IF (liefnr = vklz."Document No.") AND (liefzeilennr = vklz."Line No.") THEN BEGIN
                END ELSE BEGIN
                  liefnr := vklz."Document No.";
                  liefzeilennr := vklz."Line No.";
                  vkrz.RESET;
                  vkrz.SETFILTER(vkrz."Order No.",'%1',Service."Auftragsnr.");
                  vkrz.SETFILTER(vkrz."Order Line No.",'%1',Service."Auftragszeilennr.");
                  vkrz.SETFILTER(vkrz."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
                  IF vkrz.FIND('-') THEN BEGIN
                    REPEAT
                      RowNo := RowNo + 1;
                      EnterCell(RowNo,1,Service."Debitornr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,2,Service.Debitorname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,3,FORMAT(vkrz."Document No."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,4,FORMAT(vkrz."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                      EnterCell(RowNo,5,FORMAT(Service.Lizenzdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                      EnterCell(RowNo,6,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                      vkrk.RESET;
                      vkrk.SETFILTER(vkrk."No.",'%1',vkrz."Document No.");
                      IF vkrk.FINDFIRST THEN BEGIN
                        IF vkrk."Currency Code"='' THEN BEGIN
                          EnterCell(RowNo,7,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                          sum_vk_EUR := (sum_vk_EUR + (ROUND(vkrz."VK-Preis (MW)" * vkrz.Quantity)));
                        END ELSE BEGIN
                          IF vkrk."Currency Code"='USD' THEN BEGIN
                            sum_vk_USD := (sum_vk_USD + (ROUND(vkrz.Amount)));
                            EnterCell(RowNo,8,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                          END ELSE BEGIN
                            EnterCell(RowNo,8,'Fehler, da unbekannte W„hrung',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                          END;
                        END;
                      END;
                    UNTIL vkrz.NEXT=0;
                  END;
                END;
              END;
            END;
          UNTIL Service.NEXT = 0;
        END;
      END;

      RowNo := RowNo + 2;
      EnterCell(RowNo,6,'Gesamtbetrag',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,FORMAT(sum_vk_EUR),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(sum_vk_USD),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);


      CloseExcel('DebNr ' +v_deb_nr ,'DebNr ' +v_deb_nr,'F:\Daten Neu\User\Joachim\MWSt-Umstellung Service-Vertr„ge');
      RowNo := 0;
    END;

    LOCAL PROCEDURE MWSt_Umstell_auslauf_Service_Gesamtliste@1000000033();
    BEGIN
      CreateExcel;
      RowNo := RowNo + 1;
      Debitor.RESET;
      Debitor.SETFILTER(Debitor."No.",'%1',v_deb_nr);
      IF Debitor.FINDFIRST THEN BEGIN
        sum_vk_EUR :=0;
        sum_vk_USD :=0;
        sum_vk:=0;
        EnterCell(RowNo,1,'Debitor Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,'Debitor Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,3,'Rechnungsnummer',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,4,'Rechnungsdatum',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,5,'Seviceleistung Start',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,6,'Serviceleistung Ende',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,7,'Betrag EUR',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,8,'Betrag USD',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo + 1;
        Service.RESET;
        Service.SETFILTER(Service."Debitornr.",'%1',Debitor."No.");
        Service.SETFILTER(Service.Art,'%1',Service.Art::Service);
        Service.SETFILTER(Service.Inaktiv,'%1',FALSE);
        //Service.SETFILTER(Service."Ablaufdatum Serviceleistung",'%1..%2',v_datum_von1,v_datum_bis1);
        Service.SETFILTER(Service."Ablaufdatum Serviceleistung",'%1..%2',010720D,311220D);
        IF Service.FIND('-') THEN BEGIN
          REPEAT
            //RowNo := RowNo + 1;
            //EnterCell(RowNo,1,Service."Debitornr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //EnterCell(RowNo,2,Service.Debitorname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            Artikel.RESET;
            Artikel.SETFILTER(Artikel."No.",'%1',Service."SUP Artikelnr.");
            // Artikel.SETFILTER(Artikel."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
            IF Artikel.FINDFIRST THEN BEGIN
              RowNo := RowNo + 1;
              EnterCell(RowNo,3,Artikel."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,Artikel."Manufacturer Code",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              beleghis.RESET;
              beleghis.SETFILTER(beleghis."Belegnr.",'%1',Service."Nr.");
              beleghis.SETFILTER(beleghis."Zeilennr.",'%1',Service."Belegzeilennr.");
              //  beleghis.SETFILTER(beleghis.Herstellercode,'<>%1&<>%2&<>%3','5710','5720','5730');
              IF beleghis.FINDFIRST THEN BEGIN
                IF (liefnr = beleghis."Belegnr.") AND (liefzeilennr = beleghis."Zeilennr.") THEN BEGIN
                END ELSE BEGIN
                  liefnr := beleghis."Belegnr.";
                  liefzeilennr := beleghis."Zeilennr.";

                  beleghis1.RESET;
                  beleghis1.SETFILTER(beleghis1.Belegart,'%1',beleghis1.Belegart::Invoice);
                  beleghis1.SETFILTER(beleghis1.Herstellercode,'%1','57');
                  beleghis1.SETFILTER(beleghis1."Auftragsnr.",'%1',beleghis."Auftragsnr.");
                  beleghis1.SETFILTER(beleghis1."Auftragszeilennr.",'%1',beleghis."Auftragszeilennr.");
                  IF beleghis1.FIND('-') THEN BEGIN
                    REPEAT
                      RowNo := RowNo + 1;
                      EnterCell(RowNo,1,Service."Debitornr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,2,Service.Debitorname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      EnterCell(RowNo,3,FORMAT(beleghis1."Belegnr."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,4,FORMAT(beleghis1.Belegdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                      EnterCell(RowNo,5,FORMAT(Service.Lizenzdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                      EnterCell(RowNo,6,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                    UNTIL beleghis1.NEXT=0;
                  END;
                END;
              END;

              {
                        vkrz.RESET;
              //          vkrz.SETFILTER(vkrz."Order No.",'%1',Service."Auftragsnr.");
              //          vkrz.SETFILTER(vkrz."Order Line No.",'%1',Service."Auftragszeilennr.");
              //          vkrz.SETFILTER(vkrz."Manufacturer Code",'<>%1&<>%2&<>%3','5710','5720','5730');
                        vkrz.SETFILTER(vkrz."Order No.",'%1',beleghis."Auftragsnr.");
                        vkrz.SETFILTER(vkrz."Order Line No.",'%1',beleghis."Auftragszeilennr.");
                        IF vkrz.FIND('-') THEN BEGIN
                          REPEAT
                            RowNo := RowNo + 1;
                            EnterCell(RowNo,1,Service."Debitornr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,2,Service.Debitorname,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                            EnterCell(RowNo,3,FORMAT(vkrz."Document No."),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                            EnterCell(RowNo,4,FORMAT(vkrz."Posting Date"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                            EnterCell(RowNo,5,FORMAT(Service.Lizenzdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                            EnterCell(RowNo,6,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

                            vkrk.RESET;
                            vkrk.SETFILTER(vkrk."No.",'%1',vkrz."Document No.");
                            IF vkrk.FINDFIRST THEN BEGIN
                              IF vkrk."Currency Code"='' THEN BEGIN
                                EnterCell(RowNo,7,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                                sum_vk_EUR := (sum_vk_EUR + (ROUND(vkrz."VK-Preis (MW)" * vkrz.Quantity)));
                              END ELSE BEGIN
                                IF vkrk."Currency Code"='USD' THEN BEGIN
                                  sum_vk_USD := (sum_vk_USD + (ROUND(vkrz.Amount)));
                                  EnterCell(RowNo,8,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                                END ELSE BEGIN
                                  EnterCell(RowNo,8,'Fehler, da unbekannte W„hrung',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                                END;
                              END;
                            END;
                          UNTIL vkrz.NEXT=0;
                        END;
              }
              //        END;
              //      END;
            END;
          UNTIL Service.NEXT = 0;
        END;
      END;

      RowNo := RowNo + 2;
      EnterCell(RowNo,6,'Gesamtbetrag',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,FORMAT(sum_vk_EUR),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(sum_vk_USD),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);


      CloseExcel('DebNr ' +v_deb_nr ,'DebNr ' +v_deb_nr,'F:\Daten Neu\User\Joachim\MWSt-Umstellung Service-Vertr„ge');
      RowNo := 0;
    END;

    LOCAL PROCEDURE MWSt_Umstell_TEST@1000000027();
    BEGIN
      CreateExcel;
      RowNo := RowNo + 1;
      Debitor.RESET;
      Debitor.SETFILTER(Debitor."No.",'%1',v_deb_nr);
      IF Debitor.FINDFIRST THEN BEGIN
        sum_vk_EUR :=0;
        sum_vk_USD :=0;
        sum_vk:=0;
        EnterCell(RowNo,1,'Debitor Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,'Debitor Name',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,3,'Hauptwartungsvertrag',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,4,'Wartungsvertrag',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,5,'Seviceleistung Start',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,6,'Serviceleistung Ende',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);

        EnterCell(RowNo,8,'Artikel',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);

        EnterCell(RowNo,10,'Lieferschein',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);

        EnterCell(RowNo,12,'Auftrag',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,13,'Rech-Artikel',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,14,'Rech-Nr.',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,15,'Menge',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,16,'Preis',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,17,'Betrag EUR',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,18,'Betrag USD',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,19,'W„hrung',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);

        RowNo := RowNo + 1;
        Service.RESET;
        Service.SETFILTER(Service."Debitornr.",'%1',Debitor."No.");
        Service.SETFILTER(Service.Art,'%1',Service.Art::Service);
        Service.SETFILTER(Service.Inaktiv,'%1',FALSE);
        //Service.SETFILTER(Service."Ablaufdatum Serviceleistung",'%1..%2',v_datum_von1,v_datum_bis1);
        Service.SETFILTER(Service."Ablaufdatum Serviceleistung",'%1..%2',010720D,311220D);
        IF Service.FIND('-') THEN BEGIN
          REPEAT
            IF ((doppel_art = Service."SUP Artikelnr.") AND (doppel_au = Service."Auftragsnr.")) THEN BEGIN
            END ELSE BEGIN
              doppel_art := Service."SUP Artikelnr.";
              doppel_au := Service."Auftragsnr.";
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,Debitor."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,Debitor.Name,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              EnterCell(RowNo,3,Service."Hauptwartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,Service."Wartungsvertragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(Service.Lizenzdatum),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,6,FORMAT(Service."Ablaufdatum Serviceleistung"),FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              // EnterCell(RowNo,7,Service."Service Artikelnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,Service."SUP Artikelnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              // EnterCell(RowNo,9,Service."SUP Artikelnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,10,Service."Nr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,Service."Rechnungsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,12,Service."Auftragsnr.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              vkrz.RESET;
              vkrz.SETFILTER(vkrz."Order No.",'%1',Service."Auftragsnr.");
              // vkrz.SETFILTER(vkrz."Order Line No.",'%1',Service."Auftragszeilennr.");
              vkrz.SETFILTER(vkrz."No.",'%1',Service."SUP Artikelnr.");
              IF vkrz.FIND('-') THEN BEGIN
                REPEAT
                  EnterCell(RowNo,13,vkrz."No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,14,vkrz."Document No.",FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,15,FORMAT(vkrz.Quantity),FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,16,FORMAT(vkrz."Unit Price"),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  // EnterCell(RowNo,17,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  vkrk.RESET;
                  vkrk.SETFILTER(vkrk."No.",'%1',vkrz."Document No.");
                  IF vkrk.FINDFIRST THEN BEGIN
                    IF vkrk."Currency Code"='' THEN BEGIN
                      EnterCell(RowNo,17,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                      EnterCell(RowNo,19,'EUR',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      sum_vk_EUR := (sum_vk_EUR + (ROUND(vkrz."VK-Preis (MW)" * vkrz.Quantity)));
                    END ELSE BEGIN
                      IF vkrk."Currency Code"='USD' THEN BEGIN
                        sum_vk_USD := (sum_vk_USD + (ROUND(vkrz.Amount)));
                        EnterCell(RowNo,18,FORMAT(vkrz.Amount),FALSE,FALSE,FALSE,'###,###.00',TempExcelBuffer."Cell Type"::Number);
                        EnterCell(RowNo,19,'USD',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      END ELSE BEGIN
                        EnterCell(RowNo,18,'Fehler, da unbekannte W„hrung',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                      END;
                    END;
                    RowNo := RowNo + 1;
                  END;
                UNTIL vkrz.NEXT=0;
              END;
            END;
          UNTIL Service.NEXT = 0;
        END;
      END;
      RowNo := RowNo + 2;
      EnterCell(RowNo,6,'Gesamtbetrag',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,FORMAT(sum_vk_EUR),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,18,FORMAT(sum_vk_USD),FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('DebNr ' +v_deb_nr ,'DebNr ' +v_deb_nr,'F:\Daten Neu\User\Joachim\MWSt-Umstellung Service-Vertr„ge');
      RowNo := 0;
    END;

    LOCAL PROCEDURE GetCellValue@1000000040(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer) : Text;
    BEGIN
      IF TempExcelBuffer.GET(RowNo,ColumnNo)  THEN BEGIN
        EXIT(TempExcelBuffer."Cell Value as Text");
      END;
    END;

    EVENT Sheet@1000000103::SelectionChange@1543(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1000000103::BeforeDoubleClick@1537(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000103::BeforeRightClick@1534(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000103::Activate@304();
    BEGIN
    END;

    EVENT Sheet@1000000103::Deactivate@1530();
    BEGIN
    END;

    EVENT Sheet@1000000103::Calculate@279();
    BEGIN
    END;

    EVENT Sheet@1000000103::Change@1545(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1000000103::FollowHyperlink@1470(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Sheet@1000000103::PivotTableUpdate@2156(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Sheet@1000000103::PivotTableAfterValueChange@2886(TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1000000103::PivotTableBeforeAllocateChanges@2889(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000103::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000103::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Sheet@1000000103::PivotTableChangeSync@2894(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000105::Open@1923();
    BEGIN
    END;

    EVENT Book@1000000105::Activate@304();
    BEGIN
    END;

    EVENT Book@1000000105::Deactivate@1530();
    BEGIN
    END;

    EVENT Book@1000000105::BeforeClose@1546(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::BeforeSave@1547(SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::BeforePrint@1549(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::NewSheet@1550(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000105::AddinInstall@1552();
    BEGIN
    END;

    EVENT Book@1000000105::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Book@1000000105::WindowResize@1554(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1000000105::WindowActivate@1556(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1000000105::WindowDeactivate@1557(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1000000105::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1000000105::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000105::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000105::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000105::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1000000105::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Book@1000000105::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000105::PivotTableCloseConnection@2158(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000105::PivotTableOpenConnection@2159(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000105::Sync@2266(SyncEventType@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000105::BeforeXmlImport@2283(Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::AfterXmlImport@2285(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000105::BeforeXmlExport@2287(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::AfterXmlExport@2288(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000105::RowsetComplete@2610(Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1000000105::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000105::SheetPivotTableChangeSync@2899(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000105::AfterSave@2900(Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000105::NewChart@2901(Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart");
    BEGIN
    END;

    EVENT Excel@1000000106::NewWorkbook@1565(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookOpen@1567(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookActivate@1568(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookDeactivate@1569(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookBeforeClose@1570(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookBeforeSave@1571(Wb@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookBeforePrint@1572(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookNewSheet@1573(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookAddinInstall@1574(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookAddinUninstall@1575(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000106::WindowResize@1554(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1000000106::WindowActivate@1556(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1000000106::WindowDeactivate@1557(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookPivotTableCloseConnection@2160(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookPivotTableOpenConnection@2161(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookSync@2289(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SyncEventType@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookBeforeXmlImport@2290(Wb@1000000004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookAfterXmlImport@2291(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookBeforeXmlExport@2292(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookAfterXmlExport@2293(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookRowsetComplete@2611(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::AfterCalculate@2612();
    BEGIN
    END;

    EVENT Excel@1000000106::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1000000106::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000106::ProtectedViewWindowOpen@2903(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000106::ProtectedViewWindowBeforeEdit@2905(Pvw@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::ProtectedViewWindowBeforeClose@2906(Pvw@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow";Reason@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::ProtectedViewWindowResize@2908(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000106::ProtectedViewWindowActivate@2909(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000106::ProtectedViewWindowDeactivate@2910(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookAfterSave@2911(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000106::WorkbookNewChart@2912(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart");
    BEGIN
    END;

    BEGIN
    {
      Lfd.Nr. Version   Datum       User  Beschreibung
      ===========================================================================
      1       TOP1.00   15.01.18    UB    Erweiterung Provisionsabrechnung fr VK-Umsatz (noch in Arbeit)
      2       TOP1.00   23.04.18    UB    Funktion 'Bankposten suchen' auf neue Excel-Version umgestellt
      3       TOP1.01   10.09.18    UB    Erweiterung 'Meldung Stat.Bundesamt' und 'Meldung Kre Stat.Bundesamt'
      4       TOP1.02   03.01.22    UB    Erweiterung Auswertung DIGI und NIS (fr RIC)
      5       TOP1.03   23.12.22    ST    XMOS neue Excel Struktur laut Hersteller
    }
    END.
  }
}

