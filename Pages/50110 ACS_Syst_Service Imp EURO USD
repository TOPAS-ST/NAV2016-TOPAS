OBJECT Page 50110 ACS_Syst_Service Imp EURO USD
{
  OBJECT-PROPERTIES
  {
    Date=12.07.17;
    Time=14:47:31;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    ActionList=ACTIONS
    {
      { 1000000004;  ;ActionContainer;
                      CaptionML=DEU=Funktionen;
                      ActionContainerType=ActionItems }
      { 1000000005;1 ;Action    ;
                      Name=Import;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ImportExcel;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Run_Import;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;;Container;
                ContainerType=ContentArea }

    { 1000000003;1;Group  ;
                CaptionML=DEU=Allgemein }

    { 1000000002;2;Group  ;
                CaptionML=DEU=Pfad angeben;
                GroupType=Group }

    { 1000000001;3;Field  ;
                CaptionML=DEU=Datei;
                SourceExpr=filename;
                OnLookup=BEGIN
                           TOPAS_API.OpenFile(filename);
                         END;

                OnAssistEdit=BEGIN
                               filename := TOPAS_API.Save_FileDialog;
                             END;
                              }

  }
  CODE
  {
    VAR
      Servicepreise@1000000031 : Record 50028;
      Artikelnr_obsolete@1000000030 : Record 50028;
      verkaufspreis@1000000049 : Record 7002;
      einkaufspreis@1000000029 : Record 7012;
      Artikel@1000000040 : Record 27;
      Kreditor@1000000039 : Record 23;
      TOPAS_API@1000000001 : Codeunit 50001;
      Quelle_Excel@1000000008 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Quelle_Book@1000000007 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Quelle_Sheet@1000000006 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      Quelle_j@1000000005 : Text[7];
      Protokoll_Excel@1000000004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024500-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Application";
      Protokoll_Book@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";
      Protokoll_Sheet@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020820-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Worksheet";
      Protokoll_j@1000000051 : Text[7];
      filename@1000000000 : Text;
      PL_Version@1000000037 : Text[30];
      PL_Version_Systeme@1000000036 : Text[30];
      Artikelname@1000000035 : Text[120];
      ServiceArtikelname@1000000034 : Text[50];
      SUPArtikelname@1000000033 : Text[50];
      excel_datens„tze@1000000011 : Integer;
      ge„nderte_eintr„ge@1000000010 : Integer;
      obsolete_eintr„ge@1000000009 : Integer;
      obsolete_korrigiert@1000000038 : Integer;
      leere_zeilen@1000000041 : Integer;
      auswahl@1000000012 : 'Champs,ACTS,Systeme,Systeme Schaeffler,Champs alt,ACTS alt';
      Spalte_Part@1000000027 : TextConst 'DEU=A';
      Spalte_Serviceartikelnr@1000000026 : TextConst 'DEU=B';
      Spalte_MSRP@1000000025 : TextConst 'DEU=C';
      Spalte_YR@1000000024 : TextConst 'DEU=D';
      Spalte_SUP_lang@1000000023 : TextConst 'DEU=E';
      Spalte_SUP@1000000022 : TextConst 'DEU=F';
      Spalte_PL_Version@1000000021 : TextConst 'DEU=G';
      Spalte_W„h@1000000020 : TextConst 'DEU=H';
      Spalte_Art@1000000019 : TextConst 'DEU=I';
      Spalte_DC_Systeme@1000000018 : TextConst 'DEU=D';
      Spalte_W„h_Systeme@1000000017 : TextConst 'DEU=E';
      Spalte_Startdatum@1000000016 : TextConst 'DEU=F';
      Spalte_PL_Version_Systeme@1000000015 : TextConst 'DEU=G';
      Kred@1000000047 : TextConst 'DEU=880045';
      Kred_EURO@1000000050 : TextConst 'DEU=880045';
      Max_Datens„tze@1000000042 : TextConst 'DEU=40000';
      Text001@1000000048 : TextConst 'DEU=Der W„hrungscode des Kreditors %1 und der in der Excel Liste angebene W„hrungscode weichen voneinander ab.';
      Text100@1000000013 : TextConst 'DEU=CHAMPS Import,ACTS / ACTS Schaeffler Import,Systemartikel DC und MSRP Import,Schaeffler Systemartikel DC und MSRP Import,CHAMPS alt aktualisieren,ACTS alt aktualisieren';
      startdatum@1000000046 : Date;
      laufzeit@1000000055 : Integer;
      v_art@1000000028 : 'Champs,ACTS';
      PL_W„h@1000000014 : Code[20];
      PL_Bezeichnung@1000000056 : Text[30];
      excel_msrp@1000000032 : Decimal;
      excel_dc@1000000044 : Decimal;
      cell_part@1000000053 : Text[30];
      cell_msrp@1000000052 : Text[30];
      system_ek_w„hrung@1000000043 : Code[20];
      w„h_text@1000000054 : Text[30];
      EOL@1000000045 : Boolean;

    LOCAL PROCEDURE Run_Import@1000000001();
    BEGIN
      // Excel Datei Definitionen ******************************************************************
      // *******************************************************************************************

      CLEAR(Quelle_Excel);
      CLEAR(Quelle_Sheet);
      CLEAR(Quelle_Book);

      ge„nderte_eintr„ge := 0;
      obsolete_eintr„ge := 0;
      excel_datens„tze := 0;

      auswahl := STRMENU(Text100,7);
      IF auswahl = 0 THEN
        EXIT;

      //CHAMPS oder ACTS
      IF (auswahl = 1) OR (auswahl = 2) THEN BEGIN

        // Definiert die zu importierende Datei
        IF CREATE(Quelle_Excel,FALSE,TRUE) THEN BEGIN END ELSE ERROR('Cannot start Excel Application.');
        Quelle_Book := Quelle_Excel.Workbooks._Open(filename,0,FALSE); //Kein Schreibschutz
        Quelle_j:='1';

        //********************************************************************************************
        //                         Eigentliches Update der Service Artikel
        //********************************************************************************************

        Quelle_Sheet := Quelle_Excel.Worksheets.Item('Einspielen');

        excel_datens„tze := Quelle_Sheet.UsedRange.Rows.Count;
        PL_W„h := UPPERCASE(FORMAT(Quelle_Sheet.Range(Spalte_W„h+Quelle_j).Value));
        EVALUATE(v_art,FORMAT(Quelle_Sheet.Range(Spalte_Art+Quelle_j).Value));

        IF (auswahl = 1) AND (FORMAT(v_art) <> 'Champs') THEN BEGIN
          Quelle_Book.Close;
          ERROR('Falsche Syntax in Liste');
        END;
        IF (auswahl = 2) AND (FORMAT(v_art) <> 'ACTS') THEN BEGIN
          Quelle_Book.Close;
          ERROR('Falsche Syntax in Liste');
        END;

        IF excel_datens„tze > 999 THEN BEGIN
          IF CONFIRM('Es konnte mehr als 1000 Eintr„ge in der Quelldatei gefunden werden.\' +
                      'Soll der Status Update letzte Preisliste fr alle Artikel zurckgesetzt und neu ' +
                      'bewertet werden?',TRUE) THEN BEGIN
            Servicepreise.RESET;
            IF auswahl = 1 THEN
              Servicepreise.SETRANGE(Art,Servicepreise.Art::Champs);
            IF auswahl = 2 THEN
              Servicepreise.SETRANGE(Art,Servicepreise.Art::ACTS);
            Servicepreise.SETRANGE(W„hrungscode,PL_W„h);
            IF Servicepreise.FINDFIRST THEN
              Servicepreise.MODIFYALL("Update letzte Preisliste",FALSE);
          END;
        END;

        REPEAT

          excel_msrp := 0;

          Artikelname := UPPERCASE(FORMAT(Quelle_Sheet.Range(Spalte_Part+Quelle_j).Value));
          ServiceArtikelname := UPPERCASE(FORMAT(Quelle_Sheet.Range(Spalte_Serviceartikelnr+Quelle_j).Value));
          SUPArtikelname := UPPERCASE(FORMAT(Quelle_Sheet.Range(Spalte_SUP+Quelle_j).Value));
          IF FORMAT(Quelle_Sheet.Range(Spalte_MSRP+Quelle_j).Value) <> '' THEN
            EVALUATE(excel_msrp,FORMAT(Quelle_Sheet.Range(Spalte_MSRP+Quelle_j).Value));
          PL_Version := FORMAT(Quelle_Sheet.Range(Spalte_PL_Version+Quelle_j).Value);

          IF Artikelname = '' THEN BEGIN
          END ELSE BEGIN
            //Kennzeichnung der alten Pos., dass die Zuordnung obsolete geworden ist, da Service Artikelnr. ge„ndert wurde
            Artikelnr_obsolete.RESET;
            IF auswahl = 1 THEN
              Artikelnr_obsolete.SETFILTER(Art,'%1',Artikelnr_obsolete.Art::Champs);
            IF auswahl = 2 THEN
              Artikelnr_obsolete.SETFILTER(Art,'%1',Artikelnr_obsolete.Art::ACTS);
            Artikelnr_obsolete.SETFILTER("Artikelnr. 2",'%1',Artikelname);
            Artikelnr_obsolete.SETFILTER("SUP Artikelnr.",'%1',SUPArtikelname);
            Artikelnr_obsolete.SETFILTER(W„hrungscode,'%1',PL_W„h);
            Artikelnr_obsolete.SETFILTER("Zuordnung obsolete",'%1',FALSE);
            IF Artikelnr_obsolete.FINDFIRST THEN
              REPEAT
                IF Artikelnr_obsolete."Service Artikelnr." <> ServiceArtikelname THEN BEGIN
                  Artikelnr_obsolete."Zuordnung obsolete" := TRUE;
                  Artikelnr_obsolete.MODIFY(TRUE);
                  obsolete_eintr„ge += 1;
                  Quelle_Sheet.Range('K'+Quelle_j).Value := FORMAT(Quelle_Sheet.Range('K'+Quelle_j).Value) +
                  Artikelnr_obsolete."Service Artikelnr." + ';';
                END;
              UNTIL Artikelnr_obsolete.NEXT = 0;

            Servicepreise.RESET;
            IF auswahl = 1 THEN
              Servicepreise.SETFILTER(Art,'%1',Servicepreise.Art::Champs);
            IF auswahl = 2 THEN
              Servicepreise.SETFILTER(Art,'%1',Servicepreise.Art::ACTS);
            Servicepreise.SETFILTER("Artikelnr. 2",'%1',Artikelname);
            Servicepreise.SETFILTER("Service Artikelnr.",'%1',ServiceArtikelname);
            Servicepreise.SETFILTER("SUP Artikelnr.",'%1',SUPArtikelname);
            Servicepreise.SETFILTER(W„hrungscode,'%1',PL_W„h);
            IF Servicepreise.FINDFIRST THEN BEGIN
              IF (Servicepreise.MSRP <> ROUND(excel_msrp,0.01)) AND (excel_msrp <> 0) THEN BEGIN
                ge„nderte_eintr„ge += 1;
                Servicepreise.MSRP := ROUND(excel_msrp,0.01);
                Servicepreise.MODIFY(TRUE);
              END;
              Servicepreise."Update letzte Preisliste" := TRUE;
              Servicepreise.Preisliste := FORMAT(Quelle_Sheet.Range(Spalte_PL_Version+Quelle_j).Value);
              IF Servicepreise."Zuordnung obsolete" = TRUE THEN BEGIN
                Servicepreise."Zuordnung obsolete" := FALSE;
                obsolete_korrigiert += 1;
                Quelle_Sheet.Range('L'+Quelle_j).Value := 'obsolete korrigiert';
              END;
              Servicepreise.MODIFY;
            END ELSE BEGIN
              Servicepreise.INIT;
              Servicepreise."Service Artikelnr." := FORMAT(Quelle_Sheet.Range(Spalte_Serviceartikelnr+Quelle_j).Value);
              Servicepreise."SUP Artikelnr." := FORMAT(Quelle_Sheet.Range(Spalte_SUP+Quelle_j).Value);
              Artikel.RESET;
              Artikel.SETFILTER("No. 2",'%1',FORMAT(Quelle_Sheet.Range(Spalte_Part+Quelle_j).Value));
              IF Artikel.FINDFIRST THEN BEGIN
                Servicepreise.VALIDATE("Artikelnr.",Artikel."No.");
              END ELSE BEGIN
                //Servicepreise."Artikelnr." := FORMAT(Quelle_Sheet.Range(Spalte_Part+Quelle_j).Value);
                Servicepreise."Artikelnr. 2" := FORMAT(Quelle_Sheet.Range(Spalte_Part+Quelle_j).Value);
              END;
              Servicepreise.MSRP := ROUND(excel_msrp,0.01);
              Servicepreise."Update letzte Preisliste" := TRUE;
              Servicepreise.Preisliste := FORMAT(Quelle_Sheet.Range(Spalte_PL_Version+Quelle_j).Value);
              Servicepreise.W„hrungscode := PL_W„h;
              EVALUATE(laufzeit,FORMAT(Quelle_Sheet.Range(Spalte_YR+Quelle_j).Value));
              Servicepreise."Laufzeit in Jahren" := laufzeit;
              IF auswahl = 1 THEN
                Servicepreise.Art := Servicepreise.Art::Champs;
              IF auswahl = 2 THEN
                Servicepreise.Art := Servicepreise.Art::ACTS;
              Servicepreise.INSERT(TRUE);
              ge„nderte_eintr„ge += 1;
            END;

          END;

          //*********************************************************************************************
          // Abbruchbedingung
          // Wenn in der Quelldatei 15 Leere Zeilen hintereinander kommen, ist das Dateiende erreicht
          IF Artikelname = '' THEN                                      // erkennt das Ende der Excel Datei
            leere_zeilen += 1
          ELSE
            leere_zeilen := 0;

          Quelle_j:=INCSTR(Quelle_j);                                                 // n„chste Zeile Importdatei

        UNTIL (Max_Datens„tze = Quelle_j) OR (leere_zeilen = 15);  // Nach 15 Zeilen ohne Artikel ist Schluss

        //Quelle_Book.Save;
        Quelle_Book.Close(TRUE);
        Quelle_Excel.Quit;

        CLEAR(Quelle_Sheet);
        CLEAR(Quelle_Book);
        CLEAR(Quelle_Excel);

        //REPEAT
        //UNTIL ISCLEAR(Quelle_Excel) AND ISCLEAR(Quelle_Book) AND ISCLEAR(Quelle_Sheet);
      END;


      //Systeme MSRP
      IF auswahl = 3 THEN BEGIN

        // Definiert die zu importierende Datei
        IF CREATE(Quelle_Excel,FALSE,TRUE) THEN BEGIN END ELSE ERROR('Cannot start Excel Application.');
        Quelle_Book := Quelle_Excel.Workbooks._Open(filename,0,FALSE); //Kein Schreibschutz
        Quelle_j:='1';

        Quelle_Sheet := Quelle_Excel.Worksheets.Item('Einspielen');

        //Fhrende Einkaufsw„hrung
        system_ek_w„hrung := '';

        Quelle_j := '2';
        excel_datens„tze := Quelle_Sheet.UsedRange.Rows.Count;
        PL_W„h := UPPERCASE(FORMAT(Quelle_Sheet.Range(Spalte_W„h_Systeme+Quelle_j).Value));

        IF FORMAT(Quelle_Sheet.Range(Spalte_MSRP+'1').Value) <> 'MSRP' THEN BEGIN
          Quelle_Book.Close;
          ERROR('Fehlerhafte Syntax in der System Preisliste > Spalte ' + Spalte_MSRP + ' muss MSRP sein.');
        END;
        IF FORMAT(Quelle_Sheet.Range(Spalte_DC_Systeme+'1').Value) <> 'DC' THEN BEGIN
          Quelle_Book.Close;
          ERROR('Fehlerhafte Syntax in der System Preisliste > Spalte ' + Spalte_DC_Systeme + ' muss DC sein.');
        END;

        IF (excel_datens„tze > 499) AND (PL_W„h = system_ek_w„hrung) THEN BEGIN
          IF CONFIRM('Es konnte mehr als 500 Eintr„ge in der Quelldatei gefunden werden.\' +
                      'Soll der Status Update letzte Preisliste fr alle Artikel zurckgesetzt und neu ' +
                      'bewertet werden?',TRUE) THEN BEGIN
            Artikel.RESET;
            Artikel.SETFILTER("Manufacturer Code",'%1','59');
            IF Artikel.FINDFIRST THEN
              Artikel.MODIFYALL(Artikel."Update letzte Preisliste",FALSE);
          END;
        END;

        REPEAT

          excel_dc := 0;
          excel_msrp := 0;
          EOL := FALSE;

          Artikelname := UPPERCASE(FORMAT(Quelle_Sheet.Range(Spalte_Part+Quelle_j).Value));
          IF FORMAT(Quelle_Sheet.Range(Spalte_MSRP+Quelle_j).Value) <> 'EOL' THEN BEGIN
            IF FORMAT(Quelle_Sheet.Range(Spalte_DC_Systeme+Quelle_j).Value) <> '' THEN
              EVALUATE(excel_dc,FORMAT(Quelle_Sheet.Range(Spalte_DC_Systeme+Quelle_j).Value));
            excel_dc := ROUND(excel_dc,0.01);
            IF FORMAT(Quelle_Sheet.Range(Spalte_MSRP+Quelle_j).Value) <> '' THEN
              EVALUATE(excel_msrp,FORMAT(Quelle_Sheet.Range(Spalte_MSRP+Quelle_j).Value));
            excel_msrp := ROUND(excel_msrp,0.01);
          END ELSE
            EOL := TRUE;

          //Ausnahme EMS/UPG/TO-ACSRVR
          CASE Artikelname OF
            'EMS/UPG/TO-ACSRVR' :
            BEGIN
              excel_dc := excel_msrp;
              excel_msrp := 0;
            END;
          END;

          PL_W„h := UPPERCASE(FORMAT(Quelle_Sheet.Range(Spalte_W„h_Systeme+Quelle_j).Value));
          IF FORMAT(Quelle_Sheet.Range(Spalte_Startdatum+Quelle_j).Value) <> '' THEN
            EVALUATE(startdatum,FORMAT(Quelle_Sheet.Range(Spalte_Startdatum+Quelle_j).Value));
          IF Artikelname <> '' THEN
            PL_Version_Systeme := FORMAT(Quelle_Sheet.Range(Spalte_PL_Version_Systeme+Quelle_j).Value);

          IF (Artikelname = '') OR (STRLEN(Artikelname) > 40) THEN BEGIN
          END ELSE BEGIN
            Kreditor.GET(Kred);
            IF PL_W„h = system_ek_w„hrung THEN
              IF PL_W„h <> Kreditor."Currency Code" THEN BEGIN
                Quelle_Book.Close;
                ERROR(Text001,Kred);
              END;

            Artikel.RESET;
            Artikel.SETFILTER("No. 2",'%1',Artikelname);
            IF Artikel.FINDFIRST THEN BEGIN

              //*********************************************************************************************
              //                                    EK-Preise updaten
              //*********************************************************************************************

              IF PL_W„h = system_ek_w„hrung THEN BEGIN
                einkaufspreis.RESET;
                einkaufspreis.SETFILTER("Item No.",'%1',Artikel."No.");
                einkaufspreis.SETFILTER("Vendor No.",'%1',Kred);
                einkaufspreis.SETFILTER("Currency Code",'%1',PL_W„h);
                einkaufspreis.SETFILTER("Ending Date",'%1',0D);
                einkaufspreis.SETFILTER("Starting Date",'<>%1',startdatum);
                IF einkaufspreis.FINDFIRST THEN BEGIN
                  einkaufspreis."Ending Date" := startdatum - 1;
                  einkaufspreis.MODIFY(TRUE);
                END;

                IF (excel_dc <> 0) THEN BEGIN
                  einkaufspreis.RESET;
                  einkaufspreis.SETFILTER("Item No.",'%1',Artikel."No.");
                  einkaufspreis.SETFILTER("Vendor No.",'%1',Kred);
                  einkaufspreis.SETFILTER("Currency Code",'%1',PL_W„h);
                  einkaufspreis.SETFILTER("Starting Date",'%1',startdatum);
                  IF NOT einkaufspreis.FINDFIRST THEN BEGIN
                    einkaufspreis.INIT;
                    einkaufspreis."Item No." := Artikel."No.";
                    einkaufspreis."Vendor No." := Kred;
                    einkaufspreis."Starting Date" := startdatum;
                    einkaufspreis."Currency Code" := PL_W„h;
                    einkaufspreis."Unit of Measure Code" := 'STšCK';
                    einkaufspreis."Direct Unit Cost" := excel_dc;
                    einkaufspreis.INSERT(TRUE);
                    ge„nderte_eintr„ge += 1;
                  END ELSE BEGIN
                    //Falls der 1. Lauf noch inkorrekte DCs hatte, z.B. bei einigen Artikeln nun 80% anstatt 60% vom MSRP
                    IF einkaufspreis."Direct Unit Cost" <> excel_dc THEN BEGIN
                      einkaufspreis."Direct Unit Cost" := excel_dc;
                      einkaufspreis.MODIFY;
                      ge„nderte_eintr„ge += 1;
                    END;
                  END;

                END;

                Artikel."Update letzte Preisliste" := TRUE;
                Artikel.MODIFY(TRUE);

              END;

              //*********************************************************************************************
              //                                    VK-Preise updaten
              //*********************************************************************************************

              verkaufspreis.RESET;
              verkaufspreis.SETFILTER("Sales Type",'%1',verkaufspreis."Sales Type"::"All Customers");
              verkaufspreis.SETFILTER("Item No.",'%1',Artikel."No.");
              verkaufspreis.SETFILTER("Currency Code",'%1',PL_W„h);
              verkaufspreis.SETFILTER("Ending Date",'%1',0D);
              verkaufspreis.SETFILTER("Starting Date",'<>%1',startdatum);
              IF verkaufspreis.FINDFIRST THEN BEGIN
                verkaufspreis."Ending Date" := startdatum - 1;
                verkaufspreis.MODIFY(TRUE);
              END;

              IF excel_msrp <> 0 THEN BEGIN
                verkaufspreis.RESET;
                verkaufspreis.SETFILTER("Sales Type",'%1',verkaufspreis."Sales Type"::"All Customers");
                verkaufspreis.SETFILTER("Item No.",'%1',Artikel."No.");
                verkaufspreis.SETFILTER("Currency Code",'%1',PL_W„h);
                verkaufspreis.SETFILTER("Starting Date",'%1',startdatum);
                IF NOT verkaufspreis.FINDFIRST THEN BEGIN
                  verkaufspreis.INIT;
                  verkaufspreis."Sales Type" := verkaufspreis."Sales Type"::"All Customers";
                  verkaufspreis."Item No.":= Artikel."No.";
                  verkaufspreis."Starting Date" := startdatum;
                  verkaufspreis."Currency Code" := PL_W„h;
                  verkaufspreis."Unit of Measure Code" := 'STšCK';
                  verkaufspreis."Unit Price" := excel_msrp;
                  verkaufspreis.INSERT(TRUE);
                END;
              END;

              IF (STRPOS(Artikel.Bezeichnung2_lang,'Nicht in der Preisliste') <> 0)
              OR (STRPOS(Artikel.Bezeichnung2_lang,'Stand Preisliste') <> 0)
              OR (Artikel.Bezeichnung2_lang = '') THEN BEGIN
                Artikel.Bezeichnung2_lang := 'Stand Preisliste: ' + PL_Version_Systeme;
                Artikel.MODIFY(TRUE);
              END;

              IF EOL THEN
                IF STRPOS(Artikel.Preisinfo,'EOL') = 0 THEN
                  Artikel.Preisinfo := Artikel.Preisinfo + ' EOL - PL ' + PL_Version_Systeme;
            END;

          END;

          //*********************************************************************************************
          // Abbruchbedingung
          // Wenn in der Quelldatei 10 Leere Zeilen hintereinander kommen, ist das Dateiende erreicht
          IF Artikelname = '' THEN                                       // erkennt das Ende der Excel Datei
            leere_zeilen += 1
          ELSE
            leere_zeilen := 0;

          Quelle_j:=INCSTR(Quelle_j);                                                 // n„chste Zeile Importdatei

        UNTIL (Max_Datens„tze = Quelle_j) OR (leere_zeilen = 10);  // Nach 10 Zeilen ohne Artikel ist Schluss

        Artikel.RESET;
        Artikel.SETFILTER("Manufacturer Code",'%1','59');
        Artikel.SETFILTER("Update letzte Preisliste",'%1',FALSE);
        Artikel.SETFILTER(Bezeichnung2_lang,'%1|%2|%3','','*'+'Nicht in der Preisliste' + '*','*' +'Stand Preisliste' + '*');
        IF Artikel.FINDFIRST THEN
          Artikel.MODIFYALL(Bezeichnung2_lang,'Nicht in der Preisliste ' + PL_Version_Systeme + ' vorhanden.');

        Quelle_Book.Close(FALSE);
        Quelle_Excel.Quit;

        CLEAR(Quelle_Sheet);
        CLEAR(Quelle_Book);
        CLEAR(Quelle_Excel);

        //REPEAT
        //UNTIL ISCLEAR(Quelle_Excel) AND ISCLEAR(Quelle_Book) AND ISCLEAR(Quelle_Sheet);

      END;

      //Systeme MSRP Schaeffler
      IF auswahl = 4 THEN BEGIN

        // Definiert die zu importierende Datei
        IF CREATE(Quelle_Excel,FALSE,TRUE) THEN BEGIN END ELSE ERROR('Cannot start Excel Application.');
        Quelle_Book := Quelle_Excel.Workbooks._Open(filename,0,FALSE); //Kein Schreibschutz
        Quelle_j:='1';

        Quelle_Sheet := Quelle_Excel.Worksheets.Item('Einspielen');

        Quelle_j := '2';
        excel_datens„tze := Quelle_Sheet.UsedRange.Rows.Count;
        PL_W„h := UPPERCASE(FORMAT(Quelle_Sheet.Range(Spalte_W„h_Systeme+Quelle_j).Value));

        IF FORMAT(Quelle_Sheet.Range(Spalte_MSRP+'1').Value) <> 'MSRP' THEN BEGIN
          Quelle_Book.Close;
          ERROR('Fehlerhafte Syntax in der System Preisliste > Spalte ' + Spalte_MSRP + ' muss MSRP sein.');
        END;
        IF FORMAT(Quelle_Sheet.Range(Spalte_DC_Systeme+'1').Value) <> 'DC' THEN BEGIN
          Quelle_Book.Close;
          ERROR('Fehlerhafte Syntax in der System Preisliste > Spalte ' + Spalte_DC_Systeme + ' muss DC sein.');
        END;

        REPEAT

          excel_dc := 0;
          excel_msrp := 0;
          EOL := FALSE;

          Artikelname := UPPERCASE(FORMAT(Quelle_Sheet.Range(Spalte_Part+Quelle_j).Value));
          IF FORMAT(Quelle_Sheet.Range(Spalte_MSRP+Quelle_j).Value) <> 'EOS' THEN BEGIN
            IF FORMAT(Quelle_Sheet.Range(Spalte_DC_Systeme+Quelle_j).Value) <> '' THEN
              EVALUATE(excel_dc,FORMAT(Quelle_Sheet.Range(Spalte_DC_Systeme+Quelle_j).Value));
            excel_dc := ROUND(excel_dc,0.01);
            IF FORMAT(Quelle_Sheet.Range(Spalte_MSRP+Quelle_j).Value) <> '' THEN
              EVALUATE(excel_msrp,FORMAT(Quelle_Sheet.Range(Spalte_MSRP+Quelle_j).Value));
            excel_msrp := ROUND(excel_msrp,0.01);
          END ELSE
            EOL := TRUE;

          PL_W„h := UPPERCASE(FORMAT(Quelle_Sheet.Range(Spalte_W„h_Systeme+Quelle_j).Value));
          IF FORMAT(Quelle_Sheet.Range(Spalte_Startdatum+Quelle_j).Value) <> '' THEN
            EVALUATE(startdatum,FORMAT(Quelle_Sheet.Range(Spalte_Startdatum+Quelle_j).Value));
          IF Artikelname <> '' THEN
            PL_Version_Systeme := FORMAT(Quelle_Sheet.Range(Spalte_PL_Version_Systeme+Quelle_j).Value);

          IF (Artikelname = '') OR (STRLEN(Artikelname) > 40) THEN BEGIN
          END ELSE BEGIN
            Kreditor.GET(Kred_EURO);
            IF PL_W„h = 'USD' THEN
              IF PL_W„h <> Kreditor."Currency Code" THEN BEGIN
                Quelle_Book.Close;
                ERROR(Text001,Kred_EURO);
              END;

            Artikel.RESET;
            Artikel.SETFILTER("No. 2",'%1',Artikelname);
            IF Artikel.FINDFIRST THEN BEGIN

              //*********************************************************************************************
              //                                    EK-Preise updaten
              //*********************************************************************************************

              IF PL_W„h = '' THEN BEGIN
                einkaufspreis.RESET;
                einkaufspreis.SETFILTER("Item No.",'%1',Artikel."No.");
                einkaufspreis.SETFILTER("Vendor No.",'%1',Kred_EURO);
                einkaufspreis.SETFILTER("Currency Code",'%1',PL_W„h);
                einkaufspreis.SETFILTER("Ending Date",'%1',0D);
                einkaufspreis.SETFILTER("Starting Date",'<>%1',startdatum);
                IF einkaufspreis.FINDFIRST THEN BEGIN
                  einkaufspreis."Ending Date" := startdatum - 1;
                  einkaufspreis.MODIFY(TRUE);
                END;

                IF (excel_dc <> 0) THEN BEGIN
                  einkaufspreis.RESET;
                  einkaufspreis.SETFILTER("Item No.",'%1',Artikel."No.");
                  einkaufspreis.SETFILTER("Vendor No.",'%1',Kred_EURO);
                  einkaufspreis.SETFILTER("Currency Code",'%1',PL_W„h);
                  einkaufspreis.SETFILTER("Starting Date",'%1',startdatum);
                  IF NOT einkaufspreis.FINDFIRST THEN BEGIN
                    einkaufspreis.INIT;
                    einkaufspreis."Item No." := Artikel."No.";
                    einkaufspreis."Vendor No." := Kred_EURO;
                    einkaufspreis."Starting Date" := startdatum;
                    einkaufspreis."Currency Code" := PL_W„h;
                    einkaufspreis."Unit of Measure Code" := 'STšCK';
                    einkaufspreis."Direct Unit Cost" := excel_dc;
                    einkaufspreis.INSERT(TRUE);
                    ge„nderte_eintr„ge += 1;
                  END ELSE BEGIN
                    //Falls der 1. Lauf noch inkorrekte DCs hatte, z.B. bei einigen Artikeln nun 80% anstatt 60% vom MSRP
                    IF einkaufspreis."Direct Unit Cost" <> excel_dc THEN BEGIN
                      einkaufspreis."Direct Unit Cost" := excel_dc;
                      einkaufspreis.MODIFY;
                      ge„nderte_eintr„ge += 1;
                    END;
                  END;

                END;

                Artikel."Update letzte Preisliste" := TRUE;
                Artikel.MODIFY(TRUE);

              END;

              //*********************************************************************************************
              //                                    VK-Preise updaten
              //*********************************************************************************************

              verkaufspreis.RESET;
              verkaufspreis.SETFILTER("Sales Type",'%1',verkaufspreis."Sales Type"::"All Customers");
              verkaufspreis.SETFILTER("Item No.",'%1',Artikel."No.");
              verkaufspreis.SETFILTER("Currency Code",'%1',PL_W„h);
              verkaufspreis.SETFILTER("Ending Date",'%1',0D);
              verkaufspreis.SETFILTER("Starting Date",'<>%1',startdatum);
              IF verkaufspreis.FINDFIRST THEN BEGIN
                verkaufspreis."Ending Date" := startdatum - 1;
                verkaufspreis.MODIFY(TRUE);
              END;

              IF excel_msrp <> 0 THEN BEGIN
                verkaufspreis.RESET;
                verkaufspreis.SETFILTER("Sales Type",'%1',verkaufspreis."Sales Type"::"All Customers");
                verkaufspreis.SETFILTER("Item No.",'%1',Artikel."No.");
                verkaufspreis.SETFILTER("Currency Code",'%1',PL_W„h);
                verkaufspreis.SETFILTER("Starting Date",'%1',startdatum);
                IF NOT verkaufspreis.FINDFIRST THEN BEGIN
                  verkaufspreis.INIT;
                  verkaufspreis."Sales Type" := verkaufspreis."Sales Type"::"All Customers";
                  verkaufspreis."Item No.":= Artikel."No.";
                  verkaufspreis."Starting Date" := startdatum;
                  verkaufspreis."Currency Code" := PL_W„h;
                  verkaufspreis."Unit of Measure Code" := 'STšCK';
                  verkaufspreis."Unit Price" := excel_msrp;
                  verkaufspreis.INSERT(TRUE);
                END;
              END;

              IF (STRPOS(Artikel.Bezeichnung2_lang,'Nicht in der Preisliste') <> 0)
              OR (STRPOS(Artikel.Bezeichnung2_lang,'Stand Preisliste') <> 0)
              OR (Artikel.Bezeichnung2_lang = '') THEN BEGIN
                Artikel.Bezeichnung2_lang := 'Stand Preisliste: ' + PL_Version_Systeme;
                Artikel.MODIFY(TRUE);
              END;

              IF EOL THEN
                IF STRPOS(Artikel.Preisinfo,'EOL') = 0 THEN
                  Artikel.Preisinfo := Artikel.Preisinfo + ' EOL - PL ' + PL_Version_Systeme;
            END;

          END;

          //*********************************************************************************************
          // Abbruchbedingung
          // Wenn in der Quelldatei 10 Leere Zeilen hintereinander kommen, ist das Dateiende erreicht
          IF Artikelname = '' THEN                                       // erkennt das Ende der Excel Datei
            leere_zeilen += 1
          ELSE
            leere_zeilen :=0;

          Quelle_j:=INCSTR(Quelle_j);                                                 // n„chste Zeile Importdatei

        UNTIL (Max_Datens„tze = Quelle_j) OR (leere_zeilen = 10);  // Nach 10 Zeilen ohne Artikel ist Schluss

        { // Nach Rckstellung auf 4.7.04 von 4.8.11.1 gibt es hier Probleme, da er auch alle anderen Artikel anfassen wrde
        Artikel.RESET;
        Artikel.SETFILTER("Manufacturer Code",'%1','59');
        Artikel.SETFILTER("Update letzte Preisliste",'%1',FALSE);
        Artikel.SETFILTER(Bezeichnung2_lang,'%1|%2|%3','','*'+'Nicht in der Preisliste' + '*','*' +'Stand Preisliste' + '*');
        IF Artikel.FINDFIRST THEN
          Artikel.MODIFYALL(Bezeichnung2_lang,'Nicht in der Preisliste ' + PL_Version_Systeme + ' vorhanden.');
        }

        Quelle_Book.Close(FALSE);
        Quelle_Excel.Quit;

        CLEAR(Quelle_Sheet);
        CLEAR(Quelle_Book);
        CLEAR(Quelle_Excel);

        //REPEAT
        //UNTIL ISCLEAR(Quelle_Excel) AND ISCLEAR(Quelle_Book) AND ISCLEAR(Quelle_Sheet);

      END;

      //CHAMPS Servicepreise einspielen fr Artikel, die nicht mehr in der Preisliste sind
      IF auswahl = 5 THEN BEGIN

        // Definiert die zu importierende Datei
        IF CREATE(Quelle_Excel,FALSE,TRUE) THEN BEGIN END ELSE ERROR('Cannot start Excel Application.');
        Quelle_Book := Quelle_Excel.Workbooks._Open(filename,0,TRUE); //Schreibschutz
        Quelle_j:='1';

        Quelle_Sheet := Quelle_Excel.Worksheets.Item('Cover');
        PL_Version := '-old_' + CONVERTSTR(FORMAT(Quelle_Sheet.Range('G8').Value),'.','_');
        IF FORMAT(Quelle_Sheet.Range('G10').Value) <> 'CHAMPS' THEN BEGIN
          Quelle_Book.Close;
          ERROR('Dies ist keine AudioCodes CHAMPS Preisliste.');
        END;
        IF UPPERCASE(FORMAT(Quelle_Sheet.Range('G9').Value)) = 'EURO' THEN
          PL_W„h := ''
        ELSE
          PL_W„h := UPPERCASE(FORMAT(Quelle_Sheet.Range('G9').Value));

        Quelle_Sheet := Quelle_Excel.Worksheets.Item('Uploadable Flat Price Book');
        IF FORMAT(Quelle_Sheet.Range('G1').Value) <> 'MSRP EUR' THEN BEGIN
          Quelle_Book.Close;
          ERROR('Fehlerhafte Syntax in der System Preisliste > Spalte G muss MSRP EUR sein.');
        END;

        Kreditor.GET(Kred_EURO);
        IF PL_W„h = 'USD' THEN
          IF PL_W„h <> Kreditor."Currency Code" THEN BEGIN
            Quelle_Book.Close;
            ERROR(Text001,Kred_EURO);
          END;

        //********************************************************************************************
        //                               Definiert die Protokolldatei
        //********************************************************************************************

        CREATE(Protokoll_Excel,FALSE,TRUE);                                    // erzeugt excel
        Protokoll_Book := Protokoll_Excel.Workbooks.Add(-4167);                // legt neue datei in excel an
        Protokoll_Sheet := Protokoll_Excel.ActiveSheet;                        // definiert aktives worksheet
        Protokoll_j:='2';

        Protokoll_Sheet.Range('A'+'1').Value := 'Artikelnr';                   // šberschriften der 2. Datei
        Protokoll_Sheet.Range('A:A').ColumnWidth := 20;
        Protokoll_Sheet.Range('B'+'1').Value := 'Service Artikelnr';
        Protokoll_Sheet.Range('B:B').ColumnWidth := 20;
        Protokoll_Sheet.Range('C'+'1').Value := 'MSRP alt';
        Protokoll_Sheet.Range('D'+'1').Value := 'MSRP neu';
        Protokoll_Sheet.Range('E'+'1').Value := 'Differenz';
        Protokoll_Sheet.Range('A1:E1').Interior.ColorIndex := 15;
        Protokoll_Sheet.Range('A1:E1').Font.Bold := TRUE;

        Servicepreise.RESET;
        Servicepreise.SETRANGE(Art,Servicepreise.Art::Champs);
        Servicepreise.SETRANGE("Zuordnung obsolete",FALSE);
        Servicepreise.SETRANGE(W„hrungscode,PL_W„h);
        Servicepreise.SETRANGE("Update letzte Preisliste",FALSE);
        Servicepreise.SETFILTER(Preisliste,'<>%1','SCHAEFFLER');
        IF Servicepreise.FIND('-') THEN
          REPEAT
            excel_msrp := 0;
            cell_part := FindRow(Servicepreise."Service Artikelnr.",'Cell','A','Z');
            cell_msrp := CONVERTSTR(cell_part,'D','G');
            IF (cell_part <> '') AND (cell_msrp <> '') THEN BEGIN
              IF FORMAT(Quelle_Sheet.Range(cell_msrp).Value) <> 'Quotation' THEN BEGIN
                IF FORMAT(Quelle_Sheet.Range(cell_msrp).Value) <> '' THEN
                  EVALUATE(excel_msrp,FORMAT(Quelle_Sheet.Range(cell_msrp).Value));
                excel_msrp := ROUND(excel_msrp,0.01);
                IF excel_msrp <> Servicepreise.MSRP THEN BEGIN
                  Protokoll_Excel.Range('A'+ Protokoll_j).Value := Servicepreise."Artikelnr. 2";
                  Protokoll_Excel.Range('B'+ Protokoll_j).Value := Servicepreise."Service Artikelnr.";
                  Protokoll_Excel.Range('C'+ Protokoll_j).Value := FORMAT(Servicepreise.MSRP);
                  Protokoll_Excel.Range('D'+ Protokoll_j).Value := FORMAT(excel_msrp);
                  Protokoll_Excel.Range('E'+ Protokoll_j).Value := FORMAT(excel_msrp - Servicepreise.MSRP);
                  IF  Servicepreise.MSRP > excel_msrp THEN
                    Protokoll_Sheet.Range('E'+ Protokoll_j).Font.Color := '-11489280'; //grn
                  IF  Servicepreise.MSRP < excel_msrp THEN
                    Protokoll_Sheet.Range('E'+ Protokoll_j).Font.Color := '-16776961'; //rot
                  Protokoll_j := INCSTR(Protokoll_j);
                  Servicepreise.MSRP := excel_msrp;
                  IF STRPOS(Servicepreise.Preisliste,'-') > 0 THEN
                    Servicepreise.Preisliste := COPYSTR(Servicepreise.Preisliste,1,STRPOS(Servicepreise.Preisliste,'-') -1) +
                                                PL_Version
                  ELSE
                    Servicepreise.Preisliste := Servicepreise.Preisliste + PL_Version;
                  Servicepreise.MODIFY(TRUE);
                  ge„nderte_eintr„ge += 1;
                END;
              END;
            END;

          UNTIL Servicepreise.NEXT = 0;

        Protokoll_Excel.Visible(TRUE);

        Quelle_Book.Close(FALSE);
        //Quelle_Excel.Quit;

        CLEAR(Quelle_Sheet);
        CLEAR(Quelle_Book);
        CLEAR(Quelle_Excel);

      END;

      //ACTS Servicepreise einspielen fr Artikel, die nicht mehr in der Preisliste sind
      IF auswahl = 6 THEN BEGIN

        // Definiert die zu importierende Datei
        IF CREATE(Quelle_Excel,FALSE,TRUE) THEN BEGIN END ELSE ERROR('Cannot start Excel Application.');
        Quelle_Book := Quelle_Excel.Workbooks._Open(filename,0,TRUE); //Schreibschutz
        Quelle_j:='1';

        Quelle_Sheet := Quelle_Excel.Worksheets.Item('Cover');
        PL_Version := '-old_' + CONVERTSTR(FORMAT(Quelle_Sheet.Range('G8').Value),'.','_');
        IF FORMAT(Quelle_Sheet.Range('G10').Value) <> 'ACTS' THEN BEGIN
          Quelle_Book.Close;
          ERROR('Dies ist keine AudioCodes ACTS Preisliste.');
        END;
        IF UPPERCASE(FORMAT(Quelle_Sheet.Range('G9').Value)) = 'EURO' THEN
          PL_W„h := ''
        ELSE
          PL_W„h := UPPERCASE(FORMAT(Quelle_Sheet.Range('G9').Value));

        Quelle_Sheet := Quelle_Excel.Worksheets.Item('Uploadable Flat Price Book');
        IF FORMAT(Quelle_Sheet.Range('G1').Value) <> 'MSRP EUR' THEN BEGIN
          Quelle_Book.Close;
          ERROR('Fehlerhafte Syntax in der System Preisliste > Spalte G muss MSRP EUR sein.');
        END;

        Kreditor.GET(Kred_EURO);
        IF PL_W„h = 'USD' THEN
          IF PL_W„h <> Kreditor."Currency Code" THEN BEGIN
            Quelle_Book.Close;
            ERROR(Text001,Kred_EURO);
          END;

        //********************************************************************************************
        //                               Definiert die Protokolldatei
        //********************************************************************************************

        CREATE(Protokoll_Excel,FALSE,TRUE);                                    // erzeugt excel
        Protokoll_Book := Protokoll_Excel.Workbooks.Add(-4167);                // legt neue datei in excel an
        Protokoll_Sheet := Protokoll_Excel.ActiveSheet;                        // definiert aktives worksheet
        Protokoll_j:='2';

        Protokoll_Sheet.Range('A'+'1').Value := 'Artikelnr';                   // šberschriften der 2. Datei
        Protokoll_Sheet.Range('A:A').ColumnWidth := 20;
        Protokoll_Sheet.Range('B'+'1').Value := 'Service Artikelnr';
        Protokoll_Sheet.Range('B:B').ColumnWidth := 20;
        Protokoll_Sheet.Range('C'+'1').Value := 'MSRP alt';
        Protokoll_Sheet.Range('D'+'1').Value := 'MSRP neu';
        Protokoll_Sheet.Range('E'+'1').Value := 'Differenz';
        Protokoll_Sheet.Range('A1:E1').Interior.ColorIndex := 15;
        Protokoll_Sheet.Range('A1:E1').Font.Bold := TRUE;

        Servicepreise.RESET;
        Servicepreise.SETRANGE(Art,Servicepreise.Art::ACTS);
        Servicepreise.SETRANGE("Zuordnung obsolete",FALSE);
        Servicepreise.SETRANGE(W„hrungscode,PL_W„h);
        Servicepreise.SETRANGE("Update letzte Preisliste",FALSE);
        Servicepreise.SETFILTER(Preisliste,'<>%1','SCHAEFFLER');
        IF Servicepreise.FIND('-') THEN
          REPEAT
            excel_msrp := 0;
            cell_part := FindRow(Servicepreise."Service Artikelnr.",'Cell','A','Z');
            cell_msrp := CONVERTSTR(cell_part,'D','G');
            IF (cell_part <> '') AND (cell_msrp <> '') THEN BEGIN
              IF FORMAT(Quelle_Sheet.Range(cell_msrp).Value) <> 'Quotation' THEN BEGIN
                IF FORMAT(Quelle_Sheet.Range(cell_msrp).Value) <> '' THEN
                  EVALUATE(excel_msrp,FORMAT(Quelle_Sheet.Range(cell_msrp).Value));
                excel_msrp := ROUND(excel_msrp,0.01);
                IF excel_msrp <> Servicepreise.MSRP THEN BEGIN
                  Protokoll_Excel.Range('A'+ Protokoll_j).Value := Servicepreise."Artikelnr. 2";
                  Protokoll_Excel.Range('B'+ Protokoll_j).Value := Servicepreise."Service Artikelnr.";
                  Protokoll_Excel.Range('C'+ Protokoll_j).Value := FORMAT(Servicepreise.MSRP);
                  Protokoll_Excel.Range('D'+ Protokoll_j).Value := FORMAT(excel_msrp);
                  Protokoll_Excel.Range('E'+ Protokoll_j).Value := FORMAT(excel_msrp - Servicepreise.MSRP);
                  IF  Servicepreise.MSRP > excel_msrp THEN
                    Protokoll_Sheet.Range('E'+ Protokoll_j).Font.Color := '-11489280'; //grn
                  IF  Servicepreise.MSRP < excel_msrp THEN
                    Protokoll_Sheet.Range('E'+ Protokoll_j).Font.Color := '-16776961'; //rot
                  Protokoll_j := INCSTR(Protokoll_j);
                  Servicepreise.MSRP := excel_msrp;
                  IF STRPOS(Servicepreise.Preisliste,'-') > 0 THEN
                    Servicepreise.Preisliste := COPYSTR(Servicepreise.Preisliste,1,STRPOS(Servicepreise.Preisliste,'-') -1) +
                                                PL_Version
                  ELSE
                    Servicepreise.Preisliste := Servicepreise.Preisliste + PL_Version;
                  Servicepreise.MODIFY(TRUE);
                  ge„nderte_eintr„ge += 1;
                END;
              END;
            END;
          UNTIL Servicepreise.NEXT = 0;

        Protokoll_Excel.Visible(TRUE);

        Quelle_Book.Close(FALSE);
        //Quelle_Excel.Quit;

        CLEAR(Quelle_Sheet);
        CLEAR(Quelle_Book);
        CLEAR(Quelle_Excel);

      END;


      IF PL_W„h = '' THEN
        w„h_text := 'EURO';
      IF PL_W„h = 'USD' THEN
        w„h_text := 'USD';

      CASE auswahl OF
        1..4 :
          BEGIN
            IF auswahl = 1 THEN PL_Bezeichnung := 'CHAMPS ' + w„h_text;
            IF auswahl = 2 THEN PL_Bezeichnung := 'ACTS ' + w„h_text;
            IF auswahl = 3 THEN PL_Bezeichnung := 'System ' + w„h_text;
            IF auswahl = 4 THEN PL_Bezeichnung := 'ACTS Schaeffler';
            MESSAGE('Import der %1 Artikel abgeschlossen.'+ '\' + 'Neue bzw. ge„nderte Datens„tze: %2\\'+
           'Excel Datens„tze: %3\Obsolete Bezeichnungen: %4 (korrigiert: %5)'
           ,PL_Bezeichnung,ge„nderte_eintr„ge,excel_datens„tze,obsolete_eintr„ge,obsolete_korrigiert);
          END;
        5..6 : MESSAGE('Import der Servicepreise abgeschlossen.'+ '\' + 'Neue bzw. ge„nderte Datens„tze: %1',ge„nderte_eintr„ge);
      END;
    END;

    PROCEDURE FindRow@1140013(What@1140000 : Text[80];Art@1140001 : Text[30];Col1@1140006 : Text[30];Col2@1140008 : Text[30]) : Text[30];
    VAR
      Range1@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Cell@1140003 : Code[40];
      i@1140007 : Integer;
    BEGIN
      WITH Quelle_Sheet.Range(Col1 + ':' + Col2) DO BEGIN
        i := 1;
        Range1 :=
        (Quelle_Sheet.Columns.Find(
          What));
        // Wird der Suchbegriff nicht gefunden, steigt er sofort aus den Schleifen aus
        IF ISCLEAR(Range1) THEN EXIT('');
        IF FORMAT(Range1.Value) <> What THEN
          Range1 := Quelle_Sheet.Rows.FindNext(Range1);
        IF FORMAT(Range1.Value) <> What THEN EXIT('');
        Cell := Range1.Address;
        CASE Art OF
          'Row' : EVALUATE(Cell,FORMAT(TOPAS_API.ConvertStrToNum(Cell)));
          'Column' : EVALUATE(Cell,COPYSTR(Cell,2,STRPOS(COPYSTR(Cell,2),'$')-1));
        END;
        EXIT(Cell);
      END;
    END;

    EVENT Protokoll_Sheet@1000000002::SelectionChange@1543(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::BeforeDoubleClick@1537(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::BeforeRightClick@1534(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::Activate@304();
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::Deactivate@1530();
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::Calculate@279();
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::Change@1545(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::FollowHyperlink@1470(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::PivotTableUpdate@2156(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::PivotTableAfterValueChange@2886(TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::PivotTableBeforeAllocateChanges@2889(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Protokoll_Sheet@1000000002::PivotTableChangeSync@2894(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::Open@1923();
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::Activate@304();
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::Deactivate@1530();
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::BeforeClose@1546(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::BeforeSave@1547(SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::BeforePrint@1549(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::NewSheet@1550(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::AddinInstall@1552();
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::WindowResize@1554(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::WindowActivate@1556(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::WindowDeactivate@1557(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::PivotTableCloseConnection@2158(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::PivotTableOpenConnection@2159(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::Sync@2266(SyncEventType@1000000000 : Integer);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::BeforeXmlImport@2283(Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::AfterXmlImport@2285(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::BeforeXmlExport@2287(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::AfterXmlExport@2288(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::RowsetComplete@2610(Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::SheetPivotTableChangeSync@2899(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::AfterSave@2900(Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Book@1000000003::NewChart@2901(Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::NewWorkbook@1565(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookOpen@1567(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookActivate@1568(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookDeactivate@1569(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookBeforeClose@1570(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookBeforeSave@1571(Wb@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookBeforePrint@1572(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookNewSheet@1573(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookAddinInstall@1574(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookAddinUninstall@1575(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WindowResize@1554(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WindowActivate@1556(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WindowDeactivate@1557(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookPivotTableCloseConnection@2160(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookPivotTableOpenConnection@2161(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookSync@2289(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SyncEventType@1000000000 : Integer);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookBeforeXmlImport@2290(Wb@1000000004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookAfterXmlImport@2291(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookBeforeXmlExport@2292(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookAfterXmlExport@2293(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookRowsetComplete@2611(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::AfterCalculate@2612();
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::ProtectedViewWindowOpen@2903(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::ProtectedViewWindowBeforeEdit@2905(Pvw@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::ProtectedViewWindowBeforeClose@2906(Pvw@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";Reason@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::ProtectedViewWindowResize@2908(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::ProtectedViewWindowActivate@2909(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::ProtectedViewWindowDeactivate@2910(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookAfterSave@2911(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Protokoll_Excel@1000000004::WorkbookNewChart@2912(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::SelectionChange@1543(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::BeforeDoubleClick@1537(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::BeforeRightClick@1534(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::Activate@304();
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::Deactivate@1530();
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::Calculate@279();
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::Change@1545(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::FollowHyperlink@1470(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::PivotTableUpdate@2156(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::PivotTableAfterValueChange@2886(TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::PivotTableBeforeAllocateChanges@2889(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Sheet@1000000006::PivotTableChangeSync@2894(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::Open@1923();
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::Activate@304();
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::Deactivate@1530();
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::BeforeClose@1546(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::BeforeSave@1547(SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::BeforePrint@1549(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::NewSheet@1550(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::AddinInstall@1552();
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::WindowResize@1554(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::WindowActivate@1556(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::WindowDeactivate@1557(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::PivotTableCloseConnection@2158(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::PivotTableOpenConnection@2159(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::Sync@2266(SyncEventType@1000000000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::BeforeXmlImport@2283(Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::AfterXmlImport@2285(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::BeforeXmlExport@2287(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::AfterXmlExport@2288(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::RowsetComplete@2610(Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::SheetPivotTableChangeSync@2899(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::AfterSave@2900(Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Book@1000000007::NewChart@2901(Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::NewWorkbook@1565(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookOpen@1567(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookActivate@1568(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookDeactivate@1569(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookBeforeClose@1570(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookBeforeSave@1571(Wb@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookBeforePrint@1572(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookNewSheet@1573(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookAddinInstall@1574(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookAddinUninstall@1575(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WindowResize@1554(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WindowActivate@1556(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WindowDeactivate@1557(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Window");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Hyperlink");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookPivotTableCloseConnection@2160(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookPivotTableOpenConnection@2161(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookSync@2289(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";SyncEventType@1000000000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookBeforeXmlImport@2290(Wb@1000000004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookAfterXmlImport@2291(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookBeforeXmlExport@2292(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookAfterXmlExport@2293(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookRowsetComplete@2611(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::AfterCalculate@2612();
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Range");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::ProtectedViewWindowOpen@2903(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::ProtectedViewWindowBeforeEdit@2905(Pvw@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::ProtectedViewWindowBeforeClose@2906(Pvw@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow";Reason@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::ProtectedViewWindowResize@2908(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::ProtectedViewWindowActivate@2909(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::ProtectedViewWindowDeactivate@2910(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookAfterSave@2911(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Quelle_Excel@1000000008::WorkbookNewChart@2912(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Workbook";Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:'Microsoft Excel 14.0 Object Library'.Chart");
    BEGIN
    END;

    BEGIN
    END.
  }
}

