OBJECT Page 50096 Seriennummer Suche
{
  OBJECT-PROPERTIES
  {
    Date=17.08.20;
    Time=14:47:59;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    ModifyAllowed=No;
    SourceTable=Table50024;
    DataCaptionExpr='';
    DelayedInsert=Yes;
    PromotedActionCategoriesML=[DEU=Neu,Vorgang,Bericht,Navigation;
                                ENU=New,Process,Report,Navigate];
    OnOpenPage=BEGIN
                 Datenblatt_leeren;

                 postennr := 0;

                 Prfe_Autorun;

                 IF GETFILTER("Seriennr.") <> '' THEN BEGIN
                   Eingabe := GETFILTER("Seriennr.");
                   postennr := 0;
                   durchlauf := 0;
                   Beginne_Suche(Eingabe);
                 END;
               END;

    ActionList=ACTIONS
    {
      { 1900000000;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1       ;1   ;ActionGroup;
                      CaptionML=[DEU=Allgmein;
                                 ENU=General] }
      { 1140002 ;2   ;Action    ;
                      Name=Suche;
                      CaptionML=DEU=Suche;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Navigate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 postennr := 0;
                                 durchlauf := 0;
                                 Beginne_Suche(Eingabe);
                               END;
                                }
      { 1140050 ;2   ;Action    ;
                      Name=btn_next;
                      CaptionML=DEU=Next;
                      Promoted=Yes;
                      Visible=btn_next_show;
                      PromotedIsBig=Yes;
                      Image=NextRecord;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 Beginne_Suche(Eingabe);
                               END;
                                }
      { 1000000016;2 ;Action    ;
                      Name=btn_fileserver_search;
                      CaptionML=DEU=Dateiserver Suche;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Server;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 WSHScript@1140000 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
                               BEGIN
                                 CREATE(WSHScript,FALSE,TRUE);
                                 WSHScript.Exec('"H:\software\TOPAS eigen\FindInFiles\FindInFiles.exe" ' + Eingabe + ' "file://WIN-FILESRV/Doku/"');
                                 CLEAR(WSHScript);
                               END;
                                }
      { 1000000015;  ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1000000014;1 ;ActionGroup;
                      CaptionML=DEU=Navigation }
      { 1140044 ;2   ;Action    ;
                      Name=btn_shipment;
                      CaptionML=DEU=Verkaufslieferung;
                      Promoted=Yes;
                      Image=Shipment;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 Lieferschein.GET(vk_belegnr);
                                 PAGE.RUN(130,Lieferschein);
                               END;
                                }
      { 1140045 ;2   ;Action    ;
                      Name=btn_rcpt;
                      CaptionML=DEU=Einkaufslieferung;
                      Promoted=Yes;
                      Image=Receipt;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 PurchRcptHeader.GET(ek_belegnr);
                                 PAGE.RUN(136,PurchRcptHeader);
                               END;
                                }
      { 1140047 ;2   ;Action    ;
                      Name=btn_itemcard;
                      CaptionML=DEU=Artikelkarte;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Item;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 Item.GET(artikelnr);
                                 PAGE.RUN(30,Item);
                               END;
                                }
      { 1140048 ;2   ;Action    ;
                      Name=btn_customer;
                      CaptionML=DEU=Debitor;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Customer;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 debitor.GET(kundennr);
                                 PAGE.RUN(21,debitor);
                               END;
                                }
      { 1140049 ;2   ;Action    ;
                      Name=btn_vendor;
                      CaptionML=DEU=Kreditor;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Vendor;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 kreditor.GET(kreditornr);
                                 PAGE.RUN(26,kreditor);
                               END;
                                }
      { 1140009 ;2   ;Action    ;
                      Name=btn_agreement;
                      CaptionML=DEU=Wartungsvertrag;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ServiceAgreement;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 IF vertragsnr <> '' THEN BEGIN
                                   Wartung.SETFILTER("Wartungsvertragsnr.",alle_vertragsnr);
                                   PAGE.RUN(50015,Wartung);
                                 END;
                               END;
                                }
      { 1140058 ;2   ;Action    ;
                      Name=btn_rma_open;
                      CaptionML=DEU=RMA;
                      Promoted=Yes;
                      Image=ReturnOrder;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 {
                                 IF rmanr <> '' THEN BEGIN
                                   RMA.GET(rmanr);
                                   IF RMA."Status-Abgeschlossen" THEN
                                     PAGE.RUN(50088,RMA)
                                   ELSE
                                     PAGE.RUN(50075,RMA);
                                 END;
                                 }

                                 IF rmanr <> '' THEN BEGIN
                                   RMA.SETFILTER("RMA-Nr.",rmanr);
                                   PAGE.RUN(50075,RMA);
                                 END;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000;0;Container ;
                ContainerType=ContentArea }

    { 1000000004;1;Group  ;
                CaptionML=DEU=Seriennr.-,Product Key- oder Board ini - Suche;
                GroupType=Group }

    { 1140000;2;Field     ;
                Name=Eingabe;
                ToolTipML=DEU=Bitte die vollst„ndige Seriennummer eingeben.;
                SourceExpr=Eingabe }

    { 1000000011;2;Group  ;
                Editable=FALSE;
                GroupType=Group }

    { 1000000018;3;Group  ;
                Visible=hinweis_text <> '';
                GroupType=Group }

    { 1000000017;4;Field  ;
                Name=Hinweistext;
                SourceExpr=hinweis_text;
                Visible=hinweis_text <> '';
                Editable=FALSE;
                Style=Unfavorable;
                StyleExpr=TRUE;
                ShowCaption=No }

    { 1000000013;3;Group  ;
                Visible=feldinfo_text <> '';
                Editable=FALSE;
                GroupType=Group }

    { 1000000010;4;Field  ;
                Name=Feld Info;
                SourceExpr=feldinfo_text;
                Editable=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE;
                ShowCaption=No }

    { 1000000009;1;Group  ;
                CaptionML=DEU=Allgemeine Informationen;
                GroupType=Group }

    { 1000000007;2;Group  ;
                Editable=FALSE;
                GroupType=Group }

    { 1140022;3;Field     ;
                Name=nav_system;
                CaptionML=DEU=Navision System;
                SourceExpr=nav_system }

    { 1140023;3;Field     ;
                Name=artikelnr;
                CaptionML=DEU=Artikelnr.;
                SourceExpr=artikelnr }

    { 1140031;3;Field     ;
                Name=seriennr;
                CaptionML=DEU=Seriennr.;
                SourceExpr=seriennr }

    { 1000000020;3;Field  ;
                Name=productykey;
                CaptionML=DEU=Product Key;
                SourceExpr=productkey }

    { 1000000008;2;Group  ;
                Editable=FALSE;
                GroupType=Group }

    { 1140017;3;Field     ;
                Name=kundennr;
                CaptionML=DEU=Kundennr.;
                SourceExpr=kundennr }

    { 1140025;3;Field     ;
                Name=kundenname;
                CaptionML=DEU=Kundenname;
                SourceExpr=kundenname }

    { 1000000001;3;Field  ;
                Name=kreditornr;
                CaptionML=DEU=Kreditornr.;
                SourceExpr=kreditornr }

    { 1000000000;3;Field  ;
                Name=kreditorname;
                CaptionML=DEU=Kreditorname;
                SourceExpr=kreditorname }

    { 1000000006;1;Group  ;
                CaptionML=DEU=Umlagerungsdetails;
                Visible=(uml_text <> '') OR (uml_text2 <> '');
                Editable=FALSE;
                GroupType=Group }

    { 1140051;2;Field     ;
                Name=umltext;
                CaptionML=DEU=Umlagerungsinfo;
                SourceExpr=uml_text;
                Visible=uml_text <> '' }

    { 1140055;2;Field     ;
                Name=umltext2;
                CaptionML=DEU=Umlagerungsinfo2;
                SourceExpr=uml_text2;
                Visible=uml_text2 <> '' }

    { 1000000005;1;Group  ;
                CaptionML=DEU=Belegdetails;
                GroupType=Group }

    { 1000000002;2;Group  ;
                CaptionML=DEU=Verkauf;
                Editable=FALSE;
                GroupType=Group }

    { 1140015;3;Field     ;
                Name=vk_belegnr;
                CaptionML=DEU=Lieferscheinnr.;
                SourceExpr=vk_belegnr }

    { 1140016;3;Field     ;
                Name=vk_datum;
                CaptionML=DEU=Belegdatum;
                SourceExpr=vk_datum }

    { 1140033;3;Field     ;
                Name=ext_belegnr;
                CaptionML=DEU=Ext. Belegnr.;
                SourceExpr=ext_belegnr }

    { 1140054;3;Field     ;
                Name=vk_artpostennr_;
                CaptionML=DEU=Artikelpostennr.;
                SourceExpr=vk_artpostennr }

    { 1000000003;2;Group  ;
                CaptionML=DEU=Einkauf;
                Editable=FALSE;
                GroupType=Group }

    { 1000000021;3;Field  ;
                Name=ek_posten_art;
                CaptionML=DEU=Postenart;
                SourceExpr=ek_posten_art }

    { 1140029;3;Field     ;
                Name=ek_belegnr;
                CaptionML=DEU=Belegnr.;
                SourceExpr=ek_belegnr }

    { 1140042;3;Field     ;
                Name=bet_nr;
                CaptionML=DEU=BET;
                SourceExpr=bet_nr }

    { 1140027;3;Field     ;
                Name=ek_datum;
                CaptionML=DEU=Belegdatum;
                SourceExpr=ek_datum }

    { 1140035;3;Field     ;
                Name=kred_po;
                CaptionML=DEU=PO;
                SourceExpr=kred_po }

    { 1140037;3;Field     ;
                Name=kred_rcptno;
                CaptionML=DEU=Rcpt. No.;
                SourceExpr=kred_rcptno }

    { 1140052;3;Field     ;
                Name=ek_artpostennr;
                CaptionML=DEU=Artikelpostennr.;
                SourceExpr=ek_artpostennr }

    { 1000000019;1;Group  ;
                CaptionML=DEU=Wartungsvertrags Informationen;
                Visible=vertragsnr <> '';
                GroupType=Group }

    { 1900001;2;Group     ;
                Visible=group_extra_wv_show;
                Editable=FALSE;
                GroupType=Group }

    { 1140006;3;Field     ;
                Name=txt_vertragsnr;
                CaptionML=DEU=Wartungsvertragsnr.;
                SourceExpr=vertragsnr;
                StyleExpr=VertragsnrStyle }

    { 1140007;3;Field     ;
                Name=txt_ablaufdatum;
                CaptionML=DEU=Ablaufdatum;
                SourceExpr=ablaufdatum }

    { 1000000012;2;Group  ;
                Visible=alle_vertragsnr_show;
                GroupType=Group }

    { 1140010;3;Field     ;
                Name=txt_alle_vertragsnr;
                CaptionML=DEU=Alle Vertragsnr.;
                SourceExpr=alle_vertragsnr;
                Editable=FALSE }

    { 1140008;3;Field     ;
                Name=txt_wartungsverknpfungen;
                CaptionML=DEU=Anzahl Vertragszuordnungen;
                SourceExpr=wartungsverknpfungen;
                Editable=FALSE }

    { 1900002;1;Group     ;
                CaptionML=DEU=RMA Informationen;
                Visible=group_extra_rma_show;
                GroupType=Group }

    { 1140056;2;Field     ;
                Name=rmanr;
                CaptionML=DEU=RMA-Nr.;
                SourceExpr=rmanr;
                Editable=FALSE }

    { 1140059;2;Field     ;
                Name=txt_rma;
                CaptionML=DEU=RMA Grund;
                SourceExpr=rma_text;
                Editable=FALSE }

    { 1000000022;2;Field  ;
                CaptionML=DEU=RMA Ersatzartikel;
                SourceExpr=rma_ersatz_artikel;
                Visible=rma_ersatz_artikel <> '';
                Editable=FALSE }

    { 1000000023;2;Field  ;
                CaptionML=DEU=RMA Ersatz Seriennr.;
                SourceExpr=rma_ersatz_seriennr;
                Visible=rma_ersatz_seriennr <> '';
                Editable=FALSE }

  }
  CODE
  {
    VAR
      Eingabe@1140000 : Text[60];
      Eingabe_2@1140003 : Text[60];
      Eingabe_3@1140005 : Text[60];
      Hersteller@1140001 : Code[10];
      artikelverfolgung@1140002 : Record 32;
      a@1140004 : Decimal;
      nichtgefunden@1140006 : Boolean;
      postennr@1140039 : Integer;
      durchlauf@1140040 : Integer;
      Art_NAV_50@1140007 : Record 50018;
      debitor@1140008 : Record 18;
      kreditor@1140037 : Record 23;
      Item@1140036 : Record 27;
      Lieferschein@1140030 : Record 110;
      PurchRcptHeader@1140032 : Record 120;
      RMA@1140015 : Record 50020;
      RMA_Ersatz@1000000013 : Record 50021;
      RMA_beteiligte@1140010 : Record 50022;
      Wartung@1140013 : Record 50011;
      LizenzTab@1140011 : Record 50024;
      Berichtstabelle@1140038 : Record 50037;
      Beleghistorie@1000000009 : Record 50008;
      nav_system@1140027 : Text[30];
      kundennr@1140023 : Code[20];
      kundenname@1140024 : Text[50];
      kreditornr@1140025 : Code[20];
      kreditorname@1140026 : Text[50];
      seriennr@1140028 : Code[60];
      productkey@1000000007 : Code[60];
      vk_belegnr@1140016 : Code[20];
      ek_belegnr@1140017 : Code[20];
      vk_datum@1140019 : Date;
      ek_datum@1140020 : Date;
      ext_belegnr@1140029 : Code[35];
      kred_po@1140022 : Code[35];
      kred_rcptno@1140021 : Code[35];
      bet_nr@1140031 : Code[20];
      artikelnr@1140018 : Code[20];
      vertragsnr@1140012 : Code[20];
      ablaufdatum@1140044 : Date;
      rmanr@1140014 : Code[80];
      rma_ersatz_artikel@1000000011 : Code[40];
      rma_ersatz_seriennr@1000000012 : Code[60];
      vk_artpostennr@1140042 : Integer;
      ek_artpostennr@1140041 : Integer;
      ek_posten_art@1000000010 : Text;
      rma_text@1140035 : Text[50];
      Text000@1140034 : TextConst 'DEU=RMA: %1\\Kunde: %2 / %3\Ersatz fr Belegnr.: %4\Eingangsdatum: %5\Reklamierte Seriennr.: %6';
      uml_text@1140033 : Text[50];
      uml_text2@1140043 : Text[100];
      alle_vertragsnr@1140046 : Code[80];
      wartungsverknpfungen@1140045 : Integer;
      feldinfo_text@1000000000 : Text;
      hinweis_text@1000000001 : Text;
      btn_next_show@1000000002 : Boolean;
      group_extra_wv_show@1000000003 : Boolean;
      group_extra_rma_show@1000000004 : Boolean;
      alle_vertragsnr_show@1000000005 : Boolean;
      VertragsnrStyle@1000000006 : Text;
      board_ini@1000000008 : Boolean;

    PROCEDURE Prfe_Autorun@1140010();
    BEGIN
      Berichtstabelle.RESET;
      Berichtstabelle.SETFILTER(Index,'%1','SN_SUCHE');
      Berichtstabelle.SETFILTER(User,'%1',USERID);
      IF Berichtstabelle.FINDFIRST THEN BEGIN
        Eingabe := Berichtstabelle."Feld 1";
        Beginne_Suche(Eingabe);

        //*******************************************************************************************************
        //                    Sicherheitsabfrage ob Temp Tabelle auch Berichtstabelle ist
        //*******************************************************************************************************

        IF Berichtstabelle.TABLECAPTION <> 'Berichtstabelle' THEN
          ERROR('Eine Sicherheitssperre verhindert die Ausfhrung dieses Berichtes.'+
                'Stellen Sie sicher, dass die TABLECAPTION der Berichtstabelle auch auf Berichtstabelle lautet.');
        Berichtstabelle.DELETEALL;
      END ELSE
        EXIT;
    END;

    PROCEDURE Beginne_Suche@1140000(Eingabe@1140000 : Text[60]);
    VAR
      RMA_zeile@1140001 : Record 50021;
    BEGIN
      Datenblatt_leeren;
      nichtgefunden := TRUE;
      Eingabe := UPPERCASE(Eingabe);

      //******************************************* Serial No. Suche *******************************************
      IF STRLEN(Eingabe) <= 18 THEN BEGIN
        artikelverfolgung.RESET();
        //Eingabe 1:1 suchen
        IF postennr > 0 THEN
          artikelverfolgung.SETFILTER("Entry No.",'<%1',postennr);
        artikelverfolgung.SETFILTER("Document Type",'<>%1',artikelverfolgung."Document Type"::"Sales Credit Memo");
        artikelverfolgung.SETFILTER("Serial No.",'%1',Eingabe);
        IF (artikelverfolgung.FINDLAST()) AND (Eingabe <> '') AND (Eingabe <> ' ') THEN BEGIN
          Pruefe_Vorgaenger5(artikelverfolgung,artikelverfolgung.COUNT);

          VK_daten_ermitteln(artikelverfolgung);
          EK_daten_ermitteln(artikelverfolgung);
          nichtgefunden := FALSE;
        END ELSE BEGIN
          nichtgefunden := FALSE;
          Art_NAV_50.RESET();
          // Eingabe 1:1 suchen
          Art_NAV_50.SETFILTER(Type,'%1',Art_NAV_50.Type::Verkauf);
          Art_NAV_50.SETFILTER("Serial No.",'%1','*' + Eingabe + '*');
          IF (Art_NAV_50.FINDLAST()) AND (Eingabe <> '' ) AND (Eingabe <> ' ') THEN BEGIN
            VK_daten26_ermitteln(Art_NAV_50);
          END ELSE BEGIN
            //Eingabe „hnlich 1:1 suchen
            IF postennr > 0 THEN
              artikelverfolgung.SETFILTER("Entry No.",'<%1',postennr);
            artikelverfolgung.SETFILTER("Serial No.",'%1','*' + Eingabe + '*');
            IF (artikelverfolgung.FINDLAST()) AND (Eingabe <> '') AND (Eingabe <> ' ') THEN BEGIN
              Pruefe_Vorgaenger5(artikelverfolgung,artikelverfolgung.COUNT);

              VK_daten_ermitteln(artikelverfolgung);
              EK_daten_ermitteln(artikelverfolgung);
              nichtgefunden := FALSE;
            END ELSE BEGIN
              // l”scht alle Buchstaben und Sonderzeichen aus der Sucheingabe
              Eingabe_2 := DELCHR(Eingabe,'=',' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.-_!();"');
              artikelverfolgung.RESET();
              // Eingabe bereinigt suchen
              IF postennr > 0 THEN
                artikelverfolgung.SETFILTER("Entry No.",'<%1',postennr);
              artikelverfolgung.SETFILTER("Document Type",'<>%1',artikelverfolgung."Document Type"::"Sales Credit Memo");
              artikelverfolgung.SETFILTER("Serial No.",'%1','*' + Eingabe_2 + '*');
              IF (artikelverfolgung.FINDLAST()) AND (Eingabe_2 <> '') AND (Eingabe_2 <> ' ') THEN BEGIN
                Pruefe_Vorgaenger5(artikelverfolgung,artikelverfolgung.COUNT);

                VK_daten_ermitteln(artikelverfolgung);
                EK_daten_ermitteln(artikelverfolgung);
                nichtgefunden := FALSE;
              END ELSE BEGIN
                a := 0;

                // Zwischen die einzelnen Ziffern wird nach und nach ein Leerzeichen eingefgt
                // 1.) 123456, 2.) 1 23456, 3. 12 3456, 4. 123 456 usw.
                REPEAT
                  a += 1;
                  artikelverfolgung.RESET();
                  Eingabe_3 := COPYSTR(Eingabe_2,1,a) + ' ' + COPYSTR(Eingabe_2,a+1,STRLEN(Eingabe_2));
                  //Message(eingabe_3);
                  // Eingabe bereinigt suchen
                  IF postennr > 0 THEN
                    artikelverfolgung.SETFILTER("Entry No.",'<%1',postennr);
                  artikelverfolgung.SETFILTER("Document Type",'<>%1',artikelverfolgung."Document Type"::"Sales Credit Memo");
                  artikelverfolgung.SETFILTER("Serial No.",'%1','*' + Eingabe_3 + '*');
                  IF (artikelverfolgung.FINDLAST()) AND (Eingabe_3 <> '') AND (Eingabe_3 <> ' ') THEN BEGIN
                    Pruefe_Vorgaenger5(artikelverfolgung,artikelverfolgung.COUNT);
                    VK_daten_ermitteln(artikelverfolgung);
                    EK_daten_ermitteln(artikelverfolgung);
                    nichtgefunden := FALSE;
                  END ELSE BEGIN
                    nichtgefunden := TRUE;
                  END;
                UNTIL (artikelverfolgung.FINDLAST()) OR (a >= STRLEN(Eingabe_2)-1);
              END;
            END;
          END;
        END;
      END ELSE
        nichtgefunden := TRUE;


      //******************************************* Product Key Suche *******************************************
      IF nichtgefunden = TRUE THEN BEGIN
        nichtgefunden := FALSE;
        artikelverfolgung.RESET();
        //Eingabe 1:1 suchen
        IF postennr > 0 THEN
          artikelverfolgung.SETFILTER("Entry No.",'<%1',postennr);
        artikelverfolgung.SETFILTER("Document Type",'<>%1',artikelverfolgung."Document Type"::"Sales Credit Memo");
        artikelverfolgung.SETFILTER("Product Key",'%1',Eingabe);
        IF (artikelverfolgung.FINDLAST()) AND (Eingabe <> '') AND (Eingabe <> ' ') THEN BEGIN
          Pruefe_Vorgaenger5(artikelverfolgung,artikelverfolgung.COUNT);
          VK_daten_ermitteln(artikelverfolgung);
          EK_daten_ermitteln(artikelverfolgung);
          feldinfo_text := 'Product Key';
        END ELSE BEGIN
          //Eingabe „nhlich 1:1 suchen
          IF postennr > 0 THEN
            artikelverfolgung.SETFILTER("Entry No.",'<%1',postennr);
          artikelverfolgung.SETFILTER("Product Key",'%1','*' + Eingabe + '*');
          IF (artikelverfolgung.FINDLAST()) AND (Eingabe <> '') AND (Eingabe <> ' ') THEN BEGIN
            Pruefe_Vorgaenger5(artikelverfolgung,artikelverfolgung.COUNT);
            VK_daten_ermitteln(artikelverfolgung);
            EK_daten_ermitteln(artikelverfolgung);
            feldinfo_text := 'Product Key';
          END ELSE BEGIN
            // l”scht alle Buchstaben und Sonderzeichen aus der Sucheingabe
            Eingabe_2 := DELCHR(Eingabe,'=',' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.-_!();"');
            artikelverfolgung.RESET();
            // Eingabe bereinigt suchen
            IF postennr > 0 THEN
              artikelverfolgung.SETFILTER("Entry No.",'<%1',postennr);
            artikelverfolgung.SETFILTER("Document Type",'<>%1',artikelverfolgung."Document Type"::"Sales Credit Memo");
            artikelverfolgung.SETFILTER("Product Key",'%1','*' + Eingabe_2 + '*');
            IF (artikelverfolgung.FINDLAST()) AND (Eingabe_2 <> '') AND (Eingabe_2 <> ' ') THEN BEGIN
              Pruefe_Vorgaenger5(artikelverfolgung,artikelverfolgung.COUNT);
              VK_daten_ermitteln(artikelverfolgung);
              EK_daten_ermitteln(artikelverfolgung);
              feldinfo_text := 'Product Key';
            END ELSE BEGIN
              a := 0;

              // Zwischen die einzelnen Ziffern wird nach und nach ein Leerzeichen eingefgt
              // 1.) 123456, 2.) 1 23456, 3. 12 3456, 4. 123 456 usw.
              REPEAT
                a += 1;
                artikelverfolgung.RESET();
                Eingabe_3 := COPYSTR(Eingabe_2,1,a) + ' ' + COPYSTR(Eingabe_2,a+1,STRLEN(Eingabe_2));
                //Message(eingabe_3);
                // Eingabe bereinigt suchen
                IF postennr > 0 THEN
                  artikelverfolgung.SETFILTER("Entry No.",'<%1',postennr);
                artikelverfolgung.SETFILTER("Document Type",'<>%1',artikelverfolgung."Document Type"::"Sales Credit Memo");
                artikelverfolgung.SETFILTER("Product Key",'%1','*' + Eingabe_3 + '*');
                IF (artikelverfolgung.FINDLAST()) AND (Eingabe_3 <> '') AND (Eingabe_3 <> ' ') THEN BEGIN
                  Pruefe_Vorgaenger5(artikelverfolgung,artikelverfolgung.COUNT);
                  VK_daten_ermitteln(artikelverfolgung);
                  EK_daten_ermitteln(artikelverfolgung);
                  feldinfo_text := 'Product Key';
                  nichtgefunden := FALSE;
                END ELSE BEGIN
                  nichtgefunden := TRUE;
                END;
              UNTIL (artikelverfolgung.FINDLAST()) OR (a >= STRLEN(Eingabe_2)-1);
            END;
          END;
        END;
      END;



      {
      //******************* Seriennr. Suche in Artikelverfolung Historie aus NAV 5.0 oder „lter *******************
      IF nichtgefunden = TRUE THEN BEGIN
        nichtgefunden := FALSE;
        Art_NAV_50.RESET();
        // Eingabe 1:1 suchen
        Art_NAV_50.SETFILTER(Type,'%1',Art_NAV_50.Type::Verkauf);
        Art_NAV_50.SETFILTER("Serial No.",'%1','*' + Eingabe + '*');
        IF (Art_NAV_50.FINDLAST()) AND (Eingabe <> '' ) AND (Eingabe <> ' ') THEN BEGIN
          VK_daten26_ermitteln(Art_NAV_50);
        END ELSE BEGIN
          // l”scht alle Buchstaben und Sonderzeichen aus der Sucheingabe
          Eingabe_2 := DELCHR(Eingabe,'=',' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.-_!();:"');
          Art_NAV_50.RESET();
          // Eingabe bereinigt suchen
          Art_NAV_50.SETFILTER("Serial No.",'%1','*' + Eingabe_2 + '*');
          Art_NAV_50.SETFILTER(Type,'%1',Art_NAV_50.Type::Verkauf);
          IF (Art_NAV_50.FINDLAST()) AND (Eingabe_2 <> '') AND (Eingabe_2 <> ' ') THEN BEGIN
            VK_daten26_ermitteln(Art_NAV_50);
          END ELSE BEGIN
            a := 0;

            // Zwischen die einzelnen Ziffern wird nach und nach ein Leerzeichen eingefgt
            // 1.) 123456, 2.) 1 23456, 3. 12 3456, 4. 123 456 usw.
            REPEAT
              a += 1;
              Art_NAV_50.RESET();
              Eingabe_3 := COPYSTR(Eingabe_2,1,a)+' '+COPYSTR(Eingabe_2,a+1,STRLEN(Eingabe_2));
              //Message(eingabe_3);
              // Eingabe bereinigt suchen
              Art_NAV_50.SETFILTER("Serial No.",'%1','*' + Eingabe_3 + '*');
              Art_NAV_50.SETFILTER(Type,'%1',Art_NAV_50.Type::Verkauf);
              IF (Art_NAV_50.FINDLAST()) AND (Eingabe_3 <> '') AND (Eingabe_3 <> ' ') THEN BEGIN
                VK_daten26_ermitteln(Art_NAV_50);
                nichtgefunden := FALSE;
              END ELSE BEGIN
                nichtgefunden := TRUE;
              END;
            UNTIL (Art_NAV_50.FINDLAST()) OR (a >= STRLEN(Eingabe_2)-1);
          END;
        END;
      END;
      }



      //************************************ RMA Ersatz Seriennr. Suche ************************************
      IF nichtgefunden = TRUE THEN BEGIN
        //nichtgefunden:=FALSE;

        RMA_zeile.RESET();
        // Eingabe 1:1 suchen
        //RMA_zeile.SETFILTER(RMA_zeile.Belegart,'%1',RMA_zeile.Belegart::"vom Hersteller");
        RMA_zeile.SETFILTER("SN-Nr. / DC",'%1','*' + Eingabe + '*');
        IF (RMA_zeile.FINDLAST()) AND (Eingabe <> '') AND (Eingabe <> ' ') THEN BEGIN
          Nur_RMA_ermitteln(RMA_zeile,'2016');
        END ELSE BEGIN
          // l”scht alle Buchstaben und Sonderzeichen aus der Sucheingabe
          Eingabe_2 :=DELCHR(Eingabe,'=',' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.-_!();:"');
          RMA_zeile.RESET();

          // Eingabe bereinigt suchen
          RMA_zeile.SETFILTER(RMA_zeile."SN-Nr. / DC",'%1','*' + Eingabe_2 + '*');
          //RMA_zeile.SETFILTER(RMA_zeile.Belegart,'%1',RMA_zeile.Belegart::"vom Hersteller");
          IF (RMA_zeile.FINDLAST()) AND (Eingabe_2 <> '') AND (Eingabe_2 <> ' ') THEN BEGIN
            Nur_RMA_ermitteln(RMA_zeile,'2016');
          END ELSE BEGIN
            a := 0;

            // Zwischen die einzelnen Ziffern wird nach und nach ein Leerzeichen eingefgt
            // 1.) 123456, 2.) 1 23456, 3. 12 3456, 4. 123 456 usw.
            REPEAT
              a += 1;
              RMA_zeile.RESET();
              Eingabe_3 := COPYSTR(Eingabe_2,1,a) + ' ' + COPYSTR(Eingabe_2,a+1,STRLEN(Eingabe_2));

              //Message(eingabe_3);
              // Eingabe bereinigt suchen
              RMA_zeile.SETFILTER(RMA_zeile."SN-Nr. / DC",'%1','*' + Eingabe_3 + '*');
              //RMA_zeile.SETFILTER(RMA_zeile.Belegart,'%1',RMA_zeile.Belegart::"vom Hersteller");
              IF (RMA_zeile.FINDLAST()) AND (Eingabe_3 <> '') AND (Eingabe_3 <> ' ') THEN BEGIN
                Nur_RMA_ermitteln(RMA_zeile,'2016');
                nichtgefunden := FALSE;
              END ELSE BEGIN
                nichtgefunden := TRUE;
              END;
            UNTIL (RMA_zeile.FINDLAST()) OR (a >= STRLEN(Eingabe_2)-1);
          END;
        END;
      END;


      //************************* Wartungsvertrags Seriennr. oder Board ini Suche *************************
      IF nichtgefunden = TRUE THEN BEGIN
        nichtgefunden := FALSE;
        LizenzTab.RESET();
        // Eingabe 1:1 suchen
        //LizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
        LizenzTab.SETFILTER(Art,'%1|%2',LizenzTab.Art::Service,LizenzTab.Art::System);
        LizenzTab.SETFILTER("Seriennr.",'%1',Eingabe);
        IF (LizenzTab.FINDLAST()) AND (Eingabe <> '') AND (Eingabe <> ' ') THEN BEGIN
          Nur_Wartung_ermitteln(LizenzTab);
        END ELSE BEGIN
          // l”scht alle Buchstaben und Sonderzeichen aus der Sucheingabe
          Eingabe_2 := DELCHR(Eingabe,'=',' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.-_!();:"');
          LizenzTab.RESET();
          // Eingabe bereinigt suchen
          //LizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
          LizenzTab.SETFILTER(Art,'%1|%2',LizenzTab.Art::Service,LizenzTab.Art::System);
          LizenzTab.SETFILTER("Seriennr.",'%1','*' + Eingabe_2 + '*');
          IF (LizenzTab.FINDLAST()) AND (Eingabe_2 <> '') AND (Eingabe_2 <> ' ') THEN BEGIN
            Nur_Wartung_ermitteln(LizenzTab);
          END ELSE BEGIN
            a := 0;

            // Zwischen die einzelnen Ziffern wird nach und nach ein Leerzeichen eingefgt
            // 1.) 123456, 2.) 1 23456, 3. 12 3456, 4. 123 456 usw.
            REPEAT
              a += 1;
              LizenzTab.RESET();
              Eingabe_3 := COPYSTR(Eingabe_2,1,a) + ' ' + COPYSTR(Eingabe_2,a+1,STRLEN(Eingabe_2));

              // Eingabe bereinigt suchen
              //LizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
              LizenzTab.SETFILTER(Art,'%1|%2',LizenzTab.Art::Service,LizenzTab.Art::System);
              LizenzTab.SETFILTER("Seriennr.",'%1','*' + Eingabe_3 + '*');
              IF (LizenzTab.FINDLAST()) AND (Eingabe_3 <> '') AND (Eingabe_3 <> ' ') THEN BEGIN
                Nur_Wartung_ermitteln(LizenzTab);
                nichtgefunden := FALSE;
              END ELSE BEGIN
                //Suche nach der Board ini
                LizenzTab.RESET;
                //LizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
                LizenzTab.SETFILTER(Art,'%1|%2',LizenzTab.Art::Service,LizenzTab.Art::System);
                LizenzTab.SETFILTER("Board ini",'%1','*' + Eingabe + '*');
                IF (LizenzTab.FINDLAST()) AND (Eingabe <> '') AND (Eingabe <> ' ') THEN BEGIN
                  Nur_Wartung_ermitteln(LizenzTab);
                  feldinfo_text := 'Board ini';
                  board_ini := TRUE;
                  nichtgefunden := FALSE;
                END ELSE BEGIN
                  nichtgefunden := TRUE;
                END;
              END;
            UNTIL (LizenzTab.FINDLAST()) OR (a >= STRLEN(Eingabe_2)-1);
          END;
        END;
      END;

      //****************************** Wartungsvertrags Product Key Suche *****************************
      IF nichtgefunden = TRUE THEN BEGIN
        nichtgefunden := FALSE;
        LizenzTab.RESET();
        // Eingabe 1:1 suchen
        //LizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
        LizenzTab.SETFILTER(Art,'%1|%2',LizenzTab.Art::Service,LizenzTab.Art::System);
        LizenzTab.SETFILTER("Product Key",'%1',Eingabe);
        IF (LizenzTab.FINDLAST()) AND (Eingabe <> '') AND (Eingabe <> ' ') THEN BEGIN
          Nur_Wartung_ermitteln(LizenzTab);
          feldinfo_text := 'Product Key';
        END ELSE BEGIN
          // l”scht alle Buchstaben und Sonderzeichen aus der Sucheingabe
          Eingabe_2 := DELCHR(Eingabe,'=',' ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz.-_!();:"');
          LizenzTab.RESET();
          // Eingabe bereinigt suchen
          //LizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
          LizenzTab.SETFILTER(Art,'%1|%2',LizenzTab.Art::Service,LizenzTab.Art::System);
          LizenzTab.SETFILTER("Product Key",'%1','*' + Eingabe_2 + '*');
          IF (LizenzTab.FINDLAST()) AND (Eingabe_2 <> '') AND (Eingabe_2 <> ' ') THEN BEGIN
            Nur_Wartung_ermitteln(LizenzTab);
            feldinfo_text := 'Product Key';
          END ELSE BEGIN
            a := 0;

            // Zwischen die einzelnen Ziffern wird nach und nach ein Leerzeichen eingefgt
            // 1.) 123456, 2.) 1 23456, 3. 12 3456, 4. 123 456 usw.
            REPEAT
              a += 1;
              LizenzTab.RESET();
              Eingabe_3 := COPYSTR(Eingabe_2,1,a) + ' ' + COPYSTR(Eingabe_2,a+1,STRLEN(Eingabe_2));

              // Eingabe bereinigt suchen
              //LizenzTab.SETFILTER(Inaktiv,'%1',FALSE);
              LizenzTab.SETFILTER(Art,'%1|%2',LizenzTab.Art::Service,LizenzTab.Art::System);
              LizenzTab.SETFILTER("Product Key",'%1','*' + Eingabe_3 + '*');
              IF (LizenzTab.FINDLAST()) AND (Eingabe_3 <> '') AND (Eingabe_3 <> ' ') THEN BEGIN
                Nur_Wartung_ermitteln(LizenzTab);
                nichtgefunden := FALSE;
                feldinfo_text := 'Product Key';
              END;
            UNTIL (LizenzTab.FINDLAST()) OR (a >= STRLEN(Eingabe_2)-1);
          END;
        END;
      END;


      IF postennr <> 0 THEN
        btn_next_show := TRUE
      ELSE
        btn_next_show := FALSE;

      IF (((seriennr <> Eingabe) AND (seriennr <> '') AND  (productkey = '') AND (Eingabe <> '') AND (board_ini = FALSE)))
      OR (((seriennr <> Eingabe) AND (productkey <> Eingabe) AND (productkey <> '') AND (Eingabe <> '') AND (board_ini = FALSE))) THEN BEGIN
        hinweis_text := 'Achtung: Alternativ Ergebnis';
      END;

      VertragsnrStyle := SetStyle(vertragsnr,vertragsnr);

      IF (seriennr = '') AND (productkey = '') THEN MESSAGE('Artikel wurde nicht gefunden!!');
    END;

    PROCEDURE Datenblatt_leeren@1140021();
    BEGIN
      nav_system := '';
      kundennr := '';
      kundenname := '';
      kreditornr := '';
      kreditorname := '';
      seriennr := '';
      productkey := '';
      vk_belegnr := '';
      ek_belegnr := '';
      vk_datum := 0D;
      ek_datum := 0D;
      ext_belegnr := '';
      bet_nr := '';
      kred_po := '';
      kred_rcptno := '';
      artikelnr := '';
      vertragsnr := '';
      ablaufdatum := 0D;
      rmanr := '';
      rma_text := '';
      rma_ersatz_artikel := '';
      rma_ersatz_seriennr := '';
      uml_text := '';
      uml_text2 := '';
      vk_artpostennr := 0;
      ek_artpostennr := 0;
      wartungsverknpfungen := 0;
      alle_vertragsnr := '';
      //14.02.17 ST NEU
      feldinfo_text := '';
      hinweis_text := '';
      board_ini := FALSE;
      group_extra_wv_show := FALSE;
      group_extra_rma_show := FALSE;
      alle_vertragsnr_show := FALSE;
    END;

    PROCEDURE Pruefe_Vorgaenger5@1140006(artverfolgung@1140000 : Record 32;datenmenge@1140001 : Integer);
    BEGIN
      durchlauf += 1;
      artverfolgung.COPYFILTERS(artikelverfolgung);
      IF artverfolgung.COUNT > 1 THEN BEGIN
        artverfolgung.FINDLAST;
        IF (datenmenge = 2) AND (durchlauf = 1) THEN BEGIN
          artverfolgung.FINDFIRST;
          IF artverfolgung."Entry Type" = artverfolgung."Entry Type"::Purchase THEN BEGIN
            btn_next_show := FALSE;
          END ELSE BEGIN
            postennr := artikelverfolgung."Entry No.";
          END;
        END ELSE BEGIN
          postennr := artikelverfolgung."Entry No.";
        END;
      END ELSE BEGIN
        postennr := 0;
      END;
    END;

    PROCEDURE VK_daten_ermitteln@1140005(ItemEntry@1140000 : Record 32);
    VAR
      RMA_zeile@1140001 : Record 50021;
    BEGIN
      WITH ItemEntry DO BEGIN
        IF "Document Type" = "Document Type"::"Sales Shipment" THEN BEGIN
          nav_system := 'Navision 2016';
          kundennr := "Source No.";
          vk_artpostennr := "Entry No.";
          IF debitor.GET("Source No.") THEN
            kundenname := debitor.Name;
          vk_belegnr := "Document No.";
          vk_datum := "Posting Date";
          IF Lieferschein.GET("Document No.") THEN
            ext_belegnr := Lieferschein."External Document No.";

          //Prfung, ob RMA vorhanden
          RMA_ermitteln("Item No.","Serial No.");

          //Prfung, ob Wartung vorhanden
          Wartung_ermitteln("Item No.","Serial No.","Product Key");
        END;
      END;
    END;

    PROCEDURE VK_daten26_ermitteln@1140011(Artikelverfolgung_50@1140000 : Record 50018);
    BEGIN
      WITH Artikelverfolgung_50 DO BEGIN
        nav_system := 'Navision 5.0';
        artikelnr := "Item No.";
        seriennr := "Serial No.";
        //productkey := "Product Key";
        vk_belegnr := "Shipment No.";
        vk_datum := "Posting Date";

        //Prfung, ob RMA vorhanden
        RMA_ermitteln("Item No.","Serial No.");

        //Prfung, ob Wartung vorhanden
        Wartung_ermitteln("Item No.","Serial No.",productkey);

      END;
    END;

    PROCEDURE EK_daten_ermitteln@1140007(ItemEntry@1140000 : Record 32);
    VAR
      ItemLedgerEntry@1140003 : Record 32;
      ItemApplnEntry@1140001 : Record 339;
      TempItemApplnEntry@1140002 : Record 339;
      TransItemApplnEntry@1140004 : Record 339;
    BEGIN
      WITH ItemEntry DO BEGIN
        nav_system := 'Navision 2016';
        IF Positive THEN BEGIN

          ek_belegnr := "Document No.";
          ek_datum := "Document Date";
          artikelnr := "Item No.";
          seriennr := "Serial No.";
          productkey := "Product Key";
          ek_artpostennr := "Entry No.";
          ek_posten_art := FORMAT("Entry Type");

          IF PurchRcptHeader.GET(ItemEntry."Document No.") THEN BEGIN
            artikelnr := "Item No.";
            seriennr := "Serial No.";
            productkey := "Product Key";
            kreditornr := PurchRcptHeader."Buy-from Vendor No.";
            kreditorname := PurchRcptHeader."Buy-from Vendor Name";
            bet_nr := PurchRcptHeader."Order No.";
            kred_po := PurchRcptHeader."Vendor Order No.";
            kred_rcptno := PurchRcptHeader."Vendor Shipment No.";
            ek_artpostennr := "Entry No.";
          END;
        END ELSE BEGIN
          ItemApplnEntry.RESET;
          ItemApplnEntry.SETCURRENTKEY("Outbound Item Entry No.","Item Ledger Entry No.","Cost Application");
          ItemApplnEntry.SETRANGE("Outbound Item Entry No.","Entry No.");
          ItemApplnEntry.SETRANGE("Item Ledger Entry No.","Entry No.");
          ItemApplnEntry.SETRANGE("Cost Application",TRUE);
          IF ItemApplnEntry.FINDFIRST THEN BEGIN
            ItemLedgerEntry.GET(ItemApplnEntry."Inbound Item Entry No.");
            IF ItemLedgerEntry."Entry Type" <> ItemLedgerEntry."Entry Type"::Transfer THEN BEGIN
              artikelnr := ItemLedgerEntry."Item No.";
              productkey := ItemLedgerEntry."Product Key";
              seriennr := ItemLedgerEntry."Serial No.";
              ek_artpostennr := ItemLedgerEntry."Entry No.";
              ek_belegnr := ItemLedgerEntry."Document No.";
              ek_datum := ItemLedgerEntry."Document Date";
              IF PurchRcptHeader.GET(ItemLedgerEntry."Document No.") THEN BEGIN
                kreditornr := PurchRcptHeader."Buy-from Vendor No.";
                kreditorname := PurchRcptHeader."Buy-from Vendor Name";
                bet_nr := PurchRcptHeader."Order No.";
                kred_po := PurchRcptHeader."Vendor Order No.";
                kred_rcptno := PurchRcptHeader."Vendor Shipment No.";
              END;
            END ELSE BEGIN
              TempItemApplnEntry.RESET;
              TempItemApplnEntry.SETCURRENTKEY("Outbound Item Entry No.","Item Ledger Entry No.","Cost Application");
              TempItemApplnEntry.SETRANGE("Inbound Item Entry No.",ItemApplnEntry."Inbound Item Entry No.");
              TempItemApplnEntry.SETRANGE("Item Ledger Entry No.",ItemApplnEntry."Inbound Item Entry No.");
              TempItemApplnEntry.SETRANGE("Cost Application",TRUE);
              IF TempItemApplnEntry.FINDFIRST THEN BEGIN
                uml_text := 'Umlagerung: ' + ItemLedgerEntry."Document No.";
                ItemLedgerEntry.GET(TempItemApplnEntry."Transferred-from Entry No.");
                artikelnr := ItemLedgerEntry."Item No.";
                IF ItemLedgerEntry."Serial No." <> ItemEntry."Serial No." THEN
                  seriennr := ItemLedgerEntry."Serial No." + ' > ' + ItemEntry."Serial No."
                ELSE
                  seriennr := ItemLedgerEntry."Serial No.";
                ek_artpostennr := ItemLedgerEntry."Entry No.";
                ek_belegnr := ItemLedgerEntry."Document No.";
                ek_datum := ItemLedgerEntry."Document Date";
                IF PurchRcptHeader.GET(ItemLedgerEntry."Document No.") THEN BEGIN
                  kreditornr := PurchRcptHeader."Buy-from Vendor No.";
                  kreditorname := PurchRcptHeader."Buy-from Vendor Name";
                  bet_nr := PurchRcptHeader."Order No.";
                  kred_po := PurchRcptHeader."Vendor Order No.";
                  kred_rcptno := PurchRcptHeader."Vendor Shipment No.";
                END;

                //Prfe auf Umlagerung und gleichzeitiger Žnderung der Seriennr.
                TransItemApplnEntry.RESET;
                TransItemApplnEntry.SETCURRENTKEY("Outbound Item Entry No.","Item Ledger Entry No.","Cost Application");
                TransItemApplnEntry.SETRANGE("Transferred-from Entry No.",TempItemApplnEntry."Inbound Item Entry No.");
                TransItemApplnEntry.SETRANGE("Cost Application",TRUE);
                IF TransItemApplnEntry.FINDFIRST THEN BEGIN
                  ItemLedgerEntry.GET(TransItemApplnEntry."Item Ledger Entry No.");
                  uml_text2 := 'Umlagerung in ' + ItemLedgerEntry."Serial No." + ' Artikelposten: '
                  + FORMAT(ItemLedgerEntry."Entry No.");
                END;
              END;
            END;
          END;
        END;

        //Prfung, ob RMA vorhanden
        RMA_ermitteln("Item No.","Serial No.");

        //Prfung, ob Wartung vorhanden
        Wartung_ermitteln("Item No.","Serial No.","Product Key");

      END;
    END;

    PROCEDURE Nur_RMA_ermitteln@1140002(RMA@1140002 : Record 50021;system@1140001 : Code[10]);
    VAR
      RMA_kopf@1140003 : Record 50020;
      RMA_zeile@1140000 : Record 50021;
    BEGIN
      WITH RMA DO BEGIN
        IF system = '2016' THEN
          nav_system := 'Navision 2016';
        IF system = '5.0' THEN
          nav_system := 'Navision 5.0';
        IF system = '2.6' THEN
          nav_system := 'Navision 2.6';
        IF system = 'UNBEKANNT' THEN
          nav_system := 'Navision 5.0';
        RMA_beteiligte.RESET;
        RMA_beteiligte.SETRANGE(Fhrungsrolle,TRUE);
        RMA_beteiligte.SETRANGE(Art,RMA_beteiligte.Art::Kunde);
        RMA_beteiligte.SETRANGE("RMA-Nr.","RMA-Nr.");
        IF RMA_beteiligte.FINDLAST THEN BEGIN
          RMA_zeile.RESET;
          RMA_zeile.SETRANGE(Belegart,RMA_zeile.Belegart::"vom Kunden");
          RMA_zeile.SETRANGE("RMA-Nr.","RMA-Nr.");
          RMA_zeile.SETRANGE("Belegzeilennr.","Belegzeilennr.");
          RMA_zeile.SETRANGE("Datecode Pos.","Datecode Pos.");
          IF RMA_zeile.FINDLAST THEN BEGIN
            artikelnr := RMA_zeile."Artikelnr.";
            seriennr := "SN-Nr. / DC";
            kundennr := RMA_beteiligte."Debitornr.";
            kundenname := RMA_beteiligte.Name;
            MESSAGE(Text000,"RMA-Nr.",RMA_beteiligte."Debitornr.",RMA_beteiligte.Name,"Belegnr.",RMA_zeile.Datum,
            RMA_zeile."SN-Nr. / DC");
            IF Belegart = Belegart::Rechnung THEN
              rma_text := FORMAT(Verursacher);
            IF Belegart = Belegart::"an Hersteller" THEN
              rma_text := FORMAT(Beantragung);
            IF (Belegart = Belegart::"vom Hersteller")
            OR (Belegart = Belegart::"an Kunden") THEN
              rma_text := FORMAT("Maánahme Hersteller");
            group_extra_rma_show := TRUE;
            Wartung_ermitteln("Artikelnr.","SN-Nr. / DC",'')
          END ELSE BEGIN
            RMA_zeile.RESET;
            RMA_zeile.SETRANGE("RMA-Nr.","RMA-Nr.");
            RMA_zeile.SETRANGE("Belegzeilennr.","Belegzeilennr.");
            RMA_zeile.SETRANGE("Datecode Pos.","Datecode Pos.");
            IF RMA_zeile.FINDLAST THEN BEGIN
              artikelnr := RMA_zeile."Artikelnr.";
              seriennr := "SN-Nr. / DC";
              kundennr := RMA_beteiligte."Debitornr.";
              kundenname := RMA_beteiligte.Name;
              MESSAGE(Text000,"RMA-Nr.",RMA_beteiligte."Debitornr.",RMA_beteiligte.Name,"Belegnr.",RMA_zeile.Datum,
              RMA_zeile."SN-Nr. / DC");
              IF RMA_zeile.Belegart = RMA_zeile.Belegart::Rechnung THEN
                rma_text := FORMAT(RMA_zeile.Verursacher);
              IF RMA_zeile.Belegart = RMA_zeile.Belegart::"an Hersteller" THEN
                rma_text := FORMAT(RMA_zeile.Beantragung);
              IF (RMA_zeile.Belegart = RMA_zeile.Belegart::"vom Hersteller")
              OR (RMA_zeile.Belegart = RMA_zeile.Belegart::"an Kunden") THEN
                rma_text := FORMAT(RMA_zeile."Maánahme Hersteller");
              group_extra_rma_show := TRUE;
              Wartung_ermitteln("Artikelnr.","SN-Nr. / DC",'')
            END;
          END;
        END ELSE BEGIN
          artikelnr := "Artikelnr.";
          seriennr := "SN-Nr. / DC";
          kundennr := "Debitornr.";
          IF debitor.GET("Debitornr.") THEN
            kundenname:= debitor.Name;
          MESSAGE(Text000,"RMA-Nr.","Belegnr.");
          IF RMA.Belegart = RMA.Belegart::Rechnung THEN
            rma_text := FORMAT(RMA.Verursacher);
          IF RMA.Belegart = RMA.Belegart::"an Hersteller" THEN
            rma_text := FORMAT(RMA.Beantragung);
          IF (RMA.Belegart = RMA.Belegart::"vom Hersteller")
          OR (RMA.Belegart = RMA.Belegart::"an Kunden") THEN
            rma_text := FORMAT(RMA."Maánahme Hersteller");
          group_extra_rma_show := TRUE;
          Wartung_ermitteln("Artikelnr.","SN-Nr. / DC",'')
        END;

        //Zusatzanzeige, wenn die SN in mehreren RMA's auftaucht
        RMA_zeile.RESET;
        RMA_zeile.SETRANGE(RMA_zeile."SN-Nr. / DC","SN-Nr. / DC");
        IF RMA_zeile.FINDFIRST THEN BEGIN

          RMA_Ersatz.RESET;
          RMA_Ersatz.SETRANGE(Belegart,RMA_Ersatz.Belegart::"vom Hersteller");
          RMA_Ersatz.SETRANGE("RMA-Nr.",RMA_zeile."RMA-Nr.");
          RMA_Ersatz.SETRANGE("Belegnr.",RMA_zeile."Belegnr.");
          RMA_Ersatz.SETRANGE("Belegzeilennr.",RMA_zeile."Belegzeilennr.");
          RMA_Ersatz.SETRANGE("Datecode Pos.",RMA_zeile."Datecode Pos.");
          IF (RMA_Ersatz.FINDFIRST) AND (RMA_Ersatz."SN-Nr. / DC" <> RMA_zeile."SN-Nr. / DC") THEN BEGIN
            rma_ersatz_artikel  := RMA_Ersatz."Artikelnr.";
            rma_ersatz_seriennr := RMA_Ersatz."SN-Nr. / DC";
          END;

          REPEAT
            IF rmanr = '' THEN
              rmanr := RMA_zeile."RMA-Nr.";
            IF (STRPOS(rmanr, RMA_zeile."RMA-Nr.") = 0) AND
            (STRLEN(rmanr + '|' + RMA_zeile."RMA-Nr.") <= 80) THEN
              rmanr := rmanr + '|' +  RMA_zeile."RMA-Nr.";
          UNTIL RMA_zeile.NEXT = 0;

        END;
      END;
    END;

    PROCEDURE RMA_ermitteln@1140019(Artikel@1140001 : Code[20];SN@1140000 : Code[20]);
    VAR
      RMA_kopf@1140002 : Record 50020;
      RMA_zeile@1140003 : Record 50021;
    BEGIN
      RMA_zeile.RESET;
      //RMA_zeile.SETRANGE("Artikelnr.",Artikel);
      RMA_zeile.SETRANGE(RMA_zeile."SN-Nr. / DC",SN);
      IF RMA_zeile.FINDFIRST THEN BEGIN

        RMA_Ersatz.RESET;
        RMA_Ersatz.SETRANGE(Belegart,RMA_Ersatz.Belegart::"vom Hersteller");
        RMA_Ersatz.SETRANGE("RMA-Nr.",RMA_zeile."RMA-Nr.");
        RMA_Ersatz.SETRANGE("Belegnr.",RMA_zeile."Belegnr.");
        RMA_Ersatz.SETRANGE("Belegzeilennr.",RMA_zeile."Belegzeilennr.");
        RMA_Ersatz.SETRANGE("Datecode Pos.",RMA_zeile."Datecode Pos.");
        IF (RMA_Ersatz.FINDFIRST) AND (RMA_Ersatz."SN-Nr. / DC" <> RMA_zeile."SN-Nr. / DC") THEN BEGIN
          rma_ersatz_artikel  := RMA_Ersatz."Artikelnr.";
          rma_ersatz_seriennr := RMA_Ersatz."SN-Nr. / DC";
        END;

        REPEAT
          IF rmanr = '' THEN
            rmanr := RMA_zeile."RMA-Nr.";
          IF (STRPOS(rmanr, RMA_zeile."RMA-Nr.") = 0)
          AND (STRLEN(rmanr + '|' + RMA_zeile."RMA-Nr.") <= 80) THEN
            rmanr := rmanr + '|' +  RMA_zeile."RMA-Nr.";
        UNTIL RMA_zeile.NEXT = 0;

        IF RMA_zeile.Belegart = RMA_zeile.Belegart::Rechnung THEN
          rma_text := FORMAT(RMA_zeile.Verursacher);
        IF RMA_zeile.Belegart = RMA_zeile.Belegart::"an Hersteller" THEN
          rma_text := FORMAT(RMA_zeile.Beantragung);
        IF (RMA_zeile.Belegart = RMA_zeile.Belegart::"vom Hersteller")
        OR (RMA_zeile.Belegart = RMA_zeile.Belegart::"an Kunden") THEN
          rma_text := FORMAT(RMA_zeile."Maánahme Hersteller");
        group_extra_rma_show := TRUE;

      END;
    END;

    PROCEDURE Nur_Wartung_ermitteln@1140003(datensatz_lizenz@1140000 : Record 50024);
    BEGIN
      WITH datensatz_lizenz DO BEGIN
        vertragsnr := "Wartungsvertragsnr.";
        nav_system := 'Navision 2016';
        artikelnr := "Artikelnr.";
        seriennr := "Seriennr.";
        productkey := "Product Key";
        kundennr := "Debitornr.";
        kundenname := Debitorname;
        IF Art = Art::System THEN
          vk_belegnr := "Nr."
        ELSE
          vk_belegnr := "Urspr. Lieferscheinnr.";
        vk_datum := Belegdatum;
        bet_nr := "Eingangs BET";
        IF PurchRcptHeader.GET("BET-Nr.") THEN
          ek_datum := PurchRcptHeader."Posting Date"
        ELSE BEGIN
          Beleghistorie.RESET;
          Beleghistorie.SETRANGE(Belegart,Beleghistorie.Belegart::"Purchase Invoice");
          Beleghistorie.SETRANGE("Auftragsnr.","BET-Nr.");
          IF Beleghistorie.FINDFIRST THEN BEGIN
            ek_datum := Beleghistorie.Belegdatum;
            ek_belegnr := Beleghistorie."Belegnr.";
          END;
        END;
        vertragsnr := "Wartungsvertragsnr.";
        IF Wartung.GET(vertragsnr) THEN
          ablaufdatum := Wartung.Vertragsablaufdatum;
        group_extra_wv_show := TRUE;
      END;
    END;

    PROCEDURE Wartung_ermitteln@1140027(Artikel@1140003 : Code[20];SN@1140000 : Code[20];PK@1000000000 : Code[40]);
    VAR
      Wartungs_kopf@1140002 : Record 50011;
      Wartungs_zeile@1140001 : Record 50024;
    BEGIN
      Wartungs_zeile.RESET;
      Wartungs_zeile.SETFILTER(Art,'%1|%2',Wartungs_zeile.Art::Service,Wartungs_zeile.Art::System);
      //Wartungs_zeile.SETFILTER("Artikelnr.",'%1',Artikel);
      Wartungs_zeile.SETFILTER("Seriennr.",'%1',SN);
      IF PK <> '' THEN
        Wartungs_zeile.SETFILTER("Product Key",'%1',PK);
      //Wartungs_zeile.SETFILTER(Inaktiv,'%1',FALSE);
      IF Wartungs_zeile.FINDFIRST THEN BEGIN
        REPEAT
          IF alle_vertragsnr <> Wartungs_zeile."Wartungsvertragsnr." THEN BEGIN
            IF Wartungs_zeile.Art = Wartungs_zeile.Art::System THEN BEGIN
              IF alle_vertragsnr = '' THEN BEGIN
                alle_vertragsnr := Wartungs_zeile."Wartungsvertragsnr.";
                wartungsverknpfungen += 1;
              END ELSE
                IF (STRPOS(alle_vertragsnr,Wartungs_zeile."Wartungsvertragsnr.") = 0)
                AND (STRLEN(alle_vertragsnr + '|' + Wartungs_zeile."Wartungsvertragsnr.") <= 80) THEN BEGIN
                  alle_vertragsnr := alle_vertragsnr + '|' + Wartungs_zeile."Wartungsvertragsnr.";
                  wartungsverknpfungen += 1;
                END;
            END;
          END;

          vertragsnr := Wartungs_zeile."Wartungsvertragsnr.";
          IF Wartung.GET(Wartungs_zeile."Wartungsvertragsnr.") THEN
            ablaufdatum := Wartung.Vertragsablaufdatum;
          group_extra_wv_show := TRUE;
          IF STRPOS(alle_vertragsnr,'|') <> 0 THEN BEGIN
            alle_vertragsnr_show := TRUE;
          END;

        UNTIL Wartungs_zeile.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE SetStyle@1000000001(feld@1000000001 : Code[20];nr@1000000000 : Code[20]) : Text;
    BEGIN
      CASE feld OF
        vertragsnr :
          BEGIN
            IF nr = '' THEN EXIT('');
            IF nr <> '' THEN BEGIN
              Wartung.GET(nr);
              IF (Wartung.Status = Wartung.Status::System) OR (Wartung.Status = Wartung.Status::" ") THEN
                EXIT('Unfavorable')
              ELSE
                IF (Wartung.Status = Wartung.Status::ACTS) OR (Wartung.Status = Wartung.Status::ACHAT) THEN
                  EXIT('Ambiguous')
                ELSE
                  IF (Wartung.Status = Wartung.Status::"Champs Partner") THEN
                    EXIT('Favorable')
                  ELSE
                    EXIT('StrongAccent');
            END;
          END;
      END;
    END;

    BEGIN
    END.
  }
}

