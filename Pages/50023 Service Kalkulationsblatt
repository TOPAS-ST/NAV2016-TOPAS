OBJECT Page 50023 Service Kalkulationsblatt
{
  OBJECT-PROPERTIES
  {
    Date=03.01.18;
    Time=13:23:06;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    SourceTable=Table50027;
    DataCaptionExpr='Service Kalkulation';
    SourceTableView=SORTING(Art,Nr.,Zeilennr.,Gruppierung);
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[DEU=Neu,Vorgang,Bericht,Zusatz Funktionen,Export;
                                ENU=New,Process,Report,Functions,Export];
    OnOpenPage=BEGIN
                 UpdatePageTemplate;
               END;

    OnAfterGetRecord=BEGIN
                       diff := TOPAS_API.CalculateTimeDiff('M',Startdatum,Ablaufdatum);
                       laufzeit_text := TOPAS_API.RuntimeText_output(Startdatum,Ablaufdatum);
                     END;

    OnModifyRecord=BEGIN
                     AusfhrungPrfen;
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.UPDATE;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           UpdatePageTemplate;

                           IF "Nachtr„gliche Service Order" = TRUE THEN
                             aktion_auswahl_sn_zeigen := TRUE
                           ELSE
                             aktion_auswahl_sn_zeigen := FALSE;

                           IF Fremderwerb = TRUE THEN
                             systemartikel_edit := TRUE
                           ELSE
                             systemartikel_edit := FALSE;

                           IF Artikel.GET("SUP Artikelnr.") AND ((Artikel.Artikelgruppe = 'ACTS') OR (Artikel.Artikelgruppe = 'ACTS_AHR')
                           OR (Artikel.Artikelgruppe = 'ACTS/ACHAT') OR (Artikel.Artikelgruppe = 'ACHAT')
                           OR (Artikel.Artikelgruppe = 'ACTS_SCHAEFFLER') OR (Artikel.Artikelgruppe = 'ACTS_MSS')
                           OR (Artikel.Artikelgruppe = 'ACTS_MSS_SCHAEFFLER') OR (Artikel.Artikelgruppe = 'APSS_OB')
                           OR (Artikel.Artikelgruppe = 'CHAMPS_PARTNER') OR (Artikel.Artikelgruppe = 'CHAMPS_FEE')) THEN BEGIN
                             kalk_prozentsatz_zeigen := TRUE;
                           END ELSE BEGIN
                             kalk_prozentsatz_zeigen := FALSE;
                           END;

                           KalkFehlerPrfen;
                         END;

    ActionList=ACTIONS
    {
      { 1900000000;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1       ;1   ;ActionGroup;
                      CaptionML=[DEU=Allgmein;
                                 ENU=General] }
      { 1140014 ;2   ;Action    ;
                      Name=btn_alle_pos_holen;
                      CaptionML=DEU=Alle Pos. holen;
                      Promoted=Yes;
                      Visible=service_controls_zeigen;
                      PromotedIsBig=Yes;
                      Image=GetLines;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AusfhrungPrfen;
                                 HoleArtikelPos;
                               END;
                                }
      { 1140015 ;2   ;Action    ;
                      Name=btn_preise_berechnen;
                      CaptionML=DEU=Kalkulieren;
                      Promoted=Yes;
                      Visible=service_controls_zeigen;
                      PromotedIsBig=Yes;
                      Image=CalculateSimulation;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AusfhrungPrfen;
                                 PreiseKalkulieren;
                               END;
                                }
      { 1140006 ;2   ;Action    ;
                      Name=btn_auswahl_sn;
                      CaptionML=DEU=Auswahl Seriennr.;
                      Promoted=Yes;
                      Visible=aktion_auswahl_sn_zeigen;
                      PromotedIsBig=Yes;
                      Image=CreateSerialNo;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 AusfhrungPrfen;
                                 TempSeriennrhinzu;
                               END;
                                }
      { 1900000001;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1140041 ;1   ;ActionGroup;
                      Name=btn_extra_funktionen;
                      CaptionML=DEU=Extra Funktionen }
      { 1140032 ;2   ;Action    ;
                      CaptionML=DEU=Logische Positionsbernahme;
                      Promoted=Yes;
                      Visible=service_controls_zeigen;
                      Image=GetLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 AusfhrungPrfen;
                                 Logikšbernahme;
                               END;
                                }
      { 1140054 ;2   ;Action    ;
                      CaptionML=DEU=Vorg„ngerkalkulation kopieren;
                      Promoted=Yes;
                      Visible=service_controls_zeigen;
                      Image=CalculateLines;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 AusfhrungPrfen;
                                 Vorg„ngerKopieren;
                               END;
                                }
      { 1140042 ;2   ;Action    ;
                      CaptionML=DEU=Alles l”schen;
                      Promoted=Yes;
                      Visible=service_controls_zeigen;
                      Image=Delete;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 AusfhrungPrfen;
                                 L”schAllePos;
                               END;
                                }
      { 1140044 ;2   ;Action    ;
                      CaptionML=DEU=Fremderwerb;
                      Promoted=Yes;
                      Visible=service_controls_zeigen;
                      Image=ExternalDocument;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 AusfhrungPrfen;
                                 AnlageFremderwerbsPos;
                               END;
                                }
      { 1000000011;2 ;Action    ;
                      Name=btn_exportto_excel;
                      CaptionML=DEU=Excel Export;
                      ToolTipML=DEU=Kundeninformationen zur Vertragsverl„ngerung nach Excel exportieren;
                      Promoted=Yes;
                      Visible=service_controls_zeigen;
                      Image=Excel;
                      PromotedCategory=Category5;
                      OnAction=BEGIN
                                 InfosExcelExport;
                               END;
                                }
      { 1000000010;1 ;ActionGroup;
                      CaptionML=DEU=Admin Tools;
                      Visible=FALSE;
                      Enabled=FALSE }
      { 1140064 ;2   ;Action    ;
                      CaptionML=DEU=TEMP_Alle Pos. holen;
                      OnAction=BEGIN
                                 IF lieferscheinnr = '' THEN ERROR('TEMP Funktion nur mit Lieferscheinnr. ausfhrbar.');
                                 HoleArtikelPos;
                               END;
                                }
      { 1140065 ;2   ;Action    ;
                      CaptionML=DEU=TEMP_Auswahl Seriennr.;
                      OnAction=BEGIN
                                 TempSeriennrhinzu_TEMP;
                               END;
                                }
      { 1140066 ;2   ;Action    ;
                      CaptionML=DEU=TEMP_Fremderwerb;
                      Visible=FALSE;
                      OnAction=BEGIN
                                 AnlageFremderwerb_TEMP;
                               END;
                                }
      { 1000000006;1 ;ActionGroup;
                      CaptionML=DEU=Splicecom DEMO;
                      ActionContainerType=NewDocumentItems }
      { 1000000008;2 ;Action    ;
                      Name=btn_neue_pos;
                      CaptionML=DEU=Neue Pos.;
                      Promoted=Yes;
                      Visible=splicecom_controls_zeigen;
                      PromotedIsBig=Yes;
                      Image=NewDocument;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 NeueDemoPos;
                               END;
                                }
      { 1000000009;2 ;Action    ;
                      Name=btn_demo_vorlage;
                      CaptionML=DEU=Demo Vorlage;
                      Promoted=Yes;
                      Visible=splicecom_controls_zeigen;
                      PromotedIsBig=Yes;
                      Image=ApplyTemplate;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 DemoVorlage;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000; ;Container ;
                ContainerType=ContentArea }

    { 1000000005;1;Group  ;
                CaptionML=DEU=Optionen;
                Visible=service_controls_zeigen;
                GroupType=Group;
                Layout=Rows }

    { 1000000014;2;Group  ;
                GroupType=Group }

    { 1000000004;3;Field  ;
                Name=txtbox_lieferscheinnr;
                CaptionML=DEU=Lieferscheinnr.;
                SourceExpr=lieferscheinnr;
                TableRelation="Sales Shipment Header";
                Visible=service_controls_zeigen }

    { 1000000003;3;Field  ;
                Name=txtbox_vertragsnr;
                CaptionML=DEU=Wartungsvertragsnr.;
                ToolTipML=DEU=Fr Vertragsverl„ngerungen die Vertragsnr. eingeben;
                SourceExpr=wartungsnr;
                TableRelation=Wartungsvertrag;
                Visible=service_controls_zeigen }

    { 1000000000;3;Field  ;
                Name=txtbox_quotennr;
                CaptionML=DEU=Quotennr.;
                SourceExpr=quotenr;
                TableRelation=Quotedaten WHERE (Herstellercode=FILTER(57|5710|5720),
                                                Erledigtstatus=FILTER(' '));
                Visible=service_controls_zeigen }

    { 1000000002;1;Group  ;
                CaptionML=DEU=Rabatte / Marge;
                Visible=kalk_prozentsatz_zeigen;
                GroupType=Group }

    { 1000000016;2;Group  ;
                CaptionML=DEU="Fr ACTS, APSS oder CHAMPS Partner = Rabatt, fr ACHAT = Marge eingeben.";
                GroupType=Group }

    { 1000000012;3;Field  ;
                Name=txtbox_kalk_prozentsatz;
                CaptionML=DEU=Kalk. Prozentsatz;
                ToolTipML=DEU="Fr ACTS + CHAMPS Partner = Rabatt, fr ACHAT = Marge eingeben.";
                SourceExpr=kalk_prozentsatz;
                OnValidate=BEGIN
                             Artikel.GET("SUP Artikelnr.");

                             IF (kalk_prozentsatz > 20) AND (Artikel.Artikelgruppe = 'APSS_OB') THEN
                               ERROR(Text017,20);

                             IF (kalk_prozentsatz > 10) AND ((Artikel.Artikelgruppe = 'ACTS') OR (Artikel.Artikelgruppe = 'ACTS_AHR')) THEN
                               ERROR(Text017,10);

                             IF (kalk_prozentsatz > 10) AND (Artikel.Artikelgruppe = 'ACTS_MSS') THEN
                               ERROR(Text017,10);

                             IF (kalk_prozentsatz < 20) AND (Artikel.Artikelgruppe = 'CHAMPS_PARTNER') THEN
                               ERROR(Text021,20);

                             IF (kalk_prozentsatz <> 0) AND (kalk_prozentsatz <> 20) AND (Artikel.Artikelgruppe = 'CHAMPS_FEE') THEN
                               ERROR(Text023,Artikel.Artikelgruppe,20);
                           END;
                            }

    { 1000000013;1;Group  ;
                CaptionML=DEU=Hinweise;
                Visible=service_controls_zeigen;
                GroupType=Group }

    { 1000000001;2;Field  ;
                Name=txtboxt_hinweistext;
                CaptionML=DEU=Hinweis;
                ToolTipML=DEU=Dieses Feld gibt evtl. Fehler zur Kalkulation aus.;
                SourceExpr=hinweistext;
                Editable=FALSE;
                Style=Unfavorable;
                StyleExpr=TRUE }

    { 1900001;1;Group     ;
                CaptionML=DEU=Kalkulations Positionen;
                GroupType=Repeater }

    { 1140001;2;Field     ;
                SourceExpr="Nr.";
                Editable=FALSE }

    { 1140003;2;Field     ;
                SourceExpr="Zeilennr.";
                Editable=FALSE }

    { 1140028;2;Field     ;
                SourceExpr="SUP Artikelnr.";
                Editable=FALSE }

    { 1140016;2;Field     ;
                SourceExpr="Ger„te Artikelnr.";
                Editable=systemartikel_edit;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1140055;2;Field     ;
                SourceExpr="Abw. Ger„te Artikelnr.";
                Visible=service_controls_zeigen }

    { 1140039;2;Field     ;
                SourceExpr="MSRP Service";
                Visible=service_controls_zeigen;
                Editable=FALSE }

    { 1140052;2;Field     ;
                SourceExpr="Vertragsnr. bernommen";
                Visible=service_controls_zeigen;
                Editable=FALSE }

    { 1140067;2;Field     ;
                SourceExpr="Rabatt/Marge";
                Visible=service_controls_zeigen;
                Editable=FALSE }

    { 1140073;2;Field     ;
                SourceExpr="Quotenr.";
                Visible=service_controls_zeigen }

    { 1140007;2;Field     ;
                SourceExpr="Belegnr.";
                OnValidate=BEGIN
                             IF Fremderwerb = FALSE THEN
                               ERROR(Text011);
                           END;
                            }

    { 1140009;2;Field     ;
                SourceExpr="Belegzeilennr.";
                OnValidate=BEGIN
                             IF Fremderwerb = FALSE THEN
                               ERROR(Text011);
                           END;
                            }

    { 1140069;2;Field     ;
                SourceExpr="Laufzeit ab Buchungsdatum";
                Visible=service_controls_zeigen;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             IF UpdateLaufzeitabBuchungsdatum(Rec) = TRUE THEN
                               BEGIN
                                 CurrPage.UPDATE(TRUE);
                               END;
                           END;
                            }

    { 1140077;2;Field     ;
                SourceExpr="Beachte Startdatum";
                Visible=service_controls_zeigen;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             IF UpdateBeachteStartdatum(Rec) = TRUE THEN
                               BEGIN
                                 CurrPage.UPDATE(TRUE);
                               END;
                           END;
                            }

    { 1140030;2;Field     ;
                SourceExpr=Laufzeit;
                Visible=service_controls_zeigen;
                OnValidate=BEGIN
                             //IF STRPOS("SUP Artikelnr.",'CHAMPS') = 0 THEN
                             //  ERROR(Text009);
                           END;
                            }

    { 1140075;2;Field     ;
                CaptionML=DEU=Laufzeit Text;
                SourceExpr=laufzeit_text;
                Visible=service_controls_zeigen;
                Editable=FALSE }

    { 1140018;2;Field     ;
                SourceExpr=Startdatum;
                Visible=service_controls_zeigen }

    { 1140020;2;Field     ;
                SourceExpr=Ablaufdatum;
                Visible=service_controls_zeigen }

    { 1140026;2;Field     ;
                DecimalPlaces=0:0;
                SourceExpr="Menge kalk.";
                OnValidate=BEGIN
                             MengeKalkPrfen;
                           END;
                            }

    { 1140022;2;Field     ;
                SourceExpr="Service VK-Preis einzeln";
                Visible=service_controls_zeigen;
                Editable=FALSE }

    { 1140024;2;Field     ;
                SourceExpr="Service VK-Preis Zeilenbetrag";
                Visible=service_controls_zeigen;
                Editable=FALSE }

    { 1140035;2;Field     ;
                SourceExpr="Service DC einzeln";
                Visible=service_controls_zeigen;
                Editable=FALSE }

    { 1140037;2;Field     ;
                SourceExpr="Service DC Gesamt";
                Visible=service_controls_zeigen;
                Editable=FALSE }

    { 1140057;2;Field     ;
                SourceExpr="Service DC W„hrungscode";
                Visible=service_controls_zeigen;
                Editable=FALSE }

    { 1140045;2;Field     ;
                SourceExpr="Wartungsvertragsnr.";
                Visible=service_controls_zeigen;
                OnValidate=BEGIN
                             //***************************************************************************************************
                             //         Der Wartungsvertrag muss bei nachtr„glicher Zubuchung neuer Pos. noch gltig sein
                             //***************************************************************************************************

                             IF "Wartungsvertragsnr." <> '' THEN BEGIN

                               Wartungsvertrag.GET("Wartungsvertragsnr.");
                               IF ((Wartungsvertrag.Status = Wartungsvertrag.Status :: Auftrag)
                               OR (Wartungsvertrag.Status = Wartungsvertrag.Status :: ACTS)
                               OR (Wartungsvertrag.Status = Wartungsvertrag.Status :: ACHAT)
                               OR (Wartungsvertrag.Status = Wartungsvertrag.Status :: "Champs Partner")) THEN BEGIN
                                 IF (Wartungsvertrag.Vertragsablaufdatum < WORKDATE) THEN
                                   ERROR(Text014,Wartungsvertrag."Wartungsvertragsnr.");
                               END
                             ELSE
                               ERROR(Text015,Wartungsvertrag."Wartungsvertragsnr.");

                               IF Ablaufdatum = 0D THEN BEGIN
                                 v_ablaufdatum := Ablaufdatum_generieren("SUP Artikelnr.","Wartungsvertragsnr.");
                                 IF v_ablaufdatum <> 0D THEN BEGIN
                                   VALIDATE(Laufzeit,FORMAT(TOPAS_API.CalculateTimeDiff('M',WORKDATE,v_ablaufdatum)) + 'M');
                                   MESSAGE(Text020,Laufzeit);
                                 END;
                               END;

                             END;

                             //Bei Basisger„ten nicht gestattet, sonst wird evtl. nicht das Vertragsablaufdatum im Vertragskopf ge„ndert

                             IF Basisger„t =  TRUE THEN
                               TESTFIELD("Wartungsvertragsnr.",'');
                           END;
                            }

  }
  CODE
  {
    VAR
      SalesLine@1140000 : Record 37;
      SalesLineArchive@1000000006 : Record 5108;
      SalesLine_Service@1140042 : Record 37;
      SalesLineArchive_Service@1000000007 : Record 5108;
      ShipLine@1140047 : Record 111;
      Beleghistorie@1000000005 : Record 50008;
      ServRelaDoc@1140045 : Record 50027;
      TempServRelaDoc@1140044 : Record 50027;
      CheckServRelaDoc@1140046 : Record 50027;
      Opt@1140052 : Record 50001;
      ServicePos@1140051 : Record 50024;
      SystemPos@1140043 : Record 50024;
      CompareSystemPos@1140050 : Record 50024;
      ShowSerialNo@1140001 : Record 50024;
      Artikel@1140027 : Record 27;
      Text000@1140002 : TextConst 'DEU=Beleg konnte entweder nicht gefunden werden oder es handelt sich hierbei nicht um einen AudioCodes System Auftrag. Wenden Sie sich an Ihren Systemadministrator.';
      Text001@1140003 : TextConst 'DEU=Die kalk. Menge fr ein Basisger„t darf nicht gr”áer als 1 sein. Identische Basisger„te mssen auch in der Kalkulation differenziert voneinander betrachtet werden.';
      Text002@1140004 : TextConst 'DEU=Bitte hinterlegen Sie fr Artikelnr. %1 eine Serviceklassifizierung im Artikelstamm.';
      Wartungsvertrag@1140024 : Record 50011;
      TempExcelBuffer@1000000009 : TEMPORARY Record 370;
      TOPAS_API@1140033 : Codeunit 50001;
      TOPASServiceModul@1000000008 : Codeunit 50008;
      j@1140018 : Text[30];
      lieferscheinnr@1140015 : Code[20];
      wartungsnr@1140016 : Code[20];
      kalk_prozentsatz@1140029 : Decimal;
      hinweistext@1140005 : Text[120];
      Text003@1140006 : TextConst 'DEU=Es wurde bereits ein %1 Preis errechnet, m”chten Sie diesen im Beleg berschreiben?';
      Text004@1140007 : TextConst 'DEU=Der %1 Preis betr„gt nun %2. Der Vk-Preis im Beleg wurde entsprechend aktualisiert.\Der %3 betr„gt %4.';
      Text005@1140008 : TextConst 'DEU=Es konnte kein %1 Preis errechnet werden.';
      Text006@1140009 : TextConst 'DEU=%1 darf in diesem Fall nicht gr”áer sein als %2.';
      Text007@1140010 : TextConst 'DEU=Diese Kalkulation ist bereits archiviert. Žnderungen sind nicht mehr m”glich.';
      Text008@1140011 : TextConst 'DEU=Diese Funktion kann nicht fr die nachtr„gliche Kalkulation genutzt werden. Nutzen Sie stattdessen die Standardfunktion zum šbernehmen der Positionen.';
      Text009@1140012 : TextConst 'DEU=Die Laufzeitanpassung ist nur fr bestimmte Serviceartikel gestattet.';
      Text010@1140013 : TextConst 'DEU=Es konnte kein Basisger„t in der Kalkulation gefunden werden. Sind Sie sich sicher, dass die Angaben vollst„ndig sind?';
      Text011@1140014 : TextConst 'DEU=Žnderung nur bei Fremderwerb m”glich.';
      Text012@1140017 : TextConst 'DEU=Sie k”nnen nicht gleichzeitig einen Lieferschein und einen Wartungsvertrag hinzufgen, bitte treffen Sie nur eine Auswahl.';
      Text013@1140023 : TextConst 'DEU=Bitte fllen Sie zuerst die Wartungsvertragsnr. aus.';
      Text014@1140025 : TextConst 'DEU=Der angegebene Wartungsvertrag %1 ist abgelaufen. Sie mssen den gesamten Wartungsvertrag verl„ngern, um diese Buchung durchfhren zu k”nnen.\\Hinweis: Sie k”nnen den Wartungsvertrag gleich mit verl„ngern, indem Sie die Pos. aus dem Wartungsvertrag mit in diese Kalkulation bernehmen.';
      Text015@1140026 : TextConst 'DEU=Sie k”nnen hier kein Systemvertrag ausw„hlen, es muss sich um einen gltigen Wartungsvertrag handeln.';
      Text016@1140028 : TextConst 'DEU=Sie drfen nicht verschiedene Basisger„te in einer Kalkulation aufweisen.';
      Text017@1140030 : TextConst 'DEU=Der ACTS Rabatt darf den Wert von %1 nicht bersteigen.';
      Text018@1140031 : TextConst 'DEU=Die %1 Marge sollte ber 50 Prozent liegen.';
      diff@1140032 : Integer;
      v_ablaufdatum@1140035 : Date;
      Text019@1140034 : TextConst 'DEU=Sie k”nnen nicht einzelne Module verl„ngern.Žndern Sie die Kalkulation dahingehend, dass Sie Basisger„t und all seine Komponenten gleichzeitg verl„ngern.';
      Text020@1140036 : TextConst 'DEU=Die Laufzeit wurde entsprechend des Wartungsvertrages auf %1 angepasst.';
      Text021@1140037 : TextConst 'DEU=Der CHAMPS Partner Rabatt darf den Wert von %1 nicht unterschreiten.';
      Text022@1140038 : TextConst 'DEU=Es empfiehlt sich nicht fremderworbene Basissysteme mit derselben Artikelnr. zu splitten. Bitte kumulieren Sie die Ger„te in einer Position und nutzen Sie die Mengen Angabe.';
      quotenr@1140039 : Code[20];
      Text023@1140040 : TextConst 'DEU=Der %1 Rabatt darf nur den Wert %2 oder 0 annehmen.';
      laufzeit_text@1140041 : Text[30];
      menge_gesamt@1140049 : Decimal;
      zeilennr@1140048 : Integer;
      systemartikel_edit@1000000000 : Boolean;
      kalk_prozentsatz_zeigen@1000000001 : Boolean;
      aktion_auswahl_sn_zeigen@1000000002 : Boolean;
      service_controls_zeigen@1000000004 : Boolean;
      splicecom_controls_zeigen@1000000003 : Boolean;

    PROCEDURE HoleArtikelPos@1140007();
    BEGIN
      IF (lieferscheinnr <> '') AND (wartungsnr <> '') THEN
        ERROR(Text012);

      IF Rec.HASFILTER THEN BEGIN
        ////Service bezieht sich auf Auftrag
        EVALUATE(zeilennr,GETFILTER("Zeilennr."));
        SalesLine_Service.RESET;
        SalesLine_Service.SETRANGE("Document No.",GETFILTER("Nr."));
        SalesLine_Service.SETRANGE("Line No.",zeilennr);
        IF SalesLine_Service.FINDFIRST THEN BEGIN
          IF (lieferscheinnr = '') AND (wartungsnr = '') THEN BEGIN
            SalesLine.RESET;
            SalesLine.SETRANGE("Document No.",GETFILTER("Nr."));
            SalesLine.SETRANGE("Manufacturer Code",'59');
            IF SalesLine.FINDFIRST THEN BEGIN
              REPEAT
                Artikel.GET(SalesLine."No.");
                IF Artikel."Software Upgrade Protection" = FALSE THEN BEGIN
                  TempServRelaDoc.RESET;
                  TempServRelaDoc.SETRANGE(Art,TempServRelaDoc.Art :: "SUP-AU");
                  TempServRelaDoc.SETRANGE("Nr.",SalesLine."Document No.");
                  TempServRelaDoc.SETRANGE("Zeilennr.",zeilennr);
                  TempServRelaDoc.SETRANGE("Belegnr.",SalesLine."Document No.");
                  TempServRelaDoc.SETRANGE("Belegzeilennr.",SalesLine."Line No.");
                  IF NOT TempServRelaDoc.FINDFIRST THEN BEGIN
                    ServRelaDoc.INIT;
                    ServRelaDoc.Art := Art :: "SUP-AU";
                    ServRelaDoc."Nr." := SalesLine."Document No.";
                    ServRelaDoc."Zeilennr." := zeilennr;
                    ServRelaDoc."Belegnr." := SalesLine."Document No.";
                    ServRelaDoc."Belegzeilennr." := SalesLine."Line No.";
                    ServRelaDoc."Debitornr." := SalesLine."Sell-to Customer No.";
                    ServRelaDoc."SUP Artikelnr." := SalesLine_Service."No.";
                    ServRelaDoc.VALIDATE("Ger„te Artikelnr.",SalesLine."No.");
                    ServRelaDoc."Menge kalk." := SalesLine."Outstanding Quantity";
                    //Laufzeit vorbelegen
                    Opt.RESET;
                    Opt.SETRANGE("Tabellen ID",50024);
                    Opt.SETRANGE("Feld ID",44);
                    Opt.SETRANGE("Nr.",ServRelaDoc."SUP Artikelnr.");
                    IF Opt.FINDFIRST THEN
                      ServRelaDoc.Laufzeit := Opt.Code;
                    ServRelaDoc.VALIDATE("Quotenr.",quotenr);
                    ServRelaDoc.Gruppierung := Gruppieren(ServRelaDoc."Belegnr.",
                    ServRelaDoc."Belegzeilennr.",ServRelaDoc.Basisger„t);
                    ServRelaDoc.INSERT(TRUE);
                  END;
                END;
              UNTIL SalesLine.NEXT = 0;
              CurrPage.UPDATE;
            END;
          END ELSE BEGIN
            ////Service bezieht sich auf Lieferschein
            IF (lieferscheinnr <> '') AND (lieferscheinnr <> GETFILTER("Nr.")) THEN BEGIN
              ShipLine.RESET;
              ShipLine.SETRANGE("Document No.",lieferscheinnr);
              ShipLine.SETRANGE("Manufacturer Code",'59');
              ShipLine.SETFILTER(Quantity,'>%1',0);
              IF ShipLine.FINDFIRST THEN BEGIN
                REPEAT
                  Artikel.GET(ShipLine."No.");
                  IF Artikel."Software Upgrade Protection" = FALSE THEN BEGIN
                    TempServRelaDoc.RESET;
                    TempServRelaDoc.SETRANGE(Art,TempServRelaDoc.Art :: "SUP-AU");
                    TempServRelaDoc.SETRANGE("Nr.",GETFILTER("Nr."));
                    TempServRelaDoc.SETRANGE("Zeilennr.",zeilennr);
                    TempServRelaDoc.SETRANGE("Belegnr.",ShipLine."Document No.");
                    TempServRelaDoc.SETRANGE("Belegzeilennr.",ShipLine."Line No.");
                    IF NOT TempServRelaDoc.FINDFIRST THEN BEGIN
                      ServRelaDoc.INIT;
                      ServRelaDoc.Art := Art :: "SUP-AU";
                      ServRelaDoc."Nr." := SalesLine_Service."Document No.";
                      ServRelaDoc."Zeilennr." := zeilennr;
                      ServRelaDoc."Belegnr." := ShipLine."Document No.";
                      ServRelaDoc."Belegzeilennr." := ShipLine."Line No.";
                      ServRelaDoc."Debitornr." := SalesLine_Service."Sell-to Customer No.";
                      ServRelaDoc."SUP Artikelnr." := SalesLine_Service."No.";
                      ServRelaDoc.VALIDATE("Ger„te Artikelnr.",ShipLine."No.");
                      ServRelaDoc."Menge kalk." := ShipLine.Quantity;
                      ServRelaDoc."Nachtr„gliche Service Order" := TRUE;
                      //Laufzeit vorbelegen
                      Opt.RESET;
                      Opt.SETRANGE("Tabellen ID",50024);
                      Opt.SETRANGE("Feld ID",44);
                      Opt.SETRANGE("Nr.",ServRelaDoc."SUP Artikelnr.");
                      IF Opt.FINDFIRST THEN
                        ServRelaDoc.Laufzeit := Opt.Code;
                      ServRelaDoc.VALIDATE("Quotenr.",quotenr);
                      ServRelaDoc.Gruppierung := Gruppieren(ServRelaDoc."Belegnr.",
                      ServRelaDoc."Belegzeilennr.",ServRelaDoc.Basisger„t);
                      ServRelaDoc.INSERT(TRUE);
                    END;
                  END;
                UNTIL ShipLine.NEXT = 0;
                CurrPage.UPDATE;
              END ELSE BEGIN
                Beleghistorie.RESET;
                Beleghistorie.SETRANGE(Belegart,Beleghistorie.Belegart::"Sales Shipment");
                Beleghistorie.SETRANGE("Belegnr.",lieferscheinnr);
                Beleghistorie.SETRANGE(Herstellercode,'59');
                Beleghistorie.SETFILTER(Menge,'>%1',0);
                IF Beleghistorie.FINDFIRST THEN BEGIN
                  REPEAT
                    Artikel.GET(Beleghistorie."Artikelnr.");
                    IF Artikel."Software Upgrade Protection" = FALSE THEN BEGIN
                      TempServRelaDoc.RESET;
                      TempServRelaDoc.SETRANGE(Art,TempServRelaDoc.Art :: "SUP-AU");
                      TempServRelaDoc.SETRANGE("Nr.",GETFILTER("Nr."));
                      TempServRelaDoc.SETRANGE("Zeilennr.",zeilennr);
                      TempServRelaDoc.SETRANGE("Belegnr.",Beleghistorie."Belegnr.");
                      TempServRelaDoc.SETRANGE("Belegzeilennr.",Beleghistorie."Zeilennr.");
                      IF NOT TempServRelaDoc.FINDFIRST THEN BEGIN
                        ServRelaDoc.INIT;
                        ServRelaDoc.Art := Art :: "SUP-AU";
                        ServRelaDoc."Nr." := SalesLine_Service."Document No.";
                        ServRelaDoc."Zeilennr." := zeilennr;
                        ServRelaDoc."Belegnr." := Beleghistorie."Belegnr.";
                        ServRelaDoc."Belegzeilennr." := Beleghistorie."Zeilennr.";
                        ServRelaDoc."Debitornr." := SalesLine_Service."Sell-to Customer No.";
                        ServRelaDoc."SUP Artikelnr." := SalesLine_Service."No.";
                        ServRelaDoc.VALIDATE("Ger„te Artikelnr.",Beleghistorie."Artikelnr.");
                        ServRelaDoc."Menge kalk." := Beleghistorie.Menge;
                        ServRelaDoc."Nachtr„gliche Service Order" := TRUE;
                        //Laufzeit vorbelegen
                        Opt.RESET;
                        Opt.SETRANGE("Tabellen ID",50024);
                        Opt.SETRANGE("Feld ID",44);
                        Opt.SETRANGE("Nr.",ServRelaDoc."SUP Artikelnr.");
                        IF Opt.FINDFIRST THEN
                          ServRelaDoc.Laufzeit := Opt.Code;
                        ServRelaDoc.VALIDATE("Quotenr.",quotenr);
                        ServRelaDoc.Gruppierung := Gruppieren(ServRelaDoc."Belegnr.",
                        ServRelaDoc."Belegzeilennr.",ServRelaDoc.Basisger„t);
                        ServRelaDoc.INSERT(TRUE);
                      END;
                    END;
                  UNTIL Beleghistorie.NEXT = 0;
                  CurrPage.UPDATE
                END ELSE
                  ERROR(Text000);
              END
            END ELSE BEGIN
              ////Service bezieht sich auf einen Wartungsvertrag
              IF (wartungsnr <> '') THEN BEGIN
                ServicePos.RESET;
                ServicePos.SETRANGE(Art,ServicePos.Art :: Service);
                ServicePos.SETRANGE("Wartungsvertragsnr.",wartungsnr);
                //ServicePos.SETRANGE(Verl„ngerung,FALSE);
                ServicePos.SETRANGE(Inaktiv,FALSE);
                IF ServicePos.FINDFIRST THEN BEGIN
                  REPEAT
                    CompareSystemPos.RESET;
                    CompareSystemPos.SETRANGE(Art,CompareSystemPos.Art :: System);
                    CompareSystemPos.SETRANGE(Inaktiv,FALSE);
                    CompareSystemPos.SETRANGE("Wartungsvertragsnr.",wartungsnr);
                    CompareSystemPos.SETRANGE("Nr.",ServicePos."Urspr. Lieferscheinnr.");
                    CompareSystemPos.SETRANGE("Belegzeilennr.",ServicePos."Urspr. Lieferscheinzeilennr.");
                    IF CompareSystemPos.FINDFIRST THEN BEGIN
                      TempServRelaDoc.RESET;
                      TempServRelaDoc.SETRANGE(Art,TempServRelaDoc.Art :: "SUP-AU");
                      TempServRelaDoc.SETRANGE("Nr.",GETFILTER("Nr."));
                      TempServRelaDoc.SETRANGE("Zeilennr.",zeilennr);
                      TempServRelaDoc.SETRANGE("Belegnr.",ServicePos."Urspr. Lieferscheinnr.");
                      TempServRelaDoc.SETRANGE("Belegzeilennr.",ServicePos."Urspr. Lieferscheinzeilennr.");
                      IF NOT TempServRelaDoc.FINDFIRST THEN BEGIN
                        ServRelaDoc.INIT;
                        ServRelaDoc.Art := Art :: "SUP-AU";
                        ServRelaDoc."Nr." := SalesLine_Service."Document No.";
                        ServRelaDoc."Zeilennr." := zeilennr;
                        ServRelaDoc."Belegnr." := ServicePos."Urspr. Lieferscheinnr.";
                        ServRelaDoc."Belegzeilennr." := ServicePos."Urspr. Lieferscheinzeilennr.";
                        ServRelaDoc."Debitornr." := SalesLine_Service."Sell-to Customer No.";
                        ServRelaDoc."SUP Artikelnr." := SalesLine_Service."No.";
                        ServRelaDoc.VALIDATE("Ger„te Artikelnr.",ServicePos."Artikelnr.");
                        ServRelaDoc."Menge kalk." := ServicePos.Menge;
                        ServRelaDoc."Vertragsnr. bernommen" := wartungsnr;
                        ServRelaDoc."Nachtr„gliche Service Order" := TRUE;
                        ServRelaDoc.Fremderwerb := ServicePos.Fremderwerb;
                        //Laufzeit vorbelegen
                        Opt.RESET;
                        Opt.SETRANGE("Tabellen ID",50024);
                        Opt.SETRANGE("Feld ID",44);
                        Opt.SETRANGE("Nr.",ServRelaDoc."SUP Artikelnr.");
                        IF Opt.FINDFIRST THEN
                          ServRelaDoc.Laufzeit := Opt.Code;
                        ServRelaDoc.VALIDATE("Quotenr.",quotenr);
                        ServRelaDoc.Gruppierung := Gruppieren(ServRelaDoc."Belegnr.",
                        ServRelaDoc."Belegzeilennr.",ServRelaDoc.Basisger„t);
                        ServRelaDoc.INSERT(TRUE);
                      END ELSE BEGIN
                        CompareSystemPos.RESET;
                        CompareSystemPos.SETRANGE(Art,CompareSystemPos.Art :: System);
                        CompareSystemPos.SETRANGE(Inaktiv,FALSE);
                        CompareSystemPos.SETRANGE("Wartungsvertragsnr.",wartungsnr);
                        CompareSystemPos.SETRANGE("Nr.",ServicePos."Urspr. Lieferscheinnr.");
                        CompareSystemPos.SETRANGE("Belegzeilennr.",ServicePos."Urspr. Lieferscheinzeilennr.");
                        IF CompareSystemPos.FINDFIRST THEN BEGIN
                          menge_gesamt := 0;
                          REPEAT
                            menge_gesamt := menge_gesamt + CompareSystemPos.Menge;
                          UNTIL CompareSystemPos.NEXT = 0;
                          IF TempServRelaDoc."Menge kalk." < menge_gesamt THEN BEGIN
                            TempServRelaDoc."Menge kalk." := TempServRelaDoc."Menge kalk." + ServicePos.Menge;
                            TempServRelaDoc.MODIFY;
                          END;
                        END;
                      END;
                    END;
                  UNTIL ServicePos.NEXT = 0;
                  CurrPage.UPDATE;
                END ELSE
                  ERROR(Text000);
              END ELSE
                ERROR(Text000);
            END;
          END;
        END ELSE BEGIN
          ////Service bezieht sich auf archivierten Auftrag
          EVALUATE(zeilennr,GETFILTER("Zeilennr."));
          SalesLineArchive_Service.RESET;
          SalesLineArchive_Service.SETRANGE("Document No.",GETFILTER("Nr."));
          SalesLineArchive_Service.SETRANGE("Line No.",zeilennr);
          IF SalesLineArchive_Service.FINDFIRST THEN BEGIN
            IF (lieferscheinnr = '') AND (wartungsnr = '') THEN BEGIN
              SalesLineArchive.RESET;
              SalesLineArchive.SETRANGE("Document No.",GETFILTER("Nr."));
              SalesLineArchive.SETRANGE("Manufacturer Code",'59');
              IF SalesLineArchive.FINDFIRST THEN BEGIN
                REPEAT
                  Artikel.GET(SalesLineArchive."No.");
                  IF Artikel."Software Upgrade Protection" = FALSE THEN BEGIN
                    TempServRelaDoc.RESET;
                    TempServRelaDoc.SETRANGE(Art,TempServRelaDoc.Art :: "SUP-AU");
                    TempServRelaDoc.SETRANGE("Nr.",SalesLineArchive."Document No.");
                    TempServRelaDoc.SETRANGE("Zeilennr.",zeilennr);
                    TempServRelaDoc.SETRANGE("Belegnr.",SalesLineArchive."Document No.");
                    TempServRelaDoc.SETRANGE("Belegzeilennr.",SalesLineArchive."Line No.");
                    IF NOT TempServRelaDoc.FINDFIRST THEN BEGIN
                      ServRelaDoc.INIT;
                      ServRelaDoc.Art := Art :: "SUP-AU";
                      ServRelaDoc."Nr." := SalesLineArchive."Document No.";
                      ServRelaDoc."Zeilennr." := zeilennr;
                      ServRelaDoc."Belegnr." := SalesLineArchive."Document No.";
                      ServRelaDoc."Belegzeilennr." := SalesLineArchive."Line No.";
                      ServRelaDoc."Debitornr." := SalesLineArchive."Sell-to Customer No.";
                      ServRelaDoc."SUP Artikelnr." := SalesLineArchive."No.";
                      ServRelaDoc.VALIDATE("Ger„te Artikelnr.",SalesLineArchive."No.");
                      ServRelaDoc."Menge kalk." := SalesLineArchive."Outstanding Quantity";
                      //Laufzeit vorbelegen
                      Opt.RESET;
                      Opt.SETRANGE("Tabellen ID",50024);
                      Opt.SETRANGE("Feld ID",44);
                      Opt.SETRANGE("Nr.",ServRelaDoc."SUP Artikelnr.");
                      IF Opt.FINDFIRST THEN
                        ServRelaDoc.Laufzeit := Opt.Code;
                      ServRelaDoc.VALIDATE("Quotenr.",quotenr);
                      ServRelaDoc.Gruppierung := Gruppieren(ServRelaDoc."Belegnr.",
                      ServRelaDoc."Belegzeilennr.",ServRelaDoc.Basisger„t);
                      ServRelaDoc.INSERT(TRUE);
                    END;
                  END;
                UNTIL SalesLineArchive.NEXT = 0;
                CurrPage.UPDATE;
              END;
            END ELSE BEGIN
              ////Service bezieht sich auf Lieferschein
              IF (lieferscheinnr <> '') AND (lieferscheinnr <> GETFILTER("Nr.")) THEN BEGIN
                ShipLine.RESET;
                ShipLine.SETRANGE("Document No.",lieferscheinnr);
                ShipLine.SETRANGE("Manufacturer Code",'59');
                ShipLine.SETFILTER(Quantity,'>%1',0);
                IF ShipLine.FINDFIRST THEN BEGIN
                  REPEAT
                    Artikel.GET(ShipLine."No.");
                    IF Artikel."Software Upgrade Protection" = FALSE THEN BEGIN
                      TempServRelaDoc.RESET;
                      TempServRelaDoc.SETRANGE(Art,TempServRelaDoc.Art :: "SUP-AU");
                      TempServRelaDoc.SETRANGE("Nr.",GETFILTER("Nr."));
                      TempServRelaDoc.SETRANGE("Zeilennr.",zeilennr);
                      TempServRelaDoc.SETRANGE("Belegnr.",ShipLine."Document No.");
                      TempServRelaDoc.SETRANGE("Belegzeilennr.",ShipLine."Line No.");
                      IF NOT TempServRelaDoc.FINDFIRST THEN BEGIN
                        ServRelaDoc.INIT;
                        ServRelaDoc.Art := Art :: "SUP-AU";
                        ServRelaDoc."Nr." := SalesLineArchive_Service."Document No.";
                        ServRelaDoc."Zeilennr." := zeilennr;
                        ServRelaDoc."Belegnr." := ShipLine."Document No.";
                        ServRelaDoc."Belegzeilennr." := ShipLine."Line No.";
                        ServRelaDoc."Debitornr." := SalesLineArchive_Service."Sell-to Customer No.";
                        ServRelaDoc."SUP Artikelnr." := SalesLineArchive_Service."No.";
                        ServRelaDoc.VALIDATE("Ger„te Artikelnr.",ShipLine."No.");
                        ServRelaDoc."Menge kalk." := ShipLine.Quantity;
                        ServRelaDoc."Nachtr„gliche Service Order" := TRUE;
                        //Laufzeit vorbelegen
                        Opt.RESET;
                        Opt.SETRANGE("Tabellen ID",50024);
                        Opt.SETRANGE("Feld ID",44);
                        Opt.SETRANGE("Nr.",ServRelaDoc."SUP Artikelnr.");
                        IF Opt.FINDFIRST THEN
                          ServRelaDoc.Laufzeit := Opt.Code;
                        ServRelaDoc.VALIDATE("Quotenr.",quotenr);
                        ServRelaDoc.Gruppierung := Gruppieren(ServRelaDoc."Belegnr.",
                        ServRelaDoc."Belegzeilennr.",ServRelaDoc.Basisger„t);
                        ServRelaDoc.INSERT(TRUE);
                      END;
                    END;
                  UNTIL ShipLine.NEXT = 0;
                  CurrPage.UPDATE;
                END ELSE BEGIN
                  Beleghistorie.RESET;
                  Beleghistorie.SETRANGE(Belegart,Beleghistorie.Belegart::"Sales Shipment");
                  Beleghistorie.SETRANGE("Belegnr.",lieferscheinnr);
                  Beleghistorie.SETRANGE(Herstellercode,'59');
                  Beleghistorie.SETFILTER(Menge,'>%1',0);
                  IF Beleghistorie.FINDFIRST THEN BEGIN
                    REPEAT
                      Artikel.GET(Beleghistorie."Artikelnr.");
                      IF Artikel."Software Upgrade Protection" = FALSE THEN BEGIN
                        TempServRelaDoc.RESET;
                        TempServRelaDoc.SETRANGE(Art,TempServRelaDoc.Art :: "SUP-AU");
                        TempServRelaDoc.SETRANGE("Nr.",GETFILTER("Nr."));
                        TempServRelaDoc.SETRANGE("Zeilennr.",zeilennr);
                        TempServRelaDoc.SETRANGE("Belegnr.",Beleghistorie."Belegnr.");
                        TempServRelaDoc.SETRANGE("Belegzeilennr.",Beleghistorie."Zeilennr.");
                        IF NOT TempServRelaDoc.FINDFIRST THEN BEGIN
                          ServRelaDoc.INIT;
                          ServRelaDoc.Art := Art :: "SUP-AU";
                          ServRelaDoc."Nr." := SalesLineArchive_Service."Document No.";
                          ServRelaDoc."Zeilennr." := zeilennr;
                          ServRelaDoc."Belegnr." := Beleghistorie."Belegnr.";
                          ServRelaDoc."Belegzeilennr." := Beleghistorie."Zeilennr.";
                          ServRelaDoc."Debitornr." := SalesLineArchive_Service."Sell-to Customer No.";
                          ServRelaDoc."SUP Artikelnr." := SalesLineArchive_Service."No.";
                          ServRelaDoc.VALIDATE("Ger„te Artikelnr.",Beleghistorie."Artikelnr.");
                          ServRelaDoc."Menge kalk." := Beleghistorie.Menge;
                          ServRelaDoc."Nachtr„gliche Service Order" := TRUE;
                          //Laufzeit vorbelegen
                          Opt.RESET;
                          Opt.SETRANGE("Tabellen ID",50024);
                          Opt.SETRANGE("Feld ID",44);
                          Opt.SETRANGE("Nr.",ServRelaDoc."SUP Artikelnr.");
                          IF Opt.FINDFIRST THEN
                            ServRelaDoc.Laufzeit := Opt.Code;
                          ServRelaDoc.VALIDATE("Quotenr.",quotenr);
                          ServRelaDoc.Gruppierung := Gruppieren(ServRelaDoc."Belegnr.",
                          ServRelaDoc."Belegzeilennr.",ServRelaDoc.Basisger„t);
                          ServRelaDoc.INSERT(TRUE);
                        END;
                      END;
                    UNTIL Beleghistorie.NEXT = 0;
                    CurrPage.UPDATE
                  END ELSE
                    ERROR(Text000);
                END
              END ELSE BEGIN
                ////Service bezieht sich auf einen Wartungsvertrag
                IF (wartungsnr <> '') THEN BEGIN
                  ServicePos.RESET;
                  ServicePos.SETRANGE(Art,ServicePos.Art :: Service);
                  ServicePos.SETRANGE("Wartungsvertragsnr.",wartungsnr);
                  //ServicePos.SETRANGE(Verl„ngerung,FALSE);
                  ServicePos.SETRANGE(Inaktiv,FALSE);
                  IF ServicePos.FINDFIRST THEN BEGIN
                    REPEAT
                      CompareSystemPos.RESET;
                      CompareSystemPos.SETRANGE(Art,CompareSystemPos.Art :: System);
                      CompareSystemPos.SETRANGE(Inaktiv,FALSE);
                      CompareSystemPos.SETRANGE("Wartungsvertragsnr.",wartungsnr);
                      CompareSystemPos.SETRANGE("Nr.",ServicePos."Urspr. Lieferscheinnr.");
                      CompareSystemPos.SETRANGE("Belegzeilennr.",ServicePos."Urspr. Lieferscheinzeilennr.");
                      IF CompareSystemPos.FINDFIRST THEN BEGIN
                        TempServRelaDoc.RESET;
                        TempServRelaDoc.SETRANGE(Art,TempServRelaDoc.Art :: "SUP-AU");
                        TempServRelaDoc.SETRANGE("Nr.",GETFILTER("Nr."));
                        TempServRelaDoc.SETRANGE("Zeilennr.",zeilennr);
                        TempServRelaDoc.SETRANGE("Belegnr.",ServicePos."Urspr. Lieferscheinnr.");
                        TempServRelaDoc.SETRANGE("Belegzeilennr.",ServicePos."Urspr. Lieferscheinzeilennr.");
                        IF NOT TempServRelaDoc.FINDFIRST THEN BEGIN
                          ServRelaDoc.INIT;
                          ServRelaDoc.Art := Art :: "SUP-AU";
                          ServRelaDoc."Nr." := SalesLineArchive_Service."Document No.";
                          ServRelaDoc."Zeilennr." := zeilennr;
                          ServRelaDoc."Belegnr." := ServicePos."Urspr. Lieferscheinnr.";
                          ServRelaDoc."Belegzeilennr." := ServicePos."Urspr. Lieferscheinzeilennr.";
                          ServRelaDoc."Debitornr." := SalesLineArchive_Service."Sell-to Customer No.";
                          ServRelaDoc."SUP Artikelnr." := SalesLineArchive_Service."No.";
                          ServRelaDoc.VALIDATE("Ger„te Artikelnr.",ServicePos."Artikelnr.");
                          ServRelaDoc."Menge kalk." := ServicePos.Menge;
                          ServRelaDoc."Vertragsnr. bernommen" := wartungsnr;
                          ServRelaDoc."Nachtr„gliche Service Order" := TRUE;
                          ServRelaDoc.Fremderwerb := ServicePos.Fremderwerb;
                          //Laufzeit vorbelegen
                          Opt.RESET;
                          Opt.SETRANGE("Tabellen ID",50024);
                          Opt.SETRANGE("Feld ID",44);
                          Opt.SETRANGE("Nr.",ServRelaDoc."SUP Artikelnr.");
                          IF Opt.FINDFIRST THEN
                            ServRelaDoc.Laufzeit := Opt.Code;
                          ServRelaDoc.VALIDATE("Quotenr.",quotenr);
                          ServRelaDoc.Gruppierung := Gruppieren(ServRelaDoc."Belegnr.",
                          ServRelaDoc."Belegzeilennr.",ServRelaDoc.Basisger„t);
                          ServRelaDoc.INSERT(TRUE);
                        END ELSE BEGIN
                          CompareSystemPos.RESET;
                          CompareSystemPos.SETRANGE(Art,CompareSystemPos.Art :: System);
                          CompareSystemPos.SETRANGE(Inaktiv,FALSE);
                          CompareSystemPos.SETRANGE("Wartungsvertragsnr.",wartungsnr);
                          CompareSystemPos.SETRANGE("Nr.",ServicePos."Urspr. Lieferscheinnr.");
                          CompareSystemPos.SETRANGE("Belegzeilennr.",ServicePos."Urspr. Lieferscheinzeilennr.");
                          IF CompareSystemPos.FINDFIRST THEN BEGIN
                            menge_gesamt := 0;
                            REPEAT
                              menge_gesamt := menge_gesamt + CompareSystemPos.Menge;
                            UNTIL CompareSystemPos.NEXT = 0;
                            IF TempServRelaDoc."Menge kalk." < menge_gesamt THEN BEGIN
                              TempServRelaDoc."Menge kalk." := TempServRelaDoc."Menge kalk." + ServicePos.Menge;
                              TempServRelaDoc.MODIFY;
                            END;
                          END;
                        END;
                      END;
                    UNTIL ServicePos.NEXT = 0;
                    CurrPage.UPDATE;
                  END ELSE
                    ERROR(Text000);
                END ELSE
                  ERROR(Text000);
              END;
            END;
          END ELSE
            ERROR(Text000);
        END;
      END;
    END;

    PROCEDURE Logikšbernahme@1140009();
    VAR
      zeilennr_service@1140008 : Integer;
      zeilennr_ger„t@1140010 : Integer;
    BEGIN
      IF Rec.HASFILTER THEN BEGIN
        EVALUATE(zeilennr,GETFILTER("Zeilennr."));

        SalesLine_Service.RESET;
        SalesLine_Service.SETRANGE(Type,SalesLine_Service.Type :: Item);
        SalesLine_Service.SETRANGE("Document No.",GETFILTER("Nr."));
        SalesLine_Service.SETRANGE("Line No.",zeilennr);
        IF SalesLine_Service.FINDFIRST THEN BEGIN
          IF (lieferscheinnr <> '') THEN ERROR(Text008);

          //Finde die logisch n„chst gelegene Position eines Serviceartikels, vor dieser Position
          zeilennr_service := 0;
          zeilennr_ger„t := 0;

          SalesLine.RESET;
          SalesLine.SETRANGE(Type,SalesLine.Type :: Item);
          SalesLine.SETRANGE("Document No.",GETFILTER("Nr."));
          SalesLine.SETFILTER("Line No.",'<%1',SalesLine_Service."Line No.");
          SalesLine.ASCENDING(FALSE);
          IF SalesLine.FINDFIRST THEN
            REPEAT
              IF Artikel.GET(SalesLine."No.") THEN BEGIN

                IF (Artikel."Software Upgrade Protection" = TRUE) AND (zeilennr_ger„t <> 0) THEN
                  zeilennr_service := SalesLine."Line No.";

                IF Artikel."Software Upgrade Protection" = FALSE THEN
                  zeilennr_ger„t := SalesLine."Line No.";

              END;
            UNTIL (SalesLine.NEXT = 0) OR ((zeilennr_ger„t <> 0) AND (zeilennr_service <> 0));

          ////Service bezieht sich auf Auftrag
          SalesLine.RESET;
          SalesLine.SETRANGE("Document No.",GETFILTER("Nr."));
          SalesLine.SETRANGE("Line No.",zeilennr_service,SalesLine_Service."Line No.");
          SalesLine.SETRANGE("Manufacturer Code",'59');
          IF SalesLine.FINDFIRST THEN BEGIN
            REPEAT
              Artikel.GET(SalesLine."No.");
              IF Artikel."Software Upgrade Protection" = FALSE THEN BEGIN
                TempServRelaDoc.RESET;
                TempServRelaDoc.SETRANGE(Art,TempServRelaDoc.Art :: "SUP-AU");
                TempServRelaDoc.SETRANGE("Nr.",SalesLine."Document No.");
                TempServRelaDoc.SETRANGE("Zeilennr.",zeilennr);
                TempServRelaDoc.SETRANGE("Belegnr.",SalesLine."Document No.");
                TempServRelaDoc.SETRANGE("Belegzeilennr.",SalesLine."Line No.");
                IF NOT TempServRelaDoc.FINDFIRST THEN BEGIN
                  ServRelaDoc.INIT;
                  ServRelaDoc.Art := Art :: "SUP-AU";
                  ServRelaDoc."Nr." := SalesLine."Document No.";
                  ServRelaDoc."Zeilennr." := zeilennr;
                  ServRelaDoc."Belegnr." := SalesLine."Document No.";
                  ServRelaDoc."Belegzeilennr." := SalesLine."Line No.";
                  ServRelaDoc."Debitornr." := SalesLine."Sell-to Customer No.";
                  ServRelaDoc."SUP Artikelnr." := SalesLine_Service."No.";
                  ServRelaDoc.VALIDATE("Ger„te Artikelnr.",SalesLine."No.");
                  ServRelaDoc."Menge kalk." := SalesLine."Outstanding Quantity";
                  //Laufzeit vorbelegen
                  Opt.RESET;
                  Opt.SETRANGE("Tabellen ID",50024);
                  Opt.SETRANGE("Feld ID",44);
                  Opt.SETRANGE("Nr.",ServRelaDoc."SUP Artikelnr.");
                  IF Opt.FINDFIRST THEN
                    ServRelaDoc.Laufzeit := Opt.Code;
                  ServRelaDoc.VALIDATE("Quotenr.",quotenr);
                  ServRelaDoc.Gruppierung := Gruppieren(ServRelaDoc."Belegnr.",
                  ServRelaDoc."Belegzeilennr.",ServRelaDoc.Basisger„t);
                  ServRelaDoc.INSERT(TRUE);
                END;
              END;
            UNTIL SalesLine.NEXT = 0;
            CurrPage.UPDATE;
          END;
        END;
      END;
    END;

    PROCEDURE AnlageFremderwerbsPos@1140006();
    BEGIN
      IF Rec.HASFILTER THEN BEGIN
        EVALUATE(zeilennr,GETFILTER("Zeilennr."));

        SalesLine_Service.RESET;
        SalesLine_Service.SETRANGE("Document No.",GETFILTER("Nr."));
        SalesLine_Service.SETRANGE("Line No.",zeilennr);
        IF SalesLine_Service.FINDFIRST THEN BEGIN
          ServRelaDoc.INIT;
          ServRelaDoc.Art := Art :: "SUP-AU";
          ServRelaDoc."Nr." := SalesLine_Service."Document No.";
          ServRelaDoc."Zeilennr." := zeilennr;
          ServRelaDoc."Belegnr." := PseudoBelegNrErmitteln(ServRelaDoc."Nr.",ServRelaDoc."Zeilennr.");
          CheckServRelaDoc.RESET;
          CheckServRelaDoc.SETRANGE(Art,ServRelaDoc.Art);
          CheckServRelaDoc.SETRANGE("Nr.",SalesLine_Service."Document No.");
          CheckServRelaDoc.SETRANGE("Zeilennr.",ServRelaDoc."Zeilennr.");
          CheckServRelaDoc.SETRANGE(Fremderwerb,TRUE);
          IF NOT CheckServRelaDoc.FINDLAST THEN
            ServRelaDoc."Belegzeilennr." := 11111
          ELSE
            ServRelaDoc."Belegzeilennr." := CheckServRelaDoc."Belegzeilennr." + 11111;
          ServRelaDoc."Debitornr." := SalesLine_Service."Sell-to Customer No.";
          ServRelaDoc."SUP Artikelnr." := SalesLine_Service."No.";
          ServRelaDoc.Fremderwerb := TRUE;
          ServRelaDoc."Nachtr„gliche Service Order" := TRUE;
          //Laufzeit vorbelegen
          Opt.RESET;
          Opt.SETRANGE("Tabellen ID",50024);
          Opt.SETRANGE("Feld ID",44);
          Opt.SETRANGE("Nr.",ServRelaDoc."SUP Artikelnr.");
          IF Opt.FINDFIRST THEN
            ServRelaDoc.Laufzeit := Opt.Code;
          ServRelaDoc.VALIDATE("Quotenr.",quotenr);
          ServRelaDoc.Gruppierung := Gruppieren(ServRelaDoc."Belegnr.",
          ServRelaDoc."Belegzeilennr.",ServRelaDoc.Basisger„t);
          ServRelaDoc.INSERT(TRUE);
        END;
      END;
    END;

    PROCEDURE AnlageFremderwerb_TEMP@1140019();
    BEGIN
      IF Rec.HASFILTER THEN BEGIN
        EVALUATE(zeilennr,GETFILTER("Zeilennr."));

        SalesLine_Service.RESET;
        SalesLine_Service.SETRANGE("Document No.",GETFILTER("Nr."));
        SalesLine_Service.SETRANGE("Line No.",zeilennr);
        IF SalesLine_Service.FINDFIRST THEN BEGIN
          ServRelaDoc.INIT;
          ServRelaDoc.Art := Art :: "SUP-AU";
          ServRelaDoc."Nr." := SalesLine_Service."Document No.";
          ServRelaDoc."Zeilennr." := zeilennr;
          ServRelaDoc."Belegnr." := PseudoBelegNrErmitteln(ServRelaDoc."Nr.",ServRelaDoc."Zeilennr.");
          CheckServRelaDoc.RESET;
          CheckServRelaDoc.SETRANGE(Art,ServRelaDoc.Art);
          CheckServRelaDoc.SETRANGE("Nr.",SalesLine_Service."Document No.");
          CheckServRelaDoc.SETRANGE("Zeilennr.",ServRelaDoc."Zeilennr.");
          CheckServRelaDoc.SETRANGE(Fremderwerb,TRUE);
          IF NOT CheckServRelaDoc.FINDLAST THEN
            ServRelaDoc."Belegzeilennr." := 11111
          ELSE
            ServRelaDoc."Belegzeilennr." := CheckServRelaDoc."Belegzeilennr." + 11111;
          ServRelaDoc."Debitornr." := SalesLine_Service."Sell-to Customer No.";
          ServRelaDoc."SUP Artikelnr." := SalesLine_Service."No.";
          ServRelaDoc.Fremderwerb := TRUE;
          ServRelaDoc."Nachtr„gliche Service Order" := TRUE;
          //Laufzeit vorbelegen
          Opt.RESET;
          Opt.SETRANGE("Tabellen ID",50024);
          Opt.SETRANGE("Feld ID",44);
          Opt.SETRANGE("Nr.",ServRelaDoc."SUP Artikelnr.");
          IF Opt.FINDFIRST THEN
            ServRelaDoc.Laufzeit := Opt.Code;
          ServRelaDoc.VALIDATE("Quotenr.",quotenr);
          ServRelaDoc.Gruppierung := Gruppieren(ServRelaDoc."Belegnr.",
          ServRelaDoc."Belegzeilennr.",ServRelaDoc.Basisger„t);
          ServRelaDoc.INSERT(TRUE);
        END;
      END;
    END;

    PROCEDURE PreiseKalkulieren@1140001();
    VAR
      Belegzeile@1140010 : Record 37;
      Ger„teArtikel@1140012 : Record 27;
      serv_price_au@1140004 : Decimal;
      serv_price_einzeln@1140005 : Decimal;
      serv_dc_au@1140009 : Decimal;
      serv_dc_einzeln@1140008 : Decimal;
      v_artikelnr@1140013 : Code[20];
      v_belegnr_fremd@1140016 : Code[20];
      v_laufzeit@1140006 : Integer;
      anzahl_basissysteme@1140014 : Integer;
      anzahl_basissysteme_fremd@1140015 : Integer;
      ACTS@1140003 : Boolean;
    BEGIN
      anzahl_basissysteme := 0;
      anzahl_basissysteme_fremd := 0;

      IF Rec.HASFILTER THEN BEGIN

        //Verbindet zur Belegzeile des zu kalkulierenden Service Artikels
        Belegzeile.RESET;
        Belegzeile.SETRANGE("Document No.","Nr.");
        Belegzeile.SETRANGE("Line No.","Zeilennr.");
        Belegzeile.FINDFIRST;

        //ACHAT
        Artikel.GET(Belegzeile."No.");
        IF (Artikel.Artikelgruppe = 'ACHAT') AND (kalk_prozentsatz < 50) THEN
          ERROR(Text018,Artikel.Artikelgruppe);

        //Verhindert jegliche Ausfhrungen oder Žnderungen, solange noch kein Basisger„t hinterlegt ist
        ServRelaDoc.RESET;
        ServRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
        ServRelaDoc.SETRANGE(Art,ServRelaDoc.Art :: "SUP-AU");
        ServRelaDoc.SETRANGE("Nr.","Nr.");
        ServRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
        ServRelaDoc.SETRANGE(Basisger„t,TRUE);
        IF NOT ServRelaDoc.FINDFIRST THEN BEGIN
          IF NOT CONFIRM(Text010,FALSE) THEN
            EXIT;
        END ELSE
          REPEAT
            Ger„teArtikel.GET(ServRelaDoc."Ger„te Artikelnr.");
            IF (Ger„teArtikel.Serviceklassifizierung = 'SYSTEM FLAT') AND (ServRelaDoc.Fremderwerb = TRUE) THEN
              anzahl_basissysteme_fremd += 1;
            IF (v_artikelnr <> '') AND (ServRelaDoc."Ger„te Artikelnr." <> v_artikelnr) THEN
              ERROR(Text016);
            IF (v_artikelnr <> '') AND (ServRelaDoc."Ger„te Artikelnr." = v_artikelnr) AND (ServRelaDoc.Fremderwerb = TRUE)
            AND (ServRelaDoc."Belegnr." <> v_belegnr_fremd) AND (anzahl_basissysteme_fremd > 1) THEN
              ERROR(Text022);
            v_artikelnr := ServRelaDoc."Ger„te Artikelnr.";
            IF Ger„teArtikel.Serviceklassifizierung <> 'SYSTEM FLAT' THEN BEGIN
              anzahl_basissysteme += 1;
              IF anzahl_basissysteme > 1 THEN
                ERROR(Text016);
            END;
            IF ServRelaDoc.Fremderwerb THEN
              v_belegnr_fremd := ServRelaDoc."Belegnr.";
          UNTIL ServRelaDoc.NEXT = 0;

        serv_price_au := 0;
        serv_dc_au := 0;
        EVALUATE(zeilennr,GETFILTER("Zeilennr."));

        ServRelaDoc.RESET;
        ServRelaDoc.SETRANGE(Art,ServRelaDoc.Art :: "SUP-AU");
        ServRelaDoc.SETRANGE("Nr.","Nr.");
        ServRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
        IF ServRelaDoc.FINDFIRST THEN
          REPEAT
            IF (Pruefung_ignorieren(ServRelaDoc."SUP Artikelnr.",ServRelaDoc."Ger„te Artikelnr.",ServRelaDoc.Basisger„t) = FALSE)
            AND (ServRelaDoc."Menge kalk." > 1) THEN
              ERROR(Text001);

            IF (ServRelaDoc."Wartungsvertragsnr." <> '') AND (ServRelaDoc."Vertragsnr. bernommen" <> '') THEN
              ERROR(Text019);

            ServRelaDoc.TESTFIELD(Laufzeit);
            ServRelaDoc.TESTFIELD("Menge kalk.");

            IF ServRelaDoc.Fremderwerb = FALSE THEN BEGIN
              //Service bezieht sich auf Auftrag
              SalesLine.RESET;
              SalesLine.SETRANGE("Document No.",ServRelaDoc."Belegnr.");
              SalesLine.SETRANGE("Line No.",ServRelaDoc."Belegzeilennr.");
              SalesLine.SETRANGE("Manufacturer Code",'59');
              SalesLine.SETFILTER("Outstanding Quantity",'>%1',0);
              IF SalesLine.FINDFIRST THEN BEGIN
                EVALUATE(v_laufzeit,COPYSTR(ServRelaDoc.Laufzeit,1,STRPOS(ServRelaDoc.Laufzeit,'M')-1));
                serv_price_einzeln := TOPASServiceModul.Gen_Service_VK(ServRelaDoc."SUP Artikelnr.",
                ServRelaDoc."Ger„te Artikelnr.",v_laufzeit,ServRelaDoc."Belegnr.",ServRelaDoc."Belegzeilennr.",
                ServRelaDoc.Fremderwerb,ServRelaDoc.Basisger„t,FALSE,kalk_prozentsatz,Belegzeile."Currency Code");
                ServRelaDoc."Service VK-Preis einzeln" := serv_price_einzeln;
                ServRelaDoc."Service VK-Preis Zeilenbetrag" := serv_price_einzeln * ServRelaDoc."Menge kalk.";
                serv_price_au := serv_price_au + (ServRelaDoc."Menge kalk." * serv_price_einzeln);
                serv_dc_einzeln := TOPASServiceModul.Gen_Service_DC(ServRelaDoc."SUP Artikelnr.",ServRelaDoc."Ger„te Artikelnr.",
                v_laufzeit,FALSE,Belegzeile.Einkaufsw„hrungscode,ServRelaDoc."Quotenr.");
                serv_dc_au := serv_dc_au + (ServRelaDoc."Menge kalk." * serv_dc_einzeln);
                ServRelaDoc."Service DC einzeln" := serv_dc_einzeln;
                ServRelaDoc."Service DC Gesamt" := serv_dc_einzeln * ServRelaDoc."Menge kalk.";
                ServRelaDoc."Service DC W„hrungscode" := EKW„hrungholen(ServRelaDoc."Nr.",ServRelaDoc."Zeilennr.");
                ServRelaDoc."MSRP Service" := TOPASServiceModul.FindMSRP(ServRelaDoc."Ger„te Artikelnr.",WORKDATE,
                Belegzeile."Currency Code",SalesLine."Unit of Measure Code",ServRelaDoc."SUP Artikelnr.");
                ServRelaDoc."Rabatt/Marge" := kalk_prozentsatz;
                ServRelaDoc.MODIFY;
              END ELSE BEGIN
                //Service bezieht sich auf Lieferschein
                {
                //Lieferscheine aus alten System nicht im neuen NAV, Abfrage nicht unbedingt ben”tigt?
                ShipLine.RESET;
                ShipLine.SETRANGE("Document No.",ServRelaDoc."Belegnr.");
                ShipLine.SETRANGE("Line No.",ServRelaDoc."Belegzeilennr.");
                ShipLine.SETRANGE("Manufacturer Code",'59');
                ShipLine.SETFILTER(Quantity,'>%1',0);
                IF ShipLine.FINDFIRST THEN BEGIN
                  ShipLine.CALCFIELDS("Currency Code");
                }
                  EVALUATE(v_laufzeit,COPYSTR(ServRelaDoc.Laufzeit,1,STRPOS(ServRelaDoc.Laufzeit,'M')-1));
                  //Funktion im Lieferschein einbauen???
                  serv_price_einzeln := TOPASServiceModul.Gen_Service_VK(ServRelaDoc."SUP Artikelnr.",
                  ServRelaDoc."Ger„te Artikelnr.",v_laufzeit,ServRelaDoc."Belegnr.",ServRelaDoc."Belegzeilennr.",
                  ServRelaDoc.Fremderwerb,ServRelaDoc.Basisger„t,FALSE,kalk_prozentsatz,Belegzeile."Currency Code");
                  ServRelaDoc."Service VK-Preis einzeln" := serv_price_einzeln;
                  ServRelaDoc."Service VK-Preis Zeilenbetrag" := serv_price_einzeln * ServRelaDoc."Menge kalk.";
                  serv_price_au := serv_price_au + (ServRelaDoc."Menge kalk." * serv_price_einzeln);
                  serv_dc_einzeln := TOPASServiceModul.Gen_Service_DC(ServRelaDoc."SUP Artikelnr.",ServRelaDoc."Ger„te Artikelnr.",
                  v_laufzeit,FALSE,Belegzeile.Einkaufsw„hrungscode,ServRelaDoc."Quotenr.");
                  serv_dc_au := serv_dc_au + (ServRelaDoc."Menge kalk." * serv_dc_einzeln);
                  ServRelaDoc."Service DC einzeln" := serv_dc_einzeln;
                  ServRelaDoc."Service DC Gesamt" := serv_dc_einzeln * ServRelaDoc."Menge kalk.";
                  ServRelaDoc."Service DC W„hrungscode" := EKW„hrungholen(ServRelaDoc."Nr.",ServRelaDoc."Zeilennr.");
                  Artikel.GET(ServRelaDoc."Ger„te Artikelnr.");
                  ServRelaDoc."MSRP Service" := TOPASServiceModul.FindMSRP(ServRelaDoc."Ger„te Artikelnr.",WORKDATE,
                  Belegzeile."Currency Code",Artikel."Base Unit of Measure",ServRelaDoc."SUP Artikelnr.");
                  ServRelaDoc."Rabatt/Marge" := kalk_prozentsatz;
                  ServRelaDoc.MODIFY;
                //END;
              END;
            END ELSE BEGIN
              //Service bezieht sich auf Pseudo Positionen
              EVALUATE(v_laufzeit,COPYSTR(ServRelaDoc.Laufzeit,1,STRPOS(ServRelaDoc.Laufzeit,'M')-1));
              serv_price_einzeln := TOPASServiceModul.Gen_Service_VK(ServRelaDoc."SUP Artikelnr.",
              ServRelaDoc."Ger„te Artikelnr.",v_laufzeit,ServRelaDoc."Nr.",ServRelaDoc."Zeilennr.",
              ServRelaDoc.Fremderwerb,ServRelaDoc.Basisger„t,FALSE,kalk_prozentsatz,Belegzeile."Currency Code");
              ServRelaDoc."Service VK-Preis einzeln" := serv_price_einzeln;
              ServRelaDoc."Service VK-Preis Zeilenbetrag" := serv_price_einzeln * ServRelaDoc."Menge kalk.";
              serv_price_au := serv_price_au + (ServRelaDoc."Menge kalk." * serv_price_einzeln);
              serv_dc_einzeln := TOPASServiceModul.Gen_Service_DC(ServRelaDoc."SUP Artikelnr.",ServRelaDoc."Ger„te Artikelnr.",
              v_laufzeit,FALSE,Belegzeile.Einkaufsw„hrungscode,ServRelaDoc."Quotenr.");
              serv_dc_au := serv_dc_au + (ServRelaDoc."Menge kalk." * serv_dc_einzeln);
              ServRelaDoc."Service DC einzeln" := serv_dc_einzeln;
              ServRelaDoc."Service DC Gesamt" := serv_dc_einzeln * ServRelaDoc."Menge kalk.";
              ServRelaDoc."Service DC W„hrungscode" := EKW„hrungholen(ServRelaDoc."Nr.",ServRelaDoc."Zeilennr.");
              ServRelaDoc."MSRP Service" := TOPASServiceModul.FindMSRP(ServRelaDoc."Ger„te Artikelnr.",WORKDATE,
              Belegzeile."Currency Code",SalesLine."Unit of Measure Code",ServRelaDoc."SUP Artikelnr.");
              ServRelaDoc."Rabatt/Marge" := kalk_prozentsatz;
              ServRelaDoc.MODIFY;
            END;

          UNTIL ServRelaDoc.NEXT = 0;

          IF serv_price_au <> 0 THEN BEGIN
            serv_price_au := ROUND(serv_price_au,1);
            SalesLine.RESET;
            SalesLine.SETRANGE("Document No.",GETFILTER("Nr."));
            SalesLine.SETRANGE("Line No.",zeilennr);
            IF SalesLine.FINDFIRST THEN BEGIN
              IF (SalesLine."Unit Price" <> serv_price_au) AND (SalesLine."Unit Price" <> 0) THEN
                IF NOT CONFIRM(Text003,TRUE,Artikel.Artikelgruppe) THEN
                  EXIT;

              SalesLine.VALIDATE(SalesLine."DC-Preis (EKW)",serv_dc_au);
              SalesLine.VALIDATE("Unit Price",serv_price_au);
              SalesLine.MODIFY;

              MESSAGE(Text004,Artikel.Artikelgruppe,serv_price_au,SalesLine.FIELDCAPTION("DC-Preis (EKW)"),
                      SalesLine."DC-Preis (EKW)");
            END;
          END ELSE
            MESSAGE(Text005,Artikel.Artikelgruppe);
      END;
    END;

    PROCEDURE EKW„hrungholen@1140010(Belegnr@1140001 : Code[20];Belegzeilennr@1140002 : Integer) : Code[20];
    VAR
      Belegzeile@1140000 : Record 37;
    BEGIN
      Belegzeile.RESET;
      Belegzeile.SETRANGE("Document No.",Belegnr);
      Belegzeile.SETRANGE("Line No.",Belegzeilennr);
      IF Belegzeile.FINDFIRST THEN
        EXIT(Belegzeile.Einkaufsw„hrungscode)
      ELSE
        EXIT('');
    END;

    PROCEDURE TempSeriennrhinzu@1140002();
    BEGIN
      TESTFIELD("Nr.");
      TESTFIELD("Zeilennr.");
      TESTFIELD(Art,Art :: "SUP-AU");
      TESTFIELD("Debitornr.");
      TESTFIELD("Menge kalk.");
      TESTFIELD("Ger„te Artikelnr.");

      //***************************************************************************************************
      //                          Es muss ein System Basisger„te vorhanden sein
      //              Ausnahme: Alle Kalkulationszeilen haben eine Wartungsvertragsnr.
      //***************************************************************************************************

      ServRelaDoc.RESET;
      ServRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
      ServRelaDoc.SETRANGE(Art,ServRelaDoc.Art :: "SUP-AU");
      ServRelaDoc.SETRANGE("Nr.","Nr.");
      ServRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
      ServRelaDoc.SETRANGE(Basisger„t,TRUE);
      IF NOT ServRelaDoc.FINDFIRST THEN BEGIN
        ServRelaDoc.SETFILTER(Basisger„t,'%1|%2',TRUE,FALSE);
        IF ServRelaDoc.FINDFIRST THEN
          REPEAT
            IF ServRelaDoc."Wartungsvertragsnr." = '' THEN
              ERROR(Text010);
          UNTIL ServRelaDoc.NEXT = 0;
      END;

      ServRelaDoc.RESET;
      ServRelaDoc.SETRANGE(Art,ServRelaDoc.Art :: "SUP-AU");
      ServRelaDoc.SETRANGE("Nr.","Nr.");
      ServRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
      ServRelaDoc.SETRANGE("Nachtr„gliche Service Order",TRUE);
      IF ServRelaDoc.FINDFIRST THEN
        REPEAT
          IF (Pruefung_ignorieren(ServRelaDoc."SUP Artikelnr.",ServRelaDoc."Ger„te Artikelnr.",ServRelaDoc.Basisger„t) = FALSE)
          AND (ServRelaDoc."Menge kalk." > 1)  THEN
            ERROR(Text001);
          ShowSerialNo.RESET;
          ShowSerialNo.ACSLizenzenHinzu(ServRelaDoc."SUP Artikelnr.",ServRelaDoc."Belegnr.",ServRelaDoc."Belegzeilennr.",
                         ServRelaDoc."Menge kalk.",ServRelaDoc."Debitornr.",ServRelaDoc."Nr.",ServRelaDoc."Zeilennr.");
        UNTIL ServRelaDoc.NEXT = 0;

      ServicePos.RESET;
      ServicePos.SETRANGE(Art,ServicePos.Art :: Tempor„r);
      ServicePos.SETRANGE("Auftragsnr.","Nr.");
      ServicePos.SETRANGE("Auftragszeilennr.","Zeilennr.");
      IF ServicePos.FINDFIRST THEN
        PAGE.RUN(50027,ServicePos);
    END;

    PROCEDURE TempSeriennrhinzu_TEMP@1140015();
    BEGIN
      TESTFIELD("Nr.");
      TESTFIELD("Zeilennr.");
      TESTFIELD(Art,Art :: "SUP-AU");
      TESTFIELD("Debitornr.");
      TESTFIELD("Menge kalk.");
      TESTFIELD("Ger„te Artikelnr.");

      //***************************************************************************************************
      //                          Es muss ein System Basisger„te vorhanden sein
      //              Ausnahme: Alle Kalkulationszeilen haben eine Wartungsvertragsnr.
      //***************************************************************************************************

      ServRelaDoc.RESET;
      ServRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
      ServRelaDoc.SETRANGE(Art,ServRelaDoc.Art :: "SUP-AU");
      ServRelaDoc.SETRANGE("Nr.","Nr.");
      ServRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
      ServRelaDoc.SETRANGE(Basisger„t,TRUE);
      IF NOT ServRelaDoc.FINDFIRST THEN BEGIN
        ServRelaDoc.SETFILTER(Basisger„t,'%1|%2',TRUE,FALSE);
        IF ServRelaDoc.FINDFIRST THEN
          REPEAT
            IF ServRelaDoc."Wartungsvertragsnr." = '' THEN
              ERROR(Text010);
          UNTIL ServRelaDoc.NEXT = 0;
      END;

      ServRelaDoc.RESET;
      ServRelaDoc.SETRANGE(Art,ServRelaDoc.Art :: "SUP-AU");
      ServRelaDoc.SETRANGE("Nr.","Nr.");
      ServRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
      ServRelaDoc.SETRANGE("Nachtr„gliche Service Order",TRUE);
      IF ServRelaDoc.FINDFIRST THEN
        REPEAT
          IF (Pruefung_ignorieren(ServRelaDoc."SUP Artikelnr.",ServRelaDoc."Ger„te Artikelnr.",ServRelaDoc.Basisger„t) = FALSE)
          AND (ServRelaDoc."Menge kalk." > 1)  THEN
            ERROR(Text001);
          ShowSerialNo.RESET;
          ShowSerialNo.ACSLizenzenHinzu(ServRelaDoc."SUP Artikelnr.",ServRelaDoc."Belegnr.",ServRelaDoc."Belegzeilennr.",
                         ServRelaDoc."Menge kalk.",ServRelaDoc."Debitornr.",ServRelaDoc."Nr.",ServRelaDoc."Zeilennr.");
        UNTIL ServRelaDoc.NEXT = 0;

      ServicePos.RESET;
      ServicePos.SETRANGE(Art,ServicePos.Art :: Tempor„r);
      ServicePos.SETRANGE("Auftragsnr.","Nr.");
      ServicePos.SETRANGE("Auftragszeilennr.","Zeilennr.");
      IF ServicePos.FINDFIRST THEN
        PAGE.RUN(50027,ServicePos);
    END;

    PROCEDURE KalkFehlerPrfen@1140003();
    VAR
      AktBeleg@1140002 : Record 36;
      kalk_preis_gesamt@1140003 : Decimal;
      menge_auswahl@1140004 : Integer;
    BEGIN
      hinweistext := '';
      kalk_preis_gesamt := 0;

      AktBeleg.RESET;
      AktBeleg.SETRANGE("No.","Nr.");
      IF NOT AktBeleg.FINDFIRST THEN
        EXIT;

      ServRelaDoc.RESET;
      ServRelaDoc.SETRANGE(Art,ServRelaDoc.Art :: "SUP-AU");
      ServRelaDoc.SETRANGE("Nr.","Nr.");
      ServRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
      IF ServRelaDoc.FINDFIRST THEN
        REPEAT

          //Prft, ob die Angaben der Kalkulation bgzl. Ger„te Artikelnr. noch stimmig zum Beleg sind
          IF (ServRelaDoc."Nachtr„gliche Service Order" = FALSE) AND (ServRelaDoc.Fremderwerb = FALSE) THEN BEGIN
            SalesLine.RESET;
            SalesLine.SETRANGE(Type,SalesLine.Type :: Item);
            SalesLine.SETRANGE("Document No.",ServRelaDoc."Belegnr.");
            SalesLine.SETRANGE("Line No.",ServRelaDoc."Belegzeilennr.");
            IF SalesLine.FINDFIRST THEN BEGIN
              IF SalesLine."No." <> ServRelaDoc."Ger„te Artikelnr." THEN
                hinweistext := 'Die Artikelnr. '+ ServRelaDoc."Ger„te Artikelnr." + ' entspricht nicht mehr der Angabe '+
                                'aus ' + ServRelaDoc."Belegnr." + ', ' + FORMAT(ServRelaDoc."Belegzeilennr.");
            END ELSE
              hinweistext := 'Die Angabe ' + ServRelaDoc."Ger„te Artikelnr." + ' in ' + ServRelaDoc."Belegnr." + ', ' +
              FORMAT(ServRelaDoc."Belegzeilennr.") + ' existiert nicht mehr im Beleg.';
          END;

          //Prft, ob noch Seriennr. ausgew„hlt werden mssen
          IF ServRelaDoc."Nachtr„gliche Service Order" = TRUE THEN BEGIN
            SystemPos.RESET;
            SystemPos.SETRANGE(Art,SystemPos.Art :: Tempor„r);
            SystemPos.SETRANGE("Auftragsnr.",ServRelaDoc."Nr.");
            SystemPos.SETRANGE("Auftragszeilennr.",ServRelaDoc."Zeilennr.");
            SystemPos.SETRANGE("Nr.",ServRelaDoc."Belegnr.");
            SystemPos.SETRANGE("Belegzeilennr.",ServRelaDoc."Belegzeilennr.");
            SystemPos.SETRANGE("Artikelnr.",ServRelaDoc."Ger„te Artikelnr.");
            SystemPos.SETRANGE(Vormerkung,TRUE);
            IF NOT SystemPos.FINDFIRST THEN
              hinweistext := 'Fr Artikelnr. ' + ServRelaDoc."Ger„te Artikelnr." + ' wurden noch nicht gengend ' +
                              'Seriennr. ausgew„hlt.'
            ELSE BEGIN
              menge_auswahl := 0;
              REPEAT
                menge_auswahl := menge_auswahl + SystemPos.Menge;
              UNTIL SystemPos.NEXT = 0;
              IF ServRelaDoc."Menge kalk." <> menge_auswahl THEN
                hinweistext := 'Fr Artikelnr. ' + ServRelaDoc."Ger„te Artikelnr." + ' wurden noch nicht gengend ' +
                                'Seriennr. ausgew„hlt.';
            END;
          END;

          //Prft, ob eine Zeile einen Zeilenbetrag von 0 ausweist
          IF ServRelaDoc."Service VK-Preis Zeilenbetrag" = 0 THEN
            hinweistext := 'Der ' + ServRelaDoc.FIELDCAPTION("Service VK-Preis Zeilenbetrag")
                            + ' fr ' + ServRelaDoc."Ger„te Artikelnr." + ' betr„gt 0.';

          kalk_preis_gesamt := kalk_preis_gesamt + ServRelaDoc."Service VK-Preis Zeilenbetrag";

        UNTIL ServRelaDoc.NEXT = 0;

      //Prft, ob der Beleg VK-Preis noch mit dem Kalkulations Gesamtpreis bereinstimmt
      SalesLine.RESET;
      SalesLine.SETRANGE("Document No.",ServRelaDoc."Nr.");
      SalesLine.SETRANGE("Line No.",ServRelaDoc."Zeilennr.");
      IF SalesLine.FINDFIRST THEN
        IF ROUND(kalk_preis_gesamt,1) <> SalesLine."Unit Price" THEN
          hinweistext := 'Der Vk-Preis im Beleg stimmt nicht mit dem Gesamtpreis der Kalkulation berein.';

      //Warnung,wenn nur Module hinterlegt sind und die Vertragsnr. leer bleiben
      ServRelaDoc.RESET;
      ServRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
      ServRelaDoc.SETRANGE(Art,ServRelaDoc.Art :: "SUP-AU");
      ServRelaDoc.SETRANGE("Nr.","Nr.");
      ServRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
      ServRelaDoc.SETRANGE(Basisger„t,TRUE);
      IF NOT ServRelaDoc.FINDFIRST THEN BEGIN
        ServRelaDoc.SETRANGE(Basisger„t);
        ServRelaDoc.SETRANGE("Wartungsvertragsnr.",'');
        IF ServRelaDoc.FINDFIRST THEN
          hinweistext := Text013;
      END;
    END;

    PROCEDURE MengeKalkPrfen@1140008();
    BEGIN
      IF Fremderwerb = TRUE THEN
        EXIT;

      SalesLine.RESET;
      SalesLine.SETRANGE("Document No.","Belegnr.");
      SalesLine.SETRANGE("Line No.","Belegzeilennr.");
      IF SalesLine.FINDFIRST THEN BEGIN
        IF "Menge kalk." > SalesLine.Quantity THEN
          ERROR(Text006,FIELDCAPTION("Menge kalk."),SalesLine.Quantity);
      END ELSE BEGIN
        ShipLine.RESET;
        ShipLine.SETRANGE("Document No.","Belegnr.");
        ShipLine.SETRANGE("Line No.","Belegzeilennr.");
        IF ShipLine.FINDFIRST THEN BEGIN
          IF "Menge kalk." > ShipLine.Quantity THEN
            ERROR(Text006,FIELDCAPTION("Menge kalk."),ShipLine.Quantity);
        END ELSE BEGIN
          Beleghistorie.RESET;
          Beleghistorie.SETRANGE(Belegart,Beleghistorie.Belegart::"Sales Shipment");
          Beleghistorie.SETRANGE("Belegnr.","Belegnr.");
          Beleghistorie.SETRANGE("Zeilennr.","Belegzeilennr.");
          IF Beleghistorie.FINDFIRST THEN BEGIN
            IF "Menge kalk." > Beleghistorie.Menge THEN
              ERROR(Text006,FIELDCAPTION("Menge kalk."),Beleghistorie.Menge)
          END ELSE
             ERROR('Error');
        END;
      END;
    END;

    PROCEDURE AusfhrungPrfen@1140005();
    VAR
      AktBeleg@1140000 : Record 36;
    BEGIN
      AktBeleg.RESET;
      AktBeleg.SETRANGE("No.","Nr.");
      IF NOT AktBeleg.FINDFIRST THEN
        ERROR(Text007);
    END;

    PROCEDURE Vorg„ngerKopieren@1140011();
    VAR
      zeilennr_service@1140001 : Integer;
    BEGIN
      IF Rec.HASFILTER THEN BEGIN
        EVALUATE(zeilennr,GETFILTER("Zeilennr."));

        SalesLine_Service.RESET;
        SalesLine_Service.SETRANGE(Type,SalesLine_Service.Type :: Item);
        SalesLine_Service.SETRANGE("Document No.",GETFILTER("Nr."));
        SalesLine_Service.SETRANGE("Line No.",zeilennr);
        IF SalesLine_Service.FINDFIRST THEN BEGIN

          //Finde die logisch n„chst gelegene Position eines Serviceartikels, vor dieser Position
          zeilennr_service := 0;

          SalesLine.RESET;
          SalesLine.SETRANGE(Type,SalesLine.Type :: Item);
          SalesLine.SETRANGE("Document No.",GETFILTER("Nr."));
          SalesLine.SETFILTER("Line No.",'<%1',zeilennr);
          SalesLine.ASCENDING(FALSE);
          IF SalesLine.FINDFIRST THEN
            REPEAT
              IF Artikel.GET(SalesLine."No.") THEN
                IF (Artikel."Software Upgrade Protection" = TRUE) THEN
                  zeilennr_service := SalesLine."Line No.";
            UNTIL (SalesLine.NEXT = 0) OR (zeilennr_service <> 0);

            IF zeilennr_service = 0 THEN EXIT;

          TempServRelaDoc.RESET;
          TempServRelaDoc.SETRANGE(Art,TempServRelaDoc.Art :: "SUP-AU");
          TempServRelaDoc.SETRANGE("Nr.",SalesLine."Document No.");
          TempServRelaDoc.SETRANGE("Zeilennr.",zeilennr_service);
          //TempServRelaDoc.SETRANGE("Belegnr.",SalesLine."Document No.");
          //TempServRelaDoc.SETRANGE("Belegzeilennr.",SalesLine."Line No.");
          IF TempServRelaDoc.FINDFIRST THEN BEGIN
            REPEAT
              ServRelaDoc.INIT;
              ServRelaDoc.Art := Art :: "SUP-AU";
              ServRelaDoc."Nr." := SalesLine."Document No.";
              ServRelaDoc."Zeilennr." := zeilennr;
              ServRelaDoc."Belegnr." := TempServRelaDoc."Belegnr.";
              ServRelaDoc."Belegzeilennr." := TempServRelaDoc."Belegzeilennr.";
              ServRelaDoc."Debitornr." := TempServRelaDoc."Debitornr.";
              ServRelaDoc."SUP Artikelnr." := SalesLine_Service."No.";
              ServRelaDoc.VALIDATE("Ger„te Artikelnr.",TempServRelaDoc."Ger„te Artikelnr.");
              ServRelaDoc."Menge kalk." := TempServRelaDoc."Menge kalk.";
              ServRelaDoc."Laufzeit ab Buchungsdatum" := TempServRelaDoc."Laufzeit ab Buchungsdatum";
              ServRelaDoc."Beachte Startdatum" := TempServRelaDoc."Beachte Startdatum";
              ServRelaDoc."Vertragsnr. bernommen" := TempServRelaDoc."Vertragsnr. bernommen";
              ServRelaDoc."Abw. Ger„te Artikelnr." := TempServRelaDoc."Abw. Ger„te Artikelnr.";
              ServRelaDoc."Nachtr„gliche Service Order" := TempServRelaDoc."Nachtr„gliche Service Order";
              ServRelaDoc.Fremderwerb := TempServRelaDoc.Fremderwerb;
              //Laufzeit vorbelegen
              IF (TempServRelaDoc.Startdatum <> 0D) OR (TempServRelaDoc.Ablaufdatum <> 0D) THEN BEGIN
                ServRelaDoc.VALIDATE(Laufzeit,TempServRelaDoc.Laufzeit);
                ServRelaDoc.VALIDATE(Startdatum,TempServRelaDoc.Startdatum);
                ServRelaDoc.VALIDATE(Ablaufdatum,TempServRelaDoc.Ablaufdatum);
              END ELSE BEGIN
                Opt.RESET;
                Opt.SETRANGE("Tabellen ID",50024);
                Opt.SETRANGE("Feld ID",44);
                Opt.SETRANGE("Nr.",ServRelaDoc."SUP Artikelnr.");
                IF Opt.FINDFIRST THEN
                  ServRelaDoc.Laufzeit := Opt.Code;
              END;
              IF TempServRelaDoc."Wartungsvertragsnr." <> '' THEN BEGIN
                ServRelaDoc.VALIDATE(Laufzeit,TempServRelaDoc.Laufzeit);
                ServRelaDoc.VALIDATE("Wartungsvertragsnr.",TempServRelaDoc."Wartungsvertragsnr.");
              END;
              ServRelaDoc.VALIDATE("Quotenr.",TempServRelaDoc."Quotenr.");
              ServRelaDoc.Gruppierung := Gruppieren(ServRelaDoc."Belegnr.",ServRelaDoc."Belegzeilennr.",
              ServRelaDoc.Basisger„t);
              ServRelaDoc.INSERT(TRUE);
            UNTIL TempServRelaDoc.NEXT = 0;
          END;
          CurrPage.UPDATE;
        END;
      END;
    END;

    PROCEDURE InfosExcelExport@1140000();
    VAR
      Window@1000000004 : Dialog;
      RecNo@1000000003 : Integer;
      TotalRecNo@1000000002 : Integer;
      RowNo@1000000001 : Integer;
      ColumnNo@1000000000 : Integer;
      text_array@1000000007 : ARRAY [5] OF Text[255];
      v_wartungsnr@1000000006 : Code[20];
      k@1000000005 : Integer;
    BEGIN
      // Definiert die zu importierende Datei
      IF (wartungsnr = '') AND ("Vertragsnr. bernommen" = '') THEN
        ERROR(Text013,Wartungsvertrag.FIELDCAPTION("Wartungsvertragsnr."));

      IF "Vertragsnr. bernommen" <> '' THEN
        v_wartungsnr := "Vertragsnr. bernommen"
      ELSE
        v_wartungsnr := wartungsnr;

      //array 1 = Lieferschein Nr.
      //array 2 = Vertragsablaufdatum
      //array 3 = Ger„te Artikelnr.

      ServRelaDoc.RESET;
      ServRelaDoc.SETRANGE(Art,ServRelaDoc.Art :: "SUP-AU");
      ServRelaDoc.SETRANGE("Nr.","Nr.");
      ServRelaDoc.SETRANGE("Zeilennr.","Zeilennr.");
      //ServRelaDoc.SETRANGE(Fremderwerb,FALSE);
      IF ServRelaDoc.FINDFIRST THEN BEGIN

        Window.OPEN(
          Text000 +
          '@1@@@@@@@@@@@@@@@@@@@@@\');

        TempExcelBuffer.DELETEALL;
        CLEAR(TempExcelBuffer);

        RecNo := 0;
        TotalRecNo := ServRelaDoc.COUNT;

        //Header
        RowNo := 1;
        EnterCell(RowNo,1,'Serviceverl„ngerung fr folgendes System:',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
        text_array[1] := 'Lieferscheinnr.: ';
        text_array[2] := 'Ende der Vertragslaufzeit:';
        text_array[3] := '';
        text_array[4] := 'Vertragsnr.: ';

         Wartungsvertrag.GET(v_wartungsnr);
        IF Wartungsvertrag.Endkunde = '' THEN
          RowNo := 6
        ELSE
          RowNo := 7;

        REPEAT

          ServicePos.RESET;
          ServicePos.SETRANGE(Art,ServicePos.Art :: Service);
          ServicePos.SETRANGE("Wartungsvertragsnr.",v_wartungsnr);
          ServicePos.SETRANGE("Urspr. Lieferscheinnr.",ServRelaDoc."Belegnr.");
          ServicePos.SETRANGE("Urspr. Lieferscheinzeilennr.",ServRelaDoc."Belegzeilennr.");
          ServicePos.SETRANGE(Inaktiv,FALSE);
          ServicePos.SETFILTER(Lizenzdatum,'<>%1',0D);
          IF ServicePos.FINDFIRST THEN BEGIN
            IF ServRelaDoc.Fremderwerb = FALSE THEN BEGIN
              IF STRPOS(text_array[1],ServicePos."Urspr. Lieferscheinnr.") = 0 THEN
                IF STRPOS(text_array[1],'LS') > 0 THEN
                  text_array[1] := text_array[1] + ', ' + ServicePos."Urspr. Lieferscheinnr."
                ELSE
                  text_array[1] := text_array[1] + ServicePos."Urspr. Lieferscheinnr.";
            END;

            k := 1;
            text_array[3] := ServRelaDoc."Ger„te Artikelnr.";

            REPEAT

              IF STRLEN(text_array[3]) = STRLEN(ServRelaDoc."Ger„te Artikelnr.") THEN
                text_array[3] := FORMAT(ServRelaDoc."Menge kalk.") + 'x ' + text_array[3];
              IF STRPOS(text_array[3],ServicePos."Seriennr.") = 0 THEN BEGIN
                IF k = 1 THEN
                  text_array[3] := text_array[3] + '  ' + ServicePos."Seriennr."
                ELSE
                  text_array[3] := text_array[3] + ', ' + ServicePos."Seriennr.";
                k += 1;
              END;

            UNTIL ServicePos.NEXT = 0;

            EnterCell(RowNo,1, text_array[3],FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            RowNo := RowNo + 1;

          END;

          IF ServRelaDoc.Basisger„t = TRUE THEN BEGIN
            Wartungsvertrag.GET(v_wartungsnr);
            IF STRPOS(text_array[2], FORMAT(Wartungsvertrag.Vertragsablaufdatum)) = 0 THEN
              text_array[2] := text_array[2] + ' ' + FORMAT(Wartungsvertrag.Vertragsablaufdatum);

            SystemPos.RESET;
            SystemPos.SETRANGE(Basisger„t,TRUE);
            SystemPos.SETRANGE("Artikelnr.",ServRelaDoc."Ger„te Artikelnr.");
            SystemPos.SETRANGE("Nr.",ServRelaDoc."Belegnr.");
            SystemPos.SETRANGE("Seriennr.",ServicePos."Seriennr.");
            SystemPos.SETRANGE("Belegzeilennr.",ServRelaDoc."Belegzeilennr.");
            IF SystemPos.FINDFIRST THEN
              text_array[4] := FORMAT('Vertragsnr.: ' + Wartungsvertrag."Wartungsvertragsnr.") + ' / Board ini: ' + SystemPos."Board ini"
            ELSE
              text_array[4] := 'Vertragsnr.: ' + Wartungsvertrag."Wartungsvertragsnr.";
          END;

          RecNo := RecNo + 1;
          Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));

        UNTIL ServRelaDoc.NEXT = 0;

        EnterCell(2,1,text_array[1],FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(3,1,text_array[2],FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(4,1,text_array[4],FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        IF Wartungsvertrag.Endkunde <> '' THEN
          EnterCell(5,1,'Endkunde: ' + Wartungsvertrag.Endkunde,FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

        Window.CLOSE;

        TempExcelBuffer.CreateBook('',v_wartungsnr);
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2',v_wartungsnr,''),30),COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        TempExcelBuffer.OpenExcel; //hat Autofit drin der die Spaltenbreite wieder berschreibt
        TempExcelBuffer.GiveUserControl;

      END;
    END;

    PROCEDURE L”schAllePos@1140004();
    BEGIN
      IF Rec.HASFILTER THEN BEGIN
        IF CONFIRM('Wollen Sie diese Kalkulation wirklich l”schen?') THEN
          Rec.DELETEALL(TRUE);
      END;
    END;

    PROCEDURE UpdatePageTemplate@1140012();
    VAR
      v_Art@1140000 : Text[30];
    BEGIN
      EVALUATE(v_Art,GETFILTER(Art));
      CASE v_Art OF
        'SUP-AU' :
          BEGIN
            service_controls_zeigen := TRUE;
            splicecom_controls_zeigen := FALSE;
            IF Artikel.GET("SUP Artikelnr.") THEN
              IF Artikel.Artikelgruppe ='CHAMPS_PARTNER' THEN
                kalk_prozentsatz := 20;
          END;
        'SPL-AU' :
          BEGIN
            service_controls_zeigen := FALSE;
            splicecom_controls_zeigen := TRUE;
          END;
      END;
    END;

    PROCEDURE DemoVorlage@1140013();
    VAR
      DemolistRelaDoc@1140003 : Record 50027;
      PrfeDemolistRelaDoc@1140005 : Record 50027;
      Opt_License@1140006 : Record 50001;
      demo_artikel@1140000 : ARRAY [20] OF Code[20];
      anzahl@1140001 : Integer;
      k@1140004 : Integer;
    BEGIN
      //Splicecom Funktion
      EVALUATE(zeilennr,GETFILTER("Zeilennr."));
      SalesLine.RESET;
      SalesLine.SETRANGE("Document No.",GETFILTER("Nr."));
      SalesLine.SETRANGE("Line No.",zeilennr);
      IF SalesLine.FINDFIRST THEN BEGIN
        IF Rec.HASFILTER THEN BEGIN
          EVALUATE(zeilennr,GETFILTER("Zeilennr."));
          SalesLine.RESET;
          SalesLine.SETRANGE("Document No.",GETFILTER("Nr."));
          SalesLine.SETRANGE("Line No.",zeilennr);
          IF SalesLine.FINDFIRST THEN BEGIN
            Opt_License.RESET;
            Opt_License.SETCURRENTKEY("Tabellen ID","Feld ID","Lfd.-Nr.");
            Opt_License.SETRANGE("Tabellen ID",50027);
            Opt_License.SETRANGE("Feld ID",5);
            Opt_License.SETRANGE(Code,SalesLine."No.");
            IF Opt_License.FINDFIRST THEN
              REPEAT
                DemolistRelaDoc.INIT;
                DemolistRelaDoc.Art := Art :: "SPL-AU";
                DemolistRelaDoc."Nr." := SalesLine."Document No.";
                DemolistRelaDoc."Zeilennr." := zeilennr;
                DemolistRelaDoc."Belegnr." := SalesLine."Document No.";
                PrfeDemolistRelaDoc.RESET;
                PrfeDemolistRelaDoc.SETRANGE(Art,DemolistRelaDoc.Art);
                PrfeDemolistRelaDoc.SETRANGE("Nr.",SalesLine."Document No.");
                PrfeDemolistRelaDoc.SETRANGE("Zeilennr.",DemolistRelaDoc."Zeilennr.");
                IF NOT PrfeDemolistRelaDoc.FINDLAST THEN
                  DemolistRelaDoc."Belegzeilennr." := 11111
                ELSE
                  DemolistRelaDoc."Belegzeilennr." := PrfeDemolistRelaDoc."Belegzeilennr." + 11111;

                DemolistRelaDoc."Debitornr." := SalesLine."Sell-to Customer No.";
                DemolistRelaDoc."SUP Artikelnr." := SalesLine."No.";
                DemolistRelaDoc."Ger„te Artikelnr." := Opt_License."Nr.";
                DemolistRelaDoc."Menge kalk." := Opt_License.Werte;
                DemolistRelaDoc.Fremderwerb := TRUE;
                DemolistRelaDoc.INSERT(TRUE);
              UNTIL Opt_License.NEXT = 0;
          END;
        END;
      END;
    END;

    PROCEDURE NeueDemoPos@1140018();
    VAR
      DemolistRelaDoc@1140001 : Record 50027;
      PrfeDemolistRelaDoc@1140002 : Record 50027;
    BEGIN
      //Splicecom Funktion
      IF Rec.HASFILTER THEN BEGIN
        EVALUATE(zeilennr,GETFILTER("Zeilennr."));
        SalesLine.RESET;
        SalesLine.SETRANGE("Document No.",GETFILTER("Nr."));
        SalesLine.SETRANGE("Line No.",zeilennr);
        IF SalesLine.FINDFIRST THEN BEGIN
          DemolistRelaDoc.INIT;
          DemolistRelaDoc.Art := Art :: "SPL-AU";
          DemolistRelaDoc."Nr." := SalesLine."Document No.";
          DemolistRelaDoc."Zeilennr." := zeilennr;
          DemolistRelaDoc."Belegnr." := SalesLine."Document No.";
          PrfeDemolistRelaDoc.RESET;
          PrfeDemolistRelaDoc.SETRANGE(Art,DemolistRelaDoc.Art);
          PrfeDemolistRelaDoc.SETRANGE("Nr.",SalesLine."Document No.");
          PrfeDemolistRelaDoc.SETRANGE("Zeilennr.",DemolistRelaDoc."Zeilennr.");
          IF NOT PrfeDemolistRelaDoc.FINDLAST THEN
            DemolistRelaDoc."Belegzeilennr." := 11111
          ELSE
            DemolistRelaDoc."Belegzeilennr." := PrfeDemolistRelaDoc."Belegzeilennr." + 11111;
          DemolistRelaDoc."Debitornr." := SalesLine."Sell-to Customer No.";
          DemolistRelaDoc."SUP Artikelnr." := SalesLine."No.";
          DemolistRelaDoc.Fremderwerb := TRUE;
          DemolistRelaDoc.INSERT(TRUE);
        END;
      END;
    END;

    PROCEDURE Pruefung_ignorieren@1140017(Service_Artikelnr@1140000 : Code[20];Ger„te_Artikelnr@1140001 : Code[20];Basis@1140004 : Boolean) : Boolean;
    VAR
      Service_Artikel@1140002 : Record 27;
      Ger„te_Artikel@1140003 : Record 27;
    BEGIN
      Ger„te_Artikel.GET(Ger„te_Artikelnr);
      Service_Artikel.GET(Service_Artikelnr);

      IF (Basis = TRUE) AND ((Service_Artikel.Artikelgruppe = 'CHAMPS') OR (Service_Artikel.Artikelgruppe = 'CHAMPS_PARTNER')
      OR (Service_Artikel.Artikelgruppe = 'ACHAT') OR (Service_Artikel.Artikelgruppe = 'ACTS')
      OR (Service_Artikel.Artikelgruppe = 'ACTS_AHR') OR (Service_Artikel.Artikelgruppe = 'ACTS_MSS')
      OR (Service_Artikel.Artikelgruppe = 'ACTS/ACHAT') OR (Service_Artikel.Artikelgruppe = 'APSS_OB')
      OR (Service_Artikel.Artikelgruppe = 'CHAMPS_FEE') OR (Service_Artikel.Artikelgruppe = 'ACTS_SCHAEFFLER')
      OR (Service_Artikel.Artikelgruppe = 'ACTS_MSS_SCHAEFFLER')) AND (Ger„te_Artikel.Serviceklassifizierung <> 'SYSTEM FLAT') THEN
        EXIT(FALSE)
      ELSE
        EXIT(TRUE);
    END;

    LOCAL PROCEDURE EnterCell@2(RowNo@1000 : Integer;ColumnNo@1001 : Integer;CellValue@1002 : Text[250];Bold@1003 : Boolean;Italic@1004 : Boolean;UnderLine@1005 : Boolean;NumberFormat@1006 : Text[30];CellType@1007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := '';
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    BEGIN
    {
      # 21.10.13 ST - Splicecom Demo / Lizenz Anbindung
    }
    END.
  }
}

