OBJECT Page 95 Sales Quote Subform
{
  OBJECT-PROPERTIES
  {
    Date=09.10.19;
    Time=13:30:00;
    Modified=Yes;
    Version List=NAVW19.00.00.50458,TXT8.00,TOP1.01;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Zeilen;
               ENU=Lines];
    MultipleNewLines=Yes;
    LinksAllowed=No;
    SourceTable=Table37;
    DelayedInsert=Yes;
    SourceTableView=WHERE(Document Type=FILTER(Quote));
    PageType=ListPart;
    AutoSplitKey=Yes;
    OnAfterGetRecord=BEGIN
                       ShowShortcutDimCode(ShortcutDimCode);
                       CLEAR(DocumentTotals);

                       //TOPAS 10.03.17 ST - Anzeige des MSRP Preises ; 09.10.19 ST - Dynamische Anzeige in der Verkaufsw„hrung +
                       MSRP := 0;
                       IF SalesHeader.GET("Document Type","Document No.") THEN
                         MSRP := TOPAS_Funktionen.FindItemSalesPrice("No.",WORKDATE,SalesHeader."Currency Code","Unit of Measure","Quantity (Base)",SalesHeader."Preislisten Kalkulation");
                       IF SalesHeader."Currency Code" = '' THEN
                         MSRP_Text := 'MSRP EUR'
                       ELSE
                         MSRP_Text := 'MSRP ' + SalesHeader."Currency Code";
                       //TOPAS -
                     END;

    OnNewRecord=BEGIN
                  InitType;
                  CLEAR(ShortcutDimCode);

                  //TOPAS 10.03.17 ST +
                  MSRP := 0;
                  //TOPAS -
                END;

    OnDeleteRecord=VAR
                     ReserveSalesLine@1000 : Codeunit 99000832;
                   BEGIN
                     IF (Quantity <> 0) AND ItemExists("No.") THEN BEGIN
                       COMMIT;
                       IF NOT ReserveSalesLine.DeleteLineConfirm(Rec) THEN
                         EXIT(FALSE);
                       ReserveSalesLine.DeleteLine(Rec);
                     END;
                   END;

    OnAfterGetCurrRecord=BEGIN
                           IF SalesHeader.GET("Document Type","Document No.") THEN;

                           DocumentTotals.SalesUpdateTotalsControls(
                             Rec,TotalSalesHeader,TotalSalesLine,RefreshMessageEnabled,
                             TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,CurrPage.EDITABLE,VATAmount);

                           TypeChosen := HasTypeToFillMandatotyFields;
                         END;

    ActionList=ACTIONS
    {
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1907935204;1 ;ActionGroup;
                      CaptionML=[DEU=&Zeile;
                                 ENU=&Line];
                      Image=Line }
      { 1901743104;2 ;ActionGroup;
                      CaptionML=[DEU=Artikelverfgbarkeit nach;
                                 ENU=Item Availability by];
                      Image=ItemAvailability }
      { 5       ;3   ;Action    ;
                      CaptionML=[DEU=Ereignis;
                                 ENU=Event];
                      Image=Event;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByEvent)
                               END;
                                }
      { 1907981204;3 ;Action    ;
                      CaptionML=[DEU=Periode;
                                 ENU=Period];
                      Image=Period;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByPeriod)
                               END;
                                }
      { 1903587104;3 ;Action    ;
                      CaptionML=[DEU=Variante;
                                 ENU=Variant];
                      Image=ItemVariant;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByVariant)
                               END;
                                }
      { 1903134404;3 ;Action    ;
                      AccessByPermission=TableData 14=R;
                      CaptionML=[DEU=Lagerort;
                                 ENU=Location];
                      Image=Warehouse;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByLocation)
                               END;
                                }
      { 26      ;3   ;Action    ;
                      CaptionML=[DEU=Stcklistenebene;
                                 ENU=BOM Level];
                      Image=BOMLevel;
                      OnAction=BEGIN
                                 ItemAvailFormsMgt.ShowItemAvailFromSalesLine(Rec,ItemAvailFormsMgt.ByBOM)
                               END;
                                }
      { 1901092104;2 ;Action    ;
                      CaptionML=[DEU=Ersatzartikel ausw„hlen;
                                 ENU=Select Item Substitution];
                      Image=SelectItemSubstitution;
                      OnAction=BEGIN
                                 ShowItemSub;
                               END;
                                }
      { 1907075804;2 ;Action    ;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[DEU=Dimensionen;
                                 ENU=Dimensions];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDimensions;
                               END;
                                }
      { 1902027204;2 ;Action    ;
                      CaptionML=[DEU=Be&merkungen;
                                 ENU=Co&mments];
                      Image=ViewComments;
                      OnAction=BEGIN
                                 ShowLineComments;
                               END;
                                }
      { 1907184504;2 ;Action    ;
                      AccessByPermission=TableData 5800=R;
                      CaptionML=[DEU=Artikel &Zu-/Abschlagszuweisung;
                                 ENU=Item Charge &Assignment];
                      Image=ItemCosts;
                      OnAction=BEGIN
                                 ItemChargeAssgnt;
                               END;
                                }
      { 1905987604;2 ;Action    ;
                      ShortCutKey=Shift+Ctrl+I;
                      CaptionML=[DEU=Artikel&verfolgungszeilen;
                                 ENU=Item &Tracking Lines];
                      Image=ItemTrackingLines;
                      OnAction=VAR
                                 Item@1001 : Record 27;
                               BEGIN
                                 Item.GET("No.");
                                 Item.TESTFIELD("Assembly Policy",Item."Assembly Policy"::"Assemble-to-Stock");
                                 TESTFIELD("Qty. to Asm. to Order (Base)",0);
                                 OpenItemTrackingLines;
                               END;
                                }
      { 1000000000;2 ;Action    ;
                      ShortCutKey=Ctrl+Alt+D;
                      CaptionML=[DEU=E&ditieren;
                                 ENU=E&dit];
                      ToolTipML=[DEU=Text editieren;
                                 ENU=Edit Text];
                      Image=Edit;
                      OnAction=BEGIN
                                 //A.00 B
                                 EditText;
                                 //A.00 E
                               END;
                                }
      { 1000000020;2 ;Action    ;
                      Name=ServiceCalculation;
                      CaptionML=DEU=&Service Kalkulationstool;
                      Promoted=Yes;
                      Image=CalculateSimulation;
                      OnAction=BEGIN
                                 //TOPAS 01.03.11 ST - SUP Modul, ab 25.08.11 CHAMPS/Service Modul , ab 21.10.13 Splicecom Lizenzen +
                                 ShowServiceCalculation;
                                 //TOPAS -
                               END;
                                }
      { 1000000018;2 ;Action    ;
                      Name=PriceCalculation;
                      CaptionML=DEU=&Preis Kalkulation;
                      Promoted=Yes;
                      Image=Calculate;
                      OnAction=BEGIN
                                 //TOPAS 15.05.17 ST - Angebotskalkulation +
                                 ShowCalculation;
                                 //TOPAS -
                               END;
                                }
      { 15      ;2   ;ActionGroup;
                      CaptionML=[DEU=Auftragsmontage;
                                 ENU=Assemble to Order];
                      ActionContainerType=NewDocumentItems;
                      Image=AssemblyBOM }
      { 3       ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[DEU=Programmfertigungszeilen;
                                 ENU=Assemble-to-Order Lines];
                      OnAction=BEGIN
                                 ShowAsmToOrderLines;
                               END;
                                }
      { 9       ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Mehrstufigen &Preis berechnen;
                                 ENU=Roll Up &Price];
                      OnAction=BEGIN
                                 RollupAsmPrice;
                               END;
                                }
      { 7       ;3   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Mehrstufige &Kosten berechnen;
                                 ENU=Roll Up &Cost];
                      OnAction=BEGIN
                                 RollUpAsmCost;
                               END;
                                }
      { 25      ;1   ;ActionGroup;
                      CaptionML=[DEU=F&unktionen;
                                 ENU=F&unctions];
                      Image=Action }
      { 23      ;2   ;Action    ;
                      AccessByPermission=TableData 7002=R;
                      Ellipsis=Yes;
                      CaptionML=[DEU=&Preis abrufen;
                                 ENU=Get &Price];
                      Image=Price;
                      OnAction=BEGIN
                                 ShowPrices
                               END;
                                }
      { 21      ;2   ;Action    ;
                      AccessByPermission=TableData 7004=R;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Zeile&nrabatt abrufen;
                                 ENU=Get Li&ne Discount];
                      Image=LineDiscount;
                      OnAction=BEGIN
                                 ShowLineDisc
                               END;
                                }
      { 19      ;2   ;Action    ;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[DEU=Stckliste ent&falten;
                                 ENU=E&xplode BOM];
                      Image=ExplodeBOM;
                      OnAction=BEGIN
                                 ExplodeBOM;
                               END;
                                }
      { 17      ;2   ;Action    ;
                      Name=InsertExtTexts;
                      AccessByPermission=TableData 279=R;
                      CaptionML=[DEU=Textbausteine &einfgen;
                                 ENU=Insert &Ext. Texts];
                      Image=Text;
                      OnAction=BEGIN
                                 InsertExtendedText(TRUE);
                               END;
                                }
      { 13      ;2   ;Action    ;
                      AccessByPermission=TableData 5718=R;
                      CaptionML=[DEU=&Katalogartikel;
                                 ENU=Nonstoc&k Items];
                      Image=NonStockItem;
                      OnAction=BEGIN
                                 ShowNonstockItems;
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                IndentationColumnName=0;
                GroupType=Repeater }

    { 2   ;2   ;Field     ;
                SourceExpr=Type;
                OnValidate=BEGIN
                             TypeOnAfterValidate;
                             NoOnAfterValidate;
                             TypeChosen := HasTypeToFillMandatotyFields;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 1000000021;2;Field  ;
                SourceExpr="Line No.";
                Editable=FALSE }

    { 4   ;2   ;Field     ;
                SourceExpr="No.";
                OnValidate=BEGIN
                             ShowShortcutDimCode(ShortcutDimCode);
                             NoOnAfterValidate;

                             IF xRec."No." <> '' THEN
                               RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 28  ;2   ;Field     ;
                SourceExpr="Cross-Reference No.";
                Visible=FALSE;
                OnValidate=BEGIN
                             CrossReferenceNoOnAfterValidat;
                             NoOnAfterValidate;
                           END;

                OnLookup=BEGIN
                           CrossReferenceNoLookUp;
                           InsertExtendedText(FALSE);
                           NoOnAfterValidate;
                         END;
                          }

    { 1000000001;2;Field  ;
                SourceExpr="Artikelnr. 2" }

    { 30  ;2   ;Field     ;
                SourceExpr="Variant Code";
                Visible=FALSE;
                OnValidate=BEGIN
                             VariantCodeOnAfterValidate
                           END;
                            }

    { 1000000002;2;Field  ;
                SourceExpr="Attached to Line No." }

    { 1000000003;2;Field  ;
                SourceExpr="Manufacturer Code";
                Visible=FALSE }

    { 32  ;2   ;Field     ;
                SourceExpr="Substitution Available";
                Visible=FALSE }

    { 48  ;2   ;Field     ;
                SourceExpr=Nonstock;
                Visible=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="VAT Prod. Posting Group";
                Visible=FALSE }

    { 6   ;2   ;Field     ;
                SourceExpr=Description }

    { 1000000004;2;Field  ;
                SourceExpr="Description 2" }

    { 1000000005;2;Field  ;
                SourceExpr=AC_Solutionpartner }

    { 1000000006;2;Field  ;
                SourceExpr="System Projektinfos" }

    { 1000000007;2;Field  ;
                SourceExpr="Endkundennr." }

    { 1000000008;2;Field  ;
                SourceExpr=Endkunde }

    { 24  ;2   ;Field     ;
                SourceExpr="Location Code";
                OnValidate=BEGIN
                             LocationCodeOnAfterValidate;
                           END;
                            }

    { 8   ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr=Quantity;
                OnValidate=BEGIN
                             QuantityOnAfterValidate;
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 11  ;2   ;Field     ;
                SourceExpr="Qty. to Assemble to Order";
                Visible=FALSE;
                OnValidate=BEGIN
                             CurrPage.SAVERECORD;
                             CurrPage.UPDATE(TRUE);
                           END;

                OnDrillDown=BEGIN
                              ShowAsmToOrderLines;
                            END;
                             }

    { 1000000009;2;Field  ;
                SourceExpr="Quotenr." }

    { 34  ;2   ;Field     ;
                SourceExpr="Unit of Measure Code";
                OnValidate=BEGIN
                             UnitofMeasureCodeOnAfterValida;
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 10  ;2   ;Field     ;
                SourceExpr="Unit of Measure";
                Visible=FALSE }

    { 18  ;2   ;Field     ;
                SourceExpr="Unit Cost (LCY)";
                Visible=FALSE }

    { 38  ;2   ;Field     ;
                CaptionML=[DEU=VK-Preis vorhanden;
                           ENU=Sales Price Exists];
                SourceExpr=PriceExists;
                Visible=FALSE;
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Unit Price";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;

                ShowMandatory=TypeChosen }

    { 1000000010;2;Field  ;
                SourceExpr="VK-Preis (EKW)";
                Visible=FALSE }

    { 1000000011;2;Field  ;
                SourceExpr="DC-Preis (EKW)" }

    { 1000000012;2;Field  ;
                CaptionML=[DEU=MSRP;
                           ENU=MSRP];
                SourceExpr=MSRP;
                CaptionClass=MSRP_Text;
                Editable=FALSE }

    { 1000000013;2;Field  ;
                SourceExpr="Profit %" }

    { 1000000014;2;Field  ;
                SourceExpr=Einkaufsw„hrungsfaktor }

    { 1000000015;2;Field  ;
                SourceExpr=Einkaufsw„hrungscode }

    { 1000000016;2;Field  ;
                SourceExpr="Unit Cost";
                Visible=FALSE }

    { 50  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Amount";
                Editable=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 1000000017;2;Field  ;
                SourceExpr=LZ_Text }

    { 60  ;2   ;Field     ;
                CaptionML=[DEU=VK-Zeilenrabatt vorhanden;
                           ENU=Sales Line Disc. Exists];
                SourceExpr=LineDiscExists;
                Visible=FALSE;
                Editable=FALSE }

    { 16  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Line Discount %";
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 64  ;2   ;Field     ;
                SourceExpr="Line Discount Amount";
                Visible=FALSE;
                OnValidate=BEGIN
                             RedistributeTotalsOnAfterValidate;
                           END;
                            }

    { 62  ;2   ;Field     ;
                SourceExpr="Allow Invoice Disc.";
                Visible=FALSE }

    { 54  ;2   ;Field     ;
                SourceExpr="Allow Item Charge Assignment";
                Visible=FALSE }

    { 36  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. to Assign";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 58  ;2   ;Field     ;
                BlankZero=Yes;
                SourceExpr="Qty. Assigned";
                Visible=FALSE;
                OnDrillDown=BEGIN
                              CurrPage.SAVERECORD;
                              ShowItemChargeAssgnt;
                              UpdateForm(FALSE);
                            END;
                             }

    { 1000000019;2;Field  ;
                SourceExpr="Requested Delivery Date" }

    { 76  ;2   ;Field     ;
                SourceExpr="Work Type Code";
                Visible=FALSE }

    { 42  ;2   ;Field     ;
                SourceExpr="Blanket Order No.";
                Visible=FALSE }

    { 46  ;2   ;Field     ;
                SourceExpr="Blanket Order Line No.";
                Visible=FALSE }

    { 56  ;2   ;Field     ;
                SourceExpr="Appl.-to Item Entry";
                Visible=FALSE }

    { 20  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                Visible=FALSE }

    { 22  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                Visible=FALSE }

    { 300 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[3];
                CaptionClass='1,2,3';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(3),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(3,ShortcutDimCode[3]);
                           END;
                            }

    { 302 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[4];
                CaptionClass='1,2,4';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(4),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(4,ShortcutDimCode[4]);
                           END;
                            }

    { 304 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[5];
                CaptionClass='1,2,5';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(5),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(5,ShortcutDimCode[5]);
                           END;
                            }

    { 306 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[6];
                CaptionClass='1,2,6';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(6),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(6,ShortcutDimCode[6]);
                           END;
                            }

    { 308 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[7];
                CaptionClass='1,2,7';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(7),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(7,ShortcutDimCode[7]);
                           END;
                            }

    { 310 ;2   ;Field     ;
                SourceExpr=ShortcutDimCode[8];
                CaptionClass='1,2,8';
                TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(8),
                                                            Dimension Value Type=CONST(Standard),
                                                            Blocked=CONST(No));
                Visible=FALSE;
                OnValidate=BEGIN
                             ValidateShortcutDimCode(8,ShortcutDimCode[8]);
                           END;
                            }

    { 53  ;1   ;Group     ;
                Visible=FALSE;
                GroupType=Group }

    { 49  ;2   ;Group     ;
                GroupType=Group }

    { 47  ;3   ;Field     ;
                Name=Invoice Discount Amount;
                CaptionML=[DEU=Rechnungsrab.-Betrag;
                           ENU=Invoice Discount Amount];
                SourceExpr=TotalSalesLine."Inv. Discount Amount";
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                Editable=InvDiscAmountEditable;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled;
                OnValidate=VAR
                             SalesHeader@1000 : Record 36;
                           BEGIN
                             SalesHeader.GET("Document Type","Document No.");
                             SalesCalcDiscByType.ApplyInvDiscBasedOnAmt(TotalSalesLine."Inv. Discount Amount",SalesHeader);
                             CurrPage.UPDATE(FALSE);
                           END;
                            }

    { 45  ;3   ;Field     ;
                Name=Invoice Disc. Pct.;
                CaptionML=[DEU=Rechnungsrabatt in %;
                           ENU=Invoice Discount %];
                DecimalPlaces=0:2;
                SourceExpr=SalesCalcDiscByType.GetCustInvoiceDiscountPct(Rec);
                Visible=TRUE;
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 35  ;2   ;Group     ;
                GroupType=Group }

    { 33  ;3   ;Field     ;
                Name=Total Amount Excl. VAT;
                DrillDown=No;
                CaptionML=[DEU=Gesamtbetrag ohne MwSt.;
                           ENU=Total Amount Excl. VAT];
                SourceExpr=TotalSalesLine.Amount;
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalExclVATCaption(SalesHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 31  ;3   ;Field     ;
                Name=Total VAT Amount;
                CaptionML=[DEU=MwSt. gesamt;
                           ENU=Total VAT];
                SourceExpr=VATAmount;
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalVATCaption(SalesHeader."Currency Code");
                Editable=FALSE;
                Style=Subordinate;
                StyleExpr=RefreshMessageEnabled }

    { 29  ;3   ;Field     ;
                Name=Total Amount Incl. VAT;
                CaptionML=[DEU=Gesamtbetrag inkl. MwSt.;
                           ENU=Total Amount Incl. VAT];
                SourceExpr=TotalSalesLine."Amount Including VAT";
                AutoFormatType=1;
                AutoFormatExpr=TotalSalesHeader."Currency Code";
                CaptionClass=DocumentTotals.GetTotalInclVATCaption(SalesHeader."Currency Code");
                Editable=FALSE;
                StyleExpr=TotalAmountStyle }

    { 27  ;3   ;Field     ;
                Name=RefreshTotals;
                DrillDown=Yes;
                SourceExpr=RefreshMessageText;
                Enabled=RefreshMessageEnabled;
                Editable=FALSE;
                OnDrillDown=BEGIN
                              DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
                              DocumentTotals.SalesUpdateTotalsControls(
                                Rec,TotalSalesHeader,TotalSalesLine,RefreshMessageEnabled,
                                TotalAmountStyle,RefreshMessageText,InvDiscAmountEditable,CurrPage.EDITABLE,VATAmount);
                            END;

                ShowCaption=No }

  }
  CODE
  {
    VAR
      TotalSalesHeader@1017 : Record 36;
      TotalSalesLine@1016 : Record 37;
      SalesHeader@1000 : Record 36;
      TransferExtendedText@1002 : Codeunit 378;
      SalesPriceCalcMgt@1004 : Codeunit 7000;
      ItemAvailFormsMgt@1001 : Codeunit 353;
      SalesCalcDiscByType@1015 : Codeunit 56;
      DocumentTotals@1014 : Codeunit 57;
      VATAmount@1013 : Decimal;
      ShortcutDimCode@1003 : ARRAY [8] OF Code[20];
      ItemPanelVisible@19014573 : Boolean INDATASET;
      InvDiscAmountEditable@1010 : Boolean;
      TotalAmountStyle@1009 : Text;
      RefreshMessageEnabled@1008 : Boolean;
      RefreshMessageText@1007 : Text;
      TypeChosen@1022 : Boolean;
      "***TOPAS_VAR***"@1000000000 : Integer;
      TOPASServiceModul@1000000003 : Codeunit 50008;
      TOPAS_Funktionen@1000000002 : Codeunit 50006;
      MSRP@1000000001 : Decimal;
      MSRP_Text@1000000004 : Text;

    PROCEDURE ApproveCalcInvDisc@1();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Disc. (Yes/No)",Rec);
    END;

    LOCAL PROCEDURE CalcInvDisc@5();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Calc. Discount",Rec);
    END;

    LOCAL PROCEDURE ExplodeBOM@3();
    BEGIN
      CODEUNIT.RUN(CODEUNIT::"Sales-Explode BOM",Rec);
    END;

    LOCAL PROCEDURE InsertExtendedText@4(Unconditionally@1000 : Boolean);
    BEGIN
      IF TransferExtendedText.SalesCheckIfAnyExtText(Rec,Unconditionally) THEN BEGIN
        CurrPage.SAVERECORD;
        COMMIT;
        TransferExtendedText.InsertSalesExtText(Rec);
      END;
      IF TransferExtendedText.MakeUpdate THEN
        UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE ShowItemSub@8();
    BEGIN
      ShowItemSub;
    END;

    LOCAL PROCEDURE ShowNonstockItems@10();
    BEGIN
      ShowNonstock;
    END;

    LOCAL PROCEDURE ItemChargeAssgnt@5800();
    BEGIN
      ShowItemChargeAssgnt;
    END;

    PROCEDURE UpdateForm@12(SetSaveRecord@1000 : Boolean);
    BEGIN
      CurrPage.UPDATE(SetSaveRecord);
    END;

    LOCAL PROCEDURE ShowPrices@15();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLinePrice(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE ShowLineDisc@16();
    BEGIN
      SalesHeader.GET("Document Type","Document No.");
      CLEAR(SalesPriceCalcMgt);
      SalesPriceCalcMgt.GetSalesLineLineDisc(SalesHeader,Rec);
    END;

    LOCAL PROCEDURE TypeOnAfterValidate@19069045();
    BEGIN
      ItemPanelVisible := Type = Type::Item;
    END;

    LOCAL PROCEDURE NoOnAfterValidate@19066594();
    BEGIN
      InsertExtendedText(FALSE);
      IF (Type = Type::"Charge (Item)") AND ("No." <> xRec."No.") AND
         (xRec."No." <> '')
      THEN
        CurrPage.SAVERECORD;

      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE LocationCodeOnAfterValidate@2();
    BEGIN
      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE VariantCodeOnAfterValidate@9();
    BEGIN
      SaveAndAutoAsmToOrder;
    END;

    LOCAL PROCEDURE CrossReferenceNoOnAfterValidat@19048248();
    BEGIN
      InsertExtendedText(FALSE);
    END;

    LOCAL PROCEDURE QuantityOnAfterValidate@19032465();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;

      IF (Type = Type::Item) AND
         (Quantity <> xRec.Quantity)
      THEN
        CurrPage.UPDATE(TRUE);
    END;

    LOCAL PROCEDURE UnitofMeasureCodeOnAfterValida@19057939();
    BEGIN
      IF Reserve = Reserve::Always THEN BEGIN
        CurrPage.SAVERECORD;
        AutoReserve;
      END;
    END;

    LOCAL PROCEDURE SaveAndAutoAsmToOrder@13();
    BEGIN
      IF (Type = Type::Item) AND IsAsmToOrderRequired THEN BEGIN
        CurrPage.SAVERECORD;
        AutoAsmToOrder;
        CurrPage.UPDATE(FALSE);
      END;
    END;

    LOCAL PROCEDURE RedistributeTotalsOnAfterValidate@7();
    BEGIN
      CurrPage.SAVERECORD;

      SalesHeader.GET("Document Type","Document No.");
      IF DocumentTotals.SalesCheckNumberOfLinesLimit(SalesHeader) THEN
        DocumentTotals.SalesRedistributeInvoiceDiscountAmounts(Rec,VATAmount,TotalSalesLine);
      CurrPage.UPDATE;
    END;

    PROCEDURE EditText@1118400000();
    VAR
      L_RecRef@1118400000 : RecordRef;
      L_NewLine@1118400001 : Boolean;
      L_TextEdit@1118400002 : Codeunit 60000;
    BEGIN
      //A.00 B
      L_NewLine := FALSE;
      IF "Line No." = 0 THEN BEGIN
        Description := ' ';
        CurrPage.SAVERECORD;
        L_NewLine := TRUE;
      END;
      COMMIT;
      L_RecRef.GETTABLE(Rec);
      IF (NOT L_TextEdit.EditTextLines(L_RecRef,
                             'Description',
                             '',
                             '',
                             'Line No.',
                             'Attached to Line No.',
                             FALSE,
                             'Sell-to Customer No.',
                             '')) AND L_NewLine THEN
        IF GET("Document Type","Document No.","Line No.") THEN
          DELETE;

      COMMIT;
      //A.00 E
    END;

    LOCAL PROCEDURE "***TOPAS_Func***"@1000000000();
    BEGIN
    END;

    PROCEDURE ShowCalculation@1140000();
    VAR
      Kalkulation@1000000000 : Page 50019;
    BEGIN
      TESTFIELD (Type,Type::Item);
      CLEAR (Kalkulation);
      CurrPage.SAVERECORD;
      COMMIT;
      Kalkulation.VerkZeileErrichten(Rec);
      Kalkulation.RUNMODAL;
      Rec := Rec;
      CurrPage.UPDATE;
    END;

    PROCEDURE ShowServiceCalculation@1140001();
    BEGIN
      //TOPAS 25.08.11 ST - Service Kalkulation ”ffnen
      TOPASServiceModul.OpenCalculationToolFromSalesLine(Rec);
    END;

    BEGIN
    {
      Lfd.Nr. Version   Datum       User  Beschreibung
      ===========================================================================
      1       TXT8.00   10.11.16    ST    Integration easyText
      2       TOP1.00   10.03.17    ST    TOPAS Felder eingebaut
      3       TOP1.00   10.03.17    ST    Funktionen ShowCalculation, ShowPriceCalculation und FindSalesPrice + MSRP eingebaut
      4       TOP1.00   07.06.17    ST    Repeater auf IndentationColumnName = 0 gestellt, um Sortierung zu verhindern
      5       TOP1.00   07.08.17    ST    "Attached to Line No." ist nun editierbar
      6       TOP1.01   09.10.19    ST    Dynamische Anzeige des MSRP anhand der Verkaufsw„hrung
    }
    END.
  }
}

