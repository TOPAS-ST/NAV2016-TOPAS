OBJECT Page 50107 GDPDU Holen der Daten
{
  OBJECT-PROPERTIES
  {
    Date=04.07.22;
    Time=12:27:15;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    LinksAllowed=No;
    OnInit=BEGIN
              Datum_ab_supp:=010116D;


             {
             // ANFANG šberprfung ob mehrere H„kchen gesetzt sind
             var_anzahl_h„kchen:=0;
             IF (kreditorh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (kreditorpostenh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (debitorh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (Debitorpostenh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (sachpostenh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (sachkontenh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (sachkonten_ebilanz_h„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (sumlisth„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (lagerbewerth„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (freieslagerh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (freieslagertestneu=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (freieslagerverkauf=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (quoteh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (testlagerh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (v_konsi=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (LB_Excel=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF (Excel_bewert=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF v_w„_abstimm=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF v_w„_abstimm1=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF v_wkv=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF v_ustabstimm=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF v_supp_std=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF v_supp_prf=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF v_anlkartei=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF v_anlber=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF v_anlspiegel=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
             IF v_lagbewerttest=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;

             IF var_anzahl_h„kchen>1 THEN
             ERROR('Es wurden mehrere H„kchen gesetzt. Report abgebrochen!');
             // ENDE šberprfung ob mehrere H„kchen gesetzt sind

             // ANFANG Aufruf der Funktionen
             IF kreditorh„kchen=TRUE THEN Kreditorkonten;
             IF kreditorpostenh„kchen=TRUE THEN Kreditorposten;
             IF debitorh„kchen=TRUE THEN Debitorkonten;
             IF Debitorpostenh„kchen=TRUE THEN Debitorposten;
             IF sachkontenh„kchen=TRUE THEN Sachkonten;
             IF sachpostenh„kchen=TRUE THEN Sachposten;
             IF sachkonten_ebilanz_h„kchen=TRUE THEN Sachkonten_E_Bilanz;
             IF sumlisth„kchen=TRUE THEN Summenliste;
             IF lagerbewerth„kchen=TRUE THEN Lagerbewertung;
             IF freieslagerh„kchen=TRUE THEN "Freies Lager";
             IF freieslagertestneu=TRUE THEN "Freies Lager Test neu";
             IF freieslagerverkauf=TRUE THEN "Freies Lager Verkauf";
             IF quoteh„kchen=TRUE THEN Quoteberprfung;
             IF testlagerh„kchen=TRUE THEN Lager_EK_Rech_VK_Rech;
             IF v_konsi=TRUE THEN Konsignationslager;
             IF LB_Excel=TRUE THEN LB_nach_Excel;
             IF Excel_bewert=TRUE THEN IDT_LB_bewerten;
             IF v_w„_abstimm=TRUE THEN WŽ_Abstimmung;
             IF v_w„_abstimm1=TRUE THEN W„hrungsabstimmung;
             IF v_wkv=TRUE THEN WKV;
             IF v_ustabstimm=TRUE THEN USt_Abstimmung;
             IF v_supp_std=TRUE THEN Support_Stunden;
             IF v_supp_prf=TRUE THEN Support_prfen;
             IF v_anlkartei=TRUE THEN Anlagekartei;
             IF v_anlber=TRUE THEN Anlagebersicht;
             IF v_anlspiegel=TRUE THEN Anlagenspiegel;
             //IF v_lagbewerttest=TRUE THEN Lagbewert_Test;
             //  ENDE Aufruf der Funktionen
             }
           END;

    ActionList=ACTIONS
    {
      { 1000000066;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000067;1 ;ActionGroup }
      { 1000000068;2 ;Action    ;
                      Name=Ausfhren;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=ExecuteBatch;
                      PromotedCategory=Process;
                      OnAction=BEGIN

                                 // ANFANG šberprfung ob mehrere H„kchen gesetzt sind
                                 var_anzahl_h„kchen:=0;
                                 IF (kreditorh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (kreditorpostenh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (debitorh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (Debitorpostenh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (sachpostenh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (sachkontenh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (sachkonten_ebilanz_h„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (sumlisth„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF (lagerbewerth„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF (freieslagerh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF (freieslagertestneu=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF (freieslagerverkauf=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF (quoteh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF (testlagerh„kchen=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF (v_konsi=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF (LB_Excel=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF (Excel_bewert=TRUE) THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF v_w„_abstimm=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF v_w„_abstimm1=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_wkv=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 //IF v_ustabstimm=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_supp_std=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_supp_prf=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_anlkartei=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_anlber=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_anlspiegel=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_anlspiegel_neu=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_Afa=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_exportprobuchgrp=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_USt_Abstimm_KJ=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_sum_kred=TRUE THEN var_anzahl_h„kchen:=var_anzahl_h„kchen + 1;
                                 IF v_posten_offen_13b2 = TRUE THEN var_anzahl_h„kchen += 1;

                                 IF var_anzahl_h„kchen>1 THEN
                                 ERROR('Es wurden mehrere H„kchen gesetzt. Report abgebrochen!');
                                 // ENDE šberprfung ob mehrere H„kchen gesetzt sind

                                 // ANFANG Aufruf der Funktionen
                                 IF kreditorh„kchen=TRUE THEN Kreditorkonten;
                                 IF kreditorpostenh„kchen=TRUE THEN Kreditorposten;
                                 IF debitorh„kchen=TRUE THEN Debitorkonten;
                                 IF Debitorpostenh„kchen=TRUE THEN Debitorposten;
                                 IF sachkontenh„kchen=TRUE THEN Sachkonten;
                                 IF sachpostenh„kchen=TRUE THEN Sachposten;
                                 IF sachkonten_ebilanz_h„kchen=TRUE THEN Sachkonten_E_Bilanz;
                                 IF sumlisth„kchen=TRUE THEN Summenliste;
                                 //IF lagerbewerth„kchen=TRUE THEN Lagerbewertung;
                                 //IF freieslagerh„kchen=TRUE THEN "Freies Lager";
                                 //IF freieslagertestneu=TRUE THEN "Freies Lager Test neu";
                                 //IF freieslagerverkauf=TRUE THEN "Freies Lager Verkauf";
                                 //IF quoteh„kchen=TRUE THEN Quoteberprfung;
                                 //IF testlagerh„kchen=TRUE THEN Lager_EK_Rech_VK_Rech;
                                 IF v_konsi=TRUE THEN Konsignationslager;
                                 //IF LB_Excel=TRUE THEN LB_nach_Excel;
                                 //IF Excel_bewert=TRUE THEN IDT_LB_bewerten;
                                 //IF v_w„_abstimm=TRUE THEN WŽ_Abstimmung;
                                 //IF v_w„_abstimm1=TRUE THEN W„hrungsabstimmung;
                                 IF v_wkv=TRUE THEN WKV;
                                 //IF v_ustabstimm=TRUE THEN USt_Abstimmung;
                                 IF v_supp_std=TRUE THEN Support_Stunden;
                                 IF v_supp_prf=TRUE THEN Support_prfen;
                                 IF v_anlkartei=TRUE THEN Anlagekartei;
                                 IF v_anlber=TRUE THEN Anlagebersicht;
                                 //IF v_anlspiegel=TRUE THEN Anlagenspiegel;
                                 IF v_anlspiegel=TRUE THEN Anlagenspiegel_v2;
                                 IF v_Afa=TRUE THEN Afa_Jahresbersicht;
                                 IF v_exportprobuchgrp=TRUE THEN Export_LB_mit_Produktbuchgrp;
                                 IF v_USt_Abstimm_KJ=TRUE THEN Umsatzsteuerabstimmung_Kalenderjahr;
                                 IF v_sum_kred=TRUE THEN "Summenliste Kreditoren";
                                 IF v_posten_offen_13b2 = TRUE THEN Offene_Posten_13b2;

                                 //  ENDE Aufruf der Funktionen
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1000000000;;Container;
                Name=GDPdU;
                ContainerType=ContentArea }

    { 1000000020;1;Group  ;
                CaptionML=DEU=Dieser Bereich gilt fr alle Abfragen;
                GroupType=Group }

    { 1000000021;2;Field  ;
                CaptionML=DEU=Datum von:;
                SourceExpr=Datum_ab }

    { 1000000022;2;Field  ;
                CaptionML=DEU=Datum bis:;
                SourceExpr=Datum_bis }

    { 1000000001;1;Group  ;
                CaptionML=DEU=GDPdU;
                GroupType=Group }

    { 1000000011;2;Group  ;
                CaptionML=DEU="ab Datum = 1.1.2000=> Soll + Haben gesamter Zeitraum";
                GroupType=Group }

    { 1000000002;3;Group  ;
                CaptionML=DEU="ab Datum 0 1.7. des Auswertungszeitraums => Soll + Haben des Zeitraums";
                GroupType=Group }

    { 1000000005;4;Field  ;
                CaptionML=DEU=Kreditorkonten holen;
                SourceExpr=kreditorh„kchen }

    { 1000000006;4;Field  ;
                CaptionML=DEU=Kreditorposten holen;
                SourceExpr=kreditorpostenh„kchen }

    { 1000000007;4;Field  ;
                CaptionML=DEU=Debitorkonten holen;
                SourceExpr=debitorh„kchen }

    { 1000000008;4;Field  ;
                CaptionML=DEU=Debitorposten holen;
                SourceExpr=Debitorpostenh„kchen }

    { 1000000009;4;Field  ;
                CaptionML=DEU=Sachkonten holen;
                SourceExpr=sachkontenh„kchen }

    { 1000000010;4;Field  ;
                CaptionML=DEU=Sachposten holen;
                SourceExpr=sachpostenh„kchen }

    { 1000000012;1;Group  ;
                CaptionML=DEU=E-Bilanz;
                GroupType=Group }

    { 1000000013;2;Group  ;
                CaptionML=DEU="Um den richtigen Saldo zu erhalten ist Datum ab = 01.07....";
                GroupType=Group }

    { 1000000016;3;Field  ;
                CaptionML=DEU=Sachkonten als Excelfile zum Einspilen in E-Bilanz holen;
                SourceExpr=sachkonten_ebilanz_h„kchen }

    { 1000000017;3;Field  ;
                CaptionML=DEU=Alle Sachkonten ausw„hlen oder ...;
                SourceExpr=alle_sachkonten }

    { 1000000018;3;Field  ;
                CaptionML=DEU=Sachkonto von:;
                SourceExpr=sachkon_von }

    { 1000000019;3;Field  ;
                CaptionML=DEU=Sachkonto bis:;
                SourceExpr=sachkon_bis }

    { 1000000003;1;Group  ;
                CaptionML=DEU=Summen- und Saldenliste;
                GroupType=Group }

    { 1000000004;2;Field  ;
                CaptionML=DEU=Summen- und Saldenliste frWirtschaftsprfer;
                SourceExpr=sumlisth„kchen }

    { 1000000014;2;Field  ;
                CaptionML=DEU=Beginn des GJ (01.07.2012);
                SourceExpr=v_startdat_gj }

    { 1000000015;2;Field  ;
                CaptionML=DEU=Ende des GJ (30.06.2013);
                SourceExpr=v_endedat_gj }

    { 1000000023;2;Field  ;
                CaptionML=DEU=Ende des Vorjahres (30.06.2012);
                SourceExpr=v_endedat_vj }

    { 1000000038;1;Group  ;
                CaptionML=DEU=Quoteberprfung;
                GroupType=Group }

    { 1000000039;2;Group  ;
                CaptionML=DEU=noch einarbeiten Dataport 50033;
                GroupType=Group }

    { 1000000045;1;Group  ;
                CaptionML=DEU=KONSI;
                GroupType=Group }

    { 1000000047;2;Field  ;
                CaptionML=DEU=Excel Liste fr Konsignationslager erstellen;
                SourceExpr=v_konsi }

    { 1000000048;1;Group  ;
                CaptionML=DEU=WKV;
                GroupType=Group }

    { 1000000049;2;Field  ;
                CaptionML=DEU=Debitorposten pro Monat fr WKV Datum ab und -bis eintragen;
                SourceExpr=v_wkv }

    { 1000000054;1;Group  ;
                CaptionML=DEU=Support Kontingente;
                GroupType=Group }

    { 1000000055;2;Field  ;
                CaptionML=DEU=1. Prfen ob alle Re in Tab Supp.Kontingente angelegt;
                SourceExpr=v_supp_prf }

    { 1000000056;2;Field  ;
                CaptionML=DEU=Rechnungsdatum ab berprfen:;
                SourceExpr=Datum_ab_supp }

    { 1000000057;2;Field  ;
                CaptionML=DEU=2. Support-Stunden-Auswertung fr Abgrenzung;
                SourceExpr=v_supp_std }

    { 1000000058;1;Group  ;
                CaptionML=DEU=Anlagenkartei;
                GroupType=Group }

    { 1000000059;2;Field  ;
                CaptionML=DEU=Anlagenkarteiblatt erstellen;
                SourceExpr=v_anlkartei }

    { 1000000060;2;Field  ;
                CaptionML=DEU=Anlagennr. eingeben (zB 0135-0001);
                SourceExpr=v_anlagenr }

    { 1000000061;1;Group  ;
                CaptionML=DEU=Anlagenbersicht;
                GroupType=Group }

    { 1000000062;2;Field  ;
                CaptionML=DEU=Anlagenbersicht erstellen (Datum von - bis eingeben);
                SourceExpr=v_anlber }

    { 1000000063;2;Field  ;
                CaptionML=DEU=Konto eingeben (zB 0135);
                SourceExpr=v_anlagenrserie }

    { 1000000064;1;Group  ;
                CaptionML=DEU=Anlagenspiegel;
                GroupType=Group }

    { 1000000065;2;Field  ;
                CaptionML=DEU=Anlagenspiegel erstellen (Datum von -bis eingeben);
                SourceExpr=v_anlspiegel }

    { 1000000024;1;Group  ;
                CaptionML=DEU=AfA Jahresbersicht;
                GroupType=Group }

    { 1000000025;2;Field  ;
                Name=<v_Afa>;
                CaptionML=DEU=AfA Jahresbersicht ausfhren;
                SourceExpr=v_Afa }

    { 1000000026;1;Group  ;
                CaptionML=DEU=Lagerbestand mit Produktbuchgrp;
                GroupType=Group }

    { 1000000027;2;Field  ;
                Name=<v_exportproduktbuchgrp>;
                CaptionML=DEU=Lagerlsite mit Produktbuchgrp erstellen;
                SourceExpr=v_exportprobuchgrp }

    { 1000000028;1;Group  ;
                CaptionML=DEU=USt-Abstimmung Kalenderjahr;
                GroupType=Group }

    { 1000000029;2;Field  ;
                Name=<v_USt_Abstimm_KJ>;
                CaptionML=DEU=USt-Abstimmung ausfhren;
                SourceExpr=v_USt_Abstimm_KJ }

    { 1000000030;1;Group  ;
                CaptionML=DEU=<Summenliste Kreditoren>;
                GroupType=Group }

    { 1000000031;2;Field  ;
                Name=<v_sum_kred>;
                CaptionML=DEU=Kreditorsummenliste ausfhren. Datumsfelder GJ in Summenliste Sachkonten eintragen;
                SourceExpr=v_sum_kred }

    { 1000000032;1;Group  ;
                CaptionML=DEU=Offene Rechnungsposten 13B2;
                GroupType=Group }

    { 1000000033;2;Field  ;
                CaptionML=DEU=Offene Rechnungsposten mit Kennung 13B2 ausfhren;
                SourceExpr=v_posten_offen_13b2 }

  }
  CODE
  {
    VAR
      Excel@1000000154 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Book@1000000153 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Range@1000000152 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Sheet@1000000151 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      j@1000000150 : Text[30];
      var_anzahl_h„kchen@1000000149 : Integer;
      Kreditor@1000000148 : Record 23;
      Kredpost@1000000147 : Record 25;
      saldo_sum@1000000146 : Decimal;
      haben_sum@1000000145 : Decimal;
      soll_sum@1000000144 : Decimal;
      kreditorh„kchen@1000000143 : Boolean;
      Datum_ab@1000000142 : Date;
      Datum_bis@1000000141 : Date;
      Datum_ab_supp@1000000140 : Date;
      Debitor@1000000139 : Record 18;
      Debpost@1000000138 : Record 21;
      Sachkont@1000000137 : Record 15;
      Sachkont1@1000000136 : Record 15;
      Sachpost@1000000135 : Record 17;
      debitorh„kchen@1000000134 : Boolean;
      sachkontenh„kchen@1000000133 : Boolean;
      kreditorpostenh„kchen@1000000132 : Boolean;
      Debitorpostenh„kchen@1000000131 : Boolean;
      sachpostenh„kchen@1000000130 : Boolean;
      lagerbewerth„kchen@1000000129 : Boolean;
      freieslagerh„kchen@1000000128 : Boolean;
      freieslagertestneu@1000000127 : Boolean;
      freieslagerverkauf@1000000126 : Boolean;
      quoteh„kchen@1000000125 : Boolean;
      testlagerh„kchen@1000000124 : Boolean;
      sachkonten_ebilanz_h„kchen@1000000123 : Boolean;
      sumlisth„kchen@1000000122 : Boolean;
      alle_sachkonten@1000000121 : Boolean;
      saldo_sum_vj@1000000120 : Decimal;
      sachkon_von@1000000119 : Code[10];
      sachkon_bis@1000000118 : Code[10];
      v_startdat_gj@1000000117 : Date;
      v_endedat_gj@1000000116 : Date;
      v_endedat_vj@1000000115 : Date;
      Artikel@1000000114 : Record 27;
      Artikelposten@1000000113 : Record 32;
      Artikelposten2@1000000112 : Record 32;
      ek_preis@1000000111 : Record 7012;
      tab_ab@1000000110 : Record 37;
      Wertposten@1000000109 : Record 5802;
      EK_Rech_k@1000000108 : Record 122;
      Lager_abgrenz_datum@1000000107 : Date;
      Kurs_USD@1000000106 : Decimal;
      Kurs_JPY@1000000105 : Decimal;
      Kurs_GBP@1000000104 : Decimal;
      Lagerort1@1000000103 : Code[10];
      Lagerort2@1000000102 : Code[10];
      Lagerort3@1000000101 : Code[10];
      Lagerbestand@1000000100 : Decimal;
      lagerbestand1@1000000099 : Decimal;
      lagerbestand2@1000000098 : Decimal;
      lagerbestand3@1000000097 : Decimal;
      Lagerstck1@1000000096 : Decimal;
      lagerstck2@1000000095 : Decimal;
      var_NEXT@1000000094 : Integer;
      var_text1@1000000093 : Text[30];
      var_text2@1000000092 : Text[30];
      var_letzter_wert@1000000091 : Decimal;
      var_sum_zugang_wert@1000000090 : Decimal;
      var_sum_zugang_wert_stichkurs@1000000089 : Decimal;
      v_sum_bewert@1000000088 : Decimal;
      zu_w„h_kurs@1000000087 : Decimal;
      v_au_2053@1000000081 : Decimal;
      v_stichwert@1000000080 : Decimal;
      v_sonderlager@1000000079 : Boolean;
      v_zuwert@1000000078 : Decimal;
      v_bewert@1000000077 : Decimal;
      v_dcw„@1000000076 : Text[30];
      v_fakturiert@1000000075 : Decimal;
      v_quantity@1000000074 : Decimal;
      v_quantity2@1000000073 : Decimal;
      vkrz@1000000072 : Record 113;
      vkgz@1000000071 : Record 115;
      ekz@1000000070 : Record 39;
      ekrz@1000000069 : Record 123;
      v_Artikel@1000000068 : Code[20];
      v_konsi@1000000067 : Boolean;
      v_meng_fakt@1000000066 : Decimal;
      v_meng_lief@1000000065 : Decimal;
      vklz@1000000064 : Record 111;
      v_z„hlschleife@1000000063 : Text[30];
      j_z„hl@1000000062 : Text[30];
      LB_Excel@1000000061 : Boolean;
      Dateiname@1000000060 : Text[250];
      Excel_bewert@1000000059 : Boolean;
      v_Datecode@1000000058 : Code[20];
      herstell@1000000057 : Record 5720;
      v_FLmenge@1000000056 : Integer;
      v_FLaumenge@1000000055 : Integer;
      v_FLaurmenge@1000000054 : Integer;
      v_FLekmenge@1000000053 : Integer;
      v_FLwert@1000000052 : Decimal;
      v_preis@1000000051 : Decimal;
      v_w„_abstimm@1000000050 : Boolean;
      v_w„_abstimm1@1000000049 : Boolean;
      v_druck_art@1000000048 : Decimal;
      v_ek_w„@1000000047 : Code[10];
      v_ek_preis@1000000046 : Decimal;
      v_usd_gesamt@1000000045 : Decimal;
      v_jpy_gesamt@1000000044 : Decimal;
      v_gbp_gesamt@1000000043 : Decimal;
      v_eur_gesamt@1000000042 : Decimal;
      v_au_wert@1000000041 : Decimal;
      v_aur_wert@1000000040 : Decimal;
      v_lager_wert@1000000039 : Decimal;
      v_best_wert@1000000038 : Decimal;
      v_wkv@1000000037 : Boolean;
      v_wkv_brutto_gesamt@1000000036 : Decimal;
      v_wkv_netto_gesamt@1000000035 : Decimal;
      v_wkv_saldo_gesamt@1000000034 : Decimal;
      v_wkv_saldo_unversich@1000000033 : Decimal;
      bankpos@1000000032 : Record 271;
      v_dc_ek@1000000031 : Decimal;
      v_ustabstimm@1000000030 : Boolean;
      v_supp_std@1000000029 : Boolean;
      supp@1000000206 : Record 50012;
      supp_kon@1000000028 : Record 50013;
      supp_kon1@1000000205 : Record 50013;
      v_meng_rest@1000000027 : Decimal;
      v_meng_rest1@1000000026 : Decimal;
      v_neu_gruppe@1000000025 : Code[20];
      v_neu_gruppe1@1000000189 : Code[20];
      v_supp_wert@1000000024 : Decimal;
      v_supp_prf@1000000023 : Boolean;
      belege@1000000022 : Record 50010;
      v_hypernr@1000000021 : Text[30];
      v_hyperlink@1000000020 : Text[250];
      Anlage@1000000019 : Record 5600;
      Anlpost@1000000018 : Record 5601;
      Anlpost1@1000000017 : Record 5601;
      v_anlkartei@1000000016 : Boolean;
      v_anlber@1000000015 : Boolean;
      v_anlspiegel_neu@1000000288 : Boolean;
      v_anlspiegel@1000000014 : Boolean;
      v_anlagenr@1000000013 : Code[20];
      v_anlagenrserie@1000000012 : Code[10];
      v_anlwert@1000000011 : Decimal;
      v_anlwertgesamt@1000000010 : Decimal;
      v_ger„tenr@1000000009 : Code[20];
      v_date_jahr1@1000000008 : Text[10];
      v_date_jahr2@1000000007 : Text[10];
      v_D22@1000000006 : Decimal;
      v_D31@1000000005 : Decimal;
      v_D33@1000000004 : Decimal;
      v_D35@1000000003 : Decimal;
      v_D37@1000000002 : Decimal;
      v_D37_1@1000000280 : Decimal;
      v_D37_2@1000000281 : Decimal;
      v_D39@1000000001 : Decimal;
      v_D41@1000000000 : Decimal;
      v_D43@1000000271 : Decimal;
      v_lagbewerttest@1000000155 : Boolean;
      v_ab_bestand@1000000082 : Decimal;
      v_bb_bestand@1000000083 : Decimal;
      v_ab_menge@1000000084 : Decimal;
      Text020@1000000085 : TextConst 'DEU=NR';
      Text021@1000000086 : TextConst 'DEU=NAME';
      Text022@1000000156 : TextConst 'DEU=STRASSE';
      Text023@1000000157 : TextConst 'DEU=LAND';
      Text024@1000000158 : TextConst 'DEU=PLZ';
      Text025@1000000159 : TextConst 'DEU=ORT';
      Text026@1000000160 : TextConst 'DEU=USTID';
      Text027@1000000161 : TextConst 'DEU=BEWEGUNG MW';
      Text028@1000000162 : TextConst 'DEU=SALDO BIS DATUM';
      Text029@1000000163 : TextConst 'DEU=SALDO MW';
      Text030@1000000164 : TextConst 'DEU=SOLL SALDO (MW)';
      Text031@1000000165 : TextConst 'DEU=HABEN SALDO (MW)';
      Text032@1000000166 : TextConst 'DEU=leer';
      v_posten_offen_13b2@1000000300 : Boolean;
      RecNo@1000000170 : Integer;
      TotalRecNo@1000000169 : Integer;
      RowNo@1000000168 : Integer;
      ColumnNo@1000000167 : Integer;
      TempExcelBuffer@1000000177 : TEMPORARY Record 370;
      FileMgt@1000000176 : Codeunit 419;
      ServerFileName@1000000175 : Text;
      SheetName@1000000174 : Text[250];
      DoUpdateExistingWorksheet@1000000173 : Boolean;
      Testmode@1000000172 : Boolean;
      Window@1000000171 : Dialog;
      Text000@1000000180 : TextConst 'DEU=Daten werden analysiert ...\\;ENU=Analyzing Data...\\';
      Text001@1000000179 : TextConst 'DEU=Auftragseingang;ENU=New Orders';
      Text002@1000000178 : TextConst 'DEU=Arbeitsmappe aktualisieren;ENU=Update Workbook';
      ExcelFileExtensionTok@1000000181 : TextConst '@@@={Locked};DEU=.xlsx;ENU=.xlsx';
      IDProvExtensionTok@1000000182 : TextConst 'DEU=.csv';
      v_z„hl@1000000183 : Integer;
      v_LS_Menge@1000000184 : Decimal;
      v_RE_Menge@1000000185 : Decimal;
      v_DC_Menge@1000000186 : Decimal;
      TOPAS_API@1000000187 : Codeunit 50001;
      vkk@1000000188 : Record 36;
      vkgk@1000000190 : Record 114;
      v_Afa@1000000191 : Boolean;
      v_anzahl_anschaff@1000000192 : Integer;
      v_exportprobuchgrp@1000000193 : Boolean;
      v_USt_Abstimm_KJ@1000000194 : Boolean;
      vkrk@1000000195 : Record 112;
      v_ben@1000000196 : Decimal;
      v_ben_in@1000000197 : Decimal;
      v_ben_aus@1000000198 : Decimal;
      v_unb@1000000199 : Decimal;
      v_unb_in@1000000200 : Decimal;
      v_unb_aus@1000000201 : Decimal;
      v_unv@1000000202 : Decimal;
      v_unv_in@1000000203 : Decimal;
      v_unv_aus@1000000204 : Decimal;
      v_sum_kred@1000000207 : Boolean;
      v_wert_vj@1000000208 : Decimal;
      v_wert_abgang@1000000209 : Decimal;
      v_wert_zugang@1000000210 : Decimal;
      v_wert_afa@1000000211 : Decimal;
      v_wert_gj@1000000212 : Decimal;
      v_anz_h„kchen_stunden@1000000213 : Decimal;
      v_stundensatz@1000000214 : Decimal;
      v_null_afa_wert@1000000215 : Decimal;
      v_null_wert@1000000216 : Decimal;
      v_abgangkorrektur@1000000217 : Decimal;
      v_wert_gesamt@1000000218 : Decimal;
      v_sp4d@1000000219 : Decimal;
      v_sp5e@1000000220 : Decimal;
      v_sp6f@1000000221 : Decimal;
      v_sp7g@1000000222 : Decimal;
      v_sp8h@1000000223 : Decimal;
      v_sp9i@1000000224 : Decimal;
      v_sp11k@1000000225 : Decimal;
      v_sp12l@1000000226 : Decimal;
      v_sp13m@1000000227 : Decimal;
      v_sp14n@1000000228 : Decimal;
      v_Anschaff_GJ_0135@1000000229 : Decimal;
      v_Anschaff_GJ_0520@1000000236 : Decimal;
      v_Anschaff_GJ_0650@1000000237 : Decimal;
      v_Anschaff_GJ_0651@1000000238 : Decimal;
      v_Anschaff_GJ_0680@1000000239 : Decimal;
      v_Anschaff_GJ_0690@1000000240 : Decimal;
      v_Anschaff_GJ_0698@1000000272 : Decimal;
      v_Anschaff_VJ_0135@1000000230 : Decimal;
      v_Anschaff_VJ_0520@1000000241 : Decimal;
      v_Anschaff_VJ_0650@1000000242 : Decimal;
      v_Anschaff_VJ_0651@1000000243 : Decimal;
      v_Anschaff_VJ_0680@1000000244 : Decimal;
      v_Anschaff_VJ_0690@1000000245 : Decimal;
      v_Anschaff_VJ_0698@1000000273 : Decimal;
      v_Zugang_GJ_0135@1000000231 : Decimal;
      v_Zugang_GJ_0520@1000000246 : Decimal;
      v_Zugang_GJ_0650@1000000247 : Decimal;
      v_Zugang_GJ_0651@1000000248 : Decimal;
      v_Zugang_GJ_0680@1000000249 : Decimal;
      v_Zugang_GJ_0690@1000000250 : Decimal;
      v_Zugang_GJ_0698@1000000274 : Decimal;
      v_Buchwert_GJ_0135@1000000232 : Decimal;
      v_Buchwert_GJ_0520@1000000251 : Decimal;
      v_Buchwert_GJ_0650@1000000252 : Decimal;
      v_Buchwert_GJ_0651@1000000253 : Decimal;
      v_Buchwert_GJ_0680@1000000254 : Decimal;
      v_Buchwert_GJ_0690@1000000255 : Decimal;
      v_Buchwert_GJ_0698@1000000275 : Decimal;
      v_Buchwert_VJ_0135@1000000233 : Decimal;
      v_Buchwert_VJ_0520@1000000256 : Decimal;
      v_Buchwert_VJ_0650@1000000257 : Decimal;
      v_Buchwert_VJ_0651@1000000258 : Decimal;
      v_Buchwert_VJ_0680@1000000259 : Decimal;
      v_Buchwert_VJ_0690@1000000260 : Decimal;
      v_Buchwert_VJ_0698@1000000276 : Decimal;
      v_AfA_kum_GJ_0135@1000000234 : Decimal;
      v_AfA_kum_GJ_0520@1000000261 : Decimal;
      v_AfA_kum_GJ_0650@1000000262 : Decimal;
      v_AfA_kum_GJ_0651@1000000263 : Decimal;
      v_AfA_kum_GJ_0680@1000000264 : Decimal;
      v_AfA_kum_GJ_0690@1000000265 : Decimal;
      v_AfA_kum_GJ_0698@1000000277 : Decimal;
      v_Afa_GJ_0135@1000000235 : Decimal;
      v_Afa_GJ_0520@1000000266 : Decimal;
      v_Afa_GJ_0650@1000000267 : Decimal;
      v_Afa_GJ_0651@1000000268 : Decimal;
      v_Afa_GJ_0680@1000000269 : Decimal;
      v_Afa_GJ_0690@1000000270 : Decimal;
      v_Afa_GJ_0698@1000000278 : Decimal;
      v_Umb_GJ_0135@1000000282 : Decimal;
      v_Umb_GJ_0520@1000000283 : Decimal;
      v_Umb_GJ_0650@1000000279 : Decimal;
      v_Umb_GJ_0651@1000000284 : Decimal;
      v_Umb_GJ_0680@1000000285 : Decimal;
      v_Umb_GJ_0690@1000000286 : Decimal;
      v_Umb_GJ_0698@1000000287 : Decimal;
      v_20_4@1000000289 : Decimal;
      v_20_5@1000000290 : Decimal;
      v_20_6@1000000291 : Decimal;
      v_20_7@1000000292 : Decimal;
      v_20_8@1000000293 : Decimal;
      v_20_9@1000000294 : Decimal;
      v_20_11@1000000295 : Decimal;
      v_20_12@1000000296 : Decimal;
      v_20_13@1000000297 : Decimal;
      v_20_14@1000000298 : Decimal;
      ErrorDate@1000000299 : TextConst 'DEU=Bitte setzen Sie einen entsprechenden Datumsfilter.';

    PROCEDURE Kreditorkonten@1140005();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'NR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'NAME','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'STRASSE','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'LAND','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'PLZ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'ORT','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'USTID','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'BEWEGUNG MW','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'SALDO BIS DATUM','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'SALDO (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'SOLL SALDO (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'HABEN SALDO (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      Kreditor.RESET;
      Kreditor.SETFILTER(Kreditor."No.",'%1..%2','550000','999999');
      IF Kreditor.FIND('-') THEN BEGIN
        REPEAT
          soll_sum :=0;
          haben_sum :=0;
          saldo_sum:=0;
          Kredpost.RESET;
          Kredpost.SETFILTER(Kredpost."Vendor No.",'%1',Kreditor."No.");
          Kredpost.SETFILTER(Kredpost."Posting Date",'%1..%2',Datum_ab,Datum_bis);
          // Kredpost.SETFILTER(Kredpost."Posting Date",'%1..%2',300608D,300609D);
          IF Kredpost.FIND('-') THEN BEGIN
            REPEAT
              Kredpost.CALCFIELDS("Amount (LCY)", "Debit Amount (LCY)", "Credit Amount (LCY)");
              saldo_sum:=saldo_sum + ROUND(Kredpost."Amount (LCY)",0.01);
              soll_sum :=soll_sum + Kredpost."Debit Amount (LCY)";
              haben_sum :=haben_sum + Kredpost."Credit Amount (LCY)";
            UNTIL Kredpost.NEXT=0;
          END;
          EnterCell(RowNo,1,Kreditor."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,Kreditor.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,Kreditor.Address,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,Kreditor."Country/Region Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,Kreditor."Post Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,Kreditor.City,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,Kreditor."VAT Registration No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          Kreditor.CALCFIELDS("Net Change (LCY)","Balance (LCY)");
          EnterCell(RowNo,8,FORMAT(Kreditor."Net Change (LCY)"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,9,FORMAT(Kreditor."Balance (LCY)"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,10,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,11,FORMAT(soll_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,12,FORMAT(haben_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo + 1;
        UNTIL Kreditor.NEXT=0;
      END;
      CloseExcel('Kreditorenliste','Kreditorenliste','R:\GDPDU');
      MESSAGE(' Das Holen der Kreditorenliste wurde ausgefhrt. ');
    END;

    PROCEDURE Kreditorposten@1140006();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'LFD_NR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'BUCHUNGSDATUM','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'BELEGDATUM','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'KREDITORENNR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'GEGENKONTONR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'SOLLBETRAG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'HABENBETRAG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'BELEGART','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'GEGENKONTOART','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'HERKUNFTSCODE','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'WŽHRUNGSCODE','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'URSP_SKONTO_M™GLICH','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'SKONTO_ERHALTEN','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'BETRAG_MW','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'SOLLBETRAG_MW','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'HABENBETRAG_MW','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'TRANSAKTIONSNR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'BESCHREIBUNG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'BELEGNR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'EXTERNE_BELEGNUMMER','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;

      //Kredpost.SETFILTER(Kredpost."Posting Date",'%1..%2',010709D,300610D);
      Kredpost.SETFILTER(Kredpost."Posting Date",'%1..%2',Datum_ab,Datum_bis);
      Kredpost.SETFILTER(Kredpost."Amount (LCY)",'<>%1',0);
      IF Kredpost.FIND('-') THEN BEGIN
        REPEAT
          Kredpost.CALCFIELDS("Amount (LCY)","Debit Amount (LCY)","Credit Amount (LCY)","Debit Amount","Credit Amount");
          EnterCell(RowNo,1,FORMAT(Kredpost."Entry No."),'',FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,FORMAT(Kredpost."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,3,FORMAT(Kredpost."Document Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,4,Kredpost."Vendor No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,Kredpost."Bal. Account No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT(Kredpost."Debit Amount"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,7,FORMAT(Kredpost."Credit Amount"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(Kredpost."Document Type"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(Kredpost."Bal. Account Type"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,Kredpost."Source Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,Kredpost."Currency Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(Kredpost."Original Pmt. Disc. Possible"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,13,FORMAT(Kredpost."Pmt. Disc. Rcd.(LCY)"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,14,FORMAT(Kredpost."Amount (LCY)"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,15,FORMAT(Kredpost."Debit Amount (LCY)"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,16,FORMAT(Kredpost."Credit Amount (LCY)"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,17,FORMAT(Kredpost."Transaction No."),'',FALSE,FALSE,FALSE,'#########',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,18,Kredpost.Description,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,19,Kredpost."Document No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,20,Kredpost."External Document No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo + 1;
        UNTIL Kredpost.NEXT=0;
      END;
      RowNo := RowNo + 1;
      CloseExcel('Kreditorposten','Kreditorposten','R:\GDPDU');
      MESSAGE(' Das Holen der Kreditorposten wurde ausgefhrt. ');
    END;

    PROCEDURE Debitorkonten@1140007();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'NR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'NAME','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'STRASSE','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'LAND','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'PLZ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'ORT','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'USTID','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'BEWEGUNG MW','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'SALDO BIS DATUM','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'SALDO (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'SOLL SALDO (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'HABEN SALDO (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;

      Debitor.RESET;
      Debitor.CALCFIELDS(Debitor."Balance (LCY)");
      Debitor.SETFILTER(Debitor."No.",'%1..%2','100000','999999');
      IF Debitor.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=0;
          soll_sum :=0;
          haben_sum :=0;
          Debpost.RESET;
          Debpost.SETFILTER(Debpost."Customer No.",'%1',Debitor."No.");
      //  Debpost.SETFILTER(Debpost."Posting Date",'%1..%2',300608D,300610D);
          Debpost.SETFILTER(Debpost."Posting Date",'%1..%2',Datum_ab,Datum_bis);
          IF Debpost.FIND('-') THEN BEGIN
            REPEAT
              Debpost.CALCFIELDS("Amount (LCY)","Debit Amount (LCY)","Credit Amount (LCY)");
              saldo_sum:=saldo_sum + Debpost."Amount (LCY)";
              soll_sum :=soll_sum + Debpost."Debit Amount (LCY)";
              haben_sum :=haben_sum + Debpost."Credit Amount (LCY)";
            UNTIL Debpost.NEXT=0;
          END;
          EnterCell(RowNo,1,Debitor."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,Debitor.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,Debitor.Address,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,Debitor."Country/Region Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,Debitor."Post Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,Debitor.City,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,Debitor."VAT Registration No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          Debitor.CALCFIELDS("Net Change (LCY)","Balance (LCY)");
          EnterCell(RowNo,8,FORMAT(Debitor."Net Change (LCY)"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,9,FORMAT(Debitor."Balance (LCY)"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,10,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,11,FORMAT(soll_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,12,FORMAT(haben_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo + 1;
        UNTIL Debitor.NEXT=0;
      END;
      RowNo := RowNo + 1;
      CloseExcel('Debitorenliste','Debitorenliste','R:\GDPDU');
      MESSAGE(' Das Holen der Debitorenliste wurde ausgefhrt. ');
    END;

    PROCEDURE Debitorposten@1140008();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'LFD_NR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'BUCHUNGSDATUM','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'BELEGDATUM','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'DEBITORENNR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'GEGENKONTONR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'SOLLBETRAG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'HABENBETRAG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'BELEGART','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'GEGENKONTOART','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'HERKUNFTSCODE','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'WŽHRUNGSCODE','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'URSP_SKONTO_M™GLICH','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'SKONTO_ERHALTEN','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'BETRAG_MW','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'SOLLBETRAG_MW','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'HABENBETRAG_MW','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'TRANSAKTIONSNR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'BESCHREIBUNG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'BELEGNR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'EXTERNE_BELEGNUMMER','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;

      //Debpost.SETFILTER(Debpost."Posting Date",'%1..%2',010709D,300610D);
      Debpost.SETFILTER(Debpost."Posting Date",'%1..%2',Datum_ab,Datum_bis);
      Debpost.SETFILTER(Debpost."Amount (LCY)",'<>%1',0);
      IF Debpost.FIND('-') THEN BEGIN
        REPEAT
          Debpost.CALCFIELDS("Amount (LCY)","Debit Amount (LCY)","Credit Amount (LCY)","Debit Amount","Credit Amount");
          EnterCell(RowNo,1,FORMAT(Debpost."Entry No."),'',FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,FORMAT(Debpost."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,3,FORMAT(Debpost."Document Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,4,Debpost."Customer No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,Debpost."Bal. Account No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT(Debpost."Debit Amount"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,7,FORMAT(Debpost."Credit Amount"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(Debpost."Document Type"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(Debpost."Bal. Account Type"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,Debpost."Source Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,Debpost."Currency Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(Debpost."Original Pmt. Disc. Possible"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,13,FORMAT(Debpost."Pmt. Disc. Given (LCY)"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,14,FORMAT(Debpost."Amount (LCY)"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,15,FORMAT(Debpost."Debit Amount (LCY)"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,16,FORMAT(Debpost."Credit Amount (LCY)"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,17,FORMAT(Debpost."Transaction No."),'',FALSE,FALSE,FALSE,'#########',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,18,Debpost.Description,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,19,Debpost."Document No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,20,Debpost."External Document No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo + 1;
        UNTIL Debpost.NEXT=0;
      END;
      RowNo := RowNo + 1;
      CloseExcel('Debitorposten','Debitorposten','R:\GDPDU');
      MESSAGE(' Das Holen der Debitorposten wurde ausgefhrt. ');
    END;

    PROCEDURE Sachkonten@1140009();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'NR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'NAME','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'GuV/Bilanz','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'KontoArt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Bewegung MW','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Saldo bis Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Saldo (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'SOLL Saldo (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'HABEN Saldo (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      Sachkont.RESET;
      Sachkont.SETFILTER(Sachkont."No.",'%1..%2','0001','9999');
      IF Sachkont.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=0;
          soll_sum :=0;
          haben_sum :=0;
          Sachpost.RESET;
          Sachpost.SETFILTER(Sachpost."G/L Account No.",'%1',Sachkont."No.");
          //  Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',300608D,300609D);
          Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',Datum_ab,Datum_bis);
          //  sachpost.SETFILTER(sachpost."sachkontonr.",'%1','550000');
          IF Sachpost.FIND('-') THEN BEGIN
            REPEAT
              saldo_sum:=saldo_sum + Sachpost.Amount;
              soll_sum :=soll_sum + Sachpost."Debit Amount";
              haben_sum :=haben_sum + Sachpost."Credit Amount";
            UNTIL Sachpost.NEXT=0;
          END;
          EnterCell(RowNo,1,Sachkont."No.",'',FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,Sachkont.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(Sachkont."Income/Balance"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,4,FORMAT(Sachkont."Account Type"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          Sachkont.CALCFIELDS("Add.-Currency Balance at Date","Additional-Currency Net Change");
          EnterCell(RowNo,5,FORMAT(Sachkont."Additional-Currency Net Change"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,6,FORMAT(Sachkont."Add.-Currency Balance at Date"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,7,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(soll_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,9,FORMAT(haben_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo + 1;
        UNTIL Sachkont.NEXT=0;
      END;
      RowNo := RowNo + 1;
      CloseExcel('Sachkonten','Sachkonten','R:\GDPDU');
      MESSAGE(' Das Holen der Sachkonten wurde ausgefhrt. ');
    END;

    PROCEDURE Sachposten@1140010();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'LFD_NR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'BUCHUNGSDATUM','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'BELEGDATUM','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'SACHKONTONR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'GEGENKONTONR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'SOLLBETRAG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'HABENBETRAG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'MWST_GESCHŽFTSBUCHUNGSGRUPPE','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'MWST_PRODUKTBUCHUNGSGRUPPE','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'MWST_BETRAG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'BELEGART','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'BUCHUNGSART','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'GEGENKONTOART','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'HERKUNFTSNR_','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'HERKUNFTSART','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'TRANSAKTIONSNR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'BESCHREIBUNG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'BELEGNR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'EXTERNE_BELEGNUMMER','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      Sachpost.RESET;
      //Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010710D,300610D);
      Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',Datum_ab,Datum_bis);
      IF Sachpost.FIND('-') THEN BEGIN
        REPEAT
          EnterCell(RowNo,1,FORMAT(Sachpost."Entry No."),'',FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,FORMAT(Sachpost."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          IF Sachpost."Document Date"<>0D THEN EnterCell(RowNo,3,FORMAT(Sachpost."Document Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,4,FORMAT(Sachpost."G/L Account No."),'',FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,5,FORMAT(Sachpost."Bal. Account No."),'',FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,6,FORMAT(Sachpost."Debit Amount"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,7,FORMAT(Sachpost."Credit Amount"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(Sachpost."VAT Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(Sachpost."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,FORMAT(Sachpost."VAT Amount"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,11,FORMAT(Sachpost."Document Type"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(Sachpost."Gen. Posting Type"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,FORMAT(Sachpost."Bal. Account Type"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(Sachpost."Source No."),'',FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,15,FORMAT(Sachpost."Source Type"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,16,FORMAT(Sachpost."Transaction No."),'',FALSE,FALSE,FALSE,'#######',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,17,Sachpost.Description,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,18,Sachpost."Document No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,19,Sachpost."External Document No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo + 1;
          j:=INCSTR(j);
        UNTIL Sachpost.NEXT=0;
      END;
      RowNo := RowNo + 1;
      CloseExcel('Sachposten','Sachposten','R:\GDPDU');
      MESSAGE(' Das Holen der Sachposten wurde ausgefhrt. ');
    END;

    PROCEDURE Sachkonten_E_Bilanz@1140001();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'NR','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'NAME','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Saldo','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      Sachkont.RESET;
      IF alle_sachkonten=TRUE THEN BEGIN
      Sachkont.SETFILTER(Sachkont."No.",'%1..%2','0001','9999');
      END ELSE BEGIN
      Sachkont.SETFILTER(Sachkont."No.",'%1..%2',sachkon_von,sachkon_bis);
      END;
      IF Sachkont.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=0;
          Sachpost.RESET;
          Sachpost.SETFILTER(Sachpost."G/L Account No.",'%1',Sachkont."No.");
          //  Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',300608D,300609D);
          //  Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,300612D);
          Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',Datum_ab,Datum_bis);
          IF Sachpost.FIND('-') THEN BEGIN
            REPEAT
              saldo_sum:=saldo_sum + Sachpost.Amount;
            UNTIL Sachpost.NEXT=0;
          END;
          IF saldo_sum <>0 THEN BEGIN
            EnterCell(RowNo,1,Sachkont."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Sachkont.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo + 1;
          END;
        UNTIL Sachkont.NEXT=0;
      END;
      CloseExcel('Sachkonten_E_Bilanz','Sachkonten_E_Bilanz','R:\GDPDU');
      MESSAGE(' Das Holen der Sachkonten_E_Bilanz wurde ausgefhrt. ');
    END;

    PROCEDURE Summenliste@1140000();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Sachkto','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Beschreibung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Saldo'+FORMAT(v_endedat_vj),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Soll','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Haben','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Saldo'+FORMAT(v_endedat_gj),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'positve Zahl =Sollsaldo','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,7,'negative Zahl=Habensaldo','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      Sachkont.RESET;
      Sachkont.SETFILTER(Sachkont."No.",'%1..%2','0001','9999');
      IF Sachkont.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=0;
          saldo_sum_vj:=0;
          soll_sum:=0;
          haben_sum:=0;
          //  Vorjahr
          Sachpost.RESET;
          Sachpost.SETFILTER(Sachpost."G/L Account No.",'%1',Sachkont."No.");
          Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,v_endedat_vj);
          //  Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,300612D);
          //  Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,311214D);
          IF Sachpost.FIND('-') THEN BEGIN
            REPEAT
              saldo_sum_vj:=saldo_sum_vj + Sachpost.Amount;
            UNTIL Sachpost.NEXT=0;
          END;

          //  Soll + Haben Spalten
          Sachpost.RESET;
          Sachpost.SETFILTER(Sachpost."G/L Account No.",'%1',Sachkont."No.");
          Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',v_startdat_gj,v_endedat_gj);
          //  Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010712D,300613D);
          //  Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2|%3..%4',010115D,300615D,010715D,311215D);
          IF Sachpost.FIND('-') THEN BEGIN
            REPEAT
              soll_sum:=soll_sum + Sachpost."Debit Amount";
              haben_sum:=haben_sum + Sachpost."Credit Amount";
            UNTIL Sachpost.NEXT=0;
          END;

          //  Saldo lfd Jahr
          Sachpost.RESET;
          Sachpost.SETFILTER(Sachpost."G/L Account No.",'%1',Sachkont."No.");
          IF Sachkont."Income/Balance"=Sachkont."Income/Balance"::"Income Statement" THEN BEGIN
            Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,v_endedat_gj);
            //    Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,300613D);
            //    Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2|%3..%4',010115D,300615D,010715D,311215D);
            IF Sachpost.FIND('-') THEN BEGIN
              REPEAT
                saldo_sum:=saldo_sum + Sachpost.Amount;
              UNTIL Sachpost.NEXT=0;
            END;
            saldo_sum_vj:=0;
          END ELSE BEGIN
            Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,v_endedat_gj);
            //    Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,300613D);
            //    Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2|%3..%4',010115D,300615D,010715D,311215D);
            IF Sachpost.FIND('-') THEN BEGIN
              REPEAT
                saldo_sum:=saldo_sum + Sachpost.Amount;
              UNTIL Sachpost.NEXT=0;
            END;
          END;
          IF ((saldo_sum=0) AND (soll_sum=0) AND (haben_sum=0) AND (saldo_sum_vj=0)) THEN BEGIN
          END ELSE BEGIN
            EnterCell(RowNo,1,FORMAT(Sachkont."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Sachkont.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(saldo_sum_vj),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(soll_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(haben_sum*(-1)),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo + 1;
          END;
        UNTIL Sachkont.NEXT=0;
      END;
      CloseExcel('Summenliste','Summenliste','R:\GDPDU');
      MESSAGE(' Das Holen der Summenliste wurde ausgefhrt. ');
    END;

    PROCEDURE Quoteberprfung@1140004();
    BEGIN
      //DATAPORT.RUNMODAL(Number [, ReqWindow] [, Record])
      // ***************************************************************************************
      // hier w/Fehler auskommentiert, wieder einsetzen
      //DATAPORT.RUNMODAL(50033);
    END;

    PROCEDURE Konsignationslager@1140013();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Konsignations-Lagerauswertung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,1,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Pos-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Lief-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Lief-Pos','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Lief-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Lief-Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Datecode','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Datecode Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Rech-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Rech-Pos','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Rech-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Rech-Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'KZ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'Lief Menge gesamt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'Datecode Menge gesamt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'Diff Lief-Datecode','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'Rech Menge gesamt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'noch nicht fakturiert( LB KONSI beim Kunden)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      tab_ab.RESET;
      tab_ab.SETFILTER(tab_ab."Location Code",'%1','KONSI');
      tab_ab.SETFILTER(tab_ab.Quantity,'>%1',0);
      tab_ab.SETFILTER(tab_ab.Type,'%1',tab_ab.Type::Item);
      tab_ab.SETFILTER(tab_ab."Document Type",'%1',tab_ab."Document Type"::Order);
      IF tab_ab.FIND('-') THEN BEGIN
        REPEAT
          vklz.RESET;
          vklz.SETFILTER(vklz."Order No.",'%1',tab_ab."Document No.");
          vklz.SETFILTER(vklz."Order Line No.",'%1',tab_ab."Line No.");
          vklz.SETFILTER(vklz.Quantity,'>%1',0);
          IF vklz.FIND('-') THEN BEGIN
            v_LS_Menge:=0;
            v_RE_Menge:=0;
            v_DC_Menge:=0;
            REPEAT
              RowNo := RowNo + 1;
              //        EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              //        EnterCell(RowNo,1,FORMAT(tab_ab."Document No."),TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(vkk.TABLENAME,1,42,vkk."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,1,FORMAT(tab_ab."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(tab_ab."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,tab_ab."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
              //        EnterCell(RowNo,1,deb."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,deb."No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              //        EnterCell(RowNo,6,FORMAT(vklz."Document No."),TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_ab.TABLENAME,1,130,vklz."Document No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(vklz."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,FORMAT(vklz."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(vklz."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,9,FORMAT(vklz.Quantity),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,16,'LS','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              v_LS_Menge:=v_LS_Menge+vklz.Quantity;
              v_z„hl:=0;
              Artikelposten.RESET;
              Artikelposten.SETFILTER(Artikelposten."Document No.",'%1',vklz."Document No.");
              Artikelposten.SETFILTER(Artikelposten."Document Line No.",'%1',vklz."Line No.");
              IF Artikelposten.FIND('-') THEN BEGIN
                REPEAT
                  v_z„hl:=v_z„hl+1;
                  IF v_z„hl>1 THEN BEGIN
                    RowNo := RowNo + 1;
                    EnterCell(RowNo,1,FORMAT(tab_ab."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,2,FORMAT(tab_ab."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,3,tab_ab."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    EnterCell(RowNo,4,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
                    EnterCell(RowNo,5,FORMAT(tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
                    EnterCell(RowNo,16,'LS','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  END;
                  EnterCell(RowNo,10,FORMAT(Artikelposten."Lot No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,11,FORMAT(Artikelposten.Quantity),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
                  v_DC_Menge:=v_DC_Menge+Artikelposten.Quantity;
                UNTIL Artikelposten.NEXT=0;
              END;
            UNTIL vklz.NEXT=0;
          END;
          vkrz.RESET;
          vkrz.SETFILTER(vkrz."Order No.",'%1',tab_ab."Document No.");
          vkrz.SETFILTER(vkrz."Order Line No.",'%1',tab_ab."Line No.");
          vkrz.SETFILTER(vkrz.Quantity,'>%1',0);
          IF vkrz.FIND('-') THEN BEGIN
            v_meng_fakt:=0;
            REPEAT
              RowNo := RowNo + 1;
              EnterCell(RowNo,1,FORMAT(tab_ab."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(tab_ab."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,tab_ab."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(vkrz."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //         EnterCell(RowNo,12,FORMAT(vkrz."Document No."),TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_ab.TABLENAME,1,132,vkrz."Document No."),';',','),FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(vkrz."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,FORMAT(vkrz."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,15,FORMAT(vkrz.Quantity),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,16,'RE','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              v_RE_Menge:=v_RE_Menge+vkrz.Quantity;
            UNTIL vkrz.NEXT=0;
            EnterCell(RowNo,17,FORMAT(v_LS_Menge),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,18,FORMAT(v_DC_Menge),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,19,FORMAT(v_LS_Menge+v_DC_Menge),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(v_RE_Menge),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(v_LS_Menge-v_RE_Menge),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
          END;
          RowNo := RowNo + 1;
        UNTIL tab_ab.NEXT=0;
      END;
      CloseExcel('Konsignationslager','Kosignationslager','R:\GDPDU');
      MESSAGE(' Das Holen des Konsignationslager wurde ausgefhrt. ');
    END;

    PROCEDURE WKV@1140020();
    BEGIN
      v_wkv_netto_gesamt:=0;
      v_wkv_brutto_gesamt:=0;
      v_wkv_saldo_unversich:=0;
      v_wkv_saldo_gesamt:=0;
      v_ben:=0;
      v_ben_in:=0;
      v_ben_aus:=0;
      v_unb:=0;
      v_unb_in:=0;
      v_unb_aus:=0;
      v_unv:=0;
      v_unv_in:=0;
      v_unv_aus:=0;

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Fr den Zeitraum vom','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT(Datum_ab),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,4,'bis','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

      RowNo := 6;
      EnterCell(RowNo,1,'Deb.-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Debitor','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Re.-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Re.-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'W„hrung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'W„_Betrag','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Betrag MW Netto','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Betrag MW Brutto','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Status','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'SVS-Verzicht','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Rechnungsland','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 7;
      Debpost.RESET;
      Debpost.SETFILTER(Debpost."Posting Date",'%1..%2',Datum_ab,Datum_bis);
      Debpost.SETFILTER(Debpost."Document Type",'%1|%2',Debpost."Document Type"::Invoice,Debpost."Document Type"::"Credit Memo");
      Debpost.SETFILTER(Debpost."Amount (LCY)",'<>%1',0);
      IF Debpost.FIND('-') THEN BEGIN
        REPEAT
          Debitor.RESET;
          Debitor.SETFILTER(Debitor."No.",'%1',Debpost."Customer No.");
          IF Debitor.FINDFIRST THEN BEGIN
            EnterCell(RowNo,1,FORMAT(Debitor."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Debitor.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(Debpost."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,4,Debpost."Document No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,Debpost."Currency Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            Debpost.CALCFIELDS(Debpost."Amount (LCY)",Debpost.Amount);
            EnterCell(RowNo,6,FORMAT(Debpost.Amount),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(Debpost."Sales (LCY)"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(Debpost."Amount (LCY)"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,Debitor.Warenkreditversicherung,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            v_wkv_brutto_gesamt:=v_wkv_brutto_gesamt+ Debpost."Amount (LCY)";
            v_wkv_netto_gesamt:=v_wkv_netto_gesamt+ Debpost."Sales (LCY)";
            IF Debitor.Warenkreditversicherung='UNVERSICHERT' THEN BEGIN
              v_wkv_saldo_unversich:=v_wkv_saldo_unversich+Debpost."Sales (LCY)";
              v_unv:=v_unv+Debpost."Sales (LCY)";
              IF Debitor."Country/Region Code"='DE' THEN v_unv_in:=v_unv_in+Debpost."Sales (LCY)";
              IF Debitor."Country/Region Code"<>'DE' THEN v_unv_aus:=v_unv_aus+Debpost."Sales (LCY)";
            END;
            IF ((Debitor.Warenkreditversicherung='GEMELDET') OR (Debitor.Warenkreditversicherung='ECL-LIMIT') OR (Debitor.Warenkreditversicherung='@-RATING')) THEN BEGIN
              v_ben:=v_ben+Debpost."Sales (LCY)";
              IF Debitor."Country/Region Code"='DE' THEN v_ben_in:=v_ben_in+Debpost."Sales (LCY)";
              IF Debitor."Country/Region Code"<>'DE' THEN v_ben_aus:=v_ben_aus+Debpost."Sales (LCY)";
            END;
            IF Debitor.Warenkreditversicherung='' THEN BEGIN
              v_unb:=v_unb+Debpost."Sales (LCY)";
              IF Debitor."Country/Region Code"='DE' THEN v_unb_in:=v_unb_in+Debpost."Sales (LCY)";
              IF Debitor."Country/Region Code"<>'DE' THEN v_unb_aus:=v_unb_aus+Debpost."Sales (LCY)";
            END;
            EnterCell(RowNo,10,FORMAT(Debitor."SVS Verzichtskunde"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          vkrk.RESET;
          vkrk.SETFILTER(vkrk."No.",'%1',Debpost."Document No.");
          IF vkrk.FINDFIRST THEN BEGIN
            EnterCell(RowNo,11,FORMAT(vkrk."Bill-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          vkgk.RESET;
          vkgk.SETFILTER(vkgk."No.",'%1',Debpost."Document No.");
          IF vkgk.FINDFIRST THEN BEGIN
            EnterCell(RowNo,11,FORMAT(vkgk."Bill-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          RowNo := RowNo + 1;
        UNTIL Debpost.NEXT=0;
      END;
      EnterCell(RowNo,7,FORMAT(v_wkv_netto_gesamt),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,8,FORMAT(v_wkv_brutto_gesamt),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := RowNo + 1;
      RowNo := RowNo + 1;
      RowNo := RowNo + 1;
      RowNo := RowNo + 1;
      Sachkont.RESET;
      Sachkont.SETFILTER(Sachkont."No.",'%1..%2|%3..%4','4021','4439','4441','4599');
      IF Sachkont.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=0;
          soll_sum :=0;
          haben_sum :=0;
          Sachpost.RESET;
          Sachpost.SETFILTER(Sachpost."G/L Account No.",'%1',Sachkont."No.");
          Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',Datum_ab,Datum_bis);
          IF Sachpost.FIND('-') THEN BEGIN
            REPEAT
              saldo_sum:=saldo_sum + Sachpost.Amount;
              v_wkv_saldo_gesamt:=v_wkv_saldo_gesamt+ Sachpost.Amount;
            UNTIL Sachpost.NEXT=0;
          END;
          EnterCell(RowNo,1,FORMAT(Sachkont."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,Sachkont.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo + 1;
        UNTIL Sachkont.NEXT=0;
      END;
      EnterCell(RowNo,7,FORMAT(v_wkv_saldo_gesamt),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := 1;
      EnterCell(RowNo,6,'Summe alle Ums„tze:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,FORMAT(v_wkv_netto_gesamt),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(RowNo,11,'Benannte Gesamt:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,FORMAT(v_ben),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,'Unbenannte Gesamt:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,FORMAT(v_unb),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,'Unversicherte Gesamt:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,FORMAT(v_unv),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := 2;
      EnterCell(RowNo,6,'Summe der Unversicherten:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,FORMAT(v_wkv_saldo_unversich),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(RowNo,11,'Benannte Inland:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,FORMAT(v_ben_in),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,'Unbenannte Inland:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,FORMAT(v_unb_in),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,'Unversicherte Inland:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,FORMAT(v_unv_in),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := 3;
      EnterCell(RowNo,6,'zu meldender Betrag an die WKV:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,FORMAT(v_wkv_netto_gesamt-v_wkv_saldo_unversich),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(RowNo,11,'Benannte Ausland:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,FORMAT(v_ben_aus),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,13,'Unbenannte Ausland:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,FORMAT(v_unb_aus),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(RowNo,15,'Unversicherte Ausland:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,FORMAT(v_unv_aus),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      RowNo := 4;
      EnterCell(RowNo,1,'Es wurde folgende Differenz zwischen Debitorposten und Erl”skonten festgestellt:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,FORMAT(v_wkv_netto_gesamt+v_wkv_saldo_gesamt),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel('WKV Ums„tze','WKV Ums„tze','R:\GDPDU');
      MESSAGE(' Das Holen des WKV Ums„tze wurde ausgefhrt. ');
    END;

    PROCEDURE Support_Stunden@1140023();
    BEGIN

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Gruppen-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Kontingent Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'offenes Kontingent','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'offenes Kontingent','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Std.-Satz','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Rest Konting Wert','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,7,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Zeilen-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Auftrags-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Menge Rest','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Bearbeiter','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Zeitraum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Aktion','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Re-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'Re-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      supp.RESET;
      supp.CALCFIELDS(supp."Gesamt Kontingent",supp."Offenes Kontingent");
      supp.SETFILTER(supp."Nr.",'<>%1','1');
      supp.SETFILTER(supp."Offenes Kontingent",'<>%1',0 );  // Kontingente einschr„nken auf Rest- oder Minuskontingente
      IF supp.FIND('-') THEN BEGIN
        REPEAT
      // šberprfung verschiedene Stundens„tze
          v_anz_h„kchen_stunden:=0;
          v_stundensatz:=0;
      // Ende 1. Einschub šberprfung verschiedene Stundens„tze
          v_meng_rest:=0;
          v_supp_wert:=0;
          RowNo := RowNo + 1;
          supp.CALCFIELDS(supp."Gesamt Kontingent",supp."Offenes Kontingent");
          EnterCell(RowNo,1,FORMAT(supp."Nr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(supp.Kunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(supp."Gesamt Kontingent"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(supp."Offenes Kontingent"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // EnterCell(RowNo,7,'BELEG','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          supp_kon.RESET;
          supp_kon.SETFILTER(supp_kon."Gruppen-Nr.",'%1',supp."Nr.");
          supp_kon.SETFILTER(supp_kon.Erledigt,'%1',FALSE);
          IF supp_kon.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
      // šberprfung verschiedene Stundens„tze
              IF v_stundensatz=0 THEN BEGIN
                v_stundensatz:=supp_kon.Stundensatz;
              END ELSE BEGIN
                IF supp_kon.Stundensatz<>0 THEN BEGIN
                  IF v_stundensatz<>supp_kon.Stundensatz THEN BEGIN
                    EnterCell(RowNo,20,FORMAT('verschied.Stundens„tze'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  END;
                END;
              END;
      // Ende 2. Einschub šberprfung verschiedene Stundens„tze
      // Ende šberprfung verschiedene Stundens„tze
              v_meng_rest:=v_meng_rest+supp_kon.Menge;
              EnterCell(RowNo,8,FORMAT(supp_kon."Zeilennr."),'',FALSE,FALSE,FALSE,'########',TempExcelBuffer."Cell Type"::Number);
              IF supp_kon.Datum <> 0D THEN EnterCell(RowNo,9,FORMAT(supp_kon.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,10,FORMAT(supp_kon."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,11,FORMAT(supp_kon.Menge),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(v_meng_rest),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(supp_kon."Durchgefhrt von"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,FORMAT(supp_kon.Zeitraum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,15,FORMAT(supp_kon.Aktion),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF supp_kon.Rechnungsdatum <> 0D THEN BEGIN
                EnterCell(RowNo,16,FORMAT(supp_kon.Rechnungsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,17,FORMAT(supp_kon."Rechnungsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,18,FORMAT(supp_kon.Stundensatz),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                v_supp_wert:=supp_kon.Stundensatz;
              END;
            UNTIL supp_kon.NEXT=0;
          END;
          RowNo := RowNo + 1;
          IF supp."Offenes Kontingent"=0 THEN BEGIN
            EnterCell(RowNo,4,'Bewertung','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(supp."Offenes Kontingent"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(v_supp_wert),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(v_supp_wert*v_meng_rest),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,12,FORMAT(v_meng_rest),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
          END ELSE BEGIN
            IF supp."Offenes Kontingent"<0 THEN BEGIN
              EnterCell(RowNo,4,'Bewertung','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(supp."Offenes Kontingent"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,6,FORMAT(v_supp_wert),'',FALSE,FALSE,FALSE,'[red]##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(v_supp_wert*v_meng_rest),'',FALSE,FALSE,FALSE,'[red]##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(v_meng_rest),'',FALSE,FALSE,FALSE,'[red]##,##0.00',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              EnterCell(RowNo,4,'Bewertung','',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(supp."Offenes Kontingent"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
              IF v_supp_wert=0 THEN BEGIN
                EnterCell(RowNo,6,FORMAT(v_supp_wert),'',FALSE,FALSE,FALSE,'[red]##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,7,FORMAT(v_supp_wert*v_meng_rest),'',FALSE,FALSE,FALSE,'[red]##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,6,FORMAT(v_supp_wert),'',FALSE,FALSE,FALSE,'[blue]##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,7,FORMAT(v_supp_wert*v_meng_rest),'',FALSE,FALSE,FALSE,'[blue]##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END;
              EnterCell(RowNo,12,FORMAT(v_meng_rest),'',FALSE,FALSE,FALSE,'[blue]##,##0.00',TempExcelBuffer."Cell Type"::Number);
            END;
          END;
          RowNo := RowNo + 1;
        UNTIL supp.NEXT=0;
      END;

      {

      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Gruppen-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Zeilen-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Auftrags-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Menge Rest','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Bearbeiter','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Zeitraum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Aktion','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Re-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Re-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Std.-Satz','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Bewertung =WENN(B4="Bewertung";N4;0)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      v_meng_rest:=0;
      v_meng_rest1:=0;
      v_supp_wert:=0;
      v_neu_gruppe:='1';
      supp_kon.RESET;
      supp_kon.SETFILTER(supp_kon.Art,'%1|%2',supp_kon.Art::"Externe Leistungen",supp_kon.Art::Support);
      supp_kon.SETFILTER(supp_kon.Erledigt,'%1',FALSE);
      supp_kon.SETFILTER(supp_kon.Menge,'>%1',0 );
      IF supp_kon.FIND('-') THEN BEGIN
        v_meng_rest:=0;
        v_supp_wert:=0;
      //  RowNo := RowNo + 1;
        REPEAT
          RowNo := RowNo + 1;
          v_meng_rest:=0;
          v_meng_rest:=v_meng_rest+supp_kon.Menge;
          EnterCell(RowNo,1,FORMAT(supp_kon."Gruppen-Nr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,'BELEG','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(supp_kon."Zeilennr."),'',FALSE,FALSE,FALSE,'########',TempExcelBuffer."Cell Type"::Number);
          IF supp_kon.Datum <> 0D THEN EnterCell(RowNo,4,FORMAT(supp_kon.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          Debitor.RESET;
          Debitor.SETFILTER(Debitor."No.",'%1',supp_kon."Rech.Debitor");
          IF Debitor.FIND('-') THEN BEGIN
            EnterCell(RowNo,5,Debitor.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          EnterCell(RowNo,7,FORMAT(supp_kon.Menge),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(v_meng_rest),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,9,FORMAT(supp_kon."Durchgefhrt von"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,FORMAT(supp_kon.Zeitraum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(supp_kon.Aktion),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF supp_kon.Rechnungsdatum <> 0D THEN BEGIN
            EnterCell(RowNo,12,FORMAT(supp_kon.Rechnungsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,13,FORMAT(supp_kon."Rechnungsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,FORMAT(supp_kon.Stundensatz),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          v_supp_wert:=supp_kon.Stundensatz;

      }
      {
          supp_kon1.RESET;
          supp_kon1.SETFILTER(supp_kon1."Gruppen-Nr.",'%1',supp_kon."Gruppen-Nr.");
          supp_kon1.SETFILTER(supp_kon1.Art,'%1|%2',supp_kon.Art::"Externe Leistungen",supp_kon.Art::Support);
          supp_kon1.SETFILTER(supp_kon1.Erledigt,'%1',FALSE);
          supp_kon1.SETFILTER(supp_kon1.Menge,'<%1',0 );
          IF supp_kon1.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo + 1;
              v_meng_rest:=v_meng_rest+supp_kon1.Menge;
              EnterCell(RowNo,1,FORMAT(supp_kon1."Gruppen-Nr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(supp_kon.Art),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(supp_kon1."Zeilennr."),'',FALSE,FALSE,FALSE,'########',TempExcelBuffer."Cell Type"::Number);
              IF supp_kon1.Datum <> 0D THEN EnterCell(RowNo,4,FORMAT(supp_kon1.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              Debitor.RESET;
              Debitor.SETFILTER(Debitor."No.",'%1',supp_kon1."Rech.Debitor");
              IF Debitor.FIND('-') THEN BEGIN
                EnterCell(RowNo,5,Debitor.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,7,FORMAT(supp_kon1.Menge),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,8,FORMAT(v_meng_rest),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT(supp_kon1."Durchgefhrt von"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,10,FORMAT(supp_kon1.Zeitraum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,FORMAT(supp_kon1.Aktion),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF supp_kon.Rechnungsdatum <> 0D THEN BEGIN
                EnterCell(RowNo,12,FORMAT(supp_kon1.Rechnungsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,13,FORMAT(supp_kon1."Rechnungsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
       //         EnterCell(RowNo,14,FORMAT(supp_kon1.Stundensatz),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
            UNTIL supp_kon1.NEXT=0;
      }
      //      RowNo := RowNo + 1;
      {
            EnterCell(RowNo,2,'Bewertung','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,7,FORMAT(v_meng_rest),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(v_supp_wert),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(v_supp_wert*v_meng_rest),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo + 1;
          END ELSE BEGIN
            RowNo := RowNo + 1;
            EnterCell(RowNo,2,'Bewertung','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,7,FORMAT(v_meng_rest),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(v_supp_wert),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,15,FORMAT(v_supp_wert*v_meng_rest),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo + 1;
          END;


        UNTIL supp_kon.NEXT=0;
        RowNo := RowNo + 2;
      END;

      }
      {
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Gruppen-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Zeilen-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Auftrags-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Menge Rest','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Bearbeiter','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Zeitraum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Aktion','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Re-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Re-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Std.-Satz','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Bewertung =WENN(B4="Bewertung";N4;0)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      v_meng_rest:=0;
      v_meng_rest1:=0;
      v_supp_wert:=0;
      v_neu_gruppe:='1';
      supp_kon.RESET;
      supp_kon.SETFILTER(supp_kon."Gruppen-Nr.",'<>%1','1');
      supp_kon.SETFILTER(supp_kon.Erledigt,'%1',FALSE);
      supp_kon.SETFILTER(supp_kon.Art,'%1',supp_kon.Art::Support);
      IF supp_kon.FIND('-') THEN BEGIN
        REPEAT
          IF v_neu_gruppe<>supp_kon."Gruppen-Nr." THEN BEGIN           // neue Gruppe
            IF v_neu_gruppe <> '1' THEN BEGIN    //  Gesamt fr Gruppe
              EnterCell(RowNo,2,'Bewertung','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,15,FORMAT(v_supp_wert*v_meng_rest),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(v_meng_rest),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF ((v_supp_wert<0 ) AND (v_meng_rest<0 )) THEN BEGIN
                EnterCell(RowNo,9,'Kontingent im Minus!','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF (v_meng_rest<0 ) THEN EnterCell(RowNo,10,'FEHLER !!!!','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF (v_supp_wert<0 ) THEN EnterCell(RowNo,11,'FEHLER !!!!','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              v_neu_gruppe1:=supp_kon."Gruppen-Nr.";
              RowNo := RowNo + 1;
            END;

            v_meng_rest:=0;
            v_meng_rest1:=0;
            v_supp_wert:=0;
            RowNo := RowNo + 1;
            v_meng_rest:= v_meng_rest + supp_kon.Menge;
            EnterCell(RowNo,1,FORMAT(supp_kon."Gruppen-Nr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            v_neu_gruppe:=supp_kon."Gruppen-Nr.";
            IF supp_kon.Menge>0 THEN BEGIN
              EnterCell(RowNo,2,'BELEG','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END ELSE BEGIN
              EnterCell(RowNo,2,FORMAT(supp_kon.Art),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,3,FORMAT(supp_kon."Zeilennr."),'',FALSE,FALSE,FALSE,'########',TempExcelBuffer."Cell Type"::Number);
            IF supp_kon.Datum <> 0D THEN EnterCell(RowNo,4,FORMAT(supp_kon.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            Debitor.RESET;
            Debitor.SETFILTER(Debitor."No.",'%1',supp_kon."Rech.Debitor");
            IF Debitor.FIND('-') THEN BEGIN
              EnterCell(RowNo,5,Debitor.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,6,FORMAT(supp_kon."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,7,FORMAT(supp_kon.Menge),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(v_meng_rest),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(supp_kon."Durchgefhrt von"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,10,FORMAT(supp_kon.Zeitraum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,11,FORMAT(supp_kon.Aktion),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF supp_kon.Rechnungsdatum <> 0D THEN BEGIN
              EnterCell(RowNo,12,FORMAT(supp_kon.Rechnungsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,13,FORMAT(supp_kon."Rechnungsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,FORMAT(supp_kon.Stundensatz),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            IF supp_kon.Stundensatz>0 THEN v_supp_wert:=supp_kon.Stundensatz;
            v_neu_gruppe:=supp_kon."Gruppen-Nr.";
            v_meng_rest1:= v_meng_rest1 + supp_kon.Menge;
          END ELSE BEGIN
            v_meng_rest:= v_meng_rest + supp_kon.Menge;
            EnterCell(RowNo,1,FORMAT(supp_kon."Gruppen-Nr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF supp_kon.Menge>0 THEN BEGIN
              EnterCell(RowNo,2,'BELEG','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END ELSE BEGIN
              EnterCell(RowNo,2,FORMAT(supp_kon.Art),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,3,FORMAT(supp_kon."Zeilennr."),'',FALSE,FALSE,FALSE,'########',TempExcelBuffer."Cell Type"::Number);
            IF supp_kon.Datum <> 0D THEN EnterCell(RowNo,4,FORMAT(supp_kon.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      //      Debitor.RESET;
      //      Debitor.SETFILTER(Debitor."No.",'%1',supp_kon."Rech.Debitor");
      //      IF Debitor.FIND('-') THEN BEGIN
      //        EnterCell(RowNo,5,Debitor.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //      END;
            EnterCell(RowNo,6,FORMAT(supp_kon."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,7,FORMAT(supp_kon.Menge),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(v_meng_rest),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(supp_kon."Durchgefhrt von"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,10,FORMAT(supp_kon.Zeitraum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,11,FORMAT(supp_kon.Aktion),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF supp_kon.Rechnungsdatum <> 0D THEN BEGIN
              EnterCell(RowNo,12,FORMAT(supp_kon.Rechnungsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,13,FORMAT(supp_kon."Rechnungsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,14,FORMAT(supp_kon.Stundensatz),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            IF supp_kon.Stundensatz>0 THEN v_supp_wert:=supp_kon.Stundensatz;
            v_neu_gruppe:=supp_kon."Gruppen-Nr.";
            v_meng_rest1:= v_meng_rest1 + supp_kon.Menge;
          END;
          RowNo := RowNo + 1;

      {    IF supp_kon.NEXT=0 THEN BEGIN    //  Gesamt fr Gruppe
            EnterCell(RowNo,2,'Bewertung','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(v_supp_wert*v_meng_rest),'',FALSE,FALSE,FALSE,'##,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(v_meng_rest),'',FALSE,FALSE,FALSE,'##,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF ((v_supp_wert<0 ) AND (v_meng_rest<0 )) THEN BEGIN
              EnterCell(RowNo,9,'Kontingent im Minus!','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            IF (v_meng_rest<0 ) THEN EnterCell(RowNo,10,'FEHLER !!!!','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF (v_supp_wert<0 ) THEN EnterCell(RowNo,11,'FEHLER !!!!','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //      v_neu_gruppe1:=supp_kon."Gruppen-Nr.";
      //      RowNo := RowNo + 1;
          END; }
        UNTIL supp_kon.NEXT=0;
      END;

      }
      CloseExcel('Support Kontingente','Support Kontingente','F:\Daten Neu\USER\UWE\Navision_2016\SUPP Kontingente');
      MESSAGE(' Das Holen der Support Kontingente wurde ausgefhrt. ');
    END;

    PROCEDURE Support_prfen@1140024();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Rechnungen und Gutschriften von Tagess„tzen  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Eingetragen in Tab. Support Kontingente','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,1,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Belegnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Zeilennr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Belegdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Debitornr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Ort','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Artikelnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'VK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'W„hrung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Betrag ohne MWSt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Erledigt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'eingetragene RE_Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Stundensatz','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'RE_Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      belege.RESET;
      belege.SETFILTER(belege.Belegart,'%1|%2',belege.Belegart::Invoice,belege.Belegart::"Credit Memo");
      belege.SETFILTER(belege.Menge,'>%1',0);
      belege.SETFILTER(belege."Artikelnr.",'%1|%2','TAGESSATZ','STUNDENSATZ');
      belege.SETFILTER(belege.Belegdatum,'>=%1',Datum_ab_supp);
      IF belege.FIND('-') THEN BEGIN
        REPEAT
          supp_kon.RESET;
          supp_kon.SETFILTER(supp_kon."Rechnungsnr.",'%1',belege."Belegnr.");
          IF supp_kon.FINDFIRST THEN BEGIN
            IF belege."Auftragsnr."='' THEN BEGIN
            END ELSE BEGIN
              EnterCell(RowNo,1,FORMAT(belege."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,2,FORMAT(belege."Belegnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(belege."Zeilennr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,FORMAT(belege.Belegdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,5,FORMAT(belege."Debitornr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            Debitor.RESET;
            Debitor.SETFILTER(Debitor."No.",'%1',belege."Debitornr.");
            IF Debitor.FINDFIRST THEN BEGIN
              EnterCell(RowNo,6,FORMAT(Debitor.Name),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,FORMAT(Debitor."Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(Debitor.City),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,9,FORMAT(belege."Artikelnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,10,FORMAT(belege.Menge),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(belege."VK-Preis"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF  belege."VK-W„hrung" = '' THEN BEGIN
              EnterCell(RowNo,12,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END ELSE BEGIN
              EnterCell(RowNo,12,FORMAT(belege."VK-W„hrung"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,13,FORMAT(belege."Betrag MW ohne Mwst."),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(supp_kon.Erledigt),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(supp_kon."Rechnungsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,16,FORMAT(supp_kon.Stundensatz),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,17,FORMAT(supp_kon.Rechnungsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,18,FORMAT(supp_kon."Gruppen-Nr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //      EnterCell(RowNo,23,FORMAT(supp_kon."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF belege."Auftragsnr."='' THEN EnterCell(RowNo,1,FORMAT(supp_kon."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          END ELSE BEGIN
            IF belege."Auftragsnr."='' THEN BEGIN
            END ELSE BEGIN
              EnterCell(RowNo,1,FORMAT(belege."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            //      EnterCell(RowNo,1,FORMAT(belege."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //      IF belege."Auftragsnr."='' THEN EnterCell(RowNo,1,FORMAT(supp_kon."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,FORMAT(belege."Belegnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(belege."Zeilennr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,FORMAT(belege.Belegdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,5,FORMAT(belege."Debitornr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            Debitor.RESET;
            Debitor.SETFILTER(Debitor."No.",'%1',belege."Debitornr.");
            IF Debitor.FINDFIRST THEN BEGIN
              EnterCell(RowNo,6,FORMAT(Debitor.Name),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,FORMAT(Debitor."Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(Debitor.City),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,9,FORMAT(belege."Artikelnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,10,FORMAT(belege.Menge),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(belege."VK-Preis"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF belege."VK-W„hrung" = '' THEN BEGIN
              EnterCell(RowNo,12,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END ELSE BEGIN
              EnterCell(RowNo,12,FORMAT(belege."VK-W„hrung"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,13,FORMAT(belege."Betrag MW ohne Mwst."),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            supp_kon.RESET;
            supp_kon.SETFILTER(supp_kon."Auftragsnr.",'%1',belege."Auftragsnr.");
            IF supp_kon.FINDFIRST THEN BEGIN
              EnterCell(RowNo,15,FORMAT(supp_kon."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF belege."Auftragsnr."='' THEN EnterCell(RowNo,19,FORMAT(supp_kon."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            IF belege.Belegart = belege.Belegart::"Credit Memo" THEN BEGIN
              vkgk.RESET;
              vkgk.SETFILTER(vkgk."No.",'%1',belege."Belegnr.");
              IF vkgk.FIND('-') THEN BEGIN
                REPEAT
                  EnterCell(RowNo,18,FORMAT(vkgk."Applies-to Doc. No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                UNTIL vkgk.NEXT=0;
              END;
            END;
          END;
          RowNo := RowNo + 1;
        UNTIL belege.NEXT=0;
      END;
      RowNo := RowNo + 1;
      //  zweiter Teil -
      belege.RESET;
      belege.SETFILTER(belege.Belegart,'%1|%2',belege.Belegart::Invoice,belege.Belegart::"Credit Memo");
      belege.SETFILTER(belege.Menge,'>%1',0);
      belege.SETFILTER(belege.Herstellercode,'%1|%2|%3','9610','9620','9630');
      belege.SETFILTER(belege.Belegdatum,'>=%1',Datum_ab_supp);
      belege.SETFILTER(belege."Artikelnr.",'<>%1&<>%2&<>%3&<>%4&<>%5&<>%6&<>%7&<>%8','TOPAS PAUSCHALE','ACS-TOPAS PAUSCHALE','FER-TOPAS PAUSCHALE','WIL-TOPAS PAUSCHALE','ACS-SOR-HANDLING FEE','FER-REMOTE-INST-ADV','FER-ONSITE-INST','PORTO, HANDLING');
      IF belege.FIND('-') THEN BEGIN
        REPEAT
          supp_kon.RESET;
          supp_kon.SETFILTER(supp_kon."Rechnungsnr.",'%1',belege."Belegnr.");
          IF supp_kon.FINDFIRST THEN BEGIN
            IF belege."Auftragsnr."='' THEN BEGIN
            END ELSE BEGIN
              EnterCell(RowNo,1,FORMAT(belege."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            //      EnterCell(RowNo,1,FORMAT(belege."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,FORMAT(belege."Belegnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(belege."Zeilennr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,FORMAT(belege.Belegdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,5,FORMAT(belege."Debitornr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            Debitor.RESET;
            Debitor.SETFILTER(Debitor."No.",'%1',belege."Debitornr.");
            IF Debitor.FINDFIRST THEN BEGIN
              EnterCell(RowNo,6,FORMAT(Debitor.Name),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,FORMAT(Debitor."Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(Debitor.City),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,9,FORMAT(belege."Artikelnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,10,FORMAT(belege.Menge),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(belege."VK-Preis"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF  belege."VK-W„hrung" = '' THEN BEGIN
              EnterCell(RowNo,12,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END ELSE BEGIN
              EnterCell(RowNo,12,FORMAT(belege."VK-W„hrung"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,13,FORMAT(belege."Betrag MW ohne Mwst."),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,14,FORMAT(supp_kon.Erledigt),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(supp_kon."Rechnungsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,16,FORMAT(supp_kon.Stundensatz),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,17,FORMAT(supp_kon.Rechnungsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,18,FORMAT(supp_kon."Gruppen-Nr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //      EnterCell(RowNo,21,FORMAT(supp_kon."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF belege."Auftragsnr."='' THEN EnterCell(RowNo,1,FORMAT(supp_kon."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          END ELSE BEGIN
            IF belege."Auftragsnr."='' THEN BEGIN
            END ELSE BEGIN
              EnterCell(RowNo,1,FORMAT(belege."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            //      EnterCell(RowNo,1,FORMAT(belege."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //      IF belege."Auftragsnr."='' THEN EnterCell(RowNo,1,FORMAT(supp_kon."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,FORMAT(belege."Belegnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(belege."Zeilennr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,FORMAT(belege.Belegdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,5,FORMAT(belege."Debitornr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            Debitor.RESET;
            Debitor.SETFILTER(Debitor."No.",'%1',belege."Debitornr.");
            IF Debitor.FINDFIRST THEN BEGIN
              EnterCell(RowNo,6,FORMAT(Debitor.Name),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,FORMAT(Debitor."Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(Debitor.City),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,9,FORMAT(belege."Artikelnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,10,FORMAT(belege.Menge),'',FALSE,FALSE,FALSE,'###,###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,FORMAT(belege."VK-Preis"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF belege."VK-W„hrung" = '' THEN BEGIN
              EnterCell(RowNo,12,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END ELSE BEGIN
              EnterCell(RowNo,12,FORMAT(belege."VK-W„hrung"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            EnterCell(RowNo,13,FORMAT(belege."Betrag MW ohne Mwst."),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            supp_kon.RESET;
            supp_kon.SETFILTER(supp_kon."Auftragsnr.",'%1',belege."Auftragsnr.");
            IF supp_kon.FINDFIRST THEN BEGIN
              EnterCell(RowNo,15,FORMAT(supp_kon."Auftragsnr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            IF belege.Belegart = belege.Belegart::"Credit Memo" THEN BEGIN
              vkgk.RESET;
              vkgk.SETFILTER(vkgk."No.",'%1',belege."Belegnr.");
              IF vkgk.FIND('-') THEN BEGIN
                REPEAT
                  EnterCell(RowNo,18,FORMAT(vkgk."Applies-to Doc. No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                UNTIL vkgk.NEXT=0;
              END;
            END;
          END;
          RowNo := RowNo + 1;
        UNTIL belege.NEXT=0;
      END;

      RowNo := RowNo + 5;
      EnterCell(RowNo,1,'Auftr„ge mit Tages- und/oder Stundens„tzen  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'prfen, ob eingetragen in Tab. Support Kontingente','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Belegdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Belegnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Zeilennr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(RowNo,4,'Debitornr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Artikelnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'AU-Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Verk„ufer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Bearbeiter','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Support-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Support-Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      tab_ab.RESET;
      tab_ab.SETFILTER(tab_ab."Document Type",'%1',tab_ab."Document Type"::Order);
      tab_ab.SETFILTER(tab_ab.Quantity,'>%1',0);
      tab_ab.SETFILTER(tab_ab."No.",'%1|%2','ACS_TAGESSATZ','ACS_STUNDENSATZ');
      tab_ab.SETFILTER(tab_ab."Quantity Invoiced",'%1',0);
      IF tab_ab.FIND('-') THEN BEGIN
        REPEAT
          RowNo := RowNo + 1;

          EnterCell(RowNo,2,FORMAT(tab_ab."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(tab_ab."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_ab."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT(tab_ab."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          vkk.RESET;
          vkk.SETFILTER(vkk."No.",'%1',tab_ab."Document No.");
          IF vkk.FIND('-') THEN BEGIN
            REPEAT
              EnterCell(RowNo,1,FORMAT(vkk."Order Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,5,FORMAT(vkk."Sell-to Customer Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(vkk."Salesperson Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,FORMAT(vkk."Betreuer Innendienst"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            UNTIL vkk.NEXT=0;
          END;

          supp_kon.RESET;
          supp_kon.SETFILTER(supp_kon."Auftragsnr.",'%1',tab_ab."Document No.");
          IF supp_kon.FIND('-') THEN BEGIN
            EnterCell(RowNo,10,FORMAT(supp_kon."Gruppen-Nr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,11,FORMAT(supp_kon.Menge),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
        UNTIL tab_ab.NEXT=0;
      END;


      RowNo := RowNo + 5;
      EnterCell(RowNo,1,'Abstimmen der Restmengen aus Supp-Kontingente mit H„kchen Erledigt ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      EnterCell(RowNo,1,'Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'RestMenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'offene H„kchen Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'offenes Kontingent','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Stundensatz','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Abgrenzungsbetrag','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      supp.RESET;
      supp.CALCFIELDS(supp."Offenes Kontingent");
      supp.SETFILTER(supp."Offenes Kontingent",'<>%1',0);
      IF supp.FIND('-') THEN BEGIN
        REPEAT
          v_anz_h„kchen_stunden:=0;
          v_stundensatz:=0;
          supp.CALCFIELDS(supp."Offenes Kontingent");
          RowNo := RowNo + 1;
          EnterCell(RowNo,1,FORMAT(supp."Nr."),'',FALSE,FALSE,FALSE,'########',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,FORMAT(supp.Kunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(supp."Offenes Kontingent"),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

          supp_kon.RESET;
          supp_kon.SETFILTER(supp_kon."Gruppen-Nr.",'%1',supp."Nr.");
          supp_kon.SETFILTER(supp_kon.Erledigt,'%1',FALSE);
          IF supp_kon.FIND('-') THEN BEGIN
            REPEAT
              v_anz_h„kchen_stunden:=((v_anz_h„kchen_stunden)+(supp_kon.Menge));
              IF v_stundensatz=0 THEN BEGIN
                v_stundensatz:=supp_kon.Stundensatz;
              END ELSE BEGIN
                IF supp_kon.Stundensatz<>0 THEN BEGIN
                  IF v_stundensatz<>supp_kon.Stundensatz THEN BEGIN
                    RowNo := RowNo + 1;
                    EnterCell(RowNo,8,'verschied.Stundens„tze','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  END;
                END;
              END;
            UNTIL supp_kon.NEXT=0;
          END;
           EnterCell(RowNo,4,FORMAT(v_anz_h„kchen_stunden),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
           supp.CALCFIELDS(supp."Offenes Kontingent");
           IF (supp."Offenes Kontingent")-(v_anz_h„kchen_stunden)<>0 THEN BEGIN
             EnterCell(RowNo,5,'FEHLER','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
           END ELSE BEGIN
             EnterCell(RowNo,5,'OK','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
           END;

            EnterCell(RowNo,6,FORMAT(v_stundensatz),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT((v_stundensatz)*(v_anz_h„kchen_stunden)),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
         UNTIL supp.NEXT=0;

      END;







      CloseExcel('RE und Gu von Tagess„tzen','RE und GU von Tagess„tzen','F:\Daten Neu\User\Uwe\Navision_2016\Supp Kontingente');
      MESSAGE(' Das Holen der RE und GU von Tages- und Stundens„tzen wurde ausgefhrt.');
    END;

    PROCEDURE Anlagekartei@1140025();
    BEGIN
      CreateExcel;
      v_date_jahr1:=FORMAT(DATE2DMY(Datum_ab,3));
      v_date_jahr2:=FORMAT(DATE2DMY(Datum_bis,3));
      RowNo := 1;
      EnterCell(RowNo,2,'Anlagenkartei','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'gedruckt am:','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,FORMAT(WORKDATE),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,1,'TOPAS electronic AG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,1,'Gegenstand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,1,'Ger„te-Nr.:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(7,1,'Hersteller:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,1,'Standort:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,1,'Anschaffungswert:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,1,'Anschaffungsdatum:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,1,'Nutzungsdauer:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,1,'Abschreibungsart:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(13,1,'1. mtl. AfA-Betrag:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(14,1,'mtl. AfA-Betrag:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(17,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(17,2,'Buchungstext','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(17,3,'Betrag','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(17,4,'Afa','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(17,5,'Wert','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      // Alte Versrion
      {
      v_anlwertgesamt:= 0;
      v_anzahl_anschaff:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage."No.",'%1',v_anlagenr);
      Anlage.SETFILTER(Anlage.Inactive,'<>%1',TRUE);
      IF Anlage.FINDFIRST THEN BEGIN
        v_anlwert:=0;
        EnterCell(5,2,FORMAT(Anlage.Description),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(6,2,FORMAT(Anlage."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(7,2,FORMAT(Anlage."Vendor No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(8,2,FORMAT(Anlage."FA Location Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := 17;
        Anlpost.RESET;
        Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");

        IF Anlpost.FIND('-') THEN BEGIN
          REPEAT
            Anlpost.SETCURRENTKEY("FA Posting Date","FA Posting Type");
            EnterCell(RowNo,1,FORMAT(Anlpost."FA Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            IF Anlpost."FA Posting Type"=0 THEN EnterCell(RowNo,2,'Anschaffung','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF v_anzahl_anschaff=0 THEN BEGIN
              IF Anlpost."FA Posting Type"=0 THEN EnterCell(10,2,FORMAT(Anlpost."FA Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            END;
            IF Anlpost."FA Posting Type"=0 THEN v_anzahl_anschaff:=1;
            IF Anlpost."FA Posting Type"=1 THEN EnterCell(RowNo,2,'Normal-AfA','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF Anlpost."FA Posting Type"=3 THEN EnterCell(RowNo,2,'Zuschreibung','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

       //     IF Anlpost."FA Posting Type"=6 THEN EnterCell(RowNo,2,'Verkaufspreis','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
       //     IF Anlpost."FA Posting Type"=7 THEN EnterCell(RowNo,2,'Abgang','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
       //     IF Anlpost."FA Posting Type"=8 THEN EnterCell(RowNo,2,'Gewinn/Verlust','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF Anlpost."FA Posting Type"=9 THEN EnterCell(RowNo,2,'Buchwert bei Verkauf','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

            IF ((Anlpost."FA Posting Type"=Anlpost."FA Posting Type"::"Acquisition Cost") OR (Anlpost."FA Posting Type"=Anlpost."FA Posting Type"::Depreciation) OR (Anlpost."FA Posting Type"=Anlpost."FA Posting Type"::"Book Value on Disposal")
              OR (Anlpost."FA Posting Type"=Anlpost."FA Posting Type"::Appreciation) OR (Anlpost."FA Posting Type"=Anlpost."FA Posting Type"::"Salvage Value") OR (Anlpost."FA Posting Type"=Anlpost."FA Posting Type"::"Proceeds on Disposal") OR
              (Anlpost."FA Posting Type"=Anlpost."FA Posting Type"::"Gain/Loss")) THEN BEGIN
            END ELSE BEGIN
              ERROR('Fehler!  Der verwendete Buchungstext ist im Programm nicht hinterlegt. Noch hinzufgen!!!');
            END;
            IF Anlpost."FA Posting Category"= Anlpost."FA Posting Category"::"Disposal" THEN BEGIN
      //        EnterCell(RowNo,5,FORMAT(Anlpost."Debit Amount"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //        EnterCell(RowNo,8,FORMAT(Anlpost."Credit Amount"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //        v_anlwert:= (v_anlwert + Anlpost."Debit Amount" -  Anlpost."Credit Amount");
      //        v_anlwertgesamt:= (v_anlwertgesamt+ Anlpost."Debit Amount");
      //        EnterCell(RowNo,9,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              EnterCell(RowNo,3,FORMAT(Anlpost."Debit Amount"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,4,FORMAT(Anlpost."Credit Amount"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              v_anlwert:= (v_anlwert + Anlpost."Debit Amount" -  Anlpost."Credit Amount");
              v_anlwertgesamt:= (v_anlwertgesamt+ Anlpost."Debit Amount");
              EnterCell(RowNo,5,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            END;

      //      v_anlwert:= (v_anlwert + Anlpost."Debit Amount" -  Anlpost."Credit Amount");
      //      v_anlwertgesamt:= (v_anlwertgesamt+ Anlpost."Debit Amount");
      //      EnterCell(RowNo,5,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo + 1;
          UNTIL Anlpost.NEXT=0;
        END;
      END;
      EnterCell(9,2,FORMAT(v_anlwertgesamt),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //  EnterCell(10,2)  siehe weiter oben
      EnterCell(11,2,FORMAT(Anlpost."No. of Depreciation Years"),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
      IF Anlpost."Depreciation Method"=0 THEN BEGIN
        EnterCell(12,2,'Linear','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      END ELSE BEGIN
        IF Anlpost."Depreciation Method"=3 THEN BEGIN
          EnterCell(12,2,'Degr1/Linear','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END ELSE BEGIN
          IF Anlpost."Depreciation Method"=4 THEN BEGIN
            EnterCell(12,2,'Degr2/Linear','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            IF Anlpost."Depreciation Method"=7 THEN BEGIN
              EnterCell(12,2,'Abgang','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END ELSE BEGIN
              ERROR('Fehler  Die Abschreibungsart ist im Programm nicht hinterlegt. Noch einfgen!!!');
            END;
            //      ERROR('Fehler  Die Abschreibungsart ist im Programm nicht hinterlegt. Noch einfgen!!!');
          END;
        END;
      END;
      }

      // Neue Version ( mit Buchwert bei Verkauf)
      v_anlwertgesamt:= 0;
      v_anzahl_anschaff:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage."No.",'%1',v_anlagenr);
      Anlage.SETFILTER(Anlage.Inactive,'<>%1',TRUE);
      IF Anlage.FINDFIRST THEN BEGIN
        v_anlwert:=0;
        EnterCell(5,2,FORMAT(Anlage.Description),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(6,2,FORMAT(Anlage."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(7,2,FORMAT(Anlage."Vendor No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(8,2,FORMAT(Anlage."FA Location Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(13,2,FORMAT(Anlage."1ter AfA-Betrag"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
        EnterCell(14,2,FORMAT(Anlage."mtl. AfA-Betrag"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);

        RowNo := 19;
        Anlpost.RESET;
        Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
        Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',0);
        Anlpost.SETFILTER(Anlpost."FA Posting Category",'<>%1', Anlpost."FA Posting Category"::Disposal);
        IF Anlpost.FIND('-') THEN BEGIN
          REPEAT
            Anlpost.SETCURRENTKEY("FA Posting Date","FA Posting Type");
            EnterCell(RowNo,1,FORMAT(Anlpost."FA Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,'Anschaffung','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF v_anzahl_anschaff=0 THEN BEGIN
              IF Anlpost."FA Posting Type"=0 THEN EnterCell(10,2,FORMAT(Anlpost."FA Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            END;
            IF Anlpost."FA Posting Type"=0 THEN v_anzahl_anschaff:=1;
            EnterCell(RowNo,3,FORMAT(Anlpost."Debit Amount"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(0),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            v_anlwert:= (v_anlwert + Anlpost."Debit Amount" -  Anlpost."Credit Amount");
            v_anlwertgesamt:= (v_anlwertgesamt+ Anlpost."Debit Amount");
            EnterCell(RowNo,5,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo + 1;
          UNTIL Anlpost.NEXT=0;
        END;


        Anlpost.RESET;
        Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
        Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',3);
        Anlpost.SETFILTER(Anlpost."FA Posting Category",'<>%1', Anlpost."FA Posting Category"::Disposal);
        IF Anlpost.FIND('-') THEN BEGIN
          REPEAT
            Anlpost.SETCURRENTKEY("FA Posting Date","FA Posting Type");
            EnterCell(RowNo,1,FORMAT(Anlpost."FA Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,'Zuschreibung','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(Anlpost."Debit Amount"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            v_anlwert:= (v_anlwert + Anlpost."Debit Amount" -  Anlpost."Credit Amount");
            EnterCell(RowNo,4,FORMAT(0),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            v_anlwertgesamt:= (v_anlwertgesamt+ Anlpost."Debit Amount");
            EnterCell(RowNo,5,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo + 1;
          UNTIL Anlpost.NEXT=0;
        END;

        Anlpost.RESET;
        Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
        Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
        Anlpost.SETFILTER(Anlpost."FA Posting Category",'<>%1', Anlpost."FA Posting Category"::Disposal);
        IF Anlpost.FIND('-') THEN BEGIN
          REPEAT
            Anlpost.SETCURRENTKEY("FA Posting Date","FA Posting Type");
            EnterCell(RowNo,1,FORMAT(Anlpost."FA Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,'Normal-AfA','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(0),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(Anlpost."Credit Amount"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            v_anlwert:= (v_anlwert + Anlpost."Debit Amount" -  Anlpost."Credit Amount");
            v_anlwertgesamt:= (v_anlwertgesamt+ Anlpost."Debit Amount");
            EnterCell(RowNo,5,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo + 1;
          UNTIL Anlpost.NEXT=0;
        END;

        Anlpost.RESET;
        Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
        Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',9);
        Anlpost.SETFILTER(Anlpost."FA Posting Category",'%1', Anlpost."FA Posting Category"::Disposal);
        IF Anlpost.FIND('-') THEN BEGIN
          REPEAT
            Anlpost.SETCURRENTKEY("FA Posting Date","FA Posting Type");
      //       RowNo := RowNo + 1;
      //       EnterCell(RowNo,1,FORMAT(Anlpost."FA Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
             EnterCell(RowNo,2,'Buchwert bei Verkauf','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
             EnterCell(RowNo,3,FORMAT(0),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
             EnterCell(RowNo,4,FORMAT(0),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //       v_anlwert:= (v_anlwert + Anlpost."Debit Amount" -  Anlpost."Credit Amount");
      //       v_anlwertgesamt:= (v_anlwertgesamt+ Anlpost."Debit Amount");
             EnterCell(RowNo,5,FORMAT(v_anlwert*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo + 1;
          UNTIL Anlpost.NEXT=0;
        END;

      END;






      EnterCell(9,2,FORMAT(v_anlwertgesamt),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //  EnterCell(10,2)  siehe weiter oben
      EnterCell(11,2,FORMAT(Anlpost."No. of Depreciation Years"),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
      IF Anlpost."Depreciation Method"=0 THEN BEGIN
        EnterCell(12,2,'Linear','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      END ELSE BEGIN
        IF Anlpost."Depreciation Method"=3 THEN BEGIN
          EnterCell(12,2,'Degr1/Linear','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END ELSE BEGIN
          IF Anlpost."Depreciation Method"=4 THEN BEGIN
            EnterCell(12,2,'Degr2/Linear','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            IF Anlpost."Depreciation Method"=7 THEN BEGIN
              EnterCell(12,2,'Abgang','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END ELSE BEGIN
              ERROR('Fehler  Die Abschreibungsart ist im Programm nicht hinterlegt. Noch einfgen!!!');
            END;
            //      ERROR('Fehler  Die Abschreibungsart ist im Programm nicht hinterlegt. Noch einfgen!!!');
          END;
        END;
      END;

      CloseExcel_Anlagenkartei('Anlagenkarteiblatt_'+v_date_jahr2+'_'+v_anlagenr,'Anlagenkarteiblatt_'+v_date_jahr2+'_'+v_anlagenr,'R:\GDPDU\Anlagenkartei\'+v_date_jahr2+'\');
      MESSAGE(' Das Holen des Anlagenkarteiblattes wurde ausgefhrt und nach F:GDPDU_Anlagenkartei_'+v_date_jahr2+'_ gespeichert.');
    END;

    PROCEDURE Anlagebersicht@1140026();
    BEGIN
      CreateExcel;
      v_date_jahr1:=FORMAT(DATE2DMY(Datum_ab,3));
      v_date_jahr2:=FORMAT(DATE2DMY(Datum_bis,3));
      RowNo := 1;
      EnterCell(RowNo,1,'Liste des Anlageverm”gens','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Konto:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT(v_anlagenrserie),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,1,'TOPAS electronic AG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 4;
      EnterCell(RowNo,1,'Ger.Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Gegenstand','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Wert','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'AfA-Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Wert','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Abgang','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Zugang','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'AfA-Wert','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Wert','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 5;
      EnterCell(RowNo,3,'Anschaffung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,FORMAT(Datum_ab -1),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      {
      Sheet.Range('A:A').ColumnWidth := 12;
      Sheet.Range('B:B').ColumnWidth := 40;
      Sheet.Range('C:C').ColumnWidth := 15;
      Sheet.Range('D:D').ColumnWidth := 15;
      Sheet.Range('E:E').ColumnWidth := 15;
      }
      RowNo := 7;
      v_anlwertgesamt:= 0;
      v_anlwert:=0;
      v_ger„tenr:='';
      IF v_anlagenrserie='' THEN ERROR('Abbruch: Es wurde keine Anlagen-Kontonummer eingegeben');
      //Sheet.Range('A'+j).Value := v_anlagenrserie;   // Testandruck
      Anlage.RESET;
      //Anlage.SETFILTER(Anlage."No. Series",'>%1','1');   //  Testeintrag
      Anlage.SETFILTER(Anlage."No. Series",'%1',v_anlagenrserie);
      Anlage.SETFILTER(Anlage.Inactive,'<>%1',TRUE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          v_anlwert:=0;
          v_anlwertgesamt:= 0;
          v_wert_vj:=0;
          v_wert_abgang:=0;
          v_wert_zugang:=0;
          v_wert_afa:=0;
          v_null_afa_wert:=0;
          v_null_wert:=0;
          v_abgangkorrektur:=0;
          v_wert_gesamt:=0;
          v_wert_gj:=0;
          EnterCell(RowNo,1,FORMAT(Anlage."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(Anlage.Description),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          Anlpost.RESET;
          Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
          IF Anlpost.FIND('-') THEN BEGIN
            REPEAT
              IF ((Anlpost."Entry No."=628) OR (Anlpost."Entry No."=636)) THEN BEGIN
                v_anlwertgesamt:=v_anlwertgesamt+Anlpost."Debit Amount";
              END ELSE BEGIN;
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3 ) OR (Anlpost."FA Posting Type"=7 ))THEN v_anlwertgesamt:=v_anlwertgesamt+Anlpost."Debit Amount";
              END;
            UNTIL Anlpost.NEXT=0;
          END;
         EnterCell(RowNo,3,FORMAT(v_anlwertgesamt),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);


          //  hier einschr„nken auf Wert Vorjahr  *************************************************************************
          Anlpost1.RESET;
          Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
          Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
          Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
          // Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
          IF Anlpost1.FIND('-') THEN BEGIN
            REPEAT
              v_anlwert:=(v_anlwert+Anlpost1."Debit Amount"-Anlpost1."Credit Amount");
              v_wert_vj:=(v_wert_vj+Anlpost1."Debit Amount"-Anlpost1."Credit Amount");
            UNTIL Anlpost1.NEXT=0;
          END;

          v_anlwert:=0;



          //  hier einschr„nken auf Abgang lfd Jahr *************************************************************************
          Anlpost1.RESET;
          Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      //    Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2|%3|%4',Datum_ab,Datum_bis,31033021D,30032321D);
      //    Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Salvage Value");
          Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Book Value on Disposal");
      //    Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',9);
      //    Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1', Anlpost1."FA Posting Category"::Disposal);
          IF Anlpost1.FIND('-') THEN BEGIN
            REPEAT
              v_anlwert:=(v_anlwert+Anlpost1."Debit Amount");
              v_wert_abgang:=(v_wert_abgang+Anlpost1."Debit Amount");
      //        IF ((Anlpost1."FA Posting Date"=31033021D) OR (Anlpost1."FA Posting Date"=30032321D)) THEN v_abgangkorrektur:=(v_abgangkorrektur+Anlpost1."Debit Amount");
              v_abgangkorrektur:=(v_abgangkorrektur+Anlpost1."Debit Amount");
            UNTIL Anlpost1.NEXT=0;
          END ELSE BEGIN
      //      EnterCell(RowNo,6,FORMAT(0),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      //    EnterCell(RowNo,6,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);


          v_anlwert:=0;



          //  hier einschr„nken auf Zugang lfd. Jahr  *************************************************************************
          Anlpost1.RESET;
          Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
          Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
          //  Anlpost1.SETFILTER((Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost") OR (Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Appreciation));
          Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1|%2|%3',0,3,7);
          IF Anlpost1.FIND('-') THEN BEGIN
            REPEAT
              v_anlwert:=(v_anlwert+Anlpost1."Debit Amount");
              v_wert_zugang:=(v_wert_zugang+Anlpost1."Debit Amount");
            UNTIL Anlpost1.NEXT=0;
          END;
          EnterCell(RowNo,7,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          v_anlwert:=0;


          //  hier einschr„nken auf Afa Abfragejahr  *************************************************************************
          Anlpost1.RESET;
          Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
          Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
          Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type":: Depreciation );
          IF Anlpost1.FIND('-') THEN BEGIN
            REPEAT
              v_anlwert:=v_anlwert+Anlpost1."Credit Amount";
              v_wert_afa:=v_wert_afa+Anlpost1."Credit Amount";
              v_null_afa_wert:=v_null_afa_wert+Anlpost1."Credit Amount";
            UNTIL Anlpost1.NEXT=0;
          END;
          EnterCell(RowNo,4,'Normal-AfA','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          v_anlwert:=0;



          //  hier einschr„nken auf Wert Abfragejahr  *************************************************************************
          Anlpost1.RESET;
          Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
          Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
          // Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
          IF Anlpost1.FIND('-') THEN BEGIN
            REPEAT
              v_anlwert:=(v_anlwert-Anlpost1."Credit Amount"+Anlpost1."Debit Amount");
            UNTIL Anlpost1.NEXT=0;
          END;
          IF ((Anlpost1."FA Posting Type"=9) AND (Anlpost1."FA Posting Category"=Anlpost1."FA Posting Category"::Disposal)) THEN BEGIN
             EnterCell(RowNo,9,FORMAT(0),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END ELSE BEGIN
      //       EnterCell(RowNo,9,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
             v_wert_gesamt:=v_wert_gesamt+(v_wert_vj-v_wert_abgang+v_wert_zugang-v_wert_afa);
             v_null_wert:=(v_wert_vj-v_wert_abgang+v_wert_zugang-v_wert_afa);
          END;



          IF ((v_null_wert=0) AND (v_null_afa_wert=0)) THEN BEGIN
            EnterCell(RowNo,5,FORMAT(0),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(0),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,9,FORMAT(0),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END ELSE BEGIN
            IF ((v_null_afa_wert<>0) AND (v_null_wert=0)) THEN BEGIN
              EnterCell(RowNo,6,FORMAT(v_wert_abgang),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT(v_wert_gesamt),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              EnterCell(RowNo,6,FORMAT(v_wert_abgang-v_abgangkorrektur),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT(v_wert_gesamt+v_abgangkorrektur),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            END;
            EnterCell(RowNo,5,FORMAT(v_wert_vj),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);

          END;







      {

      //  ab hier sicherung 28.06.2021
          //  hier einschr„nken auf Wert Vorjahr  *************************************************************************
          Anlpost1.RESET;
          Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
          Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
          Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
          // Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
          IF Anlpost1.FIND('-') THEN BEGIN
            REPEAT
              v_anlwert:=(v_anlwert+Anlpost1."Debit Amount"-Anlpost1."Credit Amount");
              v_wert_vj:=(v_wert_vj+Anlpost1."Debit Amount"-Anlpost1."Credit Amount");
            UNTIL Anlpost1.NEXT=0;
          END;
          EnterCell(RowNo,5,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          v_anlwert:=0;



          //  hier einschr„nken auf Abgang lfd Jahr *************************************************************************
          Anlpost1.RESET;
          Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
          Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
      //    Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Salvage Value");
      //    Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Book Value on Disposal");
          Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',9);
      //    Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1', Anlpost1."FA Posting Category"::Disposal);
          IF Anlpost1.FIND('-') THEN BEGIN
            REPEAT
              v_anlwert:=(v_anlwert+Anlpost1."Debit Amount");
              EnterCell(RowNo,6,FORMAT(Anlpost1."Debit Amount"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              v_wert_abgang:=(v_wert_abgang+Anlpost1."Debit Amount");
            UNTIL Anlpost1.NEXT=0;
          END ELSE BEGIN
            EnterCell(RowNo,6,FORMAT(0),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      //    EnterCell(RowNo,6,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);


          v_anlwert:=0;



          //  hier einschr„nken auf Zugang lfd. Jahr  *************************************************************************
          Anlpost1.RESET;
          Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
          Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
          //  Anlpost1.SETFILTER((Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost") OR (Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Appreciation));
          Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1|%2|%3',0,3,7);
          IF Anlpost1.FIND('-') THEN BEGIN
            REPEAT
              v_anlwert:=(v_anlwert+Anlpost1."Debit Amount");
              v_wert_zugang:=(v_wert_zugang+Anlpost1."Debit Amount");
            UNTIL Anlpost1.NEXT=0;
          END;
          EnterCell(RowNo,7,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          v_anlwert:=0;


          //  hier einschr„nken auf Afa Abfragejahr  *************************************************************************
          Anlpost1.RESET;
          Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
          Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
          Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type":: Depreciation );
          IF Anlpost1.FIND('-') THEN BEGIN
            REPEAT
              v_anlwert:=v_anlwert+Anlpost1."Credit Amount";
              v_wert_afa:=v_wert_afa+Anlpost1."Credit Amount";
            UNTIL Anlpost1.NEXT=0;
          END;
          EnterCell(RowNo,4,'Normal-AfA','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          v_anlwert:=0;



          //  hier einschr„nken auf Wert Abfragejahr  *************************************************************************
          Anlpost1.RESET;
          Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
          Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
          // Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
          IF Anlpost1.FIND('-') THEN BEGIN
            REPEAT
              v_anlwert:=(v_anlwert-Anlpost1."Credit Amount"+Anlpost1."Debit Amount");
            UNTIL Anlpost1.NEXT=0;
          END;
          IF ((Anlpost1."FA Posting Type"=9) AND (Anlpost1."FA Posting Category"=Anlpost1."FA Posting Category"::Disposal)) THEN BEGIN
             EnterCell(RowNo,9,FORMAT(0),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END ELSE BEGIN
      //       EnterCell(RowNo,9,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
             EnterCell(RowNo,9,FORMAT(v_wert_vj-v_wert_abgang+v_wert_zugang-v_wert_afa),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
          END;
      }





          v_anlwert:=0;
          RowNo := RowNo + 1;
        UNTIL Anlage.NEXT=0;
      END;

      CloseExcel_Anlagenbersicht('Liste des Anlageverm”gens_'+v_date_jahr2+'_'+v_anlagenrserie,'Liste des Anlageverm”gens_'+v_date_jahr2+'_'+v_anlagenrserie,'R:\GDPDU\Anlagenkartei\'+v_date_jahr2+'\');
      MESSAGE(' Das Holen der Liste des Anlageverm”gens wurde ausgefhrt und nach R:_GDPDU_Anlagenkartei_'+v_date_jahr2+'_ gespeichert.');
    END;

    PROCEDURE Anlagenspiegel@1140027();
    BEGIN
      CreateExcel;
      v_date_jahr1:=FORMAT(DATE2DMY(Datum_ab,3));
      v_date_jahr2:=FORMAT(DATE2DMY(Datum_bis,3));

      EnterCell(2,7,'Brutto-Anlagespiegel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,7,'TOPAS electronic AG                       ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,7,'Hannover','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,7,FORMAT('zum ') + FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      EnterCell(2,16,'Anschaff VJ +','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,16,'Zugang GJ -  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,16,'Anschaff GJ  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,16,'             ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,16,'= 0,00       ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(2,17,'Buchwert GJ +','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,17,'AfA kum GJ - ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,17,'Anschaff GJ  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,17,'             ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,17,'= 0,00       ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(2,18,'Buchwert VJ -','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,18,'AfA GJ +     ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,18,'Zugang GJ -  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,18,'Buchwert GJ  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,18,'= 0,00       ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //EnterCell(6,4,'___________________________________________________________________________________________________________________________________________________________________________','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(8,4,'Anschaffungs-/','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,5,'Zug„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,6,'Abg„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,8,'Umbuchungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,9,'Anschaffungs-/','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,11,'Zuschreibungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,12,'Abschreibungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,13,'Buchwert','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,14,'Buchwert','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,4,'Herstellungskosten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,6,'(ursprngliche','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,7,'((darin enthalten))','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,9,'Herstellungskosten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,11,'Abschreibungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,12,'zzgl. AfA auf Abg„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,13,'per','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,14,'per','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,4,'(kumuliert)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,6,'Anschaffungskosten)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,7,'AfA auf Abg„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,9,'(kumuliert)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,11,'des Gesch„ftsjahres','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,12,'kumuliert bis','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,4,FORMAT(Datum_ab-1),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,5,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,6,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,7,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,8,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,9,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,11,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,12,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(11,13,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(11,14,FORMAT(Datum_ab-1),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(12,4,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,5,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,6,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,7,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,8,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,9,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,11,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,12,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      EnterCell(12,13,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,14,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      //EnterCell(15,4,'___________________________________________________________________________________________________________________________________________________________________________','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text)
      EnterCell(15,1,'I.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(15,2,'Immaterielle Verm”gensgegenst„nde','',TRUE,TRUE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(17,2,'Entgeltlich erworbene Konzessionen,','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(18,2,'gewerbliche Schutzrechte und „hnliche','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(19,2,'Rechte und Werte sowie Lizenzen aus','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(20,2,'solchen Rechten und Werten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(24,1,'II.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(24,2,'Sachanlagen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(26,2,'Andere Anlagen, Betriebs-','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(27,2,'und Gesch„ftsausstattung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(29,2,'Betriebsausstattung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(31,2,'Broeinrichtung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(33,2,'PCs und Drucker','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(35,2,'Einbauten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(37,2,'Kraftfahrzeuge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(39,2,'Anlagen im Bau','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(41,2,'Geringwertige Wirtschaftsgter','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      v_anlwertgesamt:= 0;
      v_anlwert:=0;
      v_ger„tenr:='';
      v_D31:=0;




      Anlage.RESET;
      //Anlage.SETFILTER(Anlage."No. Series",'%1',v_anlagenrserie);
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          //   Spalte D   Anschaffungskosten    **********************************************************************
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_bis);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D22:=v_D22+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D31:=v_D31+Anlpost."Debit Amount";
              UNTIL Anlpost.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D33:=v_D33+Anlpost."Debit Amount";
              UNTIL Anlpost.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D35:=v_D35+Anlpost."Debit Amount";
              UNTIL Anlpost.NEXT=0;
            END;

          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D37:=v_D37+Anlpost."Debit Amount";
              UNTIL Anlpost.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************


          IF Anlage."No. Series"='0680' THEN BEGIN   //  Errechnung der Abg„nge des lfd Jahres *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                      IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D37_1:=v_D37_1+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0680    **********************************************************************************







          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF Anlpost1."Entry No."=522 THEN BEGIN
                END ELSE BEGIN
       //         v_D39:=v_D39+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
                  IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D39:=v_D39+Anlpost1."Debit Amount";
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
      //          IF Anlpost."Reclassification Entry"=TRUE THEN BEGIN
      //            IF (((Anlpost."FA Posting Type"=0) AND (Anlpost."Reclassification Entry"=TRUE)) OR ((Anlpost."FA Posting Type"=3)AND (Anlpost."Reclassification Entry"=TRUE))) THEN v_D41:=v_D41+(Anlpost."Debit Amount"*(-1));
      //          END ELSE BEGIN
                  IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D41:=v_D41+Anlpost.Amount;
      //          END;
              UNTIL Anlpost.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D43:=v_D43+Anlpost."Debit Amount";
              UNTIL Anlpost.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,9,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,9,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,9,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,9,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //EnterCell(35,9,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,9,FORMAT(v_D37-v_D37_1),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,9,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,9,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,9,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_Anschaff_GJ_0135:=v_D22;
      v_Anschaff_GJ_0520:=v_D39;
      v_Anschaff_GJ_0650:=v_D33;
      v_Anschaff_GJ_0651:=v_D35;
      v_Anschaff_GJ_0680:=v_D37;
      v_Anschaff_GJ_0690:=v_D31;
      v_Anschaff_GJ_0698:=v_D41;

      //  Spalte D  Anschaffungskosten kumulieert Anfang des GJ **************************************************
      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      //Anlage.SETFILTER(Anlage."No. Series",'%1',v_anlagenrserie);
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FINDFIRST THEN BEGIN
        REPEAT
          //   Spalte D   Anschaffungskosten    **********************************************************************
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D22:=v_D22+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D31:=v_D31+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D33:=v_D33+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D35:=v_D35+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
      //          IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3) OR (Anlpost1."FA Posting Type"=7)) THEN v_D37:=v_D37+Anlpost1.Amount;
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D37:=v_D37+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************





















          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF Anlpost1."Entry No."=522 THEN BEGIN
                END ELSE BEGIN
                   IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D39:=v_D39+Anlpost1.Amount;
      //            IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3) OR (Anlpost1."FA Posting Type"=7)) THEN v_D39:=v_D39+Anlpost1.Amount;
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************



          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D41:=v_D41+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************







          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3) OR (Anlpost1."FA Posting Type"=7)) THEN v_D43:=v_D43+Anlpost1.Amount;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,4,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,4,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,4,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,4,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,4,FORMAT(v_D37-v_D37_1),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,4,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,4,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,4,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_Anschaff_VJ_0135:=v_D22;
      v_Anschaff_VJ_0520:=v_D39;
      v_Anschaff_VJ_0650:=v_D33;
      v_Anschaff_VJ_0651:=v_D35;
      v_Anschaff_VJ_0680:=v_D37;
      v_Anschaff_VJ_0690:=v_D31;
      v_Anschaff_VJ_0698:=v_D41;

      //  Spalte E  Zug„nge    ***********************************************************************************
      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;

      Anlage.RESET;
      //Anlage.SETFILTER(Anlage."No. Series",'%1',v_anlagenrserie);
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FINDFIRST THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D22:=v_D22+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D31:=v_D31+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D33:=v_D33+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D35:=v_D35+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D37:=v_D37+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************

          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D39:=v_D39+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D41:=v_D41+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D43:=v_D43+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,5,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,5,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,5,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,5,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,5,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,5,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,5,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,5,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_Zugang_GJ_0135:=v_D22;
      v_Zugang_GJ_0520:=v_D39;
      v_Zugang_GJ_0650:=v_D33;
      v_Zugang_GJ_0651:=v_D35;
      v_Zugang_GJ_0680:=v_D37;
      v_Zugang_GJ_0690:=v_D31;
      v_Zugang_GJ_0698:=v_D41;

      //  Spalte E ENDE ******************************************************************************************

      //  Spalte F + G noch šberprfen
      //  Spalte F  Zug„nge  Abfrage nach Option Restwert = 7  *****************************++++*******************
      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;

      Anlage.RESET;
      //Anlage.SETFILTER(Anlage."No. Series",'%1',v_anlagenrserie);
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FINDFIRST THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  v_D22:=v_D22+Anlpost."Credit Amount";
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  v_D31:=v_D31+Anlpost."Credit Amount";
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
               Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  v_D33:=v_D33+Anlpost."Credit Amount";
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  v_D35:=v_D35+Anlpost."Credit Amount";
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0651    **********************************************************************************
      {
          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
       //       Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1|%2',Anlpost1."FA Posting Type"::"Acquisition Cost",Anlpost1."FA Posting Type"::"Salvage Value");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  v_D39:=v_D39+Anlpost1."Credit Amount"+Anlpost1."Debit Amount"+Anlpost1."Debit Amount";
                UNTIL Anlpost1.NEXT=0;
              END;
             END;
          END;  // Ende von 0520    **********************************************************************************
      }

          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
      //      MESSAGE('Anlagedatum=30062019');
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                      IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D39:=v_D39+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;

      {
            IF ((Anlage."Datum Abgang"=30062019) AND (Anlage."No."=706)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                      IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D39:=v_D39+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;

      }


          END;  // Ende von 0520    **********************************************************************************




          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  v_D41:=v_D41+Anlpost."Credit Amount";
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0698    **********************************************************************************

           IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
             IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
               Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
               IF Anlpost1.FIND('-') THEN BEGIN
                 REPEAT
                   v_D43:=v_D43+Anlpost."Credit Amount";
                 UNTIL Anlpost1.NEXT=0;
               END;
             END;
           END;  // Ende von 0670    **********************************************************************************


          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                      IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D37:=v_D37+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0680    **********************************************************************************



        UNTIL Anlage.NEXT=0;
      END;


      EnterCell(20,6,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,6,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,6,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,6,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,6,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,6,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,6,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,6,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //  Spalte F ENDE ******************************************************************************************

      //  Spalte F + G noch šberprfen

      //  Spalte G AfA   Abfrage nach Option Restwert = 8  ********************************************************

      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;

      Anlage.RESET;
      //Anlage.SETFILTER(Anlage."No. Series",'%1',v_anlagenrserie);
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FINDFIRST THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D22:=v_D22+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D31:=v_D31+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D33:=v_D33+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D35:=v_D35+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0651    **********************************************************************************
      {
          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                  Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                      v_D37:=v_D37+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    ********************************************************************************
      }
      //  Neu Test Darin enthaltene AFA
          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',Anlpost."FA Posting Type"::Depreciation);
        //            Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                       v_D37:=v_D37+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0680    **********************************************************************************




      {
          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
      //      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                Anlpost.RESET;
                Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                IF Anlpost.FIND('-') THEN BEGIN
                  REPEAT
                    IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D37:=v_D37+Anlpost."Debit Amount";
                  UNTIL Anlpost.NEXT=0;
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************

      }




          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D39:=v_D39+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D41:=v_D41+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D43:=v_D43+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,7,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,7,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,7,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,7,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,7,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,7,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,7,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,7,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //  Spalte G ENDE ******************************************************************************************

      //  ********************************************************************************************************
      //   Hier Umbuchungen einfgen, falls gebraucht
      //  ********************************************************************************************************
      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
            IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
      //      Anlpost.SETFILTER(Anlpost."FA Posting Date",'<%1',Datum_ab);
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            Anlpost.SETFILTER(Anlpost."Reclassification Entry",'%1',TRUE);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D41:=v_D41+Anlpost.Amount;
              UNTIL Anlpost.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************

      {
          IF Anlage."No. Series"='0680' THEN BEGIN   //  Errechnung der Abg„nge des lfd Jahres *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                      IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D37_1:=v_D37_1+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0680    **********************************************************************************
      }
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,8,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,8,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,8,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,8,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,8,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,8,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,8,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,8,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      v_Umb_GJ_0135:=v_D22;
      v_Umb_GJ_0520:=v_D39;
      v_Umb_GJ_0650:=v_D33;
      v_Umb_GJ_0651:=v_D35;
      v_Umb_GJ_0680:=v_D37;
      v_Umb_GJ_0690:=v_D31;
      v_Umb_GJ_0698:=v_D41;
      //  Spalte J      ******************************************************************************************
      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D22:=v_D22+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-')THEN BEGIN
              REPEAT
                v_D31:=v_D31+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D33:=v_D33+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D35:=v_D35+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37:=v_D37+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************

          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D39:=v_D39+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-')THEN BEGIN
              REPEAT
                v_D41:=v_D41+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D43:=v_D43+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,11,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,11,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,11,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,11,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,11,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,11,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,11,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,11,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_Afa_GJ_0135:=v_D22;
      v_Afa_GJ_0520:=v_D39;
      v_Afa_GJ_0650:=v_D33;
      v_Afa_GJ_0651:=v_D35;
      v_Afa_GJ_0680:=v_D37;
      v_Afa_GJ_0690:=v_D31;
      v_Afa_GJ_0698:=v_D41;
      //  Spalte J      ******************************************************************************************


      //  Spalte K      ******************************************************************************************

      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D37_1:=0;
      v_D37_2:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D22:=v_D22+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D31:=v_D31+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D33:=v_D33+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D35:=v_D35+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37:=v_D37+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************



          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37_1:=v_D37_1+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
      //      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT

                IF ((Anlpost1."FA Posting Date"=31033021D) OR (Anlpost1."FA Posting Date"=30032321D)) THEN BEGIN
                  v_D37_2:=v_D37_2+Anlpost1.Amount;
                END ELSE BEGIN
                  IF ((Anlpost1."FA Posting Date"<=Datum_ab) AND (Anlpost1."FA Posting Date">=Datum_bis)) THEN BEGIN
                    v_D37_2:=v_D37_2+Anlpost1.Amount;
                  END;
                END;




              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************







          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."Entry No."=523) OR (Anlpost1."Entry No."=704)) THEN BEGIN
                END ELSE BEGIN
                  v_D39:=v_D39+Anlpost1."Credit Amount";
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D41:=v_D41+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************


          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D43:=v_D43+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,12,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,12,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,12,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,12,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,12,FORMAT(v_D37-v_D37_1-v_D37_2),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //EnterCell(35,15,FORMAT(v_D37_2),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,12,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,12,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,12,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_AfA_kum_GJ_0135:=v_D22;
      v_AfA_kum_GJ_0520:=v_D39;
      v_AfA_kum_GJ_0650:=v_D33;
      v_AfA_kum_GJ_0651:=v_D35;
      v_AfA_kum_GJ_0680:=v_D37;
      v_AfA_kum_GJ_0690:=v_D31;
      v_AfA_kum_GJ_0698:=v_D41;

      //  Spalte K      ******************************************************************************************

      //  Spalte L      ******************************************************************************************

      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D37_1:=0;
      v_D37_2:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D22:=v_D22+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D31:=v_D31+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D33:=v_D33+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D35:=v_D35+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37:=v_D37+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;

          IF Anlage."No. Series"='0680' THEN BEGIN
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Book Value on Disposal");
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Date"=31033021D) OR (Anlpost1."FA Posting Date"=30032321D)) THEN BEGIN
                  v_D37_1:=v_D37_1+Anlpost1.Amount;
                END ELSE BEGIN
                  IF ((Anlpost1."FA Posting Date"<=Datum_ab) AND (Anlpost1."FA Posting Date">=Datum_bis)) THEN BEGIN
                    v_D37_1:=v_D37_1+Anlpost1.Amount;
                  END;
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************




          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D39:=v_D39+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D41:=v_D41+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D43:=v_D43+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,13,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,13,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,13,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,13,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,13,FORMAT(v_D37-v_D37_1),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,13,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,13,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,13,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_Buchwert_GJ_0135:=v_D22;
      v_Buchwert_GJ_0520:=v_D39;
      v_Buchwert_GJ_0650:=v_D33;
      v_Buchwert_GJ_0651:=v_D35;
      v_Buchwert_GJ_0680:=v_D37;
      v_Buchwert_GJ_0690:=v_D31;
      v_Buchwert_GJ_0698:=v_D41;

      //  Spalte L      ******************************************************************************************

      //  Spalte M      ******************************************************************************************

      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D22:=v_D22+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D31:=v_D31+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D33:=v_D33+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D35:=v_D35+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

      //    IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
      //      Anlpost1.RESET;
      //      Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      //      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
      //      Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
      //      IF Anlpost1.FIND('-') THEN BEGIN
      //        REPEAT
      //          v_D37:=v_D37+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
      //         UNTIL Anlpost1.NEXT=0;
      //      END;
      //    END;  // Ende von 0680    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37:=v_D37+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;
      {
          IF Anlage."No. Series"='0680' THEN BEGIN
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Book Value on Disposal");
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Date"=31033021D) OR (Anlpost1."FA Posting Date"=30032321D)) THEN BEGIN
                  v_D37_1:=v_D37_1+Anlpost1.Amount;
                END ELSE BEGIN
                  IF ((Anlpost1."FA Posting Date"<=Datum_ab) AND (Anlpost1."FA Posting Date">=Datum_bis)) THEN BEGIN
                    v_D37_1:=v_D37_1+Anlpost1.Amount;
                  END;
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************
      }


          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D39:=v_D39+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D41:=v_D41+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D43:=v_D43+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,14,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,14,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,14,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,14,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,14,FORMAT(v_D37-v_D37_1),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,14,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,14,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,14,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_Buchwert_VJ_0135:=v_D22;
      v_Buchwert_VJ_0520:=v_D39;
      v_Buchwert_VJ_0650:=v_D33;
      v_Buchwert_VJ_0651:=v_D35;
      v_Buchwert_VJ_0680:=v_D37;
      v_Buchwert_VJ_0690:=v_D31;
      v_Buchwert_VJ_0698:=v_D41;

      //  Spalte M      ******************************************************************************************
      //EnterCell(3,1,'Spalte F + G noch berprfen/anpassen','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      {

      //  Das Datum der automatischen Buchung wird zur Abfrage gebraucht umd muss deshalb das Abgangsdatum im GJ sein

      // Zeile 20   0350
      v_sp4d:=0;
      v_sp5e:=0;
      v_sp6f:=0;
      v_sp7g:=0;
      v_sp8h:=0;
      v_sp9i:=0;
      v_sp11k:=0;
      v_sp12l:=0;
      v_sp13m:=0;
      v_sp14n:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      Anlage.SETFILTER(Anlage."No. Series",'%1','0135');
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          Anlpost.RESET;
          Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
          IF Anlpost.FIND('-') THEN BEGIN
            REPEAT
              IF (((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) AND (Anlpost."FA Posting Date" < Datum_ab)) THEN v_sp4d:=v_sp4d+Anlpost."Debit Amount";
              IF (((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) AND ((Anlpost."FA Posting Date" >= Datum_ab) AND (Anlpost."FA Posting Date" <= Datum_bis))) THEN v_sp5e:=v_sp5e+Anlpost."Debit Amount";



            UNTIL Anlpost.NEXT=0;
          END;

        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,4,FORMAT(v_sp4d),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(20,5,FORMAT(v_sp5e),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      // Ende Zeile 20  0135

      }

      EnterCell(20,16,FORMAT(v_Anschaff_VJ_0135+v_Zugang_GJ_0135-v_Anschaff_GJ_0135+v_Umb_GJ_0135),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,16,FORMAT(v_Anschaff_VJ_0690+v_Zugang_GJ_0690-v_Anschaff_GJ_0690+v_Umb_GJ_0690),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,16,FORMAT(v_Anschaff_VJ_0650+v_Zugang_GJ_0650-v_Anschaff_GJ_0650+v_Umb_GJ_0650),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,16,FORMAT(v_Anschaff_VJ_0651+v_Zugang_GJ_0651-v_Anschaff_GJ_0651+v_Umb_GJ_0651),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,16,FORMAT(v_Anschaff_VJ_0680+v_Zugang_GJ_0680-v_Anschaff_GJ_0680+v_Umb_GJ_0680),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,16,FORMAT(v_Anschaff_VJ_0520+v_Zugang_GJ_0520-v_Anschaff_GJ_0520+v_Umb_GJ_0520),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,16,FORMAT(v_Anschaff_VJ_0698+v_Zugang_GJ_0698-v_Anschaff_GJ_0698+v_Umb_GJ_0698),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(20,17,FORMAT(v_Buchwert_GJ_0135+v_AfA_kum_GJ_0135-v_Anschaff_GJ_0135),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,17,FORMAT(v_Buchwert_GJ_0690+v_AfA_kum_GJ_0690-v_Anschaff_GJ_0690),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,17,FORMAT(v_Buchwert_GJ_0650+v_AfA_kum_GJ_0650-v_Anschaff_GJ_0650),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,17,FORMAT(v_Buchwert_GJ_0651+v_AfA_kum_GJ_0651-v_Anschaff_GJ_0651),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,17,FORMAT(v_Buchwert_GJ_0680+v_AfA_kum_GJ_0680-v_Anschaff_GJ_0680),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,17,FORMAT(v_Buchwert_GJ_0520+v_AfA_kum_GJ_0520-v_Anschaff_GJ_0520),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,17,FORMAT(v_Buchwert_GJ_0698+v_AfA_kum_GJ_0698-v_Anschaff_GJ_0698),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      EnterCell(20,18,FORMAT(v_Buchwert_VJ_0135-v_Afa_GJ_0135+v_Zugang_GJ_0135-v_Buchwert_GJ_0135+v_Umb_GJ_0135),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,18,FORMAT(v_Buchwert_VJ_0690-v_Afa_GJ_0690+v_Zugang_GJ_0690-v_Buchwert_GJ_0690+v_Umb_GJ_0690),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,18,FORMAT(v_Buchwert_VJ_0650-v_Afa_GJ_0650+v_Zugang_GJ_0650-v_Buchwert_GJ_0650+v_Umb_GJ_0650),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,18,FORMAT(v_Buchwert_VJ_0651-v_Afa_GJ_0651+v_Zugang_GJ_0651-v_Buchwert_GJ_0651+v_Umb_GJ_0651),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,18,FORMAT(v_Buchwert_VJ_0680-v_Afa_GJ_0680+v_Zugang_GJ_0680-v_Buchwert_GJ_0680+v_Umb_GJ_0680),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,18,FORMAT(v_Buchwert_VJ_0520-v_Afa_GJ_0520+v_Zugang_GJ_0520-v_Buchwert_GJ_0520+v_Umb_GJ_0520),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,18,FORMAT(v_Buchwert_VJ_0698-v_Afa_GJ_0698+v_Zugang_GJ_0698-v_Buchwert_GJ_0698+v_Umb_GJ_0698),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel_Anlagenspiegel('Anlagespiegel_'+v_date_jahr2,'Anlagespiegel_'+v_date_jahr2,'R:\GDPDU\Anlagenkartei\'+v_date_jahr2+'\');
      MESSAGE(' Das Holen des Anlagespiegels wurde ausgefhrt und nach F:GDPDU_Anlagenkartei_'+v_date_jahr2+'_ gespeichert.');

      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
    END;

    PROCEDURE Anlagenspiegel_v2@1000000005();
    BEGIN
      IF (Datum_ab = 0D) OR (Datum_bis = 0D) THEN ERROR(ErrorDate);

      CreateExcel;
      v_date_jahr1:=FORMAT(DATE2DMY(Datum_ab,3));
      v_date_jahr2:=FORMAT(DATE2DMY(Datum_bis,3));

      EnterCell(2,7,'Brutto-Anlagespiegel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,7,'TOPAS electronic AG                       ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,7,'Hannover','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,7,FORMAT('zum ') + FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      EnterCell(2,16,'Anschaff VJ +','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,16,'Zugang GJ -  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,16,'Anschaff GJ  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,16,'             ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,16,'= 0,00       ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(2,17,'Buchwert GJ +','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,17,'AfA kum GJ - ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,17,'Anschaff GJ  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,17,'             ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,17,'= 0,00       ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(2,18,'Buchwert VJ -','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,18,'AfA GJ +     ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,18,'Zugang GJ -  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,18,'Buchwert GJ  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,18,'= 0,00       ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //EnterCell(6,4,'___________________________________________________________________________________________________________________________________________________________________________','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //Zeile 8
      EnterCell(8,4,'Anschaffungs-/','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,5,'Zug„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,6,'Abg„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,7,'Umbuchungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,8,'Abschreibungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,9,'Abschreibungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,10,'Zuschreibungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,11,'Anschaffungs-/','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,12,'Abschreibungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,13,'Buchwert','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,14,'Buchwert','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //Zeile 9
      EnterCell(9,4,'Herstellungskosten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,6,'(ursprngliche','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(9,7,'((darin enthalten))','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text
      EnterCell(9,8,'zzgl. AfA auf Abg„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,9,'des Gesch„ftsjahres','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,10,'des Gesch„ftsjahres','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,11,'Herstellungskosten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,12,'zzgl. AfA auf Abg„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,13,'per','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,14,'per','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //Zeile 10
      EnterCell(10,4,'(kumuliert)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,6,'Anschaffungskosten)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(10,7,'AfA auf Abg„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,8,'kumuliert bis','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,11,'(kumuliert)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,12,'kumuliert bis','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //Zeile 11
      EnterCell(11,4,FORMAT(Datum_ab-1),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,5,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,6,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(11,7,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(11,8,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,7,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,8,FORMAT(Datum_ab-1),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,9,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,10,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,11,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(11,12,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(11,13,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(11,14,FORMAT(Datum_ab-1),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

      //Zeile 12
      EnterCell(12,4,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,5,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,6,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,7,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,8,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,9,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,10,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,11,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,12,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,13,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,14,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      //EnterCell(15,4,'___________________________________________________________________________________________________________________________________________________________________________','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text)

      ColumnNo := 1;
      EnterCell(15,ColumnNo,'I.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := 2;
      EnterCell(15,ColumnNo,'Immaterielle Verm”gensgegenst„nde','',TRUE,TRUE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(17,ColumnNo,'Entgeltlich erworbene Konzessionen,','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(18,ColumnNo,'gewerbliche Schutzrechte und „hnliche','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(19,ColumnNo,'Rechte und Werte sowie Lizenzen aus','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(20,ColumnNo,'solchen Rechten und Werten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      ColumnNo := 1;
      EnterCell(24,ColumnNo,'II.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := 2;
      EnterCell(24,ColumnNo,'Sachanlagen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(26,ColumnNo,'Andere Anlagen, Betriebs-','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(27,ColumnNo,'und Gesch„ftsausstattung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(29,ColumnNo,'Betriebsausstattung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(31,ColumnNo,'Broeinrichtung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(33,ColumnNo,'PCs und Drucker','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(35,ColumnNo,'Einbauten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(37,ColumnNo,'Kraftfahrzeuge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(39,ColumnNo,'Anlagen im Bau','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(41,ColumnNo,'Geringwertige Wirtschaftsgter','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);



      //   Spalte K  Anschaffungskosten kumuliert Ende des GJ ********************************************************
      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;

      Anlage.RESET;
      //Anlage.SETFILTER(Anlage."No. Series",'%1',v_anlagenrserie);
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT

          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_bis);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D22:=v_D22+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D31:=v_D31+Anlpost."Debit Amount";
              UNTIL Anlpost.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D33:=v_D33+Anlpost."Debit Amount";
              UNTIL Anlpost.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D35:=v_D35+Anlpost."Debit Amount";
              UNTIL Anlpost.NEXT=0;
            END;

          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D37:=v_D37+Anlpost."Debit Amount";
              UNTIL Anlpost.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************


          IF Anlage."No. Series"='0680' THEN BEGIN   //  Errechnung der Abg„nge des lfd Jahres *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                      IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D37_1:=v_D37_1+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0680    **********************************************************************************


          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF Anlpost1."Entry No."=522 THEN BEGIN
                END ELSE BEGIN
       //         v_D39:=v_D39+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
                  IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D39:=v_D39+Anlpost1."Debit Amount";
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
      //          IF Anlpost."Reclassification Entry"=TRUE THEN BEGIN
      //            IF (((Anlpost."FA Posting Type"=0) AND (Anlpost."Reclassification Entry"=TRUE)) OR ((Anlpost."FA Posting Type"=3)AND (Anlpost."Reclassification Entry"=TRUE))) THEN v_D41:=v_D41+(Anlpost."Debit Amount"*(-1));
      //          END ELSE BEGIN
                  IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D41:=v_D41+Anlpost.Amount;
      //          END;
              UNTIL Anlpost.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D43:=v_D43+Anlpost."Debit Amount";
              UNTIL Anlpost.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;

      ColumnNo := 11;
      EnterCell(20,ColumnNo,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,ColumnNo,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,ColumnNo,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,ColumnNo,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //EnterCell(35,ColumnNo,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,ColumnNo,FORMAT(v_D37-v_D37_1),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,ColumnNo,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,ColumnNo,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,ColumnNo,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_Anschaff_GJ_0135:=v_D22;
      v_Anschaff_GJ_0520:=v_D39;
      v_Anschaff_GJ_0650:=v_D33;
      v_Anschaff_GJ_0651:=v_D35;
      v_Anschaff_GJ_0680:=v_D37;
      v_Anschaff_GJ_0690:=v_D31;
      v_Anschaff_GJ_0698:=v_D41;
      //  Spalte K Ende **********************************************************************************************


      //  Spalte D  Anschaffungskosten kumulieert Anfang des GJ ******************************************************
      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      //Anlage.SETFILTER(Anlage."No. Series",'%1',v_anlagenrserie);
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FINDFIRST THEN BEGIN
        REPEAT
          //   Spalte D   Anschaffungskosten    **********************************************************************
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D22:=v_D22+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D31:=v_D31+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D33:=v_D33+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D35:=v_D35+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
      //          IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3) OR (Anlpost1."FA Posting Type"=7)) THEN v_D37:=v_D37+Anlpost1.Amount;
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D37:=v_D37+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************


          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF Anlpost1."Entry No."=522 THEN BEGIN
                END ELSE BEGIN
                   IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D39:=v_D39+Anlpost1.Amount;
      //            IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3) OR (Anlpost1."FA Posting Type"=7)) THEN v_D39:=v_D39+Anlpost1.Amount;
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************


          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D41:=v_D41+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************


          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3) OR (Anlpost1."FA Posting Type"=7)) THEN v_D43:=v_D43+Anlpost1.Amount;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;

      EnterCell(20,4,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,4,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,4,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,4,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,4,FORMAT(v_D37-v_D37_1),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,4,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,4,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,4,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_Anschaff_VJ_0135:=v_D22;
      v_Anschaff_VJ_0520:=v_D39;
      v_Anschaff_VJ_0650:=v_D33;
      v_Anschaff_VJ_0651:=v_D35;
      v_Anschaff_VJ_0680:=v_D37;
      v_Anschaff_VJ_0690:=v_D31;
      v_Anschaff_VJ_0698:=v_D41;
      //  Spalte D  ENDE  ********************************************************************************************


      //  Spalte E  Zug„nge    ***************************************************************************************
      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;

      Anlage.RESET;
      //Anlage.SETFILTER(Anlage."No. Series",'%1',v_anlagenrserie);
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FINDFIRST THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D22:=v_D22+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D31:=v_D31+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D33:=v_D33+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D35:=v_D35+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D37:=v_D37+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************

          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D39:=v_D39+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D41:=v_D41+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_D43:=v_D43+Anlpost1."Debit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;

      EnterCell(20,5,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,5,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,5,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,5,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,5,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,5,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,5,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,5,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_Zugang_GJ_0135:=v_D22;
      v_Zugang_GJ_0520:=v_D39;
      v_Zugang_GJ_0650:=v_D33;
      v_Zugang_GJ_0651:=v_D35;
      v_Zugang_GJ_0680:=v_D37;
      v_Zugang_GJ_0690:=v_D31;
      v_Zugang_GJ_0698:=v_D41;
      //  Spalte E ENDE ******************************************************************************************



      //  Spalte F + G noch šberprfen
      //  Spalte F  Zug„nge  Abfrage nach Option Restwert = 7  *****************************++++*******************
      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;

      Anlage.RESET;
      //Anlage.SETFILTER(Anlage."No. Series",'%1',v_anlagenrserie);
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FINDFIRST THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  v_D22:=v_D22+Anlpost."Credit Amount";
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  v_D31:=v_D31+Anlpost."Credit Amount";
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
               Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  v_D33:=v_D33+Anlpost."Credit Amount";
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  v_D35:=v_D35+Anlpost."Credit Amount";
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0651    **********************************************************************************
      {
          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
       //       Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1|%2',Anlpost1."FA Posting Type"::"Acquisition Cost",Anlpost1."FA Posting Type"::"Salvage Value");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  v_D39:=v_D39+Anlpost1."Credit Amount"+Anlpost1."Debit Amount"+Anlpost1."Debit Amount";
                UNTIL Anlpost1.NEXT=0;
              END;
             END;
          END;  // Ende von 0520    **********************************************************************************
      }

          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
      //      MESSAGE('Anlagedatum=30062019');
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                      IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D39:=v_D39+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;

      {
            IF ((Anlage."Datum Abgang"=30062019) AND (Anlage."No."=706)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                      IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D39:=v_D39+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;

      }

          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  v_D41:=v_D41+Anlpost."Credit Amount";
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0698    **********************************************************************************

           IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
             IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
               Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
               IF Anlpost1.FIND('-') THEN BEGIN
                 REPEAT
                   v_D43:=v_D43+Anlpost."Credit Amount";
                 UNTIL Anlpost1.NEXT=0;
               END;
             END;
           END;  // Ende von 0670    **********************************************************************************


          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                      IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D37:=v_D37+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0680    **********************************************************************************



        UNTIL Anlage.NEXT=0;
      END;

      EnterCell(20,6,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,6,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,6,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,6,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,6,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,6,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,6,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,6,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //  Spalte F ENDE ******************************************************************************************


      {
      //  Spalte F + G noch šberprfen

      //  Spalte G AfA   Abfrage nach Option Restwert = 8  ********************************************************

      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;

      Anlage.RESET;
      //Anlage.SETFILTER(Anlage."No. Series",'%1',v_anlagenrserie);
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FINDFIRST THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D22:=v_D22+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D31:=v_D31+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D33:=v_D33+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D35:=v_D35+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0651    **********************************************************************************
      {
          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                  Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                      v_D37:=v_D37+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    ********************************************************************************
      }
      //  Neu Test Darin enthaltene AFA
          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',Anlpost."FA Posting Type"::Depreciation);
        //            Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                       v_D37:=v_D37+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0680    **********************************************************************************


      {
          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
      //      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                Anlpost.RESET;
                Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                IF Anlpost.FIND('-') THEN BEGIN
                  REPEAT
                    IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D37:=v_D37+Anlpost."Debit Amount";
                  UNTIL Anlpost.NEXT=0;
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************

      }


          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D39:=v_D39+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D41:=v_D41+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  IF Anlpost1."FA Posting Type"=7 THEN BEGIN
                    Anlpost.RESET;
                    Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                    Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
                    Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
                    IF Anlpost.FIND('-') THEN BEGIN
                      REPEAT
                        v_D43:=v_D43+Anlpost."Debit Amount";
                      UNTIL Anlpost.NEXT=0;
                    END;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;

      EnterCell(20,7,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,7,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,7,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,7,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,7,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,7,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,7,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,7,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //  Spalte G ENDE ******************************************************************************************


      }



      //  Spalte G Anfang*****************************************************************************************

      //  ********************************************************************************************************
      //   Hier Umbuchungen einfgen, falls gebraucht
      //  ********************************************************************************************************
      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
            IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
      //      Anlpost.SETFILTER(Anlpost."FA Posting Date",'<%1',Datum_ab);
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            Anlpost.SETFILTER(Anlpost."Reclassification Entry",'%1',TRUE);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D41:=v_D41+Anlpost.Amount;
              UNTIL Anlpost.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************

      {
          IF Anlage."No. Series"='0680' THEN BEGIN   //  Errechnung der Abg„nge des lfd Jahres *************************************************************
            IF ((Anlage."Datum Abgang">=Datum_ab) AND (Anlage."Datum Abgang"<=Datum_bis)) THEN BEGIN
              Anlpost1.RESET;
              Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
              Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
              Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
              IF Anlpost1.FIND('-') THEN BEGIN
                REPEAT
                  Anlpost.RESET;
                  Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
                  IF Anlpost.FIND('-') THEN BEGIN
                    REPEAT
                      IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D37_1:=v_D37_1+Anlpost."Debit Amount";
                    UNTIL Anlpost.NEXT=0;
                  END;
                UNTIL Anlpost1.NEXT=0;
              END;
            END;
          END;  // Ende von 0680    **********************************************************************************
      }
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,7,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,7,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,7,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,7,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,7,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,7,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,7,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,7,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //  Spalte G ENDE    *******************************************************************************************


      //  Spalte H  ANFANG *******************************************************************************************

      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D37_1:=0;
      v_D37_2:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D22:=v_D22+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D31:=v_D31+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D33:=v_D33+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D35:=v_D35+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37:=v_D37+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************



          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37_1:=v_D37_1+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
      //      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT

                IF ((Anlpost1."FA Posting Date"=31033021D) OR (Anlpost1."FA Posting Date"=30032321D)) THEN BEGIN
                  v_D37_2:=v_D37_2+Anlpost1.Amount;
                END ELSE BEGIN
                  IF ((Anlpost1."FA Posting Date"<=Datum_ab) AND (Anlpost1."FA Posting Date">=Datum_bis)) THEN BEGIN
                    v_D37_2:=v_D37_2+Anlpost1.Amount;
                  END;
                END;

              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************


          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."Entry No."=523) OR (Anlpost1."Entry No."=704)) THEN BEGIN
                END ELSE BEGIN
                  v_D39:=v_D39+Anlpost1."Credit Amount";
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D41:=v_D41+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************


          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D43:=v_D43+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;

      ColumnNo := 8;
      EnterCell(20,ColumnNo,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,ColumnNo,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,ColumnNo,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,ColumnNo,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,ColumnNo,FORMAT(v_D37-v_D37_1-v_D37_2),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //EnterCell(35,ColumnNo,FORMAT(v_D37_2),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,ColumnNo,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,ColumnNo,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,ColumnNo,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_AfA_kum_GJ_0135:=v_D22;
      v_AfA_kum_GJ_0520:=v_D39;
      v_AfA_kum_GJ_0650:=v_D33;
      v_AfA_kum_GJ_0651:=v_D35;
      v_AfA_kum_GJ_0680:=v_D37;
      v_AfA_kum_GJ_0690:=v_D31;
      v_AfA_kum_GJ_0698:=v_D41;

      v_Umb_GJ_0135:=v_D22;
      v_Umb_GJ_0520:=v_D39;
      v_Umb_GJ_0650:=v_D33;
      v_Umb_GJ_0651:=v_D35;
      v_Umb_GJ_0680:=v_D37;
      v_Umb_GJ_0690:=v_D31;
      v_Umb_GJ_0698:=v_D41;
      //  Spalte H  ENDE    ******************************************************************************************


      //  Spalte I ANFANG   ******************************************************************************************
      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D22:=v_D22+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-')THEN BEGIN
              REPEAT
                v_D31:=v_D31+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D33:=v_D33+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D35:=v_D35+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37:=v_D37+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************

          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D39:=v_D39+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-')THEN BEGIN
              REPEAT
                v_D41:=v_D41+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D43:=v_D43+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;

      ColumnNo := 9;
      EnterCell(20,ColumnNo,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,ColumnNo,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,ColumnNo,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,ColumnNo,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,ColumnNo,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,ColumnNo,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,ColumnNo,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,ColumnNo,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_Afa_GJ_0135:=v_D22;
      v_Afa_GJ_0520:=v_D39;
      v_Afa_GJ_0650:=v_D33;
      v_Afa_GJ_0651:=v_D35;
      v_Afa_GJ_0680:=v_D37;
      v_Afa_GJ_0690:=v_D31;
      v_Afa_GJ_0698:=v_D41;
      //  Spalte I  ENDE    ******************************************************************************************



      //  Spalte J  ANFANG  ******************************************************************************************
      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Appreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D22:=v_D22+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Appreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-')THEN BEGIN
              REPEAT
                v_D31:=v_D31+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Appreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D33:=v_D33+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Appreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D35:=v_D35+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Appreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37:=v_D37+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************

          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Appreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D39:=v_D39+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Appreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-')THEN BEGIN
              REPEAT
                v_D41:=v_D41+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D43:=v_D43+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;

      ColumnNo := 10;
      EnterCell(20,ColumnNo,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,ColumnNo,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,ColumnNo,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,ColumnNo,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,ColumnNo,FORMAT(v_D37),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,ColumnNo,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,ColumnNo,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,ColumnNo,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //  Spalte J      ******************************************************************************************



      //  Spalte L      ******************************************************************************************

      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D37_1:=0;
      v_D37_2:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D22:=v_D22+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D31:=v_D31+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D33:=v_D33+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D35:=v_D35+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37:=v_D37+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************



          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37_1:=v_D37_1+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
      //      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT

                IF ((Anlpost1."FA Posting Date"=31033021D) OR (Anlpost1."FA Posting Date"=30032321D)) THEN BEGIN
                  v_D37_2:=v_D37_2+Anlpost1.Amount;
                END ELSE BEGIN
                  IF ((Anlpost1."FA Posting Date"<=Datum_ab) AND (Anlpost1."FA Posting Date">=Datum_bis)) THEN BEGIN
                    v_D37_2:=v_D37_2+Anlpost1.Amount;
                  END;
                END;

              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************


          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."Entry No."=523) OR (Anlpost1."Entry No."=704)) THEN BEGIN
                END ELSE BEGIN
                  v_D39:=v_D39+Anlpost1."Credit Amount";
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D41:=v_D41+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************


          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D43:=v_D43+Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;

      ColumnNo := 12;
      EnterCell(20,ColumnNo,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,ColumnNo,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,ColumnNo,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,ColumnNo,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,ColumnNo,FORMAT(v_D37-v_D37_1-v_D37_2),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //EnterCell(35,ColumnNo,FORMAT(v_D37_2),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,ColumnNo,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,ColumnNo,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,ColumnNo,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_AfA_kum_GJ_0135:=v_D22;
      v_AfA_kum_GJ_0520:=v_D39;
      v_AfA_kum_GJ_0650:=v_D33;
      v_AfA_kum_GJ_0651:=v_D35;
      v_AfA_kum_GJ_0680:=v_D37;
      v_AfA_kum_GJ_0690:=v_D31;
      v_AfA_kum_GJ_0698:=v_D41;
      //  Spalte L  ENDE  ********************************************************************************************



      //  Spalte M Buchwert  ANFANG **********************************************************************************

      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D37_1:=0;
      v_D37_2:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D22:=v_D22+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D31:=v_D31+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D33:=v_D33+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D35:=v_D35+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37:=v_D37+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;

          IF Anlage."No. Series"='0680' THEN BEGIN
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Book Value on Disposal");
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Date"=31033021D) OR (Anlpost1."FA Posting Date"=30032321D)) THEN BEGIN
                  v_D37_1:=v_D37_1+Anlpost1.Amount;
                END ELSE BEGIN
                  IF ((Anlpost1."FA Posting Date"<=Datum_ab) AND (Anlpost1."FA Posting Date">=Datum_bis)) THEN BEGIN
                    v_D37_1:=v_D37_1+Anlpost1.Amount;
                  END;
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************


          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D39:=v_D39+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D41:=v_D41+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D43:=v_D43+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;

      ColumnNo := 13;
      EnterCell(20,ColumnNo,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,ColumnNo,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,ColumnNo,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,ColumnNo,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,ColumnNo,FORMAT(v_D37-v_D37_1),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,ColumnNo,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,ColumnNo,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,ColumnNo,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_Buchwert_GJ_0135:=v_D22;
      v_Buchwert_GJ_0520:=v_D39;
      v_Buchwert_GJ_0650:=v_D33;
      v_Buchwert_GJ_0651:=v_D35;
      v_Buchwert_GJ_0680:=v_D37;
      v_Buchwert_GJ_0690:=v_D31;
      v_Buchwert_GJ_0698:=v_D41;

      //  Spalte M Buchwert ENDE GJ   ********************************************************************************



      //  Spalte N Buchwert Anfang GJ  *******************************************************************************

      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          IF Anlage."No. Series"='0135' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D22:=v_D22+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0135    **********************************************************************************

          IF Anlage."No. Series"='0690' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D31:=v_D31+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0690    **********************************************************************************

          IF Anlage."No. Series"='0650' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D33:=v_D33+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0650    **********************************************************************************

          IF Anlage."No. Series"='0651' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D35:=v_D35+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0651    **********************************************************************************

      //    IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
      //      Anlpost1.RESET;
      //      Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      //      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
      //      Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
      //      IF Anlpost1.FIND('-') THEN BEGIN
      //        REPEAT
      //          v_D37:=v_D37+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
      //         UNTIL Anlpost1.NEXT=0;
      //      END;
      //    END;  // Ende von 0680    **********************************************************************************

          IF Anlage."No. Series"='0680' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D37:=v_D37+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;
      {
          IF Anlage."No. Series"='0680' THEN BEGIN
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Book Value on Disposal");
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                IF ((Anlpost1."FA Posting Date"=31033021D) OR (Anlpost1."FA Posting Date"=30032321D)) THEN BEGIN
                  v_D37_1:=v_D37_1+Anlpost1.Amount;
                END ELSE BEGIN
                  IF ((Anlpost1."FA Posting Date"<=Datum_ab) AND (Anlpost1."FA Posting Date">=Datum_bis)) THEN BEGIN
                    v_D37_1:=v_D37_1+Anlpost1.Amount;
                  END;
                END;
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0680    **********************************************************************************
      }


          IF Anlage."No. Series"='0520' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D39:=v_D39+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0520    **********************************************************************************

          IF Anlage."No. Series"='0698' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D41:=v_D41+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0698    **********************************************************************************

          IF Anlage."No. Series"='0670' THEN BEGIN   //  *************************************************************
            Anlpost1.RESET;
            Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
            Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost1.FIND('-') THEN BEGIN
              REPEAT
                v_D43:=v_D43+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
              UNTIL Anlpost1.NEXT=0;
            END;
          END;  // Ende von 0670    **********************************************************************************
        UNTIL Anlage.NEXT=0;
      END;

      ColumnNo := 14;
      EnterCell(20,ColumnNo,FORMAT(v_D22),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,ColumnNo,FORMAT(v_D31),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,ColumnNo,FORMAT(v_D33),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,ColumnNo,FORMAT(v_D35),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,ColumnNo,FORMAT(v_D37-v_D37_1),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,ColumnNo,FORMAT(v_D39),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,ColumnNo,FORMAT(v_D41),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,ColumnNo,FORMAT(v_D43),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      v_Buchwert_VJ_0135:=v_D22;
      v_Buchwert_VJ_0520:=v_D39;
      v_Buchwert_VJ_0650:=v_D33;
      v_Buchwert_VJ_0651:=v_D35;
      v_Buchwert_VJ_0680:=v_D37;
      v_Buchwert_VJ_0690:=v_D31;
      v_Buchwert_VJ_0698:=v_D41;
      //  Spalte N   ENDE   ******************************************************************************************



      //EnterCell(3,1,'Spalte F + G noch berprfen/anpassen','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      {

      //  Das Datum der automatischen Buchung wird zur Abfrage gebraucht umd muss deshalb das Abgangsdatum im GJ sein

      // Zeile 20   0350
      v_sp4d:=0;
      v_sp5e:=0;
      v_sp6f:=0;
      v_sp7g:=0;
      v_sp8h:=0;
      v_sp9i:=0;
      v_sp11k:=0;
      v_sp12l:=0;
      v_sp13m:=0;
      v_sp14n:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      Anlage.SETFILTER(Anlage."No. Series",'%1','0135');
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          Anlpost.RESET;
          Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
          IF Anlpost.FIND('-') THEN BEGIN
            REPEAT
              IF (((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) AND (Anlpost."FA Posting Date" < Datum_ab)) THEN v_sp4d:=v_sp4d+Anlpost."Debit Amount";
              IF (((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) AND ((Anlpost."FA Posting Date" >= Datum_ab) AND (Anlpost."FA Posting Date" <= Datum_bis))) THEN v_sp5e:=v_sp5e+Anlpost."Debit Amount";



            UNTIL Anlpost.NEXT=0;
          END;

        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,4,FORMAT(v_sp4d),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(20,5,FORMAT(v_sp5e),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      // Ende Zeile 20  0135

      }

      {
      ColumnNo := 15;
      EnterCell(20,ColumnNo,FORMAT(v_Anschaff_VJ_0135+v_Zugang_GJ_0135-v_Anschaff_GJ_0135+v_Umb_GJ_0135),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,ColumnNo,FORMAT(v_Anschaff_VJ_0690+v_Zugang_GJ_0690-v_Anschaff_GJ_0690+v_Umb_GJ_0690),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,ColumnNo,FORMAT(v_Anschaff_VJ_0650+v_Zugang_GJ_0650-v_Anschaff_GJ_0650+v_Umb_GJ_0650),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,ColumnNo,FORMAT(v_Anschaff_VJ_0651+v_Zugang_GJ_0651-v_Anschaff_GJ_0651+v_Umb_GJ_0651),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,ColumnNo,FORMAT(v_Anschaff_VJ_0680+v_Zugang_GJ_0680-v_Anschaff_GJ_0680+v_Umb_GJ_0680),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,ColumnNo,FORMAT(v_Anschaff_VJ_0520+v_Zugang_GJ_0520-v_Anschaff_GJ_0520+v_Umb_GJ_0520),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,ColumnNo,FORMAT(v_Anschaff_VJ_0698+v_Zugang_GJ_0698-v_Anschaff_GJ_0698+v_Umb_GJ_0698),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      ColumnNo += 1;
      EnterCell(20,ColumnNo,FORMAT(v_Buchwert_GJ_0135+v_AfA_kum_GJ_0135-v_Anschaff_GJ_0135),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,ColumnNo,FORMAT(v_Buchwert_GJ_0690+v_AfA_kum_GJ_0690-v_Anschaff_GJ_0690),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,ColumnNo,FORMAT(v_Buchwert_GJ_0650+v_AfA_kum_GJ_0650-v_Anschaff_GJ_0650),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,ColumnNo,FORMAT(v_Buchwert_GJ_0651+v_AfA_kum_GJ_0651-v_Anschaff_GJ_0651),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,ColumnNo,FORMAT(v_Buchwert_GJ_0680+v_AfA_kum_GJ_0680-v_Anschaff_GJ_0680),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,ColumnNo,FORMAT(v_Buchwert_GJ_0520+v_AfA_kum_GJ_0520-v_Anschaff_GJ_0520),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,ColumnNo,FORMAT(v_Buchwert_GJ_0698+v_AfA_kum_GJ_0698-v_Anschaff_GJ_0698),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      ColumnNo += 1;
      EnterCell(20,ColumnNo,FORMAT(v_Buchwert_VJ_0135-v_Afa_GJ_0135+v_Zugang_GJ_0135-v_Buchwert_GJ_0135+v_Umb_GJ_0135),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,ColumnNo,FORMAT(v_Buchwert_VJ_0690-v_Afa_GJ_0690+v_Zugang_GJ_0690-v_Buchwert_GJ_0690+v_Umb_GJ_0690),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,ColumnNo,FORMAT(v_Buchwert_VJ_0650-v_Afa_GJ_0650+v_Zugang_GJ_0650-v_Buchwert_GJ_0650+v_Umb_GJ_0650),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,ColumnNo,FORMAT(v_Buchwert_VJ_0651-v_Afa_GJ_0651+v_Zugang_GJ_0651-v_Buchwert_GJ_0651+v_Umb_GJ_0651),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,ColumnNo,FORMAT(v_Buchwert_VJ_0680-v_Afa_GJ_0680+v_Zugang_GJ_0680-v_Buchwert_GJ_0680+v_Umb_GJ_0680),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,ColumnNo,FORMAT(v_Buchwert_VJ_0520-v_Afa_GJ_0520+v_Zugang_GJ_0520-v_Buchwert_GJ_0520+v_Umb_GJ_0520),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,ColumnNo,FORMAT(v_Buchwert_VJ_0698-v_Afa_GJ_0698+v_Zugang_GJ_0698-v_Buchwert_GJ_0698+v_Umb_GJ_0698),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      }

      CloseExcel_Anlagenspiegel('Anlagespiegel_'+v_date_jahr2,'Anlagespiegel_'+v_date_jahr2,'R:\GDPDU\Anlagenkartei\'+v_date_jahr2+'\');
      MESSAGE(' Das Holen des Anlagespiegels wurde ausgefhrt und nach F:GDPDU_Anlagenkartei_'+v_date_jahr2+'_ gespeichert.');

      v_D22:=0;
      v_D31:=0;
      v_D33:=0;
      v_D35:=0;
      v_D37:=0;
      v_D39:=0;
      v_D41:=0;
      v_D43:=0;
    END;

    LOCAL PROCEDURE Afa_Jahresbersicht@1000000007();
    BEGIN
      CreateExcel;
      v_date_jahr1:=FORMAT(DATE2DMY(Datum_ab,3));
      v_date_jahr2:=FORMAT(DATE2DMY(Datum_bis,3));
      RowNo := 1;
      EnterCell(RowNo,1,'TOPAS electronic AG','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Afa_šbersicht fr das Jahr '+v_date_jahr2,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'gedruckt am:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 4;
      EnterCell(RowNo,1,'Ger„te-Nr.:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Gegenstand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Abschreibungsdatum:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Abschreibungsart:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Abschreibungsbetrag:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Afa Sachkto. Jahr:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,7,'Afa 1/12:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Sachkonto:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Jul','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Aug','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Sep','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Okt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Nov','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Dez','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'Jan','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'Feb','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'M„r','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'Apr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'Mai','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'Jun','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      v_anlagenr:=' ';
      v_anlwertgesamt:= 0;
      RowNo := 5;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'<>%1',TRUE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
          Anlpost.RESET;
          Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
          Anlpost.SETFILTER(Anlpost."FA Posting Date",'%1',Datum_bis);
          Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
          IF Anlpost.FIND('-') THEN BEGIN
            REPEAT
              IF v_anlagenr<> FORMAT(Anlpost."FA Posting Group") THEN BEGIN
                EnterCell(RowNo,6,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //          EnterCell(RowNo,7,FORMAT(v_anlwert/12),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                RowNo := RowNo +2 ;
                v_anlwert:= 0;
              END;
              EnterCell(RowNo,1,FORMAT(Anlpost."FA No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(Anlage.Description),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(Anlpost."FA Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,4,FORMAT(Anlpost."Depreciation Method"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(Anlpost."Credit Amount"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              v_anlwert:= (v_anlwert + (Anlpost."Credit Amount"));
              v_anlwertgesamt:= (v_anlwertgesamt+ (Anlpost."Credit Amount"));
              RowNo := RowNo + 1;
              v_anlagenr:=Anlpost."FA Posting Group";
            UNTIL Anlpost.NEXT=0;
          END;
        UNTIL Anlage.NEXT=0;
      END;

      EnterCell(RowNo,6,FORMAT(v_anlwert),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      //EnterCell(RowNo,7,FORMAT(v_anlwert/12),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);

      RowNo := RowNo + 1;
      EnterCell(RowNo,3,'Gesamt Afa Jahr:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,FORMAT(v_anlwertgesamt),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel_Anlagenbersicht('Afa_Jahresbersicht_'+v_date_jahr2,'Afa_Jahresbersicht_'+v_date_jahr2,'R:\GDPDU\Anlagenkartei\'+v_date_jahr2+'\');
      MESSAGE(' Das Holen der Afa_Jahresbersicht wurde ausgefhrt und nach F:GDPDU_Anlagenkartei_'+v_date_jahr2+'_ gespeichert.');
    END;

    LOCAL PROCEDURE CreateExcel@1000000010();
    BEGIN
      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);
    END;

    LOCAL PROCEDURE CloseExcel@1000000011(Sheetname@1000000000 : Text;FileName@1000000001 : Text;FilePath@1000000002 : Text);
    BEGIN
      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet(Sheetname,COMPANYNAME,USERID);
        //TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          IF (FileName = '') OR (FilePath = '') THEN TempExcelBuffer.OpenExcel //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
        ELSE
          TempExcelBuffer.OpenExcelWithoutAutoFit(Sheetname,FileName + ExcelFileExtensionTok,FilePath,TRUE);
        END;
      END;
      IF NOT Testmode THEN TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE EnterCell@1000000012(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];Formular@1000000008 : Text[250];Bold@1000000003 : Boolean;Italic@1000000004 : Boolean;UnderLine@1000000005 : Boolean;NumberFormat@1000000006 : Text[30];CellType@1000000007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := Formular;
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    LOCAL PROCEDURE UpdateCell@1000000013(RowNo@1000000008 : Integer;ColumnNo@1000000007 : Integer;CellValue@1000000006 : Text[250];Formular@1000000005 : Text[250];Bold@1000000004 : Boolean;Italic@1000000003 : Boolean;UnderLine@1000000002 : Boolean;NumberFormat@1000000001 : Text[30];CellType@1000000000 : Option);
    BEGIN
      IF TempExcelBuffer.GET(RowNo,ColumnNo)  THEN BEGIN
        TempExcelBuffer."Cell Value as Text" := CellValue;
        TempExcelBuffer.Formula := Formular;
        TempExcelBuffer.Bold := Bold;
        TempExcelBuffer.Italic := Italic;
        TempExcelBuffer.Underline := UnderLine;
        TempExcelBuffer.NumberFormat := NumberFormat;
        TempExcelBuffer."Cell Type" := CellType;
        TempExcelBuffer.MODIFY;
      END;
    END;

    LOCAL PROCEDURE CloseExcel_Anlagenkartei@1000000000(Sheetname@1000000002 : Text;FileName@1000000001 : Text;FilePath@1000000000 : Text);
    BEGIN
      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet(Sheetname,COMPANYNAME,USERID);
        TempExcelBuffer.SetWidth(1,'A',20);
        TempExcelBuffer.SetWidth(1,'B',30);

        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          IF (FileName = '') OR (FilePath = '') THEN TempExcelBuffer.OpenExcel //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
        ELSE
          TempExcelBuffer.OpenExcelWithoutAutoFit(Sheetname,FileName + ExcelFileExtensionTok,FilePath,TRUE);
        END;
      END;
      IF NOT Testmode THEN TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE CloseExcel_Anlagenspiegel@1000000001(Sheetname@1000000003 : Text;FileName@1000000002 : Text;FilePath@1000000001 : Text);
    BEGIN
      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet(Sheetname,COMPANYNAME,USERID);
        TempExcelBuffer.SetWidth(1,'A',3);
        TempExcelBuffer.SetWidth(1,'B',37);
        TempExcelBuffer.SetWidth(1,'C',3);
        TempExcelBuffer.SetWidth(1,'D',18);
        TempExcelBuffer.SetWidth(1,'E',12);
        TempExcelBuffer.SetWidth(1,'F',21);
        TempExcelBuffer.SetWidth(1,'G',18);
        TempExcelBuffer.SetWidth(1,'H',20);
        TempExcelBuffer.SetWidth(1,'I',19);
        TempExcelBuffer.SetWidth(1,'J',19);
        TempExcelBuffer.SetWidth(1,'K',18);
        TempExcelBuffer.SetWidth(1,'L',20);
        TempExcelBuffer.SetWidth(1,'M',15);
        TempExcelBuffer.SetWidth(1,'N',15);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          IF (FileName = '') OR (FilePath = '') THEN TempExcelBuffer.OpenExcel //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
        ELSE
          TempExcelBuffer.OpenExcelWithoutAutoFit(Sheetname,FileName + ExcelFileExtensionTok,FilePath,TRUE);
        END;
      END;
      IF NOT Testmode THEN TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE CloseExcel_Anlagenbersicht@1000000008(Sheetname@1000000002 : Text;FileName@1000000001 : Text;FilePath@1000000000 : Text);
    BEGIN
      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet(Sheetname,COMPANYNAME,USERID);
        TempExcelBuffer.SetWidth(1,'A',10);
        TempExcelBuffer.SetWidth(1,'B',42);
        TempExcelBuffer.SetWidth(1,'C',15);
        TempExcelBuffer.SetWidth(1,'D',15);
        TempExcelBuffer.SetWidth(1,'E',15);
        TempExcelBuffer.SetWidth(1,'F',15);
        TempExcelBuffer.SetWidth(1,'G',15);
        TempExcelBuffer.SetWidth(1,'H',15);
        TempExcelBuffer.SetWidth(1,'I',15);

        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          IF (FileName = '') OR (FilePath = '') THEN TempExcelBuffer.OpenExcel //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
        ELSE
          TempExcelBuffer.OpenExcelWithoutAutoFit(Sheetname,FileName + ExcelFileExtensionTok,FilePath,TRUE);
        END;
      END;
      IF NOT Testmode THEN TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE Export_LB_mit_Produktbuchgrp@1000000002();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Artikel-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Hersteller','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Produktbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Belegnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'lfd Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Lagerwert pro Einheit','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      Artikelposten.RESET;
      Artikelposten.SETFILTER(Artikelposten."Remaining Quantity",'<>%1',0);
      IF Artikelposten.FIND('-') THEN BEGIN
        REPEAT
          Wertposten.RESET;
          Wertposten.SETFILTER(Wertposten."Item Ledger Entry No.",'%1',Artikelposten."Entry No.");
          Wertposten.SETFILTER(Wertposten."Item Ledger Entry Quantity",'<>%1',0);
          IF Wertposten.FIND('-') THEN BEGIN
            REPEAT
              EnterCell(RowNo,1,Artikelposten."Item No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(Artikelposten."Remaining Quantity"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              Artikel.RESET;
              Artikel.SETFILTER(Artikel."No.",'%1',Wertposten."Item No.");
              //   Artikel.SETFILTER(Artikel."Manufacturer Code",'%1','59');
              IF Artikel.FIND('-') THEN BEGIN
                EnterCell(RowNo,3,Artikel."Manufacturer Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,4,Wertposten."Gen. Prod. Posting Group",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,Wertposten."Document No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(Wertposten."Item Ledger Entry No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(Wertposten."Cost per Unit"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,8,FORMAT(Artikelposten."Serial No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,9,FORMAT(Artikelposten."Lot No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              RowNo := RowNo + 1;
            UNTIL Wertposten.NEXT=0;
          END;
        UNTIL Artikelposten.NEXT=0;
      END;
      CloseExcel('Lager mit Produktbuchgrp','Lager mit Produktbuchgrp','R:\GDPDU');
      MESSAGE(' Das Holen des Lagerbestand mit Produktbuchgrp wurde ausgefhrt.');
    END;

    LOCAL PROCEDURE Umsatzsteuerabstimmung_Kalenderjahr@1000000003();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'USt-Abstimmung Kalenderjahr 2018','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,1,'Sachkto','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Beschreibung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,3,'Saldo'+FORMAT(v_endedat_vj),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Soll','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Haben','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Saldo'+FORMAT(v_endedat_gj),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'positve Zahl =Sollsaldo','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      EnterCell(RowNo,6,'negative Zahl=Habensaldo','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 4;
      Sachkont.RESET;
      Sachkont.SETFILTER(Sachkont."No.",'%1..%2','4000','9999');
      IF Sachkont.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=0;
          saldo_sum_vj:=0;
          soll_sum:=0;
          haben_sum:=0;
          //  Vorjahr
      {
          Sachpost.RESET;
          Sachpost.SETFILTER(Sachpost."G/L Account No.",'%1',Sachkont."No.");
          Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,v_endedat_vj);
      //  Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,300612D);
      //  Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,311214D);
          IF Sachpost.FINDFIRST() THEN BEGIN
            REPEAT
              saldo_sum_vj:=saldo_sum_vj + Sachpost.Amount;
            UNTIL Sachpost.NEXT=0;
          END;
      }
          //  Soll + Haben Spalten
          Sachpost.RESET;
          Sachpost.SETFILTER(Sachpost."G/L Account No.",'%1',Sachkont."No.");
          //    Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',Datum_ab,Datum_bis);
          //    Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',v_startdat_gj,v_endedat_gj);
          //  Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010712D,300613D);
          Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2|%3..%4',010118D,300618D,010718D,311218D);
          IF Sachpost.FIND('-') THEN BEGIN
            REPEAT
              soll_sum:=soll_sum + Sachpost."Debit Amount";
              haben_sum:=haben_sum + Sachpost."Credit Amount";
            UNTIL Sachpost.NEXT=0;
          END;

          //  Saldo lfd Jahr
          Sachpost.RESET;
          Sachpost.SETFILTER(Sachpost."G/L Account No.",'%1',Sachkont."No.");
          IF Sachkont."Income/Balance"=Sachkont."Income/Balance"::"Income Statement" THEN BEGIN
            //      Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',Datum_ab,Datum_bis);
            //      Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,v_endedat_gj);
            //    Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,300613D);
            Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2|%3..%4',010118D,300618D,010718D,311218D);
              IF Sachpost.FIND('-') THEN BEGIN
                REPEAT
                  saldo_sum:=saldo_sum + Sachpost.Amount;
                UNTIL Sachpost.NEXT=0;
              END;
              saldo_sum_vj:=0;
            END ELSE BEGIN
            //      Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,v_endedat_gj);
            //    Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2',010700D,300613D);
            Sachpost.SETFILTER(Sachpost."Posting Date",'%1..%2|%3..%4',010118D,300618D,010718D,311218D);
            IF Sachpost.FIND('-') THEN BEGIN
              REPEAT
                saldo_sum:=saldo_sum + Sachpost.Amount;
              UNTIL Sachpost.NEXT=0;
            END;
          END;
          IF ((saldo_sum=0) AND (soll_sum=0) AND (haben_sum=0) AND (saldo_sum_vj=0)) THEN BEGIN
          END ELSE BEGIN
            EnterCell(RowNo,1,FORMAT(Sachkont."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Sachkont.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //      EnterCell(RowNo,3,FORMAT(saldo_sum_vj),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,3,FORMAT(soll_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(haben_sum*(-1)),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

            EnterCell(RowNo,7,FORMAT(Sachkont."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,8,FORMAT(Sachkont."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,FORMAT(Sachkont."VAT Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,10,FORMAT(Sachkont."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

            RowNo := RowNo + 1;
          END;
        UNTIL Sachkont.NEXT=0;
      END;
      CloseExcel('USt_Abstimmung_KJ','USt_Abstimmung_KJ','R:\GDPDU');
      MESSAGE(' Die USt-Abstimmung fr ein Kalenderjahr wurde ausgefhrt. ');
    END;

    LOCAL PROCEDURE "Summenliste Kreditoren"@1000000004();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Kreditorkto','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Beschreibung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Saldo'+FORMAT(v_endedat_vj),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Soll','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Haben','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Saldo'+FORMAT(v_endedat_gj),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'positve Zahl =Sollsaldo','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,7,'negative Zahl=Habensaldo','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      Kreditor.RESET;
      Kreditor.SETFILTER(Kreditor."No.",'%1..%2','550000','999999');
      IF Kreditor.FIND('-') THEN BEGIN
        REPEAT
          saldo_sum:=0;
          saldo_sum_vj:=0;
          soll_sum:=0;
          haben_sum:=0;
          //  Vorjahr
          Kredpost.RESET;
          Kredpost.SETFILTER(Kredpost."Vendor No.",'%1',Kreditor."No.");
          Kredpost.SETFILTER(Kredpost."Posting Date",'%1..%2',010700D,v_endedat_vj);
          IF Kredpost.FIND('-') THEN BEGIN
            REPEAT
              Kredpost.CALCFIELDS(Kredpost."Amount (LCY)",Kredpost."Debit Amount (LCY)",Kredpost."Credit Amount (LCY)");
              saldo_sum_vj:=saldo_sum_vj + Kredpost."Amount (LCY)";
            UNTIL Kredpost.NEXT=0;
          END;

          //  Soll + Haben Spalten
          Kredpost.RESET;
          Kredpost.SETFILTER(Kredpost."Vendor No.",'%1',Kreditor."No.");
          Kredpost.SETFILTER(Kredpost."Posting Date",'%1..%2',v_startdat_gj,v_endedat_gj);
          IF Kredpost.FIND('-') THEN BEGIN
            REPEAT
              Kredpost.CALCFIELDS(Kredpost."Amount (LCY)",Kredpost."Debit Amount (LCY)",Kredpost."Credit Amount (LCY)");
              soll_sum:=soll_sum + Kredpost."Debit Amount (LCY)";
              haben_sum:=haben_sum + Kredpost."Credit Amount (LCY)";
            UNTIL Kredpost.NEXT=0;
          END;

          //  Saldo lfd Jahr
          Kredpost.RESET;
          Kredpost.SETFILTER(Kredpost."Vendor No.",'%1',Kreditor."No.");
          Kredpost.SETFILTER(Kredpost."Posting Date",'%1..%2',010700D,v_endedat_gj);
          IF Kredpost.FIND('-') THEN BEGIN
            REPEAT
              Kredpost.CALCFIELDS(Kredpost."Amount (LCY)",Kredpost."Debit Amount (LCY)",Kredpost."Credit Amount (LCY)");
              saldo_sum:=(saldo_sum + Kredpost."Amount (LCY)");
            UNTIL Kredpost.NEXT=0;
          END;
          IF ((saldo_sum=0) AND (soll_sum=0) AND (haben_sum=0) AND (saldo_sum_vj=0)) THEN BEGIN
          END ELSE BEGIN
            EnterCell(RowNo,1,FORMAT(Kreditor."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,Kreditor.Name,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(saldo_sum_vj),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,FORMAT(soll_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,5,FORMAT(haben_sum*(-1)),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,6,FORMAT(saldo_sum),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo + 1;
          END;
        UNTIL Kreditor.NEXT=0;
      END;
      CloseExcel('Summenliste Kreditoren','Summenliste Kreditoren','R:\GDPDU');
      MESSAGE(' Das Holen der Summenliste Kreditoren wurde ausgefhrt. ');
    END;

    LOCAL PROCEDURE Anlagespiegel_neu@1000000009();
    BEGIN
      CreateExcel;
      v_date_jahr1:=FORMAT(DATE2DMY(Datum_ab,3));
      v_date_jahr2:=FORMAT(DATE2DMY(Datum_bis,3));

      EnterCell(2,7,'Brutto-Anlagespiegel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,7,'TOPAS electronic AG                       ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,7,'Hannover','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,7,FORMAT('zum ') + FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(1,16,'=Summe(D20+E20-I20)','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,16,'Anschaff VJ +','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,16,'Zugang GJ -  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,16,'Anschaff GJ  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,16,'             ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,16,'= 0,00       ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(1,17,'=Summe(M20+L20-I20+H20)','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,17,'Buchwert GJ +','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,17,'AfA kum GJ - ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,17,'Anschaff GJ + H20  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,17,'             ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,17,'= 0,00       ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(1,18,'=Summe(N20-K20+E20-M20)','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(2,18,'Buchwert VJ -','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(3,18,'AfA GJ +     ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(4,18,'Zugang GJ -  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(5,18,'Buchwert GJ  ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(6,18,'= 0,00       ','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //EnterCell(6,4,'___________________________________________________________________________________________________________________________________________________________________________','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(8,4,'Anschaffungs-/','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,5,'Zug„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,6,'Abg„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,8,'Umbuchungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,9,'Anschaffungs-/','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,11,'Zuschreibungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,12,'Abschreibungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,13,'Buchwert','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(8,14,'Buchwert','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,4,'Herstellungskosten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,6,'(ursprngliche','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,7,'((darin enthalten))','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,9,'Herstellungskosten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,11,'Abschreibungen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,12,'zzgl. AfA auf Abg„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,13,'per','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(9,14,'per','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,4,'(kumuliert)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,6,'Anschaffungskosten)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,7,'AfA auf Abg„nge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,9,'(kumuliert)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,11,'des Gesch„ftsjahres','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(10,12,'kumuliert bis','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,4,FORMAT(Datum_ab-1),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,5,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,6,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,7,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,8,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,9,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,11,FORMAT(v_date_jahr1)+'/'+FORMAT(v_date_jahr2),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(11,12,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(11,13,FORMAT(Datum_bis),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(11,14,FORMAT(Datum_ab-1),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(12,4,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,5,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,6,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,7,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,8,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,9,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,11,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,12,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      EnterCell(12,13,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(12,14,'°','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);


      //EnterCell(15,4,'___________________________________________________________________________________________________________________________________________________________________________','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text)
      EnterCell(15,1,'I.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(15,2,'Immaterielle Verm”gensgegenst„nde','',TRUE,TRUE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(17,2,'Entgeltlich erworbene Konzessionen,','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(18,2,'gewerbliche Schutzrechte und „hnliche','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(19,2,'Rechte und Werte sowie Lizenzen aus','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(20,2,'solchen Rechten und Werten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      EnterCell(24,1,'II.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(24,2,'Sachanlagen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(26,2,'Andere Anlagen, Betriebs-','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(27,2,'und Gesch„ftsausstattung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(29,2,'Betriebsausstattung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(31,2,'Broeinrichtung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(33,2,'PCs und Drucker','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(35,2,'Einbauten','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(37,2,'Kraftfahrzeuge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(39,2,'Anlagen im Bau','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(41,2,'Geringwertige Wirtschaftsgter','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      v_20_4:=0;
      v_20_5:=0;
      v_20_6:=0;
      v_20_7:=0;
      v_20_8:=0;
      v_20_9:=0;
      v_20_11:=0;
      v_20_12:=0;
      v_20_13:=0;
      v_20_14:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
         IF Anlage."No. Series"='0135' THEN Anlagespiegel_neu1;  // Aufruf Unterroutine; Konto: Immaterielle Verm”gensgegenst„nder
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(20,4,FORMAT(v_20_4),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(20,5,FORMAT(v_20_5),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(20,6,FORMAT(v_20_6),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(20,7,FORMAT(v_20_7),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(20,8,FORMAT(v_20_8),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(20,9,FORMAT(v_20_9),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(20,11,FORMAT(v_20_11),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(20,12,FORMAT(v_20_12),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(20,13,FORMAT(v_20_13),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(20,14,FORMAT(v_20_14),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);




      v_20_4:=0;
      v_20_5:=0;
      v_20_6:=0;
      v_20_7:=0;
      v_20_8:=0;
      v_20_9:=0;
      v_20_11:=0;
      v_20_12:=0;
      v_20_13:=0;
      v_20_14:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
         IF Anlage."No. Series"='0690' THEN Anlagespiegel_neu1;  // Aufruf Unterroutine; Konto: sonstige Betr./Gesch.-Ausstattung
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(29,4,FORMAT(v_20_4),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,5,FORMAT(v_20_5),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,6,FORMAT(v_20_6),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,7,FORMAT(v_20_7),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,8,FORMAT(v_20_8),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,9,FORMAT(v_20_9),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,11,FORMAT(v_20_11),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,12,FORMAT(v_20_12),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,13,FORMAT(v_20_13),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(29,14,FORMAT(v_20_14),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);



      v_20_4:=0;
      v_20_5:=0;
      v_20_6:=0;
      v_20_7:=0;
      v_20_8:=0;
      v_20_9:=0;
      v_20_11:=0;
      v_20_12:=0;
      v_20_13:=0;
      v_20_14:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
         IF Anlage."No. Series"='0650' THEN Anlagespiegel_neu1; // Aufruf Unterroutine; Konto: Broeinrichtung
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(31,4,FORMAT(v_20_4),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,5,FORMAT(v_20_5),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,6,FORMAT(v_20_6),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,7,FORMAT(v_20_7),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,8,FORMAT(v_20_8),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,9,FORMAT(v_20_9),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,11,FORMAT(v_20_11),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,12,FORMAT(v_20_12),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,13,FORMAT(v_20_13),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(31,14,FORMAT(v_20_14),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);




      v_20_4:=0;
      v_20_5:=0;
      v_20_6:=0;
      v_20_7:=0;
      v_20_8:=0;
      v_20_9:=0;
      v_20_11:=0;
      v_20_12:=0;
      v_20_13:=0;
      v_20_14:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
         IF Anlage."No. Series"='0651' THEN Anlagespiegel_neu1; // Aufruf Unterroutine; Konto: PC's/Drucker
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(33,4,FORMAT(v_20_4),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,5,FORMAT(v_20_5),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,6,FORMAT(v_20_6),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,7,FORMAT(v_20_7),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,8,FORMAT(v_20_8),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,9,FORMAT(v_20_9),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,11,FORMAT(v_20_11),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,12,FORMAT(v_20_12),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,13,FORMAT(v_20_13),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(33,14,FORMAT(v_20_14),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);




      v_20_4:=0;
      v_20_5:=0;
      v_20_6:=0;
      v_20_7:=0;
      v_20_8:=0;
      v_20_9:=0;
      v_20_11:=0;
      v_20_12:=0;
      v_20_13:=0;
      v_20_14:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
         IF Anlage."No. Series"='0680' THEN Anlagespiegel_neu1; // Aufruf Unterroutine; Konto: Einbauten in fremde Grundstcke
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(35,4,FORMAT(v_20_4),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,5,FORMAT(v_20_5),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,6,FORMAT(v_20_6),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,7,FORMAT(v_20_7),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,8,FORMAT(v_20_8),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,9,FORMAT(v_20_9),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,11,FORMAT(v_20_11),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,12,FORMAT(v_20_12),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,13,FORMAT(v_20_13),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(35,14,FORMAT(v_20_14),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);



      v_20_4:=0;
      v_20_5:=0;
      v_20_6:=0;
      v_20_7:=0;
      v_20_8:=0;
      v_20_9:=0;
      v_20_11:=0;
      v_20_12:=0;
      v_20_13:=0;
      v_20_14:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
         IF Anlage."No. Series"='0520' THEN Anlagespiegel_neu1; // Aufruf Unterroutine; Konto: PKW
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(37,4,FORMAT(v_20_4),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,5,FORMAT(v_20_5),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,6,FORMAT(v_20_6),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,7,FORMAT(v_20_7),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,8,FORMAT(v_20_8),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,9,FORMAT(v_20_9),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,11,FORMAT(v_20_11),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,12,FORMAT(v_20_12),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,13,FORMAT(v_20_13),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(37,14,FORMAT(v_20_14),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);





      v_20_4:=0;
      v_20_5:=0;
      v_20_6:=0;
      v_20_7:=0;
      v_20_8:=0;
      v_20_9:=0;
      v_20_11:=0;
      v_20_12:=0;
      v_20_13:=0;
      v_20_14:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
         IF Anlage."No. Series"='0698' THEN Anlagespiegel_neu1; // Aufruf Unterroutine; Konto: Anlagen im Bau
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(39,4,FORMAT(v_20_4),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,5,FORMAT(v_20_5),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,6,FORMAT(v_20_6),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,7,FORMAT(v_20_7),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,8,FORMAT(v_20_8),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,9,FORMAT(v_20_9),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,11,FORMAT(v_20_11),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,12,FORMAT(v_20_12),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,13,FORMAT(v_20_13),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(39,14,FORMAT(v_20_14),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);



      v_20_4:=0;
      v_20_5:=0;
      v_20_6:=0;
      v_20_7:=0;
      v_20_8:=0;
      v_20_9:=0;
      v_20_11:=0;
      v_20_12:=0;
      v_20_13:=0;
      v_20_14:=0;
      Anlage.RESET;
      Anlage.SETFILTER(Anlage.Inactive,'%1',FALSE);
      IF Anlage.FIND('-') THEN BEGIN
        REPEAT
         IF Anlage."No. Series"='0670' THEN Anlagespiegel_neu1;  // Aufruf Unterroutine; Konto: GWG bis 800,00 °
        UNTIL Anlage.NEXT=0;
      END;
      EnterCell(41,4,FORMAT(v_20_4),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,5,FORMAT(v_20_5),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,6,FORMAT(v_20_6),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,7,FORMAT(v_20_7),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,8,FORMAT(v_20_8),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,9,FORMAT(v_20_9),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,11,FORMAT(v_20_11),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,12,FORMAT(v_20_12),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,13,FORMAT(v_20_13),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
      EnterCell(41,14,FORMAT(v_20_14),'',FALSE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      CloseExcel_Anlagenspiegel('Anlagespiegel_test'+v_date_jahr2,'Anlagespiegel_test'+v_date_jahr2,'R:\GDPDU\Anlagenkartei\'+v_date_jahr2+'\');
      MESSAGE(' Das Holen des Anlagespiegels wurde ausgefhrt und nach F:GDPDU_Anlagenkartei_test'+v_date_jahr2+'_ gespeichert.');
    END;

    LOCAL PROCEDURE Anlagespiegel_neu1@1000000014();
    BEGIN
      // Wird durch LOCAL Anlagespiegel_neu()  aufgerufen

      // Spalte 4   D
      Anlpost1.RESET;
      Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
      Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
      IF Anlpost1.FIND('-') THEN BEGIN
        REPEAT
          IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_20_4:=v_20_4+Anlpost1."Debit Amount";
        UNTIL Anlpost1.NEXT=0;
      END;

      // Spalte 5   E
      Anlpost1.RESET;
      Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
      Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
      IF Anlpost1.FIND('-') THEN BEGIN
        REPEAT
          IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_20_5:=v_20_5+Anlpost1."Debit Amount";
        UNTIL Anlpost1.NEXT=0;
      END;

      // Spalte 6   F
      Anlpost1.RESET;
      Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
      Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
      Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
      IF Anlpost1.FIND('-') THEN BEGIN
        REPEAT
          v_20_6:=v_20_6+Anlpost."Credit Amount";
        UNTIL Anlpost1.NEXT=0;
      END;

      // Spalte 7   G
      Anlpost1.RESET;
      Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      Anlpost1.SETFILTER(Anlpost1."FA Posting Category",'%1',Anlpost1."FA Posting Category"::Disposal);
      Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::"Acquisition Cost");
      Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
      IF Anlpost1.FIND('-') THEN BEGIN
        REPEAT
          IF Anlpost1."FA Posting Type"=7 THEN BEGIN
            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlpost1."FA No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Type",'%1',1);
            Anlpost.SETFILTER(Anlpost.Description,'%1',Anlpost1.Description);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
                v_20_7:=v_20_7+Anlpost."Debit Amount";
              UNTIL Anlpost.NEXT=0;
            END;
          END;
        UNTIL Anlpost1.NEXT=0;
      END;


      // Spalte 8   H
      Anlpost1.RESET;
      Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      //Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
      Anlpost1.SETFILTER(Anlpost1."Reclassification Entry",'%1',TRUE);
      Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
      IF Anlpost1.FIND('-') THEN BEGIN
        REPEAT
          IF Anlpost1."Credit Amount"=0 THEN BEGIN
            IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_20_8:=v_20_8+Anlpost1."Debit Amount";
          END ELSE BEGIN
            IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_20_8:=v_20_8+Anlpost1."Credit Amount";//Anlagenbuchungsart=Anschaffungskosten=0;Zuschreibung=3;
          END;
      //    IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_20_8:=v_20_8+Anlpost1."Credit Amount";//Anlagenbuchungsart=Anschaffungskosten=0;Zuschreibung=3;
      //    IF (Anlpost1."FA No."='0680-0007') THEN v_20_9:=v_20_9+Anlpost1."Amount";
      //    IF (Anlpost1."FA No."='0680-0008') THEN v_20_9:=v_20_9+Anlpost1."Amount";

      //    IF (Anlpost1."FA No."='0698-0001') THEN v_20_9:=v_20_9+Anlpost1."Amount";
        UNTIL Anlpost1.NEXT=0;
      END;

      // Spalte 9   I
      Anlpost1.RESET;
      Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
      Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
      IF Anlpost1.FIND('-') THEN BEGIN
        REPEAT
      //    IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_20_9:=v_20_9+Anlpost1.Amount;
      //    IF ((Anlpost1."FA Posting Type"=0) AND (Anlpost1."FA No."='0698-0001')) THEN v_20_9:=v_20_9+Anlpost1."Debit Amount";
          IF ((Anlpost1."FA Posting Type"=0) OR (Anlpost1."FA Posting Type"=3)) THEN v_20_9:=v_20_9+Anlpost1."Debit Amount";
        UNTIL Anlpost1.NEXT=0;
      END;



      {

            Anlpost.RESET;
            Anlpost.SETFILTER(Anlpost."FA No.",'%1',Anlage."No.");
            Anlpost.SETFILTER(Anlpost."FA Posting Date",'<=%1',Datum_bis);
            Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
            IF Anlpost.FIND('-') THEN BEGIN
              REPEAT
      //          IF Anlpost."Reclassification Entry"=TRUE THEN BEGIN
      //            IF (((Anlpost."FA Posting Type"=0) AND (Anlpost."Reclassification Entry"=TRUE)) OR ((Anlpost."FA Posting Type"=3)AND (Anlpost."Reclassification Entry"=TRUE))) THEN v_D41:=v_D41+(Anlpost."Debit Amount"*(-1));
      //          END ELSE BEGIN
                  IF ((Anlpost."FA Posting Type"=0) OR (Anlpost."FA Posting Type"=3)) THEN v_D41:=v_D41+Anlpost.Amount;
      //          END;
              UNTIL Anlpost.NEXT=0;
            END;

      }


      // Spalte 11   K
      Anlpost1.RESET;
      Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1',Anlpost1."FA Posting Type"::Depreciation);
      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'%1..%2',Datum_ab,Datum_bis);
      Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
      IF Anlpost1.FIND('-') THEN BEGIN
        REPEAT
         IF (Anlpost1."FA Posting Type"=1) THEN v_20_11:=v_20_11+Anlpost1."Credit Amount";
        UNTIL Anlpost1.NEXT=0;
      END;


      // Spalte 12   L
      Anlpost1.RESET;
      Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      Anlpost1.SETFILTER(Anlpost1."FA Posting Type",'%1|%2',Anlpost1."FA Posting Type"::Depreciation,Anlpost1."FA Posting Type"::"Salvage Value");
      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
      Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
      IF Anlpost1.FIND('-') THEN BEGIN
        REPEAT
             IF (Anlpost1."FA Posting Type"=1) THEN  v_20_12:=v_20_12+Anlpost1."Credit Amount";
             IF ((Anlpost1."FA Posting Type"=7) AND (Anlpost1."FA No."='0520-0001')) THEN  v_20_12:=v_20_12+Anlpost1."Credit Amount";
             IF ((Anlpost1."FA Posting Type"=0) AND (Anlpost1."FA No."='0698-0001')) THEN  v_20_12:=v_20_12+Anlpost1."Debit Amount";
        UNTIL Anlpost1.NEXT=0;
      END;


      // Spalte 13   M
      Anlpost1.RESET;
      Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<=%1',Datum_bis);
      Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
      IF Anlpost1.FIND('-') THEN BEGIN
        REPEAT
          v_20_13:=v_20_13+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
        UNTIL Anlpost1.NEXT=0;
      END;


      // Spalte 14   N
      Anlpost1.RESET;
      Anlpost1.SETFILTER(Anlpost1."FA No.",'%1',Anlage."No.");
      Anlpost1.SETFILTER(Anlpost1."FA Posting Date",'<%1',Datum_ab);
      Anlpost1.SETFILTER(Anlpost1.Correction,'%1',FALSE);
      IF Anlpost1.FIND('-') THEN BEGIN
        REPEAT
          v_20_14:=v_20_14+Anlpost1."Debit Amount"-Anlpost1."Credit Amount";
        UNTIL Anlpost1.NEXT=0;
      END;
    END;

    LOCAL PROCEDURE Offene_Posten_13b2@1000000006();
    VAR
      SalesInvoiceHeader@1000000005 : Record 112;
      SalesInvoiceLine@1000000012 : Record 113;
      CustLedgerEntry@1000000001 : Record 21;
      ServerUploadFile@1000000000 : Text;
      Error_Speicherort@1000000003 : TextConst 'DEU=Speicherort wurde nicht angegeben!';
      TotalRows@1000000007 : Integer;
      Spalte_Adressen_Kontakt@1000000008 : TextConst 'DEU=A';
      Window@1000000009 : Dialog;
      i@1000000010 : Integer;
      chr@1000000014 : Char;
      selection@1000000015 : Integer;
      Kundenumstellung_Auswahl@1000000016 : TextConst 'DEU=Liste mit Debitornr.,Liste mit Kontaktnr.';
    BEGIN
      IF (Datum_ab = 0D) OR (Datum_bis = 0D) THEN ERROR(ErrorDate);

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);

      RowNo := 1;
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,'Belegnr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'Betrag','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'W„hrung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'Betrag (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo += 1;
      EnterCell(RowNo,ColumnNo,'Restbetrag (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      RowNo := 2;
      CustLedgerEntry.RESET;
      CustLedgerEntry.SETFILTER("Posting Date",'%1..%2',Datum_ab,Datum_bis);
      CustLedgerEntry.SETRANGE("Document Type",CustLedgerEntry."Document Type"::Invoice);
      CustLedgerEntry.SETRANGE(Open,TRUE);
      IF CustLedgerEntry.FIND('-') THEN BEGIN
        REPEAT
          SalesInvoiceLine.SETRANGE("Document No.",CustLedgerEntry."Document No.");
          SalesInvoiceLine.SETFILTER("VAT Prod. Posting Group",'%1|%2','13B2','16_13B2');
          IF SalesInvoiceLine.FINDFIRST THEN BEGIN
            ColumnNo := 1;
            EnterCell(RowNo,ColumnNo,CustLedgerEntry."Document No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            ColumnNo += 1;
            CustLedgerEntry.CALCFIELDS(Amount,"Amount (LCY)","Remaining Amt. (LCY)");
            EnterCell(RowNo,ColumnNo,FORMAT(CustLedgerEntry.Amount),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            ColumnNo += 1;
            EnterCell(RowNo,ColumnNo,CustLedgerEntry."Currency Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            ColumnNo += 1;
            EnterCell(RowNo,ColumnNo,FORMAT(CustLedgerEntry."Amount (LCY)"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            ColumnNo += 1;
            EnterCell(RowNo,ColumnNo,FORMAT(CustLedgerEntry."Remaining Amt. (LCY)"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            RowNo += 1;
        END;
      UNTIL CustLedgerEntry.NEXT = 0;
      END;

      TempExcelBuffer.CreateBook('','Rechnungen_13B2');
      TempExcelBuffer.WriteSheet('Offene Posten 13B2',COMPANYNAME,USERID);
      TempExcelBuffer.CloseBook;
      TempExcelBuffer.OpenExcel;
      //TempExcelBuffer.OpenExcelWithoutAutoFit('Artikel','test.xlsx','C:\Users\Desktop_admin\Desktop',FALSE);
      //TempExcelBuffer.SetWidth(0,'B',20); // FOR Column B
      //TempExcelBuffer.SetWidth(1,'B',20); // FOR Column B
      //TempExcelBuffer.QuitExcel;
      TempExcelBuffer.GiveUserControl();
    END;

    EVENT Sheet@1000000151::SelectionChange@1543(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1000000151::BeforeDoubleClick@1537(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000151::BeforeRightClick@1534(Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000151::Activate@304();
    BEGIN
    END;

    EVENT Sheet@1000000151::Deactivate@1530();
    BEGIN
    END;

    EVENT Sheet@1000000151::Calculate@279();
    BEGIN
    END;

    EVENT Sheet@1000000151::Change@1545(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1000000151::FollowHyperlink@1470(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Sheet@1000000151::PivotTableUpdate@2156(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Sheet@1000000151::PivotTableAfterValueChange@2886(TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1000000151::PivotTableBeforeAllocateChanges@2889(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000151::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1000000151::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Sheet@1000000151::PivotTableChangeSync@2894(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000153::Open@1923();
    BEGIN
    END;

    EVENT Book@1000000153::Activate@304();
    BEGIN
    END;

    EVENT Book@1000000153::Deactivate@1530();
    BEGIN
    END;

    EVENT Book@1000000153::BeforeClose@1546(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000153::BeforeSave@1547(SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000153::BeforePrint@1549(VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000153::NewSheet@1550(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000153::AddinInstall@1552();
    BEGIN
    END;

    EVENT Book@1000000153::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Book@1000000153::WindowResize@1554(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1000000153::WindowActivate@1556(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1000000153::WindowDeactivate@1557(Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1000000153::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1000000153::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000153::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000153::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000153::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000153::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1000000153::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1000000153::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Book@1000000153::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000153::PivotTableCloseConnection@2158(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000153::PivotTableOpenConnection@2159(Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000153::Sync@2266(SyncEventType@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000153::BeforeXmlImport@2283(Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000153::AfterXmlImport@2285(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000153::BeforeXmlExport@2287(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000153::AfterXmlExport@2288(Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000153::RowsetComplete@2610(Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000153::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1000000153::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000153::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000153::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Book@1000000153::SheetPivotTableChangeSync@2899(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1000000153::AfterSave@2900(Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Book@1000000153::NewChart@2901(Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart");
    BEGIN
    END;

    EVENT Excel@1000000154::NewWorkbook@1565(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000154::SheetSelectionChange@1558(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1000000154::SheetBeforeDoubleClick@1559(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::SheetBeforeRightClick@1560(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::SheetActivate@1561(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000154::SheetDeactivate@1562(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000154::SheetCalculate@1563(Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000154::SheetChange@1564(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookOpen@1567(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookActivate@1568(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookDeactivate@1569(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookBeforeClose@1570(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookBeforeSave@1571(Wb@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SaveAsUI@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookBeforePrint@1572(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookNewSheet@1573(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Sh@1000000000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookAddinInstall@1574(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookAddinUninstall@1575(Wb@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1000000154::WindowResize@1554(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1000000154::WindowActivate@1556(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1000000154::WindowDeactivate@1557(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1000000154::SheetFollowHyperlink@1854(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Excel@1000000154::SheetPivotTableUpdate@2157(Sh@1000000001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookPivotTableCloseConnection@2160(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookPivotTableOpenConnection@2161(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookSync@2289(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SyncEventType@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookBeforeXmlImport@2290(Wb@1000000004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1000000002 : Text;IsRefresh@1000000001 : Boolean;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookAfterXmlImport@2291(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1000000001 : Boolean;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookBeforeXmlExport@2292(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1000000001 : Text;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookAfterXmlExport@2293(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1000000001 : Text;Result@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookRowsetComplete@2611(Wb@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Description@1000000002 : Text;Sheet@1000000001 : Text;Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::AfterCalculate@2612();
    BEGIN
    END;

    EVENT Excel@1000000154::SheetPivotTableAfterValueChange@2895(Sh@1000000002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1000000154::SheetPivotTableBeforeAllocateChanges@2896(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::SheetPivotTableBeforeCommitChanges@2897(Sh@1000000004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000002 : Integer;ValueChangeEnd@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::SheetPivotTableBeforeDiscardChanges@2898(Sh@1000000003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1000000001 : Integer;ValueChangeEnd@1000000000 : Integer);
    BEGIN
    END;

    EVENT Excel@1000000154::ProtectedViewWindowOpen@2903(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000154::ProtectedViewWindowBeforeEdit@2905(Pvw@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow";VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::ProtectedViewWindowBeforeClose@2906(Pvw@1000000002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow";Reason@1000000001 : Integer;VAR Cancel@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::ProtectedViewWindowResize@2908(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000154::ProtectedViewWindowActivate@2909(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000154::ProtectedViewWindowDeactivate@2910(Pvw@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookAfterSave@2911(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Success@1000000000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1000000154::WorkbookNewChart@2912(Wb@1000000001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Ch@1000000000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart");
    BEGIN
    END;

    BEGIN
    {
      Lfd.Nr. Version   Datum       User  Beschreibung
      ===========================================================================
      1       TOP1.00   05.06.18    UB    TOPAS: an neues Excel angepasst
    }
    END.
  }
}

