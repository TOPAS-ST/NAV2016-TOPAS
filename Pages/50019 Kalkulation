OBJECT Page 50019 Kalkulation
{
  OBJECT-PROPERTIES
  {
    Date=10.03.17;
    Time=09:01:40;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    InsertAllowed=No;
    DeleteAllowed=No;
    SourceTable=Table37;
    OnOpenPage=BEGIN
                 Rec.RESET;
                 Rec := VerkZeileVar;
                 FIND;

                 //TOPAS Žnderung 05.12.07 ST
                 Rec.SETFILTER("Document No.",'%1',VerkZeileVar."Document No.");
                 Rec.SETFILTER("Line No.",'%1',VerkZeileVar."Line No.");
                 //TOPAS Ende

                 //TOPAS 08.05.08 ST
                 //šbarbeiten mit Variablen
                 {
                 IF "Currency Code"='' THEN
                   CurrPage.Verkaufsw„hrungskurs.EDITABLE(FALSE)
                 ELSE
                   CurrPage.Verkaufsw„hrungskurs.EDITABLE(TRUE);

                 IF Einkaufsw„hrungscode='' THEN
                   CurrPage.Einkaufsw„hrungskurs.EDITABLE(FALSE)
                 ELSE
                   CurrPage.Einkaufsw„hrungskurs.EDITABLE(TRUE);
                 }
                 //TOPAS Ende
               END;

    ActionList=ACTIONS
    {
      { 1900000000;  ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1       ;1   ;ActionGroup;
                      CaptionML=DEU=Funktionen }
      { 32      ;2   ;Action    ;
                      Name=Uebernehmen;
                      CaptionML=DEU=šber&nehmen;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Agreement;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 IF CONFIRM ('Wollen Sie die errechneten Werte in die Angebotszeile bernehmen ?', FALSE) THEN BEGIN
                                   šbernehmen;
                                   CurrPage.UPDATE;
                                 END;
                               END;
                                }
      { 33      ;2   ;Action    ;
                      Name=Berechnen;
                      CaptionML=DEU=Be&rechnen;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=Calculate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //IF VerkKopf.Angebotsstatus <> '0' THEN BEGIN
                                   Berechnen;
                                   CurrPage.UPDATE;
                                 //END ELSE
                                 //  ERROR ('Angebote im Status Gltig drfen nicht neu kalkuliert werden.');
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000;0;Container ;
                ContainerType=ContentArea }

    { 1000000010;1;Group  ;
                CaptionML=DEU=Angebotskopf;
                GroupType=Group }

    { 1000000006;2;Group  ;
                GroupType=Group }

    { 2   ;3   ;Field     ;
                Name=Sell-to Customer No.;
                SourceExpr="Sell-to Customer No." }

    { 4   ;3   ;Field     ;
                Name=Currency Code;
                SourceExpr="Currency Code" }

    { 6   ;3   ;Field     ;
                Name=Einkaufsw„hrungscode;
                CaptionML=DEU=Einkaufsw„hrungscode;
                SourceExpr=Einkaufsw„hrungscode;
                TableRelation=Currency;
                Editable=FALSE }

    { 1000000005;2;Group  ;
                GroupType=Group }

    { 20  ;3   ;Field     ;
                Name=Verkaufsw„hrungskurs;
                CaptionML=DEU=W„hrungskurs;
                DecimalPlaces=0:5;
                SourceExpr=Verkaufsw„hrungskurs;
                Editable=FALSE }

    { 22  ;3   ;Field     ;
                Name=Einkaufsw„hrungskurs;
                CaptionML=DEU=Einkaufsw„hrungskurs;
                DecimalPlaces=0:5;
                SourceExpr=Einkaufsw„hrungskurs;
                Editable=TRUE }

    { 1000000007;1;Group  ;
                CaptionML=DEU=Angebotszeile;
                GroupType=Group }

    { 8   ;2   ;Field     ;
                Name=No.;
                SourceExpr="No.";
                Editable=FALSE }

    { 24  ;2   ;Field     ;
                Name=Description;
                SourceExpr=Description;
                Editable=FALSE }

    { 10  ;2   ;Field     ;
                Name=Quantity;
                SourceExpr=Quantity;
                Editable=FALSE }

    { 46  ;2   ;Field     ;
                Name=DC-Preis (MW)Var;
                CaptionML=DEU=DC-Preis (MW);
                DecimalPlaces=2:5;
                SourceExpr="DC-Preis (MW)Var";
                Editable=FALSE }

    { 48  ;2   ;Field     ;
                Name=DC-Preis (W„hrung)Var;
                CaptionML=DEU=DC-Preis (W„hrung);
                DecimalPlaces=2:5;
                SourceExpr="DC-Preis (W„hrung)Var";
                Editable=FALSE }

    { 12  ;2   ;Field     ;
                Name=VK-Preis (MW)Var;
                CaptionML=DEU=VK-Preis (MW);
                DecimalPlaces=2:5;
                SourceExpr="VK-Preis (MW)Var";
                Editable=FALSE }

    { 1000000009;2;Group  ;
                GroupType=Group }

    { 50  ;2   ;Field     ;
                Name=Handlingskosten %;
                SourceExpr="Handlingskosten %" }

    { 14  ;2   ;Field     ;
                Name=DC-Preis (EKW)Var;
                CaptionML=DEU=DC-Preis (EKW);
                DecimalPlaces=2:5;
                SourceExpr="DC-Preis (EKW)Var";
                OnValidate=BEGIN
                             IF VerkKopf."Currency Code" = '' THEN BEGIN
                               IF Einkaufsw„hrungscode = '' THEN
                                 "DC-Preis (W„hrung)Var" := "DC-Preis (EKW)Var"
                               ELSE
                                 "DC-Preis (W„hrung)Var" := ROUND(W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE, Einkaufsw„hrungscode,
                                 //TOPAS Auskommentiert 08.05.08 ST
                                 //"DC-Preis (EKW)Var", Einkaufsw„hrungsfaktor));
                                   "DC-Preis (EKW)Var", Einkaufsw„hrungskurs));
                                 //TOPAS Ende

                               "DC-Preis (MW)Var" := "DC-Preis (W„hrung)Var";
                             END ELSE BEGIN
                               "DC-Preis (MW)Var" := ROUND(W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE, Einkaufsw„hrungscode,
                               //TOPAS Auskommentiert 08.05.08 ST
                               //  "DC-Preis (EKW)Var", Einkaufsw„hrungsfaktor));
                                   "DC-Preis (EKW)Var", Einkaufsw„hrungskurs));
                               //TOPAS Ende
                               "DC-Preis (W„hrung)Var" := ROUND(W„hrungsWechKurs.ExchangeAmtLCYToFCY (WORKDATE, VerkKopf."Currency Code",
                                 "DC-Preis (MW)Var", VerkKopf."Currency Factor"));
                             END;
                           END;
                            }

    { 1000000002;2;Field  ;
                Name=Einstandspreis (MW)Var;
                CaptionML=DEU=Einstandspreis (MW);
                DecimalPlaces=2:5;
                SourceExpr="Einstandspreis (MW)Var";
                Editable=FALSE;
                OnValidate=BEGIN
                             IF VerkKopf."Currency Code" = '' THEN BEGIN
                               IF Einkaufsw„hrungscode = '' THEN
                                 "DC-Preis (W„hrung)Var" := "DC-Preis (EKW)Var"
                               ELSE
                                 "DC-Preis (W„hrung)Var" := W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE, Einkaufsw„hrungscode,
                                   "DC-Preis (EKW)Var", Einkaufsw„hrungsfaktor);

                               "DC-Preis (MW)Var" := "DC-Preis (W„hrung)Var";
                             END ELSE BEGIN
                               "DC-Preis (MW)Var" := W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE, Einkaufsw„hrungscode,
                                 "DC-Preis (EKW)Var", Einkaufsw„hrungsfaktor);
                               "DC-Preis (W„hrung)Var" := W„hrungsWechKurs.ExchangeAmtLCYToFCY (WORKDATE, VerkKopf."Currency Code",
                                 "DC-Preis (MW)Var", VerkKopf."Currency Factor");
                             END;
                           END;
                            }

    { 54  ;2   ;Field     ;
                Name=VK-Preis (EKW)Var;
                CaptionML=DEU=VK-Preis (EKW);
                DecimalPlaces=2:5;
                SourceExpr="VK-Preis (EKW)Var";
                Enabled=TRUE;
                Editable=FALSE }

    { 56  ;2   ;Field     ;
                Name=VK-PreisVar;
                CaptionML=DEU=VK-Preis;
                DecimalPlaces=2:5;
                SourceExpr="VK-PreisVar" }

    { 52  ;2   ;Field     ;
                Name=DB %Var;
                CaptionML=DEU=DB %;
                DecimalPlaces=2:5;
                SourceExpr="DB %Var" }

    { 1000000008;1;Group  ;
                CaptionML=DEU=Artikelstamm;
                GroupType=Group }

    { 36  ;2   ;Field     ;
                Name=EKStaffel.Minimum Quantity;
                CaptionML=DEU=EK-Staffel Menge;
                SourceExpr=EKStaffel."Minimum Quantity";
                Editable=FALSE }

    { 1000000001;2;Field  ;
                Name=EKStaffel.Direct Unit Cost;
                CaptionML=DEU=EK-Staffel Preis;
                SourceExpr=EKStaffel."Direct Unit Cost";
                Editable=FALSE }

    { 1000000000;2;Field  ;
                Name=EKStaffel.Currency Code;
                CaptionML=DEU=EK-Staffel Preis;
                SourceExpr=EKStaffel."Currency Code";
                Editable=FALSE }

    { 28  ;2   ;Field     ;
                Name=Artikel.Zollsatz %;
                CaptionML=DEU=Zollsatz %;
                SourceExpr=Artikel."Zollsatz %";
                Editable=FALSE }

    { 1000000013;1;Group  ;
                CaptionML=DEU=Belegebersicht;
                GroupType=Group;
                Layout=Rows }

    { 1000000012;2;Group  ;
                GroupType=Group }

    { 1000000003;3;Group  ;
                GroupType=Group }

    { 39  ;4   ;Part      ;
                CaptionML=DEU=gebuchten Einkaufszeilen;
                SubPageLink=Item No.=FIELD(No.);
                PagePartID=Page50021;
                PartType=Page }

    { 1000000011;2;Group  ;
                GroupType=Group }

    { 1000000004;3;Group  ;
                GroupType=Group }

    { 40  ;4   ;Part      ;
                CaptionML=DEU=offene Auftragspositionen;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page50022;
                PartType=Page }

  }
  CODE
  {
    VAR
      W„hrungsWechKurs@1140000 : Record 330;
      Artikel@1140001 : Record 27;
      VerkKopf@1140002 : Record 36;
      VerkZeileVar@1140003 : Record 37;
      W„hrung@1140006 : Record 4;
      W„hrung3@1140007 : Record 4;
      Einkaufsw„hrungskurs@1140008 : Decimal;
      Verkaufsw„hrungskurs@1140009 : Decimal;
      "VK-PreisVar"@1140010 : Decimal;
      "VK-Preis (MW)Var"@1140011 : Decimal;
      "VK-Preis (EKW)Var"@1140012 : Decimal;
      "DB %Var"@1140013 : Decimal;
      "DC-Preis (EKW)Var"@1140014 : Decimal;
      "DC-Preis (W„hrung)Var"@1140015 : Decimal;
      "DC-Preis (MW)Var"@1140016 : Decimal;
      EKStaffel@1140004 : Record 7012;
      VKStaffel@1140005 : Record 7002;
      "Einstandspreis (MW)Var"@1140017 : Decimal;
      SalesSetup@1140018 : Record 311;
      IndKosten@1140019 : Decimal;
      "VK-Preis EKWohneKosten"@1140020 : Decimal;

    PROCEDURE VerkZeileErrichten@1(VerkZeile@1140000 : Record 37);
    BEGIN
      VerkZeileVar := VerkZeile;
      VerkKopf.GET (VerkZeile."Document Type", VerkZeile."Document No.");
      Artikel.GET (VerkZeile."No.");

      Verkaufsw„hrungskurs := WechKursBetrag (WORKDATE,VerkKopf."Currency Code", VerkKopf."Currency Factor");
      Einkaufsw„hrungskurs := WechKursBetrag (WORKDATE,VerkZeileVar.Einkaufsw„hrungscode,VerkZeileVar.Einkaufsw„hrungsfaktor);

      IF VerkKopf."Currency Code" <> '' THEN BEGIN
        W„hrung.GET (VerkKopf."Currency Code");
        W„hrung.TESTFIELD (W„hrung."Unit-Amount Rounding Precision");
      END;
      IF VerkZeileVar.Einkaufsw„hrungscode <> '' THEN BEGIN
        W„hrung3.GET(VerkZeileVar.Einkaufsw„hrungscode);
        W„hrung3.TESTFIELD (W„hrung3."Unit-Amount Rounding Precision");
      END;

      EKStaffel.SETRANGE (EKStaffel."Item No.", VerkZeile."No.");
      EKStaffel.SETFILTER (EKStaffel."Minimum Quantity", '<=%1', VerkZeile.Quantity);
      IF NOT EKStaffel.FIND ('+') THEN
        EKStaffel.INIT;

      VKStaffel.SETRANGE (VKStaffel."Item No.", VerkZeile."No.");
      VKStaffel.SETFILTER (VKStaffel."Minimum Quantity", '<=%1', VerkZeile.Quantity);
      IF NOT VKStaffel.FIND ('+') THEN
        VKStaffel.INIT;

      "VK-PreisVar" := VerkZeile."Unit Price";
      "VK-Preis (MW)Var" := VerkZeile."VK-Preis (MW)";
      "VK-Preis (EKW)Var" := VerkZeile."VK-Preis (EKW)";
      "DB %Var" := VerkZeile."Profit %";
      "DC-Preis (EKW)Var" := VerkZeile."DC-Preis (EKW)";
      "Einstandspreis (MW)Var" := VerkZeile."Unit Cost (LCY)";

      IF VerkKopf."Currency Code" = '' THEN BEGIN
        IF VerkZeileVar.Einkaufsw„hrungscode = '' THEN
          "DC-Preis (W„hrung)Var" := "DC-Preis (EKW)Var"
        ELSE
          "DC-Preis (W„hrung)Var" := ROUND (W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE,VerkZeileVar.Einkaufsw„hrungscode,
            "DC-Preis (EKW)Var",VerkZeileVar.Einkaufsw„hrungsfaktor), W„hrung3."Unit-Amount Rounding Precision");

        "DC-Preis (MW)Var" := "DC-Preis (W„hrung)Var";
      END ELSE BEGIN
        "DC-Preis (MW)Var" := ROUND (W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE,VerkZeileVar.Einkaufsw„hrungscode,
         "DC-Preis (EKW)Var",VerkZeileVar.Einkaufsw„hrungsfaktor), W„hrung3."Unit-Amount Rounding Precision");
        "DC-Preis (W„hrung)Var" := ROUND (W„hrungsWechKurs.ExchangeAmtLCYToFCY (WORKDATE, VerkKopf."Currency Code",
         "DC-Preis (MW)Var", VerkKopf."Currency Factor"), W„hrung."Unit-Amount Rounding Precision");
      END;
    END;

    PROCEDURE WechKursBetrag@2(Datum@1140000 : Date;W„hrungCode@1140001 : Code[10];W„hrungFaktor@1140002 : Decimal) : Decimal;
    VAR
      BezugAufWechselkursbetr@1140003 : Decimal;
      WechselkursBetr@1140004 : Decimal;
      BezugAufW„hrungscode@1140005 : Code[10];
      FesterWechselkursBetr@1140006 : Option;
    BEGIN
      IF W„hrungCode = '' THEN
        EXIT(1);
      W„hrungsWechKurs.FindCurrency(Datum,W„hrungCode,1);
      W„hrungsWechKurs.TESTFIELD("Exchange Rate Amount");
      W„hrungsWechKurs.TESTFIELD("Relational Exch. Rate Amount");
      BezugAufWechselkursbetr := W„hrungsWechKurs."Relational Exch. Rate Amount";
      WechselkursBetr := W„hrungsWechKurs."Exchange Rate Amount";
      BezugAufW„hrungscode := W„hrungsWechKurs."Relational Currency Code";
      IF W„hrungsWechKurs."Relational Currency Code" = '' THEN
        W„hrungsWechKurs."Exchange Rate Amount" := W„hrungFaktor * W„hrungsWechKurs."Relational Exch. Rate Amount"
      ELSE BEGIN
        W„hrungsWechKurs.FindCurrency(Datum,BezugAufW„hrungscode,2);
        W„hrungsWechKurs.TESTFIELD("Exchange Rate Amount");
        W„hrungsWechKurs.TESTFIELD("Relational Exch. Rate Amount");
        W„hrungsWechKurs."Exchange Rate Amount" := (W„hrungFaktor *
          (BezugAufWechselkursbetr * W„hrungsWechKurs."Relational Exch. Rate Amount"));
      END;
      EXIT(W„hrungsWechKurs."Exchange Rate Amount");
    END;

    PROCEDURE Berechnen@26();
    VAR
      LandedCostPreis@1140000 : Decimal;
      DCTemp@1140001 : Decimal;
    BEGIN
      SalesSetup.GET;
      // -008.2
      IF ("DC-Preis (EKW)Var" <> 0) AND
         ("VK-Preis (EKW)Var" <> 0) AND
         ("DB %Var" <> 0) AND
         ("VK-PreisVar" <> 0) THEN
        ERROR ('Eines der zu berechnenden Felder %1, %2, %3, %4 muss leer sein.',
          FIELDNAME ("DC-Preis (EKW)"), 'VK-Preis', FIELDNAME ("Profit %"),
          FIELDNAME ("Unit Price"));

      IF ("VK-PreisVar" = 0) AND ("DB %Var" <> 0) THEN
        "VK-Preis (EKW)Var" := 0
      ELSE BEGIN
        IF ("VK-PreisVar" <> 0) THEN BEGIN
        IF VerkKopf."Currency Code" = '' THEN BEGIN
          IF Einkaufsw„hrungscode = '' THEN BEGIN
            "VK-Preis (EKW)Var" := "VK-PreisVar";
            "VK-Preis (MW)Var" := "VK-Preis (EKW)Var";
          END ELSE BEGIN
            "VK-Preis (EKW)Var" := ROUND (W„hrungsWechKurs.ExchangeAmtLCYToFCY (WORKDATE, Einkaufsw„hrungscode,
              "VK-PreisVar", Einkaufsw„hrungskurs), W„hrung3."Unit-Amount Rounding Precision");
            "VK-Preis (MW)Var" := "VK-PreisVar";
          END;
        END ELSE BEGIN
          IF Einkaufsw„hrungscode = '' THEN BEGIN
            "VK-Preis (EKW)Var" := ROUND (W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE, VerkKopf."Currency Code",
              "VK-PreisVar",Verkaufsw„hrungskurs), W„hrung."Unit-Amount Rounding Precision");
            "VK-PreisVar" := "VK-Preis (EKW)Var";
          END ELSE BEGIN
            "VK-Preis (MW)Var" := ROUND (W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE, VerkKopf."Currency Code",
              "VK-PreisVar",Verkaufsw„hrungskurs), W„hrung."Unit-Amount Rounding Precision");
            "VK-Preis (EKW)Var" := ROUND (W„hrungsWechKurs.ExchangeAmtLCYToFCY (WORKDATE, Einkaufsw„hrungscode,
            "VK-Preis (MW)Var", Einkaufsw„hrungskurs), W„hrung3."Unit-Amount Rounding Precision");
          END;
        END;
        END ELSE BEGIN
        IF VerkKopf."Currency Code" = '' THEN BEGIN
          IF Einkaufsw„hrungscode = '' THEN BEGIN
            "VK-PreisVar" := "VK-Preis (EKW)Var";
            "VK-Preis (MW)Var" := "VK-Preis (EKW)Var";
          END ELSE BEGIN
            "VK-PreisVar" := ROUND (W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE, Einkaufsw„hrungscode,
              "VK-Preis (EKW)Var", Einkaufsw„hrungskurs), W„hrung3."Unit-Amount Rounding Precision");

            "VK-Preis (MW)Var" := "VK-PreisVar";
          END;
        END ELSE BEGIN
          IF Einkaufsw„hrungscode = '' THEN BEGIN
            "VK-PreisVar" := ROUND (W„hrungsWechKurs.ExchangeAmtLCYToFCY (WORKDATE, VerkKopf."Currency Code",
              "VK-Preis (EKW)Var",Verkaufsw„hrungskurs), W„hrung."Unit-Amount Rounding Precision");
            "VK-Preis (MW)Var" := "VK-Preis (EKW)Var";
          END ELSE BEGIN
            "VK-Preis (MW)Var" := ROUND (W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE, Einkaufsw„hrungscode,
              "VK-Preis (EKW)Var", Einkaufsw„hrungskurs), W„hrung3."Unit-Amount Rounding Precision");
            "VK-PreisVar" := ROUND (W„hrungsWechKurs.ExchangeAmtLCYToFCY (WORKDATE, VerkKopf."Currency Code",
              "VK-Preis (MW)Var",Verkaufsw„hrungskurs), W„hrung."Unit-Amount Rounding Precision");
          END;
        END;
        END;
      END;

      IF ("VK-Preis (EKW)Var" = 0) THEN
      BEGIN
        LandedCostPreis:="DC-Preis (EKW)Var"*(1+"Handlingskosten %"/100)*(1+Artikel."Zollsatz %"/100);
        "VK-Preis (EKW)Var" := LandedCostPreis * 100 / (100 -"DB %Var");
        IF VerkKopf."Currency Code" = '' THEN
        BEGIN
          IF Einkaufsw„hrungscode='' THEN
            "VK-PreisVar" := "VK-Preis (EKW)Var"
          ELSE
            "VK-PreisVar" := ROUND (W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE, Einkaufsw„hrungscode,
            "VK-Preis (EKW)Var", Einkaufsw„hrungskurs), W„hrung3."Unit-Amount Rounding Precision");
          "VK-Preis (MW)Var" := "VK-PreisVar";
        END
        ELSE
        BEGIN
          "VK-Preis (MW)Var" := ROUND (W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE, Einkaufsw„hrungscode,
           "VK-Preis (EKW)Var", Einkaufsw„hrungskurs), W„hrung3."Unit-Amount Rounding Precision");
          "VK-PreisVar" := ROUND (W„hrungsWechKurs.ExchangeAmtLCYToFCY (WORKDATE, VerkKopf."Currency Code",
            "VK-Preis (MW)Var",Verkaufsw„hrungskurs), W„hrung."Unit-Amount Rounding Precision");
        END;
      END;

      IF Einkaufsw„hrungscode <> '' THEN
        "VK-Preis (EKW)Var" := ROUND ("VK-Preis (EKW)Var", W„hrung3."Unit-Amount Rounding Precision");

      IF ("DB %Var" = 0) OR
         ("DC-Preis (EKW)Var" = 0) THEN BEGIN
        IF ("VK-Preis (EKW)Var" = 0) THEN BEGIN
          IF VerkKopf."Currency Code" = Einkaufsw„hrungscode THEN
            "VK-Preis (EKW)Var" := "VK-PreisVar"
          ELSE BEGIN
            "VK-Preis (MW)Var" := ROUND (W„hrungsWechKurs.ExchangeAmtFCYToLCY (WORKDATE, VerkKopf."Currency Code",
              "VK-PreisVar",Verkaufsw„hrungskurs), W„hrung."Unit-Amount Rounding Precision");
            "VK-Preis (EKW)Var" := ROUND (W„hrungsWechKurs.ExchangeAmtLCYToFCY (WORKDATE, Einkaufsw„hrungscode,
                "VK-Preis (MW)Var", Einkaufsw„hrungskurs), W„hrung3."Unit-Amount Rounding Precision");
          END;
        END;
      END;

      IF ("DB %Var" = 0) THEN
      BEGIN
        LandedCostPreis := "DC-Preis (EKW)Var"*(1+"Handlingskosten %"/100)*(1+Artikel."Zollsatz %"/100);
        "DB %Var" := (1 - LandedCostPreis / "VK-Preis (EKW)Var") * 100;
        IF "DB %Var" < SalesSetup."Mindestdeckungsbeitrag %" THEN
          MESSAGE ('Der Mindestdeckungsbeitrag von %1 %4 bei Artikel %2 ist um %3 %4 unterschritten.',
            SalesSetup."Mindestdeckungsbeitrag %", Artikel."No.", ABS(ROUND("DB %Var"-SalesSetup."Mindestdeckungsbeitrag %",0.01)),'%');
      END;

      IF ("DC-Preis (EKW)Var" = 0) THEN
      BEGIN
        LandedCostPreis := "VK-Preis (EKW)Var" * (100 - "DB %Var") / 100;
        DCTemp := (LandedCostPreis/(100+Artikel."Zollsatz %")*100);
        "DC-Preis (EKW)Var" := ROUND (DCTemp/(100 + "Handlingskosten %")*100);
      END;

      //TOPAS Auskommentiert 07.05.08
      //"Einstandspreis (MW)Var" := "DC-Preis (MW)Var" * (("Handlingskosten %"+100)/100) * ((Artikel."Zollsatz %"+100)/100);
      //TOPAS Auskommentiert Ende

      //TOPAS ST 07.05.08

      //  "Einstandspreis (MW)Var" :=  (ROUND("DC-Preis (EKW)Var"/Einkaufsw„hrungskurs)) *
      //  (("Handlingskosten %"+100)/100) * ((Artikel."Zollsatz %"+100)/100);
        "Einstandspreis (MW)Var" :=  ("DC-Preis (EKW)Var"/Einkaufsw„hrungskurs) *
        (("Handlingskosten %"+100)/100) * ((Artikel."Zollsatz %"+100)/100);

        //"DC-Preis (MW)Var":=ROUND("DC-Preis (EKW)"/Einkaufsw„hrungskurs);

      //*************************************************************************************************************************
      //    Nachtr„gliche Rundungsbereinigung, da Stk.rundungspr„zision in W„hrungstabelle fr USD auf 0,001 ge„ndert wurde,
      //                             aber der Vk-Preis davon unangetastet bleiben soll
      //*************************************************************************************************************************

      "VK-PreisVar" := ROUND("VK-PreisVar",0.01);
      "VK-Preis (MW)Var" := ROUND("VK-Preis (MW)Var",0.01);
      "VK-Preis (EKW)Var" := ROUND("VK-Preis (EKW)Var",0.01);

      //TOPAS Ende
    END;

    PROCEDURE šbernehmen@3();
    BEGIN
      "Profit %" := "DB %Var";
      VALIDATE ("Unit Price", "VK-PreisVar");
      "VK-Preis (EKW)" := "VK-Preis (EKW)Var";
      "VK-Preis (MW)" := "VK-Preis (MW)Var";
      VALIDATE ("DC-Preis (EKW)", "DC-Preis (EKW)Var");
      //TOPAS 09.05.08 ST
      "Unit Cost (LCY)":= "Einstandspreis (MW)Var";
      VALIDATE(Einkaufsw„hrungsfaktor,Einkaufsw„hrungskurs);
      //Kalkulationsmenge := Quantity;
    END;

    BEGIN
    {
      -#DOCU#
      000 12.01.02 kn SC1.01: Kap. C 2.1.6
          Page erstellt
      001 27.05.02 kn SC1.04: #02012
          Korrektur zur DB-Ermittlung
      +#DOCU#
      // Berichtigung Berechnung Angebotskalkulation Feld 'LandedCostPreis'  TOPAS 24.08.2004  UB
    }
    END.
  }
}

