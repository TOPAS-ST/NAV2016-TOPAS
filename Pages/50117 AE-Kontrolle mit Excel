OBJECT Page 50117 AE-Kontrolle mit Excel
{
  OBJECT-PROPERTIES
  {
    Date=04.03.22;
    Time=10:29:16;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    PromotedActionCategoriesML=[DEU=Neu,Vorgang,Bericht,Funktion;
                                ENU=New,Process,Report,Function];
    ShowFilter=No;
    OnInit=BEGIN
             //  Wenn untere Meldung erscheint, gibt es eine neue Linie, die noch nicht umgesetzt wird.
             //  Siehe kurz vor Ende der Functions 'aktuellen Ab einfgen'
             //tab_ab_bw.RESET;
             //tab_ab_bw.SETFILTER(tab_ab_bw.Linie,'%1..%2','00','99');
             //IF tab_ab_bw.FINDFIRST THEN BEGIN
             //"Linien umsetzen";
             //END;

             tab_ab_bw.RESET;
             tab_ab_bw.SETFILTER(tab_ab_bw.Linie,'%1..%2','00','99');
             IF tab_ab_bw.FINDFIRST THEN
               MESSAGE ('Es gibt Linien mit einer Zahl als Herstellerkurzname! Bitte Uwe ansprechen');

             tab_ab_bw.RESET;
             tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','SYST');
             tab_ab_bw.SETFILTER(tab_ab_bw.Datum,'%1',31122222D);
             tab_ab_bw.SETFILTER(tab_ab_bw.AU_Nr,'%1','AU999999');
             tab_ab_bw.SETFILTER(tab_ab_bw.POS_Nr,'%1',10000);
             IF tab_ab_bw.FINDFIRST THEN BEGIN
               IF tab_ab_bw.Wunschdatum = WORKDATE THEN BEGIN
                 AB_holen_Datum:=tab_ab_bw.Wunschdatum;
                 AE_holen_Datum:=tab_ab_bw.Auftragsdatum;
                 AE_holen_Datum_1:=tab_ab_bw.Auftragsdatum;
               END ELSE BEGIN
                 //   tab_ab_bw.Auftragsdatum :=tab_ab_bw.Wunschdatum;
                 //   tab_ab_bw.MODIFY;
                 AB_holen_Datum:=tab_ab_bw.Wunschdatum;
                 AE_holen_Datum:=tab_ab_bw.Wunschdatum;
                 //   AE_holen_Datum:=tab_ab_bw.Auftragsdatum;
               END;
             END;

             kto_datum := 010199D;

             hinweis[1] := '1.  t„glichen Auftrags- und Bestellbestand sichern';
             hinweis[2] := 'vor Ausfhrung Excel beenden';
             hinweis[3] := 'Speichern ( Name des Files z.B.: AE_2017_06.XLSX)';
             hinweis[4] := 'Speichern nach ...Auftragseingang\Sylke\ xxxxxx.XLSX)';
             hinweis[5] := 'Filenamen eingeben (z.B. BE_2017_06_30  (ohne xlsx))';
             hinweis[6] := 'Filename angeben (z.B. AE_KW10_2017.xlsx)';
             hinweis[7] := 'Auftrag, der vor Auftragseingangskontrolle geliefert werden soll, sichern.';
             hinweis[8] := 'H„kchen setzen, Auftragsnummer eintragen und dann Ausfhren.';
             hinweis[9] := 'Hier nur Ausfllen, wenn AU bereits geliefert und somit archiviert ist.';
             hinweis[10] := 'H„kchen setzen, archivierte Auftragsnummer eintragen und dann Ausfhren.';
             hinweis[11] := 'Geschenke-Auswertungsliste';
             hinweis[12] := '';
           END;

    ActionList=ACTIONS
    {
      { 1900000000;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 1       ;1   ;ActionGroup;
                      CaptionML=DEU=Navigation }
      { 1140008 ;2   ;Action    ;
                      Name=AB bearbeiten;
                      CaptionML=DEU=AB bearbeiten;
                      RunObject=Page 50007;
                      RunPageView=WHERE(Belegart=FILTER(AUšW));
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=OrderList;
                      PromotedCategory=Process }
      { 1140032 ;2   ;Action    ;
                      Name=Alle AE's zeigen;
                      CaptionML=DEU=Alle AE's zeigen;
                      RunObject=Page 50006;
                      RunPageView=SORTING(AU_Nr,POS_Nr,Deb_Nr,Datum,Belegart)
                                  WHERE(Status=FILTER(AE));
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=AllLines;
                      PromotedCategory=Process }
      { 1140051 ;2   ;Action    ;
                      Name=AE bearbeiten;
                      CaptionML=DEU=AE bearbeiten;
                      RunObject=Page 50006;
                      RunPageView=SORTING(AU_Nr,POS_Nr,Deb_Nr,Datum,Belegart)
                                  WHERE(Belegart=FILTER(AETG|GUTG));
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=OrderList;
                      PromotedCategory=Process }
      { 1140052 ;2   ;Action    ;
                      Name=Diff. bearbeiten;
                      CaptionML=DEU=Diff. bearbeiten;
                      RunObject=Page 50006;
                      RunPageView=SORTING(AU_Nr,POS_Nr,Deb_Nr,Datum,Belegart)
                                  WHERE(Belegart=FILTER(AEND));
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=OrderList;
                      PromotedCategory=Process }
      { 1140053 ;2   ;Action    ;
                      Name=AE + Diff bearbeiten;
                      CaptionML=DEU=AE + Diff bearbeiten;
                      RunObject=Page 50006;
                      RunPageView=SORTING(AU_Nr,POS_Nr,Deb_Nr,Datum,Belegart)
                                  WHERE(Belegart=FILTER(AETG|AEND|GUTG));
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=DocumentEdit;
                      PromotedCategory=Process }
      { 1000000016;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 1000000015;1 ;ActionGroup;
                      CaptionML=DEU=Funktionen }
      { 1140063 ;2   ;Action    ;
                      Name=AESaldoabstimmen;
                      CaptionML=DEU=AE-Saldo abstimmen;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 AE_mtl.RESET;
                                 AE_mtl.SETFILTER(Belegart,'%1|%2|%3','AETG','GUTG','AEND');
                                 IF AE_mtl.FIND('-') THEN BEGIN
                                   AE_Saldo_prf := 0;
                                   REPEAT
                                     AE_Saldo_prf := AE_Saldo_prf + ROUND(AE_mtl."Betrag in EUR",0.01);
                                   UNTIL AE_mtl.NEXT = 0;
                                 END;

                                 MESSAGE( 'Summe des Auftrageingangs ist: %1 EUR',AE_Saldo_prf);
                               END;
                                }
      { 1140154 ;2   ;Action    ;
                      Name=Ausfhren;
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      PromotedCategory=Category4;
                      OnAction=BEGIN
                                 tab_ab_bw.RESET;
                                 tab_ab_bw.SETFILTER(Belegart,'%1','SYST');
                                 tab_ab_bw.SETFILTER(Datum,'%1',31122222D);
                                 tab_ab_bw.SETFILTER(AU_Nr,'%1','AU999999');
                                 tab_ab_bw.SETFILTER(POS_Nr,'%1',10000);
                                 IF tab_ab_bw.FINDFIRST THEN BEGIN
                                  IF tab_ab_bw.Wunschdatum = WORKDATE THEN BEGIN
                                    AB_holen_Datum := tab_ab_bw.Wunschdatum;
                                    AE_holen_Datum := tab_ab_bw.Auftragsdatum;
                                  END ELSE BEGIN
                                    tab_ab_bw.Auftragsdatum := tab_ab_bw.Wunschdatum;
                                    tab_ab_bw.MODIFY;
                                    AB_holen_Datum := tab_ab_bw.Wunschdatum;
                                    AE_holen_Datum := tab_ab_bw.Wunschdatum;
                                  END;
                                 END;


                                 tab_ab_bw.RESET;
                                 IF tab_ab_bw.Linie = '00' THEN
                                   MESSAGE ('Es gibt Linien mit einer Zahl als Herstellerkurzname');

                                 // ANFANG šberprfung ob mehrere H„kchen gesetzt sind '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

                                 var_anzahl_h„kchen := 0;
                                 IF v_Liste_gesamt = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_liste_sys = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_liste_chip = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;

                                 IF var_anzahl_h„kchen > 1 THEN
                                   ERROR('Dieser Teil funktioniert noch nicht. H„kchen wieder l”schen!');


                                 var_anzahl_h„kchen := 0;
                                 IF (AB_holen = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (BE_holen = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (BB_Diff = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF ((AB_holen = TRUE) AND (AE_holen_Datum = 0D)) THEN ERROR('Datum muá eingetragen sein! Programm abgebrochen');
                                 IF (AB_holen_rcksetzen = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (Diff_ermitteln = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (diff_ermitteln_test = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (t„gl_AE = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF ((t„gl_AE = TRUE) AND (AE_holen_Datum_1 = 0D)) THEN ERROR('Datum muá eingetragen sein! Programm abgebrochen');
                                 IF (AE_verteilen = TRUE) THEN var_anzahl_h„kchen :=var_anzahl_h„kchen + 1;
                                 IF (AE_Verteilen_test = TRUE) THEN var_anzahl_h„kchen :=var_anzahl_h„kchen + 1;
                                 IF (AE_Verteilen_mtl = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (AE_Verteilen_mtl_test = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF (AE_Verteilen_xx = TRUE) THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF tglAE = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF AU_sichern = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF AU_Arch_sichern = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF kto_salden = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_vertrieb1 = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF Lager_ausf2 = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF AE_t„gl = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_deb_prf = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_idprove = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF t„gl_AE_Saldo = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_n2 = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_vertrieb4 = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_abstimm_tab_belege = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_post_geschenk_adr_liste = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_geschenk_adr_liste_bersicht = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_kreditprfen = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_Nur_Diff_AB_ausgeben = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_W„_Abstimmung = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_uwe = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_AE_nach_Excel_ausgeben = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_t„gl_AE_Liste_kontrollieren = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_AU_arch_Kontrollblatt = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;
                                 IF v_AU_AE = TRUE THEN var_anzahl_h„kchen := var_anzahl_h„kchen + 1;

                                 IF var_anzahl_h„kchen > 1 THEN
                                   ERROR('Es wurden mehrere H„kchen gesetzt. Report abgebrochen!');

                                 IF var_anzahl_h„kchen = 0 THEN
                                   MESSAGE('Es wurde kein H„kchen gesetzt. Es konnte somit keine Funktion ausgefhrt werden!');

                                 // ENDE šberprfung ob mehrere H„kchen gesetzt sind             '''''''''''''''''''''''''''''''''''''''''''''''''''''''

                                 //25.08.2011-ST šberprft das AE holen Datum, darf nicht Tagesdatum sein, denn er soll ja den Vortag holen
                                 // und das Datum auch mit dem Vortag z.B. belegen, sonst kommt es sp„testens n„chsten Tag zur Fehlermeldung
                                 // wenn dann das Vortagsdatum geholt und eingetragen werden soll

                                 IF AE_holen_Datum = WORKDATE THEN
                                   ERROR('Das AE Datum darf nicht dem Tagesdatum entsprechen. Geben Sie bitte den Vortag ein');
                                 IF AE_holen_Datum = (010199D)THEN
                                   ERROR('Das AE Datum darf nicht 01.01.99 sein. Geben Sie bitte den Vortag ein');

                                 // ANFANG Aufruf der Funktionen *****************************************************************

                                 IF AB_holen = TRUE THEN "aktuellen AB einfgen";
                                 IF BE_holen = TRUE THEN "aktuellen BB einfgen";
                                 IF BB_Diff = TRUE THEN "BB Diff ermitteln";
                                 IF AB_holen_rcksetzen = TRUE THEN "AB einfgen rcksetzen";
                                 IF Diff_ermitteln = TRUE THEN Differenzen_ermitteln_Neu;
                                 IF diff_ermitteln_test = TRUE THEN Differenzen_ermitteln_neu_test;
                                 IF t„gl_AE = TRUE THEN "t„glichen AE einfgen";

                                 IF AE_verteilen = TRUE THEN AE_Verteilen_Filter_Abfrage;
                                 IF AE_Verteilen_test = TRUE THEN AE_Verteilen_Filter_Abfrage;
                                 IF AE_Verteilen_mtl = TRUE THEN AE_Verteilen_Filter_Abfrage;
                                 IF AE_Verteilen_mtl_test = TRUE THEN AE_Verteilen_Filter_Abfrage;
                                 IF AE_Verteilen_xx = TRUE THEN AE_Verteilung_xx;


                                 IF tglAE = TRUE THEN BEGIN
                                  IF v_diff_ok = TRUE THEN BEGIN
                                   "tgl AE in mtl AE bernehmen";
                                 END ELSE BEGIN
                                    ERROR('Das H„kchen zur Best„ttigung, dass die Differenzen im Navision bearbeitet wurden, wurde nicht gesetzt! Punkt 5 zweite Zeile.');
                                  END;
                                 END;


                                 IF AU_sichern = TRUE THEN Auftrag_sichern;
                                 IF AU_Arch_sichern = TRUE THEN Auftrag_Arch_sichern;
                                 IF kto_salden = TRUE THEN "Konto Salden holen";
                                 IF AE_t„gl = TRUE THEN "AE Salden t„gl gesamt";
                                 IF v_vertrieb1 = TRUE THEN AE_Vertrieb1;
                                 IF v_vertrieb4 = TRUE THEN AE_Vertrieb4;
                                 IF v_deb_prf = TRUE THEN Debitor_berprfen;
                                 IF v_idprove = TRUE THEN ID_Prove;
                                 IF t„gl_AE_Saldo = TRUE THEN t„gl_AE_Saldo_abstimmen;
                                 //IF v_n2 = TRUE THEN N2_berprfen;
                                 IF v_abstimm_tab_belege = TRUE THEN Abstimm_tab_belege;
                                 IF v_post_geschenk_adr_liste = TRUE THEN geschenk_adr_liste;
                                 IF v_geschenk_adr_liste_bersicht = TRUE THEN Geschenkliste_šbersicht;  //geschenk_adr_liste_bersicht;
                                 IF v_kreditprfen = TRUE THEN Kredtilimit_prfen;
                                 IF v_Nur_Diff_AB_ausgeben = TRUE THEN Nur_Diff_AB_ausgeben;
                                 IF v_W„_Abstimmung = TRUE THEN WŽ_Abstimmung;
                                 IF v_uwe = TRUE THEN uwe;
                                 IF v_AE_nach_Excel_ausgeben = TRUE THEN AU_Kontrollblatt;
                                 IF v_AU_AE = TRUE THEN AU_AE_Kontrolle;//  Hier umstellen auf getrennte Kontrolle
                                 //
                                 //IF ((v_t„gl_AE_Liste_kontrollieren = TRUE) AND (v_Liste_gesamt = TRUE)) THEN t„gl_AE_Liste_kontrollieren;
                                 //IF ((v_t„gl_AE_Liste_kontrollieren = TRUE) AND (v_liste_sys = TRUE)) THEN t„gl_AE_Liste_kontrollieren;
                                 //IF ((v_t„gl_AE_Liste_kontrollieren = TRUE) AND (v_liste_chip = TRUE)) THEN t„gl_AE_Liste_kontrollieren;
                                 IF v_t„gl_AE_Liste_kontrollieren = TRUE THEN t„gl_AE_Liste_kontrollieren;


                                 IF v_AU_arch_Kontrollblatt = TRUE THEN AU_Archiv_Kontrollblatt;
                                 //  ENDE Aufruf der Funktionen  **********************************************************************
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000;0;Container ;
                ContainerType=ContentArea }

    { 1900002;1;Group     ;
                CaptionML=DEU=" Auftr„ge" }

    { 1000000021;2;Group  ;
                CaptionML=DEU=1. t„gl. AE-Liste aufrufen;
                GroupType=Group }

    { 1000000002;3;Field  ;
                Name=<v_t„gl_AE_Liste_kontrollieren>;
                CaptionML=DEU=t„gl. AE-Kontrollliste aufrufen;
                SourceExpr=v_t„gl_AE_Liste_kontrollieren }

    { 1000000003;3;Field  ;
                Name=<Datum_von>;
                CaptionML=DEU=Datum fr Kontrolle eingeben;
                SourceExpr=AE_holen_Datum_1 }

    { 1000000000;3;Field  ;
                CaptionML=DEU=AU-Nr eingeben fr bereits gelieferte AU's;
                SourceExpr=AU_Arch_Nr_sich }

    { 1000000001;2;Group  ;
                CaptionML=DEU=2. AE Kopf und Positionen prfen;
                GroupType=Group }

    { 1000000004;3;Field  ;
                Name=<v_AE_nach_Excel_ausgeben>;
                CaptionML=DEU=Auftrag listen;
                SourceExpr=v_AE_nach_Excel_ausgeben }

    { 1000000005;3;Field  ;
                Name=<var_AU_N>;
                CaptionML=DEU="AU-Nr nur eingeben wenn ein AU geholt werden soll. Alle = keine Eingabe";
                SourceExpr=var_AU_Nr }

    { 1000000006;2;Group  ;
                CaptionML=DEU=3.  t„glicher Auftragseingang zum Bearbeiten sichern;
                GroupType=Group }

    { 1140023;3;Field     ;
                Name=t„gl_AE;
                CaptionML=DEU=tgl. AE holen  (Datum des AE eintragen);
                SourceExpr=t„gl_AE }

    { 1140035;3;Field     ;
                Name=AE_holen_Datum_1;
                CaptionML=DEU=AE holen Datum;
                SourceExpr=AE_holen_Datum_1 }

    { 1000000007;2;Group  ;
                CaptionML=DEU=4.  t„gliche Auftragsbestandskontrolle;
                GroupType=Group }

    { 1140025;3;Field     ;
                Name=Diff_ermitteln;
                CaptionML=DEU=Differenzen zwischen altem und neuem AB ermitteln;
                SourceExpr=Diff_ermitteln }

    { 1000000028;3;Field  ;
                Name=neu_drucken;
                CaptionML=DEU=Differenzen neu ausdrucken (Filename + Test);
                SourceExpr=v_Nur_Diff_AB_ausgeben }

    { 1000000008;2;Group  ;
                CaptionML=DEU=5.  t„glicher Auftragseingang sowie Differenzen nach Bearbeitung in Monatsdatei bernehmen;
                GroupType=Group }

    { 1140024;3;Field     ;
                Name=tglAE;
                CaptionML=DEU=T„gl. AE sowie Storno, Erh”hungen und Minderungen in mtl. Datei bernehmen;
                SourceExpr=tglAE }

    { 1000000018;3;Field  ;
                Name=v_diff_ok;
                CaptionML=DEU=In der Differenzentabelle sind berz„hlige Zeilen gel”scht.;
                SourceExpr=v_diff_ok }

    { 1000000010;2;Group  ;
                CaptionML=DEU=6.  t„gliche Verteilung nach Excel vornehmen.;
                GroupType=Group }

    { 1140033;3;Field     ;
                Name=AE_verteilen;
                CaptionML=DEU=AE verteilen;
                SourceExpr=AE_verteilen }

    { 1140038;3;Field     ;
                Name=Datum_von;
                CaptionML=DEU=Datum von;
                SourceExpr=Datum_von }

    { 1140047;3;Field     ;
                Name=Datum_bis;
                CaptionML=DEU=Datum bis;
                SourceExpr=Datum_bis }

    { 1000000012;3;Field  ;
                SourceExpr=hinweis[2];
                Enabled=FALSE;
                Editable=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE }

    { 1000000032;3;Field  ;
                Name=AE_Verteilen TEST;
                CaptionML=DEU=AE_Verteilen TEST;
                SourceExpr=AE_Verteilen_test }

    { 1000000011;2;Group  ;
                CaptionML=DEU=7.  monatliche Verteilung nach Excel vornehmen.;
                GroupType=Group }

    { 1140041;3;Field     ;
                Name=AE_Verteilen_mtl;
                CaptionML=DEU=AE Verteilen mtl.;
                SourceExpr=AE_Verteilen_mtl }

    { 1140043;3;Field     ;
                Name=Datum_von_;
                CaptionML=DEU=Datum von;
                SourceExpr=Datum_von }

    { 1140048;3;Field     ;
                Name=Datum_bis_;
                CaptionML=DEU=Datum bis;
                SourceExpr=Datum_bis }

    { 1140054;3;Field     ;
                Name=Filename;
                CaptionML=DEU=Dateiname;
                SourceExpr=Filename }

    { 1000000009;3;Field  ;
                SourceExpr=hinweis[3];
                Enabled=FALSE;
                Editable=FALSE;
                Style=StrongAccent;
                StyleExpr=TRUE }

    { 1000000031;3;Field  ;
                CaptionML=DEU=AE Verteilen mtl TEST;
                SourceExpr=AE_Verteilen_mtl_test }

    { 1000000013;1;Group  ;
                CaptionML=DEU=<Testauftr„ge aus Archiv>;
                GroupType=Group }

    { 1000000014;2;Field  ;
                CaptionML=DEU=Archiv_Auftrag holen;
                SourceExpr=v_AU_arch_Kontrollblatt }

    { 1000000017;2;Field  ;
                CaptionML=DEU=Archiv_Auftragsnummer;
                SourceExpr=var_AU_Nr }

    { 1000000019;1;Group  ;
                CaptionML=DEU=8.  AU- AE-Kontrolle;
                GroupType=Group }

    { 1000000020;2;Field  ;
                Name=<v_AU_AE>;
                CaptionML=DEU=Kontrolle starten;
                SourceExpr=v_AU_AE }

  }
  CODE
  {
    VAR
      Excel@1140164 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Book@1140163 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Range@1140162 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Sheet@1140161 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      wshFile@1000000001 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      j@1140160 : Text[30];
      AB_holen@1140159 : Boolean;
      AB_holen_Datum@1140158 : Date;
      tab_ab@1140157 : Record 37;
      tab_ab_arch@1140156 : Record 5108;
      tab_ab_bw@1140155 : Record 50016;
      prf@1140154 : Record 50016;
      rech@1140153 : Record 113;
      vkrk@1140152 : Record 112;
      best@1140151 : Record 123;
      tab_vkk@1140150 : Record 36;
      tab_vkk_arch@1140149 : Record 5107;
      tab_kurse@1140148 : Record 330;
      TOPAS_API@1000000003 : Codeunit 50001;
      var_AU_Nr@1140147 : Code[20];
      AB_holen_rcksetzen@1140146 : Boolean;
      Diff_ermitteln@1140145 : Boolean;
      diff_ermitteln_test@1000000141 : Boolean;
      t„gl_AE@1140144 : Boolean;
      t„gl_AE_Saldo@1140143 : Boolean;
      var_re_menge@1140142 : Decimal;
      var_be_menge@1140141 : Decimal;
      AE_mtl@1140140 : Record 50017;
      AE_holen_Datum@1140139 : Date;
      tab_vkk1@1140138 : Record 36;
      tab_vkk1_arch@1140137 : Record 5107;
      var_anzahl_h„kchen@1140136 : Integer;
      aus_Excel_impotieren@1140135 : Boolean;
      "**zu importierende Datei"@1140134 : Integer;
      tglAE@1140133 : Boolean;
      AE_holen_Datum_1@1140132 : Date;
      AE_verteilen@1140131 : Boolean;
      Datum_von@1140130 : Date;
      Datum_bis@1140129 : Date;
      var_datum_kz@1140125 : Date;
      var_linie_kz@1140124 : Text[10];
      var_rec@1140123 : Record 50017;
      Datei@1140122 : File;
      AE_Verteilen_mtl@1140121 : Boolean;
      AE_Verteilen_xx@1140120 : Boolean;
      Filename@1140119 : Text;
      bb_Filename@1140118 : Text;
      tab_be@1140117 : Record 39;
      BE_holen@1140116 : Boolean;
      tab_bek@1140115 : Record 38;
      BB_Diff@1140114 : Boolean;
      tab_guz@1140113 : Record 115;
      tab_guk@1140112 : Record 114;
      tab_guk1@1140111 : Record 114;
      AU_sichern@1140110 : Boolean;
      AU_Arch_sichern@1140109 : Boolean;
      AU_Nr_sich@1140108 : Code[10];
      AU_Arch_Nr_sich@1140107 : Code[10];
      kto_salden@1140106 : Boolean;
      kto_datum@1140105 : Date;
      sachposten@1140104 : Record 17;
      sum_konten@1140103 : Decimal;
      sum_konten1@1140102 : Decimal;
      sum_konten2@1140101 : Decimal;
      sum_konten3@1140100 : Decimal;
      sum_konten4@1140099 : Decimal;
      sum_konten5@1140098 : Decimal;
      sum_konten6@1140097 : Decimal;
      sum_konten7@1140096 : Decimal;
      sum_konten8@1140095 : Decimal;
      sum_konten9@1140094 : Decimal;
      sum_konten10@1140093 : Decimal;
      sum_konten11@1140092 : Decimal;
      sum_konten12@1140091 : Decimal;
      sum_konten13@1140090 : Decimal;
      sum_konten14@1140089 : Decimal;
      sum_konten15@1140088 : Decimal;
      sum_konten16@1140087 : Decimal;
      sum_konten17@1140086 : Decimal;
      sum_konten18@1140085 : Decimal;
      sum_konten19@1140084 : Decimal;
      sum_konten20@1140083 : Decimal;
      saldo_heute_datum@1140082 : Date;
      Jahr@1140075 : Integer;
      Monat@1140074 : Integer;
      MonatGJ@1140073 : Integer;
      KW@1140072 : Integer;
      Beleg@1140071 : Record 50010;
      herstell@1140070 : Record 5720;
      deb@1140069 : Record 18;
      AE_t„gl@1140068 : Boolean;
      AE_t„gl_gesamt@1140067 : Decimal;
      AE_t„gl_datum@1140066 : Date;
      JahrGJ@1140063 : Integer;
      v_vertrieb1@1140062 : Boolean;
      Lager_ausf2@1140061 : Boolean;
      Lager_abgrenz_Datum@1140060 : Date;
      Kurs_JPY@1140059 : Decimal;
      Kurs_USD@1140058 : Decimal;
      Kurs_GBP@1140057 : Decimal;
      Artikel@1140056 : Record 27;
      Wertposten@1140055 : Record 5802;
      Lagerort1@1140054 : Code[10];
      Lagerort2@1140053 : Code[10];
      Lagerort3@1140052 : Code[10];
      Artikelposten@1140051 : Record 32;
      Lagerbestand@1140050 : Decimal;
      Lagerstck1@1140049 : Decimal;
      var_NEXT@1140048 : Integer;
      var_text1@1140047 : Text[30];
      var_text2@1140046 : Text[30];
      var_letzter_wert@1140045 : Decimal;
      var_sum_zugang_wert@1140044 : Decimal;
      var_sum_zugang_wert_stichkurs@1140043 : Decimal;
      W„_kurs@1140042 : Record 330;
      EK_Rech_k@1140041 : Record 122;
      zu_W„h_kurs@1140040 : Decimal;
      var_sum_bewert@1140039 : Decimal;
      v_dcwert@1140038 : Decimal;
      v_sum_bewert@1140037 : Decimal;
      v_dc@1140036 : Decimal;
      v_zuwert@1140035 : Decimal;
      v_stichwert@1140034 : Decimal;
      v_bewert@1140033 : Decimal;
      ek_preis@1140032 : Record 7012;
      v_dcw„@1140031 : Text[30];
      v_ab_bestand@1140030 : Decimal;
      v_bb_bestand@1140029 : Decimal;
      v_sonderlager@1140028 : Boolean;
      v_ab_menge@1140027 : Decimal;
      v_deb_prf@1140026 : Boolean;
      kontakt@1140025 : Record 5050;
      kontakt1@1140024 : Record 5050;
      v_idprove@1140023 : Boolean;
      v_del@1140022 : Text[5];
      v_del1@1140021 : Text[5];
      v_kontaktnr@1140020 : Text[10];
      Dateiname@1140019 : Text;
      AE_Saldo_prf@1140018 : Decimal;
      Pfad@1140017 : Text;
      Pfaddatum@1140016 : Text;
      Pfad_tag@1140015 : Text[10];
      Pfad_monat@1140014 : Text[10];
      Pfad_jahr@1140013 : Text[10];
      v_n2@1140012 : Boolean;
      v_vertrieb4@1140011 : Boolean;
      OK@1140010 : Boolean;
      anz_zent@1140009 : Decimal;
      anz_must@1140008 : Decimal;
      anz_gutschr@1140007 : Decimal;
      v_abstimm_tab_belege@1140006 : Boolean;
      Lief_adr@1140005 : Record 222;
      v_post_geschenk_adr_liste@1140002 : Boolean;
      tab_geschenk@1140001 : Record 50032;
      v_geschenk_adr_liste_bersicht@1140000 : Boolean;
      hinweis@1000000000 : ARRAY [30] OF Text;
      Text100@1000000002 : TextConst 'DEU=Sie mssen zuerst einen Dateinamen vergeben.';
      Text000@1000000028 : TextConst 'DEU=Daten werden analysiert ...\\;ENU=Analyzing Data...\\';
      Text001@1000000027 : TextConst 'DEU=Auftragseingang;ENU=New Orders';
      Text002@1000000026 : TextConst 'DEU=Arbeitsmappe aktualisieren;ENU=Update Workbook';
      Text020@1000000023 : TextConst 'DEU=Datum';
      Text021@1000000022 : TextConst 'DEU=Auftragsnr.';
      Text022@1000000021 : TextConst 'DEU=Debitornr.';
      Text023@1000000020 : TextConst 'DEU=Name';
      Text024@1000000019 : TextConst 'DEU=Menge';
      Text025@1000000018 : TextConst 'DEU=Artikel';
      Text026@1000000017 : TextConst 'DEU=Lager';
      Text027@1000000016 : TextConst 'DEU=EK';
      Text028@1000000015 : TextConst 'DEU=VK';
      Text029@1000000014 : TextConst 'DEU=W„hrung';
      Text030@1000000013 : TextConst 'DEU=WŽ_Faktor';
      Text031@1000000012 : TextConst 'DEU=Betrag in EUR';
      Text032@1000000011 : TextConst 'DEU=DB';
      Text033@1000000010 : TextConst 'DEU=Bearbeiter';
      Text034@1000000009 : TextConst 'DEU=Vertreter';
      Text035@1000000008 : TextConst 'DEU=Hersteller';
      Text036@1000000007 : TextConst 'DEU=EK Gesamt';
      Text037@1000000006 : TextConst 'DEU=PLZ';
      Text038@1000000005 : TextConst 'DEU=Endkunde';
      Text039@1000000024 : TextConst 'DEU=Team';
      Text040@1000000029 : TextConst 'DEU=Gebiet';
      ExcelFileExtensionTok@1000000004 : TextConst '@@@={Locked};DEU=.xlsx;ENU=.xlsx';
      TempExcelBuffer@1000000040 : TEMPORARY Record 370;
      FileMgt@1000000038 : Codeunit 419;
      ServerFileName@1000000037 : Text;
      SheetName@1000000036 : Text[250];
      DoUpdateExistingWorksheet@1000000035 : Boolean;
      Testmode@1000000034 : Boolean;
      Window@1000000033 : Dialog;
      RecNo@1000000032 : Integer;
      TotalRecNo@1000000031 : Integer;
      RowNo@1000000030 : Integer;
      ColumnNo@1000000025 : Integer;
      AE_Verteilen_mtl_test@1000000039 : Boolean;
      AE_Verteilen_test@1000000043 : Boolean;
      v_Pfadname@1000000041 : Text[40];
      v_Pfadzuweisung@1000000042 : Text[3];
      Text050@1000000044 : TextConst 'DEU=No_';
      Text051@1000000045 : TextConst 'DEU=Company Name';
      Text052@1000000046 : TextConst 'DEU=Name 2';
      Text053@1000000047 : TextConst 'DEU=First Name';
      Text054@1000000048 : TextConst 'DEU=Surname';
      Text055@1000000049 : TextConst 'DEU=Address';
      Text056@1000000050 : TextConst 'DEU=Address 2';
      Text057@1000000051 : TextConst 'DEU=Post Code';
      Text058@1000000052 : TextConst 'DEU=City';
      Text059@1000000053 : TextConst 'DEU=Nummer';
      IDProvExtensionTok@1000000054 : TextConst 'DEU=.csv';
      "Text003

    "@1000000055 : TextConst 'DEU=Excel Export erfolgreich abgeschlossen.';
      v_kreditprfen@1000000056 : Boolean;
      v_deb_kredit@1000000057 : Code[10];
      AB_holen_Datum1@1000000058 : Date;
      debpos@1000000059 : Record 21;
      v_umsatz12@1000000060 : Decimal;
      v_zahlung12@1000000061 : Decimal;
      v_anz_RE12@1000000062 : Decimal;
      v_date_1RE@1000000063 : Date;
      v_OP_gesamt@1000000064 : Decimal;
      v_Nur_Diff_AB_ausgeben@1000000065 : Boolean;
      v_W„_Abstimmung@1000000066 : Boolean;
      Kredpost@1000000067 : Record 25;
      saldo_sum@1000000068 : Decimal;
      ekz@1000000069 : Record 39;
      v_druck_art@1000000070 : Decimal;
      v_FLmenge@1000000071 : Decimal;
      v_FLwert@1000000072 : Decimal;
      v_ek_preis@1000000077 : Decimal;
      v_au_wert@1000000078 : Decimal;
      v_aur_wert@1000000073 : Decimal;
      v_lager_wert@1000000079 : Decimal;
      v_best_wert@1000000080 : Decimal;
      v_ek_w„@1000000074 : Text;
      v_usd_gesamt@1000000075 : Decimal;
      v_jpy_gesamt@1000000076 : Decimal;
      v_gbp_gesamt@1000000081 : Decimal;
      v_eur_gesamt@1000000082 : Decimal;
      bankpos@1000000083 : Record 271;
      sum_kont4021@1000000084 : Decimal;
      sum_kont4022@1000000085 : Decimal;
      sum_kont4023@1000000086 : Decimal;
      sum_kont4025@1000000087 : Decimal;
      sum_kont4118@1000000088 : Decimal;
      sum_kont4120@1000000089 : Decimal;
      sum_kont4122@1000000090 : Decimal;
      sum_kont4221@1000000091 : Decimal;
      sum_kont4222@1000000092 : Decimal;
      sum_kont4223@1000000093 : Decimal;
      sum_kont4225@1000000094 : Decimal;
      sum_kont4317@1000000095 : Decimal;
      sum_kont4338@1000000096 : Decimal;
      sum_kont4407@1000000097 : Decimal;
      sum_kont4408@1000000098 : Decimal;
      sum_kont4412@1000000099 : Decimal;
      sum_kont4416@1000000100 : Decimal;
      sum_kont4418@1000000101 : Decimal;
      sum_kont4421@1000000102 : Decimal;
      sum_kont4422@1000000103 : Decimal;
      sum_kont4423@1000000104 : Decimal;
      sum_kont4424@1000000105 : Decimal;
      sum_kont4425@1000000106 : Decimal;
      sum_kont4690@1000000107 : Decimal;
      v_uwe@1000000108 : Boolean;
      v_AE_nach_Excel_ausgeben@1000000109 : Boolean;
      v_t„gl_AE_Liste_kontrollieren@1000000110 : Boolean;
      v_Q_Daten@1000000111 : Record 50014;
      v_deckblatt@1000000112 : Boolean;
      v_bemerkung@1000000113 : Record 44;
      v_sum_AU_MW@1000000114 : Decimal;
      v_sum_AU_WŽ@1000000115 : Decimal;
      v_sum_13B2@1000000116 : Decimal;
      v_EU_Fehler@1000000117 : Decimal;
      v_sum_AE_Gesamt@1000000118 : Decimal;
      v_sum_AE_DL@1000000119 : Decimal;
      v_sum_AE_HAN@1000000120 : Decimal;
      v_sum_AE_SYS@1000000121 : Decimal;
      v_kursdif_vkk_vkz@1000000122 : Boolean;
      tab_vkz@1000000123 : Record 37;
      tab_vkz_arch@1000000133 : Record 5108;
      v_prdbuchgrp@1000000124 : Code[15];
      RADROK@1000000125 : Text[20];
      LADROK@1000000126 : Text[20];
      RAOK@1000000127 : Decimal;
      LAOK@1000000128 : Decimal;
      v_Ust_ID_1@1000000129 : Text[15];
      v_Ust_ID_2@1000000130 : Integer;
      v_USt_ID_fehlt@1000000131 : Boolean;
      v_POS@1000000132 : Integer;
      v_AU_arch_Kontrollblatt@1000000134 : Boolean;
      v_Liste_gesamt@1000000135 : Boolean;
      v_liste_sys@1000000136 : Boolean;
      v_liste_chip@1000000137 : Boolean;
      v_Marge10prozent@1000000138 : Boolean;
      v_VAT_fehlt@1000000139 : Boolean;
      v_VAT_Deb@1000000140 : Text[20];
      v_diff_ok@1000000142 : Boolean;
      v_AU_AE@1000000143 : Boolean;
      v_dopp_AUNR@1000000144 : Code[10];
      v_Fehler_16_DL@1000000145 : Boolean;
      v_AUNr@1000000146 : Code[10];
      v_AUZeilNr@1000000147 : Integer;
      v_AUDatum@1000000148 : Date;
      v_Belegart@1000000149 : Text[15];
      v_Fehler_16_Produktgrp@1000000150 : Boolean;
      v_nicht_rechnen@1000000151 : Boolean;

    PROCEDURE "aktuellen AB einfgen"@1140000();
    BEGIN
    END;

    PROCEDURE "AB einfgen rcksetzen"@1140001();
    BEGIN
    END;

    PROCEDURE "t„glichen AE einfgen"@1140003();
    BEGIN
      // berprft UB Stand 26.11.2018
      // ANFANG L”schen Tabelle AE_mtl
      // AE_mtl.RESET;
      // AE_mtl.DELETEALL;
      // ENDE   L”schen Tabelle AE_mtl

      // ANFANG Einfgen von neuem AE

      AE_mtl.RESET;
      tab_ab.RESET;
      tab_vkk.RESET;
      tab_vkk.SETFILTER("Order Date",'%1',AE_holen_Datum_1);
      //tab_vkk.SETFILTER(tab_vkk."Document Type",'%1', tab_vkk."Document Type"::Order);
      IF tab_vkk.FIND('-') THEN
        REPEAT
          tab_ab.RESET;
          tab_ab.SETFILTER("Document No.",'%1',tab_vkk."No.");
          tab_ab.SETFILTER("Document Type",'%1', tab_ab."Document Type"::Order);
          tab_ab.SETFILTER(Type,'%1',tab_ab.Type::Item);
          tab_ab.SETFILTER("Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          tab_ab.SETFILTER("Outstanding Quantity",'>%1',0);
          IF tab_ab.FIND('-')  THEN
            REPEAT
              AE_mtl.INIT;
              AE_mtl.Datum := AE_holen_Datum_1;
              AE_mtl.AU_Nr := tab_ab."Document No.";
              AE_mtl.POS_Nr := tab_ab."Line No.";
              AE_mtl.Belegart := 'AETG';
              AE_mtl.Deb_Nr := tab_ab."Sell-to Customer No.";
              AE_mtl.Artikel := tab_ab."No.";
              AE_mtl.Menge := tab_ab.Quantity;
              AE_mtl.Restmenge := tab_ab."Outstanding Quantity";
              AE_mtl.EK := tab_ab."Unit Cost (LCY)";
              AE_mtl.VK := tab_ab."Unit Price";
              AE_mtl."Best„tigt LD" := tab_ab."Promised Delivery Date";
              AE_mtl.Wunschdatum := tab_ab."Requested Delivery Date";
              AE_mtl.Status := 'AE';
              AE_mtl.Art := 'TAG';
              AE_mtl."EK Gesamt" := ROUND(((tab_ab.Quantity) * (tab_ab."Unit Cost (LCY)")),0.01);
              AE_mtl."VK Gesamt" := ROUND(((tab_ab.Quantity) * (tab_ab."Unit Price")),0.01);
              AE_mtl.Lager := tab_ab."Location Code";
              AE_mtl."DB %" := tab_ab."Profit %";
              AE_mtl.Linie := tab_ab."Manufacturer Code";
              AE_mtl.Endkunde := tab_ab.Endkunde;
              IF tab_ab."Blanket Order No." <> '' THEN
                AE_mtl."AU aus Rahmen":=TRUE;

              tab_vkk1.RESET;
              tab_vkk1.SETFILTER("No.",'%1',AE_mtl.AU_Nr);
              IF tab_vkk1.FINDFIRST THEN BEGIN
                AE_mtl.Debitor := tab_vkk1."Sell-to Customer Name";
                AE_mtl.W„hrungscode := tab_vkk1."Currency Code";
                AE_mtl.w„_faktor := tab_vkk1."Currency Factor";
                AE_mtl.Auftragsdatum := tab_vkk1."Order Date";
                AE_mtl.Betreuer := tab_vkk1."Betreuer Innendienst";
                AE_mtl.Vertreter := tab_vkk1."Salesperson Code";
                AE_mtl.Teams := tab_vkk1.Teams;
                AE_mtl.Gebietscode := tab_vkk1."Territory Code";
                AE_mtl.PLZ := tab_vkk1."Sell-to Post Code";
              END;
              IF AE_mtl.w„_faktor = 0 THEN
                AE_mtl."Betrag in EUR" := AE_mtl."VK Gesamt"
              ELSE
                AE_mtl."Betrag in EUR" := (AE_mtl."VK Gesamt" / AE_mtl.w„_faktor);
             AE_mtl.INSERT;
           UNTIL tab_ab.NEXT = 0;
        UNTIL tab_vkk.NEXT = 0;
      //  ENDE Einfgen von neuem AE

      // Gutschriften einspielen 28.11.2011
      AE_mtl.RESET;
      tab_guz.RESET;
      tab_guk.RESET;
      tab_guk.SETFILTER("Posting Date",'%1',AE_holen_Datum_1);
      IF tab_guk.FIND('-') THEN
        REPEAT
          tab_guz.RESET;
          tab_guz.SETFILTER("Document No.",'%1',tab_guk."No.");
          tab_guz.SETFILTER(Type,'%1',tab_guz.Type::Item);
          tab_guz.SETFILTER("Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
          tab_guz.SETFILTER(Quantity,'>%1',0);
          IF tab_guz.FIND('-')  THEN
            REPEAT
              AE_mtl.INIT;
              AE_mtl.Datum := AE_holen_Datum_1;
              AE_mtl.AU_Nr := tab_guz."Document No.";
              AE_mtl.POS_Nr := tab_guz."Line No.";
              AE_mtl.Belegart := 'GUTG';
              AE_mtl.Deb_Nr := tab_guz."Sell-to Customer No.";
              AE_mtl.Artikel := tab_guz."No.";
              AE_mtl.Menge := tab_guz.Quantity;
              AE_mtl.Restmenge := tab_guz.Quantity;
              AE_mtl.EK := tab_guz."Unit Cost (LCY)";
              AE_mtl.VK := tab_guz."Unit Price";
              AE_mtl.Status := 'AE';
              AE_mtl.Art := 'TAG';
              AE_mtl."EK Gesamt" := ROUND(((tab_guz.Quantity) * (tab_guz."Unit Cost (LCY)") * (-1)),0.01);
              AE_mtl."VK Gesamt" := ROUND(((tab_guz.Quantity) * (tab_guz."Unit Price") * (-1)),0.01);
              AE_mtl.Lager:=tab_guz."Location Code";
              AE_mtl.Linie := tab_guz."Manufacturer Code";
              AE_mtl.Endkunde := tab_guz.Endkunde;
              AE_mtl.Debitor := tab_guk."Sell-to Customer Name";
              AE_mtl.W„hrungscode := tab_guk."Currency Code";
              AE_mtl.w„_faktor := tab_guk."Currency Factor";
              AE_mtl.Auftragsdatum := tab_guk."Posting Date";
              AE_mtl.Betreuer := tab_guk."Betreuer Innendienst";
              AE_mtl.Vertreter := tab_guk."Salesperson Code";
              AE_mtl.Teams := tab_guk.Teams;
              AE_mtl.PLZ := tab_guk."Sell-to Post Code";
              AE_mtl.Gebietscode := tab_guk."Territory Code";

              IF AE_mtl.w„_faktor = 0 THEN BEGIN
                AE_mtl."Betrag in EUR" := AE_mtl."VK Gesamt";
              END ELSE BEGIN
                AE_mtl."Betrag in EUR" := (AE_mtl."VK Gesamt"/AE_mtl.w„_faktor);
              END;
              AE_mtl.INSERT;
           UNTIL tab_guz.NEXT = 0;
        UNTIL tab_guk.NEXT = 0;
      // ENDE Gutschriften einspielen 28.11.2011

      "Linien umsetzen";
    END;

    PROCEDURE "tgl AE in mtl AE bernehmen"@1140005();
    BEGIN
      // berprft UB Stand 26.11.2018
      AE_mtl.RESET;
      AE_mtl.SETFILTER(Belegart,'%1','AETG');
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          AE_mtl.RENAME(AE_mtl.Datum,AE_mtl.AU_Nr,AE_mtl.POS_Nr,AE_mtl.Deb_Nr,'AMTL');
        UNTIL AE_mtl.NEXT = 0;
      END;

      AE_mtl.RESET;
      AE_mtl.SETFILTER(Belegart,'%1','GUTG');
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          AE_mtl.RENAME(AE_mtl.Datum,AE_mtl.AU_Nr,AE_mtl.POS_Nr,AE_mtl.Deb_Nr,'GUMT');
        UNTIL AE_mtl.NEXT = 0;
      END;

      AE_mtl.RESET;
      AE_mtl.SETFILTER(Belegart,'%1','AEND');
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          AE_mtl.RENAME(AE_mtl.Datum,AE_mtl.AU_Nr,AE_mtl.POS_Nr,AE_mtl.Deb_Nr,'AEMT');
        UNTIL AE_mtl.NEXT = 0;
      END;
    END;

    PROCEDURE AE_Verteilung_mtl@1140027();
    BEGIN
    END;

    PROCEDURE AE_Verteilung_xx@1140029();
    BEGIN
    END;

    PROCEDURE "aktuellen BB einfgen"@1140012();
    BEGIN
    END;

    PROCEDURE "Linien umsetzen"@1140013();
    BEGIN
      // berprft UB Stand 26.11.2018
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(tab_ab_bw.Linie,'%1..%2','00','99');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
      //  IF tab_ab_bw.Linie='00' THEN tab_ab_bw.Linie:='IDT';
          IF tab_ab_bw.Linie='01' THEN tab_ab_bw.Linie:='LSI';
      //  IF tab_ab_bw.Linie='02' THEN tab_ab_bw.Linie:='FUM';
      //  IF tab_ab_bw.Linie='03' THEN tab_ab_bw.Linie:='SCN';
          IF tab_ab_bw.Linie='04' THEN tab_ab_bw.Linie:='XMO';
          IF tab_ab_bw.Linie='05' THEN tab_ab_bw.Linie:='BTC';
      //  IF tab_ab_bw.Linie='06' THEN tab_ab_bw.Linie:='SMT';
          IF tab_ab_bw.Linie='07' THEN tab_ab_bw.Linie:='GEO';
          IF tab_ab_bw.Linie='08' THEN tab_ab_bw.Linie:='GSC';
      //  IF tab_ab_bw.Linie='09' THEN tab_ab_bw.Linie:='ART';
      //  IF tab_ab_bw.Linie='10' THEN tab_ab_bw.Linie:='ZOR';
          IF tab_ab_bw.Linie='11' THEN tab_ab_bw.Linie:='ECT';
          IF tab_ab_bw.Linie='12' THEN tab_ab_bw.Linie:='NEX';
      //  IF tab_ab_bw.Linie='13' THEN tab_ab_bw.Linie:='NET';
          IF tab_ab_bw.Linie='14' THEN tab_ab_bw.Linie:='FOX';
      //  IF tab_ab_bw.Linie='15' THEN tab_ab_bw.Linie:='CAV';
          IF tab_ab_bw.Linie='16' THEN tab_ab_bw.Linie:='VIA';
          IF tab_ab_bw.Linie='17' THEN tab_ab_bw.Linie:='DSP';
          IF tab_ab_bw.Linie='18' THEN tab_ab_bw.Linie:='HIF';
          IF tab_ab_bw.Linie='19' THEN tab_ab_bw.Linie:='PAI';
          IF tab_ab_bw.Linie='20' THEN tab_ab_bw.Linie:='WIL';
      //  IF tab_ab_bw.Linie='21' THEN tab_ab_bw.Linie:='TSC';
          IF tab_ab_bw.Linie='22' THEN tab_ab_bw.Linie:='SIL';
          IF tab_ab_bw.Linie='23' THEN tab_ab_bw.Linie:='FCT';
      //  IF tab_ab_bw.Linie='24' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='25' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='26' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='27' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='28' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='29' THEN tab_ab_bw.Linie:='';
          IF tab_ab_bw.Linie='30' THEN tab_ab_bw.Linie:='ICP';
          IF tab_ab_bw.Linie='31' THEN tab_ab_bw.Linie:='STR';
      //  IF tab_ab_bw.Linie='32' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='33' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='34' THEN tab_ab_bw.Linie:='PAR';
      //  IF tab_ab_bw.Linie='35' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='36' THEN tab_ab_bw.Linie:='';
          IF tab_ab_bw.Linie='37' THEN tab_ab_bw.Linie:='ITC';
      //  IF tab_ab_bw.Linie='38' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='39' THEN tab_ab_bw.Linie:='UBI';
          IF tab_ab_bw.Linie='40' THEN tab_ab_bw.Linie:='RIC';
      //  IF tab_ab_bw.Linie='41' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='42' THEN tab_ab_bw.Linie:='';
          IF tab_ab_bw.Linie='43' THEN tab_ab_bw.Linie:='OVT';
          IF tab_ab_bw.Linie='44' THEN tab_ab_bw.Linie:='OVM';
      //  IF tab_ab_bw.Linie='45' THEN tab_ab_bw.Linie:='SIM';
      //  IF tab_ab_bw.Linie='46' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='47' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='48' THEN tab_ab_bw.Linie:='PLX';
      //  IF tab_ab_bw.Linie='49' THEN tab_ab_bw.Linie:='TEC';
      //  IF tab_ab_bw.Linie='50' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='51' THEN tab_ab_bw.Linie:='INV';
          IF tab_ab_bw.Linie='52' THEN tab_ab_bw.Linie:='ACT';
          IF tab_ab_bw.Linie='53' THEN tab_ab_bw.Linie:='ACI';
          IF tab_ab_bw.Linie='54' THEN tab_ab_bw.Linie:='GSI';
          IF tab_ab_bw.Linie='55' THEN tab_ab_bw.Linie:='KIN';
          IF tab_ab_bw.Linie='56' THEN tab_ab_bw.Linie:='IKA';
          IF tab_ab_bw.Linie='57' THEN tab_ab_bw.Linie:='ACC';
          IF tab_ab_bw.Linie='5710' THEN tab_ab_bw.Linie:='ACA';
          IF tab_ab_bw.Linie='5720' THEN tab_ab_bw.Linie:='ACP';
          IF tab_ab_bw.Linie='5730' THEN tab_ab_bw.Linie:='ASS';
          IF tab_ab_bw.Linie='58' THEN tab_ab_bw.Linie:='ACL';
          IF tab_ab_bw.Linie='59' THEN tab_ab_bw.Linie:='ACS';
      //  IF tab_ab_bw.Linie='60' THEN tab_ab_bw.Linie:='SSC';
      //  IF tab_ab_bw.Linie='61' THEN tab_ab_bw.Linie:='JEL';
      //  IF tab_ab_bw.Linie='62' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='63' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='64' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='65' THEN tab_ab_bw.Linie:='WWC';
      //  IF tab_ab_bw.Linie='66' THEN tab_ab_bw.Linie:='SYC';
      //  IF tab_ab_bw.Linie='67' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='68' THEN tab_ab_bw.Linie:='WML';
          IF tab_ab_bw.Linie='69' THEN tab_ab_bw.Linie:='CIR';
      //  IF tab_ab_bw.Linie='70' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='71' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='72' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='73' THEN tab_ab_bw.Linie:='C2M';
          IF tab_ab_bw.Linie='74' THEN tab_ab_bw.Linie:='DIG';
      //  IF tab_ab_bw.Linie='75' THEN tab_ab_bw.Linie:='PHY';
      //  IF tab_ab_bw.Linie='76' THEN tab_ab_bw.Linie:='SBT';
      //  IF tab_ab_bw.Linie='77' THEN tab_ab_bw.Linie:='CEC';
          IF tab_ab_bw.Linie='78' THEN tab_ab_bw.Linie:='HAL';
      //  IF tab_ab_bw.Linie='79' THEN tab_ab_bw.Linie:='ASD';
      //  IF tab_ab_bw.Linie='80' THEN tab_ab_bw.Linie:='MAG';
      //  IF tab_ab_bw.Linie='81' THEN tab_ab_bw.Linie:='INI';
          IF tab_ab_bw.Linie='82' THEN tab_ab_bw.Linie:='SPL';
      //  IF tab_ab_bw.Linie='83' THEN tab_ab_bw.Linie:='RLI';
      //  IF tab_ab_bw.Linie='84' THEN tab_ab_bw.Linie:='ANS';
          IF tab_ab_bw.Linie='85' THEN tab_ab_bw.Linie:='FER';
          IF tab_ab_bw.Linie='86' THEN tab_ab_bw.Linie:='FES';
          IF tab_ab_bw.Linie='87' THEN tab_ab_bw.Linie:='FET';
          IF tab_ab_bw.Linie='88' THEN tab_ab_bw.Linie:='WIS';
          IF tab_ab_bw.Linie='89' THEN tab_ab_bw.Linie:='WIT';
      //  IF tab_ab_bw.Linie='90' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='91' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='92' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='93' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='94' THEN tab_ab_bw.Linie:='';
      //  IF tab_ab_bw.Linie='95' THEN tab_ab_bw.Linie:='';
          IF tab_ab_bw.Linie='96' THEN tab_ab_bw.Linie:='TSG';
          IF tab_ab_bw.Linie='9610' THEN tab_ab_bw.Linie:='ASP';
          IF tab_ab_bw.Linie='9620' THEN tab_ab_bw.Linie:='FEP';
          IF tab_ab_bw.Linie='9630' THEN tab_ab_bw.Linie:='WIP';
          IF tab_ab_bw.Linie='97' THEN tab_ab_bw.Linie:='SON';
          IF tab_ab_bw.Linie='98' THEN tab_ab_bw.Linie:='SON';
          IF tab_ab_bw.Linie='99' THEN tab_ab_bw.Linie:='TOP';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;




      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Linie,'%1..%2','00','99');
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
      //  IF AE_mtl.Linie='00' THEN AE_mtl.Linie:='IDT';
          IF AE_mtl.Linie='01' THEN AE_mtl.Linie:='LSI';
      //  IF AE_mtl.Linie='02' THEN AE_mtl.Linie:='FUM';
      //  IF AE_mtl.Linie='03' THEN AE_mtl.Linie:='SCN';
          IF AE_mtl.Linie='04' THEN AE_mtl.Linie:='XMO';
          IF AE_mtl.Linie='05' THEN AE_mtl.Linie:='BTC';
      //  IF AE_mtl.Linie='06' THEN AE_mtl.Linie:='SMT';
          IF AE_mtl.Linie='07' THEN AE_mtl.Linie:='GEO';
          IF AE_mtl.Linie='08' THEN AE_mtl.Linie:='GSC';
      //  IF AE_mtl.Linie='09' THEN AE_mtl.Linie:='ART';
      //  IF AE_mtl.Linie='10' THEN AE_mtl.Linie:='ZOR';
          IF AE_mtl.Linie='11' THEN AE_mtl.Linie:='ECT';
          IF AE_mtl.Linie='12' THEN AE_mtl.Linie:='NEX';
      //  IF AE_mtl.Linie='13' THEN AE_mtl.Linie:='NET';
          IF AE_mtl.Linie='14' THEN AE_mtl.Linie:='FOX';
      //  IF AE_mtl.Linie='15' THEN AE_mtl.Linie:='CAV';
          IF AE_mtl.Linie='16' THEN AE_mtl.Linie:='VIA';
          IF AE_mtl.Linie='17' THEN AE_mtl.Linie:='DSP';
          IF AE_mtl.Linie='18' THEN AE_mtl.Linie:='HIF';
          IF AE_mtl.Linie='19' THEN AE_mtl.Linie:='PAI';
          IF AE_mtl.Linie='20' THEN AE_mtl.Linie:='WIL';
      //  IF AE_mtl.Linie='21' THEN AE_mtl.Linie:='TSC';
          IF AE_mtl.Linie='22' THEN AE_mtl.Linie:='SIL';
          IF AE_mtl.Linie='23' THEN AE_mtl.Linie:='FTC';
      //  IF AE_mtl.Linie='24' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='25' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='26' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='27' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='28' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='29' THEN AE_mtl.Linie:='';
          IF AE_mtl.Linie='30' THEN AE_mtl.Linie:='ICP';
          IF AE_mtl.Linie='31' THEN AE_mtl.Linie:='STR';
      //  IF AE_mtl.Linie='32' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='33' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='34' THEN AE_mtl.Linie:='PAR';
      //  IF AE_mtl.Linie='35' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='36' THEN AE_mtl.Linie:='';
          IF AE_mtl.Linie='37' THEN AE_mtl.Linie:='ITC';
      //  IF AE_mtl.Linie='38' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='39' THEN AE_mtl.Linie:='UBI';
          IF AE_mtl.Linie='40' THEN AE_mtl.Linie:='RIC';
      //  IF AE_mtl.Linie='41' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='42' THEN AE_mtl.Linie:='';
          IF AE_mtl.Linie='43' THEN AE_mtl.Linie:='OVT';
          IF AE_mtl.Linie='44' THEN AE_mtl.Linie:='OVM';
      //  IF AE_mtl.Linie='45' THEN AE_mtl.Linie:='SIM';
      //  IF AE_mtl.Linie='46' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='47' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='48' THEN AE_mtl.Linie:='PLX';
      //  IF AE_mtl.Linie='49' THEN AE_mtl.Linie:='TEC';
      //  IF AE_mtl.Linie='50' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='51' THEN AE_mtl.Linie:='INV';
          IF AE_mtl.Linie='52' THEN AE_mtl.Linie:='ACT';
          IF AE_mtl.Linie='53' THEN AE_mtl.Linie:='ACI';
          IF AE_mtl.Linie='54' THEN AE_mtl.Linie:='GSI';
          IF AE_mtl.Linie='55' THEN AE_mtl.Linie:='KIN';
          IF AE_mtl.Linie='56' THEN AE_mtl.Linie:='IKA';
          IF AE_mtl.Linie='57' THEN AE_mtl.Linie:='ACC';
          IF AE_mtl.Linie='5710' THEN AE_mtl.Linie:='ACA';
          IF AE_mtl.Linie='5720' THEN AE_mtl.Linie:='ACP';
          IF AE_mtl.Linie='5730' THEN AE_mtl.Linie:='ASS';
          IF AE_mtl.Linie='58' THEN AE_mtl.Linie:='ACL';
          IF AE_mtl.Linie='59' THEN AE_mtl.Linie:='ACS';
      //  IF AE_mtl.Linie='60' THEN AE_mtl.Linie:='SSC';
      //  IF AE_mtl.Linie='61' THEN AE_mtl.Linie:='JEL';
      //  IF AE_mtl.Linie='62' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='63' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='64' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='65' THEN AE_mtl.Linie:='WWC';
      //  IF AE_mtl.Linie='66' THEN AE_mtl.Linie:='SYC';
      //  IF AE_mtl.Linie='67' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='68' THEN AE_mtl.Linie:='WML';
          IF AE_mtl.Linie='69' THEN AE_mtl.Linie:='CIR';
      //  IF AE_mtl.Linie='70' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='71' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='72' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='73' THEN AE_mtl.Linie:='C2M';
          IF AE_mtl.Linie='74' THEN AE_mtl.Linie:='DIG';
      //  IF AE_mtl.Linie='75' THEN AE_mtl.Linie:='PHY';
      //  IF AE_mtl.Linie='76' THEN AE_mtl.Linie:='SBT';
      //  IF AE_mtl.Linie='77' THEN AE_mtl.Linie:='CEC';
          IF AE_mtl.Linie='78' THEN AE_mtl.Linie:='HAL';
      //  IF AE_mtl.Linie='79' THEN AE_mtl.Linie:='ASD';
      //  IF AE_mtl.Linie='80' THEN AE_mtl.Linie:='MAG';
      //  IF AE_mtl.Linie='81' THEN AE_mtl.Linie:='INI';
          IF AE_mtl.Linie='82' THEN AE_mtl.Linie:='SPL';
      //  IF AE_mtl.Linie='83' THEN AE_mtl.Linie:='RLI';
      //  IF AE_mtl.Linie='84' THEN AE_mtl.Linie:='ANS';
          IF AE_mtl.Linie='85' THEN AE_mtl.Linie:='FER';
          IF AE_mtl.Linie='86' THEN AE_mtl.Linie:='FES';
          IF AE_mtl.Linie='87' THEN AE_mtl.Linie:='FET';
          IF AE_mtl.Linie='88' THEN AE_mtl.Linie:='WIS';
          IF AE_mtl.Linie='89' THEN AE_mtl.Linie:='WIT';
      //  IF AE_mtl.Linie='90' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='91' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='92' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='93' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='94' THEN AE_mtl.Linie:='';
      //  IF AE_mtl.Linie='95' THEN AE_mtl.Linie:='';
          IF AE_mtl.Linie='96' THEN AE_mtl.Linie:='TSG';
          IF AE_mtl.Linie='9610' THEN AE_mtl.Linie:='ASP';
          IF AE_mtl.Linie='9620' THEN AE_mtl.Linie:='FEP';
          IF AE_mtl.Linie='9630' THEN AE_mtl.Linie:='WIP';
          IF AE_mtl.Linie='97' THEN AE_mtl.Linie:='SON';
          IF AE_mtl.Linie='98' THEN AE_mtl.Linie:='SON';
          IF AE_mtl.Linie='99' THEN AE_mtl.Linie:='TOP';
          AE_mtl.MODIFY;
        UNTIL AE_mtl.NEXT = 0;
      END;
    END;

    PROCEDURE "BB Diff ermitteln"@1140014();
    BEGIN
    END;

    PROCEDURE Auftrag_sichern@1140015();
    BEGIN
    END;

    PROCEDURE Auftrag_Arch_sichern@1140065();
    BEGIN
    END;

    PROCEDURE "Konto Salden holen"@1140026();
    BEGIN
    END;

    PROCEDURE "AE Salden t„gl gesamt"@1140044();
    BEGIN
    END;

    PROCEDURE AE_Vertrieb1@1140047();
    BEGIN
    END;

    PROCEDURE AE_Vertrieb2@1140048();
    BEGIN
    END;

    PROCEDURE AE_Vertrieb3@1140059();
    BEGIN
    END;

    PROCEDURE AE_Vertrieb4@1140061();
    BEGIN
    END;

    PROCEDURE Debitor_šberprfung@1140053();
    BEGIN
    END;

    PROCEDURE ID_Prove@1140056();
    BEGIN
    END;

    PROCEDURE ID_Prove_2@1140057();
    BEGIN
    END;

    PROCEDURE t„gl_AE_Saldo_abstimmen@1140058();
    BEGIN
    END;

    PROCEDURE N2_berprfen@1140060();
    BEGIN
    END;

    PROCEDURE Abstimm_tab_belege@1140064();
    BEGIN
    END;

    PROCEDURE geschenk_adr_liste@1140066();
    BEGIN
    END;

    PROCEDURE geschenk_adr_liste_bersicht@1140067();
    BEGIN
    END;

    LOCAL PROCEDURE AE_Verteilen_Filter_Abfrage@1000000000();
    BEGIN
      // Abfrage ACS
      AE_Verteilen_Excelblatt_anlegen;     // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETCURRENTKEY(Datum,AU_Nr,POS_Nr,Deb_Nr,Belegart);
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Linie,'%1|%2|%3|%4','ACT','ACI','ACC','ACS');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='ACS';
      AE_Verteilen_Pfad_festlegen;   //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;    //  Excelblatt speichern und Excel schlieáen
      // *************************************************************************************************

      // Abfrage Christian
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1','CB');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='CB';
      AE_Verteilen_Pfad_festlegen;  //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      // *******************************************************************************************************

      // Abfrage Edeltraut
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1|%2','ESK','NM');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='ESK';
      AE_Verteilen_Pfad_festlegen;    //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      // *******************************************************************************************************

      // Abfrage Hendrik
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1|%2|%3','HB','LD','JB');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='HB';
      AE_Verteilen_Pfad_festlegen;    //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      // *******************************************************************************************************

      // Abfrage Maria
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1|%2|%3|%4','ML','IF','TK','NG');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='ML';
      AE_Verteilen_Pfad_festlegen;      //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      // *******************************************************************************************************

      // Abfrage Maria System
      // *******************************************************************************************************

      // Abfrage Nadine
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1','NM');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='NM';
      AE_Verteilen_Pfad_festlegen;   //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      // *******************************************************************************************************

      // Abfrage Michael
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Vertreter,'%1','MB');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='MB';
      AE_Verteilen_Pfad_festlegen;   //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      // *******************************************************************************************************

      // Abfrage Renate
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Betreuer,'%1|%2','RL','CB');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='RL';
      AE_Verteilen_Pfad_festlegen;   //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      // *******************************************************************************************************

      // Abfrage Simon
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Vertreter,'%1','SST');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='SST';
      AE_Verteilen_Pfad_festlegen;  //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      // *******************************************************************************************************

      // Abfrage Sylke
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);

      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='SB';
      AE_Verteilen_Pfad_festlegen;  //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      // *******************************************************************************************************

      // Abfrage Thomas
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);

      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='TF';
      AE_Verteilen_Pfad_festlegen;  //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      // *******************************************************************************************************

      // Abfrage Torsten
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Vertreter,'%1','TW');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='TW';
      AE_Verteilen_Pfad_festlegen;   //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      // *******************************************************************************************************

      // Abfrage Werner
      AE_Verteilen_Excelblatt_anlegen;      // Excelblatt mit šberschriftszeile anlegen
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Belegart,'%1|%2|%3','AMTL','AEMT','GUMT');
      AE_mtl.SETFILTER(AE_mtl.Datum,'%1..%2',Datum_von,Datum_bis);
      AE_mtl.SETFILTER(AE_mtl.Vertreter,'%1','WG');
      IF AE_mtl.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := AE_mtl.COUNT;
        REPEAT
          AE_Verteilen_Excelblatt_Daten;    // einzelne Excelzeilen ausgeben
        UNTIL AE_mtl.NEXT = 0;
      END;
      v_Pfadzuweisung:='WG';
      AE_Verteilen_Pfad_festlegen;   //  Pfadzuweisung festlegen
      AE_Verteilen_Excelblatt_schliessen;         //  Excelblatt speichern und Excel schlieáen
      // *******************************************************************************************************

      MESSAGE(' Auftragseing„nge wurden ordnungsgem„á nach Excel exportiert. ');
    END;

    LOCAL PROCEDURE AE_Verteilen_Excelblatt_anlegen@1000000001();
    BEGIN

      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);
      RowNo := 1;
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,Text001,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,Text020,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text021,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text022,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text023,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text024,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text025,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text026,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text027,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text028,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text029,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text030,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text031,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text032,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text033,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text034,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text035,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text036,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text037,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text038,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text039,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text040,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
    END;

    LOCAL PROCEDURE AE_Verteilen_Excelblatt_Daten@1000000003();
    BEGIN

      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,FORMAT(AE_mtl.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Deb_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(AE_mtl.Menge),'',FALSE,FALSE,FALSE,'###,###,###',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(AE_mtl.EK),'',FALSE,FALSE,FALSE,'###,##0.00###',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(AE_mtl.VK),'',FALSE,FALSE,FALSE,'###,##0.00###',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(AE_mtl.w„_faktor),'',FALSE,FALSE,FALSE,'##0.00###',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(ROUND(AE_mtl."Betrag in EUR",0.01)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(ROUND(AE_mtl."DB %",0.01)),'',FALSE,FALSE,FALSE,'##0.000',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Betreuer,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Vertreter,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Linie,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,FORMAT(ROUND(AE_mtl."EK Gesamt",0.01)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.PLZ,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Endkunde,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Teams,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,AE_mtl.Gebietscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
      RecNo := RecNo + 1;
      Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
    END;

    LOCAL PROCEDURE AE_Verteilen_Excelblatt_schliessen@1000000002();
    BEGIN

      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Text001);
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2',Text001,''),30),COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          TempExcelBuffer.OpenExcelWithoutAutoFit(Text001, v_Pfadname,'F:\Daten Neu\Gemeinsame Ordner\Auftragseingang\',FALSE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE AE_Verteilen_Pfad_festlegen@1000000004();
    BEGIN
      // Anfang t„gliche Verteilung
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='ACS')) THEN v_Pfadname:='ACS\AE_mtl.xlsx';   //  Pfadzuweisung festlegen
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='CB')) THEN v_Pfadname:='Christian\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='ESK')) THEN v_Pfadname:='Edeltraut\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='HB')) THEN v_Pfadname:='Hendrik\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='ML')) THEN v_Pfadname:='Maria\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='MB')) THEN v_Pfadname:='Michael\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='NM')) THEN v_Pfadname:='Nadine\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='RL')) THEN v_Pfadname:='Renate\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='SST')) THEN v_Pfadname:='Simon\AE_mtl.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='SB')) THEN v_Pfadname:='Sylke\Gesamt.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='TF')) THEN v_Pfadname:='Thomas\Gesamt.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='TW')) THEN v_Pfadname:='Torsten\Gesamt.xlsx';
      IF ((AE_verteilen = TRUE) AND (v_Pfadzuweisung='WG')) THEN v_Pfadname:='Werner\Gesamt.xlsx';
      // Ende t„gliche Verteilung
      //Anfang monatliche Verteilung
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='ACS')) THEN v_Pfadname:='ACS\'+ Filename;   //  Pfadzuweisung festlegen
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='CB')) THEN v_Pfadname:='Christian\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='ESK')) THEN v_Pfadname:='Edeltraut\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='HB')) THEN v_Pfadname:='Hendrik\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='ML')) THEN v_Pfadname:='Maria\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='MB')) THEN v_Pfadname:='Michael\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='NM')) THEN v_Pfadname:='Nadine\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='RL')) THEN v_Pfadname:='Renate\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='SST')) THEN v_Pfadname:='Simon\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='SB')) THEN v_Pfadname:='Sylke\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='TF')) THEN v_Pfadname:='Thomas\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='TW')) THEN v_Pfadname:='Torsten\'+ Filename;
      IF ((AE_Verteilen_mtl = TRUE) AND (v_Pfadzuweisung='WG')) THEN v_Pfadname:='Werner\'+ Filename;
      // Ende monatliche Verteilung
    END;

    LOCAL PROCEDURE ID_Prove_Filter_Abfrage@1000000005();
    BEGIN
      // Abfrage ID_Prove Firmen
      ID_Prove_Excelblatt_anlegen;     // Excelblatt ohne šberschriftszeile anlegen
      kontakt.RESET;

      kontakt.SETFILTER(kontakt.Type,'%1',0);
      IF kontakt.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := kontakt.COUNT;
        REPEAT
          v_kontaktnr:=FORMAT(kontakt."No.");
          v_kontaktnr:=COPYSTR(v_kontaktnr,4);
          ID_Prove_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL kontakt.NEXT = 0;
      END;
      v_Pfadname:='adr_nav_neu_text_uwe1.csv';
      ID_Prove_Excelblatt_schliessen;    //  Excelblatt speichern und Excel schlieáen
      // *************************************************************************************************
      // Abfrage ID_Prove Ansprechpartner
      ID_Prove_Excelblatt_anlegen;     // Excelblatt ohne šberschriftszeile anlegen
      kontakt.RESET;

      kontakt.SETFILTER(kontakt.Type,'%1',1);
      IF kontakt.FIND('-') THEN BEGIN
        RecNo := 0;
        TotalRecNo := kontakt.COUNT;
        REPEAT
          v_kontaktnr:=FORMAT(kontakt."No.");
          v_kontaktnr:=COPYSTR(v_kontaktnr,4);
          ID_Prove_Excelblatt_Daten;   // einzelne Excelzeilen ausgeben
        UNTIL kontakt.NEXT = 0;
      END;
      v_Pfadname:='adr_nav_neu_text_uwe2.csv';
      ID_Prove_Excelblatt_schliessen;    //  Excelblatt speichern und Excel schlieáen
      // *************************************************************************************************
    END;

    LOCAL PROCEDURE ID_Prove_Excelblatt_anlegen@1000000006();
    BEGIN
      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);
      RowNo := 1;
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,Text050,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text051,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text052,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text053,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text054,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text055,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text056,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text057,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text058,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,Text059,'',TRUE,FALSE,TRUE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo + 1;
    END;

    LOCAL PROCEDURE ID_Prove_Excelblatt_Daten@1000000007();
    BEGIN
      ColumnNo := 1;
      EnterCell(RowNo,ColumnNo,kontakt."No.",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt."Company Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt."Name 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt."First Name",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt.Surname,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt.Address,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt."Address 2",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt."Post Code",'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,kontakt.City,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      ColumnNo := ColumnNo + 1;
      EnterCell(RowNo,ColumnNo,v_kontaktnr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      RowNo := RowNo + 1;
      RecNo := RecNo + 1;
      Window.UPDATE(1,ROUND(RecNo / TotalRecNo * 10000,1));
    END;

    LOCAL PROCEDURE ID_Prove_Excelblatt_schliessen@1000000008();
    BEGIN
      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,SheetName);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN
          TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Text001);
        TempExcelBuffer.WriteSheet(
          PADSTR(STRSUBSTNO('%1 %2',Text001,''),30),COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          TempExcelBuffer.OpenExcelWithoutAutoFit(Text001, v_Pfadname,'R:\id_prove\Import\',FALSE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE Geschenkliste_šbersicht@1000000009();
    BEGIN
    END;

    LOCAL PROCEDURE CreateExcel@1000000010();
    BEGIN
      IF DoUpdateExistingWorksheet THEN BEGIN
        IF ServerFileName = '' THEN
          ServerFileName := FileMgt.UploadFile(Text002,ExcelFileExtensionTok);
        IF ServerFileName = '' THEN
          EXIT;
        SheetName := TempExcelBuffer.SelectSheetsName(ServerFileName);
        IF SheetName = '' THEN
          EXIT;
      END;

      Window.OPEN(
        Text000 +
        '@1@@@@@@@@@@@@@@@@@@@@@\');

      TempExcelBuffer.DELETEALL;
      CLEAR(TempExcelBuffer);
    END;

    LOCAL PROCEDURE CloseExcel@1000000011(Sheetname@1000000000 : Text;FileName@1000000001 : Text;FilePath@1000000002 : Text);
    BEGIN
      Window.CLOSE;

      IF DoUpdateExistingWorksheet THEN BEGIN
        TempExcelBuffer.UpdateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet('',COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN TempExcelBuffer.DownloadAndOpenExcel;
      END ELSE BEGIN
        TempExcelBuffer.CreateBook(ServerFileName,Sheetname);
        TempExcelBuffer.WriteSheet(Sheetname,COMPANYNAME,USERID);
        TempExcelBuffer.CloseBook;
        IF NOT Testmode THEN BEGIN
          IF (FileName = '') OR (FilePath = '') THEN
            TempExcelBuffer.OpenExcel //hat Autofit drin der die Spaltenbreite wieder berschreibt, deshalb neue Fkt. nachfolgend
        ELSE
            TempExcelBuffer.OpenExcelWithoutAutoFit(Sheetname,FileName + ExcelFileExtensionTok,FilePath,TRUE);
        END;
      END;
      IF NOT Testmode THEN
        TempExcelBuffer.GiveUserControl;
    END;

    LOCAL PROCEDURE EnterCell@1000000012(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250];Formular@1000000008 : Text[250];Bold@1000000003 : Boolean;Italic@1000000004 : Boolean;UnderLine@1000000005 : Boolean;NumberFormat@1000000006 : Text[30];CellType@1000000007 : Option);
    BEGIN
      TempExcelBuffer.INIT;
      TempExcelBuffer.VALIDATE("Row No.",RowNo);
      TempExcelBuffer.VALIDATE("Column No.",ColumnNo);
      TempExcelBuffer."Cell Value as Text" := CellValue;
      TempExcelBuffer.Formula := Formular;
      TempExcelBuffer.Bold := Bold;
      TempExcelBuffer.Italic := Italic;
      TempExcelBuffer.Underline := UnderLine;
      TempExcelBuffer.NumberFormat := NumberFormat;
      TempExcelBuffer."Cell Type" := CellType;
      TempExcelBuffer.INSERT;
    END;

    LOCAL PROCEDURE UpdateCell@1000000013(RowNo@1000000000 : Integer;ColumnNo@1000000001 : Integer;CellValue@1000000002 : Text[250]);
    BEGIN
      IF TempExcelBuffer.GET(RowNo,ColumnNo)  THEN BEGIN
        TempExcelBuffer."Cell Value as Text" := CellValue;
        TempExcelBuffer.MODIFY;
      END;
    END;

    LOCAL PROCEDURE Kredtilimit_prfen@1000000014();
    BEGIN
    END;

    LOCAL PROCEDURE Debitor_berprfen@1000000015();
    BEGIN
    END;

    LOCAL PROCEDURE Differenzen_ermitteln_Neu@1000000016();
    BEGIN
      // ANFANG zurcksetzen Status auf NN zwecks Programmtests
      //        kann bei Echtbetrieb unterbleiben!!!
      MESSAGE('JOB wurde ordnungsgem„á gestartet.');
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'NN';
          tab_ab_bw.Stat_Artikel := 'NN';
          tab_ab_bw.Stat_Menge := 'NN';
          tab_ab_bw.Stat_EK := 'NN';
          tab_ab_bw.Stat_VK := 'NN';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'NN';
          tab_ab_bw.Stat_Artikel := 'NN';
          tab_ab_bw.Stat_Menge := 'NN';
          tab_ab_bw.Stat_EK := 'NN';
          tab_ab_bw.Stat_VK := 'NN';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      // ENDE zurcksetzen Status auf NN zwecks Programmtests


      //  ANFANG Vergleich zwischen NEU und ALT (tab_ab_bw=NEU  und prf=ALT)
      //  ANFANG Diff. feststellen Artikel, Menge, EK, VK
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          prf.RESET;
          prf.SETFILTER(Belegart,'%1','AUšW');
          prf.SETFILTER(AU_Nr,'%1',tab_ab_bw.AU_Nr);
          prf.SETFILTER(POS_Nr,'%1',tab_ab_bw.POS_Nr);
          prf.SETFILTER(Art,'%1','ALT');
          IF prf.FINDFIRST THEN BEGIN
            IF prf.Artikel = tab_ab_bw.Artikel THEN BEGIN
              tab_ab_bw.Stat_Artikel := 'OK';
              prf.Stat_Artikel := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Artikel := 'AF';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_Artikel := 'AF';
              prf.Status := 'ŽN';
            END;

            IF prf.Menge = tab_ab_bw.Menge THEN BEGIN
              tab_ab_bw.Stat_Menge := 'OK';
              prf.Stat_Menge := 'OK';
              // ANFANG  Rechnungsmengenprfung bei Menge OK
              IF prf.Restmenge <> tab_ab_bw.Restmenge THEN BEGIN
                tab_ab_bw.Stat_Menge := 'MR';
                tab_ab_bw.Status := 'ŽN';
                prf.Stat_Menge := 'MR';
                prf.Status := 'ŽN';
              END;
              // ENDE  Rechnungsmengenprfung bei Menge OK
            END ELSE BEGIN
              tab_ab_bw.Stat_Menge := 'MF';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_Menge := 'MF';
              prf.Status := 'ŽN';
            END;

            IF prf.Restmenge <> tab_ab_bw.Restmenge THEN BEGIN
              tab_ab_bw.Stat_Menge := 'MR';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_Menge := 'MR';
              prf.Status := 'ŽN';
            END;

            IF prf.EK = tab_ab_bw.EK THEN BEGIN
              tab_ab_bw.Stat_EK := 'OK';
              prf.Stat_EK := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_EK := 'EF';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_EK := 'EF';
              prf.Status := 'ŽN';
            END;

            IF prf.VK=tab_ab_bw.VK THEN BEGIN
              tab_ab_bw.Stat_VK := 'OK';
              prf.Stat_VK := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_VK := 'VF';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_VK := 'VF';
              prf.Status := 'ŽN';
            END;

            IF prf.W„hrungscode <> tab_ab_bw.W„hrungscode THEN BEGIN
              tab_ab_bw.Stat_VK := 'WŽ';
              tab_ab_bw.Status := 'ŽN';
              prf.Status := 'ŽN';
              prf.Stat_VK := 'WŽ';
            END;

            tab_ab_bw.MODIFY;
            prf.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE Diff. feststellen Artikel, Menge, EK, VK
      //  ANFANG Status auf OK setzen, wenn keine Abweichnung vorliegt
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(Stat_Artikel,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_Menge,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_EK,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_VK,'%1','OK');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'OK';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Stat_Artikel,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_Menge,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_EK,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_VK,'%1','OK');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'OK';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE   Status auf OK setzen, wenn keine Abweichnung vorliegt

      //  ANFANG Feststellen, ob neuer Auftrag/Pos vorliegt
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(Status,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          prf.RESET;
          prf.SETFILTER(Belegart,'%1','AUšW');
          prf.SETFILTER(Art,'%1','ALT');
          prf.SETFILTER(AU_Nr,'%1',tab_ab_bw.AU_Nr);
          IF prf.FINDFIRST THEN BEGIN
            //  Neue Position zu altem Auftrag
            tab_ab_bw.Status := 'NP';
            tab_ab_bw.MODIFY;
          END ELSE BEGIN
            //  Neuer Auftrag
            tab_ab_bw.Status := 'NA';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE   Feststellen, ob neuer Auftrag/Pos vorliegt

      // ANFANG  Feststellen, ob ein Auftrag/Pos storniert wurde
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Status,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          var_re_menge := 0;
          rech.RESET;
          rech.SETFILTER("Order No.",'%1',tab_ab_bw.AU_Nr);
          // Rechnungsmenge ohne laufender Tag *********************************
          rech.SETFILTER("Posting Date",'<%1',WORKDATE);
          rech.SETFILTER("Order Line No.",'%1',tab_ab_bw.POS_Nr);
          IF rech.FIND('-') THEN BEGIN
            REPEAT
              tab_ab_bw.Status := 'ST';
              tab_ab_bw.MODIFY;

              var_re_menge := var_re_menge + rech.Quantity;
            UNTIL rech.NEXT = 0;
            IF var_re_menge > 0 THEN
              tab_ab_bw.Status := 'RE';
            tab_ab_bw.re_menge := var_re_menge;
            tab_ab_bw.MODIFY;
            var_re_menge:=0;
          END ELSE BEGIN
            //  Storno der Zeile
            tab_ab_bw.Status := 'SZ';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;


      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Status,'%1','ŽN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          var_re_menge := 0;
          rech.RESET;
          rech.SETFILTER("Order No.",'%1',tab_ab_bw.AU_Nr);
          // Rechnungsmenge ohne laufender Tag *********************************
          rech.SETFILTER("Posting Date",'<%1',WORKDATE);
          rech.SETFILTER("Order Line No.",'%1',tab_ab_bw.POS_Nr);
          IF rech.FIND('-') THEN BEGIN
            REPEAT
              var_re_menge := var_re_menge+rech.Quantity;
            UNTIL rech.NEXT = 0;
            IF var_re_menge > 0 THEN
            tab_ab_bw.Status := 'RE';
            tab_ab_bw.re_menge := var_re_menge;
            tab_ab_bw.MODIFY;
          var_re_menge:=0;
          END ELSE BEGIN
          //  Storno der Zeile
            tab_ab_bw.Status := 'SZ';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(Status,'%1','ŽN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          var_re_menge := 0;
          rech.RESET;
          rech.SETFILTER("Order No.",'%1',tab_ab_bw.AU_Nr);
          // Rechnungsmenge ohne laufender Tag *********************************
          rech.SETFILTER("Posting Date",'<%1',WORKDATE);
          rech.SETFILTER("Order Line No.",'%1',tab_ab_bw.POS_Nr);
          IF rech.FIND('-') THEN BEGIN
            REPEAT
              var_re_menge := var_re_menge + rech.Quantity;
            UNTIL rech.NEXT = 0;
            IF var_re_menge > 0 THEN
              tab_ab_bw.Status := 'RE';
            tab_ab_bw.re_menge := var_re_menge;
            tab_ab_bw.MODIFY;
          var_re_menge := 0;
          END ELSE BEGIN
        //  Storno der Zeile
              tab_ab_bw.Status := 'SZ';
              tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      // ENDE    Feststellen, ob ein Auftrag/Pos storniert wurde

      // ANFANG  Feststellen, ob RE_Mengen mit AU_Mengen bereinstimmen
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Status,'%1','RE');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.Menge = tab_ab_bw.re_menge THEN BEGIN
            tab_ab_bw.Status := 'OK';
          END ELSE BEGIN
            tab_ab_bw.Status := 'GP';
          END;
          IF tab_ab_bw.Restmenge = 0 THEN BEGIN
            tab_ab_bw.Status := 'FA';
          END;
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //   ENDE  Feststellen, ob RE_Mengen mit AU_Mengen bereinstimmen


      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Status,'%1','FA');
      tab_ab_bw.SETFILTER(Stat_Menge,'%1','NN');
      tab_ab_bw.SETFILTER(Stat_Artikel,'%1','NN');
      tab_ab_bw.SETFILTER(Stat_EK,'%1','NN');
      tab_ab_bw.SETFILTER(Stat_VK,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.re_menge = tab_ab_bw.Menge THEN BEGIN
            tab_ab_bw.Status := 'OK';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(Status,'%1','RE');
      tab_ab_bw.SETFILTER(Stat_Menge,'%1','MR');
      tab_ab_bw.SETFILTER(Stat_Artikel,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_EK,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_VK,'%1','OK');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF ((tab_ab_bw.re_menge = tab_ab_bw.Menge) AND (tab_ab_bw.Restmenge = 0)) THEN BEGIN
            tab_ab_bw.Status := 'OK';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      //  ENDE   Vergleich zwischen NEU und ALT


      //  ANFANG Differenzen in AEmtl bernehmen
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(Status,'%1|%2|%3|%4|%5|%6|%7|%8', 'NP', 'ŽN', 'ST', 'SZ', 'GP', 'FA', 'RE','WŽ');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          AE_mtl.INIT;
          AE_mtl.Datum := tab_ab_bw.Datum;
          AE_mtl.AU_Nr := tab_ab_bw.AU_Nr;
          AE_mtl.POS_Nr := tab_ab_bw.POS_Nr;
          AE_mtl.Belegart := 'AEND';
          AE_mtl.Debitor := tab_ab_bw.Debitor;
          AE_mtl.Deb_Nr := tab_ab_bw.Deb_Nr;
          AE_mtl.Artikel := tab_ab_bw.Artikel;
          AE_mtl.Menge := tab_ab_bw.Menge;
          AE_mtl.Restmenge := tab_ab_bw.Restmenge;
          AE_mtl.EK := tab_ab_bw.EK;
          AE_mtl.VK := tab_ab_bw.VK;
          AE_mtl."Best„tigt LD" := tab_ab_bw."Best„tigt LD";
          AE_mtl.Wunschdatum := tab_ab_bw.Wunschdatum;
          AE_mtl.Status := 'AE';
          AE_mtl.Art := 'TAG';
          AE_mtl."EK Gesamt" := tab_ab_bw."EK Gesamt";
          AE_mtl."VK Gesamt" := tab_ab_bw."VK Gesamt";
          AE_mtl.Lager := tab_ab_bw.Lager;
          AE_mtl."DB %" := tab_ab_bw."DB %";
          AE_mtl.Linie := tab_ab_bw.Linie;
          AE_mtl.Endkunde := tab_ab_bw.Endkunde;
          AE_mtl.W„hrungscode := tab_ab_bw.W„hrungscode;
          AE_mtl.w„_faktor := tab_ab_bw.w„_faktor;
          AE_mtl.Auftragsdatum := tab_ab_bw.Auftragsdatum;
          AE_mtl.Betreuer := tab_ab_bw.Betreuer;
          AE_mtl.Vertreter := tab_ab_bw.Vertreter;
          AE_mtl.Teams := tab_ab_bw.Teams;
          AE_mtl.Gebietscode := tab_ab_bw.Gebietscode;
          AE_mtl.PLZ := tab_ab_bw.Plz;
          AE_mtl."AU aus Rahmen" := tab_ab_bw."AU aus Rahmen";
          IF AE_mtl.w„_faktor = 0 THEN BEGIN
            AE_mtl."Betrag in EUR" := AE_mtl."VK Gesamt";
          END ELSE BEGIN
            AE_mtl."Betrag in EUR":= (AE_mtl."VK Gesamt"/AE_mtl.w„_faktor);
          END;
          AE_mtl.INSERT;

        UNTIL tab_ab_bw.NEXT = 0;
      END;
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Auftragsberwachung  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Pos-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Debitor','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Lager','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'EK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'VK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Status','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Art Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Menge Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'EK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'VK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'WŽ-Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'W„ Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'RE Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'urspr AU-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      var_AU_Nr := 'AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(Status,'%1|%2|%3|%4|%5|%6|%7|%8', 'NP','ŽN','ST','SZ','GP','FA','RE','WŽ');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.AU_Nr = var_AU_Nr THEN BEGIN
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,tab_ab_bw.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,tab_ab_bw.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,tab_ab_bw.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,tab_ab_bw.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,tab_ab_bw.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,tab_ab_bw.Stat_Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,tab_ab_bw.Stat_Menge,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF tab_ab_bw.Stat_VK='WŽ' THEN EnterCell(RowNo,17,'WŽ-Fehler','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,18,tab_ab_bw.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
          END ELSE BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,tab_ab_bw.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,tab_ab_bw.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,tab_ab_bw.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,tab_ab_bw.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,tab_ab_bw.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,tab_ab_bw.Stat_Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,tab_ab_bw.Stat_Menge,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF tab_ab_bw.Stat_VK='WŽ' THEN EnterCell(RowNo,17,'WŽ-Fehler','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,18,tab_ab_bw.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
            var_AU_Nr := tab_ab_bw.AU_Nr;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      RowNo := RowNo +2;
      EnterCell(RowNo,1,'AF=Artikelfehler; MF=Mengenfehler; MR=Diff Restmengen; RF=Diff Rechnungsmengen; EF=EK-Fehler; VF=VK-Fehler','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,2,'MF=Mengenfehler','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,3,'MR=Diff Restmengen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,4,'RF=Diff Rechnungsmengen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,5,'EF=EK-Fehler','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,6,'VF=VK-Fehler','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo +1;
      EnterCell(RowNo,1,'ŽN=Žnderung; NP=neue Position; NA=Neuer AU; ST=Storno AU; SZ=Storno Zeile; RE=Rechnung vorhanden','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,2,'NP=neue Position','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,3,'NA=Neuer AU','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,4,'ST=Storno AU','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,5,'SZ=Storno Zeile','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,6,'RE=Rechnung vorhanden','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      Pfad_tag := FORMAT(DATE2DMY(AE_holen_Datum_1,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      CloseExcel('Diff'+Pfaddatum,'Diff'+Pfaddatum,'F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022');
    END;

    LOCAL PROCEDURE Nur_Diff_AB_ausgeben@1000000017();
    BEGIN
      // ANFANG Differenzen in Excel ausgeben
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Auftragsberwachung  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Pos-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Debitor','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Lager','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'EK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'VK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Status','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Art Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Menge Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'EK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'VK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'WŽ-Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'W„ Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'RE Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'urspr AU-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      var_AU_Nr := 'AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(Status,'%1|%2|%3|%4|%5|%6|%7', 'NP','ŽN','ST','GP','FA','RE','WŽ');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.AU_Nr = var_AU_Nr THEN BEGIN
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',TRUE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,tab_ab_bw.Debitor,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,tab_ab_bw.Artikel,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,tab_ab_bw.Lager,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.EK),'',TRUE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(tab_ab_bw.VK),'',TRUE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,tab_ab_bw.Art,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,tab_ab_bw.Status,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,tab_ab_bw.Stat_Artikel,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,tab_ab_bw.Stat_Menge,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_EK),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_VK),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF tab_ab_bw.Stat_VK='WŽ' THEN EnterCell(RowNo,17,'WŽ-Fehler','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,18,tab_ab_bw.W„hrungscode,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.w„_faktor),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.re_menge),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(tab_ab_bw.Auftragsdatum),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
          END ELSE BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',TRUE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,tab_ab_bw.Debitor,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,tab_ab_bw.Artikel,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,tab_ab_bw.Lager,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.EK),'',TRUE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(tab_ab_bw.VK),'',TRUE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,tab_ab_bw.Art,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,tab_ab_bw.Status,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,tab_ab_bw.Stat_Artikel,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,tab_ab_bw.Stat_Menge,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_EK),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_VK),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF tab_ab_bw.Stat_VK='WŽ' THEN EnterCell(RowNo,17,'WŽ-Fehler','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,18,tab_ab_bw.W„hrungscode,'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.w„_faktor),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.re_menge),'',TRUE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(tab_ab_bw.Auftragsdatum),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
            var_AU_Nr := tab_ab_bw.AU_Nr;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      Pfad_tag := FORMAT(DATE2DMY(AE_holen_Datum_1,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      CloseExcel('Test_Diff'+Pfaddatum,'Test_Diff'+Pfaddatum,'F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022');
    END;

    LOCAL PROCEDURE WŽ_Abstimmung@1000000018();
    BEGIN
    END;

    LOCAL PROCEDURE uwe@1000000019();
    BEGIN
    END;

    LOCAL PROCEDURE t„glichen_AE_Saldo_abstimmen@1000000020();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Auftragsberwachung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Pos-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Debitor','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'EK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'VK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Status','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Art Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Menge Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'EK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'VK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'WŽ-Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'W„ Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'RE Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'urspr AU-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      {
      CLEAR(Excel);
      REPEAT
      UNTIL ISCLEAR(Excel);
      CREATE(Excel,FALSE,TRUE);

      Book := Excel.Workbooks.Add(-4167);                          //legt neue datei in excel an
      Sheet := Excel.ActiveSheet;                                  //definiert aktives worksheet
      Sheet.Range('H:I').NumberFormat:='###.###,#####';
      Sheet.Range('L:M').NumberFormat:='###.###,##';
      Sheet.Range('Q:Q').NumberFormat:='###.###,####';

      Sheet.Range('A1').Value := 'Auftragsberwachung  '; // definiert die Beschriftung der berschriftszeile

      Sheet.Range('A2').Value := 'Datum';
      Sheet.Range('B2').Value := 'AU-Nr';
      Sheet.Range('C2').Value := 'Pos-Nr';
      Sheet.Range('D2').Value := 'Debitor';
      Sheet.Range('E2').Value := 'Artikel';
      Sheet.Range('F2').Value := 'Menge';
      Sheet.Range('G2').Value := 'Restmenge';
      Sheet.Range('H2').Value := 'EK';
      Sheet.Range('I2').Value := 'VK';
      Sheet.Range('J2').Value := 'Art';
      Sheet.Range('K2').Value := 'Status';
      Sheet.Range('L2').Value := 'Art Diff';
      Sheet.Range('M2').Value := 'Menge Diff';
      Sheet.Range('N2').Value := 'EK Diff';
      Sheet.Range('O2').Value := 'VK Diff';
      Sheet.Range('P2').Value := 'WŽ-Diff';
      Sheet.Range('Q2').Value := 'WŽ';
      Sheet.Range('R2').Value := 'W„ Kurs';
      Sheet.Range('S2').Value := 'RE Menge';
      Sheet.Range('T2').Value := 'urspr AU-Datum';
      j := '3';                                   // <- Import in excel ab Zeile 3

      var_AU_Nr:='AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1|%2|%3|%4|%5|%6|%7', 'NP','ŽN','ST','GP','FA','RE','WŽ');
      IF tab_ab_bw.FIND('-') THEN BEGIN
      REPEAT
       IF tab_ab_bw.AU_Nr=var_AU_Nr THEN BEGIN
      }
      var_AU_Nr:='AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(tab_ab_bw.Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(tab_ab_bw.Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(tab_ab_bw.Status,'%1|%2|%3|%4|%5|%6|%7', 'NP','ŽN','ST','GP','FA','RE','WŽ');
      IF tab_ab_bw.FIND('-') THEN BEGIN
      REPEAT
        IF tab_ab_bw.AU_Nr=var_AU_Nr THEN BEGIN
          EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,2,FORMAT(tab_ab_bw.AU_Nr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_ab_bw.Debitor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_ab_bw.Artikel),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,9,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,10,FORMAT(tab_ab_bw.Art),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_ab_bw.Status),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(tab_ab_bw.Stat_Artikel),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,FORMAT(tab_ab_bw.Stat_Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,14,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          IF tab_ab_bw.Stat_VK='WŽ' THEN BEGIN
            EnterCell(RowNo,16,'WŽ-Fehler','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          EnterCell(RowNo,17,FORMAT(tab_ab_bw.W„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,18,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,19,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,20,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
          RowNo := RowNo +1;
        END ELSE BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,2,FORMAT(tab_ab_bw.AU_Nr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_ab_bw.Debitor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_ab_bw.Artikel),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,9,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,10,FORMAT(tab_ab_bw.Art),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_ab_bw.Status),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(tab_ab_bw.Stat_Artikel),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,FORMAT(tab_ab_bw.Stat_Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,14,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
          IF tab_ab_bw.Stat_VK='WŽ' THEN BEGIN
            EnterCell(RowNo,16,'WŽ-Fehler','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          EnterCell(RowNo,17,FORMAT(tab_ab_bw.W„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,18,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,19,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0.00000',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,20,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
          RowNo := RowNo +1;
          var_AU_Nr :=tab_ab_bw.AU_Nr;
        END;
      UNTIL tab_ab_bw.NEXT = 0;
      END;

      Pfad_tag :=FORMAT(DATE2DMY(AE_holen_Datum_1,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;

      CloseExcel('Test_Diff'+Pfaddatum,'Test_Diff'+Pfaddatum,'F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022');
      MESSAGE(' Differenzen wurden ordnungsgem„á nach Excel exportiert. ');
      {
        Sheet.Range('A'+j).Value := tab_ab_bw.Datum;
        Sheet.Range('B'+j).Value := tab_ab_bw.AU_Nr;
        Sheet.Range('C'+j).Value := tab_ab_bw.POS_Nr;
        Sheet.Range('D'+j).Value := tab_ab_bw.Debitor;
        Sheet.Range('E'+j).Value := tab_ab_bw.Artikel;
        Sheet.Range('F'+j).Value := tab_ab_bw.Menge;
        Sheet.Range('G'+j).Value := tab_ab_bw.Restmenge;
        Sheet.Range('H'+j).Value := FORMAT(tab_ab_bw.EK);
        Sheet.Range('I'+j).Value := FORMAT(tab_ab_bw.VK);
        Sheet.Range('J'+j).Value := tab_ab_bw.Art;
        Sheet.Range('K'+j).Value := tab_ab_bw.Status;
        Sheet.Range('L'+j).Value := tab_ab_bw.Stat_Artikel;
        Sheet.Range('M'+j).Value := tab_ab_bw.Stat_Menge;
        Sheet.Range('N'+j).Value := tab_ab_bw.Stat_EK;
        Sheet.Range('O'+j).Value := tab_ab_bw.Stat_VK;
        IF tab_ab_bw.Stat_VK='WŽ' THEN BEGIN
        Sheet.Range('P'+j).Value := 'WŽ-Fehler';
        END;
        Sheet.Range('Q'+j).Value := tab_ab_bw.W„hrungscode;
        Sheet.Range('R'+j).Value := FORMAT(tab_ab_bw.w„_faktor);
        Sheet.Range('S'+j).Value := FORMAT(tab_ab_bw.re_menge);
        Sheet.Range('T'+j).Value := tab_ab_bw.Auftragsdatum;
        j := INCSTR(j);

       END ELSE BEGIN
        j := INCSTR(j);
        Sheet.Range('A'+j).Value := tab_ab_bw.Datum;
        Sheet.Range('B'+j).Value := tab_ab_bw.AU_Nr;
        Sheet.Range('C'+j).Value := tab_ab_bw.POS_Nr;
        Sheet.Range('D'+j).Value := tab_ab_bw.Debitor;
        Sheet.Range('E'+j).Value := tab_ab_bw.Artikel;
        Sheet.Range('F'+j).Value := tab_ab_bw.Menge;
        Sheet.Range('G'+j).Value := tab_ab_bw.Restmenge;
        Sheet.Range('H'+j).Value := FORMAT(tab_ab_bw.EK);
        Sheet.Range('I'+j).Value := FORMAT(tab_ab_bw.VK);
        Sheet.Range('J'+j).Value := tab_ab_bw.Art;
        Sheet.Range('K'+j).Value := tab_ab_bw.Status;
        Sheet.Range('L'+j).Value := tab_ab_bw.Stat_Artikel;
        Sheet.Range('M'+j).Value := tab_ab_bw.Stat_Menge;
        Sheet.Range('N'+j).Value := tab_ab_bw.Stat_EK;
        Sheet.Range('O'+j).Value := tab_ab_bw.Stat_VK;
        IF tab_ab_bw.Stat_VK='WŽ' THEN BEGIN
        Sheet.Range('P'+j).Value := 'WŽ-Fehler';
        END;
        Sheet.Range('Q'+j).Value := tab_ab_bw.W„hrungscode;
        Sheet.Range('R'+j).Value := FORMAT(tab_ab_bw.w„_faktor);
        Sheet.Range('S'+j).Value := FORMAT(tab_ab_bw.re_menge);
        Sheet.Range('T'+j).Value := tab_ab_bw.Auftragsdatum;
        j := INCSTR(j);
        var_AU_Nr :=tab_ab_bw.AU_Nr;
       END;
      UNTIL tab_ab_bw.NEXT = 0;
      END;

      Excel.Visible(TRUE);

      Pfad_tag :=FORMAT(DATE2DMY(AE_holen_Datum_1,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      Pfad:='F:\Daten Neu\User\Joachim\AB-Differenzen\2013_2014\Diff'+Pfaddatum+'.xlsx';

      IF ERASE(Pfad)THEN;
      Book._SaveAs(Pfad);

      MESSAGE(' Differenzen wurden ordnungsgem„á nach Excel exportiert. ');
      }
    END;

    LOCAL PROCEDURE AE_nach_Excel_ausgeben@1000000022();
    BEGIN
      //v_sum_AU_MW:=0;
      //v_sum_AU_WŽ:=0;
      //v_sum_13B2:=0;
      //CreateExcel;
      //RowNo := 1;
      //EnterCell(RowNo,1,FORMAT('Auftragseingang'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,2,FORMAT('Kontrollliste'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //RowNo := 2;
      //RowNo := 3;
      tab_vkk.RESET;
      IF var_AU_Nr='' THEN BEGIN
        tab_vkk.SETFILTER(tab_vkk."Document Type",'%1',tab_vkk."Document Type"::Order);
        tab_vkk.SETFILTER(tab_vkk."Location Code",'%1|%2','ZENT','KONSI');
        tab_vkk.SETFILTER(tab_vkk."Order Date",'%1',AE_holen_Datum_1);
      END ELSE BEGIN
        tab_vkk.SETFILTER(tab_vkk."No.",'%1',var_AU_Nr);
      END;
      IF tab_vkk.FIND('-') THEN BEGIN
        REPEAT
          v_sum_AU_MW:=0;
          v_sum_AU_WŽ:=0;
          v_sum_13B2:=0;
          CreateExcel;
          RowNo := 1;
          EnterCell(RowNo,1,FORMAT('Auftragseingang  Kontrolliste'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // Abgleich  Rechnungs- und Lieferadressen mit der Auftragsadresse
          RADROK:='     ';
          LADROK:='     ';
          RAOK:= 0;
          LAOK:= 0;
          // šberprfung Rechnungsadresse
          // Name
          IF tab_vkk."Sell-to Customer Name" <> tab_vkk."Bill-to Name" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          // Name 2
          IF tab_vkk."Sell-to Customer Name 2" <> tab_vkk."Bill-to Name 2" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          // Adresse
          IF tab_vkk."Sell-to Address" <> tab_vkk."Bill-to Address" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          // Adresse 2
          IF tab_vkk."Sell-to Address 2" <> tab_vkk."Bill-to Address 2" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          // Ort
          IF tab_vkk."Sell-to City" <> tab_vkk."Bill-to City" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          // Plz
          IF tab_vkk."Sell-to Post Code" <> tab_vkk."Bill-to Post Code" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          IF RAOK>10 THEN
            RADROK:='Re.Adr. prfen'
          ELSE
            RADROK:='Re.Adr. wie AB';
            // šberprfung Lieferadresse
            // Name
          IF tab_vkk."Sell-to Customer Name" <> tab_vkk."Ship-to Name" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          // Name 2
          IF tab_vkk."Sell-to Customer Name 2" <> tab_vkk."Ship-to Name 2" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          // Adresse
          IF tab_vkk."Sell-to Address" <> tab_vkk."Ship-to Address" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          // Adresse 2
          IF tab_vkk."Sell-to Address 2" <> tab_vkk."Ship-to Address 2" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          // Ort
          IF tab_vkk."Sell-to City" <> tab_vkk."Ship-to City" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          // Plz
          IF tab_vkk."Sell-to Post Code" <> tab_vkk."Ship-to Post Code" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          IF LAOK>10 THEN
            LADROK:='Li.Adr. prfen'
          ELSE
            LADROK:='Li.Adr. wie AB';
          EnterCell(RowNo,9,FORMAT(LADROK),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(RADROK),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := 2;
          EnterCell(RowNo,1,'Deb.Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,'Bestellangaben','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'AU-Adresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,'Lieferadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,'Rechnungsadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,'Endkundenadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := 3;
          EnterCell(RowNo,1,'AU-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // EnterCell(RowNo,2,FORMAT(tab_vkk."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Document Type"=tab_vkk."Document Type"::Order THEN
          EnterCell(RowNo,2,tab_vkk."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk.TABLENAME,1,42,tab_vkk."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Document Type"=tab_vkk."Document Type"::"Blanket Order" THEN
          EnterCell(RowNo,2,tab_vkk."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk.TABLENAME,1,507,tab_vkk."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,'Verk„ufer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_vkk."Salesperson Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."External Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(tab_vkk."Sell-to Customer Name"+' '+(tab_vkk."Sell-to Customer Name 2")),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vkk."Ship-to Name"+' '+(tab_vkk."Ship-to Name 2")),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."Bill-to Name"+' '+(tab_vkk."Bill-to Name 2")),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,FORMAT(tab_vkk.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Au-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,3,'Innen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_vkk."Betreuer Innendienst"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Your Reference"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(tab_vkk."Sell-to Address"+' '+tab_vkk."Sell-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vkk."Ship-to Address"+' '+tab_vkk."Ship-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."Bill-to Address"+' '+tab_vkk."Bill-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,FORMAT(tab_vkk."Endkunde Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Buchungsdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,3,'Gebiet','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_vkk."Territory Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          deb.RESET;
          deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            EnterCell(RowNo,5,FORMAT(deb."Our Account No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          EnterCell(RowNo,7,FORMAT(tab_vkk."Sell-to Country/Region Code"+' '+tab_vkk."Sell-to Post Code"+' '+tab_vkk."Sell-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vkk."Ship-to Country/Region Code"+' '+tab_vkk."Ship-to Post Code"+' '+tab_vkk."Ship-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."Bill-to Country/Region Code"+' '+tab_vkk."Bill-to Post Code"+' '+tab_vkk."Bill-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,FORMAT(tab_vkk."Endkunde Land"+' '+tab_vkk."Endkunde PLZ-Code"+' '+tab_vkk."Endkunde Ort"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Belegdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk."Document Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,7,FORMAT(tab_vkk."Sell-to Contact"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vkk."Ship-to Contact"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."Bill-to Contact"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,FORMAT(tab_vkk."Endkunde Kontakt"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Keine AB','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk."Keine AB an Kunden"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,'USt-ID-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // v_Ust_ID_2:=STRPOS(tab_vkk."VAT Registration No.",3,12);
          // v_Ust_ID_2:=FORMAT(tab_vkk."VAT Registration No.").SEEK(3);
          // EnterCell(RowNo,4,FORMAT(v_Ust_ID_1),'',FALSE,FALSE,FALSE,'##.###.###.###',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,4,FORMAT(tab_vkk."VAT Registration No."),'',FALSE,FALSE,FALSE,'##.###.###.###',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,13,FORMAT(tab_vkk."Endkunde Kontakt"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'W„hrung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Currency Code"='' THEN BEGIN
            EnterCell(RowNo,2,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            IF tab_vkk."Currency Code"='USD' THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Currency Code"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF tab_vkk."Currency Code"='JPY' THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Currency Code"),'',FALSE,FALSE,FALSE,'[green]',TempExcelBuffer."Cell Type"::Number);
            IF tab_vkk."Currency Code"='GBP' THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Currency Code"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          END;
          EnterCell(RowNo,3,'Handelsregister','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          deb.RESET;
          deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            EnterCell(RowNo,4,FORMAT(deb."Handelsregister Nr"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          EnterCell(RowNo,6,'Zahlungsbedingung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(tab_vkk."Payment Terms Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,'AU Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."AB EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.00###',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,3,'SVS Verzichtskunde','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(deb."SVS Verzichtskunde"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,'Lieferbedingung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(tab_vkk."Shipment Method Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,'RE Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."Rech EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Deckblatt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          v_deckblatt:=FALSE;
          v_bemerkung.RESET;
          v_bemerkung.SETFILTER(v_bemerkung."No.",tab_vkk."No.");
          IF v_bemerkung.FINDFIRST THEN BEGIN
            v_deckblatt:=TRUE;
          END;
          IF v_deckblatt=FALSE THEN BEGIN
            IF deb."besondere Versandbedingungen"=TRUE THEN v_deckblatt:=TRUE;
          END;
          EnterCell(RowNo,2,FORMAT(v_deckblatt),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,'Projekt-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_vkk."Campaign No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,'SpediteurCode','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(tab_vkk."Shipping Agent Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,'Service Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."Service EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
          EnterCell(RowNo,6,'SpediteurAccount','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,FORMAT(tab_vkk.Spediteuraccount),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,'Lizenz Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."Lizenz EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +4;
          EnterCell(RowNo,1,'Best„tigt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,'Wunschdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,'Pos.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,'Referenznr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,'EK W„hrung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,'EK Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,'EK DC','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,'VK (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,'VK (WŽ)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,'Betrag (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,'Betrag (WŽ)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,15,'Marge %','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,16,'Handling %','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,17,'Zoll %','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,18,'Quote Ex','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,19,'Quote Intern','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,20,'Quote Ablaufdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,21,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,22,'Produktbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,23,'MWSt Probuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,24,'AC Solutionpartner','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,25,'Rahmen-AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,26,'Rahmen-AU WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,27,'Rahmen-AU Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,28,'Rahmen-AU 13B2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,29,'Endkunde','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          tab_ab.RESET;
          tab_ab.SETFILTER(tab_ab."Document No.",'%1',tab_vkk."No.");
          tab_ab.SETFILTER(tab_ab.Type,'%1|%2',tab_ab.Type::Item, tab_ab.Type::"G/L Account");
          IF tab_ab.FIND('-') THEN BEGIN
            REPEAT
              v_Q_Daten.Gltigkeitsdatum:=0D;
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(tab_ab."Promised Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(tab_ab."Requested Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(tab_ab."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF tab_ab.Type=tab_ab.Type::Item THEN BEGIN    // Wenn Artikel
                EnterCell(RowNo,4,FORMAT(tab_ab."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                IF ((tab_ab."No."='4416') OR (tab_ab."No."='4418') OR (tab_ab."No."='4122')) THEN BEGIN   // Wenn Sachkonto 4416 oder 4122 oder 4418
                  IF ((tab_ab."No."='4416') AND (tab_ab."Gen. Bus. Posting Group"='INLAND')) THEN BEGIN
                    // Hier Žnderung w/ 16% MWSt=16_13B2
                    IF tab_ab."VAT Prod. Posting Group"='13B2' THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'[red]',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                    IF tab_ab."VAT Prod. Posting Group"='19' THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    // ENDE 16%=16
                  END;
                  IF ((tab_ab."No."='4416') AND (tab_ab."Gen. Bus. Posting Group"<>'INLAND')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4122') AND (tab_ab."Gen. Bus. Posting Group"='INLAND')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4122') AND (tab_ab."Gen. Bus. Posting Group"='AUSLAND')) THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  IF ((tab_ab."No."='4122') AND (tab_ab."Gen. Bus. Posting Group"='EU')) THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  IF ((tab_ab."No."='4418') AND (tab_ab."VAT Bus. Posting Group"='INLAND')) THEN BEGIN
                    // Hier Žnderung w/ 16% MWSt=16_13B2
                    IF ((tab_ab."No."='4418') AND (tab_ab."VAT Prod. Posting Group"='13B2')) THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                    IF ((tab_ab."No."='4418') AND (tab_ab."VAT Prod. Posting Group"<>'13B2')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF ((tab_ab."No."='4418') AND (tab_ab."VAT Prod. Posting Group"<>'13B2')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  // ENDE 16%
                  END;
                END ELSE BEGIN
                  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);   // Wenn weiteres Sachkonto
                END;
              END;
              EnterCell(RowNo,5,FORMAT(tab_ab."Cross-Reference No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              IF tab_ab.Einkaufsw„hrungscode='' THEN BEGIN
                EnterCell(RowNo,8,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT(tab_ab.Einkaufsw„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;
              EnterCell(RowNo,9,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.00###',TempExcelBuffer."Cell Type"::Number);
              IF tab_vkk."Currency Code"=tab_ab.Einkaufsw„hrungscode THEN BEGIN
                IF tab_vkk."Currency Factor"<>tab_ab.Einkaufsw„hrungsfaktor THEN v_kursdif_vkk_vkz:=TRUE;
              END;
              EnterCell(RowNo,10,FORMAT(tab_ab."DC-Preis (EKW)"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,11,FORMAT(tab_ab."VK-Preis (MW)"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(tab_ab."Unit Price"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              v_sum_AU_MW:=v_sum_AU_MW +ROUND(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity",0.01);
              IF tab_ab.Quantity * tab_ab."Outstanding Quantity" <> 0 THEN
                EnterCell(RowNo,14,FORMAT(tab_ab.Amount/tab_ab.Quantity*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF tab_ab.Quantity*tab_ab."Outstanding Quantity" <> 0 THEN
                v_sum_AU_WŽ:=v_sum_AU_WŽ+ROUND(tab_ab.Amount/tab_ab.Quantity*tab_ab."Outstanding Quantity",0.01);
              EnterCell(RowNo,15,FORMAT(tab_ab."Profit %"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,16,FORMAT(tab_ab."Handlingskosten %"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              Artikel.RESET;
              Artikel.SETFILTER(Artikel."No.",'%1',tab_ab."No.");
              IF Artikel.FINDFIRST THEN BEGIN
                EnterCell(RowNo,17,FORMAT(Artikel."Zollsatz %"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
                IF Artikel."Tariff No."='8542 3190 000' THEN v_sum_13B2:=v_sum_13B2+(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity");
              END;
              IF tab_ab."Quotenr." <>'' THEN BEGIN
                v_Q_Daten.RESET;
                v_Q_Daten.SETFILTER(v_Q_Daten."Quotenr.",'%1',tab_ab."Quotenr.");
                IF v_Q_Daten.FINDFIRST THEN BEGIN
                  EnterCell(RowNo,18,FORMAT(v_Q_Daten."Quotenr. Hersteller"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,19,FORMAT(tab_ab."Quotenr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,20,FORMAT(v_Q_Daten.Gltigkeitsdatum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END;
              EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,24,FORMAT(tab_ab.AC_Solutionpartner),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,25,FORMAT(tab_ab."Blanket Order No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              tab_vkk1.RESET;
              tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',tab_ab."Blanket Order No.");
              IF tab_vkk1.FINDFIRST THEN BEGIN
                IF tab_vkk1."Currency Code"='' THEN BEGIN
                  EnterCell(RowNo,26,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,26,FORMAT(tab_vkk1."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                EnterCell(RowNo,27,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,28,FORMAT(tab_vkk1.USt13b2),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,29,FORMAT(tab_ab.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            UNTIL tab_ab.NEXT=0;
          END;
          RowNo := RowNo +2;
          EnterCell(RowNo,1,'Gesamt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,FORMAT(v_sum_AU_MW),'',TRUE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,14,FORMAT(v_sum_AU_WŽ),'',TRUE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo +2;
          v_bemerkung.RESET;    //    Anzeige von Bemerkungszeilen
          v_bemerkung.SETFILTER(v_bemerkung."No.",'%1',tab_vkk."No.");
          IF v_bemerkung.FIND('-') THEN BEGIN
             EnterCell(RowNo,1,'Bemerkungen: ','',TRUE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            REPEAT
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(v_bemerkung.Date),'',TRUE,FALSE,FALSE,'dd.mm.yyyy[blue]',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,FORMAT(v_bemerkung.Comment),'',TRUE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            UNTIL v_bemerkung.NEXT=0;
            RowNo := RowNo +1;
          END;
          IF v_sum_13B2>=5000 THEN BEGIN  //  šberprfung ob USt 13B2 in Frage kommt
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Summe Zollpos 8542 3190 000','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,FORMAT(v_sum_13B2),'',FALSE,FALSE,FALSE,'###,###,##0.00[red]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'H„kchen im AU-Kopf gesetzt?','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,FORMAT(tab_vkk.USt13b2),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,'Produktbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Lieferung im Inland?','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,'MWSt Probuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          v_EU_Fehler:=0;   //   šberprfung ob bei der Gesch„ftsbuchungsgruppe EU auch in die EU geliefert wird
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='AT')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='BE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='BG')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='CY')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='CZ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='DK')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='EE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='ES')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='FI')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='FR')) THEN v_EU_Fehler:=1;
      //    IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='GB')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='GR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='HU')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='IE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='IT')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='LT')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='LU')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='LV')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='ME')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='MT')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='NL')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='PL')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='PT')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='RO')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='RS')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='SE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='SI')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='SK')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (v_EU_Fehler=0)) THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Fehler! Bitte šberprfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          //   šberprfung ob bei der Gesch„ftsbuchungsgruppe INLAND auch ins Inland geliefert wird
          IF ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND (tab_vkk."Ship-to Country/Region Code" <>'DE')) THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Fehler! Bitte šberprfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          v_EU_Fehler:=0;   //   šberprfung ob bei der Gesch„ftsbuchungsgruppe AUSLAND auch ins Ausland geliefert wird
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='AE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='AR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='AS')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='AU')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BA')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BM')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BN')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BY')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CA')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CH')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CL')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CN')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CO')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CS')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='DZ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='EG')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='FJ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='HK')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='HR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='ID')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='IL')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='IN')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='IS')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='JP')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='KE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='KP')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='KR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='LB')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='LI')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='LK')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MA')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MD')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MK')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MX')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MY')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MZ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='NG')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='NO')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='NZ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='PE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='PH')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='RU')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SA')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SB')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SC')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SG')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SZ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TH')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TN')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TW')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TZ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='UA')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='UG')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='US')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='VN')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='VU')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='WS')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='ZA')) THEN v_EU_Fehler:=1;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (v_EU_Fehler=0)) THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Fehler! Bitte šberprfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          IF v_Q_Daten.Gltigkeitsdatum<>0D THEN BEGIN
            IF v_Q_Daten.Gltigkeitsdatum<=WORKDATE THEN BEGIN   //  šberprfung auf abgelaufene Qoutes
              RowNo := RowNo +1;
              EnterCell(RowNo,1,'Ein Qoute ist abgelaufen.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
          END;
          deb.RESET;    //   šberprfung  der Liefer- und Zahlungsbedingungen mit Debitorvorgaben
          deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            IF deb."Payment Terms Code"<>tab_vkk."Payment Terms Code" THEN BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Zahlungsbedingung: '+deb."Payment Terms Code"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
            IF deb."Shipment Method Code"<>tab_vkk."Shipment Method Code" THEN BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Lieferbedingung: '+deb."Shipment Method Code"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
            IF deb."AB EMail-Adresse"<>'' THEN BEGIN
              IF deb."AB EMail-Adresse"<>tab_vkk."AB EMail-Adresse" THEN BEGIN
                RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; AB Emailadresse: '+deb."AB EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            IF deb."Rech EMail-Adresse"<>'' THEN BEGIN
              IF deb."Rech EMail-Adresse"<>tab_vkk."Rech EMail-Adresse" THEN BEGIN
                RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Rech Emailadresse: '+deb."Rech EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            IF deb."Service EMail-Adresse"<>'' THEN BEGIN
              IF deb."Service EMail-Adresse"<>tab_vkk."Service EMail-Adresse" THEN BEGIN
                RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Service Emailadresse: '+deb."Service EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            IF deb."Lizenz EMail-Adresse"<>'' THEN BEGIN
              IF deb."Lizenz EMail-Adresse"<>tab_vkk."Lizenz EMail-Adresse" THEN BEGIN
                RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Lizenz Emailadresse: '+deb."Lizenz EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
          END;
          tab_vkk1.RESET;    //  šberprfung der Rahmenw„hrung und -kurs mit der Auftragsw„hrung und -kurs
          tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',tab_ab."Blanket Order No.");
          IF tab_vkk1.FINDFIRST THEN BEGIN
            IF tab_vkk1."Currency Code"<>'' THEN BEGIN
              IF tab_vkk1."Currency Code"=tab_vkk."Currency Code" THEN BEGIN
                IF tab_vkk1."Currency Factor"=tab_vkk."Currency Factor" THEN BEGIN
                END ELSE BEGIN
                  //          Keine Kurs-šbereinstimmung
                  RowNo := RowNo +1;
                  EnterCell(RowNo,1,'Rahmenauftrag: '+tab_vkk1."No."+'; Rahmenkurs: '+FORMAT(tab_vkk1."Currency Factor")+' weicht ab.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END ELSE BEGIN
                //        keine W„hrungs-šbereinstimmung
                RowNo := RowNo +1;
                EnterCell(RowNo,1,'Rahmenauftrag: '+tab_vkk1."No."+'; Rahmenw„hrung: '+tab_vkk1."Currency Code"+' weicht ab.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
          END;
          IF v_kursdif_vkk_vkz=TRUE THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Der Kurs im AU-Kopf weicht von den Auftragszeilen ab.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          v_kursdif_vkk_vkz:=FALSE;
          // Hier weitere Abfragen einbauen
          tab_vkz.RESET;
          tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk."No.");
          tab_vkz.SETFILTER(tab_vkz.Type,'%1|%2',tab_vkz.Type::Item, tab_vkz.Type::"G/L Account");
          IF tab_vkz.FIND('-') THEN BEGIN
            v_prdbuchgrp:=tab_vkz."Gen. Bus. Posting Group";
            REPEAT
            IF tab_vkz."Gen. Bus. Posting Group"<>v_prdbuchgrp THEN BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,1,'Im Auftrag gibt es unterschiedliche Gesch„ftsbuchungsgruppen.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
            UNTIL tab_vkz.NEXT=0;
          END;
          tab_vkz.RESET;
          tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk."No.");
          tab_vkz.SETFILTER(tab_vkz."No.",'%1','LIEF_DRUCK');
          IF tab_vkz.FIND('-') THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Beschreibung:','',TRUE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            REPEAT
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(tab_vkz.Description),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            UNTIL tab_vkz.NEXT=0;
            RowNo := RowNo +1;
          END;
          IF tab_vkk."Salesperson Code"='' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Es fehlt der Verk„ufercode: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk."Territory Code"='' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Es fehlt der Gebietscode: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk."Betreuer Innendienst"='' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Es fehlt der Betreuer Innen: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('kontrolliert:'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +3;
          Pfad_tag :=FORMAT(DATE2DMY(AE_holen_Datum_1,1));
          Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
          Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));
          Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
          CloseExcel('tgl_AEprf_'+Pfaddatum+'_'+tab_vkk."No.",'tgl_AEprf_'+Pfaddatum+'_'+tab_vkk."No.",'F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022');
        UNTIL tab_vkk.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE t„gl_AE_Liste_kontrollieren@1000000030();
    BEGIN
      v_anz_RE12:=0;
      v_sum_AE_Gesamt:=0;
      v_sum_AE_DL:=0;
      v_sum_AE_HAN:=0;
      v_sum_AE_SYS:=0;
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,FORMAT('Auftragseingangsliste'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,1,FORMAT('Datum'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,FORMAT('AU-Nr'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,FORMAT('Pos-Nr'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,FORMAT('Deb-Nr'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,FORMAT('Debitor'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT('Menge'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,FORMAT('Artikel'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,FORMAT('Lager'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,FORMAT('EK DC'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,FORMAT('EK-WŽ-Code'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,FORMAT('EK-WŽ-Faktor'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,FORMAT('VK'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,FORMAT('VK-WŽ-Code'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,FORMAT('VK-WŽ-Faktor'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,FORMAT('Restmenge'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,FORMAT('AE DL'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,FORMAT('AE HAN'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,FORMAT('AE SYS'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,FORMAT('Betrag EUR Gesamt'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,FORMAT('Produktbuchgrp'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'AUR-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,22,'AUR-Zeilen-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,23,'AUR VK-WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,24,'AUR VK_Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,25,'AUR EK-WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,26,'AUR EK_Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,27,'AUR MWSt-Kz','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,28,'AUR 13B2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,29,FORMAT('DB %'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,30,FORMAT('Betreuer'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,31,FORMAT('Vertreter'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,32,FORMAT('Linie'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,33,FORMAT('EK-Gesamt'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,34,FORMAT('VK-Gesamt'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,35,FORMAT('PLZ'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,36,FORMAT('Teams'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,37,FORMAT('Endkunde'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,38,FORMAT('Belegart'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,39,FORMAT('Art'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,40,FORMAT('Best„tigt LD'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,41,FORMAT('Wunschtermin'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,42,FORMAT('Auftragsdatum'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,43,FORMAT('Kunden_Bestellnr.'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,44,FORMAT('Referenz'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      tab_vkk.RESET;
      tab_vkk.SETFILTER(tab_vkk."Document Type",'%1|%2',tab_vkk."Document Type"::Order,tab_vkk."Document Type"::"Blanket Order");
      tab_vkk.SETFILTER(tab_vkk."Order Date",'%1',AE_holen_Datum_1);
      IF v_Liste_gesamt=TRUE THEN BEGIN
      END ELSE BEGIN
        IF v_liste_sys=TRUE THEN BEGIN
          tab_vkk.SETFILTER(tab_vkk."Territory Code",'%1','SYSTEM');
        END;
        IF v_liste_chip=TRUE THEN BEGIN
          tab_vkk.SETFILTER(tab_vkk."Territory Code",'<>%1','SYSTEM');
        END;
      END;
      IF tab_vkk.FIND('-') THEN BEGIN
        REPEAT
          IF tab_vkk."Location Code"='MUST' THEN BEGIN   // Musterauftrag Leerzeile auflisten
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,FORMAT(tab_vkk."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            // EnterCell(RowNo,3,FORMAT(tab_ab."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,FORMAT(tab_vkk."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_vkk."Sell-to Customer Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            // EnterCell(RowNo,6,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            // EnterCell(RowNo,7,FORMAT(tab_ab."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            // EnterCell(RowNo,7,FORMAT(tab_ab."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,8,FORMAT(tab_vkk."Location Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          END;
          tab_ab.RESET;
          tab_ab.SETFILTER(tab_ab."Document No.",'%1',tab_vkk."No.");
          tab_ab.SETFILTER(tab_ab.Type,'%1',tab_ab.Type::Item);
          //    tab_ab.SETFILTER(tab_ab.Type,'%1|%2',tab_ab.Type::Item,tab_ab.Type::"G/L Account");
          tab_ab.SETFILTER(tab_ab."Location Code",'%1|%2','ZENT','KONSI');
          IF tab_ab.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              IF tab_vkk."Document Type"=tab_vkk."Document Type"::Order THEN
              EnterCell(RowNo,2,tab_vkk."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk.TABLENAME,1,42,tab_vkk."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
              IF tab_vkk."Document Type"=tab_vkk."Document Type"::"Blanket Order" THEN
              EnterCell(RowNo,2,tab_vkk."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk.TABLENAME,1,507,tab_vkk."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(tab_ab."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,4,FORMAT(tab_vkk."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,5,FORMAT(tab_vkk."Sell-to Customer Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(tab_ab."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(tab_ab."Location Code"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,FORMAT(tab_ab."DC-Preis (EKW)"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF tab_ab.Einkaufsw„hrungscode='' THEN BEGIN
                EnterCell(RowNo,10,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                EnterCell(RowNo,10,FORMAT(tab_ab.Einkaufsw„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF tab_ab.Einkaufsw„hrungscode='USD' THEN BEGIN
                tab_kurse.RESET;
                tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_ab.Einkaufsw„hrungscode);
                tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk."Order Date");
                IF tab_kurse.FINDFIRST THEN BEGIN
                  IF tab_ab.Einkaufsw„hrungsfaktor=tab_kurse."Exchange Rate Amount" THEN BEGIN
                    EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[green]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[red]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                  END;
                    IF tab_ab."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkz.RESET;
                      tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_ab."Document No.");
                      tab_vkz.SETFILTER(tab_vkz."Line No.",'%1',tab_ab."Line No.");
                      IF tab_vkz.FINDFIRST THEN BEGIN
                        IF tab_vkz.Einkaufsw„hrungsfaktor=tab_ab.Einkaufsw„hrungsfaktor THEN BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                  END;
                END;
                IF tab_ab.Einkaufsw„hrungscode='GBP' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_ab.Einkaufsw„hrungscode);
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk."Order Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_ab.Einkaufsw„hrungsfaktor=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END;
                    IF tab_ab."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkz.RESET;
                      tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_ab."Document No.");
                      tab_vkz.SETFILTER(tab_vkz."Line No.",'%1',tab_ab."Line No.");
                      IF tab_vkz.FINDFIRST THEN BEGIN
                        IF tab_vkz.Einkaufsw„hrungsfaktor=tab_ab.Einkaufsw„hrungsfaktor THEN BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
                IF tab_ab.Einkaufsw„hrungscode='JPY' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_ab.Einkaufsw„hrungscode);
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk."Order Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_ab.Einkaufsw„hrungsfaktor=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[blue]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[red]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END;
                    IF tab_ab."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkz.RESET;
                      tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_ab."Document No.");
                      tab_vkz.SETFILTER(tab_vkz."Line No.",'%1',tab_ab."Line No.");
                      IF tab_vkz.FINDFIRST THEN BEGIN
                        IF tab_vkz.Einkaufsw„hrungsfaktor=tab_ab.Einkaufsw„hrungsfaktor THEN BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,11,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
                EnterCell(RowNo,12,FORMAT(tab_ab."Unit Price"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                IF tab_vkk."Currency Code"='' THEN BEGIN
                  EnterCell(RowNo,13,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,13,FORMAT(tab_vkk."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                IF tab_vkk."Currency Code"='USD' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_vkk."Currency Code");
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk."Order Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_vkk."Currency Factor"=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,14,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      IF tab_ab."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                        tab_vkk1.RESET;
                        tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',tab_vkk."No.");
                        IF tab_vkk1.FINDFIRST THEN BEGIN
                          IF tab_vkk1."Currency Factor"=tab_vkk."Currency Factor" THEN BEGIN
                            EnterCell(RowNo,14,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,14,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
              END;
              IF tab_vkk."Currency Code"='GBP' THEN BEGIN
                tab_kurse.RESET;
                tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_vkk."Currency Code");
                tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk."Order Date");
                IF tab_kurse.FINDFIRST THEN BEGIN
                  IF tab_vkk."Currency Factor"=tab_kurse."Exchange Rate Amount" THEN BEGIN
                    EnterCell(RowNo,14,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF tab_ab."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkk1.RESET;
                      tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',tab_vkk."No.");
                      IF tab_vkk1.FINDFIRST THEN BEGIN
                        IF tab_vkk1."Currency Factor"=tab_vkk."Currency Factor" THEN BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,14,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
              END;
              IF tab_vkk."Currency Code"='JPY' THEN BEGIN
                tab_kurse.RESET;
                tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_vkk."Currency Code");
                tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk."Order Date");
                IF tab_kurse.FINDFIRST THEN BEGIN
                  IF tab_vkk."Currency Factor"=tab_kurse."Exchange Rate Amount" THEN BEGIN
                    EnterCell(RowNo,14,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF tab_ab."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkk1.RESET;
                      tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',tab_vkk."No.");
                      IF tab_vkk1.FINDFIRST THEN BEGIN
                        IF tab_vkk1."Currency Factor"=tab_vkk."Currency Factor" THEN BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,14,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
              END;
              EnterCell(RowNo,15,FORMAT(tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
              IF tab_vkk."Document Type"=tab_vkk."Document Type"::Order THEN BEGIN
                IF tab_vkk."Currency Factor"=0 THEN BEGIN
                  EnterCell(RowNo,19,FORMAT(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_sum_AE_Gesamt:=v_sum_AE_Gesamt+(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity");
                  IF ((tab_ab."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab."Gen. Prod. Posting Group"='SERVICE')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity");
                  END;
                  IF ((tab_ab."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab."Gen. Prod. Posting Group"='STD_POOL')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity");
                  END;
                  IF ((tab_ab."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab."Gen. Prod. Posting Group"='SCHULUNG')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity");
                  END;
                  IF tab_ab."Gen. Prod. Posting Group"='HANDEL' THEN BEGIN  // Summierung aller Handelsums„tze
                    EnterCell(RowNo,17,FORMAT(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_HAN:=v_sum_AE_HAN+(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity");
                  END;
                  IF tab_ab."Gen. Prod. Posting Group"='SYSTEM' THEN BEGIN  // Summierung aller 'Systemums„tze
                    EnterCell(RowNo,18,FORMAT(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_SYS:=v_sum_AE_SYS+(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity");
                  END;
                END ELSE BEGIN
                  EnterCell(RowNo,19,FORMAT(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_sum_AE_Gesamt:=v_sum_AE_Gesamt+(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor");
                  IF ((tab_ab."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab."Gen. Prod. Posting Group"='SERVICE')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor");
                  END;
                  IF ((tab_ab."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab."Gen. Prod. Posting Group"='STD_POOL')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor");
                  END;
                  IF ((tab_ab."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab."Gen. Prod. Posting Group"='SCHULUNG')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor");
                  END;
                  IF tab_ab."Gen. Prod. Posting Group"='HANDEL' THEN BEGIN  // Summierung aller Handelsums„tze
                    EnterCell(RowNo,17,FORMAT(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_HAN:=v_sum_AE_HAN+(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor");
                  END;
                  IF tab_ab."Gen. Prod. Posting Group"='SYSTEM' THEN BEGIN  // Summierung aller Systemums„tze
                    EnterCell(RowNo,18,FORMAT(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_SYS:=v_sum_AE_SYS+(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor");
                  END;
                END;
              END;
              EnterCell(RowNo,20,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              tab_vkk1.RESET;    //  Anzeigen der Rahmendaten
              tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',tab_ab."Blanket Order No.");
              IF tab_vkk1.FINDFIRST THEN BEGIN
                tab_vkz.RESET;
                tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk1."No.");
                tab_vkz.SETFILTER(tab_vkz."Line No.",'%1',tab_ab."Blanket Order Line No.");
                IF tab_vkz.FINDFIRST THEN BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_vkz."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,22,FORMAT(tab_vkz."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,23,FORMAT(tab_vkk1."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,24,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,25,FORMAT(tab_vkz.Einkaufsw„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,26,FORMAT(tab_vkz.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,27,FORMAT(tab_vkz."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,28,FORMAT(tab_vkk1.USt13b2),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text)
                END;
              END;
              EnterCell(RowNo,29,FORMAT(tab_ab."Profit %"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,30,FORMAT(tab_vkk."Betreuer Innendienst"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,31,FORMAT(tab_vkk."Salesperson Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,32,FORMAT(tab_ab."Manufacturer Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,33,FORMAT(tab_ab."Unit Cost (LCY)"*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF tab_vkk."Currency Factor"=0 THEN BEGIN
                EnterCell(RowNo,34,FORMAT(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,34,FORMAT(tab_ab."Unit Price"*tab_ab."Outstanding Quantity"/tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END;
              EnterCell(RowNo,35,FORMAT(tab_vkk."Sell-to Post Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,36,FORMAT(tab_vkk.Teams),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,37,FORMAT(tab_vkk.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,38,FORMAT(''),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,39,FORMAT(''),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,40,FORMAT(tab_ab."Promised Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,41,FORMAT(tab_ab."Requested Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,42,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,43,FORMAT(tab_vkk."External Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,44,FORMAT(tab_vkk."Your Reference"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            UNTIL tab_ab.NEXT=0;
          END;
        UNTIL tab_vkk.NEXT = 0;
        // Erweiterung: Archivierte Auftragseing„nge hinzufgen
        IF AU_Arch_Nr_sich<>'' THEN BEGIN
          tab_ab_arch.RESET;
          tab_vkk_arch.RESET;
          tab_vkk_arch.SETFILTER(tab_vkk_arch."No.",'%1',AU_Arch_Nr_sich);
          IF tab_vkk_arch.FINDLAST THEN BEGIN
            tab_ab_arch.SETFILTER(tab_ab_arch."Document No.",'%1',tab_vkk_arch."No.");
            tab_ab_arch.SETFILTER(tab_ab_arch."Document Type",'%1', tab_ab_arch."Document Type"::Order);
            tab_ab_arch.SETFILTER(tab_ab_arch.Type,'%1',tab_ab_arch.Type::Item);
            tab_ab_arch.SETFILTER(tab_ab_arch."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
            tab_ab_arch.SETFILTER(tab_ab_arch.Quantity,'>%1',0);
            tab_ab_arch.SETFILTER(tab_ab_arch."Version No.",'%1',tab_vkk_arch."Version No.");
            IF tab_ab_arch.FIND('-')  THEN BEGIN
              REPEAT
                RowNo := RowNo +1;
                EnterCell(RowNo,1,FORMAT(tab_vkk_arch."Order Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,2,FORMAT(tab_vkk_arch."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,3,FORMAT(tab_ab_arch."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,4,FORMAT(tab_vkk_arch."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,5,FORMAT(tab_vkk_arch."Sell-to Customer Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,6,FORMAT(tab_ab_arch.Quantity),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,7,FORMAT(tab_ab_arch."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,8,FORMAT(tab_ab_arch."Location Code"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,9,FORMAT(tab_ab_arch."DC-Preis (EKW)"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                IF tab_ab_arch.Einkaufsw„hrungscode='' THEN BEGIN
                  EnterCell(RowNo,10,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,10,FORMAT(tab_ab_arch.Einkaufsw„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                IF tab_ab_arch.Einkaufsw„hrungscode='USD' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_ab_arch.Einkaufsw„hrungscode);
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk_arch."Order Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_ab_arch.Einkaufsw„hrungsfaktor=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[green]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[red]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END;
                    IF tab_ab_arch."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkz_arch.RESET;
                      tab_vkz_arch.SETFILTER(tab_vkz_arch."Document No.",'%1',tab_ab_arch."Document No.");
                      tab_vkz_arch.SETFILTER(tab_vkz_arch."Line No.",'%1',tab_ab_arch."Line No.");
                      IF tab_vkz_arch.FINDFIRST THEN BEGIN
                        IF tab_vkz_arch.Einkaufsw„hrungsfaktor=tab_ab_arch.Einkaufsw„hrungsfaktor THEN BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                  END;
                END;
                IF tab_ab_arch.Einkaufsw„hrungscode='GBP' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_ab_arch.Einkaufsw„hrungscode);
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk_arch."Order Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_ab_arch.Einkaufsw„hrungsfaktor=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END;
                    IF tab_ab_arch."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkz_arch.RESET;
                      tab_vkz_arch.SETFILTER(tab_vkz_arch."Document No.",'%1',tab_ab_arch."Document No.");
                      tab_vkz_arch.SETFILTER(tab_vkz_arch."Line No.",'%1',tab_ab_arch."Line No.");
                      IF tab_vkz_arch.FINDFIRST THEN BEGIN
                        IF tab_vkz_arch.Einkaufsw„hrungsfaktor=tab_ab_arch.Einkaufsw„hrungsfaktor THEN BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
                IF tab_ab_arch.Einkaufsw„hrungscode='JPY' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_ab_arch.Einkaufsw„hrungscode);
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk_arch."Order Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_ab_arch.Einkaufsw„hrungsfaktor=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[blue]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[red]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END;
                    IF tab_ab_arch."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkz_arch.RESET;
                      tab_vkz_arch.SETFILTER(tab_vkz_arch."Document No.",'%1',tab_ab_arch."Document No.");
                      tab_vkz_arch.SETFILTER(tab_vkz_arch."Line No.",'%1',tab_ab_arch."Line No.");
                      IF tab_vkz_arch.FINDFIRST THEN BEGIN
                        IF tab_vkz_arch.Einkaufsw„hrungsfaktor=tab_ab_arch.Einkaufsw„hrungsfaktor THEN BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;

                EnterCell(RowNo,12,FORMAT(tab_ab_arch."Unit Price"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                IF tab_vkk_arch."Currency Code"='' THEN BEGIN
                  EnterCell(RowNo,13,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,13,FORMAT(tab_vkk_arch."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                IF tab_vkk_arch."Currency Code"='USD' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_vkk_arch."Currency Code");
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk_arch."Order Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_vkk_arch."Currency Factor"=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      IF tab_ab_arch."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                        tab_vkk1_arch.RESET;
                        tab_vkk1_arch.SETFILTER(tab_vkk1_arch."No.",'%1',tab_vkk_arch."No.");
                        IF tab_vkk1_arch.FINDFIRST THEN BEGIN
                          IF tab_vkk1_arch."Currency Factor"=tab_vkk_arch."Currency Factor" THEN BEGIN
                            EnterCell(RowNo,14,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
              END;
              IF tab_vkk_arch."Currency Code"='GBP' THEN BEGIN
                tab_kurse.RESET;
                tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_vkk_arch."Currency Code");
                tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk_arch."Order Date");
                IF tab_kurse.FINDFIRST THEN BEGIN
                  IF tab_vkk_arch."Currency Factor"=tab_kurse."Exchange Rate Amount" THEN BEGIN
                    EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF tab_ab_arch."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkk1_arch.RESET;
                      tab_vkk1_arch.SETFILTER(tab_vkk1_arch."No.",'%1',tab_vkk_arch."No.");
                      IF tab_vkk1_arch.FINDFIRST THEN BEGIN
                        IF tab_vkk1_arch."Currency Factor"=tab_vkk_arch."Currency Factor" THEN BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
              END;
              IF tab_vkk_arch."Currency Code"='JPY' THEN BEGIN
                tab_kurse.RESET;
                tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_vkk_arch."Currency Code");
                tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk_arch."Order Date");
                IF tab_kurse.FINDFIRST THEN BEGIN
                  IF tab_vkk_arch."Currency Factor"=tab_kurse."Exchange Rate Amount" THEN BEGIN
                    EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF tab_ab_arch."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkk1_arch.RESET;
                      tab_vkk1_arch.SETFILTER(tab_vkk1_arch."No.",'%1',tab_vkk_arch."No.");
                      IF tab_vkk1_arch.FINDFIRST THEN BEGIN
                        IF tab_vkk1_arch."Currency Factor"=tab_vkk_arch."Currency Factor" THEN BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
              END;
              EnterCell(RowNo,15,FORMAT(tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
              IF tab_vkk_arch."Document Type"=tab_vkk_arch."Document Type"::Order THEN BEGIN
                IF tab_vkk_arch."Currency Factor"=0 THEN BEGIN
                  EnterCell(RowNo,19,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_sum_AE_Gesamt:=v_sum_AE_Gesamt+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
                  IF ((tab_ab_arch."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab_arch."Gen. Prod. Posting Group"='SERVICE')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
                  END;
                  IF ((tab_ab_arch."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab_arch."Gen. Prod. Posting Group"='STD_POOL')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
                  END;
                  IF ((tab_ab_arch."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab_arch."Gen. Prod. Posting Group"='SCHULUNG')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
                  END;
                  IF tab_ab_arch."Gen. Prod. Posting Group"='HANDEL' THEN BEGIN  // Summierung aller Handelsums„tze
                    EnterCell(RowNo,17,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_HAN:=v_sum_AE_HAN+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
                  END;
                  IF tab_ab_arch."Gen. Prod. Posting Group"='SYSTEM' THEN BEGIN  // Summierung aller 'Systemums„tze
                    EnterCell(RowNo,18,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_SYS:=v_sum_AE_SYS+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
                  END;
                END ELSE BEGIN
                  EnterCell(RowNo,19,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_sum_AE_Gesamt:=v_sum_AE_Gesamt+(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor");
                  IF ((tab_ab_arch."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab_arch."Gen. Prod. Posting Group"='SERVICE')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor");
                  END;
                  IF ((tab_ab_arch."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab_arch."Gen. Prod. Posting Group"='STD_POOL')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor");
                  END;
                  IF ((tab_ab_arch."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab_arch."Gen. Prod. Posting Group"='SCHULUNG')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor");
                  END;
                  IF tab_ab_arch."Gen. Prod. Posting Group"='HANDEL' THEN BEGIN  // Summierung aller Handelsums„tze
                    EnterCell(RowNo,17,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_HAN:=v_sum_AE_HAN+(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor");
                  END;
                  IF tab_ab_arch."Gen. Prod. Posting Group"='SYSTEM' THEN BEGIN  // Summierung aller Systemums„tze
                    EnterCell(RowNo,18,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_SYS:=v_sum_AE_SYS+(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor");
                  END;
                END;
              END;
              EnterCell(RowNo,20,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              tab_vkk1.RESET;    //  Anzeigen der Rahmendaten
              tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',tab_ab_arch."Blanket Order No.");
              IF tab_vkk1.FINDFIRST THEN BEGIN
                tab_vkz.RESET;
                tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk1."No.");
                tab_vkz.SETFILTER(tab_vkz."Line No.",'%1',tab_ab_arch."Blanket Order Line No.");
                IF tab_vkz_arch.FINDFIRST THEN BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_vkk1."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,22,FORMAT(tab_vkz_arch."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,23,FORMAT(tab_vkk1."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,24,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,25,FORMAT(tab_vkz_arch.Einkaufsw„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,26,FORMAT(tab_vkz_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,27,FORMAT(tab_vkz_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  //   EnterCell(RowNo,28,FORMAT(tab_vkk1_arch.USt13b2),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text)
                END;
              END;
              EnterCell(RowNo,29,FORMAT(tab_ab_arch."Profit %"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,30,FORMAT(tab_vkk_arch."Betreuer Innendienst"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,31,FORMAT(tab_vkk_arch."Salesperson Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,32,FORMAT(tab_ab_arch."Manufacturer Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,33,FORMAT(tab_ab_arch."Unit Cost (LCY)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF tab_vkk_arch."Currency Factor"=0 THEN BEGIN
                EnterCell(RowNo,34,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,34,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END;
              EnterCell(RowNo,35,FORMAT(tab_vkk_arch."Sell-to Post Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,36,FORMAT(tab_vkk_arch.Teams),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,37,FORMAT(tab_vkk_arch.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,38,FORMAT(''),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,39,FORMAT(''),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,40,FORMAT(tab_ab_arch."Promised Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,41,FORMAT(tab_ab_arch."Requested Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,42,FORMAT(tab_vkk_arch."Order Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,43,FORMAT(tab_vkk."External Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,44,FORMAT(tab_vkk."Your Reference"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              UNTIL tab_ab_arch.NEXT = 0;
            END
          END;
        END;
          // ENDE Erweiterung: Archivierte Auftragseing„nge hinzufgen
          RowNo := RowNo +1;
          // Erweiterung: Archivierte Auftragseing„nge automatisch hinzufgen
          //  IF AU_Arch_Nr_sich<>'' THEN BEGIN
          tab_ab_arch.RESET;
          tab_vkk_arch.RESET;
          tab_vkk_arch.SETFILTER(tab_vkk_arch."Order Date",'%1',AE_holen_Datum_1);
          tab_vkk_arch.SETFILTER(tab_vkk_arch."Posting Date",'%1',AE_holen_Datum_1);
          tab_vkk_arch.SETFILTER(tab_vkk_arch."Document Date",'%1',AE_holen_Datum_1);
          tab_vkk_arch.SETFILTER(tab_vkk_arch."Version No.",'%1',1);
          IF tab_vkk_arch.FIND('-') THEN BEGIN
            REPEAT
            tab_ab_arch.SETFILTER(tab_ab_arch."Document No.",'%1',tab_vkk_arch."No.");
            tab_ab_arch.SETFILTER(tab_ab_arch."Document Type",'%1', tab_ab_arch."Document Type"::Order);
            tab_ab_arch.SETFILTER(tab_ab_arch.Type,'%1',tab_ab_arch.Type::Item);
            tab_ab_arch.SETFILTER(tab_ab_arch."Location Code",'%1|%2|%3|%4','ZENT','KONSI','ERSATZ','IDT');
            tab_ab_arch.SETFILTER(tab_ab_arch.Quantity,'>%1',0);
            tab_ab_arch.SETFILTER(tab_ab_arch."Version No.",'%1',tab_vkk_arch."Version No.");
            IF tab_ab_arch.FIND('-')  THEN BEGIN
              REPEAT
                RowNo := RowNo +1;
                EnterCell(RowNo,1,FORMAT(tab_vkk_arch."Order Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,2,FORMAT(tab_vkk_arch."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,3,FORMAT(tab_ab_arch."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,4,FORMAT(tab_vkk_arch."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,5,FORMAT(tab_vkk_arch."Sell-to Customer Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,6,FORMAT(tab_ab_arch.Quantity),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,7,FORMAT(tab_ab_arch."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,8,FORMAT(tab_ab_arch."Location Code"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,9,FORMAT(tab_ab_arch."DC-Preis (EKW)"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                IF tab_ab_arch.Einkaufsw„hrungscode='' THEN BEGIN
                  EnterCell(RowNo,10,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,10,FORMAT(tab_ab_arch.Einkaufsw„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                IF tab_ab_arch.Einkaufsw„hrungscode='USD' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_ab_arch.Einkaufsw„hrungscode);
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk_arch."Order Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_ab_arch.Einkaufsw„hrungsfaktor=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[green]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[red]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END;
                    IF tab_ab_arch."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkz_arch.RESET;
                      tab_vkz_arch.SETFILTER(tab_vkz_arch."Document No.",'%1',tab_ab_arch."Document No.");
                      tab_vkz_arch.SETFILTER(tab_vkz_arch."Line No.",'%1',tab_ab_arch."Line No.");
                      IF tab_vkz_arch.FINDFIRST THEN BEGIN
                        IF tab_vkz_arch.Einkaufsw„hrungsfaktor=tab_ab_arch.Einkaufsw„hrungsfaktor THEN BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                  END;
                END;
                IF tab_ab_arch.Einkaufsw„hrungscode='GBP' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_ab_arch.Einkaufsw„hrungscode);
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk_arch."Order Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_ab_arch.Einkaufsw„hrungsfaktor=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END;
                    IF tab_ab_arch."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkz_arch.RESET;
                      tab_vkz_arch.SETFILTER(tab_vkz_arch."Document No.",'%1',tab_ab_arch."Document No.");
                      tab_vkz_arch.SETFILTER(tab_vkz_arch."Line No.",'%1',tab_ab_arch."Line No.");
                      IF tab_vkz_arch.FINDFIRST THEN BEGIN
                        IF tab_vkz_arch.Einkaufsw„hrungsfaktor=tab_ab_arch.Einkaufsw„hrungsfaktor THEN BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
                IF tab_ab_arch.Einkaufsw„hrungscode='JPY' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_ab_arch.Einkaufsw„hrungscode);
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk_arch."Order Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_ab_arch.Einkaufsw„hrungsfaktor=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[blue]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[red]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END;
                    IF tab_ab_arch."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkz_arch.RESET;
                      tab_vkz_arch.SETFILTER(tab_vkz_arch."Document No.",'%1',tab_ab_arch."Document No.");
                      tab_vkz_arch.SETFILTER(tab_vkz_arch."Line No.",'%1',tab_ab_arch."Line No.");
                      IF tab_vkz_arch.FINDFIRST THEN BEGIN
                        IF tab_vkz_arch.Einkaufsw„hrungsfaktor=tab_ab_arch.Einkaufsw„hrungsfaktor THEN BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,11,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;

                EnterCell(RowNo,12,FORMAT(tab_ab_arch."Unit Price"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                IF tab_vkk_arch."Currency Code"='' THEN BEGIN
                  EnterCell(RowNo,13,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,13,FORMAT(tab_vkk_arch."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                IF tab_vkk_arch."Currency Code"='USD' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_vkk_arch."Currency Code");
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk_arch."Order Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_vkk_arch."Currency Factor"=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      IF tab_ab_arch."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                        tab_vkk1_arch.RESET;
                        tab_vkk1_arch.SETFILTER(tab_vkk1_arch."No.",'%1',tab_vkk_arch."No.");
                        IF tab_vkk1_arch.FINDFIRST THEN BEGIN
                          IF tab_vkk1_arch."Currency Factor"=tab_vkk_arch."Currency Factor" THEN BEGIN
                            EnterCell(RowNo,14,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
              END;
              IF tab_vkk_arch."Currency Code"='GBP' THEN BEGIN
                tab_kurse.RESET;
                tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_vkk_arch."Currency Code");
                tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk_arch."Order Date");
                IF tab_kurse.FINDFIRST THEN BEGIN
                  IF tab_vkk_arch."Currency Factor"=tab_kurse."Exchange Rate Amount" THEN BEGIN
                    EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF tab_ab_arch."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkk1_arch.RESET;
                      tab_vkk1_arch.SETFILTER(tab_vkk1_arch."No.",'%1',tab_vkk_arch."No.");
                      IF tab_vkk1_arch.FINDFIRST THEN BEGIN
                        IF tab_vkk1_arch."Currency Factor"=tab_vkk_arch."Currency Factor" THEN BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
              END;
              IF tab_vkk_arch."Currency Code"='JPY' THEN BEGIN
                tab_kurse.RESET;
                tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_vkk_arch."Currency Code");
                tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_vkk_arch."Order Date");
                IF tab_kurse.FINDFIRST THEN BEGIN
                  IF tab_vkk_arch."Currency Factor"=tab_kurse."Exchange Rate Amount" THEN BEGIN
                    EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF tab_ab_arch."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_vkk1_arch.RESET;
                      tab_vkk1_arch.SETFILTER(tab_vkk1_arch."No.",'%1',tab_vkk_arch."No.");
                      IF tab_vkk1_arch.FINDFIRST THEN BEGIN
                        IF tab_vkk1_arch."Currency Factor"=tab_vkk_arch."Currency Factor" THEN BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
              END;
              EnterCell(RowNo,15,FORMAT(tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
              IF tab_vkk_arch."Document Type"=tab_vkk_arch."Document Type"::Order THEN BEGIN
                IF tab_vkk_arch."Currency Factor"=0 THEN BEGIN
                  EnterCell(RowNo,19,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_sum_AE_Gesamt:=v_sum_AE_Gesamt+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
                  IF ((tab_ab_arch."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab_arch."Gen. Prod. Posting Group"='SERVICE')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
                  END;
                  IF ((tab_ab_arch."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab_arch."Gen. Prod. Posting Group"='STD_POOL')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
                  END;
                  IF ((tab_ab_arch."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab_arch."Gen. Prod. Posting Group"='SCHULUNG')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
                  END;
                  IF tab_ab_arch."Gen. Prod. Posting Group"='HANDEL' THEN BEGIN  // Summierung aller Handelsums„tze
                    EnterCell(RowNo,17,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_HAN:=v_sum_AE_HAN+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
                  END;
                  IF tab_ab_arch."Gen. Prod. Posting Group"='SYSTEM' THEN BEGIN  // Summierung aller 'Systemums„tze
                    EnterCell(RowNo,18,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_SYS:=v_sum_AE_SYS+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
                  END;
                END ELSE BEGIN
                  EnterCell(RowNo,19,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_sum_AE_Gesamt:=v_sum_AE_Gesamt+(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor");
                  IF ((tab_ab_arch."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab_arch."Gen. Prod. Posting Group"='SERVICE')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor");
                  END;
                  IF ((tab_ab_arch."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab_arch."Gen. Prod. Posting Group"='STD_POOL')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor");
                  END;
                  IF ((tab_ab_arch."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab_arch."Gen. Prod. Posting Group"='SCHULUNG')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor");
                  END;
                  IF tab_ab_arch."Gen. Prod. Posting Group"='HANDEL' THEN BEGIN  // Summierung aller Handelsums„tze
                    EnterCell(RowNo,17,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_HAN:=v_sum_AE_HAN+(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor");
                  END;
                  IF tab_ab_arch."Gen. Prod. Posting Group"='SYSTEM' THEN BEGIN  // Summierung aller Systemums„tze
                    EnterCell(RowNo,18,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_SYS:=v_sum_AE_SYS+(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor");
                  END;
                END;
              END;
              EnterCell(RowNo,20,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              tab_vkk1.RESET;    //  Anzeigen der Rahmendaten
              tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',tab_ab_arch."Blanket Order No.");
              IF tab_vkk1.FINDFIRST THEN BEGIN
                tab_vkz.RESET;
                tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk1."No.");
                //   tab_vkz.SETFILTER(tab_vkz."Line No.",'%1',tab_ab_arch."Blanket Order Line No.");
                IF tab_vkz.FINDFIRST THEN BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_vkz."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,22,FORMAT(tab_vkz."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,23,FORMAT(tab_vkk1."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,24,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,25,FORMAT(tab_vkz.Einkaufsw„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,26,FORMAT(tab_vkz.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,27,FORMAT(tab_vkz."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,28,FORMAT(tab_vkz."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END;
              EnterCell(RowNo,29,FORMAT(tab_ab_arch."Profit %"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,30,FORMAT(tab_vkk_arch."Betreuer Innendienst"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,31,FORMAT(tab_vkk_arch."Salesperson Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,32,FORMAT(tab_ab_arch."Manufacturer Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,33,FORMAT(tab_ab_arch."Unit Cost (LCY)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF tab_vkk_arch."Currency Factor"=0 THEN BEGIN
                EnterCell(RowNo,34,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,34,FORMAT(tab_ab_arch."Unit Price"*tab_ab_arch."Outstanding Quantity"/tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END;
              EnterCell(RowNo,35,FORMAT(tab_vkk_arch."Sell-to Post Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,36,FORMAT(tab_vkk_arch.Teams),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,37,FORMAT(tab_vkk_arch.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,38,FORMAT(''),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,39,FORMAT(''),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,40,FORMAT(tab_ab_arch."Promised Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,41,FORMAT(tab_ab_arch."Requested Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,42,FORMAT(tab_vkk_arch."Order Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,43,FORMAT(tab_vkk."External Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,44,FORMAT(tab_vkk."Your Reference"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            UNTIL tab_ab_arch.NEXT = 0;
          END;
          vkrk.RESET;
          vkrk.SETFILTER(vkrk."Order No.",'%1',tab_vkk_arch."No.");
          //      vkrk.SETFILTER(vkrk."Order No.",'%1',tab_vkk_arch."No.");
          IF vkrk.FINDLAST THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,4,FORMAT(vkrk."No."),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
        UNTIL tab_vkk_arch.NEXT =0;
      END;
      //  END;
      // ENDE Erweiterung: Archivierte Auftragseing„nge automatisch hinzufgen

      // Erweiterung: Gutschriften, die AE reduzieren automatisch hinzufgen
      tab_guk.RESET;

      tab_guk.SETFILTER(tab_guk."Posting Date",'%1',AE_holen_Datum_1);
      tab_guk.SETFILTER(tab_guk."AE reduzieren",'%1',TRUE);
      IF tab_guk.FIND('-') THEN BEGIN
        REPEAT
          tab_guz.RESET;
          tab_guz.SETFILTER(tab_guz."Document No.",'%1',tab_guk."No.");
          tab_guz.SETFILTER(tab_guz.Type,'%1',tab_guz.Type::Item);
          tab_guz.SETFILTER(tab_guz.Quantity,'<>%1',0);
          IF tab_guz.FIND('-') THEN BEGIN
            REPEAT
              RowNo := RowNo +1;
                EnterCell(RowNo,1,FORMAT(tab_guk."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,2,FORMAT(tab_guk."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,3,FORMAT(tab_guz."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,4,FORMAT(tab_guk."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,5,FORMAT(tab_guk."Sell-to Customer Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,6,FORMAT(tab_guz.Quantity),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,7,FORMAT(tab_guz."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,8,FORMAT(tab_guz."Location Code"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,9,FORMAT(tab_guz."DC-Preis (EKW)"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                IF tab_guz.Einkaufsw„hrungscode='' THEN BEGIN
                  EnterCell(RowNo,10,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,10,FORMAT(tab_guz.Einkaufsw„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                IF tab_guz.Einkaufsw„hrungscode='USD' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_guz.Einkaufsw„hrungscode);
                  //  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_guk."Order Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_guz.Einkaufsw„hrungsfaktor=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_guz.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[green]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_guz.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[red]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END;

                  END;
                END;
                IF tab_guz.Einkaufsw„hrungscode='GBP' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_guz.Einkaufsw„hrungscode);
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_guk."Document Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_guz.Einkaufsw„hrungsfaktor=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_guz.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_guz.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END;

                  END;
                END;
                IF tab_guz.Einkaufsw„hrungscode='JPY' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_guz.Einkaufsw„hrungscode);
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_guk."Document Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_guz.Einkaufsw„hrungsfaktor=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_guz.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[blue]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      EnterCell(RowNo,11,FORMAT(tab_guz.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'[red]##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END;

                  END;
                END;

                EnterCell(RowNo,12,FORMAT(tab_guz."Unit Price"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                IF tab_guk."Currency Code"='' THEN BEGIN
                  EnterCell(RowNo,13,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,13,FORMAT(tab_guk."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                IF tab_guk."Currency Code"='USD' THEN BEGIN
                  tab_kurse.RESET;
                  tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_guk."Currency Code");
                  tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_guk."Document Date");
                  IF tab_kurse.FINDFIRST THEN BEGIN
                    IF tab_guk."Currency Factor"=tab_kurse."Exchange Rate Amount" THEN BEGIN
                      EnterCell(RowNo,14,FORMAT(tab_guk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                    END ELSE BEGIN
                      IF tab_guz."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                        tab_guk1.RESET;
                        tab_guk1.SETFILTER(tab_guk1."No.",'%1',tab_guk."No.");
                        IF tab_guk1.FINDFIRST THEN BEGIN
                          IF tab_guk1."Currency Factor"=tab_guk."Currency Factor" THEN BEGIN
                            EnterCell(RowNo,14,FORMAT(tab_guk1."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_guk1."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,14,FORMAT(tab_guk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
              END;
              IF tab_guk."Currency Code"='GBP' THEN BEGIN
                tab_kurse.RESET;
                tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_guk."Currency Code");
                tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_guk."Document Date");
                IF tab_kurse.FINDFIRST THEN BEGIN
                  IF tab_guk."Currency Factor"=tab_kurse."Exchange Rate Amount" THEN BEGIN
                    EnterCell(RowNo,14,FORMAT(tab_guk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF tab_guz."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_guk1.RESET;
                      tab_guk1.SETFILTER(tab_guk1."No.",'%1',tab_guk."No.");
                      IF tab_guk1.FINDFIRST THEN BEGIN
                        IF tab_guk1."Currency Factor"=tab_guk."Currency Factor" THEN BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_guk1."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_guk1."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,14,FORMAT(tab_guk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
              END;
              IF tab_guk."Currency Code"='JPY' THEN BEGIN
                tab_kurse.RESET;
                tab_kurse.SETFILTER(tab_kurse."Currency Code",'%1',tab_guk."Currency Code");
                tab_kurse.SETFILTER(tab_kurse."Starting Date",'%1',tab_guk."Document Date");
                IF tab_kurse.FINDFIRST THEN BEGIN
                  IF tab_guk."Currency Factor"=tab_kurse."Exchange Rate Amount" THEN BEGIN
                    EnterCell(RowNo,14,FORMAT(tab_guk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF tab_guz."Blanket Order No."<>'' THEN BEGIN   // šberprfen ob im Rahmen derselbe Kurs benutzt wird.
                      tab_guk1.RESET;
                      tab_guk1.SETFILTER(tab_guk1."No.",'%1',tab_guk."No.");
                      IF tab_guk1.FINDFIRST THEN BEGIN
                        IF tab_guk1."Currency Factor"=tab_guk."Currency Factor" THEN BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_guk1."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#',TempExcelBuffer."Cell Type"::Number);
                        END ELSE BEGIN
                          EnterCell(RowNo,14,FORMAT(tab_guk1."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                          v_anz_RE12:=1;
                        END;
                      END;
                    END;
                    // EnterCell(RowNo,14,FORMAT(tab_guk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
                    // v_anz_RE12:=1;
                  END;
                END;
              END;
              EnterCell(RowNo,15,FORMAT(tab_guz.Quantity),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
              //        IF tab_guk."Document Type"=tab_guk."Document Type"::cr THEN BEGIN
                IF tab_guk."Currency Factor"=0 THEN BEGIN
                  EnterCell(RowNo,19,FORMAT(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_sum_AE_Gesamt:=v_sum_AE_Gesamt+(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1));
                  IF ((tab_guz."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_guz."Gen. Prod. Posting Group"='SERVICE')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1));
                  END;
                  IF ((tab_guz."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_guz."Gen. Prod. Posting Group"='STD_POOL')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1));
                  END;
                  IF ((tab_guz."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_guz."Gen. Prod. Posting Group"='SCHULUNG')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1));
                  END;
                  IF tab_guz."Gen. Prod. Posting Group"='HANDEL' THEN BEGIN  // Summierung aller Handelsums„tze
                    EnterCell(RowNo,17,FORMAT(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_HAN:=v_sum_AE_HAN+(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1));
                  END;
                  IF tab_guz."Gen. Prod. Posting Group"='SYSTEM' THEN BEGIN  // Summierung aller 'Systemums„tze
                    EnterCell(RowNo,18,FORMAT(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_SYS:=v_sum_AE_SYS+(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1));
                  END;
                END ELSE BEGIN
                  EnterCell(RowNo,19,FORMAT(tab_guz."Unit Price"*tab_guz.Quantity/tab_guk."Currency Factor"*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                  v_sum_AE_Gesamt:=v_sum_AE_Gesamt+(tab_guz."Unit Price"*tab_guz.Quantity/tab_guk."Currency Factor"*(-1));
                  IF ((tab_guz."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_guz."Gen. Prod. Posting Group"='SERVICE')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_guz."Unit Price"*tab_guz.Quantity/tab_vkk."Currency Factor"*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_guz."Unit Price"*tab_guz.Quantity/tab_vkk."Currency Factor"*(-1));
                  END;
                  IF ((tab_guz."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_guz."Gen. Prod. Posting Group"='STD_POOL')) THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_guz."Unit Price"*tab_guz.Quantity/tab_vkk."Currency Factor"*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_guz."Unit Price"*tab_guz.Quantity/tab_vkk."Currency Factor"*(-1));
                  END;
                  IF ((tab_guz."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_guz."Gen. Prod. Posting Group"='SCHULUNG'))  THEN BEGIN  // Summierung aller Dienstleistungsums„tze
                    EnterCell(RowNo,16,FORMAT(tab_guz."Unit Price"*tab_guz.Quantity/tab_guk."Currency Factor"*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_DL:=v_sum_AE_DL+(tab_guz."Unit Price"*tab_guz.Quantity/tab_guk."Currency Factor"*(-1));
                  END;
                  IF tab_guz."Gen. Prod. Posting Group"='HANDEL' THEN BEGIN  // Summierung aller Handelsums„tze
                    EnterCell(RowNo,17,FORMAT(tab_guz."Unit Price"*tab_guz.Quantity/tab_guk."Currency Factor"*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_HAN:=v_sum_AE_HAN+(tab_guz."Unit Price"*tab_guz.Quantity/tab_guk."Currency Factor"*(-1));
                  END;
                  IF tab_guz."Gen. Prod. Posting Group"='SYSTEM' THEN BEGIN  // Summierung aller Systemums„tze
                    EnterCell(RowNo,18,FORMAT(tab_guz."Unit Price"*tab_guz.Quantity/tab_guk."Currency Factor"*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                    v_sum_AE_SYS:=v_sum_AE_SYS+(tab_guz."Unit Price"*tab_guz.Quantity/tab_guk."Currency Factor"*(-1));
                  END;
                END;

              //        END;

              EnterCell(RowNo,20,FORMAT(tab_guz."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //        tab_guk1.RESET;    //  Anzeigen der Rahmendaten
              //        tab_guk1.SETFILTER(tab_guk1."No.",'%1',tab_guz."Blanket Order No.");
              //        IF tab_guk1.FINDFIRST THEN BEGIN
              //          tab_guzvkz.RESET;
              //          tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk1."No.");
              //          tab_vkz.SETFILTER(tab_vkz."Line No.",'%1',tab_ab."Blanket Order Line No.");
              //          IF tab_vkz.FINDFIRST THEN BEGIN
              //            EnterCell(RowNo,21,FORMAT(tab_vkz."Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //            EnterCell(RowNo,22,FORMAT(tab_vkz."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //            EnterCell(RowNo,23,FORMAT(tab_vkk1."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //            EnterCell(RowNo,24,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //            EnterCell(RowNo,25,FORMAT(tab_vkz.Einkaufsw„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //            EnterCell(RowNo,26,FORMAT(tab_vkz.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //            EnterCell(RowNo,27,FORMAT(tab_vkz."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //            EnterCell(RowNo,28,FORMAT(tab_vkk1.USt13b2),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text)
              //          END;
              //        END;
              //        EnterCell(RowNo,29,FORMAT(tab_guz."Profit %"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,30,FORMAT(tab_guk."Betreuer Innendienst"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,31,FORMAT(tab_guk."Salesperson Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,32,FORMAT(tab_guz."Manufacturer Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,33,FORMAT(tab_guz."Unit Cost (LCY)"*tab_guz.Quantity*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF tab_guk."Currency Factor"=0 THEN BEGIN
                EnterCell(RowNo,34,FORMAT(tab_guz."VK-Preis (MW)"*tab_guz.Quantity*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,34,FORMAT(tab_guz."Unit Price"*tab_guz.Quantity/tab_guk."Currency Factor"*(-1)),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END;
              EnterCell(RowNo,35,FORMAT(tab_guk."Sell-to Post Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,36,FORMAT(tab_guk.Teams),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,37,FORMAT(tab_vkk.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,38,FORMAT(''),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,39,FORMAT(''),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //  EnterCell(RowNo,40,FORMAT(tab_guz."Promised Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //  EnterCell(RowNo,41,FORMAT(tab_guz."Requested Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              //  EnterCell(RowNo,42,FORMAT(tab_guk."Order Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,43,FORMAT(tab_vkk."External Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,44,FORMAT(tab_vkk."Your Reference"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);








            UNTIL tab_guz.NEXT=0;
          END;
        UNTIL tab_guk.NEXT=0;
      END;
      // ENDE Erweiterung: Gutschriften, die AE reduzieren automatisch hinzufgen



      RowNo := RowNo +2;
        EnterCell(RowNo,1,FORMAT('Gesamt'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,16,FORMAT(v_sum_AE_DL),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
        EnterCell(RowNo,17,FORMAT(v_sum_AE_HAN),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
        EnterCell(RowNo,18,FORMAT(v_sum_AE_SYS),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
        EnterCell(RowNo,19,FORMAT(v_sum_AE_Gesamt),'',TRUE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
      END;
      RowNo := RowNo +2;
      tab_vkk.RESET;
      tab_vkk.SETFILTER(tab_vkk."Document Type",'%1',tab_vkk."Document Type"::Order);
      tab_vkk.SETFILTER(tab_vkk."Order Date",'%1',AE_holen_Datum_1);
      IF tab_vkk.FIND('-') THEN BEGIN
        REPEAT
          IF tab_vkk."Order Date"<>tab_vkk."Posting Date" THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Auftrags- und Buchungsdatum weichen bei '+tab_vkk."No."+' von einander ab. AU-Datum='+FORMAT(tab_vkk."Order Date")+';Buch-Datum='+FORMAT(tab_vkk."Posting Date")+'.'),'',TRUE,FALSE,FALSE,'[red]',
            TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk."Order Date"<>tab_vkk."Document Date" THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,('Auftrags- und Belegdatum weichen bei '+tab_vkk."No."+' von einander ab. AU-Datum='+FORMAT(tab_vkk."Order Date")+';Beleg-Datum='+FORMAT(tab_vkk."Document Date")+'.'),'',TRUE,FALSE,FALSE,'[red]',
            TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk."Posting Date"<>tab_vkk."Document Date" THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Buchungs- und Belegdatum weichen bei '+tab_vkk."No."+' von einander ab. Buch-Datum='+FORMAT(tab_vkk."Posting Date")+';Beleg-Datum='+FORMAT(tab_vkk."Document Date")+'.'),'',TRUE,FALSE,FALSE,'[red]',
            TempExcelBuffer."Cell Type"::Number);
          END;

          IF tab_vkk."Salesperson Code"='' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Es fehlt der Verk„ufercode: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk."Salesperson Code"='MULTI' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Es fehlt der Verk„ufercode(MULTI): '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk."Territory Code"='' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Es fehlt der Gebietscode: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk."Betreuer Innendienst"='' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Es fehlt der Betreuer Innen: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk."Betreuer Innendienst"='MULTI' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Es fehlt der Betreuer Innen(MULTI): '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk."AE reduzieren"=TRUE THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Dieser Auftrag soll den AE reduzieren: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Eventuelle Gutschriften, die damit zusammen h„ngen beachten (Keine Doppel-Reduzierung des AE!).'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
        UNTIL tab_vkk.NEXT = 0;
      END;
      RowNo := RowNo +1;
      IF v_anz_RE12=1 THEN BEGIN
        RowNo := RowNo +1;
        EnterCell(RowNo,1,FORMAT('W„hrungskursdifferenz bei obigem Auftrag (rot gekennzeichnet)'),'',TRUE,FALSE,FALSE,'##0.0000#[red]',TempExcelBuffer."Cell Type"::Number);
      END;

      RowNo := RowNo +1;
      EnterCell(RowNo,1,FORMAT('Kontrolliert:'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      //IF v_anz_RE12=1 THEN MESSAGE('Fehler gefunden! Nach Korrektur der Fehler, Liste erneut starten');

      Pfad_tag :=FORMAT(DATE2DMY(AE_holen_Datum_1,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));
      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;

      CloseExcel('tgl_AE_Eingangsliste_'+Pfaddatum,'tgl_AE_Eingangsliste_'+Pfaddatum,'F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022');
    END;

    LOCAL PROCEDURE AU_Kontrollblatt@1000000021();
    BEGIN
      //v_sum_AU_MW:=0;
      //v_sum_AU_WŽ:=0;
      //v_sum_13B2:=0;
      //CreateExcel;
      //RowNo := 1;
      //EnterCell(RowNo,1,FORMAT('Auftragseingang'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,2,FORMAT('Kontrollliste'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //RowNo := 2;
      //RowNo := 3;
      tab_vkk.RESET;
      IF var_AU_Nr='' THEN BEGIN
        tab_vkk.SETFILTER(tab_vkk."Document Type",'%1|%2',tab_vkk."Document Type"::Order,tab_vkk."Document Type"::"Blanket Order");/// Erweitern auf Rahmen
        tab_vkk.SETFILTER(tab_vkk."Location Code",'%1|%2','ZENT','KONSI');
        tab_vkk.SETFILTER(tab_vkk."Order Date",'%1',AE_holen_Datum_1);
      END ELSE BEGIN
        tab_vkk.SETFILTER(tab_vkk."Document Type",'%1|%2',tab_vkk."Document Type"::Order,tab_vkk."Document Type"::"Blanket Order");/// Erweitern auf Rahmen
        tab_vkk.SETFILTER(tab_vkk."Location Code",'%1|%2','ZENT','KONSI');
        tab_vkk.SETFILTER(tab_vkk."No.",'%1',var_AU_Nr);
      END;
      IF v_Liste_gesamt=TRUE THEN BEGIN
      END ELSE BEGIN
        IF v_liste_sys=TRUE THEN BEGIN
          tab_vkk.SETFILTER(tab_vkk."Territory Code",'%1','SYSTEM');
        END;
        IF v_liste_chip=TRUE THEN BEGIN
          tab_vkk.SETFILTER(tab_vkk."Territory Code",'<>%1','SYSTEM');
        END;
      END;
      IF tab_vkk.FIND('-') THEN BEGIN
        REPEAT
          v_USt_ID_fehlt:=FALSE;
          v_sum_AU_MW:=0;
          v_sum_AU_WŽ:=0;
          v_sum_13B2:=0;
          v_Marge10prozent:=FALSE;
          v_VAT_fehlt:=FALSE;
          v_VAT_Deb:='';
          v_Fehler_16_DL:=FALSE;
          v_Fehler_16_Produktgrp:=FALSE;
          v_nicht_rechnen:=FALSE;



          CreateExcel;
          RowNo := 1;
          EnterCell(RowNo,1,FORMAT('AU-Kontrollblatt'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // Abgleich  Rechnungs- und Lieferadressen mit der Auftragsadresse
          RADROK:='     ';
          LADROK:='     ';
          RAOK:= 0;
          LAOK:= 0;
          // šberprfung Rechnungsadresse
          // Name
          IF tab_vkk."Sell-to Customer Name" <> tab_vkk."Bill-to Name" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          // Name 2
          IF tab_vkk."Sell-to Customer Name 2" <> tab_vkk."Bill-to Name 2" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          // Adresse
          IF tab_vkk."Sell-to Address" <> tab_vkk."Bill-to Address" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          // Adresse 2
          IF tab_vkk."Sell-to Address 2" <> tab_vkk."Bill-to Address 2" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          // Ort
          IF tab_vkk."Sell-to City" <> tab_vkk."Bill-to City" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          // Plz
          IF tab_vkk."Sell-to Post Code" <> tab_vkk."Bill-to Post Code" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          IF RAOK>10 THEN
            RADROK:='Re.Adr. prfen'
          ELSE
            RADROK:='Re.Adr. wie AB';
          // šberprfung Lieferadresse
          // Name
          IF tab_vkk."Sell-to Customer Name" <> tab_vkk."Ship-to Name" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          // Name 2
          IF tab_vkk."Sell-to Customer Name 2" <> tab_vkk."Ship-to Name 2" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          // Adresse
          IF tab_vkk."Sell-to Address" <> tab_vkk."Ship-to Address" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          // Adresse 2
          IF tab_vkk."Sell-to Address 2" <> tab_vkk."Ship-to Address 2" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          // Ort
          IF tab_vkk."Sell-to City" <> tab_vkk."Ship-to City" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          // Plz
          IF tab_vkk."Sell-to Post Code" <> tab_vkk."Ship-to Post Code" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          IF LAOK>10 THEN
            LADROK:='Li.Adr. prfen'
          ELSE
            LADROK:='Li.Adr. wie AB';
          RowNo := 3;
          IF LADROK='Li.Adr. prfen' THEN EnterCell(RowNo,6,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF LADROK='Li.Adr. wie AB' THEN EnterCell(RowNo,6,FORMAT('wie AB'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          RowNo := 4;
          IF RADROK='Re.Adr. prfen' THEN EnterCell(RowNo,6,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF RADROK='Re.Adr. wie AB' THEN EnterCell(RowNo,6,FORMAT('wie AB'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          RowNo := 2;
          EnterCell(RowNo,1,'Deb.Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,tab_vkk."Sell-to Customer No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(deb.TABLENAME,1,21,tab_vkk."Sell-to Customer No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
          // EnterCell(RowNo,2,FORMAT(tab_vkk."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Bestellangaben','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."External Document No."='' THEN BEGIN
            EnterCell(RowNo,5,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END ELSE BEGIN
            EnterCell(RowNo,5,FORMAT(tab_vkk."External Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          EnterCell(RowNo,6,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,7,'AU-Adresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(tab_vkk."Sell-to Customer Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vkk."Sell-to Customer Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,FORMAT(tab_vkk."Sell-to Address"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."Sell-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Sell-to County"='' THEN BEGIN
            EnterCell(RowNo,12,FORMAT(tab_vkk."Sell-to Country/Region Code"+' '+tab_vkk."Sell-to Post Code"+' '+tab_vkk."Sell-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,12,FORMAT(tab_vkk."Sell-to County"+' '+tab_vkk."Sell-to Post Code"+' '+tab_vkk."Sell-to City"+', '+tab_vkk."Sell-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;

          // EnterCell(RowNo,9,FORMAT(tab_vkk."Sell-to Address"+' '+tab_vkk."Sell-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // EnterCell(RowNo,10,FORMAT(tab_vkk."Sell-to Country/Region Code"+' '+tab_vkk."Sell-to Post Code"+' '+tab_vkk."Sell-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(tab_vkk."Sell-to Contact"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := 3;
          EnterCell(RowNo,1,'AU-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // EnterCell(RowNo,2,FORMAT(tab_vkk."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Document Type"=tab_vkk."Document Type"::Order THEN
            EnterCell(RowNo,2,tab_vkk."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk.TABLENAME,1,42,tab_vkk."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Document Type"=tab_vkk."Document Type"::"Blanket Order" THEN
            EnterCell(RowNo,2,tab_vkk."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk.TABLENAME,1,507,tab_vkk."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Your Reference"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Lieferadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(tab_vkk."Ship-to Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vkk."Ship-to Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,FORMAT(tab_vkk."Ship-to Address"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk."Ship-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Ship-to County"='' THEN BEGIN
            EnterCell(RowNo,12,FORMAT(tab_vkk."Ship-to Country/Region Code"+' '+tab_vkk."Ship-to Post Code"+' '+tab_vkk."Ship-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            EnterCell(RowNo,12,FORMAT(tab_vkk."Ship-to County"+' '+tab_vkk."Ship-to Post Code"+' '+tab_vkk."Ship-to City"+', '+tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          // EnterCell(RowNo,9,FORMAT(tab_vkk."Ship-to Address"+' '+tab_vkk."Ship-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // EnterCell(RowNo,10,FORMAT(tab_vkk."Ship-to Country/Region Code"+' '+tab_vkk."Ship-to Post Code"+' '+tab_vkk."Ship-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(tab_vkk."Ship-to Contact"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := 4;
      {
          ///////
          IF tab_vkk."Order Date"<>tab_vkk."Posting Date" THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Auftrags- und Buchungsdatum weichen bei '+tab_vkk."No."+' von einander ab. AU-Datum='+FORMAT(tab_vkk."Order Date")+';Buch-Datum='+FORMAT(tab_vkk."Posting Date")+'.'),'',TRUE,FALSE,FALSE,'[red]',
            TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk."Order Date"<>tab_vkk."Document Date" THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,('Auftrags- und Belegdatum weichen bei '+tab_vkk."No."+' von einander ab. AU-Datum='+FORMAT(tab_vkk."Order Date")+';Beleg-Datum='+FORMAT(tab_vkk."Document Date")+'.'),'',TRUE,FALSE,FALSE,'[red]',
            TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk."Posting Date"<>tab_vkk."Document Date" THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Buchungs- und Belegdatum weichen bei '+tab_vkk."No."+' von einander ab. Buch-Datum='+FORMAT(tab_vkk."Posting Date")+';Beleg-Datum='+FORMAT(tab_vkk."Document Date")+'.'),'',TRUE,FALSE,FALSE,'[red]',
            TempExcelBuffer."Cell Type"::Number);
          END;
          //////////
      }
          EnterCell(RowNo,1,'Au-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk."Order Date"<>tab_vkk."Posting Date" THEN  EnterCell(RowNo,2,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'[red]dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
          IF tab_vkk."Order Date"= tab_vkk."Posting Date" THEN  EnterCell(RowNo,2,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'[blue]dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,4,'Lieferanten-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          deb.RESET;
          deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            IF deb."Our Account No."='' THEN BEGIN
              EnterCell(RowNo,5,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              EnterCell(RowNo,5,FORMAT(deb."Our Account No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
            // Nachgelagerte Debitorinfos ausgeben
            v_VAT_Deb:=deb."VAT Registration No.";
            RowNo := 7;
            EnterCell(RowNo,8,FORMAT(deb."Payment Terms Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb."Payment Terms Code"=tab_vkk."Payment Terms Code" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Payment Terms Code"<>tab_vkk."Payment Terms Code" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);

            RowNo := 8;
            EnterCell(RowNo,8,FORMAT(deb."Shipment Method Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb."Shipment Method Code"=tab_vkk."Shipment Method Code" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Shipment Method Code"<>tab_vkk."Shipment Method Code" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := 9;
            EnterCell(RowNo,8,FORMAT(deb."Shipping Agent Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb."Shipping Agent Code"=tab_vkk."Shipping Agent Code" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Shipping Agent Code"<>tab_vkk."Shipping Agent Code" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := 10;
            EnterCell(RowNo,7,'Deb:Sped.Account','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,8,FORMAT(deb.Spediteuraccount),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb.Spediteuraccount=tab_vkk.Spediteuraccount THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb.Spediteuraccount<>tab_vkk.Spediteuraccount THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := 14;
            EnterCell(RowNo,6,FORMAT(deb."AB via EMail"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(deb."AB EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb."AB via EMail" = TRUE THEN BEGIN
              IF tab_vkk."AB EMail-Adresse"='' THEN BEGIN
                EnterCell(RowNo,9,FORMAT('prfen ob Mail-Adresse fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                IF deb."AB EMail-Adresse"=tab_vkk."AB EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                IF deb."AB EMail-Adresse"<>tab_vkk."AB EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END ELSE BEGIN
              IF tab_vkk."AB EMail-Adresse"='' THEN BEGIN
                IF deb."AB EMail-Adresse"='' THEN BEGIN
                  EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END ELSE BEGIN
                IF deb."AB EMail-Adresse"<>'' THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
          // IF ((tab_vkk."AB EMail-Adresse"='') AND (deb."AB via EMail"=TRUE)) THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          // IF ((deb."AB EMail-Adresse"=tab_vkk."AB EMail-Adresse") AND (deb."AB via EMail"=FALSE)) THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          // IF deb."AB EMail-Adresse"<>tab_vkk."AB EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          RowNo := 15;
          EnterCell(RowNo,6,FORMAT(deb."Rech via EMail"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(deb."Rech EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // IF ((tab_vkk."Rech EMail-Adresse"='') AND (deb."Rech via EMail"=TRUE)) THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          // IF (deb."Rech EMail-Adresse"=tab_vkk."Rech EMail-Adresse") AND (deb."Rech EMail-Adresse" <> '') THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          // IF deb."Rech EMail-Adresse"<>tab_vkk."Rech EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF deb."Rech via EMail" = TRUE THEN BEGIN
            IF tab_vkk."Rech EMail-Adresse"='' THEN BEGIN
              EnterCell(RowNo,9,FORMAT('prfen ob Mail-Adresse fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              IF deb."Rech EMail-Adresse"=tab_vkk."Rech EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
              IF deb."Rech EMail-Adresse"<>tab_vkk."Rech EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
          END ELSE BEGIN
            IF tab_vkk."Rech EMail-Adresse"='' THEN BEGIN
              IF deb."Rech EMail-Adresse"='' THEN BEGIN
                EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END ELSE BEGIN
              IF deb."Rech EMail-Adresse"<>'' THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
          END;
          RowNo := 16;
          EnterCell(RowNo,6,FORMAT(deb."Service via EMail"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(deb."Service EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // IF ((tab_vkk."Service EMail-Adresse"='') AND (deb."Service via EMail"=TRUE)) THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          // IF (deb."Service EMail-Adresse"=tab_vkk."Service EMail-Adresse") AND (deb."Service EMail-Adresse" <> '') THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          // IF deb."Service EMail-Adresse"<>tab_vkk."Service EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF deb."Service via EMail" = TRUE THEN BEGIN
            IF tab_vkk."Service EMail-Adresse"='' THEN BEGIN
              EnterCell(RowNo,9,FORMAT('prfen ob Mail-Adresse fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              IF deb."Service EMail-Adresse"=tab_vkk."Service EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
              IF deb."Service EMail-Adresse"<>tab_vkk."Service EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
          END ELSE BEGIN
            IF tab_vkk."Service EMail-Adresse"='' THEN BEGIN
              IF deb."Service EMail-Adresse"='' THEN BEGIN
                EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END ELSE BEGIN
              IF deb."Service EMail-Adresse"<>'' THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
          END;
          RowNo := 17;
          EnterCell(RowNo,6,FORMAT(deb."Lizenz via EMail"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,8,FORMAT(deb."Lizenz EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // IF ((tab_vkk."Lizenz EMail-Adresse"='') AND (deb."Lizenz via EMail"=TRUE)) THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          // IF (deb."Lizenz EMail-Adresse"=tab_vkk."Lizenz EMail-Adresse") AND (deb."Lizenz EMail-Adresse" <> '') THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          // IF deb."Lizenz EMail-Adresse"<>tab_vkk."Lizenz EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF deb."Lizenz via EMail" = TRUE THEN BEGIN
            IF tab_vkk."Lizenz EMail-Adresse"='' THEN BEGIN
              EnterCell(RowNo,9,FORMAT('prfen ob Mail-Adresse fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END ELSE BEGIN
              IF deb."Lizenz EMail-Adresse"=tab_vkk."Lizenz EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
              IF deb."Lizenz EMail-Adresse"<>tab_vkk."Lizenz EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweichung prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
          END ELSE BEGIN
            IF tab_vkk."Lizenz EMail-Adresse"='' THEN BEGIN
              IF deb."Lizenz EMail-Adresse"='' THEN BEGIN
                EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END ELSE BEGIN
              IF deb."Lizenz EMail-Adresse"<>'' THEN EnterCell(RowNo,9,FORMAT('prfen ob H„kchen im Debitor fehlt'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
          END;
          // ENDE von Nachgelagerte Debitorinfos ausgeben
        END;
        RowNo := 4;
        EnterCell(RowNo,7,'Rechnungsadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,8,FORMAT(tab_vkk."Bill-to Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,9,FORMAT(tab_vkk."Bill-to Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,10,FORMAT(tab_vkk."Bill-to Address"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,11,FORMAT(tab_vkk."Bill-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        IF tab_vkk."Bill-to County"='' THEN BEGIN
          EnterCell(RowNo,12,FORMAT(tab_vkk."Bill-to Country/Region Code"+' '+tab_vkk."Bill-to Post Code"+' '+tab_vkk."Bill-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END ELSE BEGIN
          EnterCell(RowNo,12,FORMAT(tab_vkk."Bill-to County"+' '+tab_vkk."Bill-to Post Code"+' '+tab_vkk."Bill-to City"+', '+tab_vkk."Bill-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END;
        // EnterCell(RowNo,9,FORMAT(tab_vkk."Bill-to Address"+' '+tab_vkk."Bill-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        // EnterCell(RowNo,10,FORMAT(tab_vkk."Bill-to Country/Region Code"+' '+tab_vkk."Bill-to Post Code"+' '+tab_vkk."Bill-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,14,FORMAT(tab_vkk."Bill-to Contact"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := 5;
        EnterCell(RowNo,1,'Buchungsdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        IF tab_vkk."Posting Date"<>tab_vkk."Document Date" THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Posting Date"),'',FALSE,FALSE,FALSE,'[red]dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
        IF tab_vkk."Posting Date"=tab_vkk."Document Date" THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Posting Date"),'',FALSE,FALSE,FALSE,'[blue]dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
        EnterCell(RowNo,7,'Endkundenadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        // deb.RESET;
        // deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
        // IF deb.FINDFIRST THEN BEGIN
        // EnterCell(RowNo,5,FORMAT(deb."Our Account No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        // END;
        EnterCell(RowNo,8,FORMAT(tab_vkk.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,10,FORMAT(tab_vkk."Endkunde Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,12,FORMAT(tab_vkk."Endkunde Land"+' '+tab_vkk."Endkunde PLZ-Code"+' '+tab_vkk."Endkunde Ort"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,14,FORMAT(tab_vkk."Endkunde Kontakt"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := 6;
        EnterCell(RowNo,1,'Belegdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        IF tab_vkk."Order Date"<>tab_vkk."Document Date" THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Document Date"),'',FALSE,FALSE,FALSE,'[red]dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
        IF tab_vkk."Order Date"=tab_vkk."Document Date" THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Document Date"),'',FALSE,FALSE,FALSE,'[blue]dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
        RowNo := 7;
        EnterCell(RowNo,1,'W„hrung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        IF tab_vkk."Currency Code"='' THEN BEGIN
          EnterCell(RowNo,2,FORMAT('EUR'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END ELSE BEGIN
          IF tab_vkk."Currency Code"='USD' THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Currency Code"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF tab_vkk."Currency Code"='JPY' THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Currency Code"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF tab_vkk."Currency Code"='GBP' THEN EnterCell(RowNo,2,FORMAT(tab_vkk."Currency Code"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        EnterCell(RowNo,4,'Zahlungsbedingung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,5,FORMAT(tab_vkk."Payment Terms Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,7,'Deb: Zahlungsbed','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,11,'Verkaufskopf-','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := 8;
        EnterCell(RowNo,1,'Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(tab_vkk."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.00###',TempExcelBuffer."Cell Type"::Number);
        EnterCell(RowNo,4,'Lieferbedingung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,5,FORMAT(tab_vkk."Shipment Method Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,7,'Deb: Lieferbed','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,11,'Gesch„ftsbuch. Gruppe','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := 9;
        EnterCell(RowNo,1,'Verk„ufer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        IF tab_vkk."Salesperson Code"='' THEN BEGIN
          EnterCell(RowNo,2,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END ELSE BEGIN
          EnterCell(RowNo,2,FORMAT(tab_vkk."Salesperson Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END;
        EnterCell(RowNo,4,'SpediteurCode','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,5,FORMAT(tab_vkk."Shipping Agent Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,7,'Deb: Sped.Code','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,11,FORMAT(tab_vkk."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := 10;
        EnterCell(RowNo,1,'Innen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        IF tab_vkk."Betreuer Innendienst"='' THEN BEGIN
          EnterCell(RowNo,2,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END ELSE BEGIN
          EnterCell(RowNo,2,FORMAT(tab_vkk."Betreuer Innendienst"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END;
        EnterCell(RowNo,4,'Sped.Account','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        IF tab_vkk.Spediteuraccount='' THEN BEGIN
          IF tab_vkk."Shipping Agent Code"='ACCOUNT' THEN EnterCell(RowNo,5,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END ELSE BEGIN
            EnterCell(RowNo,5,FORMAT(tab_vkk.Spediteuraccount),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END;
        RowNo := 11;
        EnterCell(RowNo,1,'Gebiet','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(tab_vkk."Territory Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := 12;
        EnterCell(RowNo,1,'USt-ID-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        // v_Ust_ID_2:=STRPOS(tab_vkk."VAT Registration No.",3,12);
        // v_Ust_ID_2:=FORMAT(tab_vkk."VAT Registration No.").SEEK(3);
        // EnterCell(RowNo,4,FORMAT(v_Ust_ID_1),'',FALSE,FALSE,FALSE,'##.###.###.###',TempExcelBuffer."Cell Type"::Number);
        IF tab_vkk."VAT Registration No."='' THEN BEGIN
          EnterCell(RowNo,2,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          v_VAT_fehlt:=TRUE;
        END ELSE BEGIN
          EnterCell(RowNo,2,FORMAT(tab_vkk."VAT Registration No."),'',FALSE,FALSE,FALSE,'##.###.###.###',TempExcelBuffer."Cell Type"::Number);
        END;
        RowNo := 13;
        EnterCell(RowNo,1,'Handelsregister','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        deb.RESET;
        deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
        IF deb.FINDFIRST THEN BEGIN
          IF deb."Handelsregister Nr"='' THEN BEGIN
            EnterCell(RowNo,2,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END ELSE BEGIN
            EnterCell(RowNo,2,FORMAT(deb."Handelsregister Nr"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
        END;
        RowNo := 14;
        EnterCell(RowNo,1,'SVS Verzichtskunde','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(deb."SVS Verzichtskunde"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,4,'AU Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,5,FORMAT(tab_vkk."AB EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,7,'Deb: AU Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := 15;
        EnterCell(RowNo,1,'Deckblatt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        v_deckblatt:=FALSE;
        v_bemerkung.RESET;
        v_bemerkung.SETFILTER(v_bemerkung."No.",tab_vkk."No.");
        IF v_bemerkung.FINDFIRST THEN BEGIN
          v_deckblatt:=TRUE;
        END;
        IF v_deckblatt=FALSE THEN BEGIN
          IF deb."besondere Versandbedingungen"=TRUE THEN v_deckblatt:=TRUE;
        END;
        EnterCell(RowNo,2,FORMAT(v_deckblatt),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,4,'RE Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,5,FORMAT(tab_vkk."Rech EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,7,'Deb: RE Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := 16;
        EnterCell(RowNo,1,'Projekt-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(tab_vkk."Campaign No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,4,'Service Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,5,FORMAT(tab_vkk."Service EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,7,'Deb: Service Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := 17;
        EnterCell(RowNo,1,'Keine AB','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(tab_vkk."Keine AB an Kunden"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,4,'Lizenz Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,5,FORMAT(tab_vkk."Lizenz EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,7,'Deb: Lizenz Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := 18;
        EnterCell(RowNo,1,'Lagerortcode','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,FORMAT(tab_vkk."Location Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +4;
        EnterCell(RowNo,1,'Best„tigt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,2,'Wunschdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,3,'Pos.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,4,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,5,'Deb-Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,8,'EK W„hrung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,9,'EK Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,10,'EK DC','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,11,'VK (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,12,'VK (WŽ)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,13,'Betrag (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,14,'Betrag (WŽ)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,15,'Marge %','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,16,'Handling %','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,17,'Zoll %','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,18,'Quote Ex','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,19,'Quote Intern','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,20,'Quote Ablaufdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,21,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,22,'Produktbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,23,'MWSt Probuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,24,'AC Solutionpartner','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,25,'Rahmen-AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,26,'Rahmen-AU WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,27,'Rahmen-AU Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,28,'Rahmen-AU 13B2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,29,'Endkunde','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,30,'Lagerortcode','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,31,'SW als Leistung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        tab_ab.RESET;
        tab_ab.SETFILTER(tab_ab."Document No.",'%1',tab_vkk."No.");
        // tab_ab.SETFILTER(tab_ab.Type,'%1|%2',tab_ab.Type::Item, tab_ab.Type::"G/L Account"); //  wegen LIEF_DRUCK umgestellt auf die n„chsten zwei IF-Abfragen. Zweite If-Abfrage geht bis vor UNTIL NEXT
        IF tab_ab.FIND('-') THEN BEGIN
          REPEAT
            v_Q_Daten.Gltigkeitsdatum:=0D;
            ////////////////////////////////////////////////////////////////////////////
            IF tab_ab."No."='LIEF_DRUCK' THEN BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,4,FORMAT(tab_ab."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,5,FORMAT(tab_ab.Description),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
              ///////////////////////////////////////////////////////////////////////////////////////
            IF ((tab_ab.Type=tab_ab.Type::Item) OR (tab_ab.Type=tab_ab.Type::"G/L Account")) THEN BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(tab_ab."Promised Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(tab_ab."Requested Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(tab_ab."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF tab_ab.Type=tab_ab.Type::Item THEN BEGIN    // Wenn Artikel
                EnterCell(RowNo,4,FORMAT(tab_ab."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                IF tab_ab."Profit %"<10 THEN BEGIN
                  IF tab_ab."VK-Preis (MW)"=0 THEN BEGIN
                  END ELSE BEGIN
                    v_Marge10prozent:=TRUE;
                  END;
                END ELSE BEGIN
                END;
              END ELSE BEGIN
                IF ((tab_ab."No."='4416') OR (tab_ab."No."='4418') OR (tab_ab."No."='4122')) THEN BEGIN   // Wenn Sachkonto 4416 oder 4122 oder 4418
                  IF ((tab_ab."No."='4416') AND (tab_ab."Gen. Bus. Posting Group"='INLAND')) THEN BEGIN
                    // MWSt 16%=16_13B2
                    IF tab_ab."VAT Prod. Posting Group"='13B2' THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                    IF tab_ab."VAT Prod. Posting Group"='19' THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                    // Ende 16%=16
                  END;
                  IF ((tab_ab."No."='4416') AND (tab_ab."Gen. Bus. Posting Group"<>'INLAND')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4122') AND (tab_ab."Gen. Bus. Posting Group"='INLAND')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4122') AND (tab_ab."Gen. Bus. Posting Group"='AUSLAND')) THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4122') AND (tab_ab."Gen. Bus. Posting Group"='EU')) THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab."No."='4418') AND (tab_ab."VAT Bus. Posting Group"='INLAND')) THEN BEGIN
                    // MWSt 16%=16_13B2
                    IF ((tab_ab."No."='4418') AND (tab_ab."VAT Prod. Posting Group"='13B2')) THEN EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                    IF ((tab_ab."No."='4418') AND (tab_ab."VAT Prod. Posting Group"<>'13B2')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF ((tab_ab."No."='4418') AND (tab_ab."VAT Prod. Posting Group"<>'13B2')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                    // Ende 16%
                  END;
                END ELSE BEGIN
                  EnterCell(RowNo,4,FORMAT(tab_ab.Description+'('+tab_ab."No."+')'),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);   // Wenn weiteres Sachkonto
                END;
              END;
              EnterCell(RowNo,5,FORMAT(tab_ab."Cross-Reference No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(tab_ab.Quantity),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              IF tab_ab.Einkaufsw„hrungscode='' THEN BEGIN
                EnterCell(RowNo,8,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT(tab_ab.Einkaufsw„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                  // Abfrage ob "nicht rechnen" zutrifft
                  IF tab_ab.Einkaufsw„hrungscode='JPY' THEN BEGIN
                    IF tab_vkk."Currency Code"='USD' THEN v_nicht_rechnen:=TRUE;
                  END;
              END;
              EnterCell(RowNo,9,FORMAT(tab_ab.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.00###',TempExcelBuffer."Cell Type"::Number);
              IF tab_vkk."Currency Code"=tab_ab.Einkaufsw„hrungscode THEN BEGIN
                IF tab_vkk."Currency Factor"<>tab_ab.Einkaufsw„hrungsfaktor THEN BEGIN
                  IF tab_vkk."Currency Code"='' THEN BEGIN
                  END ELSE BEGIN
                    v_kursdif_vkk_vkz:=TRUE;
                  END;
                END;
              END;
              EnterCell(RowNo,10,FORMAT(tab_ab."DC-Preis (EKW)"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,11,FORMAT(tab_ab."VK-Preis (MW)"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(tab_ab."Unit Price"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              v_sum_AU_MW:=v_sum_AU_MW +ROUND(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity",0.01);
              IF tab_ab.Quantity * tab_ab."Outstanding Quantity" <> 0 THEN
                EnterCell(RowNo,14,FORMAT(tab_ab.Amount/tab_ab.Quantity*tab_ab."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF tab_ab.Quantity*tab_ab."Outstanding Quantity" <> 0 THEN
                v_sum_AU_WŽ:=v_sum_AU_WŽ+ROUND(tab_ab.Amount/tab_ab.Quantity*tab_ab."Outstanding Quantity",0.01);
              IF tab_ab."Profit %"<10 THEN BEGIN
                EnterCell(RowNo,15,FORMAT(tab_ab."Profit %"),'',FALSE,FALSE,FALSE,'[red]###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,15,FORMAT(tab_ab."Profit %"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              END;
              EnterCell(RowNo,16,FORMAT(tab_ab."Handlingskosten %"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,31,FORMAT(tab_ab."SW als Leistung"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              Artikel.RESET;
              Artikel.SETFILTER(Artikel."No.",'%1',tab_ab."No.");
              IF Artikel.FINDFIRST THEN BEGIN
                EnterCell(RowNo,17,FORMAT(Artikel."Zollsatz %"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
                IF ((Artikel."Tariff No."='8542 3190 000') AND (Artikel.UStG_13b_frei=FALSE)) THEN v_sum_13B2:=v_sum_13B2+(tab_ab."VK-Preis (MW)"*tab_ab."Outstanding Quantity");
              END;
              IF tab_ab."Quotenr." <>'' THEN BEGIN
                v_Q_Daten.RESET;
                v_Q_Daten.SETFILTER(v_Q_Daten."Quotenr.",'%1',tab_ab."Quotenr.");
                IF v_Q_Daten.FINDFIRST THEN BEGIN
                  EnterCell(RowNo,18,FORMAT(v_Q_Daten."Quotenr. Hersteller"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,19,FORMAT(tab_ab."Quotenr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,20,FORMAT(v_Q_Daten.Gltigkeitsdatum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END;

              IF ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND (tab_ab."Gen. Prod. Posting Group"='SYSTEM')) THEN BEGIN  // MWSt 16%=16_SYSTEM
                IF tab_ab."VAT Prod. Posting Group"='19SYS' THEN BEGIN  // MWSt 16%=16_SYS
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              IF (((tab_ab."Gen. Bus. Posting Group"='INLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab."Gen. Prod. Posting Group"='SERVICE'))) OR // MWSt 16% oder 19%
                  ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab."Gen. Prod. Posting Group"='SCHULUNG'))) OR  // MWSt 16% oder 19%
                  ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab."Gen. Prod. Posting Group"='STD_POOL')))) THEN BEGIN  // MWSt 16% oder 19%
                IF ((tab_ab."VAT Prod. Posting Group"='16_DL') OR (tab_ab."VAT Prod. Posting Group"='19DL')) THEN BEGIN  // MWSt 16% oder 19%
                  IF tab_ab."VAT Prod. Posting Group"='16_DL' THEN v_Fehler_16_DL:=TRUE;
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
      {
              IF (((tab_ab."Gen. Bus. Posting Group"='INLAND') AND (tab_ab."Gen. Prod. Posting Group"='16_SERVICE')) OR // MWSt 16%
                  ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND (tab_ab."Gen. Prod. Posting Group"='16_SCHULUN')) OR  // MWSt 16%
                  ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND (tab_ab."Gen. Prod. Posting Group"='16_STD_POO'))) THEN BEGIN  // MWSt 16%
                IF tab_ab."VAT Prod. Posting Group"='16_DL' THEN BEGIN  // MWSt 16%
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
      }

              IF ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND (tab_ab."Gen. Prod. Posting Group"='HANDEL')) THEN BEGIN  // MWSt 16%=16_HANDEL
                IF tab_ab."VAT Prod. Posting Group"='19' THEN BEGIN  // MWSt 16%=16
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab."Gen. Prod. Posting Group"='SYSTEM')) THEN BEGIN  // MWSt 16%=16_SYSTEM
                IF tab_ab."VAT Prod. Posting Group"='19SYS' THEN BEGIN  // MWSt 16%=16_SYS
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;

      {
              IF (((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab."Gen. Prod. Posting Group"='16_SERVICE')) OR   // MWSt 16%
                  ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab."Gen. Prod. Posting Group"='16_SCHULUN')) OR   // MWSt 16%
                  ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab."Gen. Prod. Posting Group"='16_STD_POO'))) THEN BEGIN  // MWSt 16%
                IF tab_ab."VAT Prod. Posting Group"='16_DL' THEN BEGIN  // MWSt 16%
      }
              IF (((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab."Gen. Prod. Posting Group"='SERVICE'))) OR // MWSt 16% oder 19%
                  ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab."Gen. Prod. Posting Group"='SCHULUNG'))) OR  // MWSt 16% oder 19%
                  ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab."Gen. Prod. Posting Group"='STD_POOL')))) THEN BEGIN  // MWSt 16% oder 19%
                IF ((tab_ab."VAT Prod. Posting Group"='16_DL') OR (tab_ab."VAT Prod. Posting Group"='19DL')) THEN BEGIN  // MWSt 16% oder 19%
                  IF tab_ab."VAT Prod. Posting Group"='16_DL' THEN v_Fehler_16_DL:=TRUE;
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab."Gen. Prod. Posting Group"='HANDEL')) THEN BEGIN  // MWSt 16%=16_HANDEL
                IF tab_ab."VAT Prod. Posting Group"='19' THEN BEGIN  // MWSt 16%=16
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_ab."Gen. Prod. Posting Group"='SYSTEM')) THEN BEGIN  // MWSt 16%=16_SYSTEM
                IF tab_ab."VAT Prod. Posting Group"='19SYS' THEN BEGIN  // MWSt 16%=16_SYS
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
      {
              IF (((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_ab."Gen. Prod. Posting Group"='16_SERVICE')) OR   // MWSt 16%
                  ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_ab."Gen. Prod. Posting Group"='16_SCHULUN')) OR  // MWSt 16%
                  ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_ab."Gen. Prod. Posting Group"='16_STD_POO'))) THEN BEGIN  // MWSt 16%
                IF tab_ab."VAT Prod. Posting Group"='16_DL' THEN BEGIN  // MWSt 16%
      }
              IF (((tab_ab."Gen. Bus. Posting Group"='EU') AND ((tab_ab."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab."Gen. Prod. Posting Group"='SERVICE'))) OR // MWSt 16% oder 19%
                  ((tab_ab."Gen. Bus. Posting Group"='EU') AND ((tab_ab."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab."Gen. Prod. Posting Group"='SCHULUNG'))) OR  // MWSt 16% oder 19%
                  ((tab_ab."Gen. Bus. Posting Group"='EU') AND ((tab_ab."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab."Gen. Prod. Posting Group"='STD_POOL')))) THEN BEGIN  // MWSt 16% oder 19%
                IF ((tab_ab."VAT Prod. Posting Group"='16_DL') OR (tab_ab."VAT Prod. Posting Group"='19DL')) THEN BEGIN  // MWSt 16% oder 19%
                  IF tab_ab."VAT Prod. Posting Group"='16_DL' THEN v_Fehler_16_DL:=TRUE;
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
              IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_ab."Gen. Prod. Posting Group"='HANDEL')) THEN BEGIN  // MWSt 16%=16_HANDEL
                IF tab_ab."VAT Prod. Posting Group"='19' THEN BEGIN  // MWSt 16%=16
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;

              IF ((tab_ab."Gen. Bus. Posting Group"='16_SCHULUN') OR (tab_ab."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab."Gen. Prod. Posting Group"='16_STD_POO')) THEN v_Fehler_16_Produktgrp:=TRUE;
              IF ((tab_ab."Gen. Bus. Posting Group"='16_HANDEL') OR (tab_ab."Gen. Prod. Posting Group"='16_SYSTEM')) THEN v_Fehler_16_Produktgrp:=TRUE;
              IF tab_ab."VAT Prod. Posting Group"='16_SYS' THEN v_Fehler_16_DL:=TRUE;
              IF tab_ab."VAT Prod. Posting Group"='16' THEN v_Fehler_16_DL:=TRUE;
              IF tab_ab."VAT Prod. Posting Group"='16_13B2' THEN v_Fehler_16_DL:=TRUE;


              IF ((tab_ab."Gen. Bus. Posting Group"<>'INLAND') AND (tab_ab."Gen. Bus. Posting Group"<>'AUSLAND') AND (tab_ab."Gen. Bus. Posting Group"<>'EU')) THEN
                EnterCell(RowNo,21,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF ((tab_ab."Gen. Bus. Posting Group"<>'INLAND') AND (tab_ab."Gen. Bus. Posting Group"<>'AUSLAND') AND (tab_ab."Gen. Bus. Posting Group"<>'EU')) THEN
                EnterCell(RowNo,22,FORMAT(tab_ab."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF ((tab_ab."Gen. Bus. Posting Group"<>'INLAND') AND (tab_ab."Gen. Bus. Posting Group"<>'AUSLAND') AND (tab_ab."Gen. Bus. Posting Group"<>'EU')) THEN
                EnterCell(RowNo,23,FORMAT(tab_ab."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,24,FORMAT(tab_ab.AC_Solutionpartner),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,25,FORMAT(tab_ab."Blanket Order No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              tab_vkk1.RESET;
              tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',tab_ab."Blanket Order No.");
              IF tab_vkk1.FINDFIRST THEN BEGIN
                IF tab_vkk1."Currency Code"='' THEN BEGIN
                  EnterCell(RowNo,26,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,26,FORMAT(tab_vkk1."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                EnterCell(RowNo,27,FORMAT(tab_vkk1."Currency Factor"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,28,FORMAT(tab_vkk1.USt13b2),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              IF tab_ab.Endkunde='' THEN BEGIN
                IF ((tab_vkk."Territory Code"='SYSTEM') AND (tab_ab.Type=tab_ab.Type::Item))  THEN EnterCell(RowNo,29,'Endkunde fehlt. Noch eintragen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,29,FORMAT(tab_ab.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              EnterCell(RowNo,30,FORMAT(tab_ab."Location Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            END;
          UNTIL tab_ab.NEXT=0;
        END;
      {
              tab_vkz.RESET;
              tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk."No.");
              tab_vkz.SETFILTER(tab_vkz."No.",'%1','LIEF_DRUCK');
              IF tab_vkz.FIND('-') THEN BEGIN
                REPEAT
                  RowNo := RowNo +1;
                  EnterCell(RowNo,4,FORMAT(tab_vkz."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,5,FORMAT(tab_vkz.Description),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                UNTIL tab_vkz.NEXT=0;
              END;
      }
        RowNo := RowNo +2;
        EnterCell(RowNo,1,'Gesamt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        EnterCell(RowNo,13,FORMAT(v_sum_AU_MW),'',TRUE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
        EnterCell(RowNo,14,FORMAT(v_sum_AU_WŽ),'',TRUE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);

      IF (tab_vkk."Docuware Gesendet" = FALSE) THEN BEGIN
        RowNo := RowNo +1;
        EnterCell(RowNo,1,'Das Deckblatt wurde nocht nicht gedruckt bzw. in DocuWare abgelegt! ','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
      END;


        // Anzeige von Bemerkungszeilen
        RowNo := RowNo +1;
        v_bemerkung.RESET;
        v_bemerkung.SETFILTER(v_bemerkung."No.",'%1',tab_vkk."No.");
        IF v_bemerkung.FIND('-') THEN BEGIN
          EnterCell(RowNo,1,'Bemerkungen: ','',TRUE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          REPEAT
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT(v_bemerkung.Date),'',TRUE,FALSE,FALSE,'dd.mm.yyyy[blue]',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,FORMAT(v_bemerkung.Comment),'',TRUE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          UNTIL v_bemerkung.NEXT=0;
          RowNo := RowNo +1;
        END;
        IF v_sum_13B2>=5000 THEN BEGIN  //  šberprfung ob USt 13B2 in Frage kommt
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Achtung!!! Auf 13B2-Auftrag prfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Es muss 13B2 in der Spalte Gesch„ftsbuchungsgruppe bei obigen Zeilen eingetragen sein','',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Es muss 13B2 in der Spalte MWSt-Produktbuchungsgruppe bei obigen Zeilen eingetragen sein','',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Summe Zollpos 8542 3190 000:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(v_sum_13B2),'',FALSE,FALSE,FALSE,'###,###,##0.00[red]',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Ist 13B2-H„kchen im AU-Kopf gesetzt?','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,FORMAT(tab_vkk.USt13b2),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Wenn nicht, H„kchen setzen (letzte Gruppe im AU)','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Lieferung im Inland?','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END ELSE BEGIN
          IF ((v_sum_13B2<5000) AND (v_sum_13B2>0)) THEN BEGIN
            EnterCell(RowNo,1,'13B2 kann in Frage kommen, obwohl der Betrag unter 5000,- ist. (Z.B. aus Rahmenauftrag) Auf 13B2-H„kchen im AU-Kopf achten! ','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Text);
            RowNo := RowNo +1;
          END;
        END;
        v_EU_Fehler:=0;   //   šberprfung ob bei der Gesch„ftsbuchungsgruppe EU auch in die EU geliefert wird
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='AT')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='BE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='BG')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='CY')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='CZ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='DK')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='EE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='ES')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='FI')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='FR')) THEN v_EU_Fehler:=1;
      //  IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='GB')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='GR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='HU')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='IE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='IT')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='LT')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='LU')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='LV')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='ME')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='MT')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='NL')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='PL')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='PT')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='RO')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='RS')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='SE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='SI')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Ship-to Country/Region Code" ='SK')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (v_EU_Fehler=0)) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Bitte šberprfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END;
        // šberprfung ob bei der Gesch„ftsbuchungsgruppe INLAND auch ins Inland geliefert wird
        IF ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND (tab_vkk."Ship-to Country/Region Code" <>'DE')) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Bitte šberprfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END;
        IF ((tab_vkk."Gen. Bus. Posting Group"='INLAND') AND (tab_vkk."Ship-to Country/Region Code" <>'DE')) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Bitte šberprfen. Kein Andruck von  *** Intra-Community supply of goods','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Gesch„ftsbuchgrp im Kopf','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END;

        v_EU_Fehler:=0;   //   šberprfung ob bei der Gesch„ftsbuchungsgruppe AUSLAND auch ins Ausland geliefert wird
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='AE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='AR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='AS')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='AU')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BA')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BM')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BN')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='BY')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CA')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CH')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CL')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CN')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CO')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='CS')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='DZ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='EG')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='FJ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='HK')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='HR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='ID')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='IL')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='IN')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='IS')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='JP')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='KE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='KP')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='KR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='LB')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='LI')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='LK')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MA')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MD')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MK')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MX')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MY')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='MZ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='NG')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='NO')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='NZ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='PE')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='PH')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='RU')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SA')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SB')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SC')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SG')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='SZ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TH')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TN')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TR')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TW')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='TZ')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='UA')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='UG')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='US')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='VN')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='VU')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='WS')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Ship-to Country/Region Code" ='ZA')) THEN v_EU_Fehler:=1;
        IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (v_EU_Fehler=0)) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Bitte šberprfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_ab."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        END;
        IF ((tab_ab."Gen. Bus. Posting Group"='EU') AND (tab_vkk."Gen. Bus. Posting Group"<>'EU')) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Gesch„ftsbuchungsgruppe in Kopf und Zeile abweichend. Berichtigen!!!','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND (tab_vkk."Gen. Bus. Posting Group"<>'INLAND')) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Gesch„ftsbuchungsgruppe in Kopf und Zeile abweichend. Berichtigen!!!','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
          IF ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk."Gen. Bus. Posting Group"<>'AUSLAND')) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Fehler! Gesch„ftsbuchungsgruppe in Kopf und Zeile abweichend. Berichtigen!!!','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;












        // šberprfung auf abgelaufene Qoutes
        IF v_Q_Daten.Gltigkeitsdatum<>0D THEN BEGIN
          IF v_Q_Daten.Gltigkeitsdatum<=WORKDATE THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Ein Qoute ist abgelaufen.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
        END;
      {
          deb.RESET;    //   šberprfung  der Liefer- und Zahlungsbedingungen mit Debitorvorgaben
          deb.SETFILTER(deb."No.",'%1',tab_vkk."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            IF deb."Payment Terms Code"<>tab_vkk."Payment Terms Code" THEN BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Zahlungsbedingung: '+deb."Payment Terms Code"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
            IF deb."Shipment Method Code"<>tab_vkk."Shipment Method Code" THEN BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Lieferbedingung: '+deb."Shipment Method Code"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
            IF deb."AB EMail-Adresse"<>'' THEN BEGIN
              IF deb."AB EMail-Adresse"<>tab_vkk."AB EMail-Adresse" THEN BEGIN
                RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; AB Emailadresse: '+deb."AB EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            IF deb."Rech EMail-Adresse"<>'' THEN BEGIN
              IF deb."Rech EMail-Adresse"<>tab_vkk."Rech EMail-Adresse" THEN BEGIN
                RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Rech Emailadresse: '+deb."Rech EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            IF deb."Service EMail-Adresse"<>'' THEN BEGIN
              IF deb."Service EMail-Adresse"<>tab_vkk."Service EMail-Adresse" THEN BEGIN
                RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Service Emailadresse: '+deb."Service EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            IF deb."Lizenz EMail-Adresse"<>'' THEN BEGIN
              IF deb."Lizenz EMail-Adresse"<>tab_vkk."Lizenz EMail-Adresse" THEN BEGIN
                RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Lizenz Emailadresse: '+deb."Lizenz EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
          END;
      }
        tab_vkk1.RESET;    //  šberprfung der Rahmenw„hrung und -kurs mit der Auftragsw„hrung und -kurs
        tab_vkk1.SETFILTER(tab_vkk1."No.",'%1',tab_ab."Blanket Order No.");
        IF tab_vkk1.FINDFIRST THEN BEGIN
          IF tab_vkk1."Currency Code"<>'' THEN BEGIN
            IF tab_vkk1."Currency Code"=tab_vkk."Currency Code" THEN BEGIN
              IF tab_vkk1."Currency Factor"=tab_vkk."Currency Factor" THEN BEGIN
              END ELSE BEGIN
                // Keine Kurs-šbereinstimmung
                RowNo := RowNo +1;
                EnterCell(RowNo,1,'Rahmenauftrag: '+tab_vkk1."No."+'; Rahmenkurs: '+FORMAT(tab_vkk1."Currency Factor")+' weicht ab.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END ELSE BEGIN
              // keine W„hrungs-šbereinstimmung
              RowNo := RowNo +1;
              EnterCell(RowNo,1,'Rahmenauftrag: '+tab_vkk1."No."+'; Rahmenw„hrung: '+tab_vkk1."Currency Code"+' weicht ab.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
          END;
        END;

        IF v_kursdif_vkk_vkz=TRUE THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,'Der Kurs im AU-Kopf weicht von den Auftragszeilen ab.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_kursdif_vkk_vkz:=FALSE;
        // Hier weitere Abfragen einbauen

        // unterschiedliche Gesch„ftsbuchungsgruppen abprfen
        tab_vkz.RESET;
        tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk."No.");
        tab_vkz.SETFILTER(tab_vkz.Type,'%1|%2',tab_vkz.Type::Item, tab_vkz.Type::"G/L Account");
        IF tab_vkz.FIND('-') THEN BEGIN
          v_prdbuchgrp:=tab_vkz."Gen. Bus. Posting Group";
          REPEAT
            IF tab_vkz."Gen. Bus. Posting Group"<>v_prdbuchgrp THEN BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,1,'Im Auftrag gibt es unterschiedliche Gesch„ftsbuchungsgruppen.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
          UNTIL tab_vkz.NEXT=0;
        END;
        tab_vkz.RESET;
        tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk."No.");
        tab_vkz.SETFILTER(tab_vkz.Type,'%1',tab_vkz.Type::" ");
        tab_vkz.SETFILTER(tab_vkz."No.",'<>%1','');
        IF tab_vkz.FIND('-') THEN BEGIN
          REPEAT
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Im Auftrag gibt es die Textkonserve '+ tab_vkz."No."+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          UNTIL tab_vkz.NEXT=0;
        END;


      {
          // Wenn LIEF_DRUCK verwendet wird
          tab_vkz.RESET;
          tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk."No.");
          tab_vkz.SETFILTER(tab_vkz."No.",'%1','LIEF_DRUCK');
          IF tab_vkz.FIND('-') THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Beschreibung:','',TRUE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            REPEAT
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(tab_vkz.Description),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            UNTIL tab_vkz.NEXT=0;
            RowNo := RowNo +1;
          END;
       }
        // Wenn Verk„ufercode/Betreuer Innen oder Gebietscode leer ist
        IF tab_vkk."Salesperson Code"='' THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Es fehlt der Verk„ufercode: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF tab_vkk."Territory Code"='' THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Es fehlt der Gebietscode: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF tab_vkk."Betreuer Innendienst"='' THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Es fehlt der Betreuer Innen: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF tab_vkk."Betreuer Innendienst"='MULTI' THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Betreuer Innen = MULTI, bitte berichtigen bei: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF tab_vkk."Salesperson Code"='MULTI' THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Verk„ufercode = MULTI, bitte berichtigen bei: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF ((tab_vkk."VAT Registration No."='') AND (v_USt_ID_fehlt=TRUE)) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Keine USt-ID-Nr hinterlegt, bitte nachtragen bei: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF tab_vkk."External Document No."='' THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Keine externe Belegnr. hinterlegt, bitte nachtragen bei: '+tab_vkk."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF tab_vkk."AE reduzieren"=TRUE THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Dieser Auftrag soll den AE reduzieren: '+tab_vkk."No."+'. Doppel-Reduzierungen w/ Gutschriften vermeiden!'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        //  diverse Email-Adressen auf Besteller durchsuchen
        v_POS := STRPOS(tab_vkk."AB EMail-Adresse",'Besteller');
        IF v_POS <> 0 THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Das Wort -Besteller- ist in der Emailadresse vorhanden, bitte berichtigen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_POS:=0;
        v_POS := STRPOS(tab_vkk."Rech EMail-Adresse",'Besteller');
        IF v_POS <> 0 THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Das Wort -Besteller- ist in der Emailadresse vorhanden, bitte berichtigen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_POS:=0;
        v_POS := STRPOS(tab_vkk."Service EMail-Adresse",'Besteller');
        IF v_POS <> 0 THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Das Wort -Besteller- ist in der Emailadresse vorhanden, bitte berichtigen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_POS:=0;
        v_POS := STRPOS(tab_vkk."Lizenz EMail-Adresse",'Besteller');
        IF v_POS <> 0 THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Das Wort -Besteller- ist in der Emailadresse vorhanden, bitte berichtigen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_POS:=0;
        v_POS := STRPOS(tab_vkz.Description,'0%');
        IF v_POS <> 0 THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Im Feld Beschreibung ist " 0% " vorhanden, bitte l”schen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        v_POS:=0;
        IF v_Marge10prozent=TRUE THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Eine Marge ist unter 10%. Bitte prfen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF ((v_VAT_Deb='') AND (v_VAT_fehlt=TRUE)) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('USt-ID-Nr fehlt im Auftrag und im Debitor.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF ((v_VAT_Deb<>'') AND (v_VAT_fehlt=TRUE)) THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('USt-ID-Nr fehlt im Auftrag. Im Debitor ist '+v_VAT_Deb+' hinterlegt.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF v_Fehler_16_DL=TRUE THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Es wurde 16% MWSt festgestellt. Fehler? Bitte prfen und „ndern'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;
        IF v_nicht_rechnen=TRUE THEN BEGIN
          IF tab_vkk."Nicht rechnen"=TRUE THEN BEGIN
          END ELSE BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('H„kchen Nicht rechnen wurde im AU nicht gesetzt. Bitte prfen und „ndern'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
        END;
        IF v_Fehler_16_Produktgrp=TRUE THEN BEGIN
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('Es wurde eine 16% Produktbuchungsgruppe im Auftrag festgestellt. Fehler? Bitte „ndern'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        END;




        // IF tab_vkk."Ship-to Country/Region Code" <>'DE' THEN BEGIN
        //  IF tab_vkz."Manufacturer Code"='59' THEN BEGIN
        //      RowNo := RowNo +1;
        //    EnterCell(RowNo,1,FORMAT('Test1 Uwe'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        //  END ELSE BEGIN
        //    RowNo := RowNo +1;
        //    EnterCell(RowNo,2,FORMAT(tab_vkz."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        //   EnterCell(RowNo,1,FORMAT('Test2 Uwe'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        //      IF ((tab_vkz."No."='SW/*') OR (tab_vkz."No."='*-SW-*') OR (tab_vkz."No."='*LIC*')) THEN BEGIN
        //        IF tab_vkz."SW als Leistung"=TRUE THEN BEGIN
        //RowNo := RowNo +1;
        //         EnterCell(RowNo,1,FORMAT('Es wurde fr EU/Ausland eine SW/License Lieferung mit H„kchen -SW als Lieferung- gesetzt, festgestellt. Fehler? Bitte prfen'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        //        END ELSE BEGIN
        //RowNo := RowNo +1;
        //         EnterCell(RowNo,1,FORMAT('Es wurde fr EU/Ausland eine SW/License Lieferung ohne H„kchen -SW als Lieferung- gesetzt, festgestellt. Fehler? Bitte prfen'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
        //        END;
        //     END;
        //    END;
        // END;

        tab_vkz.RESET;
        tab_vkz.SETFILTER(tab_vkz."Document No.",'%1',tab_vkk."No.");
        tab_vkz.SETFILTER(tab_vkz."Manufacturer Code",'%1','59');
        tab_vkz.SETFILTER(tab_vkz."No.",'%1','SW*');
        IF tab_vkz.FIND('-') THEN BEGIN
          IF tab_vkk."Ship-to Country/Region Code" <> 'DE' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('SW als Leistung k”nnte m”glich sein. Bitte berprfen! '),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
        END;
        RowNo := RowNo +2;
        EnterCell(RowNo,1,FORMAT('kontrolliert:'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
        RowNo := RowNo +2;
        EnterCell(RowNo,1,FORMAT('Status:'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

        EnterCell(RowNo,2,FORMAT('OK'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  RowNo := RowNo +1;
      //  EnterCell(RowNo,1,FORMAT('geschoben'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  RowNo := RowNo +1;
      //  EnterCell(RowNo,1,FORMAT('Artikel, Menge oder Preis ge„ndert'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //  RowNo := RowNo +1;

        Pfad_tag :=FORMAT(DATE2DMY(WORKDATE,1));
        Pfad_monat := FORMAT(DATE2DMY(WORKDATE,2));
        Pfad_jahr := FORMAT(DATE2DMY(WORKDATE,3));
        Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
        CloseExcel('AE_'+tab_vkk."No."+Pfaddatum,'AE_'+tab_vkk."No."+Pfaddatum,'F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022');
        UNTIL tab_vkk.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE AU_Archiv_Kontrollblatt@1000000023();
    BEGIN
      //v_sum_AU_MW:=0;
      //v_sum_AU_WŽ:=0;
      //v_sum_13B2:=0;
      //CreateExcel;
      //RowNo := 1;
      //EnterCell(RowNo,1,FORMAT('Auftragseingang'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //EnterCell(RowNo,2,FORMAT('Kontrollliste'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      //RowNo := 2;
      //RowNo := 3;
      tab_vkk_arch.RESET;
      //IF var_AU_Nr='' THEN BEGIN
      //  tab_vkk_arch.SETFILTER(tab_vkk_arch."Document Type",'%1|%2',tab_vkk_arch."Document Type"::Order,tab_vkk_arch."Document Type"::"Blanket Order");/// Erweitern auf Rahmen
      //  tab_vkk_arch.SETFILTER(tab_vkk_arch."Location Code",'%1|%2','ZENT','KONSI');
      //  tab_vkk_arch.SETFILTER(tab_vkk_arch."Order Date",'%1',AE_holen_Datum_1);

      //  ERROR('Keine AU-Nummer eingegeben, Liste wurde abgebrochen!');
      //END ELSE BEGIN
      tab_vkk_arch.SETFILTER(tab_vkk_arch."Document Type",'%1|%2',tab_vkk_arch."Document Type"::Order,tab_vkk_arch."Document Type"::"Blanket Order");/// Erweitern auf Rahmen
      tab_vkk_arch.SETFILTER(tab_vkk_arch."Location Code",'%1|%2','ZENT','KONSI');
      tab_vkk_arch.SETFILTER(tab_vkk_arch."No.",'%1',var_AU_Nr);
      tab_vkk_arch.SETFILTER(tab_vkk_arch."Version No.",'%1',1);
      //END;
      IF tab_vkk_arch.FIND('-') THEN BEGIN
        REPEAT
          v_USt_ID_fehlt:=FALSE;
          v_sum_AU_MW:=0;
          v_sum_AU_WŽ:=0;
          v_sum_13B2:=0;
          CreateExcel;
          RowNo := 1;
          EnterCell(RowNo,1,FORMAT('AU-Archiv-Kontrollblatt'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          // Abgleich  Rechnungs- und Lieferadressen mit der Auftragsadresse
          RADROK:='     ';
          LADROK:='     ';
          RAOK:= 0;
          LAOK:= 0;
          //šberprfung Rechnungsadresse
          //Name
          IF tab_vkk_arch."Sell-to Customer Name" <> tab_vkk_arch."Bill-to Name" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          //Name 2
          IF tab_vkk_arch."Sell-to Customer Name 2" <> tab_vkk_arch."Bill-to Name 2" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          //Adresse
          IF tab_vkk_arch."Sell-to Address" <> tab_vkk_arch."Bill-to Address" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          //Adresse 2
          IF tab_vkk_arch."Sell-to Address 2" <> tab_vkk_arch."Bill-to Address 2" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          //Ort
          IF tab_vkk_arch."Sell-to City" <> tab_vkk_arch."Bill-to City" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          //Plz
          IF tab_vkk_arch."Sell-to Post Code" <> tab_vkk_arch."Bill-to Post Code" THEN BEGIN
            RAOK:=RAOK+111
          END ELSE BEGIN
            RAOK:=RAOK+1
          END;
          IF RAOK>10 THEN
            RADROK:='Re.Adr. prfen'
          ELSE
            RADROK:='Re.Adr. wie AB';
          //šberprfung Lieferadresse
          //Name
          IF tab_vkk_arch."Sell-to Customer Name" <> tab_vkk_arch."Ship-to Name" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          //Name 2
          IF tab_vkk_arch."Sell-to Customer Name 2" <> tab_vkk_arch."Ship-to Name 2" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          //Adresse
          IF tab_vkk_arch."Sell-to Address" <> tab_vkk_arch."Ship-to Address" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          //Adresse 2
          IF tab_vkk_arch."Sell-to Address 2" <> tab_vkk_arch."Ship-to Address 2" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          //Ort
          IF tab_vkk_arch."Sell-to City" <> tab_vkk_arch."Ship-to City" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          //Plz
          IF tab_vkk_arch."Sell-to Post Code" <> tab_vkk_arch."Ship-to Post Code" THEN BEGIN
            LAOK:=LAOK+111
          END ELSE BEGIN
            LAOK:=LAOK+1
          END;
          IF LAOK>10 THEN
            LADROK:='Li.Adr. prfen'
          ELSE
            LADROK:='Li.Adr. wie AB';

          RowNo := 3;
          IF LADROK='Li.Adr. prfen' THEN EnterCell(RowNo,6,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF LADROK='Li.Adr. wie AB' THEN EnterCell(RowNo,6,FORMAT('wie AB'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
          RowNo := 4;
          IF RADROK='Re.Adr. prfen' THEN EnterCell(RowNo,6,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          IF RADROK='Re.Adr. wie AB' THEN EnterCell(RowNo,6,FORMAT('wie AB'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);

          RowNo := 2;
          EnterCell(RowNo,1,'Deb.Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // Verknpfung herausgenommen  n„chste Zeile ist nicht korrekt

      //Wrong Expression

          EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Bestellangaben','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk_arch."External Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,7,'AU-Adresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(tab_vkk_arch."Sell-to Customer Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vkk_arch."Sell-to Customer Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,FORMAT(tab_vkk_arch."Sell-to Address"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk_arch."Sell-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(tab_vkk_arch."Sell-to Country/Region Code"+' '+tab_vkk_arch."Sell-to Post Code"+' '+tab_vkk_arch."Sell-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,9,FORMAT(tab_vkk_arch."Sell-to Address"+' '+tab_vkk_arch."Sell-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,10,FORMAT(tab_vkk_arch."Sell-to Country/Region Code"+' '+tab_vkk_arch."Sell-to Post Code"+' '+tab_vkk_arch."Sell-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Sell-to Contact"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 3;
          EnterCell(RowNo,1,'AU-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk_arch."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          // Verknpfung herausgenommen n„chste Zeilen sind nicht korrekt
          //    IF tab_vkk_arch."Document Type"=tab_vkk_arch."Document Type"::Order THEN
          //      EnterCell(RowNo,2,tab_vkk_arch."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk_arch.TABLENAME,1,42,tab_vkk_arch."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);
          //    IF tab_vkk_arch."Document Type"=tab_vkk_arch."Document Type"::"Blanket Order" THEN
          //      EnterCell(RowNo,2,tab_vkk_arch."No.",TOPAS_API.replace_text(TOPAS_API.CreateExcelHyperlinkToNav(tab_vkk_arch.TABLENAME,1,507,tab_vkk_arch."No."),';',','),FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Text);

          EnterCell(RowNo,5,FORMAT(tab_vkk_arch."Your Reference"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Lieferadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(tab_vkk_arch."Ship-to Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vkk_arch."Ship-to Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,FORMAT(tab_vkk_arch."Ship-to Address"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk_arch."Ship-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(tab_vkk_arch."Ship-to Country/Region Code"+' '+tab_vkk_arch."Ship-to Post Code"+' '+tab_vkk_arch."Ship-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,9,FORMAT(tab_vkk_arch."Ship-to Address"+' '+tab_vkk_arch."Ship-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,10,FORMAT(tab_vkk_arch."Ship-to Country/Region Code"+' '+tab_vkk_arch."Ship-to Post Code"+' '+tab_vkk_arch."Ship-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Ship-to Contact"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 4;

          EnterCell(RowNo,1,'Au-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          IF tab_vkk_arch."Order Date"<>tab_vkk_arch."Posting Date" THEN  EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Order Date"),'',FALSE,FALSE,FALSE,'[red]dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);
          IF tab_vkk_arch."Order Date"= tab_vkk_arch."Posting Date" THEN  EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Order Date"),'',FALSE,FALSE,FALSE,'[blue]dd.mm.yyy',TempExcelBuffer."Cell Type"::Date);

          EnterCell(RowNo,4,'Lieferanten-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          deb.RESET;
          deb.SETFILTER(deb."No.",'%1',tab_vkk_arch."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            EnterCell(RowNo,5,FORMAT(deb."Our Account No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //  Nachgelagerte Debitorinfos ausgeben
            RowNo := 7;
            EnterCell(RowNo,8,FORMAT(deb."Payment Terms Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb."Payment Terms Code"=tab_vkk_arch."Payment Terms Code" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Payment Terms Code"<>tab_vkk_arch."Payment Terms Code" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);

            RowNo := 8;
            EnterCell(RowNo,8,FORMAT(deb."Shipment Method Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb."Shipment Method Code"=tab_vkk_arch."Shipment Method Code" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Shipment Method Code"<>tab_vkk_arch."Shipment Method Code" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);

            RowNo := 9;
            EnterCell(RowNo,8,FORMAT(deb."Shipping Agent Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb."Shipping Agent Code"=tab_vkk_arch."Shipping Agent Code" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Shipping Agent Code"<>tab_vkk_arch."Shipping Agent Code" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);

            RowNo := 10;
            EnterCell(RowNo,7,'Deb:Sped.Account','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,8,FORMAT(deb.Spediteuraccount),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb.Spediteuraccount=tab_vkk_arch.Spediteuraccount THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb.Spediteuraccount<>tab_vkk_arch.Spediteuraccount THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);

            RowNo := 14;
            EnterCell(RowNo,6,FORMAT(deb."AB via EMail"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(deb."AB EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF deb."AB via EMail" = TRUE THEN BEGIN
              IF tab_vkk_arch."AB EMail-Adresse"='' THEN BEGIN
                EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                IF deb."AB EMail-Adresse"=tab_vkk_arch."AB EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                IF deb."AB EMail-Adresse"<>tab_vkk_arch."AB EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END ELSE BEGIN
              IF tab_vkk_arch."AB EMail-Adresse"='' THEN BEGIN
                IF deb."AB EMail-Adresse"='' THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                IF deb."AB EMail-Adresse"<>'' THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            //   IF ((tab_vkk_arch."AB EMail-Adresse"='') AND (deb."AB via EMail"=TRUE)) THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            //    IF ((deb."AB EMail-Adresse"=tab_vkk_arch."AB EMail-Adresse") AND (deb."AB via EMail"=FALSE)) THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            //    IF deb."AB EMail-Adresse"<>tab_vkk_arch."AB EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);

            RowNo := 15;
            EnterCell(RowNo,6,FORMAT(deb."Rech via EMail"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(deb."Rech EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF ((tab_vkk_arch."Rech EMail-Adresse"='') AND (deb."Rech via EMail"=TRUE)) THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF (deb."Rech EMail-Adresse"=tab_vkk_arch."Rech EMail-Adresse") AND (deb."Rech EMail-Adresse" <> '') THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Rech EMail-Adresse"<>tab_vkk_arch."Rech EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);

            RowNo := 16;
            EnterCell(RowNo,6,FORMAT(deb."Service via EMail"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(deb."Service EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF ((tab_vkk_arch."Service EMail-Adresse"='') AND (deb."Service via EMail"=TRUE)) THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF (deb."Service EMail-Adresse"=tab_vkk_arch."Service EMail-Adresse") AND (deb."Service EMail-Adresse" <> '') THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Service EMail-Adresse"<>tab_vkk_arch."Service EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);

            RowNo := 17;
            EnterCell(RowNo,6,FORMAT(deb."Lizenz via EMail"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,FORMAT(deb."Lizenz EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            IF ((tab_vkk_arch."Lizenz EMail-Adresse"='') AND (deb."Lizenz via EMail"=TRUE)) THEN EnterCell(RowNo,9,FORMAT('prfen'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            IF (deb."Lizenz EMail-Adresse"=tab_vkk_arch."Lizenz EMail-Adresse") AND (deb."Lizenz EMail-Adresse" <> '') THEN EnterCell(RowNo,9,FORMAT('OK'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            IF deb."Lizenz EMail-Adresse"<>tab_vkk_arch."Lizenz EMail-Adresse" THEN EnterCell(RowNo,9,FORMAT('Abweich'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);

            // ENDE von Nachgelagerte Debitorinfos ausgeben

          END;
          RowNo := 4;
          EnterCell(RowNo,7,'Rechnungsadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,FORMAT(tab_vkk_arch."Bill-to Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,FORMAT(tab_vkk_arch."Bill-to Name 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,FORMAT(tab_vkk_arch."Bill-to Address"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,FORMAT(tab_vkk_arch."Bill-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(tab_vkk_arch."Bill-to Country/Region Code"+' '+tab_vkk_arch."Bill-to Post Code"+' '+tab_vkk_arch."Bill-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,9,FORMAT(tab_vkk_arch."Bill-to Address"+' '+tab_vkk_arch."Bill-to Address 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,10,FORMAT(tab_vkk_arch."Bill-to Country/Region Code"+' '+tab_vkk_arch."Bill-to Post Code"+' '+tab_vkk_arch."Bill-to City"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Bill-to Contact"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 5;
          EnterCell(RowNo,1,'Buchungsdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk_arch."Posting Date"<>tab_vkk_arch."Document Date" THEN EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Posting Date"),'',FALSE,FALSE,FALSE,'[red]dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          IF tab_vkk_arch."Posting Date"=tab_vkk_arch."Document Date" THEN EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Posting Date"),'',FALSE,FALSE,FALSE,'[blue]dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          EnterCell(RowNo,7,'Endkundenadresse','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          //    deb.RESET;
          //    deb.SETFILTER(deb."No.",'%1',tab_vkk_arch."Sell-to Customer No.");
          //    IF deb.FINDFIRST THEN BEGIN
          //      EnterCell(RowNo,5,FORMAT(deb."Our Account No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    END;

          EnterCell(RowNo,8,FORMAT(tab_vkk_arch.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,FORMAT(tab_vkk_arch."Endkunde Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,FORMAT(tab_vkk_arch."Endkunde Land"+' '+tab_vkk_arch."Endkunde PLZ-Code"+' '+tab_vkk_arch."Endkunde Ort"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,FORMAT(tab_vkk_arch."Endkunde Kontakt"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := 6;
          EnterCell(RowNo,1,'Belegdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk_arch."Order Date"<>tab_vkk_arch."Document Date" THEN EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Document Date"),'',FALSE,FALSE,FALSE,'[red]dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
          IF tab_vkk_arch."Order Date"=tab_vkk_arch."Document Date" THEN EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Document Date"),'',FALSE,FALSE,FALSE,'[blue]dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);

          RowNo := 7;
          EnterCell(RowNo,1,'W„hrung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk_arch."Currency Code"='' THEN BEGIN
            EnterCell(RowNo,2,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END ELSE BEGIN
            IF tab_vkk_arch."Currency Code"='USD' THEN EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            IF tab_vkk_arch."Currency Code"='JPY' THEN EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
            IF tab_vkk_arch."Currency Code"='GBP' THEN EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
          END;
          EnterCell(RowNo,4,'Zahlungsbedingung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk_arch."Payment Terms Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: Zahlungsbed','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 8;
          EnterCell(RowNo,1,'Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'##0.00###',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,4,'Lieferbedingung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk_arch."Shipment Method Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: Lieferbed','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 9;
          EnterCell(RowNo,1,'Verk„ufer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Salesperson Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'SpediteurCode','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk_arch."Shipping Agent Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: Sped.Code','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := 10;
          EnterCell(RowNo,1,'Innen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Betreuer Innendienst"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Sped.Account','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          IF tab_vkk.Spediteuraccount='' THEN BEGIN
            IF tab_vkk."Shipping Agent Code"='ACCOUNT' THEN EnterCell(RowNo,5,'fehlt','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END ELSE BEGIN
             EnterCell(RowNo,5,FORMAT(tab_vkk.Spediteuraccount),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;

          //    EnterCell(RowNo,5,FORMAT(tab_vkk_arch.Spediteuraccount),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 11;
          EnterCell(RowNo,1,'Gebiet','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Territory Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 12;
          EnterCell(RowNo,1,'USt-ID-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    v_Ust_ID_2:=STRPOS(tab_vkk_arch."VAT Registration No.",3,12);
          //   v_Ust_ID_2:=FORMAT(tab_vkk_arch."VAT Registration No.").SEEK(3);
          //    EnterCell(RowNo,4,FORMAT(v_Ust_ID_1),'',FALSE,FALSE,FALSE,'##.###.###.###',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,2,FORMAT(tab_vkk_arch."VAT Registration No."),'',FALSE,FALSE,FALSE,'##.###.###.###',TempExcelBuffer."Cell Type"::Number);

          RowNo := 13;
          EnterCell(RowNo,1,'Handelsregister','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          deb.RESET;
          deb.SETFILTER(deb."No.",'%1',tab_vkk_arch."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN
            EnterCell(RowNo,2,FORMAT(deb."Handelsregister Nr"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;

          RowNo := 14;
          EnterCell(RowNo,1,'SVS Verzichtskunde','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(deb."SVS Verzichtskunde"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'AU Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk_arch."AB EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          EnterCell(RowNo,7,'Deb: AU Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 15;
          EnterCell(RowNo,1,'Deckblatt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          v_deckblatt:=FALSE;
          v_bemerkung.RESET;
          v_bemerkung.SETFILTER(v_bemerkung."No.",tab_vkk_arch."No.");
          IF v_bemerkung.FINDFIRST THEN BEGIN
            v_deckblatt:=TRUE;
          END;
          IF v_deckblatt=FALSE THEN BEGIN
            IF deb."besondere Versandbedingungen"=TRUE THEN v_deckblatt:=TRUE;
          END;
          EnterCell(RowNo,2,FORMAT(v_deckblatt),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'RE Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk_arch."Rech EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: RE Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 16;
          EnterCell(RowNo,1,'Projekt-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Campaign No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Service Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk_arch."Service EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: Service Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 17;
          EnterCell(RowNo,1,'Keine AB','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          //    EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Keine AB an Kunden"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Lizenz Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,FORMAT(tab_vkk_arch."Lizenz EMail-Adresse"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Deb: Lizenz Email','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := 18;
          EnterCell(RowNo,1,'Lagerortcode','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Location Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          RowNo := RowNo +4;
          EnterCell(RowNo,1,'Best„tigt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,2,'Wunschdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,3,'Pos.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,4,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,5,'Deb-Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,8,'EK W„hrung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,9,'EK Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,10,'EK DC','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,11,'VK (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,12,'VK (WŽ)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,'Betrag (MW)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,14,'Betrag (WŽ)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,15,'Marge %','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,16,'Handling %','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,17,'Zoll %','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,18,'Quote Ex','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,19,'Quote Intern','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,20,'Quote Ablaufdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,21,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,22,'Produktbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,23,'MWSt Probuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,24,'AC Solutionpartner','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,25,'Rahmen-AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,26,'Rahmen-AU WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,27,'Rahmen-AU Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,28,'Rahmen-AU 13B2','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,29,'Endkunde','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,30,'Lagerortcode','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

          tab_ab_arch.RESET;
          tab_ab_arch.SETFILTER(tab_ab_arch."Document No.",'%1',tab_vkk_arch."No.");
          tab_ab_arch.SETFILTER(tab_ab_arch.Type,'%1|%2',tab_ab_arch.Type::Item, tab_ab_arch.Type::"G/L Account");
          IF tab_ab_arch.FIND('-') THEN BEGIN
            REPEAT
              v_Q_Daten.Gltigkeitsdatum:=0D;
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(tab_ab_arch."Promised Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,2,FORMAT(tab_ab_arch."Requested Delivery Date"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,3,FORMAT(tab_ab_arch."Line No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF tab_ab_arch.Type=tab_ab_arch.Type::Item THEN BEGIN    // Wenn Artikel
                EnterCell(RowNo,4,FORMAT(tab_ab_arch."Artikelnr. 2"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END ELSE BEGIN
                // MWSt 16%=16_13B2
                IF ((tab_ab_arch."No."='4416') OR (tab_ab_arch."No."='4418') OR (tab_ab_arch."No."='4122')) THEN BEGIN   // Wenn Sachkonto 4416 oder 4122 oder 4418
                  IF ((tab_ab_arch."No."='4416') AND (tab_ab_arch."Gen. Bus. Posting Group"='INLAND')) THEN BEGIN
                    IF tab_ab_arch."VAT Prod. Posting Group"='13B2' THEN EnterCell(RowNo,4,FORMAT(tab_ab_arch.Description+'('+tab_ab_arch."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);  // MWSt 16%
                    IF tab_ab_arch."VAT Prod. Posting Group"='19' THEN EnterCell(RowNo,4,FORMAT(tab_ab_arch.Description+'('+tab_ab_arch."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);  // MWSt 16%
                  END;
                  IF ((tab_ab_arch."No."='4416') AND (tab_ab_arch."Gen. Bus. Posting Group"<>'INLAND')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab_arch.Description+'('+tab_ab_arch."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab_arch."No."='4122') AND (tab_ab_arch."Gen. Bus. Posting Group"='INLAND')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab_arch.Description+'('+tab_ab_arch."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab_arch."No."='4122') AND (tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND')) THEN EnterCell(RowNo,4,FORMAT(tab_ab_arch.Description+'('+tab_ab_arch."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab_arch."No."='4122') AND (tab_ab_arch."Gen. Bus. Posting Group"='EU')) THEN EnterCell(RowNo,4,FORMAT(tab_ab_arch.Description+'('+tab_ab_arch."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  IF ((tab_ab_arch."No."='4418') AND (tab_ab_arch."VAT Bus. Posting Group"='INLAND')) THEN BEGIN
                    // MWSt 16%=16_13B2
                    IF ((tab_ab_arch."No."='4418') AND (tab_ab_arch."VAT Prod. Posting Group"='13B2')) THEN EnterCell(RowNo,4,FORMAT(tab_ab_arch.Description+'('+tab_ab_arch."No."+')'),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                    IF ((tab_ab_arch."No."='4418') AND (tab_ab_arch."VAT Prod. Posting Group"<>'13B2')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab_arch.Description+'('+tab_ab_arch."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  END ELSE BEGIN
                    IF ((tab_ab_arch."No."='4418') AND (tab_ab_arch."VAT Prod. Posting Group"<>'13B2')) THEN  EnterCell(RowNo,4,FORMAT(tab_ab_arch.Description+'('+tab_ab_arch."No."+')'),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                    // MWSt 16%
                  END;
                END ELSE BEGIN
                  EnterCell(RowNo,4,FORMAT(tab_ab_arch.Description+'('+tab_ab_arch."No."+')'),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);   // Wenn weiteres Sachkonto
                END;
              END;


              EnterCell(RowNo,5,FORMAT(tab_ab_arch."Cross-Reference No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(tab_ab_arch.Quantity),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,7,FORMAT(tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              IF tab_ab_arch.Einkaufsw„hrungscode='' THEN BEGIN
                EnterCell(RowNo,8,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,8,FORMAT(tab_ab_arch.Einkaufsw„hrungscode),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              END;
              EnterCell(RowNo,9,FORMAT(tab_ab_arch.Einkaufsw„hrungsfaktor),'',FALSE,FALSE,FALSE,'##0.00###',TempExcelBuffer."Cell Type"::Number);

              IF tab_vkk_arch."Currency Code"=tab_ab_arch.Einkaufsw„hrungscode THEN BEGIN
                IF tab_vkk_arch."Currency Factor"<>tab_ab_arch.Einkaufsw„hrungsfaktor THEN v_kursdif_vkk_vkz:=TRUE;
              END;

              EnterCell(RowNo,10,FORMAT(tab_ab_arch."DC-Preis (EKW)"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,11,FORMAT(tab_ab_arch."VK-Preis (MW)"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,12,FORMAT(tab_ab_arch."Unit Price"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,13,FORMAT(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              v_sum_AU_MW:=v_sum_AU_MW +ROUND(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity",0.01);
              IF tab_ab_arch.Quantity * tab_ab_arch."Outstanding Quantity" <> 0 THEN
                EnterCell(RowNo,14,FORMAT(tab_ab_arch.Amount/tab_ab_arch.Quantity*tab_ab_arch."Outstanding Quantity"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              IF tab_ab_arch.Quantity*tab_ab_arch."Outstanding Quantity" <> 0 THEN
                v_sum_AU_WŽ:=v_sum_AU_WŽ+ROUND(tab_ab_arch.Amount/tab_ab_arch.Quantity*tab_ab_arch."Outstanding Quantity",0.01);
              EnterCell(RowNo,15,FORMAT(tab_ab_arch."Profit %"),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,16,FORMAT(tab_ab_arch."Handlingskosten %"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);

              Artikel.RESET;
              Artikel.SETFILTER(Artikel."No.",'%1',tab_ab_arch."No.");
              IF Artikel.FINDFIRST THEN BEGIN
                EnterCell(RowNo,17,FORMAT(Artikel."Zollsatz %"),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
                IF Artikel."Tariff No."='8542 3190 000' THEN v_sum_13B2:=v_sum_13B2+(tab_ab_arch."VK-Preis (MW)"*tab_ab_arch."Outstanding Quantity");
              END;
              IF tab_ab_arch."Quotenr." <>'' THEN BEGIN
                v_Q_Daten.RESET;
                v_Q_Daten.SETFILTER(v_Q_Daten."Quotenr.",'%1',tab_ab_arch."Quotenr.");
                IF v_Q_Daten.FINDFIRST THEN BEGIN
                  EnterCell(RowNo,18,FORMAT(v_Q_Daten."Quotenr. Hersteller"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,19,FORMAT(tab_ab_arch."Quotenr."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                  EnterCell(RowNo,20,FORMAT(v_Q_Daten.Gltigkeitsdatum),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
              END;

              IF ((tab_ab_arch."Gen. Bus. Posting Group"='INLAND') AND (tab_ab_arch."Gen. Prod. Posting Group"='SYSTEM')) THEN BEGIN  // MWSt 16%=16_SYS
                IF tab_ab_arch."VAT Prod. Posting Group"='19SYS' THEN BEGIN  // MWSt 16%=16_SYS
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
      {
              IF (((tab_ab_arch."Gen. Bus. Posting Group"='INLAND') AND (tab_ab_arch."Gen. Prod. Posting Group"='16_SERVICE')) OR   // MWSt 16%
                  ((tab_ab_arch."Gen. Bus. Posting Group"='INLAND') AND (tab_ab_arch."Gen. Prod. Posting Group"='16_SCHULUN')) OR  // MWSt 16%
                  ((tab_ab_arch."Gen. Bus. Posting Group"='INLAND') AND (tab_ab_arch."Gen. Prod. Posting Group"='16_STD_POO'))) THEN BEGIN  // MWSt 16%
                IF tab_ab_arch."VAT Prod. Posting Group"='16_DL' THEN BEGIN  // MWSt 16%

      }

              IF (((tab_ab."Gen. Bus. Posting Group"='INLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab."Gen. Prod. Posting Group"='SERVICE'))) OR // MWSt 16% oder 19%
                  ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab."Gen. Prod. Posting Group"='SCHULUNG'))) OR  // MWSt 16% oder 19%
                  ((tab_ab."Gen. Bus. Posting Group"='INLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab."Gen. Prod. Posting Group"='STD_POOL')))) THEN BEGIN  // MWSt 16% oder 19%
                IF ((tab_ab."VAT Prod. Posting Group"='16_DL') OR (tab_ab."VAT Prod. Posting Group"='19DL')) THEN BEGIN  // MWSt 16% oder 19%
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;

              IF ((tab_ab_arch."Gen. Bus. Posting Group"='INLAND') AND (tab_ab_arch."Gen. Prod. Posting Group"='HANDEL')) THEN BEGIN  // MWSt 16%=16_HANDEL
                IF tab_ab_arch."VAT Prod. Posting Group"='19' THEN BEGIN   // MWSt 16%=16
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;

              IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab_arch."Gen. Prod. Posting Group"='SYSTEM')) THEN BEGIN  // MWSt 16%=16_SYSTEM
                IF tab_ab_arch."VAT Prod. Posting Group"='19SYS' THEN BEGIN  // MWSt 16%=16_SYS
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
      {
              IF (((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab_arch."Gen. Prod. Posting Group"='16_SERVICE')) OR   // MWSt 16%
                  ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab_arch."Gen. Prod. Posting Group"='16_SCHULUN')) OR  // MWSt 16%
                  ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab_arch."Gen. Prod. Posting Group"='16_STD_POO'))) THEN BEGIN  // MWSt 16%
                IF tab_ab_arch."VAT Prod. Posting Group"='16_DL' THEN BEGIN  // MWSt 16%
      }
              IF (((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab."Gen. Prod. Posting Group"='SERVICE'))) OR // MWSt 16% oder 19%
                  ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab."Gen. Prod. Posting Group"='SCHULUNG'))) OR  // MWSt 16% oder 19%
                  ((tab_ab."Gen. Bus. Posting Group"='AUSLAND') AND ((tab_ab."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab."Gen. Prod. Posting Group"='STD_POOL')))) THEN BEGIN  // MWSt 16% oder 19%
                IF ((tab_ab."VAT Prod. Posting Group"='16_DL') OR (tab_ab."VAT Prod. Posting Group"='19DL')) THEN BEGIN  // MWSt 16% oder 19%
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;

              IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_ab_arch."Gen. Prod. Posting Group"='HANDEL')) THEN BEGIN  // MWSt 16%=16_HANDEL
                IF tab_ab_arch."VAT Prod. Posting Group"='19' THEN BEGIN  // MWSt 16%=16
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;

              IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_ab_arch."Gen. Prod. Posting Group"='SYSTEM')) THEN BEGIN  // MWSt 16%=16_SYSTEM
                IF tab_ab_arch."VAT Prod. Posting Group"='19SYS' THEN BEGIN  // MWSt 16%=16_SYS
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;
      {
              IF (((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_ab_arch."Gen. Prod. Posting Group"='16_SERVICE')) OR   // MWSt 16%
                  ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_ab_arch."Gen. Prod. Posting Group"='16_SCHULUN')) OR  // MWSt 16%
                  ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_ab_arch."Gen. Prod. Posting Group"='16_STD_POO'))) THEN BEGIN  // MWSt 16%
                IF tab_ab_arch."VAT Prod. Posting Group"='16_DL' THEN BEGIN  // MWSt 16%
      }
              IF (((tab_ab."Gen. Bus. Posting Group"='EU') AND ((tab_ab."Gen. Prod. Posting Group"='16_SERVICE') OR (tab_ab."Gen. Prod. Posting Group"='SERVICE'))) OR // MWSt 16% oder 19%
                  ((tab_ab."Gen. Bus. Posting Group"='EU') AND ((tab_ab."Gen. Prod. Posting Group"='16_SCHULUN') OR (tab_ab."Gen. Prod. Posting Group"='SCHULUNG'))) OR  // MWSt 16% oder 19%
                  ((tab_ab."Gen. Bus. Posting Group"='EU') AND ((tab_ab."Gen. Prod. Posting Group"='16_STD_POO') OR (tab_ab."Gen. Prod. Posting Group"='STD_POOL')))) THEN BEGIN  // MWSt 16% oder 19%
                IF ((tab_ab."VAT Prod. Posting Group"='16_DL') OR (tab_ab."VAT Prod. Posting Group"='19DL')) THEN BEGIN  // MWSt 16% oder 19%
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;

              IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_ab_arch."Gen. Prod. Posting Group"='HANDEL')) THEN BEGIN  // MWSt 16%=16_HANDEL
                IF tab_ab_arch."VAT Prod. Posting Group"='19' THEN BEGIN  // MWSt 16% =16
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
                END ELSE BEGIN
                  EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                  EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END;

              IF ((tab_ab_arch."Gen. Bus. Posting Group"<>'INLAND') AND (tab_ab_arch."Gen. Bus. Posting Group"<>'AUSLAND') AND (tab_ab_arch."Gen. Bus. Posting Group"<>'EU')) THEN
                EnterCell(RowNo,21,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF ((tab_ab_arch."Gen. Bus. Posting Group"<>'INLAND') AND (tab_ab_arch."Gen. Bus. Posting Group"<>'AUSLAND') AND (tab_ab_arch."Gen. Bus. Posting Group"<>'EU')) THEN
                EnterCell(RowNo,22,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF ((tab_ab_arch."Gen. Bus. Posting Group"<>'INLAND') AND (tab_ab_arch."Gen. Bus. Posting Group"<>'AUSLAND') AND (tab_ab_arch."Gen. Bus. Posting Group"<>'EU')) THEN
                EnterCell(RowNo,23,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              EnterCell(RowNo,24,FORMAT(tab_ab_arch.AC_Solutionpartner),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,25,FORMAT(tab_ab_arch."Blanket Order No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

              tab_vkk1_arch.RESET;
              tab_vkk1_arch.SETFILTER(tab_vkk1_arch."No.",'%1',tab_ab_arch."Blanket Order No.");
              IF tab_vkk1_arch.FINDFIRST THEN BEGIN
                IF tab_vkk1_arch."Currency Code"='' THEN BEGIN
                  EnterCell(RowNo,26,'EUR','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END ELSE BEGIN
                  EnterCell(RowNo,26,FORMAT(tab_vkk1_arch."Currency Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                END;
                EnterCell(RowNo,27,FORMAT(tab_vkk1_arch."Currency Factor"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                //    EnterCell(RowNo,28,FORMAT(tab_vkk1_arch.USt13b2),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;

              IF tab_ab.Endkunde='' THEN BEGIN
                IF ((tab_vkk."Territory Code"='SYSTEM') AND (tab_ab.Type=tab_ab.Type::Item))  THEN EnterCell(RowNo,29,'Endkunde fehlt. Noch eintragen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END ELSE BEGIN
                EnterCell(RowNo,29,FORMAT(tab_ab.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
              //    EnterCell(RowNo,29,FORMAT(tab_ab_arch.Endkunde),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,30,FORMAT(tab_ab_arch."Location Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            UNTIL tab_ab_arch.NEXT=0;
          END;
          RowNo := RowNo +2;
          EnterCell(RowNo,1,'Gesamt','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          EnterCell(RowNo,13,FORMAT(v_sum_AU_MW),'',TRUE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          EnterCell(RowNo,14,FORMAT(v_sum_AU_WŽ),'',TRUE,FALSE,FALSE,'###,###,##0.00',TempExcelBuffer."Cell Type"::Number);
          //    Anzeige von Bemerkungszeilen
          RowNo := RowNo +2;
          v_bemerkung.RESET;
          v_bemerkung.SETFILTER(v_bemerkung."No.",'%1',tab_vkk_arch."No.");
          IF v_bemerkung.FIND('-') THEN BEGIN
            EnterCell(RowNo,1,'Bemerkungen: ','',TRUE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            REPEAT
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(v_bemerkung.Date),'',TRUE,FALSE,FALSE,'dd.mm.yyyy[blue]',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,2,FORMAT(v_bemerkung.Comment),'',TRUE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            UNTIL v_bemerkung.NEXT=0;
            RowNo := RowNo +1;
          END;

          //  šberprfung ob USt 13B2 in Frage kommt
          IF v_sum_13B2>=5000 THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Summe Zollpos 8542 3190 000','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,FORMAT(v_sum_13B2),'',FALSE,FALSE,FALSE,'###,###,##0.00[red]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'H„kchen im AU-Kopf gesetzt?','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            //      EnterCell(RowNo,2,FORMAT(tab_vkk_arch.USt13b2),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,'Produktbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_ab_arch."Gen. Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Lieferung im Inland?','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,(tab_vkk_arch."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,'MWSt Probuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_ab_arch."VAT Prod. Posting Group"),'',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;

          v_EU_Fehler:=0;   //   šberprfung ob bei der Gesch„ftsbuchungsgruppe EU auch in die EU geliefert wird
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='AT')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='BE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='BG')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='CY')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='CZ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='DK')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='EE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='ES')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='FI')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='FR')) THEN v_EU_Fehler:=1;
      //    IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='GB')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='GR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='HU')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='IE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='IT')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='LT')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='LU')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='LV')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='ME')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='MT')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='NL')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='PL')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='PT')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='RO')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='RS')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='SE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='SI')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (tab_vkk_arch."Ship-to Country/Region Code" ='SK')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='EU') AND (v_EU_Fehler=0)) THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Fehler! Bitte šberprfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_vkk_arch."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          //   šberprfung ob bei der Gesch„ftsbuchungsgruppe INLAND auch ins Inland geliefert wird
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='INLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" <>'DE')) THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Fehler! Bitte šberprfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_vkk_arch."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;
          v_EU_Fehler:=0;   //   šberprfung ob bei der Gesch„ftsbuchungsgruppe AUSLAND auch ins Ausland geliefert wird
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='AE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='AR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='AS')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='AU')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='BA')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='BM')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='BN')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='BR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='BY')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='CA')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='CH')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='CL')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='CN')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='CO')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='CR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='CS')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='DZ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='EG')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='FJ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='HK')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='HR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='ID')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='IL')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='IN')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='IS')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='JP')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='KE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='KP')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='KR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='LB')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='LI')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='LK')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='MA')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='MD')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='MK')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='MX')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='MY')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='MZ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='NG')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='NO')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='NZ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='PE')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='PH')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='RU')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='SA')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='SB')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='SC')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='SG')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='SZ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='TH')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='TN')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='TR')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='TW')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='TZ')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='UA')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='UG')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='US')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='VN')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='VU')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='WS')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (tab_vkk_arch."Ship-to Country/Region Code" ='ZA')) THEN v_EU_Fehler:=1;
          IF ((tab_ab_arch."Gen. Bus. Posting Group"='AUSLAND') AND (v_EU_Fehler=0)) THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Fehler! Bitte šberprfen','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Gesch„ftsbuchgrp','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,2,FORMAT(tab_ab_arch."Gen. Bus. Posting Group"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,4,'Lieferregion/Land','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,FORMAT(tab_vkk_arch."Ship-to Country/Region Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          END;

          //  šberprfung auf abgelaufene Qoutes
          IF v_Q_Daten.Gltigkeitsdatum<>0D THEN BEGIN
            IF v_Q_Daten.Gltigkeitsdatum<=WORKDATE THEN BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,1,'Ein Qoute ist abgelaufen.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
          END;
      {
          deb.RESET;    //   šberprfung  der Liefer- und Zahlungsbedingungen mit Debitorvorgaben
          deb.SETFILTER(deb."No.",'%1',tab_vkk_arch."Sell-to Customer No.");
          IF deb.FINDFIRST THEN BEGIN

            IF deb."Payment Terms Code"<>tab_vkk_arch."Payment Terms Code" THEN BEGIN
      RowNo := RowNo +1;
              EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Zahlungsbedingung: '+deb."Payment Terms Code"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;

            IF deb."Shipment Method Code"<>tab_vkk_arch."Shipment Method Code" THEN BEGIN
      RowNo := RowNo +1;
              EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Lieferbedingung: '+deb."Shipment Method Code"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;

            IF deb."AB EMail-Adresse"<>'' THEN BEGIN
              IF deb."AB EMail-Adresse"<>tab_vkk_arch."AB EMail-Adresse" THEN BEGIN
      RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; AB Emailadresse: '+deb."AB EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;

            IF deb."Rech EMail-Adresse"<>'' THEN BEGIN
              IF deb."Rech EMail-Adresse"<>tab_vkk_arch."Rech EMail-Adresse" THEN BEGIN
      RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Rech Emailadresse: '+deb."Rech EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;

            IF deb."Service EMail-Adresse"<>'' THEN BEGIN
              IF deb."Service EMail-Adresse"<>tab_vkk_arch."Service EMail-Adresse" THEN BEGIN
      RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Service Emailadresse: '+deb."Service EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
            IF deb."Lizenz EMail-Adresse"<>'' THEN BEGIN
              IF deb."Lizenz EMail-Adresse"<>tab_vkk_arch."Lizenz EMail-Adresse" THEN BEGIN
      RowNo := RowNo +1;
                EnterCell(RowNo,1,'Debitor: '+deb."No."+'; Lizenz Emailadresse: '+deb."Lizenz EMail-Adresse"+'.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;

          END;
      }
          tab_vkk1_arch.RESET;    //  šberprfung der Rahmenw„hrung und -kurs mit der Auftragsw„hrung und -kurs
          tab_vkk1_arch.SETFILTER(tab_vkk1_arch."No.",'%1',tab_ab_arch."Blanket Order No.");
          IF tab_vkk1_arch.FINDFIRST THEN BEGIN
            IF tab_vkk1_arch."Currency Code"<>'' THEN BEGIN
              IF tab_vkk1_arch."Currency Code"=tab_vkk_arch."Currency Code" THEN BEGIN
                IF tab_vkk1_arch."Currency Factor"=tab_vkk_arch."Currency Factor" THEN BEGIN
                END ELSE BEGIN
                  //          Keine Kurs-šbereinstimmung
                  RowNo := RowNo +1;
                  EnterCell(RowNo,1,'Rahmenauftrag: '+tab_vkk1_arch."No."+'; Rahmenkurs: '+FORMAT(tab_vkk1_arch."Currency Factor")+' weicht ab.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
                END;
              END ELSE BEGIN
                //        keine W„hrungs-šbereinstimmung
                RowNo := RowNo +1;
                EnterCell(RowNo,1,'Rahmenauftrag: '+tab_vkk1_arch."No."+'; Rahmenw„hrung: '+tab_vkk1_arch."Currency Code"+' weicht ab.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
              END;
            END;
          END;

          IF v_kursdif_vkk_vkz=TRUE THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Der Kurs im AU-Kopf weicht von den Auftragszeilen ab.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          v_kursdif_vkk_vkz:=FALSE;

          //    Hier weitere Abfragen einbauen
          // unterschiedliche Gesch„ftsbuchungsgruppen abprfen
          tab_vkz_arch.RESET;
          tab_vkz_arch.SETFILTER(tab_vkz_arch."Document No.",'%1',tab_vkk_arch."No.");
          tab_vkz_arch.SETFILTER(tab_vkz_arch.Type,'%1|%2',tab_vkz_arch.Type::Item, tab_vkz_arch.Type::"G/L Account");
          IF tab_vkz_arch.FIND('-') THEN BEGIN
            v_prdbuchgrp:=tab_vkz_arch."Gen. Bus. Posting Group";
            REPEAT
            IF tab_vkz_arch."Gen. Bus. Posting Group"<>v_prdbuchgrp THEN BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,1,'Im Auftrag gibt es unterschiedliche Gesch„ftsbuchungsgruppen.','',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
            END;
            UNTIL tab_vkz_arch.NEXT=0;
          END;

          // Wenn LIEF_DRUCK verwendet wird
          tab_vkz_arch.RESET;
          tab_vkz_arch.SETFILTER(tab_vkz_arch."Document No.",'%1',tab_vkk_arch."No.");
          tab_vkz_arch.SETFILTER(tab_vkz_arch."No.",'%1','LIEF_DRUCK');
          IF tab_vkz_arch.FIND('-') THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,'Beschreibung:','',TRUE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            REPEAT
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(tab_vkz_arch.Description),'',FALSE,FALSE,FALSE,'[blue]',TempExcelBuffer."Cell Type"::Number);
            UNTIL tab_vkz_arch.NEXT=0;
            RowNo := RowNo +1;
          END;
          // Wenn Verk„ufercode/Betreuer Innen oder Gebietscode leer ist
          IF tab_vkk_arch."Salesperson Code"='' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Es fehlt der Verk„ufercode: '+tab_vkk_arch."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk_arch."Territory Code"='' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Es fehlt der Gebietscode: '+tab_vkk_arch."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk_arch."Betreuer Innendienst"='' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Es fehlt der Betreuer Innen: '+tab_vkk_arch."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk_arch."Betreuer Innendienst"='MULTI' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Betreuer Innen = MULTI, bitte berichtigen bei: '+tab_vkk_arch."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk_arch."Salesperson Code"='MULTI' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Verk„ufercode MULTI, bitte berichtigen bei: '+tab_vkk_arch."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF ((tab_vkk_arch."VAT Registration No."='') AND (v_USt_ID_fehlt=TRUE)) THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Keine USt-ID-Nr hinterlegt, bitte nachtragen bei: '+tab_vkk_arch."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          IF tab_vkk_arch."External Document No."='' THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Keine externe Belegnr. hinterlegt, bitte nachtragen bei: '+tab_vkk_arch."No."+'.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          //  diverse Email-Adressen auf Besteller durchsuchen
          v_POS := STRPOS(tab_vkk_arch."AB EMail-Adresse",'Besteller');
          IF v_POS <> 0 THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Das Wort -Besteller- ist in der Emailadresse vorhanden, bitte berichtigen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          v_POS:=0;
          v_POS := STRPOS(tab_vkk_arch."Rech EMail-Adresse",'Besteller');
          IF v_POS <> 0 THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Das Wort -Besteller- ist in der Emailadresse vorhanden, bitte berichtigen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          v_POS:=0;
          v_POS := STRPOS(tab_vkk_arch."Service EMail-Adresse",'Besteller');
          IF v_POS <> 0 THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Das Wort -Besteller- ist in der Emailadresse vorhanden, bitte berichtigen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          v_POS:=0;
          v_POS := STRPOS(tab_vkk_arch."Lizenz EMail-Adresse",'Besteller');
          IF v_POS <> 0 THEN BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT('Das Wort -Besteller- ist in der Emailadresse vorhanden, bitte berichtigen.'),'',TRUE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Number);
          END;
          v_POS:=0;
          RowNo := RowNo +1;
          EnterCell(RowNo,1,FORMAT('kontrolliert:'),'',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
          RowNo := RowNo +3;
          Pfad_tag :=FORMAT(DATE2DMY(AE_holen_Datum_1,1));
          Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
          Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));
          Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;

          CloseExcel('AE_'+tab_vkk_arch."No."+Pfaddatum,'AE_'+tab_vkk_arch."No."+Pfaddatum,'F:\Daten Neu\User\Uwe\AB-Differenzen\2021_2022');
        UNTIL tab_vkk_arch.NEXT = 0;
      END;
    END;

    LOCAL PROCEDURE Differenzen_ermitteln_neu_test@1000000024();
    BEGIN
      // ANFANG zurcksetzen Status auf NN zwecks Programmtests
      //        kann bei Echtbetrieb unterbleiben!!!
      MESSAGE('JOB wurde ordnungsgem„á gestartet.');
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'NN';
          tab_ab_bw.Stat_Artikel := 'NN';
          tab_ab_bw.Stat_Menge := 'NN';
          tab_ab_bw.Stat_EK := 'NN';
          tab_ab_bw.Stat_VK := 'NN';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'NN';
          tab_ab_bw.Stat_Artikel := 'NN';
          tab_ab_bw.Stat_Menge := 'NN';
          tab_ab_bw.Stat_EK := 'NN';
          tab_ab_bw.Stat_VK := 'NN';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      // ENDE zurcksetzen Status auf NN zwecks Programmtests


      //  ANFANG Vergleich zwischen NEU und ALT (tab_ab_bw=NEU  und prf=ALT)
      //  ANFANG Diff. feststellen Artikel, Menge, EK, VK
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          prf.RESET;
          prf.SETFILTER(Belegart,'%1','AUšW');
          prf.SETFILTER(AU_Nr,'%1',tab_ab_bw.AU_Nr);
          prf.SETFILTER(POS_Nr,'%1',tab_ab_bw.POS_Nr);
          prf.SETFILTER(Art,'%1','ALT');
          IF prf.FINDFIRST THEN BEGIN
            IF prf.Artikel = tab_ab_bw.Artikel THEN BEGIN
              tab_ab_bw.Stat_Artikel := 'OK';
              prf.Stat_Artikel := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_Artikel := 'AF';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_Artikel := 'AF';
              prf.Status := 'ŽN';
            END;

            IF prf.Menge = tab_ab_bw.Menge THEN BEGIN
              tab_ab_bw.Stat_Menge := 'OK';
              prf.Stat_Menge := 'OK';
              // ANFANG  Rechnungsmengenprfung bei Menge OK
              IF prf.Restmenge <> tab_ab_bw.Restmenge THEN BEGIN
                tab_ab_bw.Stat_Menge := 'MR';
                tab_ab_bw.Status := 'ŽN';
                prf.Stat_Menge := 'MR';
                prf.Status := 'ŽN';
              END;
              // ENDE  Rechnungsmengenprfung bei Menge OK
            END ELSE BEGIN
              tab_ab_bw.Stat_Menge := 'MF';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_Menge := 'MF';
              prf.Status := 'ŽN';
            END;

            IF prf.Restmenge <> tab_ab_bw.Restmenge THEN BEGIN
              tab_ab_bw.Stat_Menge := 'MR';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_Menge := 'MR';
              prf.Status := 'ŽN';
            END;

            IF prf.EK = tab_ab_bw.EK THEN BEGIN
              tab_ab_bw.Stat_EK := 'OK';
              prf.Stat_EK := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_EK := 'EF';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_EK := 'EF';
              prf.Status := 'ŽN';
            END;

            IF prf.VK=tab_ab_bw.VK THEN BEGIN
              tab_ab_bw.Stat_VK := 'OK';
              prf.Stat_VK := 'OK';
            END ELSE BEGIN
              tab_ab_bw.Stat_VK := 'VF';
              tab_ab_bw.Status := 'ŽN';
              prf.Stat_VK := 'VF';
              prf.Status := 'ŽN';
            END;

            IF prf.W„hrungscode <> tab_ab_bw.W„hrungscode THEN BEGIN
              tab_ab_bw.Stat_VK := 'WŽ';
              tab_ab_bw.Status := 'ŽN';
              prf.Status := 'ŽN';
              prf.Stat_VK := 'WŽ';
            END;
            tab_ab_bw.MODIFY;
            prf.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE Diff. feststellen Artikel, Menge, EK, VK
      //  ANFANG Status auf OK setzen, wenn keine Abweichnung vorliegt
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(Stat_Artikel,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_Menge,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_EK,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_VK,'%1','OK');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'OK';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Stat_Artikel,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_Menge,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_EK,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_VK,'%1','OK');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          tab_ab_bw.Status := 'OK';
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE   Status auf OK setzen, wenn keine Abweichnung vorliegt

      //  ANFANG Feststellen, ob neuer Auftrag/Pos vorliegt
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(Status,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          prf.RESET;
          prf.SETFILTER(Belegart,'%1','AUšW');
          prf.SETFILTER(Art,'%1','ALT');
          prf.SETFILTER(AU_Nr,'%1',tab_ab_bw.AU_Nr);
          IF prf.FINDFIRST THEN BEGIN
            //  Neue Position zu altem Auftrag
            tab_ab_bw.Status := 'NP';
            tab_ab_bw.MODIFY;
          END ELSE BEGIN
            //  Neuer Auftrag
            tab_ab_bw.Status := 'NA';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //  ENDE   Feststellen, ob neuer Auftrag/Pos vorliegt

      // ANFANG  Feststellen, ob ein Auftrag/Pos storniert wurde
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Status,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          var_re_menge := 0;
          rech.RESET;
          rech.SETFILTER("Order No.",'%1',tab_ab_bw.AU_Nr);
          // Rechnungsmenge ohne laufender Tag *********************************
          rech.SETFILTER("Posting Date",'<%1',WORKDATE);
          rech.SETFILTER("Order Line No.",'%1',tab_ab_bw.POS_Nr);
          IF rech.FIND('-') THEN BEGIN
            REPEAT
              tab_ab_bw.Status := 'ST';
              tab_ab_bw.MODIFY;
              var_re_menge := var_re_menge + rech.Quantity;
            UNTIL rech.NEXT = 0;
            IF var_re_menge > 0 THEN tab_ab_bw.Status := 'RE';
            tab_ab_bw.re_menge := var_re_menge;
            tab_ab_bw.MODIFY;
            var_re_menge:=0;
          END ELSE BEGIN
            //  Storno der Zeile
            tab_ab_bw.Status := 'SZ';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;


      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Status,'%1','ŽN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          var_re_menge := 0;
          rech.RESET;
          rech.SETFILTER("Order No.",'%1',tab_ab_bw.AU_Nr);
          // Rechnungsmenge ohne laufender Tag *********************************
          rech.SETFILTER("Posting Date",'<%1',WORKDATE);
          rech.SETFILTER("Order Line No.",'%1',tab_ab_bw.POS_Nr);
          IF rech.FIND('-') THEN BEGIN
            REPEAT
              var_re_menge := var_re_menge+rech.Quantity;
            UNTIL rech.NEXT = 0;
            IF var_re_menge > 0 THEN tab_ab_bw.Status := 'RE';
            tab_ab_bw.re_menge := var_re_menge;
            tab_ab_bw.MODIFY;
            var_re_menge:=0;
          END ELSE BEGIN
            //  Storno der Zeile
            tab_ab_bw.Status := 'SZ';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(Status,'%1','ŽN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          var_re_menge := 0;
          rech.RESET;
          rech.SETFILTER("Order No.",'%1',tab_ab_bw.AU_Nr);
          // Rechnungsmenge ohne laufender Tag *********************************
          rech.SETFILTER("Posting Date",'<%1',WORKDATE);
          rech.SETFILTER("Order Line No.",'%1',tab_ab_bw.POS_Nr);
          IF rech.FIND('-') THEN BEGIN
            REPEAT
              var_re_menge := var_re_menge + rech.Quantity;
            UNTIL rech.NEXT = 0;
            IF var_re_menge > 0 THEN tab_ab_bw.Status := 'RE';
            tab_ab_bw.re_menge := var_re_menge;
            tab_ab_bw.MODIFY;
            var_re_menge := 0;
          END ELSE BEGIN
            //  Storno der Zeile
            tab_ab_bw.Status := 'SZ';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      // ENDE    Feststellen, ob ein Auftrag/Pos storniert wurde

      // ANFANG  Feststellen, ob RE_Mengen mit AU_Mengen bereinstimmen
      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Status,'%1','RE');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.Menge = tab_ab_bw.re_menge THEN BEGIN
            tab_ab_bw.Status := 'OK';
          END ELSE BEGIN
            tab_ab_bw.Status := 'GP';
          END;
          IF tab_ab_bw.Restmenge = 0 THEN BEGIN
            tab_ab_bw.Status := 'FA';
          END;
          tab_ab_bw.MODIFY;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      //   ENDE  Feststellen, ob RE_Mengen mit AU_Mengen bereinstimmen


      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','ALT');
      tab_ab_bw.SETFILTER(Status,'%1','FA');
      tab_ab_bw.SETFILTER(Stat_Menge,'%1','NN');
      tab_ab_bw.SETFILTER(Stat_Artikel,'%1','NN');
      tab_ab_bw.SETFILTER(Stat_EK,'%1','NN');
      tab_ab_bw.SETFILTER(Stat_VK,'%1','NN');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.re_menge = tab_ab_bw.Menge THEN BEGIN
            tab_ab_bw.Status := 'OK';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      tab_ab_bw.RESET;
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1','NEU');
      tab_ab_bw.SETFILTER(Status,'%1','RE');
      tab_ab_bw.SETFILTER(Stat_Menge,'%1','MR');
      tab_ab_bw.SETFILTER(Stat_Artikel,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_EK,'%1','OK');
      tab_ab_bw.SETFILTER(Stat_VK,'%1','OK');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF ((tab_ab_bw.re_menge = tab_ab_bw.Menge) AND (tab_ab_bw.Restmenge = 0)) THEN BEGIN
            tab_ab_bw.Status := 'OK';
            tab_ab_bw.MODIFY;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      //  ENDE   Vergleich zwischen NEU und ALT


      //  ANFANG Differenzen in AEmtl bernehmen
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(Status,'%1|%2|%3|%4|%5|%6|%7|%8', 'NP', 'ŽN', 'ST', 'SZ', 'GP', 'FA', 'RE','WŽ');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          AE_mtl.INIT;
          AE_mtl.Datum := tab_ab_bw.Datum;
          AE_mtl.AU_Nr := tab_ab_bw.AU_Nr;
          AE_mtl.POS_Nr := tab_ab_bw.POS_Nr;
          AE_mtl.Belegart := 'AEND';
          AE_mtl.Debitor := tab_ab_bw.Debitor;
          AE_mtl.Deb_Nr := tab_ab_bw.Deb_Nr;
          AE_mtl.Artikel := tab_ab_bw.Artikel;
          AE_mtl.Menge := tab_ab_bw.Menge;
          AE_mtl.Restmenge := tab_ab_bw.Restmenge;
          AE_mtl.EK := tab_ab_bw.EK;
          AE_mtl.VK := tab_ab_bw.VK;
          AE_mtl."Best„tigt LD" := tab_ab_bw."Best„tigt LD";
          AE_mtl.Wunschdatum := tab_ab_bw.Wunschdatum;
          AE_mtl.Status := 'AE';
          AE_mtl.Art := 'TAG';
          AE_mtl."EK Gesamt" := tab_ab_bw."EK Gesamt";
          AE_mtl."VK Gesamt" := tab_ab_bw."VK Gesamt";
          AE_mtl.Lager := tab_ab_bw.Lager;
          AE_mtl."DB %" := tab_ab_bw."DB %";
          AE_mtl.Linie := tab_ab_bw.Linie;
          AE_mtl.Endkunde := tab_ab_bw.Endkunde;
          AE_mtl.W„hrungscode := tab_ab_bw.W„hrungscode;
          AE_mtl.w„_faktor := tab_ab_bw.w„_faktor;
          AE_mtl.Auftragsdatum := tab_ab_bw.Auftragsdatum;
          AE_mtl.Betreuer := tab_ab_bw.Betreuer;
          AE_mtl.Vertreter := tab_ab_bw.Vertreter;
          AE_mtl.Teams := tab_ab_bw.Teams;
          AE_mtl.Gebietscode := tab_ab_bw.Gebietscode;
          AE_mtl.PLZ := tab_ab_bw.Plz;
          AE_mtl."AU aus Rahmen" := tab_ab_bw."AU aus Rahmen";
          IF AE_mtl.w„_faktor = 0 THEN BEGIN
            AE_mtl."Betrag in EUR" := AE_mtl."VK Gesamt";
          END ELSE BEGIN
            AE_mtl."Betrag in EUR":= (AE_mtl."VK Gesamt"/AE_mtl.w„_faktor);
          END;
          AE_mtl.INSERT;
        UNTIL tab_ab_bw.NEXT = 0;
      END;
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Auftragsberwachung  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      RowNo := 2;
      EnterCell(RowNo,1,'Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'AU-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Pos-Nr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Debitor','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Artikel','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Restmenge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Lager','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'EK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'VK','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,11,'Art','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,12,'Status','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,13,'Art Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,14,'Menge Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,15,'EK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,16,'VK Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,17,'WŽ-Diff','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,18,'WŽ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,19,'W„ Kurs','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,20,'RE Menge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,21,'urspr AU-Datum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      var_AU_Nr := 'AU200000';
      tab_ab_bw.RESET;
      tab_ab_bw.SETCURRENTKEY(Belegart,AU_Nr,POS_Nr,Datum);
      tab_ab_bw.SETFILTER(Belegart,'%1','AUšW');
      tab_ab_bw.SETFILTER(Art,'%1|%2', 'NEU', 'ALT');
      tab_ab_bw.SETFILTER(Status,'%1|%2|%3|%4|%5|%6|%7|%8', 'NP','ŽN','ST','SZ','GP','FA','RE','WŽ');
      IF tab_ab_bw.FIND('-') THEN BEGIN
        REPEAT
          IF tab_ab_bw.AU_Nr = var_AU_Nr THEN BEGIN
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,tab_ab_bw.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,tab_ab_bw.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,tab_ab_bw.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,tab_ab_bw.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,tab_ab_bw.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,tab_ab_bw.Stat_Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,tab_ab_bw.Stat_Menge,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF tab_ab_bw.Stat_VK='WŽ' THEN EnterCell(RowNo,17,'WŽ-Fehler','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,18,tab_ab_bw.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
          END ELSE BEGIN
            RowNo := RowNo +1;
            EnterCell(RowNo,1,FORMAT(tab_ab_bw.Datum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            EnterCell(RowNo,2,tab_ab_bw.AU_Nr,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,3,FORMAT(tab_ab_bw.POS_Nr),'',FALSE,FALSE,FALSE,'######',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,4,tab_ab_bw.Debitor,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,5,tab_ab_bw.Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,6,FORMAT(tab_ab_bw.Menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,7,FORMAT(tab_ab_bw.Restmenge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,8,tab_ab_bw.Lager,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,9,FORMAT(tab_ab_bw.EK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,10,FORMAT(tab_ab_bw.VK),'',FALSE,FALSE,FALSE,'###,##0.00##',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,11,tab_ab_bw.Art,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,12,tab_ab_bw.Status,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,13,tab_ab_bw.Stat_Artikel,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,14,tab_ab_bw.Stat_Menge,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,15,FORMAT(tab_ab_bw.Stat_EK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,16,FORMAT(tab_ab_bw.Stat_VK),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            IF tab_ab_bw.Stat_VK='WŽ' THEN EnterCell(RowNo,17,'WŽ-Fehler','',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,18,tab_ab_bw.W„hrungscode,'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
            EnterCell(RowNo,19,FORMAT(tab_ab_bw.w„_faktor),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,20,FORMAT(tab_ab_bw.re_menge),'',FALSE,FALSE,FALSE,'###,##0',TempExcelBuffer."Cell Type"::Number);
            EnterCell(RowNo,21,FORMAT(tab_ab_bw.Auftragsdatum),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
            RowNo := RowNo +1;
            var_AU_Nr := tab_ab_bw.AU_Nr;
          END;
        UNTIL tab_ab_bw.NEXT = 0;
      END;

      RowNo := RowNo +2;
      EnterCell(RowNo,1,'AF=Artikelfehler','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'MF=Mengenfehler','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'MR=Diff Restmengen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'RF=Diff Rechnungsmengen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'EF=EK-Fehler','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'VF=VK-Fehler','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo +1;
      EnterCell(RowNo,1,'ŽN=Žnderung','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'NP=neue Position','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'NA=Neuer AU','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'ST=Storno AU','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'SZ=Storno Zeile','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'RE=Rechnung vorhanden','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);

      Pfad_tag := FORMAT(DATE2DMY(AE_holen_Datum_1,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));

      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      CloseExcel('Diff'+Pfaddatum,'Diff'+Pfaddatum,'F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022');
    END;

    LOCAL PROCEDURE AU_AE_Kontrolle@1000000025();
    BEGIN
      CreateExcel;
      RowNo := 1;
      EnterCell(RowNo,1,'Vergleich Auftr„ge mit Auftragseing„ngen  ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Stand:','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,FORMAT(WORKDATE),'',TRUE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
      EnterCell(RowNo,8,'Es werden alle Auftr„ge gelistet, die nicht im AE vorhanden sind!','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 2;
      EnterCell(RowNo,1,'Auftragsnr','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,2,'Auftragsdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,3,'Belegdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,4,'Buchungsdatum','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Erledigtstatus','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,6,'Deb.-Nr.','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Deb.-Name','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,8,'Verk„ufer','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,9,'Bearbeiter','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,10,'Gebiet','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := 3;
      EnterCell(RowNo,1,'aktuelle Auftr„ge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      tab_vkk.RESET;
      tab_vkk.SETFILTER(tab_vkk."Order Date",'>%1',010120D);
      tab_vkk.SETFILTER(tab_vkk."Document Type",'%1',tab_vkk."Document Type"::Order);
      tab_vkk.SETFILTER(tab_vkk."Location Code",'%1|%2','ZENT','KONSI');
      tab_vkk.SETFILTER(tab_vkk."AE reduzieren",'%1',FALSE);
      IF tab_vkk.FIND('-') THEN BEGIN
        REPEAT
          AE_mtl.RESET;
          AE_mtl.SETFILTER(AE_mtl.Datum,'>%1',010120D);
          AE_mtl.SETFILTER(AE_mtl.AU_Nr,'%1',tab_vkk."No.");
          IF AE_mtl.FINDFIRST THEN BEGIN
          END ELSE BEGIN
            IF v_dopp_AUNR=tab_vkk."No." THEN BEGIN
            END ELSE BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(tab_vkk."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,2,FORMAT(tab_vkk."Order Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,3,FORMAT(tab_vkk."Document Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,4,FORMAT(tab_vkk."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,5,FORMAT(tab_vkk.Erledigtstatus),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(tab_vkk."Sell-to Customer No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,7,FORMAT(tab_vkk."Sell-to Customer Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,8,FORMAT(tab_vkk."Salesperson Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,FORMAT(tab_vkk."Betreuer Innendienst"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,10,FORMAT(tab_vkk."Territory Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              IF tab_vkk."AE reduzieren"= TRUE THEN BEGIN
                EnterCell(RowNo,10,'AU soll den AE reduzieren, somit kein AE!','',FALSE,FALSE,FALSE,'[red]',TempExcelBuffer."Cell Type"::Text);
              END;
              v_dopp_AUNR:=tab_vkk."No.";
              vkrk.RESET;
              vkrk.SETFILTER(vkrk."Order No.",'%1',tab_vkk."No.");
              IF vkrk.FINDFIRST THEN BEGIN
                RowNo := RowNo +1;  //   eventuell wieder herausnehmen  //////////////////////////////////////////////////////////////////////////
                vkrk.CALCFIELDS(Amount);
                EnterCell(RowNo,6,FORMAT(vkrk."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,7,FORMAT(vkrk.Amount),'',FALSE,FALSE,FALSE,'###,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,8,FORMAT(vkrk."External Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,9,FORMAT(vkrk."Your Reference"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
            END;
          END;
        UNTIL tab_vkk.NEXT=0;
      END;
      RowNo := RowNo +2;

      EnterCell(RowNo,1,'archivierte Auftr„ge','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,5,'Tabelle 5107 Verkaufskopf archiviert: Wenn kein AE, dann im Feld -AE reduzieren- ein H„kchen setzen ','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      tab_vkk_arch.RESET;
      tab_vkk_arch.SETFILTER(tab_vkk_arch."Order Date",'>%1',010120D);
      tab_vkk_arch.SETFILTER(tab_vkk_arch."Document Type",'%1',tab_vkk_arch."Document Type"::Order);
      tab_vkk_arch.SETFILTER(tab_vkk_arch."Location Code",'%1|%2','ZENT','KONSI');
      tab_vkk_arch.SETFILTER(tab_vkk_arch."AE reduzieren",'%1',FALSE);
      IF tab_vkk_arch.FIND('-') THEN BEGIN
        REPEAT
          AE_mtl.RESET;
          AE_mtl.SETFILTER(AE_mtl.Datum,'>%1',010120D);
          AE_mtl.SETFILTER(AE_mtl.AU_Nr,'%1',tab_vkk_arch."No.");
          IF AE_mtl.FINDFIRST THEN BEGIN
          END ELSE BEGIN
            IF v_dopp_AUNR=tab_vkk_arch."No." THEN BEGIN
            END ELSE BEGIN
              RowNo := RowNo +1;
              EnterCell(RowNo,1,FORMAT(tab_vkk_arch."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,2,FORMAT(tab_vkk_arch."Order Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,3,FORMAT(tab_vkk_arch."Document Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,4,FORMAT(tab_vkk_arch."Posting Date"),'',FALSE,FALSE,FALSE,'dd.mm.yyyy',TempExcelBuffer."Cell Type"::Date);
              EnterCell(RowNo,5,FORMAT(tab_vkk_arch.Erledigtstatus),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,6,FORMAT(tab_vkk_arch."Sell-to Customer Name"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              tab_vkk_arch.CALCFIELDS(Amount);
              EnterCell(RowNo,7,FORMAT(tab_vkk_arch.Amount),'',FALSE,FALSE,FALSE,'####,##0.00',TempExcelBuffer."Cell Type"::Number);
              EnterCell(RowNo,8,FORMAT(tab_vkk_arch."Salesperson Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,9,FORMAT(tab_vkk_arch."Betreuer Innendienst"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,10,FORMAT(tab_vkk_arch."Territory Code"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,11,FORMAT(tab_vkk_arch."External Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              EnterCell(RowNo,12,FORMAT(tab_vkk_arch."Your Reference"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              v_dopp_AUNR:=tab_vkk_arch."No.";
              vkrk.RESET;
              vkrk.SETFILTER(vkrk."Order No.",'%1',tab_vkk_arch."No.");
              IF vkrk.FINDFIRST THEN BEGIN
                vkrk.CALCFIELDS(Amount);
                EnterCell(RowNo,13,FORMAT(vkrk."No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,14,FORMAT(vkrk.Amount),'',FALSE,FALSE,FALSE,'####,##0.00',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,15,FORMAT(vkrk."External Document No."),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
                EnterCell(RowNo,16,FORMAT(vkrk."Your Reference"),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
              END;
            END;
          END;
        UNTIL tab_vkk_arch.NEXT=0;
      END;
      RowNo := RowNo +3;

      EnterCell(RowNo,1,'Doppelte Auftragseing„nge: wenn gelistet, bitte berprfen','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      EnterCell(RowNo,7,'Žnderungen in AE-Gesamtliste ber AE-Kontrolle (wenn nicht doppelt, dann Zeilennr. +1)','',TRUE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Text);
      RowNo := RowNo +2;
      AE_mtl.RESET;
      AE_mtl.SETFILTER(AE_mtl.Datum,'>%1',010120D);
      AE_mtl.SETCURRENTKEY(AU_Nr,POS_Nr,Deb_Nr,Datum,Belegart);
      IF AE_mtl.FIND('-') THEN BEGIN
        REPEAT
          IF v_AUNr=AE_mtl.AU_Nr THEN BEGIN
            IF v_AUZeilNr=AE_mtl.POS_Nr THEN BEGIN
              IF v_Belegart=AE_mtl.Belegart THEN BEGIN
                EnterCell(RowNo,1,FORMAT(AE_mtl.Datum),'',FALSE,FALSE,FALSE,'DD.MM.YYYY',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,2,FORMAT(AE_mtl.AU_Nr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,3,FORMAT(AE_mtl.POS_Nr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,4,FORMAT(AE_mtl.Deb_Nr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,5,FORMAT(AE_mtl.Debitor),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,6,FORMAT(AE_mtl.Belegart),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                RowNo := RowNo +1;
                EnterCell(RowNo,1,FORMAT(v_AUDatum),'',FALSE,FALSE,FALSE,'DD.MM.YYYY',TempExcelBuffer."Cell Type"::Date);
                EnterCell(RowNo,2,FORMAT(v_AUNr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,3,FORMAT(v_AUZeilNr),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                EnterCell(RowNo,6,FORMAT(v_Belegart),'',FALSE,FALSE,FALSE,'',TempExcelBuffer."Cell Type"::Number);
                RowNo := RowNo +2;
              END;
            END;
          END ELSE BEGIN
          END;
          v_AUNr:=AE_mtl.AU_Nr;
          v_AUZeilNr:=AE_mtl.POS_Nr;
          v_AUDatum:=AE_mtl.Datum;
          v_Belegart:=AE_mtl.Belegart;
        UNTIL AE_mtl.NEXT=0;
      END;

      Pfad_tag :=FORMAT(DATE2DMY(AE_holen_Datum_1,1));
      Pfad_monat := FORMAT(DATE2DMY(AE_holen_Datum_1,2));
      Pfad_jahr := FORMAT(DATE2DMY(AE_holen_Datum_1,3));
      Pfaddatum:='_' + Pfad_jahr + '_' + Pfad_monat + '_' + Pfad_tag;
      CloseExcel('AU_AE_Kontrolle'+Pfaddatum,'AU_AE_Kontrolle'+Pfaddatum,'F:\Daten Neu\User\Joachim\AB-Differenzen\2021_2022');
    END;

    EVENT Sheet@1140161::SelectionChange@1543(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1140161::BeforeDoubleClick@1537(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140161::BeforeRightClick@1534(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140161::Activate@304();
    BEGIN
    END;

    EVENT Sheet@1140161::Deactivate@1530();
    BEGIN
    END;

    EVENT Sheet@1140161::Calculate@279();
    BEGIN
    END;

    EVENT Sheet@1140161::Change@1545(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1140161::FollowHyperlink@1470(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Sheet@1140161::PivotTableUpdate@2156(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Sheet@1140161::PivotTableAfterValueChange@2886(TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1140161::PivotTableBeforeAllocateChanges@2889(TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140161::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140161::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140001 : Integer;ValueChangeEnd@1140000 : Integer);
    BEGIN
    END;

    EVENT Sheet@1140161::PivotTableChangeSync@2894(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140163::Open@1923();
    BEGIN
    END;

    EVENT Book@1140163::Activate@304();
    BEGIN
    END;

    EVENT Book@1140163::Deactivate@1530();
    BEGIN
    END;

    EVENT Book@1140163::BeforeClose@1546(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::BeforeSave@1547(SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::BeforePrint@1549(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::NewSheet@1550(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140163::AddinInstall@1552();
    BEGIN
    END;

    EVENT Book@1140163::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Book@1140163::WindowResize@1554(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1140163::WindowActivate@1556(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1140163::WindowDeactivate@1557(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1140163::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1140163::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140163::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140163::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140163::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1140163::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Book@1140163::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140163::PivotTableCloseConnection@2158(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140163::PivotTableOpenConnection@2159(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140163::Sync@2266(SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140163::BeforeXmlImport@2283(Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::AfterXmlImport@2285(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140163::BeforeXmlExport@2287(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::AfterXmlExport@2288(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140163::RowsetComplete@2610(Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::SheetPivotTableAfterValueChange@2895(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1140163::SheetPivotTableBeforeAllocateChanges@2896(Sh@1140004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::SheetPivotTableBeforeCommitChanges@2897(Sh@1140004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::SheetPivotTableBeforeDiscardChanges@2898(Sh@1140003 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140001 : Integer;ValueChangeEnd@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140163::SheetPivotTableChangeSync@2899(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140163::AfterSave@2900(Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140163::NewChart@2901(Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart");
    BEGIN
    END;

    EVENT Excel@1140164::NewWorkbook@1565(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140164::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1140164::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140164::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140164::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140164::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookOpen@1567(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookActivate@1568(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookDeactivate@1569(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookBeforeClose@1570(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookBeforeSave@1571(Wb@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookBeforePrint@1572(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookNewSheet@1573(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookAddinInstall@1574(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookAddinUninstall@1575(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140164::WindowResize@1554(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1140164::WindowActivate@1556(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1140164::WindowDeactivate@1557(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1140164::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Excel@1140164::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookPivotTableCloseConnection@2160(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookPivotTableOpenConnection@2161(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookSync@2289(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookBeforeXmlImport@2290(Wb@1140004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookAfterXmlImport@2291(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookBeforeXmlExport@2292(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookAfterXmlExport@2293(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookRowsetComplete@2611(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::AfterCalculate@2612();
    BEGIN
    END;

    EVENT Excel@1140164::SheetPivotTableAfterValueChange@2895(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1140164::SheetPivotTableBeforeCommitChanges@2897(Sh@1140004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::ProtectedViewWindowOpen@2903(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140164::ProtectedViewWindowResize@2908(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140164::ProtectedViewWindowActivate@2909(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140164::ProtectedViewWindowDeactivate@2910(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookAfterSave@2911(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140164::WorkbookNewChart@2912(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart");
    BEGIN
    END;

    BEGIN
    {
      // // Lfd.Nr.  Version  Datum          User Beschreibung
      =================================================================
      1        TOP1.00  23.04.2018     UB   Umstellung auf neue Excel-Version. Wenn Programm ohne Fehler l„uft, k”nnen Bemerkungszeilen gel”scht werden!!!
    }
    END.
  }
}

