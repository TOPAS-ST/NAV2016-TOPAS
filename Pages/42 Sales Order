OBJECT Page 42 Sales Order
{
  OBJECT-PROPERTIES
  {
    Date=10.01.22;
    Time=10:30:00;
    Modified=Yes;
    Version List=NAVW19.00.00.50682,TOP1.20;
  }
  PROPERTIES
  {
    CaptionML=[DEU=Verkaufsauftrag;
               ENU=Sales Order];
    SourceTable=Table36;
    SourceTableView=ORDER(Ascending)
                    WHERE(Document Type=FILTER(Order));
    PageType=Document;
    RefreshOnActivate=Yes;
    PromotedActionCategoriesML=[DEU=Neu,Verarbeiten,Bericht,Genehmigen,Freigeben,Buchen,Vorbereiten,In Rechnung stellen,Genehmigung anfordern;
                                ENU=New,Process,Report,Approve,Release,Posting,Prepare,Invoice,Request Approval];
    OnInit=BEGIN
             SetExtDocNoMandatoryCondition;
           END;

    OnOpenPage=VAR
                 CRMIntegrationManagement@1000 : Codeunit 5330;
               BEGIN
                 IF UserMgt.GetSalesFilter <> '' THEN BEGIN
                   FILTERGROUP(2);
                   SETRANGE("Responsibility Center",UserMgt.GetSalesFilter);
                   FILTERGROUP(0);
                 END;

                 SETRANGE("Date Filter",0D,WORKDATE - 1);

                 SetDocNoVisible;

                 CRMIntegrationEnabled := CRMIntegrationManagement.IsCRMIntegrationEnabled;
               END;

    OnAfterGetRecord=BEGIN
                       SetControlVisibility;

                       //TOPAS 24.07.17 ST - Gesamtbetrag
                       CALCFIELDS(Amount);
                       //TOPAS Ende
                     END;

    OnNewRecord=BEGIN
                  "Responsibility Center" := UserMgt.GetSalesFilter;
                END;

    OnInsertRecord=BEGIN
                     CheckCreditMaxBeforeInsert;
                   END;

    OnDeleteRecord=BEGIN
                     CurrPage.SAVERECORD;
                     EXIT(ConfirmDeletion);
                   END;

    OnAfterGetCurrRecord=VAR
                           CRMCouplingManagement@1000 : Codeunit 5331;
                         BEGIN
                           DynamicEditable := CurrPage.EDITABLE;
                           CurrPage.IncomingDocAttachFactBox.PAGE.LoadDataFromRecord(Rec);
                           CRMIsCoupledToRecord := CRMIntegrationEnabled AND CRMCouplingManagement.IsRecordCoupledToCRM(RECORDID);
                           ShowWorkflowStatus := CurrPage.WorkflowStatus.PAGE.SetFilterOnWorkflowRecord(RECORDID);
                           CurrPage.ApprovalFactBox.PAGE.RefreshPage(RECORDID);

                           //TOPAS 25.02.11 ST - Betrag zu liefern
                           NoSalesPriceCheck := FALSE;

                           ShipAmount := 0;
                           IF Customer.GET("Sell-to Customer No.") THEN
                             Customer.CALCFIELDS("Balance (LCY)");

                           SalesLine.RESET;
                           SalesLine.SETFILTER("Document No.",'%1',"No.");
                           SalesLine.SETFILTER("Qty. to Ship (Base)",'>%1',0);
                           IF SalesLine.FINDFIRST THEN
                             REPEAT
                                 ShipAmount += SalesLine."Qty. to Ship (Base)" * SalesLine."VK-Preis (MW)" * (1 + SalesLine."VAT %"/100);
                             UNTIL SalesLine.NEXT = 0;

                           //16.05.08 ST - Rahmennummer im Kopf anzeigen
                           BlanketOrder := '';
                           SalesLine.RESET;
                           SalesLine.SETFILTER(Type,'%1',SalesLine.Type::Item);
                           SalesLine.SETFILTER("Blanket Order No.",'<>%1','');
                           SalesLine.SETFILTER("Document No.",'%1',"No.");
                           IF SalesLine.FINDFIRST THEN BlanketOrder := SalesLine."Blanket Order No.";

                           //15.05.08 ST - "Ge„ndert von" im Kopf anzeigen
                           CreatedBy := '';
                           Log.SETRANGE("Table No.",36);
                           Log.SETRANGE("Type of Change",Log."Type of Change"::Insertion);
                           Log.SETRANGE("Primary Key Field 2 Value","No.");
                           IF Log.FINDFIRST THEN
                             CreatedBy := Log."User ID";

                           //11.06.08 ST - DC-Preise werden mit Quotepreisen verglichen
                           SalesLine.RESET;
                           SalesLine.SETRANGE("Document No.","No.");
                           IF SalesLine.FINDFIRST THEN
                             REPEAT
                               IF SalesLine."Quotenr." <> '' THEN BEGIN
                                 Quotedaten.SETRANGE("Quotenr.",SalesLine."Quotenr.");
                                 IF Quotedaten.FINDFIRST THEN BEGIN
                                   IF SalesLine."DC-Preis (EKW)" <> Quotedaten.Quotepreis THEN BEGIN
                                     MESSAGE('Der DC-Preis von %1\im Beleg %2 in der Zeile %3\weicht vom Quotepreis %4 ab !!',
                                     SalesLine."DC-Preis (EKW)",SalesLine."Document No.",SalesLine."Line No.",Quotedaten.Quotepreis);
                                   END;
                                 END;
                               END;
                             UNTIL SalesLine.NEXT = 0;

                           //002 Lagerortcode KOPF u. ZEILE werden auf šbereinstimmung geprft
                           IF ("Sell-to Customer No." <> '704270') AND ("Sell-to Customer No." <> '710270') THEN BEGIN
                             SalesLine.RESET;
                             SalesLine.SETRANGE("Document No.","No.");
                             SalesLine.SETRANGE(Type,SalesLine.Type::Item);
                             IF SalesLine.FINDFIRST THEN
                               REPEAT
                                 IF (SalesLine."Location Code" = '') OR (SalesLine."No." = '') THEN
                                   MESSAGE('Es gibt Auftragszeilen ohne Artikel-Nr. und/oder Lagerortcode. Bitte berichtigen!');
                                 IF ("Location Code" <> SalesLine."Location Code") AND (SalesLine."Location Code" <> '') THEN
                                   MESSAGE('Der Lagerortcode im KOPF und in der ZEILE weichen voneinander ab. Bitte berichtigen!');
                               UNTIL SalesLine.NEXT = 0;
                           END;

                           //27.08.08 ST - Anzeige der Mahnstufe
                           ReminderShow := FALSE;
                           ReminderText := '';
                           CustLedgerEntry.SETRANGE(Open,TRUE);
                           CustLedgerEntry.SETRANGE("Customer No.","Sell-to Customer No.");
                           CustLedgerEntry.SETRANGE("Document Type",CustLedgerEntry."Document Type"::Invoice);
                           IF CustLedgerEntry.FINDFIRST THEN BEGIN
                             IssuedReminder.SETRANGE(IssuedReminder."Entry No.",CustLedgerEntry."Entry No.");
                             IF IssuedReminder.FINDLAST THEN BEGIN
                               ReminderShow := TRUE;
                               IF IssuedReminder."No. of Reminders" = 1 THEN ReminderText := 'Mahnstufe 1';
                               IF IssuedReminder."No. of Reminders" > 1 THEN ReminderText := 'Achtung! Mahnstufe '
                                  + FORMAT(IssuedReminder."No. of Reminders");
                             END;
                           END;

                           //09.09.09 UB - Anzeige Konsi Lager
                           KonsiShow := FALSE;
                           KonsiText := '';
                           IF "Location Code"='KONSI' THEN BEGIN
                             KonsiShow := TRUE;
                             KonsiText := 'Konsignationslager - nur liefern';
                           END;

                           //21.03.17 ST - Debitor Liquidit„t
                           IF Customer."Credit Limit (LCY)" - Customer."Balance (LCY)"- ShipAmount < 0 THEN
                             checkcustcredit_style := 'Unfavorable'
                           ELSE
                             checkcustcredit_style := 'Standard';

                           //12.06.17 ST - W„hrungscode wird eingef„rbt
                           currency_style := TOPAS_Funktionen.SetCurrencyColor("Currency Code");

                           //13.06.17 ST ST - Hebt das Bemerkungs Feld rot hervor, wenn eine Bemerkung zum Auftrag vorhanden ist
                           IF Comment THEN
                             comment_style := 'Unfavorable'
                           ELSE
                             comment_style := 'Standard';

                           //TOPAS 24.03.20 ST - Buchungsdatum wird rot eingef„rbt, wenn der Wert 31.12.2055 ist
                           IF "Posting Date" = 31122055D THEN
                             postingdate_style := 'Unfavorable'
                           ELSE
                             postingdate_style := 'Standard';

                           //19.03.19 ST - Feld Preislisten Kalkulation nur fr System editierbar machen
                           IF "Territory Code" = 'SYSTEM' THEN BEGIN
                             preislisten_kalk_edit := TRUE;
                           END ELSE
                             preislisten_kalk_edit := FALSE;

                           //29.04.21 ST - Vorschau auf die Tracking EMail-Adresse - Herkunft kann unterschiedlich sein
                           tracking_email_preview := '';
                           tracking_email_wie_ab_edit := FALSE;
                           IF "Tracking via EMail" THEN BEGIN
                             tracking_email_wie_ab_edit := TRUE;
                             IF "Tracking EMail wie AB" THEN
                               tracking_email_preview := "AB EMail-Adresse"
                             ELSE BEGIN
                               tracking_email_preview := Customer."Tracking EMail-Adresse";
                             END;
                           END;

                           //09.12.20 ST - Status Docuware Deckblatt
                           IF (ControlReady) THEN BEGIN
                             CheckDocuWareStatus;
                           END;

                           //TOPAS Ende
                         END;

    ActionList=ACTIONS
    {
      { 1900000003;0 ;ActionContainer;
                      ActionContainerType=RelatedInformation }
      { 59      ;1   ;ActionGroup;
                      CaptionML=[DEU=Auf&trag;
                                 ENU=O&rder];
                      Image=Order }
      { 61      ;2   ;Action    ;
                      Name=Statistics;
                      ShortCutKey=F7;
                      CaptionML=[DEU=Statistik;
                                 ENU=Statistics];
                      Promoted=Yes;
                      Image=Statistics;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 OpenSalesOrderStatistics;
                                 SalesCalcDiscountByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 62      ;2   ;Action    ;
                      ShortCutKey=Shift+F7;
                      CaptionML=[DEU=Karte;
                                 ENU=Card];
                      RunObject=Page 21;
                      RunPageLink=No.=FIELD(Sell-to Customer No.);
                      Image=EditLines }
      { 122     ;2   ;Action    ;
                      Name=Dimensions;
                      AccessByPermission=TableData 348=R;
                      ShortCutKey=Shift+Ctrl+D;
                      CaptionML=[DEU=Dimensionen;
                                 ENU=Dimensions];
                      Image=Dimensions;
                      OnAction=BEGIN
                                 ShowDocDim;
                                 CurrPage.SAVERECORD;
                               END;
                                }
      { 78      ;2   ;Action    ;
                      CaptionML=[DEU=&Genehmigungen;
                                 ENU=A&pprovals];
                      Image=Approvals;
                      OnAction=VAR
                                 ApprovalEntries@1001 : Page 658;
                               BEGIN
                                 ApprovalEntries.Setfilters(DATABASE::"Sales Header","Document Type","No.");
                                 ApprovalEntries.RUN;
                               END;
                                }
      { 63      ;2   ;Action    ;
                      CaptionML=[DEU=Be&merkungen;
                                 ENU=Co&mments];
                      RunObject=Page 67;
                      RunPageLink=Document Type=FIELD(Document Type),
                                  No.=FIELD(No.),
                                  Document Line No.=CONST(0);
                      Image=ViewComments }
      { 259     ;2   ;Action    ;
                      CaptionML=[DEU=Transaktionspro&tokolleintr„ge fr Kreditkarten;
                                 ENU=Credit Cards Transaction Lo&g Entries];
                      RunObject=Page 829;
                      RunPageLink=Document No.=FIELD(No.),
                                  Customer No.=FIELD(Bill-to Customer No.);
                      Image=CreditCardLog }
      { 11      ;2   ;Action    ;
                      Name=AssemblyOrders;
                      AccessByPermission=TableData 90=R;
                      CaptionML=[DEU=Montageauftr„ge;
                                 ENU=Assembly Orders];
                      Image=AssemblyOrder;
                      OnAction=VAR
                                 AssembleToOrderLink@1000 : Record 904;
                               BEGIN
                                 AssembleToOrderLink.ShowAsmOrders(Rec);
                               END;
                                }
      { 79      ;1   ;ActionGroup;
                      Name=ActionGroupCRM;
                      CaptionML=[DEU=Dynamics CRM;
                                 ENU=Dynamics CRM];
                      Visible=CRMIntegrationEnabled }
      { 71      ;2   ;Action    ;
                      Name=CRMGoToSalesOrder;
                      CaptionML=[DEU=Verkaufsauftrag;
                                 ENU=Sales Order];
                      ToolTipML=[DEU=™ffnen Sie den gekoppelten Microsoft Dynamics CRM-Auftrag.;
                                 ENU=Open the coupled Microsoft Dynamics CRM sales order.];
                      Enabled=CRMIntegrationEnabled AND CRMIsCoupledToRecord;
                      Image=CoupledOrder;
                      OnAction=VAR
                                 CRMIntegrationManagement@1000 : Codeunit 5330;
                               BEGIN
                                 CRMIntegrationManagement.ShowCRMEntityFromRecordID(RECORDID);
                               END;
                                }
      { 13      ;1   ;ActionGroup;
                      CaptionML=[DEU=Belege;
                                 ENU=Documents];
                      Image=Documents }
      { 64      ;2   ;Action    ;
                      CaptionML=[DEU=&Lieferungen;
                                 ENU=S&hipments];
                      RunObject=Page 142;
                      RunPageView=SORTING(Order No.);
                      RunPageLink=Order No.=FIELD(No.);
                      Image=Shipment }
      { 65      ;2   ;Action    ;
                      CaptionML=[DEU=Rechnungen;
                                 ENU=Invoices];
                      RunObject=Page 143;
                      RunPageView=SORTING(Order No.);
                      RunPageLink=Order No.=FIELD(No.);
                      Image=Invoice }
      { 1000000072;2 ;Action    ;
                      Name=QuotePage;
                      CaptionML=DEU=Arch. Angebot;
                      Image=Quote;
                      OnAction=VAR
                                 ArchSalesHeader@1000000000 : Record 5107;
                                 PageManagement@1000000001 : Codeunit 700;
                               BEGIN
                                 //TOPAS + 05.06.18 ST
                                 ArchSalesHeader.SETRANGE("No.","Ursprungsangebotsnr.");
                                 IF ArchSalesHeader.FINDLAST THEN
                                   PageManagement.PageRun(ArchSalesHeader);
                                 //TOPAS -
                               END;
                                }
      { 15      ;1   ;ActionGroup;
                      CaptionML=[DEU=Lager;
                                 ENU=Warehouse];
                      Image=Warehouse }
      { 150     ;2   ;Action    ;
                      CaptionML=[DEU=Lager&belegzeilen;
                                 ENU=In&vt. Put-away/Pick Lines];
                      RunObject=Page 5774;
                      RunPageView=SORTING(Source Document,Source No.,Location Code);
                      RunPageLink=Source Document=CONST(Sales Order),
                                  Source No.=FIELD(No.);
                      Image=PickLines }
      { 168     ;2   ;Action    ;
                      CaptionML=[DEU=Warenausgangszeilen;
                                 ENU=Whse. Shipment Lines];
                      RunObject=Page 7341;
                      RunPageView=SORTING(Source Type,Source Subtype,Source No.,Source Line No.);
                      RunPageLink=Source Type=CONST(37),
                                  Source Subtype=FIELD(Document Type),
                                  Source No.=FIELD(No.);
                      Image=ShipmentLines }
      { 17      ;1   ;ActionGroup;
                      CaptionML=[DEU=Vorauszahlung;
                                 ENU=Prepayment];
                      Image=Prepayment }
      { 234     ;2   ;Action    ;
                      Name=PagePostedSalesPrepaymentInvoices;
                      CaptionML=[DEU=&Vorauszahlungsrechnungen;
                                 ENU=Prepa&yment Invoices];
                      RunObject=Page 143;
                      RunPageView=SORTING(Prepayment Order No.);
                      RunPageLink=Prepayment Order No.=FIELD(No.);
                      Image=PrepaymentInvoice }
      { 235     ;2   ;Action    ;
                      Name=PagePostedSalesPrepaymentCrMemos;
                      CaptionML=[DEU=Vorauszahlungsgu&tschriften;
                                 ENU=Prepayment Credi&t Memos];
                      RunObject=Page 144;
                      RunPageView=SORTING(Prepayment Order No.);
                      RunPageLink=Prepayment Order No.=FIELD(No.);
                      Image=PrepaymentCreditMemo }
      { 1000000003;1 ;ActionGroup;
                      CaptionML=DEU=&Musterberwachung }
      { 1000000004;2 ;Action    ;
                      Name=Musterberwachung;
                      Ellipsis=Yes;
                      Image=MovementWorksheet;
                      RunPageMode=Create;
                      OnAction=BEGIN
                                 //TOPAS + 19.01.18 ST
                                 TOPASPageManagement.OpenMusterberwachung("No.","Location Code");
                                 //TOPAS -
                               END;
                                }
      { 1000000074;1 ;ActionGroup;
                      CaptionML=DEU=Auftragseingangskontrolle }
      { 1000000076;2 ;Action    ;
                      Name=AU-Kontrolle;
                      Ellipsis=Yes;
                      RunPageMode=Create;
                      OnAction=BEGIN
                                 //TOPAS + 05.08.19 UB - AU-Kontrolle aufrufen
                                 AU_Nr_Kontroll.SETRANGE("No.","No.");
                                 REPORT.RUN(50125,TRUE,FALSE,AU_Nr_Kontroll);
                                 //TOPAS -
                               END;
                                }
      { 1000000007;1 ;ActionGroup;
                      CaptionML=DEU=&Hilfe }
      { 1000000006;2 ;Action    ;
                      Name=Help;
                      CaptionML=DEU=Hilfe;
                      Image=OnlineHelp;
                      OnAction=BEGIN
                                 //TOPAS + 21.03.17 ST - Einbindung der eigenen Hilfe zur Auftrags- und Servicekalkulationsbearbeitung
                                 OpenHelp;
                                 //TOPAS -
                               END;
                                }
      { 1900000004;0 ;ActionContainer;
                      ActionContainerType=ActionItems }
      { 47      ;1   ;ActionGroup;
                      CaptionML=[DEU=Genehmigung;
                                 ENU=Approval] }
      { 43      ;2   ;Action    ;
                      Name=Approve;
                      CaptionML=[DEU=Genehmigen;
                                 ENU=Approve];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Approve;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.ApproveRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 41      ;2   ;Action    ;
                      Name=Reject;
                      CaptionML=[DEU=Ablehnen;
                                 ENU=Reject];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      PromotedIsBig=Yes;
                      Image=Reject;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.RejectRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 39      ;2   ;Action    ;
                      Name=Delegate;
                      CaptionML=[DEU=Delegieren;
                                 ENU=Delegate];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=Delegate;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.DelegateRecordApprovalRequest(RECORDID);
                               END;
                                }
      { 37      ;2   ;Action    ;
                      Name=Comment;
                      CaptionML=[DEU=Bemerkungen;
                                 ENU=Comments];
                      Promoted=Yes;
                      Visible=OpenApprovalEntriesExistForCurrUser;
                      Image=ViewComments;
                      PromotedCategory=Category4;
                      OnAction=VAR
                                 ApprovalsMgmt@1000 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.GetApprovalComment(Rec);
                               END;
                                }
      { 21      ;1   ;ActionGroup;
                      CaptionML=[DEU=Freigeben;
                                 ENU=Release];
                      Image=ReleaseDoc }
      { 133     ;2   ;Action    ;
                      Name=Release;
                      ShortCutKey=Ctrl+F9;
                      CaptionML=[DEU=&Freigeben;
                                 ENU=Re&lease];
                      Promoted=Yes;
                      Image=ReleaseDoc;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleaseSalesDoc@1000 : Codeunit 414;
                               BEGIN
                                 //TOPAS + 18.05.17 ST
                                 TOPASBeleg_Pruefungen.CheckSalesOrderOnActions(Rec,NoSalesPriceCheck);
                                 //TOPAS -
                                 ReleaseSalesDoc.PerformManualRelease(Rec);
                               END;
                                }
      { 134     ;2   ;Action    ;
                      CaptionML=[DEU=Stat&us zurcksetzen;
                                 ENU=Re&open];
                      Promoted=Yes;
                      Image=ReOpen;
                      PromotedCategory=Process;
                      OnAction=VAR
                                 ReleaseSalesDoc@1001 : Codeunit 414;
                               BEGIN
                                 ReleaseSalesDoc.PerformManualReopen(Rec);
                               END;
                                }
      { 66      ;1   ;ActionGroup;
                      CaptionML=[DEU=F&unktion;
                                 ENU=F&unctions];
                      Image=Action }
      { 67      ;2   ;Action    ;
                      Name=CalculateInvoiceDiscount;
                      CaptionML=[DEU=&Rechnungsrab. berechnen;
                                 ENU=Calculate &Invoice Discount];
                      Image=CalculateInvoiceDiscount;
                      OnAction=BEGIN
                                 ApproveCalcInvDisc;
                                 SalesCalcDiscountByType.ResetRecalculateInvoiceDisc(Rec);
                               END;
                                }
      { 167     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Std.-Deb.-&Verkaufscodes holen;
                                 ENU=Get St&d. Cust. Sales Codes];
                      Image=CustomerCode;
                      OnAction=VAR
                                 StdCustSalesCode@1000 : Record 172;
                               BEGIN
                                 StdCustSalesCode.InsertSalesLines(Rec);
                               END;
                                }
      { 68      ;2   ;Action    ;
                      Name=CopyDocument;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Beleg kopieren;
                                 ENU=Copy Document];
                      Promoted=Yes;
                      Image=CopyDocument;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //TOPAS + 18.05.17 ST
                                 TOPASBeleg_Pruefungen.CheckSalesOrderOnActions(Rec,NoSalesPriceCheck);
                                 //TOPAS -

                                 CopySalesDoc.SetSalesHeader(Rec);
                                 CopySalesDoc.RUNMODAL;
                                 CLEAR(CopySalesDoc);
                                 IF GET("Document Type","No.") THEN;
                               END;
                                }
      { 154     ;2   ;Action    ;
                      Name=MoveNegativeLines;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Negative Zeilen bertragen;
                                 ENU=Move Negative Lines];
                      Image=MoveNegativeLines;
                      OnAction=BEGIN
                                 CLEAR(MoveNegSalesLines);
                                 MoveNegSalesLines.SetSalesHeader(Rec);
                                 MoveNegSalesLines.RUNMODAL;
                                 MoveNegSalesLines.ShowDocument;
                               END;
                                }
      { 196     ;2   ;Action    ;
                      Name=Archive Document;
                      CaptionML=[DEU=Beleg ar&chivieren;
                                 ENU=Archi&ve Document];
                      Image=Archive;
                      OnAction=BEGIN
                                 ArchiveManagement.ArchiveSalesDocument(Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 204     ;2   ;Action    ;
                      AccessByPermission=TableData 410=R;
                      CaptionML=[DEU=IC-Auftragsbest„t. senden;
                                 ENU=Send IC Sales Order Cnfmn.];
                      Image=IntercompanyOrder;
                      OnAction=VAR
                                 ICInOutboxMgt@1000 : Codeunit 427;
                                 ApprovalsMgmt@1003 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   ICInOutboxMgt.SendSalesDoc(Rec,FALSE);
                               END;
                                }
      { 69      ;2   ;ActionGroup;
                      Name=IncomingDocument;
                      CaptionML=[DEU=Eingehender Beleg;
                                 ENU=Incoming Document];
                      ActionContainerType=NewDocumentItems;
                      Image=Documents }
      { 60      ;3   ;Action    ;
                      Name=IncomingDocCard;
                      CaptionML=[DEU=Eingehenden Beleg anzeigen;
                                 ENU=View Incoming Document];
                      ToolTipML=;
                      Enabled=HasIncomingDocument;
                      Image=ViewOrder;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 IncomingDocument.ShowCardFromEntryNo("Incoming Document Entry No.");
                               END;
                                }
      { 57      ;3   ;Action    ;
                      Name=SelectIncomingDoc;
                      AccessByPermission=TableData 130=R;
                      CaptionML=[DEU=Eingehenden Beleg ausw„hlen;
                                 ENU=Select Incoming Document];
                      ToolTipML=;
                      Image=SelectLineToApply;
                      OnAction=VAR
                                 IncomingDocument@1000 : Record 130;
                               BEGIN
                                 VALIDATE("Incoming Document Entry No.",IncomingDocument.SelectIncomingDocument("Incoming Document Entry No."));
                               END;
                                }
      { 55      ;3   ;Action    ;
                      Name=IncomingDocAttachFile;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Eingehenden Beleg aus Datei erstellen;
                                 ENU=Create Incoming Document from File];
                      ToolTipML=;
                      Enabled=NOT HasIncomingDocument;
                      Image=Attach;
                      OnAction=VAR
                                 IncomingDocumentAttachment@1000 : Record 133;
                               BEGIN
                                 IncomingDocumentAttachment.NewAttachmentFromSalesDocument(Rec);
                               END;
                                }
      { 53      ;3   ;Action    ;
                      Name=RemoveIncomingDoc;
                      CaptionML=[DEU=Eingehenden Beleg entfernen;
                                 ENU=Remove Incoming Document];
                      ToolTipML=;
                      Enabled=HasIncomingDocument;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 "Incoming Document Entry No." := 0;
                               END;
                                }
      { 23      ;1   ;ActionGroup;
                      CaptionML=[DEU=Planen;
                                 ENU=Plan];
                      Image=Planning }
      { 197     ;2   ;Action    ;
                      AccessByPermission=TableData 99000880=R;
                      CaptionML=[DEU=Lie&ferterminzusagen;
                                 ENU=Order &Promising];
                      Image=OrderPromising;
                      OnAction=VAR
                                 OrderPromisingLine@1000 : TEMPORARY Record 99000880;
                               BEGIN
                                 OrderPromisingLine.SETRANGE("Source Type","Document Type");
                                 OrderPromisingLine.SETRANGE("Source ID","No.");
                                 PAGE.RUNMODAL(PAGE::"Order Promising Lines",OrderPromisingLine);
                               END;
                                }
      { 248     ;2   ;Action    ;
                      CaptionML=[DEU=Bedarfsbersicht;
                                 ENU=Demand Overview];
                      Image=Forecast;
                      OnAction=VAR
                                 DemandOverview@1000 : Page 5830;
                               BEGIN
                                 DemandOverview.SetCalculationParameter(TRUE);
                                 DemandOverview.Initialize(0D,1,"No.",'','');
                                 DemandOverview.RUNMODAL;
                               END;
                                }
      { 121     ;2   ;Action    ;
                      CaptionML=[DEU=Pla&nung;
                                 ENU=Pla&nning];
                      Image=Planning;
                      OnAction=VAR
                                 SalesPlanForm@1001 : Page 99000883;
                               BEGIN
                                 SalesPlanForm.SetSalesOrder("No.");
                                 SalesPlanForm.RUNMODAL;
                               END;
                                }
      { 25      ;1   ;ActionGroup;
                      CaptionML=[DEU=Genehmigungsanforderung;
                                 ENU=Request Approval];
                      Image=SendApprovalRequest }
      { 250     ;2   ;Action    ;
                      Name=SendApprovalRequest;
                      CaptionML=[DEU=&Genehmigungsanforderung senden;
                                 ENU=Send A&pproval Request];
                      Promoted=Yes;
                      Enabled=NOT OpenApprovalEntriesExist;
                      Image=SendApprovalRequest;
                      PromotedCategory=Category9;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 IF ApprovalsMgmt.CheckSalesApprovalsWorkflowEnabled(Rec) THEN
                                   ApprovalsMgmt.OnSendSalesDocForApproval(Rec);
                               END;
                                }
      { 251     ;2   ;Action    ;
                      Name=CancelApprovalRequest;
                      CaptionML=[DEU=&Genehmigungsanforderung stornieren;
                                 ENU=Cancel Approval Re&quest];
                      Promoted=Yes;
                      Enabled=OpenApprovalEntriesExist;
                      Image=Cancel;
                      PromotedCategory=Category9;
                      OnAction=VAR
                                 ApprovalsMgmt@1001 : Codeunit 1535;
                               BEGIN
                                 ApprovalsMgmt.OnCancelSalesApprovalRequest(Rec);
                               END;
                                }
      { 19      ;1   ;ActionGroup;
                      CaptionML=[DEU=Kreditkarte;
                                 ENU=Credit Card];
                      Visible=False;
                      Image=AuthorizeCreditCard }
      { 256     ;2   ;Action    ;
                      CaptionML=[DEU=Autorisieren;
                                 ENU=Authorize];
                      Image=AuthorizeCreditCard;
                      OnAction=BEGIN
                                 Authorize;
                               END;
                                }
      { 257     ;2   ;Action    ;
                      CaptionML=[DEU=Void A&uthorize;
                                 ENU=Void A&uthorize];
                      Image=VoidCreditCard;
                      OnAction=BEGIN
                                 Void;
                               END;
                                }
      { 3       ;1   ;ActionGroup;
                      CaptionML=[DEU=Lager;
                                 ENU=Warehouse];
                      Image=Warehouse }
      { 148     ;2   ;Action    ;
                      AccessByPermission=TableData 7342=R;
                      Ellipsis=Yes;
                      CaptionML=[DEU=La&gerbelege erstellen;
                                 ENU=Create Inventor&y Put-away/Pick];
                      Promoted=Yes;
                      Image=CreateInventoryPickup;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 CreateInvtPutAwayPick;

                                 IF NOT FIND('=><') THEN
                                   INIT;
                               END;
                                }
      { 149     ;2   ;Action    ;
                      AccessByPermission=TableData 7320=R;
                      CaptionML=[DEU=&Warenausgang erstellen;
                                 ENU=Create &Whse. Shipment];
                      Image=NewShipment;
                      OnAction=VAR
                                 GetSourceDocOutbound@1001 : Codeunit 5752;
                               BEGIN
                                 GetSourceDocOutbound.CreateFromSalesOrder(Rec);

                                 IF NOT FIND('=><') THEN
                                   INIT;
                               END;
                                }
      { 73      ;1   ;ActionGroup;
                      CaptionML=[DEU=Bu&chung;
                                 ENU=P&osting];
                      Image=Post }
      { 75      ;2   ;Action    ;
                      Name=Post;
                      ShortCutKey=F9;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Bu&chen;
                                 ENU=P&ost];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostOrder;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //TOPAS + 21.03.17 ST
                                 PostCheck;
                                 //TOPAS -

                                 Post(CODEUNIT::"Sales-Post (Yes/No)");
                               END;
                                }
      { 76      ;2   ;Action    ;
                      ShortCutKey=Shift+F9;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Buchen und d&rucken;
                                 ENU=Post and &Print];
                      Promoted=Yes;
                      PromotedIsBig=Yes;
                      Image=PostPrint;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //TOPAS + 21.03.17 ST
                                 PostCheck;
                                 //TOPAS-

                                 Post(CODEUNIT::"Sales-Post + Print");
                               END;
                                }
      { 29      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Buchen und per E-Mail senden;
                                 ENU=Post and Email];
                      Image=PostMail;
                      OnAction=VAR
                                 SalesPostPrint@1000 : Codeunit 82;
                               BEGIN
                                 //TOPAS + 21.03.17 ST
                                 PostCheck;
                                 //TOPAS -

                                 SalesPostPrint.PostAndEmail(Rec);
                               END;
                                }
      { 74      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Testbericht;
                                 ENU=Test Report];
                      Image=TestReport;
                      OnAction=BEGIN
                                 ReportPrint.PrintSalesHeader(Rec);
                               END;
                                }
      { 77      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=&Stapelbuchen;
                                 ENU=Post &Batch];
                      Image=PostBatch;
                      OnAction=BEGIN
                                 REPORT.RUNMODAL(REPORT::"Batch Post Sales Orders",TRUE,TRUE,Rec);
                                 CurrPage.UPDATE(FALSE);
                               END;
                                }
      { 7       ;2   ;Action    ;
                      CaptionML=[DEU=Aus Aufgabenwarteschlange entfernen;
                                 ENU=Remove From Job Queue];
                      Visible=JobQueueVisible;
                      Image=RemoveLine;
                      OnAction=BEGIN
                                 CancelBackgroundPosting;
                               END;
                                }
      { 51      ;2   ;Action    ;
                      Name=PreviewPosting;
                      CaptionML=[DEU=Buchungsvorschau;
                                 ENU=Preview Posting];
                      Image=ViewPostedOrder;
                      OnAction=BEGIN
                                 ShowPreview;
                               END;
                                }
      { 236     ;2   ;ActionGroup;
                      CaptionML=[DEU=&Vorauszahlung;
                                 ENU=Prepa&yment];
                      Image=Prepayment }
      { 231     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Vorauszahlungs&testbericht;
                                 ENU=Prepayment &Test Report];
                      Image=PrepaymentSimulation;
                      OnAction=BEGIN
                                 ReportPrint.PrintSalesHeaderPrepmt(Rec);
                               END;
                                }
      { 232     ;3   ;Action    ;
                      Name=PostPrepaymentInvoice;
                      Ellipsis=Yes;
                      CaptionML=[DEU=&Vorauszahlungsrechnung buchen;
                                 ENU=Post Prepayment &Invoice];
                      Image=PrepaymentPost;
                      OnAction=VAR
                                 SalesPostYNPrepmt@1000 : Codeunit 443;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   SalesPostYNPrepmt.PostPrepmtInvoiceYN(Rec,FALSE);
                               END;
                                }
      { 237     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Vorauszahlungsr&echnung buchen und drucken;
                                 ENU=Post and Print Prepmt. Invoic&e];
                      Image=PrepaymentPostPrint;
                      OnAction=VAR
                                 SalesPostYNPrepmt@1000 : Codeunit 443;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   SalesPostYNPrepmt.PostPrepmtInvoiceYN(Rec,TRUE);
                               END;
                                }
      { 233     ;3   ;Action    ;
                      Name=PostPrepaymentCreditMemo;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Vorauszahlungsguts&chrift buchen;
                                 ENU=Post Prepayment &Credit Memo];
                      Image=PrepaymentPost;
                      OnAction=VAR
                                 SalesPostYNPrepmt@1000 : Codeunit 443;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   SalesPostYNPrepmt.PostPrepmtCrMemoYN(Rec,FALSE);
                               END;
                                }
      { 238     ;3   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=V&orauszahlungsgutschrift buchen und drucken;
                                 ENU=Post and Print Prepmt. Cr. Mem&o];
                      Image=PrepaymentPostPrint;
                      OnAction=VAR
                                 SalesPostYNPrepmt@1000 : Codeunit 443;
                               BEGIN
                                 IF ApprovalsMgmt.PrePostApprovalCheckSales(Rec) THEN
                                   SalesPostYNPrepmt.PostPrepmtCrMemoYN(Rec,TRUE);
                               END;
                                }
      { 223     ;1   ;ActionGroup;
                      CaptionML=[DEU=&Drucken;
                                 ENU=&Print];
                      Visible=False;
                      Image=Print }
      { 225     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Arbeitsschein;
                                 ENU=Work Order];
                      Image=Print;
                      OnAction=BEGIN
                                 DocPrint.PrintSalesOrder(Rec,Usage::"Work Order");
                               END;
                                }
      { 5       ;2   ;Action    ;
                      CaptionML=[DEU=Kommissionieranweisung;
                                 ENU=Pick Instruction];
                      Image=Print;
                      OnAction=BEGIN
                                 DocPrint.PrintSalesOrder(Rec,Usage::"Pick Instruction");
                               END;
                                }
      { 31      ;1   ;ActionGroup;
                      CaptionML=[DEU=&Auftragsbest„tigung;
                                 ENU=&Order Confirmation];
                      Image=Email }
      { 33      ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Best„tigung per E-Mail senden;
                                 ENU=Email Confirmation];
                      Image=Email;
                      OnAction=BEGIN
                                 //TOPAS 18.05.17 ST
                                 TOPASBeleg_Pruefungen.CheckSalesOrderOnActions(Rec,NoSalesPriceCheck);
                                 //TOPAS Ende

                                 DocPrint.EmailSalesHeader(Rec);
                               END;
                                }
      { 224     ;2   ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=[DEU=Best„tigung drucken;
                                 ENU=Print Confirmation];
                      Image=Print;
                      OnAction=BEGIN
                                 //TOPAS + 18.05.17 ST
                                 TOPASBeleg_Pruefungen.CheckSalesOrderOnActions(Rec,NoSalesPriceCheck);
                                 //TOPAS -

                                 DocPrint.PrintSalesOrder(Rec,Usage::"Order Confirmation");
                               END;
                                }
      { 1000000056;1 ;ActionGroup;
                      CaptionML=DEU=Funktionen }
      { 1000000085;2 ;Action    ;
                      Name=CopyShipAddresstoEndCust;
                      CaptionML=DEU=Lief. Adr. n. End. Adr.;
                      Image=ExportShipment;
                      OnAction=BEGIN
                                 //TOPAS + 10.01.22 - Lief. an Adresse nach Endkunden Adresse kopieren
                                 Endkunde := "Ship-to Name";
                                 "Endkunde Adresse" := "Ship-to Address";
                                 "Endkunde PLZ-Code" := "Ship-to Post Code";
                                 "Endkunde Ort" := "Ship-to City";
                                 "Endkunde Land" := "Ship-to Country/Region Code";
                                 "Endkunde Kontakt" := "Ship-to Contact";
                                 //TOPAS -
                               END;
                                }
      { 1000000055;2 ;Action    ;
                      Name=CheckProjectNo;
                      CaptionML=DEU=Projektnr. berprfen;
                      Image=CheckRulesSyntax;
                      OnAction=BEGIN
                                 //TOPAS + 14.06.17 ST - šberprfen der Kampagnennnr.
                                 CheckProjectNo;
                                 //TOPAS -
                               END;
                                }
      { 1000000057;2 ;Action    ;
                      Name=ChangeProjectNo;
                      CaptionML=DEU=Projektnr. „ndern;
                      RunObject=Page 50013;
                      RunPageView=WHERE(Document Type=FILTER(Order));
                      RunPageLink=Document No.=FIELD(No.);
                      Image=CampaignEntries }
      { 1000000068;2 ;Action    ;
                      Name=OrderNoCopy;
                      CaptionML=DEU=Auftragsnr. kopieren;
                      Promoted=Yes;
                      Image=Save;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //TOPAS + 29.11.17 ST - Funktion zum Kopieren in die Zwischenablage
                                 ClipboardHandler.SetClipboardText("No.");
                                 //TOPAS -
                               END;
                                }
      { 1000000070;2 ;Action    ;
                      Name=RefreshServiceSalesPrices;
                      CaptionML=DEU=&Servicepreise aktualisieren;
                      Promoted=Yes;
                      Image=Recalculate;
                      PromotedCategory=Process;
                      OnAction=BEGIN
                                 //TOPAS + 11.04.18 ST - Alle Service VK-Preise inkl. Service Kalkulationen k”nnen mit dem Kurs zum Belegdatum neu gerechnet werden
                                 TOPASServiceModul.RefreshAllServiceSalesPriceCalculations("No.");
                                 //TOPAS -
                               END;
                                }
      { 1000000038;1 ;ActionGroup;
                      CaptionML=DEU=TOPAS Druck }
      { 1000000041;2 ;Action    ;
                      Ellipsis=Yes;
                      CaptionML=DEU=Deckblatt drucken;
                      Image=Print;
                      OnAction=VAR
                                 PrintDoc@1000000000 : Record 36;
                               BEGIN
                                 //TOPAS + 08.12.15 ST  - šberprft, ob die Generierung des Servicevertrages m”glich ist
                                 TOPASBeleg_Pruefungen.CheckSalesOrderCalculationsBeforePost("No.");
                                 COMMIT;
                                 PrintDoc.SETRANGE("No.","No.");
                                 REPORT.RUN(50159,TRUE,FALSE,PrintDoc);
                                 //TOPAS -
                               END;
                                }
      { 1000000042;2 ;Action    ;
                      CaptionML=DEU=Packzettel drucken;
                      Image=Print;
                      OnAction=VAR
                                 OrderPacking@1000000000 : Record 36;
                               BEGIN
                                 //TOPAS + 21.03.17 ST - Packzettel Druckaufruf
                                 OrderPacking.SETRANGE("No.","No.");
                                 REPORT.RUN(50071,TRUE,FALSE,OrderPacking);
                                 //TOPAS -
                               END;
                                }
      { 1000000075;2 ;Action    ;
                      Name=DocuWareDeckblatt;
                      CaptionML=DEU=DocuWare Deckblatt;
                      Image=DocInBrowser;
                      OnAction=BEGIN
                                 //TOPAS + 25.02.20 ST - druckt das Deckblatt direkt an DocuWare Printer
                                 TOPASBeleg_Pruefungen.CheckSalesOrderCalculationsBeforePost("No.");
                                 COMMIT;
                                 DocuWare.PrintToDWCloud("Document Type","No.",'Deckblatt');
                                 //TOPAS + 09.12.20 ST - DocuWare Status Update
                                 "Docuware Gesendet" := TRUE;
                                 CurrPage.UPDATE;
                                 //TOPAS -
                               END;
                                }
    }
  }
  CONTROLS
  {
    { 1900000001;0;Container;
                ContainerType=ContentArea }

    { 1   ;1   ;Group     ;
                CaptionML=[DEU=Allgemein;
                           ENU=General] }

    { 1000000079;2;Group  ;
                Visible=DocuwareControlEnable;
                GroupType=Group }

    { 1000000080;3;Field  ;
                Name=DocuwareControl;
                SourceExpr=DocuwareControlText;
                ControlAddIn=[CreateDocuWareStatusTextbox;PublicKeyToken=700a341bbc28e440] }

    { 2   ;2   ;Field     ;
                SourceExpr="No.";
                Importance=Promoted;
                Visible=DocNoVisible;
                OnAssistEdit=BEGIN
                               IF AssistEdit(xRec) THEN
                                 CurrPage.UPDATE;
                             END;
                              }

    { 4   ;2   ;Field     ;
                SourceExpr="Sell-to Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             SelltoCustomerNoOnAfterValidat;
                           END;

                ShowMandatory=TRUE }

    { 157 ;2   ;Field     ;
                SourceExpr="Sell-to Contact No.";
                Importance=Additional;
                OnValidate=BEGIN
                             IF GETFILTER("Sell-to Contact No.") = xRec."Sell-to Contact No." THEN
                               IF "Sell-to Contact No." <> xRec."Sell-to Contact No." THEN
                                 SETRANGE("Sell-to Contact No.");
                           END;
                            }

    { 6   ;2   ;Field     ;
                SourceExpr="Sell-to Customer Name";
                QuickEntry=FALSE }

    { 1000000061;2;Field  ;
                SourceExpr="Sell-to Customer Name 2";
                Importance=Additional }

    { 81  ;2   ;Field     ;
                SourceExpr="Sell-to Address" }

    { 83  ;2   ;Field     ;
                SourceExpr="Sell-to Address 2";
                Importance=Additional }

    { 72  ;2   ;Field     ;
                SourceExpr="Sell-to Post Code";
                Importance=Additional }

    { 86  ;2   ;Field     ;
                SourceExpr="Sell-to City";
                QuickEntry=FALSE }

    { 1000000064;2;Field  ;
                SourceExpr="Sell-to Country/Region Code" }

    { 8   ;2   ;Field     ;
                SourceExpr="Sell-to Contact";
                Importance=Additional }

    { 1000000000;2;Field  ;
                SourceExpr=Kontaktperson }

    { 198 ;2   ;Field     ;
                SourceExpr="No. of Archived Versions";
                Importance=Additional }

    { 12  ;2   ;Field     ;
                SourceExpr="Posting Date";
                StyleExpr=postingdate_Style;
                QuickEntry=FALSE }

    { 14  ;2   ;Field     ;
                SourceExpr="Order Date";
                Importance=Promoted;
                QuickEntry=FALSE }

    { 45  ;2   ;Field     ;
                SourceExpr="Document Date";
                QuickEntry=FALSE }

    { 135 ;2   ;Field     ;
                SourceExpr="Requested Delivery Date";
                Visible=FALSE }

    { 137 ;2   ;Field     ;
                SourceExpr="Promised Delivery Date";
                Importance=Additional;
                Visible=FALSE;
                OnValidate=BEGIN
                             //TOPAS 31.05.17 ST
                             IF "Promised Delivery Date" = 31122054D THEN
                               ERROR(Text50009,"Promised Delivery Date");
                             //TOPAS Ende
                           END;
                            }

    { 243 ;2   ;Field     ;
                SourceExpr="Quote No.";
                Importance=Additional }

    { 155 ;2   ;Field     ;
                SourceExpr="External Document No.";
                Importance=Promoted;
                ShowMandatory=ExternalDocNoMandatory }

    { 1000000011;2;Field  ;
                SourceExpr="Your Reference" }

    { 1000000002;2;Field  ;
                Name=Currency Code_;
                SourceExpr="Currency Code";
                Importance=Promoted;
                StyleExpr=currency_style;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscountByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 1000000008;2;Field  ;
                SourceExpr="Betreuer Innendienst" }

    { 10  ;2   ;Field     ;
                SourceExpr="Salesperson Code";
                OnValidate=BEGIN
                             SalespersonCodeOnAfterValidate;
                           END;

                QuickEntry=FALSE }

    { 1000000009;2;Field  ;
                SourceExpr=Teams;
                Importance=Additional }

    { 1000000010;2;Field  ;
                SourceExpr="Territory Code" }

    { 1148;2   ;Field     ;
                SourceExpr="Campaign No." }

    { 1000000066;2;Field  ;
                SourceExpr=Amount }

    { 245 ;2   ;Field     ;
                SourceExpr="Opportunity No.";
                Importance=Additional;
                Visible=FALSE }

    { 124 ;2   ;Field     ;
                SourceExpr="Responsibility Center";
                Importance=Additional;
                Visible=FALSE }

    { 241 ;2   ;Field     ;
                SourceExpr="Assigned User ID";
                Importance=Additional }

    { 9   ;2   ;Field     ;
                SourceExpr="Job Queue Status";
                Importance=Additional;
                Visible=FALSE }

    { 1000000071;2;Field  ;
                SourceExpr="Preislisten Kalkulation";
                Editable=preislisten_kalk_edit;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 1000000073;2;Field  ;
                CaptionML=DEU=Preise basieren auf;
                SourceExpr=Preisliste;
                Editable=preislisten_kalk_edit }

    { 129 ;2   ;Field     ;
                SourceExpr=Status;
                Importance=Promoted;
                QuickEntry=FALSE }

    { 1000000012;2;Field  ;
                CaptionML=DEU=Rahmenauftrag;
                SourceExpr=BlanketOrder;
                Importance=Additional;
                Editable=FALSE }

    { 1000000054;2;Field  ;
                SourceExpr=Comment;
                Editable=FALSE;
                StyleExpr=comment_style }

    { 58  ;1   ;Part      ;
                Name=SalesLines;
                SubPageLink=Document No.=FIELD(No.);
                PagePartID=Page46;
                Editable=DynamicEditable;
                UpdatePropagation=Both }

    { 1905885101;1;Group  ;
                CaptionML=[DEU=Fakturierung;
                           ENU=Invoicing] }

    { 16  ;2   ;Field     ;
                SourceExpr="Bill-to Customer No.";
                Importance=Promoted;
                OnValidate=BEGIN
                             BilltoCustomerNoOnAfterValidat;
                           END;
                            }

    { 1000000067;2;Field  ;
                SourceExpr="VAT Registration No." }

    { 159 ;2   ;Field     ;
                SourceExpr="Bill-to Contact No.";
                Importance=Additional }

    { 18  ;2   ;Field     ;
                SourceExpr="Bill-to Name" }

    { 1000000060;2;Field  ;
                SourceExpr="Bill-to Name 2" }

    { 20  ;2   ;Field     ;
                SourceExpr="Bill-to Address" }

    { 22  ;2   ;Field     ;
                SourceExpr="Bill-to Address 2";
                Importance=Additional }

    { 89  ;2   ;Field     ;
                SourceExpr="Bill-to Post Code";
                Importance=Additional }

    { 24  ;2   ;Field     ;
                SourceExpr="Bill-to City" }

    { 1000000062;2;Field  ;
                SourceExpr="Bill-to Country/Region Code" }

    { 26  ;2   ;Field     ;
                SourceExpr="Bill-to Contact";
                Importance=Additional }

    { 84  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 1 Code";
                OnValidate=BEGIN
                             ShortcutDimension1CodeOnAfterV;
                           END;
                            }

    { 92  ;2   ;Field     ;
                SourceExpr="Shortcut Dimension 2 Code";
                OnValidate=BEGIN
                             ShortcutDimension2CodeOnAfterV;
                           END;
                            }

    { 28  ;2   ;Field     ;
                SourceExpr="Payment Terms Code";
                Importance=Promoted }

    { 30  ;2   ;Field     ;
                SourceExpr="Due Date";
                Importance=Promoted }

    { 32  ;2   ;Field     ;
                SourceExpr="Payment Discount %" }

    { 34  ;2   ;Field     ;
                SourceExpr="Pmt. Discount Date" }

    { 105 ;2   ;Field     ;
                SourceExpr="Payment Method Code" }

    { 27  ;2   ;Field     ;
                SourceExpr="Direct Debit Mandate ID" }

    { 131 ;2   ;Field     ;
                SourceExpr="Prices Including VAT";
                OnValidate=BEGIN
                             PricesIncludingVATOnAfterValid;
                           END;
                            }

    { 221 ;2   ;Field     ;
                SourceExpr="VAT Bus. Posting Group" }

    { 226 ;2   ;Field     ;
                SourceExpr="Credit Card No." }

    { 253 ;2   ;Field     ;
                CaptionML=[DEU=Kreditkartennummer (letzte vier Stellen);
                           ENU=Cr. Card Number (Last 4 Digits)];
                SourceExpr=GetCreditcardNumber }

    { 1000000005;2;Field  ;
                CaptionML=DEU=VK-Preis nicht prfen;
                SourceExpr=NoSalesPriceCheck }

    { 1906801201;1;Group  ;
                CaptionML=[DEU=Lieferung;
                           ENU=Shipping] }

    { 36  ;2   ;Field     ;
                SourceExpr="Ship-to Code";
                Importance=Promoted }

    { 38  ;2   ;Field     ;
                SourceExpr="Ship-to Name" }

    { 1000000059;2;Field  ;
                SourceExpr="Ship-to Name 2" }

    { 40  ;2   ;Field     ;
                SourceExpr="Ship-to Address" }

    { 42  ;2   ;Field     ;
                SourceExpr="Ship-to Address 2";
                Importance=Additional }

    { 97  ;2   ;Field     ;
                SourceExpr="Ship-to Post Code";
                Importance=Promoted }

    { 44  ;2   ;Field     ;
                SourceExpr="Ship-to City" }

    { 1000000063;2;Field  ;
                SourceExpr="Ship-to Country/Region Code" }

    { 46  ;2   ;Field     ;
                SourceExpr="Ship-to Contact";
                Importance=Additional }

    { 94  ;2   ;Field     ;
                SourceExpr="Location Code";
                Importance=Promoted;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                           END;
                            }

    { 141 ;2   ;Field     ;
                SourceExpr="Outbound Whse. Handling Time";
                Importance=Additional }

    { 48  ;2   ;Field     ;
                SourceExpr="Shipment Method Code";
                Importance=Promoted }

    { 107 ;2   ;Field     ;
                SourceExpr="Shipping Agent Code";
                Importance=Additional }

    { 1000000013;2;Field  ;
                SourceExpr=Spediteuraccount }

    { 139 ;2   ;Field     ;
                SourceExpr="Shipping Agent Service Code";
                Importance=Additional }

    { 143 ;2   ;Field     ;
                SourceExpr="Shipping Time" }

    { 145 ;2   ;Field     ;
                SourceExpr="Late Order Shipping";
                Importance=Additional }

    { 109 ;2   ;Field     ;
                SourceExpr="Package Tracking No.";
                Importance=Additional }

    { 50  ;2   ;Field     ;
                SourceExpr="Shipment Date";
                Importance=Promoted }

    { 119 ;2   ;Field     ;
                SourceExpr="Shipping Advice";
                Importance=Promoted;
                OnValidate=BEGIN
                             IF "Shipping Advice" <> xRec."Shipping Advice" THEN
                               IF NOT CONFIRM(Text001,FALSE,FIELDCAPTION("Shipping Advice")) THEN
                                 ERROR(Text002);
                           END;
                            }

    { 1000000014;1;Group  ;
                CaptionML=[DEU=Endkunde;
                           ENU=End Customer];
                GroupType=Group }

    { 1000000015;2;Field  ;
                SourceExpr=Endkunde }

    { 1000000016;2;Field  ;
                SourceExpr="Endkunde Adresse" }

    { 1000000017;2;Field  ;
                SourceExpr="Endkunde PLZ-Code" }

    { 1000000018;2;Field  ;
                SourceExpr="Endkunde Ort" }

    { 1000000019;2;Field  ;
                SourceExpr="Endkunde Land" }

    { 1000000020;2;Field  ;
                SourceExpr="Endkunde Kontakt" }

    { 1000000021;2;Field  ;
                SourceExpr="Endkunde Telefonnr." }

    { 1000000022;2;Field  ;
                SourceExpr="Endkunde E-Mail" }

    { 1000000024;2;Field  ;
                SourceExpr="Systemhaus Kontakt" }

    { 1000000023;2;Field  ;
                SourceExpr="Systemhaus E-Mail" }

    { 1907468901;1;Group  ;
                CaptionML=[DEU=Auáenhandel;
                           ENU=Foreign Trade] }

    { 111 ;2   ;Field     ;
                SourceExpr="Currency Code";
                Importance=Promoted;
                StyleExpr=currency_style;
                OnValidate=BEGIN
                             CurrPage.UPDATE;
                             SalesCalcDiscountByType.ApplyDefaultInvoiceDiscount(0,Rec);
                           END;

                OnAssistEdit=BEGIN
                               CLEAR(ChangeExchangeRate);
                               IF "Posting Date" <> 0D THEN
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor","Posting Date")
                               ELSE
                                 ChangeExchangeRate.SetParameter("Currency Code","Currency Factor",WORKDATE);
                               IF ChangeExchangeRate.RUNMODAL = ACTION::OK THEN BEGIN
                                 VALIDATE("Currency Factor",ChangeExchangeRate.GetParameter);
                                 CurrPage.UPDATE;
                               END;
                               CLEAR(ChangeExchangeRate);
                             END;
                              }

    { 52  ;2   ;Field     ;
                SourceExpr="EU 3-Party Trade" }

    { 54  ;2   ;Field     ;
                SourceExpr="Transaction Type" }

    { 103 ;2   ;Field     ;
                SourceExpr="Transaction Specification" }

    { 56  ;2   ;Field     ;
                SourceExpr="Transport Method" }

    { 99  ;2   ;Field     ;
                SourceExpr="Exit Point" }

    { 101 ;2   ;Field     ;
                SourceExpr=Area }

    { 1000000065;2;Field  ;
                SourceExpr=Ausfuhrbegleitdokument }

    { 1900201301;1;Group  ;
                CaptionML=[DEU=Vorauszahlung;
                           ENU=Prepayment] }

    { 228 ;2   ;Field     ;
                SourceExpr="Prepayment %";
                Importance=Promoted;
                OnValidate=BEGIN
                             Prepayment37OnAfterValidate;
                           END;
                            }

    { 229 ;2   ;Field     ;
                SourceExpr="Compress Prepayment" }

    { 162 ;2   ;Field     ;
                SourceExpr="Prepmt. Payment Terms Code" }

    { 239 ;2   ;Field     ;
                SourceExpr="Prepayment Due Date";
                Importance=Promoted }

    { 164 ;2   ;Field     ;
                SourceExpr="Prepmt. Payment Discount %" }

    { 70  ;2   ;Field     ;
                SourceExpr="Prepmt. Pmt. Discount Date" }

    { 1000000025;1;Group  ;
                CaptionML=DEU=Kommunikation & Infos;
                GroupType=Group }

    { 1000000046;2;Group  ;
                CaptionML=DEU=E-Mail Verkehr;
                GroupType=Group }

    { 1000000001;3;Field  ;
                CaptionML=DEU=AB via EMail;
                SourceExpr=Customer."AB via EMail";
                Editable=FALSE }

    { 1000000029;3;Field  ;
                CaptionML=DEU=Rechnung via EMail;
                SourceExpr=Customer."Rech via EMail";
                Editable=FALSE }

    { 1000000047;3;Field  ;
                SourceExpr="AB EMail-Adresse";
                OnValidate=BEGIN
                             //TOPAS + 19.10.18 ST
                             CheckFieldValueWithFieldLength(FIELDNO("AB EMail-Adresse"),xRec."AB EMail-Adresse","AB EMail-Adresse");
                             //TOPAS -
                           END;
                            }

    { 1000000048;3;Field  ;
                SourceExpr="Rech EMail-Adresse";
                OnValidate=BEGIN
                             //TOPAS + 19.10.18 ST
                             CheckFieldValueWithFieldLength(FIELDNO("Rech EMail-Adresse"),xRec."Rech EMail-Adresse","Rech EMail-Adresse");
                             //TOPAS -
                           END;
                            }

    { 1000000049;3;Field  ;
                SourceExpr="Service EMail-Adresse";
                OnValidate=BEGIN
                             //TOPAS + 19.10.18 ST
                             CheckFieldValueWithFieldLength(FIELDNO("Service EMail-Adresse"),xRec."Service EMail-Adresse","Service EMail-Adresse");
                             //TOPAS -
                           END;
                            }

    { 1000000069;3;Field  ;
                SourceExpr="Lizenz EMail-Adresse";
                OnValidate=BEGIN
                             //TOPAS + 19.10.18 ST
                             CheckFieldValueWithFieldLength(FIELDNO("Lizenz EMail-Adresse"),xRec."Lizenz EMail-Adresse","Lizenz EMail-Adresse");
                             //TOPAS -
                           END;
                            }

    { 1000000081;3;Field  ;
                SourceExpr="Tracking via EMail";
                OnValidate=BEGIN
                             //TOPAS + 29.04.21 ST
                             CurrPage.UPDATE;
                             //TOPAS -
                           END;
                            }

    { 1000000082;3;Field  ;
                SourceExpr="Tracking EMail wie AB";
                Editable=tracking_email_wie_ab_edit;
                OnValidate=BEGIN
                             //TOPAS + 29.04.21 ST
                             CurrPage.UPDATE;
                             //TOPAS -
                           END;
                            }

    { 1000000083;3;Field  ;
                Name=tracking_email_preview;
                CaptionML=DEU=Vorschau Tracking EMail-Adresse;
                SourceExpr=tracking_email_preview;
                Editable=FALSE }

    { 1000000053;3;Field  ;
                SourceExpr="Language Code";
                Importance=Promoted }

    { 1000000052;2;Group  ;
                CaptionML=DEU=Sonstiges;
                GroupType=Group }

    { 1000000058;3;Field  ;
                SourceExpr="Ursprungsangebotsnr." }

    { 1000000026;3;Field  ;
                Name=Posting Date_;
                SourceExpr="Posting Date" }

    { 1000000027;3;Field  ;
                Name=Shipping Agent Code_;
                SourceExpr="Shipping Agent Code" }

    { 1000000028;3;Field  ;
                Name=Payment Terms Code_;
                SourceExpr="Payment Terms Code" }

    { 1000000050;3;Field  ;
                SourceExpr="Keine AB an Kunden" }

    { 1000000051;3;Field  ;
                SourceExpr=USt13b2 }

    { 1000000030;3;Field  ;
                SourceExpr="Nicht rechnen" }

    { 1000000031;3;Field  ;
                Name=Your Reference_;
                SourceExpr="Your Reference" }

    { 1000000040;3;Field  ;
                Name=Control1000000040_;
                CaptionML=DEU=VK-Preis mit 0 wandeln;
                SourceExpr=NoSalesPriceCheck }

    { 1000000032;3;Field  ;
                CaptionML=DEU=Angelegt von;
                SourceExpr=CreatedBy;
                Editable=FALSE }

    { 1000000077;3;Field  ;
                CaptionML=[DEU=Gesch„ftsbuchungsgruppe;
                           ENU=Gen. Bus. Posting Group];
                SourceExpr="Gen. Bus. Posting Group" }

    { 1000000078;3;Field  ;
                CaptionML=DEU=Dieser Auftrag soll den AE reduzieren;
                SourceExpr="AE reduzieren" }

    { 1000000043;2;Group  ;
                CaptionML=DEU=Kreditlimit Status;
                GroupType=Group }

    { 1000000033;3;Field  ;
                CaptionML=DEU=Kreditlimit;
                SourceExpr=Customer."Credit Limit (LCY)";
                Editable=FALSE }

    { 1000000034;3;Field  ;
                CaptionML=DEU=- Saldo;
                SourceExpr=Customer."Balance (LCY)";
                Editable=FALSE }

    { 1000000035;3;Field  ;
                CaptionML=DEU=- Betrag;
                SourceExpr=ShipAmount;
                Editable=FALSE }

    { 1000000036;3;Field  ;
                CaptionML=DEU="Wert positiv => OK";
                SourceExpr=Customer."Credit Limit (LCY)"-Customer."Balance (LCY)"-ShipAmount;
                Editable=FALSE;
                StyleExpr=checkcustcredit_style }

    { 1000000044;2;Group  ;
                CaptionML=DEU=Mahnungsstatus;
                Visible=ReminderShow;
                GroupType=Group }

    { 1000000037;3;Field  ;
                SourceExpr=ReminderText;
                Editable=FALSE;
                Style=Unfavorable;
                StyleExpr=TRUE }

    { 1000000045;2;Group  ;
                CaptionML=DEU=Konsi;
                Visible=KonsiShow;
                GroupType=Group }

    { 1000000039;3;Field  ;
                SourceExpr=KonsiText;
                Editable=FALSE;
                Style=Strong;
                StyleExpr=TRUE }

    { 1900000007;0;Container;
                ContainerType=FactBoxArea }

    { 35  ;1   ;Part      ;
                SubPageLink=Table ID=CONST(36),
                            Document Type=FIELD(Document Type),
                            Document No.=FIELD(No.);
                PagePartID=Page9103;
                Visible=OpenApprovalEntriesExistForCurrUser;
                PartType=Page }

    { 1903720907;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9080;
                Visible=TRUE;
                PartType=Page }

    { 1902018507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9082;
                Visible=FALSE;
                PartType=Page }

    { 1900316107;1;Part   ;
                SubPageLink=No.=FIELD(Sell-to Customer No.);
                PagePartID=Page9084;
                Visible=FALSE;
                PartType=Page }

    { 1000000084;1;Part   ;
                Name=DocuWareStatus;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page50111;
                Visible=DocuWareStatusEnable;
                PartType=Page }

    { 1906127307;1;Part   ;
                SubPageLink=Document Type=FIELD(Document Type),
                            Document No.=FIELD(Document No.),
                            Line No.=FIELD(Line No.);
                PagePartID=Page9087;
                ProviderID=58;
                Visible=TRUE;
                PartType=Page }

    { 1901314507;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9089;
                ProviderID=58;
                Visible=FALSE;
                PartType=Page }

    { 1906354007;1;Part   ;
                Name=ApprovalFactBox;
                PagePartID=Page9092;
                Visible=FALSE;
                PartType=Page }

    { 49  ;1   ;Part      ;
                Name=IncomingDocAttachFactBox;
                PagePartID=Page193;
                Visible=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1907012907;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9108;
                ProviderID=58;
                Visible=FALSE;
                PartType=Page }

    { 1901796907;1;Part   ;
                SubPageLink=No.=FIELD(No.);
                PagePartID=Page9109;
                ProviderID=58;
                Visible=FALSE;
                PartType=Page }

    { 1907234507;1;Part   ;
                SubPageLink=No.=FIELD(Bill-to Customer No.);
                PagePartID=Page9081;
                Visible=FALSE;
                PartType=Page }

    { 80  ;1   ;Part      ;
                Name=WorkflowStatus;
                PagePartID=Page1528;
                Visible=ShowWorkflowStatus;
                Enabled=FALSE;
                Editable=FALSE;
                PartType=Page;
                ShowFilter=No }

    { 1900383207;1;Part   ;
                Visible=FALSE;
                PartType=System;
                SystemPartID=RecordLinks }

    { 1905767507;1;Part   ;
                Visible=TRUE;
                PartType=System;
                SystemPartID=Notes }

  }
  CODE
  {
    VAR
      CopySalesDoc@1001 : Report 292;
      MoveNegSalesLines@1007 : Report 6699;
      ApprovalsMgmt@1012 : Codeunit 1535;
      ReportPrint@1002 : Codeunit 228;
      DocPrint@1003 : Codeunit 229;
      ArchiveManagement@1008 : Codeunit 5063;
      SalesCalcDiscountByType@1014 : Codeunit 56;
      ChangeExchangeRate@1005 : Page 511;
      UserMgt@1006 : Codeunit 5700;
      Usage@1010 : 'Order Confirmation,Work Order,Pick Instruction';
      JobQueueVisible@1004 : Boolean INDATASET;
      Text001@1015 : TextConst 'DEU=M”chten Sie %1 in allen verknpften Datens„tzen im Lager „ndern?;ENU=Do you want to change %1 in all related records in the warehouse?';
      Text002@1011 : TextConst 'DEU=Die Verarbeitung wurde unterbrochen, um die Warnung zu bercksichtigen.;ENU=The update has been interrupted to respect the warning.';
      DynamicEditable@1009 : Boolean;
      HasIncomingDocument@1020 : Boolean;
      DocNoVisible@1013 : Boolean;
      ExternalDocNoMandatory@1016 : Boolean;
      OpenApprovalEntriesExistForCurrUser@1024 : Boolean;
      OpenApprovalEntriesExist@1023 : Boolean;
      CRMIntegrationEnabled@1000 : Boolean;
      CRMIsCoupledToRecord@1017 : Boolean;
      ShowWorkflowStatus@1018 : Boolean;
      "***TOPAS_Var***"@1000000000 : Integer;
      SalesLine@1000000001 : Record 37;
      Text50005@1000000004 : TextConst 'DEU=&Hilfestellung zur Auftragsbearbeitung,Hilfe zur &Servicekalkulation';
      Servicepreise@1000000014 : Record 50028;
      Quotedaten@1000000005 : Record 50014;
      Customer@1000000013 : Record 18;
      Item@1000000011 : Record 27;
      Log@1000000019 : Record 405;
      CustLedgerEntry@1000000022 : Record 21;
      IssuedReminder@1000000023 : Record 298;
      TOPAS_Funktionen@1000000030 : Codeunit 50006;
      TOPASBeleg_Pruefungen@1000000031 : Codeunit 50007;
      TOPASServiceModul@1000000007 : Codeunit 50008;
      ClipboardHandler@1000000002 : Codeunit 50013;
      TOPASPageManagement@1000000006 : Codeunit 50009;
      DocuWare@1000000033 : Codeunit 50016;
      NoSalesPriceCheck@1000000012 : Boolean;
      ShipAmount@1000000016 : Decimal;
      BlanketOrder@1000000017 : Code[20];
      CreatedBy@1000000018 : Code[50];
      ReminderShow@1000000027 : Boolean;
      ReminderText@1000000021 : Text;
      KonsiShow@1000000026 : Boolean;
      KonsiText@1000000024 : Text;
      checkcustcredit_style@1000000025 : Text;
      currency_style@1000000029 : Text;
      comment_style@1000000032 : Text;
      Text50009@1000000003 : TextConst 'DEU=Das Datum %1 ist in diesem Feld nicht gestattet.';
      Text50010@1000000008 : TextConst 'DEU=Die Feldl„nge von %1 Zeichen wurde erreicht. Der Inhalt wurde vermutlich auf die maximale Zeichenl„nge hin abgschnitten.\Bitte berprfen Sie Ihre Eingabe auf Vollst„ndigkeit.';
      postingdate_style@1000000034 : Text;
      preislisten_kalk_edit@1000000009 : Boolean;
      tracking_email_preview@1000000038 : Text;
      tracking_email_wie_ab_edit@1000000028 : Boolean;
      "AU-Kontrolle"@1000000010 : Report 50125;
      AU_Nr_Kontroll@1000000020 : Record 36;
      var_AU_Nr@1000000015 : Code[20];
      DocuwareControlText@1000000037 : Text;
      DocuwareControlEnable@1000000036 : Boolean;
      DocuWareStatusEnable@1000000039 : Boolean;
      ControlReady@1000000035 : Boolean;

    LOCAL PROCEDURE Post@4(PostingCodeunitID@1000 : Integer);
    BEGIN
      SendToPosting(PostingCodeunitID);
      IF "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting" THEN
        CurrPage.CLOSE;
      CurrPage.UPDATE(FALSE);
    END;

    LOCAL PROCEDURE ApproveCalcInvDisc@3();
    BEGIN
      CurrPage.SalesLines.PAGE.ApproveCalcInvDisc;
    END;

    LOCAL PROCEDURE SelltoCustomerNoOnAfterValidat@19034782();
    BEGIN
      IF GETFILTER("Sell-to Customer No.") = xRec."Sell-to Customer No." THEN
        IF "Sell-to Customer No." <> xRec."Sell-to Customer No." THEN
          SETRANGE("Sell-to Customer No.");
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SalespersonCodeOnAfterValidate@19011896();
    BEGIN
      CurrPage.SalesLines.PAGE.UpdateForm(TRUE);
    END;

    LOCAL PROCEDURE BilltoCustomerNoOnAfterValidat@19044114();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension1CodeOnAfterV@19029405();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE ShortcutDimension2CodeOnAfterV@19008725();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE PricesIncludingVATOnAfterValid@19009096();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE Prepayment37OnAfterValidate@19040510();
    BEGIN
      CurrPage.UPDATE;
    END;

    LOCAL PROCEDURE SetDocNoVisible@2();
    VAR
      DocumentNoVisibility@1000 : Codeunit 1400;
      DocType@1003 : 'Quote,Order,Invoice,Credit Memo,Blanket Order,Return Order,Reminder,FinChMemo';
    BEGIN
      DocNoVisible := DocumentNoVisibility.SalesDocumentNoIsVisible(DocType::Order,"No.");
    END;

    LOCAL PROCEDURE SetExtDocNoMandatoryCondition@5();
    VAR
      SalesReceivablesSetup@1000 : Record 311;
    BEGIN
      SalesReceivablesSetup.GET;
      ExternalDocNoMandatory := SalesReceivablesSetup."Ext. Doc. No. Mandatory"
    END;

    LOCAL PROCEDURE ShowPreview@6();
    VAR
      SalesPostYesNo@1000 : Codeunit 81;
    BEGIN
      SalesPostYesNo.Preview(Rec);
    END;

    LOCAL PROCEDURE SetControlVisibility@7();
    VAR
      ApprovalsMgmt@1002 : Codeunit 1535;
    BEGIN
      JobQueueVisible := "Job Queue Status" = "Job Queue Status"::"Scheduled for Posting";
      HasIncomingDocument := "Incoming Document Entry No." <> 0;
      SetExtDocNoMandatoryCondition;

      OpenApprovalEntriesExistForCurrUser := ApprovalsMgmt.HasOpenApprovalEntriesForCurrentUser(RECORDID);
      OpenApprovalEntriesExist := ApprovalsMgmt.HasOpenApprovalEntries(RECORDID);

      //TOPAS 26.10.21 ST DocuWare Status Anzeige +
      DocuWareStatusEnable := "Order Date" < WORKDATE;
      //TOPAS -
    END;

    LOCAL PROCEDURE "***TOPAS_Func***"@1000000000();
    BEGIN
    END;

    LOCAL PROCEDURE PostCheck@1000000001();
    BEGIN
      //TOPAS + 29.06.12 ST - Prfungen in neue Funktion bertragen
      TOPASBeleg_Pruefungen.CheckSalesOrderOnActions(Rec,NoSalesPriceCheck);

      //TOPAS 01.03.11 ST - šberprft, ob die Generierung des Servicevertrages m”glich ist
      TOPASBeleg_Pruefungen.CheckSalesOrderCalculationsBeforePost("No.");

      //TOPAS 29.04.10 ST - šerprft EK Wechselkurse, Seriennr. Reservierungen und Lagerbestand fr Artikelverfolgungscode KEINE
      TOPASBeleg_Pruefungen.CheckSalesOrderBeforePost_Part2(Rec);
    END;

    LOCAL PROCEDURE OpenHelp@1000000002();
    VAR
      Shell@1000000002 : Automation "{50A7E9B0-70EF-11D1-B75A-00A0C90564FE} 1.0:{13709620-C279-11CE-A49E-444553540000}:'Microsoft Shell Controls And Automation'.Shell";
      Filename@1000000001 : Text[260];
      Selection@1000000000 : Integer;
    BEGIN
      //TOPAS + Manuals
      Selection := STRMENU(Text50005,1);

      IF Selection = 0 THEN
        EXIT
      ELSE BEGIN
        CREATE(Shell,FALSE,TRUE);
        IF Selection = 1 THEN
          Filename := 'F:\Daten NEU\Gemeinsame Ordner\Navision\Navision 5.0 Anleitungen\Nav.5.0 Auftr„ge.pdf';
        IF Selection = 2 THEN
          Filename := 'F:\Daten NEU\Gemeinsame Ordner\Navision\Navision 5.0 Anleitungen\Nav.5.0 CHAMPS.pdf';
        Shell.Open(Filename);
      END;
    END;

    LOCAL PROCEDURE CheckFieldValueWithFieldLength@1000000008(varFieldNo@1000000000 : Integer;xRecValue@1000000004 : Text;RecValue@1000000005 : Text);
    VAR
      SalesHeaderRef@1000000003 : RecordRef;
      GetFieldRef@1000000002 : FieldRef;
      varLength@1000000001 : Integer;
    BEGIN
      //TOPAS + 19.10.18 ST - Fkt. zum šberprfen, ob der Inhalt des Feldes evtl. abgeschnitten wurde
      SalesHeaderRef.OPEN(DATABASE::"Sales Header");
      GetFieldRef := SalesHeaderRef.FIELD(varFieldNo);
      varLength := GetFieldRef.LENGTH;
      IF (STRLEN(xRecValue) <> STRLEN(RecValue)) AND (STRLEN(RecValue) = varLength) THEN
        MESSAGE(Text50010,varLength);
    END;

    LOCAL PROCEDURE CheckDocuWareStatus@1000000003();
    VAR
      DocuwareStatusRec@1000000000 : Record 50041;
    BEGIN
      DocuwareControlEnable := FALSE;
      IF ("Location Code" <> 'ZENT') AND ("Location Code" <> 'KONSI') THEN
        EXIT;

      IF ("Docuware Status" = "Docuware Status"::Neu) AND ("Docuware Gesendet" = FALSE) THEN BEGIN
        DocuwareControlText := 'Deckblatt noch nicht an DocuWare gesendet!';
        DocuwareControlEnable := TRUE;
        CurrPage.DocuwareControl.SendDatatoJavaScript(DocuwareControlText, 460, 17, '#ff3333', '#fff'); //rot

      END ELSE BEGIN
        IF ("Docuware Status" = "Docuware Status"::Žnderung) AND ("Docuware Gesendet" = FALSE) THEN BEGIN
          DocuwareControlText := 'Deckblatt nach Žnderungen noch nicht an DocuWare gesendet! (Klick fr OK)';
          DocuwareControlEnable := TRUE;
          CurrPage.DocuwareControl.SendDatatoJavaScript(DocuwareControlText, 460, 17, '#ffff66', ''); //gelb
        END ELSE BEGIN
          IF ("Docuware Gesendet") THEN BEGIN
            DocuwareStatusRec.RESET;
            DocuwareStatusRec.SETRANGE(Belegart,'Deckblatt');
            DocuwareStatusRec.SETRANGE("Belegnr.","No.");
            IF DocuwareStatusRec.FINDFIRST THEN BEGIN
              DocuwareControlText := 'OK';
              CurrPage.DocuwareControl.SendDatatoJavaScript(DocuwareControlText, 460, 17, '#33cc33', ''); //grn
            END ELSE BEGIN
              IF "Order Date" < WORKDATE THEN BEGIN
                DocuwareControlText := 'Deckblatt wurde gedruckt, aber es gibt kein Dokument in DocuWare!';
                DocuwareControlEnable := TRUE;
                CurrPage.DocuwareControl.SendDatatoJavaScript(DocuwareControlText, 460, 17, '#ff9966', ''); //orange
              END;
            END;
          END;
        END;
      END;
    END;

    EVENT DocuwareControl@-1000000080::ControlAddInReady@1();
    BEGIN
      ControlReady := TRUE;
      CheckDocuWareStatus;
    END;

    EVENT DocuwareControl@-1000000080::ControlAddinOnClick@2();
    BEGIN
      IF (ControlReady) AND ("Docuware Status" = "Docuware Status"::Žnderung) THEN
        IF CONFIRM('M”chten Sie den DocuWare Sendestatus auf OK setzen?',TRUE) = TRUE THEN BEGIN
          "Docuware Gesendet" := TRUE;
          CurrPage.UPDATE;
        END;
    END;

    BEGIN
    {
      Nr. Version   Datum       User  Beschreibung
      ===========================================================================
      1       TOP1.00   24.02.17    ST    Einbindung der Musterberwachung
      2       TOP1.00   21.03.17    ST    weitere Felder eingebaut, TOPAS Funktionen PostCheck, CheckEKwechselkurs, CheckAuftrag, CheckTOPASArtReserv,
                                          CheckArtVerfolgLagerbestand, OpenHelp eingebaut
      3       TOP1.00   18.05.17    ST    Funktionen wie Best„tigung per E-Mail, Best„tigung Drucken, Freigeben, "Beleg kopieren" werden vorher mit der Fkt. CheckAuftrag berprft
      4       TOP1.00   02.06.17    ST    Reiter Infos jetzt "Kommunikation & Infos" mit weiteren Felder (u.a. E-Mail Adressen)
      5       TOP1.00   13.06.17    ST    "Currency Code" wird eingef„rbt, Feld Comment hinzugefgt und bei vorhandener Bemerkung wird Comment rot eingef„rbt
      6       TOP1.00   15.06.17    ST    ActionItems "Projektnr. berprfen" und "Projektnr. „ndern" bernommen
      7       TOP1.01   24.07.17    ST    Amount wird angezeigt und neu kalkuliert
      8       TOP1.02   21.11.17    ST    TOPAS Funktionen CheckAuftrag, CheckTOPASArtReserv, CheckArtVerfolgLagerbestand und CheckEKwechselkurs in CU 50007 ausgelagert
      9       TOP1.03   30.11.17    ST    Neue Aktion "Auftragsnr. kopieren" hinzugefgt
      10      TOP1.04   19.01.18    ST    Musterberwachungen nun auch fr andere Lagerortcodes m”glich
      11      TOP1.05   12.02.18    ST    SourceTableView ORDER auf ASCENDING gestellt, damit vor und zurck Navigation wieder wie vorgesehen funktionieren
      12      TOP1.06   19.03.18    ST    Feld "Lizenz EMail-Adresse" hinzugefgt
      13      TOP1.07   11.04.18    ST    Neue Aktion "Servicepreise aktualisieren" hinzugefgt
      14      TOP1.08   05.06.18    ST    Sprungmarke zu den Arch. Angebot hinzugefgt, wenn die Ursprungsangebotsnr. gesetzt ist
      15      TOP1.09   19.03.19    ST    Neues Feld "Preislisten Kalkulation" hinzugefgt, Editierbarkeit nur fr Gebietscode SYSTEM, Feld Preisliste nachtr.
      16      TOP1.10   17.06.19    UB    Einbindung Report 50125 in Menband
      17      TOP1.11   25.02.20    ST    Neue Aktion "DocuWare Deckblatt" - druckt Deckblatt direkt an DocuWare Printer
      18      TOP1.12   11.03.20    UB    Feld 'Gesch„ftsbuchungsgruppe' unter Sonstige anzeigen w/Andruck auf RE von '*** Intra-Community supply of goods'
      19      TOP1.13   24.03.20    ST    Feld "Posting Date" wird rot gef„rbt, wenn das Datum 31.12.2055 ist
      20      TOP1.14   01.07.20    ST    ShipAmount Berechnung, damit ist der Kreditlimit Status nun Mehrwertsteuer unabh„ngig gel”st
      21      TOP1.15   25.09.20    UB    Neues Feld "AE reduzieren" eingebaut
      22      TOP1.16   09.12.20    ST    DocuWare Status wird nun angezeigt und Deckblatt an DocuWare Druck setzt Status auf "gesendet"
      23      TOP1.17   15.04.21    ST    Neues Feld "Tracking via EMail" eingebaut
      24      TOP1.18   29.04.21    ST    Neues Feld "Tracking EMail wie AB" und eine Vorschau auf die "Tracking EMail Adresse" eingebaut
      25      TOP1.19   26.10.21    ST    DocuWare Status Factbox implementiert
      26      TOP1.20   10.01.22    ST    Neue Aktion Lief. an Adr. nach Endkunden Adresse kopieren eingebaut
    }
    END.
  }
}

