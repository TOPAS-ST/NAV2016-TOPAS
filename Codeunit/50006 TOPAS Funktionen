OBJECT Codeunit 50006 TOPAS Funktionen
{
  OBJECT-PROPERTIES
  {
    Date=12.11.21;
    Time=12:13:35;
    Modified=Yes;
    Version List=TOPAS, TOP1.05;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text000@1000000000 : TextConst 'DEU=PDF,PDF + E-Mail';
      TOPAS_API@1000000001 : Codeunit 50001;
      Text2000000120_1@1000000002 : TextConst 'DEU=Fehlende Zuordnung zwischen %1 (%2) und %3 in der Tabelle %4. Bitte wenden Sie sich an Ihren Systemadministrator.';

    PROCEDURE FindItemPurchPrice@1140002("Item No"@1140003 : Code[20];"Vendor No"@1140007 : Code[20];Date@1140002 : Date;Unit@1140000 : Code[10]) : Decimal;
    VAR
      FindPurchPrice@1140006 : Record 7012;
      Vendor@1140008 : Record 23;
      BestPrice@1140005 : Decimal;
      BestDate@1140004 : Date;
      Curr@1140001 : Code[10];
    BEGIN
      IF Vendor.GET("Vendor No") THEN
        Curr := Vendor."Currency Code"
      ELSE
        Curr := '';
      WITH FindPurchPrice DO BEGIN
        SETRANGE("Item No.","Item No");
        SETFILTER("Ending Date",'%1|>=%2',0D,Date);
        //SETFILTER("Currency Code",'%1|%2',Curr,'');
        SETFILTER("Currency Code",'%1',Curr);
        IF Unit <> '' THEN
          SETFILTER("Unit of Measure Code",'%1|%2',Unit,'');
        SETRANGE("Starting Date",0D,Date);
        SETRANGE("Vendor No.","Vendor No");
        IF FINDFIRST THEN BEGIN
          BestPrice := "Direct Unit Cost";
          BestDate := "Starting Date";
          REPEAT
            //IF BestPrice > "Direct Unit Cost" THEN
            //Nicht mehr der beste, sondern der aktuellste Preis gesucht
            IF "Starting Date" > BestDate THEN BEGIN
              BestPrice := "Direct Unit Cost";
              BestDate := "Starting Date";
            END;
          UNTIL NEXT = 0;
        END ELSE
          EXIT(0);
        EXIT(BestPrice);
      END;
    END;

    PROCEDURE FindItemSalesPrice@1000000001(Artikelnr@1140003 : Code[20];Startdatum@1140002 : Date;W„h@1140001 : Code[10];Stkcode@1140000 : Code[10];Qty@1000000000 : Decimal;preislisten_kalkulation@1000000001 : 'neu,alt') : Decimal;
    VAR
      FindSalesPrice@1140006 : Record 7002;
      BestPrice@1140005 : Decimal;
      BestDate@1140004 : Date;
    BEGIN
      WITH FindSalesPrice DO BEGIN
        SETRANGE("Item No.",Artikelnr);
        SETFILTER("Starting Date",'<>%1&<=%2',0D,Startdatum); //Spezialpreise unterdrcken, die eigentlich zu 0 verkauft werden, aber der MSRP fr CHAMPS Berechnung ben”tigt wird
        SETFILTER("Ending Date",'%1|>=%2&<>%3',0D,Startdatum,31122055D);
        SETFILTER("Currency Code",'%1',W„h);
        SETFILTER("Minimum Quantity",'<=%1', Qty);
        IF Stkcode <> '' THEN
          SETFILTER("Unit of Measure Code",'%1|%2',Stkcode,'');
        SETRANGE("Sales Type","Sales Type"::"All Customers");
        SETRANGE("Sales Code");
        IF FINDFIRST THEN BEGIN
          BestPrice := "Unit Price";
          BestDate := "Starting Date";
          IF preislisten_kalkulation = preislisten_kalkulation::neu THEN
            REPEAT
             //IF BestPrice > "Unit Price" THEN
              //Nicht mehr der beste, sondern der aktuellste Preis gesucht
              IF "Starting Date" > BestDate THEN BEGIN
                BestPrice := "Unit Price";
                BestDate := "Starting Date";
              END;
            UNTIL NEXT = 0;
        END;
        EXIT(BestPrice);
      END;
    END;

    PROCEDURE SetCurrencyColor@1000000000(CurrencyCode@1000000000 : Code[20]) : Text;
    BEGIN
      //30.06.17 ST - W„hrungscode wird eingef„rbt
      CASE CurrencyCode OF
        'USD' : EXIT('Unfavorable');
        'GBP' : EXIT('StrongAccent');
        'JPY' : EXIT('Favorable');
      END;
      EXIT('Standard');
    END;

    PROCEDURE CalcDateByFormula@39(Date@1000 : Date;CalcStartDate@1001 : Boolean;Scope@1000000000 : 'N,LD,LW,LM,LDIMO') : Date;
    VAR
      Modificator@1002 : Text[1];
    BEGIN
      // Infos unter: http://navserv-2016:49000/main.aspx?lang=de-DE&content=conEnterDatesTimes.htm
      // M”glichkeiten
      // N      - Normal also keine Umsetzung
      // LD     - letzter Tag
      // LW     - letzte Woche Montag bis Sonntag
      // LM     - letzter Monat von 01..Ende des Monats
      // LDIMO  - Letzter Dienstag - Montag dieser Woche

      IF( Date = 0D) OR (Scope = Scope::N) THEN
        EXIT(Date);

      CASE Scope OF
        Scope::LD:
          EXIT(Date - 1);
        Scope::LW:
          BEGIN
            IF CalcStartDate THEN
                Modificator := '-';
              EXIT(CALCDATE(STRSUBSTNO('<%1C%2>',Modificator,'W-1W'),Date));
          END;
        Scope::LM:
          BEGIN
            IF CalcStartDate THEN
                Modificator := '-';
              EXIT(CALCDATE(STRSUBSTNO('<%1C%2>',Modificator,'M-1M'),Date));
          END;
        Scope::LDIMO:
          BEGIN
              IF CalcStartDate THEN
                  Modificator := '-';
                EXIT(CALCDATE(STRSUBSTNO('<%1C%2>',Modificator,'W-1W+1D'),Date));
          END;
      END;
      EXIT(Date);
    END;

    PROCEDURE CalcNextWorkday@1140024(Step@1140003 : Integer;StartDate@1140001 : Date) : Date;
    VAR
      DateRec@1140002 : Record 2000000007;
      workdate@1140000 : Date;
    BEGIN
      WITH DateRec DO BEGIN
        SETRANGE("Period Type","Period Type" :: Date);
        SETRANGE("Period No.",1,5);
        "Period Start" := StartDate;
        FIND('=<');
        NEXT(Step);
        EXIT("Period Start");
      END;
    END;

    PROCEDURE PrintSalesDocToPDFwithEmail@1000000003(SalesHeader@1000000010 : Record 36);
    VAR
      Contact@1000000009 : Record 5050;
      SalutationFormula@1000000012 : Record 5069;
      SalesHeaderCopy@1000000011 : Record 36;
      Shell@1000000008 : Automation "{50A7E9B0-70EF-11D1-B75A-00A0C90564FE} 1.0:{13709620-C279-11CE-A49E-444553540000}:'Microsoft Shell Controls And Automation'.Shell";
      email_address@1000000007 : Text;
      FileNameServer@1000000006 : Text;
      FileNameClient@1000000005 : Text;
      FileManagement@1000000004 : Codeunit 419;
      body@1000000003 : Text;
      subject@1000000002 : Text;
      salutation@1000000013 : Text;
      chr@1000000001 : Char;
      selection@1000000000 : Integer;
    BEGIN
      WITH SalesHeader DO BEGIN
        SalesHeaderCopy.COPY(SalesHeader);
        SalesHeaderCopy.SETRECFILTER;
        FileNameServer := TEMPORARYPATH + "No." + ' ' + DELCHR("Sell-to Customer Name",'=',DELCHR("Sell-to Customer Name",'=','abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ„”šŽ™0123456789 ')) + '.pdf';
        IF "Document Type" = "Document Type"::Quote THEN REPORT.SAVEASPDF(50052,FileNameServer,SalesHeaderCopy);
        FileNameClient := FileManagement.DownloadTempFile(FileNameServer);
        selection := STRMENU(Text000);
        CASE selection OF
          1:
            BEGIN
              CREATE(Shell,FALSE,TRUE);
              Shell.Open(FileNameClient);
              CLEAR(Shell);
            END;
          2:
            BEGIN
              chr := 10;
              body := '';
              subject := '';
              IF Contact.GET("Kontaktnr.") THEN BEGIN
                email_address := Contact."E-Mail";
              END ELSE
                email_address := '';

              SalutationFormula.SETRANGE("Salutation Type",SalutationFormula."Salutation Type"::Formal);
              SalutationFormula.SETRANGE("Language Code",SalesHeader."Language Code");
              IF ("Kontaktnr." = '' ) THEN
                SalutationFormula.SETRANGE("Salutation Code",'MANDANT')
              ELSE
                SalutationFormula.SETRANGE("Salutation Code",Contact."Salutation Code");
              IF SalutationFormula.FINDFIRST THEN BEGIN
                salutation := STRSUBSTNO(SalutationFormula.Salutation,Contact.Surname);
              END ELSE BEGIN
                IF SalesHeader."Language Code" = 'DEU' THEN
                  salutation := 'Sehr geehrte Damen und Herren,'
                ELSE
                  salutation := 'Dear Sir or Madam,';
              END;

              IF "Language Code" = 'DEU' THEN BEGIN
                IF "Document Type" = "Document Type"::Quote THEN BEGIN
                  body := salutation + FORMAT(chr) + FORMAT(chr) +
                        'anbei erhalten Sie unser Angebot.' + FORMAT(chr);
                  subject := 'Unser Angebot ' + "No." + ' zu Ihrer Referenz: ' + "Your Reference";
                END;
              END ELSE BEGIN
                IF "Document Type" = "Document Type"::Quote THEN BEGIN
                  body := salutation + FORMAT(chr) + FORMAT(chr) +
                            'attached you will find our Quote.' + FORMAT(chr);
                  subject := 'Our Quote ' + "No." + ' for your reference: ' + "Your Reference";
                END;
              END;

              TOPAS_API.NewMail(email_address,'','',subject,body,'',FileNameClient);
            END;
        END;
      END;
    END;

    PROCEDURE PrintPurchaseDocToPDFwithEmail@1000000005(PurchaseHeader@1000000010 : Record 38);
    VAR
      Contact@1000000009 : Record 5050;
      SalutationFormula@1000000012 : Record 5069;
      PurchaseHeaderCopy@1000000011 : Record 38;
      Shell@1000000008 : Automation "{50A7E9B0-70EF-11D1-B75A-00A0C90564FE} 1.0:{13709620-C279-11CE-A49E-444553540000}:'Microsoft Shell Controls And Automation'.Shell";
      email_address@1000000007 : Text;
      FileNameServer@1000000006 : Text;
      FileNameClient@1000000005 : Text;
      FileManagement@1000000004 : Codeunit 419;
      body@1000000003 : Text;
      subject@1000000002 : Text;
      salutation@1000000013 : Text;
      chr@1000000001 : Char;
      selection@1000000000 : Integer;
    BEGIN
      WITH PurchaseHeader DO BEGIN
        PurchaseHeaderCopy.COPY(PurchaseHeader);
        PurchaseHeaderCopy.SETRECFILTER;
        FileNameServer := TEMPORARYPATH + "No." + '.pdf';
        IF "Document Type" = "Document Type"::Order THEN REPORT.SAVEASPDF(50019,FileNameServer,PurchaseHeaderCopy);
        FileNameClient := FileManagement.DownloadTempFile(FileNameServer);
        chr := 10;
        body := 'Dear Sir or Madam,' + FORMAT(chr) + FORMAT(chr) +
                'attached you will find our order.' + FORMAT(chr);
        subject := 'Purchase Order ' + PurchaseHeader."No.";
        TOPAS_API.NewMail(email_address,'','',subject,body,'',FileNameClient);
      END;
    END;

    PROCEDURE CheckUserSetup@1000000002() : Code[10];
    VAR
      User@1000000000 : Record 2000000120;
    BEGIN
      //TOPAS 11.01.18 ST - Prft die User Verbindung mit der Tabelle Verk„ufercode, damit TOPAS Statistiken korrekt funktionieren
      User.RESET;
      User.SETCURRENTKEY("User Name");
      User.SETRANGE("User Name",USERID);
      User.FINDFIRST;
      IF (User."Salesperson Code" = '') AND (STRPOS(UPPERCASE(User."User Name"),'ADMIN') = 0) AND (STRPOS(UPPERCASE(User."User Name"),'LABOR') = 0)
      AND (STRPOS(UPPERCASE(User."User Name"),'LAGER') = 0) THEN
        MESSAGE(Text2000000120_1,User.FIELDCAPTION("User Name"),USERID,User.FIELDCAPTION("Salesperson Code"),User.TABLECAPTION)
      ELSE
        EXIT(User."Salesperson Code");
    END;

    PROCEDURE GetCompanyInformation@1000000004(VAR VarCompany@1000000000 : ARRAY [15] OF Text;CompanyInformation@1000000002 : Record 79);
    VAR
      TextGesch@1000000001 : TextConst 'DEU=Gesch„ftsfhrer;ENU=CEO';
    BEGIN
      CompanyInformation.GET;
      WITH CompanyInformation DO BEGIN
        VarCompany[1] := Name;
        VarCompany[2] := Address;
        VarCompany[3] := "Address 2";
        VarCompany[4] := "Post Code";
        VarCompany[5] := City;
        VarCompany[6] := "Phone No.";
        VarCompany[7] := "Fax No.";
        VarCompany[8] := "VAT Registration No.";
        VarCompany[9] := "Registration No.";
        IF STRPOS(UPPERCASE(Name),'GMBH') <> 0 THEN
          VarCompany[10] := TextGesch + ': ' + Vorstand;
        IF STRPOS(UPPERCASE(Name),'AG') <> 0 THEN
          VarCompany[10] := FIELDCAPTION(Vorstand) + ': ' + Vorstand;
        IF Aufsichtsratvorsitz <> '' THEN
          VarCompany[11] := FIELDCAPTION(Aufsichtsratvorsitz) + ': ' + Aufsichtsratvorsitz + ', ';
        VarCompany[12] := FIELDCAPTION("District Court") + ' ' + "District Court";
        VarCompany[13] := "WEEE-Reg.-Nr.";
        VarCompany[14] := FIELDCAPTION("P.O. Box") + ' ' + "P.O. Box";
        VarCompany[15] := "Home Page";
      END;
    END;

    BEGIN
    {
      Lfd.Nr. Version   Datum       User  Beschreibung
      ===========================================================================
      1       TOP1.00   30.03.17    ST    Neue Funktion FindItemPurchPrice zur Anzeige des DC-Preises
      2       TOP1.00   30.03.17    ST    Neue Funktion FindItemSalesPrice zur Anzeige der VK-Preise
      3       TOP1.01   28.11.17    ST    šbernomme Funktion CalcNextWorkday aus CU 50001 TOPAS API
      4       TOP1.02   30.11.17    ST    Neue Funktion PrintSalesQuoteToPDFwithEmail
      5       TOP1.03   18.01.17    ST    Neue Funktion CheckUserSetup
      5       TOP1.04   09.02.17    ST    Neue Funktion GetCompanyInformation fr Berichtsandrucke benutzt
      6       TOP1.05   21.03.19    ST    FindItemSalesPrice Anpassung fr MSPR Anzeige bzgl. Preislisten Kalkulation im Belegkopf
    }
    END.
  }
}

