OBJECT Codeunit 50008 TOPAS Service Modul
{
  OBJECT-PROPERTIES
  {
    Date=20.08.18;
    Time=11:23:46;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text50022@1000000020 : TextConst 'DEU=Diese Funktion ist nur bei Service- (SUP) oder Splicecom System Artikeln erlaubt.';
      Text51000@1000000011 : TextConst 'DEU=Systemvertrag %1 angelegt.';
      Text51001@1000000010 : TextConst 'DEU=ACHTUNG!\\Fr Artikelnr. %1, Zeilennr. %2 konnte kein alleinstehendes ACS Basisger„t oder ein verbundener Serviceartikel im Auftrag gefunden werden. Bitte w„hlen Sie dazu in der folgenden šbersicht einen entsprechenden System- bzw. Wartungsvertrag aus. Wenn Sie sich nicht sicher sind drcken Sie im Anschluss auf Abbrechen, der Vorgang kann ber den Lieferschein erneut ausgefhrt werden.\\Hilfestellung %3: %4';
      Text51002@1000000009 : TextConst 'DEU=Systemvertragserstellung fr Artikelnr. %1, Zeilennr. %2 auf Wunsch abgebrochen.';
      Text51003@1000000008 : TextConst 'DEU=Anzeige von System- bzw. Wartungsvertr„gen nicht m”glich, da noch kein Vertrag mit diesem Debitorkonto verbunden wurde.';
      Text51004@1000000007 : TextConst 'DEU=Die Systemposition %1, Artikel %2, Zeilennr. %3 konnte keinem Systemvertrag zugeordnet werden.Bitte informieren Sie die IT Abteilung.';
      Text51005@1000000006 : TextConst 'DEU=Es wurden keine weiteren Aktionen durchgefhrt. Die Position(en) wurde(n) vermutlich schon angelegt.';
      Text51006@1000000005 : TextConst 'DEU=Es konnte kein AudioCodes Artikel gefunden werden.';
      Text51007@1000000004 : TextConst 'DEU=Bei dieser Lieferung wurden %1 servicef„hige Ger„te gleichzeitig geliefert, dementsprechend mssen auch genauso viele Systemvertr„ge angelegt werden. M”chten Sie jetzt fortfahren?';
      Text51008@1000000003 : TextConst 'DEU=Es konnten mehrere System- bzw. Wartungsvertr„ge zu diesem Lieferschein gefunden werden.M”chten Sie Vetragsnr. %1 aufrufen?';
      Text51009@1000000002 : TextConst 'DEU=Es konnte kein System- bzw. Wartungsvertrag gefunden werden.';
      Text51010@1000000001 : TextConst 'DEU=Die Position %1, Artikel %2 mit der Seriennr. %3, wurde noch nicht zugeordnet.';
      Text51011@1000000000 : TextConst 'DEU=Es konnten mehrere System- bzw. Wartungsvertr„ge (%1) gefunden werden. Sie k”nnen sich nun durch die einzelnen Vertr„ge bewegen.';
      Text52000@1000000012 : TextConst 'DEU=Die Berechnungsgrundlage dieses Serviceartikels konnte nicht sichergestellt werden. Bitte berprfen Sie das Feld Artikelgruppe.';
      Text52001@1000000013 : TextConst 'DEU=Bitte hinterlegen Sie die Laufzeit fr Artikel %1 in der Optionstabelle (Feld Code), damit der DC-Preis fr Artikel %2 richtig ermittelt werden kann.';
      Text52002@1000000014 : TextConst 'DEU=Fr Artikelnr. %1 konnte kein Service DC errechnet werden. Anscheinend fehlt in der Service Preisliste die Zuordnung zum Support Artikel %2. šberprfen Sie auch den Einkaufsw„hrungscode des Artikels %1 im Beleg.';
      Text52003@1000000015 : TextConst 'DEU=Es konnte kein Service Preis errechnet werden.';
      Text52004@1000000016 : TextConst 'DEU=Bitte hinterlegen Sie einen Prozentsatz fr Artikel %1 in der Optionstabelle (Feld Lfd.-Nr.), damit der Upgrade-Preis auf Grundlage des MSRP''s vom Ger„t %2 ermittelt werden kann.';
      Text52005@1000000017 : TextConst 'DEU=Bitte hinterlegen Sie die Laufzeit fr Artikel %1 in der Optionstabelle (Feld Code), damit der Service-Preis fr Artikel %2 richtig ermittelt werden kann.';
      Text52006@1000000018 : TextConst 'DEU=Bitte hinterlegen Sie den MSRP-Preis als Vk-Preis im Artikel %1, damit der Vk-Preis fr die %2 automatisch berechnet werden kann. Vergewissern Sie sich auch, dass das Arbeitsdatum innerhalb des Start- und Enddatums des Vk-Preises liegt.\Oder setzen Sie den Haken "%3" im Artikel.';
      Text52007@1000000019 : TextConst 'DEU=Bitte hinterlegen Sie fr Artikel %1 in der Service Preistabelle sowohl den ACTS Euro und/oder den ACTS USD MSRP (%2).';
      Text37_000@1000000024 : TextConst 'DEU=M”chten Sie wirklich alle Service Kalkulationen im Beleg mit dem Kurs vom %1 neu rechnen lassen?\Hinweis: Sie berschreiben damit auch manuell festgelegte VK-Preise. Die Service DC''s werden auch neu gerechnet. Zudem wird bei allen Positionen, sowohl fr Systemartikel als auch Service Kalkulationen, der %2 aktualisiert.';
      Text39_000@1000000021 : TextConst 'DEU=Diese Funktion ist nur fr Artikel mit Kennzeichnung %1 gestattet.';
      Text39_001@1000000022 : TextConst 'DEU=Die Einkaufszeile wurde aktualisiert. Der EK-Preis betr„gt nun %1.';
      Text39_002@1000000023 : TextConst 'DEU=Diese Bestellzeile wurde noch nicht mit Service Einzelpositionen verknpft oder der W„hrungscode stimmt nicht mit dem Service Einkaufsw„hrungscode berein.';

    PROCEDURE CreateSystemFromShipHeader@1140001(ShipNo@1000000001 : Code[20]);
    VAR
      SystemPos@1140020 : Record 50024;
      SeriennrVerfolgung@1140019 : Record 32;
      SeriennrHistorie@1000000002 : Record 50018;
      Liefkopf@1140018 : Record 110;
      Liefzeile@1140017 : Record 111;
      Beleghistorie@1000000003 : Record 50008;
      Auftrag@1140016 : Record 36;
      PrfeSystemLiefzeile@1140014 : Record 111;
      Wartung@1140013 : Record 50011;
      Wartungsšbersicht@1140012 : Record 50011;
      PrfeHauptWartung@1140011 : Record 50011;
      GetServiceCalc@1140010 : Record 50027;
      CheckServiceCalc@1000000000 : Record 50027;
      ZuordnungBasisger„t@1140000 : Record 50027;
      Ansprech@1140009 : Record 50005;
      DebKontaktBez@1140008 : Record 5054;
      Artikel@1140007 : Record 27;
      Customer@1000000004 : Record 18;
      wartungsnr@1140006 : Code[20];
      hauptwartungsnr@1140005 : Code[20];
      system_service_verbindung@1140002 : Boolean;
      systempos_angelegt@1140025 : Boolean;
      NoSeriesMgt@1140024 : Codeunit 396;
      laufende_nummer@1140023 : Code[20];
      vertraege_anlegen@1140001 : Integer;
      eingabe@1140022 : Code[10];
      datensatz_auslassen@1140004 : Boolean;
      zuletzt_system_service@1140028 : Boolean;
      letzte_system_wartungsnr@1140027 : Code[20];
      letzte_system_hauptwartungsnr@1140015 : Code[20];
      ok@1140021 : Boolean;
      k@1140003 : Integer;
    BEGIN
      ////Vorlage => SystemPos.CreateSystemFromSalesHeader("Order No.");

      //*****************************************************************************************************************
      //      29.08.11 ST - Neue Funktion: Das System holt sich nach Erstellung des Lieferscheins die
      //                          entsprechenden Seriennr. aus den Artikelposten
      //              Automatische Anlage von Systemvertr„gen + Systempositionen => šbernahme von Altdaten
      //      06.10.17 ST - Neu ist auch die šbernahme aus NAV 5.0 anhand der Beleg- und Artikelverfolgungs Historie
      //*****************************************************************************************************************

      systempos_angelegt := FALSE;
      zuletzt_system_service := FALSE;
      letzte_system_wartungsnr := '';
      letzte_system_hauptwartungsnr := '';

      Liefkopf.RESET;
      ////n
      Liefkopf.SETFILTER("No.",'%1',ShipNo);
      ////e
      IF Liefkopf.FINDLAST THEN BEGIN
        Liefzeile.RESET;
        Liefzeile.SETFILTER("Document No.",'%1',Liefkopf."No.");
        Liefzeile.SETFILTER("Manufacturer Code",'%1','59');
        Liefzeile.SETFILTER(Type,'%1',Liefzeile.Type::Item);
        Liefzeile.SETFILTER(Quantity,'>%1',0);
        IF Liefzeile.FINDFIRST THEN
          REPEAT

            wartungsnr := '';
            hauptwartungsnr := '';

            //neu 10.05.12 ST - Update in Vorlage ausstehend
            datensatz_auslassen := FALSE;

            IF Artikel.GET(Liefzeile."No.") THEN BEGIN
              IF (Artikel."Software Upgrade Protection" = TRUE)
              //OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')
              OR (Artikel."No." = 'ADVC-RPLC-SRVC-IN#01')
              OR (Artikel."No." = 'STD-SUPP-PROG/YR')
              OR (Artikel."No." = 'PREM-SUPP-PROG/YR')
              //OR (Artikel."No." = 'RCBK0001')
              //OR (Artikel."No." = 'CENTOL10')
              //OR (Artikel."No." = 'MCMK00015')
              //OR (Artikel."No." = 'MCMK00016')
              //OR (Artikel."No." = 'MPRS232')
              //OR (Artikel."No." = 'MP-RMSHL')
              THEN
                datensatz_auslassen := TRUE
              ELSE BEGIN
                IF Artikel."Manufacturer Code" <> '59' THEN
                  datensatz_auslassen := TRUE
                ELSE
                  datensatz_auslassen := FALSE;
              END;
            END ELSE
              datensatz_auslassen := TRUE;

            IF datensatz_auslassen = FALSE THEN BEGIN
            //neu Ende

              //***************************************************************************************************
              //                         Generierung des Systemvertrages fr Chassis o.„.
              //***************************************************************************************************

              IF Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS' THEN BEGIN
                Wartung.RESET;
                Wartung.SETFILTER("Lieferscheinnr.",'%1',Liefzeile."Document No.");
                Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',Liefzeile."Line No.");
                IF NOT Wartung.FINDFIRST THEN BEGIN

                  ////n No. Series wird normalerweise direkt von der Tabelle bernommen bei INSERT(TRUE)
                  ////n Nur in diesem Sonderfall, sollen nachtr„glich hinzugefgte Positionen
                  ////n einen anderen Nummernserienkreis bekommen, so dass diese besser auseinander
                  ////n gehaltn werden k”nnen

                  IF Liefzeile.Quantity > 1 THEN BEGIN
                    IF CONFIRM(Text51007,TRUE,Liefzeile.Quantity) THEN
                      vertraege_anlegen := Liefzeile.Quantity
                    ELSE
                      ERROR(Text51002,Liefzeile."No.",Liefzeile."Line No.");
                  END ELSE BEGIN
                    vertraege_anlegen := 1;
                  END;

                  FOR k := 1 TO  vertraege_anlegen DO BEGIN
                    Wartung.INIT;
                    laufende_nummer := '';
                    IF Liefkopf."Posting Date" > 010114D THEN
                      eingabe := 'TOPAS-WART'
                    ELSE
                      eingabe := 'TOPAS-WTAL';

                    NoSeriesMgt.InitSeries(eingabe,eingabe,TODAY,laufende_nummer,eingabe);
                    Wartung."Wartungsvertragsnr." := laufende_nummer;
                    Wartung."Angelegt von" := USERID;
                    Wartung."Angelegt am" := WORKDATE;
                    ////e
                    Wartung.Status := Wartung.Status::System;
                    Wartung.Klasse := Wartung.Klasse::Einzelger„t;
                    Wartung.Volumen := 1;
                    Wartung.Startdatum := Liefkopf."Posting Date";
                    Wartung."Debitornr." := Liefkopf."Sell-to Customer No.";
                    IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN BEGIN
                      Wartung.SOR := TRUE;
                      Wartung."SOR Option" := Liefkopf."Payment Terms Code";
                    END;
                    //Des Basisger„tes
                    Wartung."Auftragsnr." := Liefzeile."Order No.";
                    Wartung."Auftragszeilennr." := Liefzeile."Order Line No.";
                    Wartung."Lieferscheinnr." := Liefzeile."Document No.";
                    Wartung."Lieferscheinzeilennr." := Liefzeile."Line No.";
                    IF Auftrag.GET(Auftrag."Document Type"::Order,Wartung."Auftragsnr.") THEN
                      Wartung.Auftragsstatus := Wartung.Auftragsstatus::Aktuell
                    ELSE
                      Wartung.Auftragsstatus := Wartung.Auftragsstatus::Archiviert;

                    ////n KEIN INSERT(TRUE), damit angepasste Nr. Serie verwendet wird
                    Wartung.INSERT;
                    MESSAGE(Text51000,Wartung."Wartungsvertragsnr.");
                    ////e

                    PrfeHauptWartung.RESET;
                    PrfeHauptWartung.SETFILTER("Auftragsnr.",'%1',Wartung."Auftragsnr.");
                    PrfeHauptWartung.SETFILTER("Auftragszeilennr.",'%1',Wartung."Auftragszeilennr.");
                    IF NOT PrfeHauptWartung.FINDFIRST THEN BEGIN
                      Wartung."Hauptwartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                      Wartung.MODIFY(TRUE);
                    END ELSE BEGIN
                      Wartung."Hauptwartungsvertragsnr." := PrfeHauptWartung."Wartungsvertragsnr.";
                      Wartung.MODIFY(TRUE);
                    END;

                    //neu 10.05.2012-ST, Update in Vorlage ausstehend
                    zuletzt_system_service := TRUE;
                    letzte_system_wartungsnr := Wartung."Wartungsvertragsnr.";
                    letzte_system_hauptwartungsnr := Wartung."Hauptwartungsvertragsnr.";
                    //neu Ende

                    //Anlage der Fhrungsrolle anhand des Debitoren
                    DebKontaktBez.RESET;
                    DebKontaktBez.SETFILTER("Business Relation Code",'%1','DEB');
                    DebKontaktBez.SETFILTER("No.",'%1',Wartung."Debitornr.");
                    IF DebKontaktBez.FINDFIRST THEN BEGIN
                      Ansprech.RESET;
                      Ansprech.SETFILTER("Kampagnennr.",'%1',Wartung."Wartungsvertragsnr.");
                      Ansprech.SETFILTER("Kontaktnr.",'%1',DebKontaktBez."Contact No.");
                      IF NOT Ansprech.FINDFIRST THEN BEGIN
                        Ansprech.INIT;
                        Ansprech.VALIDATE("Kontaktnr.",DebKontaktBez."Contact No.");
                        Ansprech."Kampagnennr." := Wartung."Wartungsvertragsnr.";
                        Ansprech.Fhrungsrolle := TRUE;
                        Ansprech.INSERT;
                      END;
                    END;
                  END;
                END;
              END;

              //***************************************************************************************************
              //                          Generierung des Systemvertrages fr FLAT Ger„te
              //***************************************************************************************************

              IF Artikel.Serviceklassifizierung = 'SYSTEM FLAT' THEN BEGIN
                Wartung.RESET;
                Wartung.SETFILTER("Lieferscheinnr.",'%1',Liefzeile."Document No.");
                Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',Liefzeile."Line No.");
                IF NOT Wartung.FINDFIRST THEN BEGIN
                  Wartung.INIT;
                  Wartung.Status := Wartung.Status::System;
                  Wartung.Klasse := Wartung.Klasse::Mehrger„te;
                  ////n
                  laufende_nummer := '';
                  IF Liefkopf."Posting Date" > 010114D THEN
                    eingabe := 'TOPAS-WART'
                  ELSE
                    eingabe := 'TOPAS-WTAL';
                  NoSeriesMgt.InitSeries(eingabe,eingabe,TODAY,laufende_nummer,eingabe);
                  Wartung."Wartungsvertragsnr." := laufende_nummer;
                  Wartung."Angelegt von" := USERID;
                  Wartung."Angelegt am" := WORKDATE;
                  ////e
                  //Fr Mehrger„te immer 0, da das Volumen sp„ter durch die Einzelpositionen hochgez„hlt wird
                  Wartung.Volumen := 0;
                  Wartung.Startdatum := Liefkopf."Posting Date";
                  Wartung."Debitornr." := Liefkopf."Sell-to Customer No.";
                  IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN BEGIN
                    Wartung.SOR := TRUE;
                    Wartung."SOR Option" := Liefkopf."Payment Terms Code";
                  END;
                  //Des Basisger„tes
                  Wartung."Auftragsnr." := Liefzeile."Order No.";
                  Wartung."Auftragszeilennr." := Liefzeile."Order Line No.";
                  Wartung."Lieferscheinnr." := Liefzeile."Document No.";
                  Wartung."Lieferscheinzeilennr." := Liefzeile."Line No.";
                  IF Auftrag.GET(Auftrag."Document Type"::Order,Wartung."Auftragsnr.") THEN
                    Wartung.Auftragsstatus := Wartung.Auftragsstatus::Aktuell
                  ELSE
                    Wartung.Auftragsstatus := Wartung.Auftragsstatus::Archiviert;
                  Wartung.Endkunde := Liefkopf.Endkunde;
                  Wartung."Endkunde Adresse" := Liefkopf."Endkunde Adresse";
                  Wartung."Endkunde PLZ-Code" := Liefkopf."Endkunde PLZ-Code";
                  Wartung."Endkunde Ort"  := Liefkopf."Endkunde Ort";
                  Wartung."Endkunde Land" := Liefkopf."Endkunde Land";
                  Wartung."Endkunde Kontakt" := Liefkopf."Endkunde Kontakt";
                  Wartung."Endkunde Telefonnr." := Liefkopf."Endkunde Telefonnr.";
                  Wartung."Endkunde E-Mail" := Liefkopf."Endkunde E-Mail";
                  Wartung."Systemhaus Kontakt" := Liefkopf."Systemhaus Kontakt";
                  Wartung."Systemhaus E-Mail" := Liefkopf."Systemhaus E-Mail";
                  ////n KEIN INSERT(TRUE), damit angepasste Nr. Serie verwendet wird
                  Wartung.INSERT;
                  MESSAGE(Text51000,Wartung."Wartungsvertragsnr.");
                  ////e

                  PrfeHauptWartung.RESET;
                  PrfeHauptWartung.SETFILTER("Auftragsnr.",'%1',Wartung."Auftragsnr.");
                  PrfeHauptWartung.SETFILTER("Auftragszeilennr.",'%1',Wartung."Auftragszeilennr.");
                  IF NOT PrfeHauptWartung.FINDFIRST THEN BEGIN
                    Wartung."Hauptwartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                    Wartung.MODIFY(TRUE);
                  END ELSE BEGIN
                    Wartung."Hauptwartungsvertragsnr." := PrfeHauptWartung."Wartungsvertragsnr.";
                    Wartung.MODIFY(TRUE);
                  END;

                  //neu 10.05.12 ST - Update in Vorlage ausstehend
                  zuletzt_system_service := FALSE;
                  //neu Ende

                  //Anlage der Fhrungsrolle anhand des Debitoren
                  DebKontaktBez.RESET;
                  DebKontaktBez.SETFILTER("Business Relation Code",'%1','DEB');
                  DebKontaktBez.SETFILTER("No.",'%1',Wartung."Debitornr.");
                  IF DebKontaktBez.FINDFIRST THEN BEGIN
                    Ansprech.RESET;
                    Ansprech.SETFILTER("Kampagnennr.",'%1',Wartung."Wartungsvertragsnr.");
                    Ansprech.SETFILTER("Kontaktnr.",'%1',DebKontaktBez."Contact No.");
                    IF NOT Ansprech.FINDFIRST THEN BEGIN
                      Ansprech.INIT;
                      Ansprech.VALIDATE("Kontaktnr.",DebKontaktBez."Contact No.");
                      Ansprech."Kampagnennr." := Wartung."Wartungsvertragsnr.";
                      Ansprech.Fhrungsrolle := TRUE;
                      Ansprech.INSERT;
                    END;
                  END;
                END;
              END;

              //***************************************************************************************************
              //         Auswahlfenster zum Vorbelegen des Wartungs- bzw. Systemvertrages bei nachtr„glich
              //   gelieferten Modulen,Softwarelizenzen etc. ohne jegliche Wartungs oder Systemger„te Positionen
              //***************************************************************************************************

              IF (Artikel.Serviceklassifizierung <> 'SYSTEM CHAMPS') AND (Artikel.Serviceklassifizierung <> 'SYSTEM FLAT') THEN BEGIN
                system_service_verbindung := FALSE;

                //Prfe ob der Artikel ohne Service Kalkulation gebucht wurde
                CheckServiceCalc.RESET;
                CheckServiceCalc.SETFILTER(Art,'%1',CheckServiceCalc.Art::"SUP-AU");
                CheckServiceCalc.SETFILTER("Belegnr.",'%1',Liefzeile."Order No.");
                CheckServiceCalc.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Order Line No.");
                IF NOT CheckServiceCalc.FINDFIRST THEN BEGIN
                  //Prfe ob Systemartikel alleinstehend gebucht wurde
                  PrfeSystemLiefzeile.RESET;
                  PrfeSystemLiefzeile.SETFILTER("Document No.",'%1',Liefkopf."No.");
                  PrfeSystemLiefzeile.SETFILTER(Type,'%1',PrfeSystemLiefzeile.Type::Item);
                  PrfeSystemLiefzeile.SETFILTER(Quantity,'>%1',0);
                  IF PrfeSystemLiefzeile.FINDFIRST THEN BEGIN
                    REPEAT
                      IF (Artikel.GET(PrfeSystemLiefzeile."No.")) AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS')
                      OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                        CheckServiceCalc.RESET;
                        CheckServiceCalc.SETFILTER("Belegnr.",'%1',PrfeSystemLiefzeile."Order No.");
                        CheckServiceCalc.SETFILTER("Belegzeilennr.",'%1',PrfeSystemLiefzeile."Order Line No.");
                        IF NOT CheckServiceCalc.FINDFIRST THEN
                          system_service_verbindung := TRUE;
                      END;
                    UNTIL PrfeSystemLiefzeile.NEXT = 0;

                    IF system_service_verbindung = FALSE THEN BEGIN
                      MESSAGE(Text51001,Liefzeile."No.",Liefzeile."Line No.",Liefzeile.FIELDCAPTION("System Projektinfos"),
                      Liefzeile."System Projektinfos");
                      COMMIT;
                      CLEAR(Wartungsšbersicht);
                      Wartungsšbersicht.SETFILTER("Debitornr.",'%1',Liefkopf."Sell-to Customer No.");
                      IF Wartungsšbersicht.FINDFIRST THEN BEGIN
                        IF PAGE.RUNMODAL(50024,Wartungsšbersicht) = ACTION::LookupOK THEN BEGIN
                            wartungsnr := Wartungsšbersicht."Wartungsvertragsnr.";
                            hauptwartungsnr := Wartungsšbersicht."Hauptwartungsvertragsnr.";
                        END ELSE BEGIN
                          MESSAGE(Text51002,Liefzeile."No.",Liefzeile."Line No.");
                        END;
                      END ELSE
                        MESSAGE(Text51003);
                    END;
                  END;
                END;
              END;

              SeriennrVerfolgung.RESET;
              //SeriennrVerfolgung.SETFILTER("Item Tracking",'%1',SeriennrVerfolgung."Item Tracking"::"Serial No.");
              SeriennrVerfolgung.SETFILTER("Document No.",'%1',Liefzeile."Document No.");
              SeriennrVerfolgung.SETFILTER("Document Line No.",'%1',Liefzeile."Line No.");
              IF SeriennrVerfolgung.FINDFIRST THEN
                REPEAT
                  SystemPos.RESET;
                  SystemPos.SETFILTER(Art,'%1',SystemPos.Art::System);
                  SystemPos.SETFILTER("Nr.",'%1',Liefkopf."No.");
                  SystemPos.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Line No.");
                  SystemPos.SETFILTER("Artikelnr.",'%1',Liefzeile."No.");
                  SystemPos.SETFILTER("Seriennr.",'%1',SeriennrVerfolgung."Serial No.");
                  IF NOT SystemPos.FINDFIRST THEN BEGIN
                    SystemPos.RESET;
                    SystemPos.INIT;
                    SystemPos.Art := SystemPos.Art::System;
                    SystemPos."Nr." := Liefkopf."No.";
                    ////n KEIN INSERT(TRUE), damit angepasste Nr. Serie verwendet wird
                    IF (SystemPos.Art = SystemPos.Art::Service)
                    OR (SystemPos.Art = SystemPos.Art::System) THEN
                      IF Liefkopf."Posting Date" > 010114D THEN
                        ok := EVALUATE(eingabe,'TOPAS-SERV')
                      ELSE
                        ok := EVALUATE(eingabe,'TOPAS-SVAL');
                    laufende_nummer := '';
                    NoSeriesMgt.InitSeries(eingabe,eingabe,TODAY,laufende_nummer,eingabe);
                    SystemPos."Lfd. Nr." := laufende_nummer;
                    SystemPos."Angelegt von" := USERID;
                    SystemPos."Angelegt am" := WORKDATE;
                    SystemPos.INSERT;
                    ////e
                    SystemPos.Belegdatum := SeriennrVerfolgung."Posting Date";
                    SystemPos.VALIDATE("Artikelnr.",Liefzeile."No.");
                    SystemPos."Seriennr." := SeriennrVerfolgung."Serial No.";
                    SystemPos."Debitornr." := Liefkopf."Sell-to Customer No.";
                    SystemPos.Debitorname := Liefkopf."Sell-to Customer Name";
                    SystemPos.Menge := SeriennrVerfolgung.Quantity * (-1);
                    SystemPos.Kontakt := Liefkopf."Sell-to Contact";
                    SystemPos."Name 2" := Liefkopf."Sell-to Customer Name 2";
                    SystemPos.Adresse := Liefkopf."Sell-to Address";
                    SystemPos."Adresse 2" := Liefkopf."Sell-to Address 2";
                    SystemPos."PLZ-Code" := Liefkopf."Sell-to Post Code";
                    SystemPos.Ort := Liefkopf."Sell-to City";
                    SystemPos."System Projektinfos" := Liefzeile."System Projektinfos";
                    SystemPos."Auftragsnr." := Liefkopf."Order No.";
                    SystemPos."Auftragszeilennr." := Liefzeile."Line No.";
                    SystemPos.Ursprungsland := SeriennrVerfolgung.Ursprungsland;
                    SystemPos."Product Key" := SeriennrVerfolgung."Product Key";
                    SystemPos."Seriennr. 2" := SeriennrVerfolgung."Serial No. 2";
                    SystemPos."Belegzeilennr." := Liefzeile."Line No.";
                    IF STRPOS(Liefkopf."Payment Terms Code",'SOR') <> 0 THEN BEGIN
                      SystemPos.SOR := TRUE;
                      SystemPos."SOR Option" := Liefkopf."Payment Terms Code";
                    END;

                    IF (wartungsnr <> '') AND (hauptwartungsnr <> '') THEN BEGIN
                      SystemPos."Wartungsvertragsnr." := wartungsnr;
                      SystemPos."Hauptwartungsvertragsnr." := hauptwartungsnr;
                    END ELSE BEGIN
                      //neu 10.05.2012-ST, Update in Vorlage ausstehend
                      IF (Artikel.GET(SeriennrVerfolgung."Item No.")) AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS')
                      OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                        SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                        SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                      END ELSE BEGIN
                        IF zuletzt_system_service = TRUE THEN BEGIN
                          IF (SystemPos."Artikelnr." <> 'RCBK0001')
                          AND (SystemPos."Artikelnr." <> 'CENTOL10')
                          AND (SystemPos."Artikelnr." <> 'MCMK00015')
                          AND (SystemPos."Artikelnr." <> 'MCMK00016')
                          AND (SystemPos."Artikelnr." <> 'MPRS232')
                          AND (SystemPos."Artikelnr." <> 'MP-RMSHL') THEN BEGIN
                            SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                            SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                          END;
                        END ELSE BEGIN
                          IF (SystemPos."Artikelnr." = 'RCBK0001')
                          OR (SystemPos."Artikelnr." = 'CENTOL10')
                          OR (SystemPos."Artikelnr." = 'MCMK00015')
                          OR (SystemPos."Artikelnr." = 'MCMK00016')
                          OR (SystemPos."Artikelnr." = 'MPRS232')
                          OR (SystemPos."Artikelnr." = 'MP-RMSHL')
                          OR ((letzte_system_wartungsnr = '') AND ( letzte_system_hauptwartungsnr = '')) THEN BEGIN
                            SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                            SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                          END ELSE BEGIN
                            SystemPos."Wartungsvertragsnr." := letzte_system_wartungsnr;
                            SystemPos."Hauptwartungsvertragsnr." := letzte_system_hauptwartungsnr;
                          END;
                        END;
                      END;
                    END;
                    //neu Ende

                    IF (Artikel.GET(SeriennrVerfolgung."Item No.")) AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS')
                    OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                      SystemPos.Basisger„t := TRUE;
                      Wartung.GET(SystemPos."Wartungsvertragsnr.");
                      Wartung.Basisger„t := SystemPos."Artikelnr.";
                      Wartung."Ablauf Gew„hrleistung" := CALCDATE('1J-1T',SeriennrVerfolgung."Posting Date");
                      IF Wartung.Klasse = Wartung.Klasse::Mehrger„te THEN
                        Wartung.Volumen += 1;
                      Wartung.MODIFY(TRUE);
                    END;

                    IF Wartung.GET(SystemPos."Wartungsvertragsnr.") AND (SystemPos."Wartungsvertragsnr." <> '') THEN
                      Wartung.MODIFY(TRUE)
                    ELSE BEGIN
                      //Einzel Modul im AU + Service Kalkulation mit Basisger„t aus LS usw.
                      GetServiceCalc.RESET;
                      GetServiceCalc.SETFILTER(Art,'%1',GetServiceCalc.Art::"SUP-AU");
                      GetServiceCalc.SETFILTER("Belegnr.",'%1',Liefkopf."Order No.");
                      GetServiceCalc.SETFILTER("Belegzeilennr.",'%1',Liefzeile."Order Line No.");
                      IF GetServiceCalc.FINDFIRST THEN BEGIN
                        ZuordnungBasisger„t.RESET;
                        ZuordnungBasisger„t.SETFILTER(Art,'%1',ZuordnungBasisger„t.Art::"SUP-AU");
                        ZuordnungBasisger„t.SETFILTER("Nr.",'%1',Liefkopf."Order No.");
                        ZuordnungBasisger„t.SETFILTER("Zeilennr.",'%1',GetServiceCalc."Zeilennr.");
                        ZuordnungBasisger„t.SETFILTER(Basisger„t,'%1',TRUE);
                        IF ZuordnungBasisger„t.FINDFIRST THEN BEGIN
                          Wartung.RESET;
                          Wartung.SETFILTER("Lieferscheinnr.",'%1',ZuordnungBasisger„t."Belegnr.");
                          Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',ZuordnungBasisger„t."Belegzeilennr.");
                          IF Wartung.FINDFIRST THEN BEGIN
                            SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                            SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                            Wartung.MODIFY(TRUE);
                          END;
                        END ELSE
                          MESSAGE(Text51004,SystemPos."Lfd. Nr.",SystemPos."Artikelnr.",SystemPos."Belegzeilennr.");
                      END ELSE
                        MESSAGE(Text51004,SystemPos."Lfd. Nr.",SystemPos."Artikelnr.",SystemPos."Belegzeilennr.");
                    END;

                    //Zugeh”rigkeit der Positionen untereinander ermitteln
                    SystemPos."Geh”rt zu Lfd. Nr." := SystemPos.SystemZugeh”rigkeitErmitteln(Liefkopf."Order No.",
                                                      SystemPos."Lfd. Nr.",SystemPos."Wartungsvertragsnr.");
                    SystemPos.MODIFY;
                    systempos_angelegt := TRUE;
                  END ELSE BEGIN
                  ////n
                    IF (SystemPos."Wartungsvertragsnr." = '') AND (wartungsnr <> '') AND (hauptwartungsnr <> '') THEN BEGIN
                      SystemPos."Wartungsvertragsnr." := wartungsnr;
                      SystemPos."Hauptwartungsvertragsnr." := hauptwartungsnr;
                      SystemPos."Geh”rt zu Lfd. Nr." := SystemPos.SystemZugeh”rigkeitErmitteln(Liefkopf."Order No.",
                                                        SystemPos."Lfd. Nr.",SystemPos."Wartungsvertragsnr.");

                      SystemPos.MODIFY(TRUE);
                      systempos_angelegt := TRUE;
                    END ELSE BEGIN
                      //neu 10.05.12 ST - Update in Vorlage ausstehend
                      IF (system_service_verbindung = TRUE) AND (SystemPos."Wartungsvertragsnr." = '') THEN BEGIN
                        MESSAGE(Text51010,SystemPos."Lfd. Nr.",Liefzeile."No.",SystemPos."Seriennr.");
                        COMMIT;
                        CLEAR(Wartungsšbersicht);
                        Wartungsšbersicht.SETFILTER("Debitornr.",'%1',Liefkopf."Sell-to Customer No.");
                        IF Wartungsšbersicht.FINDFIRST THEN BEGIN
                          IF PAGE.RUNMODAL(50024,Wartungsšbersicht) = ACTION::LookupOK THEN BEGIN
                            SystemPos."Wartungsvertragsnr." := Wartungsšbersicht."Wartungsvertragsnr.";
                            SystemPos."Hauptwartungsvertragsnr." := Wartungsšbersicht."Hauptwartungsvertragsnr.";
                            SystemPos."Geh”rt zu Lfd. Nr." := SystemPos.SystemZugeh”rigkeitErmitteln(Liefkopf."Order No.",
                                                              SystemPos."Lfd. Nr.",SystemPos."Wartungsvertragsnr.");
                            SystemPos.MODIFY(TRUE);
                            systempos_angelegt := TRUE;
                          END ELSE BEGIN
                            MESSAGE(Text51002,Liefzeile."No.",Liefzeile."Line No.");
                          END;
                        END ELSE
                          MESSAGE(Text51003);
                      END;
                      //neu Ende
                    END;
                  END;
                  ////e
                UNTIL SeriennrVerfolgung.NEXT = 0;

            END;
          UNTIL Liefzeile.NEXT = 0;

      ////n
          IF systempos_angelegt = FALSE THEN
            MESSAGE(Text51005)
          ELSE
            COMMIT;
      END ELSE BEGIN
        //06.10.17 ST - Fr Anlage aus der Beleghistorie z.B. bei SOR Lieferscheinen woraus kein Systemvertrag entstand
        Beleghistorie.RESET;
        Beleghistorie.SETFILTER(Belegart,'%1',Beleghistorie.Belegart::"Sales Shipment");
        Beleghistorie.SETFILTER("Belegnr.",'%1',ShipNo);
        Beleghistorie.SETFILTER(Herstellercode,'%1','59');
        Beleghistorie.SETFILTER(Menge,'>%1',0);
        IF Beleghistorie.FINDFIRST THEN
          REPEAT

            wartungsnr := '';
            hauptwartungsnr := '';

            datensatz_auslassen := FALSE;

            IF Artikel.GET(Beleghistorie."Artikelnr.") THEN BEGIN
              IF (Artikel."Software Upgrade Protection" = TRUE)
              //OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')
              OR (Artikel."No." = 'ADVC-RPLC-SRVC-IN#01')
              OR (Artikel."No." = 'STD-SUPP-PROG/YR')
              OR (Artikel."No." = 'PREM-SUPP-PROG/YR')
              //OR (Artikel."No." = 'RCBK0001')
              //OR (Artikel."No." = 'CENTOL10')
              //OR (Artikel."No." = 'MCMK00015')
              //OR (Artikel."No." = 'MCMK00016')
              //OR (Artikel."No." = 'MPRS232')
              //OR (Artikel."No." = 'MP-RMSHL')
              THEN
                datensatz_auslassen := TRUE
              ELSE BEGIN
                IF Artikel."Manufacturer Code" <> '59' THEN
                  datensatz_auslassen := TRUE
                ELSE
                  datensatz_auslassen := FALSE;
              END;
            END ELSE
              datensatz_auslassen := TRUE;

            IF datensatz_auslassen = FALSE THEN BEGIN
            //neu Ende

              //***************************************************************************************************
              //                         Generierung des Systemvertrages fr Chassis o.„.
              //***************************************************************************************************

              IF Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS' THEN BEGIN
                Wartung.RESET;
                Wartung.SETFILTER("Lieferscheinnr.",'%1',Beleghistorie."Belegnr.");
                Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',Beleghistorie."Zeilennr.");
                IF NOT Wartung.FINDFIRST THEN BEGIN

                  ////n No. Series wird normalerweise direkt von der Tabelle bernommen bei INSERT(TRUE)
                  ////n Nur in diesem Sonderfall, sollen nachtr„glich hinzugefgte Positionen
                  ////n einen anderen Nummernserienkreis bekommen, so dass diese besser auseinander
                  ////n gehaltn werden k”nnen

                  IF Beleghistorie.Menge > 1 THEN BEGIN
                    IF CONFIRM(Text51007,TRUE,Beleghistorie.Menge) THEN
                      vertraege_anlegen := Beleghistorie.Menge
                    ELSE
                      ERROR(Text51002,Beleghistorie."Artikelnr.",Beleghistorie."Zeilennr.");
                  END ELSE BEGIN
                    vertraege_anlegen  := 1;
                  END;

                  FOR k := 1 TO  vertraege_anlegen DO BEGIN
                    Wartung.INIT;
                    laufende_nummer := '';
                    IF Beleghistorie.Belegdatum > 010114D THEN
                      eingabe := 'TOPAS-WART'
                    ELSE
                      eingabe := 'TOPAS-WTAL';

                    NoSeriesMgt.InitSeries(eingabe,eingabe,TODAY,laufende_nummer,eingabe);
                    Wartung."Wartungsvertragsnr." := laufende_nummer;
                    Wartung."Angelegt von" := USERID;
                    Wartung."Angelegt am" := WORKDATE;
                    ////e
                    Wartung.Status := Wartung.Status::System;
                    Wartung.Klasse := Wartung.Klasse::Einzelger„t;
                    Wartung.Volumen := 1;
                    Wartung.Startdatum := Beleghistorie.Belegdatum ;
                    Wartung."Debitornr." := Beleghistorie."Debitornr.";
                    //Das Feld "Payment Terms Code" gibt es in der Tabelle Beleghistorie noch nicht
                    {
                    IF STRPOS(Beleghistorie."Payment Terms Code",'SOR') <> 0 THEN BEGIN
                      Wartung.SOR := TRUE;
                      Wartung."SOR Option" := Beleghistorie."Payment Terms Code";
                    END;
                    }
                    //Des Basisger„tes
                    Wartung."Auftragsnr." := Beleghistorie."Auftragsnr.";
                    Wartung."Auftragszeilennr." := Beleghistorie."Auftragszeilennr.";
                    Wartung."Lieferscheinnr." := Beleghistorie."Belegnr.";
                    Wartung."Lieferscheinzeilennr." := Beleghistorie."Zeilennr.";
                    IF Auftrag.GET(Auftrag."Document Type"::Order,Wartung."Auftragsnr.") THEN
                      Wartung.Auftragsstatus := Wartung.Auftragsstatus::Aktuell
                    ELSE
                      Wartung.Auftragsstatus := Wartung.Auftragsstatus::Archiviert;

                    ////n KEIN INSERT(TRUE), damit angepasste Nr. Serie verwendet wird
                    Wartung.INSERT;
                    MESSAGE(Text51000,Wartung."Wartungsvertragsnr.");
                    ////e

                    PrfeHauptWartung.RESET;
                    PrfeHauptWartung.SETFILTER("Auftragsnr.",'%1',Wartung."Auftragsnr.");
                    PrfeHauptWartung.SETFILTER("Auftragszeilennr.",'%1',Wartung."Auftragszeilennr.");
                    IF NOT PrfeHauptWartung.FINDFIRST THEN BEGIN
                      Wartung."Hauptwartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                      Wartung.MODIFY(TRUE);
                    END ELSE BEGIN
                      Wartung."Hauptwartungsvertragsnr." := PrfeHauptWartung."Wartungsvertragsnr.";
                      Wartung.MODIFY(TRUE);
                    END;

                    //neu 10.05.2012-ST, Update in Vorlage ausstehend
                    zuletzt_system_service := TRUE;
                    letzte_system_wartungsnr := Wartung."Wartungsvertragsnr.";
                    letzte_system_hauptwartungsnr := Wartung."Hauptwartungsvertragsnr.";
                    //neu Ende

                    //Anlage der Fhrungsrolle anhand des Debitoren
                    DebKontaktBez.RESET;
                    DebKontaktBez.SETFILTER("Business Relation Code",'%1','DEB');
                    DebKontaktBez.SETFILTER("No.",'%1',Wartung."Debitornr.");
                    IF DebKontaktBez.FINDFIRST THEN BEGIN
                      Ansprech.RESET;
                      Ansprech.SETFILTER("Kampagnennr.",'%1',Wartung."Wartungsvertragsnr.");
                      Ansprech.SETFILTER("Kontaktnr.",'%1',DebKontaktBez."Contact No.");
                      IF NOT Ansprech.FINDFIRST THEN BEGIN
                        Ansprech.INIT;
                        Ansprech.VALIDATE("Kontaktnr.",DebKontaktBez."Contact No.");
                        Ansprech."Kampagnennr." := Wartung."Wartungsvertragsnr.";
                        Ansprech.Fhrungsrolle := TRUE;
                        Ansprech.INSERT;
                      END;
                    END;
                  END;
                END;
              END;

              //***************************************************************************************************
              //                          Generierung des Systemvertrages fr FLAT Ger„te
              //***************************************************************************************************

              IF Artikel.Serviceklassifizierung = 'SYSTEM FLAT' THEN BEGIN
                Wartung.RESET;
                Wartung.SETFILTER("Lieferscheinnr.",'%1',Beleghistorie."Belegnr.");
                Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',Beleghistorie."Zeilennr.");
                IF NOT Wartung.FINDFIRST THEN BEGIN
                  Wartung.INIT;
                  Wartung.Status := Wartung.Status::System;
                  Wartung.Klasse := Wartung.Klasse::Mehrger„te;
                  ////n
                  laufende_nummer := '';
                  IF Beleghistorie.Belegdatum > 010114D THEN
                    eingabe := 'TOPAS-WART'
                  ELSE
                    eingabe := 'TOPAS-WTAL';
                  NoSeriesMgt.InitSeries(eingabe,eingabe,TODAY,laufende_nummer,eingabe);
                  Wartung."Wartungsvertragsnr." := laufende_nummer;
                  Wartung."Angelegt von" := USERID;
                  Wartung."Angelegt am" := WORKDATE;
                  ////e
                  //Fr Mehrger„te immer 0, da das Volumen sp„ter durch die Einzelpositionen hochgez„hlt wird
                  Wartung.Volumen := 0;
                  Wartung.Startdatum := Beleghistorie.Belegdatum;
                  Wartung."Debitornr." := Beleghistorie."Debitornr.";
                  //Das Feld "Payment Terms Code" gibt es in der Tabelle Beleghistorie noch nicht
                  {
                  IF STRPOS(Beleghistorie."Payment Terms Code",'SOR') <> 0 THEN BEGIN
                    Wartung.SOR := TRUE;
                    Wartung."SOR Option" := Beleghistorie."Payment Terms Code";
                  END;
                  }
                  //Des Basisger„tes
                  Wartung."Auftragsnr." := Beleghistorie."Auftragsnr.";
                  Wartung."Auftragszeilennr." := Beleghistorie."Auftragszeilennr.";
                  Wartung."Lieferscheinnr." := Beleghistorie."Belegnr.";
                  Wartung."Lieferscheinzeilennr." := Beleghistorie."Zeilennr.";
                  IF Auftrag.GET(Auftrag."Document Type"::Order,Wartung."Auftragsnr.") THEN
                    Wartung.Auftragsstatus := Wartung.Auftragsstatus::Aktuell
                  ELSE
                    Wartung.Auftragsstatus := Wartung.Auftragsstatus::Archiviert;
                  //Weitere Details zu den Endkunden fehlen leider in der Tabelle Beleghistorie
                  Wartung.Endkunde := Beleghistorie.Endkunde;
                  ////n KEIN INSERT(TRUE), damit angepasste Nr. Serie verwendet wird
                  Wartung.INSERT;
                  MESSAGE(Text51000,Wartung."Wartungsvertragsnr.");
                  ////e

                  PrfeHauptWartung.RESET;
                  PrfeHauptWartung.SETFILTER("Auftragsnr.",'%1',Wartung."Auftragsnr.");
                  PrfeHauptWartung.SETFILTER("Auftragszeilennr.",'%1',Wartung."Auftragszeilennr.");
                  IF NOT PrfeHauptWartung.FINDFIRST THEN BEGIN
                    Wartung."Hauptwartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                    Wartung.MODIFY(TRUE);
                  END ELSE BEGIN
                    Wartung."Hauptwartungsvertragsnr." := PrfeHauptWartung."Wartungsvertragsnr.";
                    Wartung.MODIFY(TRUE);
                  END;

                  //neu 10.05.12 ST - Update in Vorlage ausstehend
                  zuletzt_system_service := FALSE;
                  //neu Ende

                  //Anlage der Fhrungsrolle anhand des Debitoren
                  DebKontaktBez.RESET;
                  DebKontaktBez.SETFILTER("Business Relation Code",'%1','DEB');
                  DebKontaktBez.SETFILTER("No.",'%1',Wartung."Debitornr.");
                  IF DebKontaktBez.FINDFIRST THEN BEGIN
                    Ansprech.RESET;
                    Ansprech.SETFILTER("Kampagnennr.",'%1',Wartung."Wartungsvertragsnr.");
                    Ansprech.SETFILTER("Kontaktnr.",'%1',DebKontaktBez."Contact No.");
                    IF NOT Ansprech.FINDFIRST THEN BEGIN
                      Ansprech.INIT;
                      Ansprech.VALIDATE("Kontaktnr.",DebKontaktBez."Contact No.");
                      Ansprech."Kampagnennr." := Wartung."Wartungsvertragsnr.";
                      Ansprech.Fhrungsrolle := TRUE;
                      Ansprech.INSERT;
                    END;
                  END;
                END;
              END;

              //***************************************************************************************************
              //         Auswahlfenster zum Vorbelegen des Wartungs- bzw. Systemvertrages bei nachtr„glich
              //   gelieferten Modulen,Softwarelizenzen etc. ohne jegliche Wartungs oder Systemger„te Positionen
              //***************************************************************************************************

              IF (Artikel.Serviceklassifizierung <> 'SYSTEM CHAMPS') AND (Artikel.Serviceklassifizierung <> 'SYSTEM FLAT') THEN BEGIN
                system_service_verbindung := FALSE;

                //Prfe ob der Artikel ohne Service Kalkulation gebucht wurde
                CheckServiceCalc.RESET;
                CheckServiceCalc.SETFILTER(Art,'%1',CheckServiceCalc.Art::"SUP-AU");
                CheckServiceCalc.SETFILTER("Belegnr.",'%1',Beleghistorie."Auftragsnr.");
                CheckServiceCalc.SETFILTER("Belegzeilennr.",'%1',Beleghistorie."Auftragszeilennr.");
                IF NOT CheckServiceCalc.FINDFIRST THEN BEGIN
                  //Prfe ob Systemartikel alleinstehend gebucht wurde
                  PrfeSystemLiefzeile.RESET;
                  PrfeSystemLiefzeile.SETFILTER("Document No.",'%1',Beleghistorie."Belegnr.");
                  PrfeSystemLiefzeile.SETFILTER(Type,'%1',PrfeSystemLiefzeile.Type::Item);
                  PrfeSystemLiefzeile.SETFILTER(Quantity,'>%1',0);
                  IF PrfeSystemLiefzeile.FINDFIRST THEN BEGIN
                    REPEAT
                      IF (Artikel.GET(PrfeSystemLiefzeile."No.")) AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS')
                      OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                        CheckServiceCalc.RESET;
                        CheckServiceCalc.SETFILTER("Belegnr.",'%1',PrfeSystemLiefzeile."Order No.");
                        CheckServiceCalc.SETFILTER("Belegzeilennr.",'%1',PrfeSystemLiefzeile."Order Line No.");
                        IF NOT CheckServiceCalc.FINDFIRST THEN
                          system_service_verbindung := TRUE;
                      END;
                    UNTIL PrfeSystemLiefzeile.NEXT = 0;

                    IF system_service_verbindung = FALSE THEN BEGIN
                      MESSAGE(Text51001,Beleghistorie."Artikelnr.",Beleghistorie."Zeilennr.",Beleghistorie.FIELDCAPTION("ACS Projektinfos"),
                      Beleghistorie."ACS Projektinfos");
                      COMMIT;
                      CLEAR(Wartungsšbersicht);
                      Wartungsšbersicht.SETFILTER("Debitornr.",'%1',Beleghistorie."Debitornr.");
                      IF Wartungsšbersicht.FINDFIRST THEN BEGIN
                        IF PAGE.RUNMODAL(50024,Wartungsšbersicht) = ACTION::LookupOK THEN BEGIN
                          wartungsnr := Wartungsšbersicht."Wartungsvertragsnr.";
                          hauptwartungsnr := Wartungsšbersicht."Hauptwartungsvertragsnr.";
                        END ELSE BEGIN
                          MESSAGE(Text51002,Beleghistorie."Artikelnr.",Beleghistorie."Zeilennr.");
                        END;
                      END ELSE
                        MESSAGE(Text51003);
                    END;
                  END;
                END;
              END;

              SeriennrHistorie.RESET;
              //SeriennrHistorie.SETFILTER("Item Tracking",'%1',SeriennrHistorie."Item Tracking"::"Serial No.");
              SeriennrHistorie.SETFILTER("Shipment No.",'%1',Beleghistorie."Belegnr.");
              SeriennrHistorie.SETFILTER("Shipment Line No.",'%1',Beleghistorie."Zeilennr.");
              IF SeriennrHistorie.FINDFIRST THEN
                REPEAT
                  SystemPos.RESET;
                  SystemPos.SETFILTER(Art,'%1',SystemPos.Art::System);
                  SystemPos.SETFILTER("Nr.",'%1',Beleghistorie."Belegnr.");
                  SystemPos.SETFILTER("Belegzeilennr.",'%1',Beleghistorie."Zeilennr.");
                  SystemPos.SETFILTER("Artikelnr.",'%1',Beleghistorie."Artikelnr.");
                  SystemPos.SETFILTER("Seriennr.",'%1',SeriennrHistorie."Serial No.");
                  IF NOT SystemPos.FINDFIRST THEN BEGIN
                    SystemPos.RESET;
                    SystemPos.INIT;
                    SystemPos.Art := SystemPos.Art::System;
                    SystemPos."Nr." := Beleghistorie."Belegnr.";
                    ////n KEIN INSERT(TRUE), damit angepasste Nr. Serie verwendet wird
                    IF (SystemPos.Art = SystemPos.Art::Service)
                    OR (SystemPos.Art = SystemPos.Art::System) THEN
                      IF Beleghistorie.Belegdatum > 010114D THEN
                        ok := EVALUATE(eingabe,'TOPAS-SERV')
                      ELSE
                        ok := EVALUATE(eingabe,'TOPAS-SVAL');
                    laufende_nummer := '';
                    NoSeriesMgt.InitSeries(eingabe,eingabe,TODAY,laufende_nummer,eingabe);
                    SystemPos."Lfd. Nr." := laufende_nummer;
                    SystemPos."Angelegt von" := USERID;
                    SystemPos."Angelegt am" := WORKDATE;
                    SystemPos.INSERT;
                    ////e
                    SystemPos.Belegdatum := SeriennrHistorie."Posting Date";
                    SystemPos.VALIDATE("Artikelnr.",Beleghistorie."Artikelnr.");
                    SystemPos."Seriennr." := SeriennrHistorie."Serial No.";
                    SystemPos."Debitornr." := Beleghistorie."Debitornr.";
                    IF Customer.GET(Beleghistorie."Debitornr.") THEN
                      SystemPos.Debitorname := Customer.Name;
                    SystemPos.Menge := SeriennrHistorie.Quantity;
                    //Hier msste eigentlich der Kontaktname stehen, in der Tabelle ist hier aber die Kontaktnr. gemeint
                    //SystemPos.Kontakt := Beleghistorie.Kontakt;
                    //Die nachfolgenden Infos gibt es in der Beleghistorie nicht
                    {
                    SystemPos."Name 2" := Beleghistorie."Sell-to Customer Name 2";
                    SystemPos.Adresse := Beleghistorie."Sell-to Address";
                    SystemPos."Adresse 2" := Beleghistorie."Sell-to Address 2";
                    SystemPos."PLZ-Code" := Beleghistorie."Sell-to Post Code";
                    SystemPos.Ort := Beleghistorie."Sell-to City";
                    }
                    SystemPos."System Projektinfos" := Beleghistorie."ACS Projektinfos";
                    SystemPos."Auftragsnr." := Beleghistorie."Auftragsnr.";
                    SystemPos."Auftragszeilennr." := Beleghistorie."Auftragszeilennr.";
                    SystemPos.Ursprungsland := SeriennrHistorie."Country of Origin";
                    //Gab es zu NAV 5.0 noch nicht
                    //SystemPos."Product Key" := SeriennrHistorie."Product Key";
                    //SystemPos."Seriennr. 2" := SeriennrHistorie."Serial No. 2";
                    SystemPos."Belegzeilennr." := Beleghistorie."Zeilennr.";
                    //Das Feld "Payment Terms Code" gibt es in der Tabelle Beleghistorie noch nicht
                    {
                    IF STRPOS(Beleghistorie."Payment Terms Code",'SOR') <> 0 THEN BEGIN
                      SystemPos.SOR := TRUE;
                      SystemPos."SOR Option" := Beleghistorie."Payment Terms Code";
                    END;
                    }
                    IF (wartungsnr <> '') AND (hauptwartungsnr <> '') THEN BEGIN
                      SystemPos."Wartungsvertragsnr." := wartungsnr;
                      SystemPos."Hauptwartungsvertragsnr." := hauptwartungsnr;
                    END ELSE BEGIN
                      //neu 10.05.2012-ST, Update in Vorlage ausstehend
                      IF (Artikel.GET(SeriennrHistorie."Item No.")) AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS')
                      OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                        SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                        SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                      END ELSE BEGIN
                        IF zuletzt_system_service = TRUE THEN BEGIN
                          IF (SystemPos."Artikelnr." <> 'RCBK0001')
                          AND (SystemPos."Artikelnr." <> 'CENTOL10')
                          AND (SystemPos."Artikelnr." <> 'MCMK00015')
                          AND (SystemPos."Artikelnr." <> 'MCMK00016')
                          AND (SystemPos."Artikelnr." <> 'MPRS232')
                          AND (SystemPos."Artikelnr." <> 'MP-RMSHL') THEN BEGIN
                            SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                            SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                          END;
                        END ELSE BEGIN
                          IF (SystemPos."Artikelnr." = 'RCBK0001')
                          OR (SystemPos."Artikelnr." = 'CENTOL10')
                          OR (SystemPos."Artikelnr." = 'MCMK00015')
                          OR (SystemPos."Artikelnr." = 'MCMK00016')
                          OR (SystemPos."Artikelnr." = 'MPRS232')
                          OR (SystemPos."Artikelnr." = 'MP-RMSHL')
                          OR ((letzte_system_wartungsnr = '') AND ( letzte_system_hauptwartungsnr = '')) THEN BEGIN
                            SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                            SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                          END ELSE BEGIN
                            SystemPos."Wartungsvertragsnr." := letzte_system_wartungsnr;
                            SystemPos."Hauptwartungsvertragsnr." := letzte_system_hauptwartungsnr;
                          END;
                        END;
                      END;
                    END;
                    //neu Ende

                    IF (Artikel.GET(SeriennrHistorie."Item No.")) AND ((Artikel.Serviceklassifizierung = 'SYSTEM CHAMPS')
                    OR (Artikel.Serviceklassifizierung = 'SYSTEM FLAT')) THEN BEGIN
                      SystemPos.Basisger„t := TRUE;
                      Wartung.GET(SystemPos."Wartungsvertragsnr.");
                      Wartung.Basisger„t := SystemPos."Artikelnr.";
                      Wartung."Ablauf Gew„hrleistung" := CALCDATE('1J-1T',SeriennrHistorie."Posting Date");
                      IF Wartung.Klasse = Wartung.Klasse::Mehrger„te THEN
                        Wartung.Volumen += 1;
                      Wartung.MODIFY(TRUE);
                    END;

                    IF Wartung.GET(SystemPos."Wartungsvertragsnr.") AND (SystemPos."Wartungsvertragsnr." <> '') THEN
                      Wartung.MODIFY(TRUE)
                    ELSE BEGIN
                      //Einzel Modul im AU + Service Kalkulation mit Basisger„t aus LS usw.
                      GetServiceCalc.RESET;
                      GetServiceCalc.SETFILTER(Art,'%1',GetServiceCalc.Art::"SUP-AU");
                      GetServiceCalc.SETFILTER("Belegnr.",'%1',Beleghistorie."Auftragsnr.");
                      GetServiceCalc.SETFILTER("Belegzeilennr.",'%1',Beleghistorie."Auftragszeilennr.");
                      IF GetServiceCalc.FINDFIRST THEN BEGIN
                        ZuordnungBasisger„t.RESET;
                        ZuordnungBasisger„t.SETFILTER(Art,'%1',ZuordnungBasisger„t.Art::"SUP-AU");
                        ZuordnungBasisger„t.SETFILTER("Nr.",'%1',Beleghistorie."Auftragsnr.");
                        ZuordnungBasisger„t.SETFILTER("Zeilennr.",'%1',GetServiceCalc."Zeilennr.");
                        ZuordnungBasisger„t.SETFILTER(Basisger„t,'%1',TRUE);
                        IF ZuordnungBasisger„t.FINDFIRST THEN BEGIN
                          Wartung.RESET;
                          Wartung.SETFILTER("Lieferscheinnr.",'%1',ZuordnungBasisger„t."Belegnr.");
                          Wartung.SETFILTER("Lieferscheinzeilennr.",'%1',ZuordnungBasisger„t."Belegzeilennr.");
                          IF Wartung.FINDFIRST THEN BEGIN
                            SystemPos."Wartungsvertragsnr." := Wartung."Wartungsvertragsnr.";
                            SystemPos."Hauptwartungsvertragsnr." := Wartung."Hauptwartungsvertragsnr.";
                            Wartung.MODIFY(TRUE);
                          END;
                        END ELSE
                          MESSAGE(Text51004,SystemPos."Lfd. Nr.",SystemPos."Artikelnr.",SystemPos."Belegzeilennr.");
                      END ELSE
                        MESSAGE(Text51004,SystemPos."Lfd. Nr.",SystemPos."Artikelnr.",SystemPos."Belegzeilennr.");
                    END;

                    //Zugeh”rigkeit der Positionen untereinander ermitteln
                    SystemPos."Geh”rt zu Lfd. Nr." := SystemPos.SystemZugeh”rigkeitErmitteln(Beleghistorie."Auftragsnr.",
                                                      SystemPos."Lfd. Nr.",SystemPos."Wartungsvertragsnr.");
                    SystemPos.MODIFY;
                    systempos_angelegt := TRUE;
                  END ELSE BEGIN
                  ////n
                    IF (SystemPos."Wartungsvertragsnr." = '') AND (wartungsnr <> '') AND (hauptwartungsnr <> '') THEN BEGIN
                      SystemPos."Wartungsvertragsnr." := wartungsnr;
                      SystemPos."Hauptwartungsvertragsnr." := hauptwartungsnr;
                      SystemPos."Geh”rt zu Lfd. Nr." := SystemPos.SystemZugeh”rigkeitErmitteln(Beleghistorie."Auftragsnr.",
                                                        SystemPos."Lfd. Nr.",SystemPos."Wartungsvertragsnr.");

                      SystemPos.MODIFY(TRUE);
                      systempos_angelegt := TRUE;
                    END ELSE BEGIN
                      //neu 10.05.12 ST - Update in Vorlage ausstehend
                      IF (system_service_verbindung = TRUE) AND (SystemPos."Wartungsvertragsnr." = '') THEN BEGIN
                        MESSAGE(Text51010,SystemPos."Lfd. Nr.",Beleghistorie."Artikelnr.",SystemPos."Seriennr.");
                        COMMIT;
                        CLEAR(Wartungsšbersicht);
                        Wartungsšbersicht.SETFILTER("Debitornr.",'%1',Beleghistorie."Debitornr.");
                        IF Wartungsšbersicht.FINDFIRST THEN BEGIN
                          IF PAGE.RUNMODAL(50024,Wartungsšbersicht) = ACTION::LookupOK THEN BEGIN
                            SystemPos."Wartungsvertragsnr." := Wartungsšbersicht."Wartungsvertragsnr.";
                            SystemPos."Hauptwartungsvertragsnr." := Wartungsšbersicht."Hauptwartungsvertragsnr.";
                            SystemPos."Geh”rt zu Lfd. Nr." := SystemPos.SystemZugeh”rigkeitErmitteln(Beleghistorie."Auftragsnr.",
                                                              SystemPos."Lfd. Nr.",SystemPos."Wartungsvertragsnr.");
                            SystemPos.MODIFY(TRUE);
                            systempos_angelegt := TRUE;
                          END ELSE BEGIN
                            MESSAGE(Text51002,Beleghistorie."Artikelnr.",Beleghistorie."Zeilennr.");
                          END;
                        END ELSE
                          MESSAGE(Text51003);
                      END;
                      //neu Ende
                    END;
                  END;
                  ////e
                UNTIL SeriennrHistorie.NEXT = 0;

            END;
          UNTIL Beleghistorie.NEXT = 0
        ELSE
          MESSAGE(Text51006);

        IF systempos_angelegt = FALSE THEN
          MESSAGE(Text51005)
        ELSE
          COMMIT;

      END;
    END;

    PROCEDURE ShowSystemFromShipHeader@1140000(ShipNo@1000000000 : Code[20]);
    VAR
      Wartungsvertrag@1140002 : Record 50011;
      Systemvertrag@1140003 : Record 50011;
      Servicepositionen@1140001 : Record 50024;
      wartungsnr@1140000 : Code[1024];
    BEGIN
      //TOPAS 27.06.12 ST - Sprungmarke vom Lieferschein zu den System- bzw. Wartungsvertr„gen
      Servicepositionen.RESET;
      Servicepositionen.SETRANGE("Nr.",ShipNo);
      IF Servicepositionen.FINDFIRST THEN BEGIN
        REPEAT
          IF (Servicepositionen."Wartungsvertragsnr." <> '') AND
          (STRPOS(wartungsnr,Servicepositionen."Wartungsvertragsnr.") = 0) THEN
            IF wartungsnr = '' THEN
              wartungsnr := Servicepositionen."Wartungsvertragsnr."
            ELSE
              wartungsnr := wartungsnr + '|' + Servicepositionen."Wartungsvertragsnr.";
        UNTIL Servicepositionen.NEXT = 0;
        IF wartungsnr <> '' THEN BEGIN
          Wartungsvertrag.RESET;
          Wartungsvertrag.SETFILTER("Wartungsvertragsnr.",wartungsnr);
          IF Wartungsvertrag.FINDFIRST THEN
            PAGE.RUN(50015,Wartungsvertrag);
          IF Wartungsvertrag.COUNT > 1 THEN
            MESSAGE(Text51011,Wartungsvertrag.COUNT);
        END ELSE
          MESSAGE(Text51009);
      END ELSE
        MESSAGE(Text51009);
    END;

    PROCEDURE Gen_Service_DC@1140008(SUP_Artikelnr@1140007 : Code[20];"Basis Artikelnr"@1140006 : Code[20];Laufzeit@1140005 : Integer;Runden@1140002 : Boolean;W„hrung@1140009 : Code[20];Quotenr@1140024 : Code[10]) : Decimal;
    VAR
      Service_PL@1140001 : Record 50028;
      ServiceTab@1140022 : Record 50024;
      EkPreise@1140004 : Record 7012;
      Opt_prozent@1140003 : Record 50001;
      Opt_laufzeit@1140000 : Record 50001;
      Item@1000000001 : Record 27;
      v_laufzeit@1140008 : Decimal;
      ACTS@1140015 : Boolean;
      ACTS_AHR@1000000000 : Boolean;
      ACTS_SCHAEFFLER@1140016 : Boolean;
      ACTS_MSS_SCHAEFFLER@1140025 : Boolean;
      ACTS_MSS@1140019 : Boolean;
      ACHAT@1140017 : Boolean;
      APSS_OB@1140021 : Boolean;
      CHAMPS@1140018 : Boolean;
      CHAMPS_PARTNER@1140020 : Boolean;
      RE_INSTATEMENT_FEE@1140023 : Boolean;
      rundgs_faktor@1140010 : Decimal;
      additional_discount@1140014 : Decimal;
      normal_discount@1140013 : Decimal;
      spezial_discount@1140011 : Decimal;
      v_service_laufzeit@1140012 : Decimal;
    BEGIN
      //***************************************************************************************************
      //              TOPAS 2011-07-26 ST  Generiert den DC fr den jeweiligen Champ Artikel
      //              TOPAS 2014-01-10 ST  Nun auch fr ACTS und ACHAT
      //              TOPAS 2014-06-18 ST  Nun auch fr Misch ACTS/ACHAT
      //              TOPAS 2014-12-09 ST  ACTS Schaeffler Projekt
      //              TOPAS 2015-03-18 ST  ACTS Managed Spare Service
      //              TOPAS 2015-04-27 ST  CHAMPS zertifizierte Partner
      //              TOPAS 2015-05-12 ST  APSS One Box
      //              TOPAS 2015-12-10 ST  CHAMPS Re Instatement Fee
      //              TOPAS 2016-03-23 ST  ACTS MSS Schaeffler
      //              TOPAS 2017-08-14 ST  Trennung von ACTS AHR und ACTS SUPP > neue Gruppe ACTS_AHR
      //***************************************************************************************************

      IF Runden = TRUE THEN
        rundgs_faktor := 1
      ELSE
        rundgs_faktor := 0.01;

      normal_discount := 0;
      additional_discount := 0;
      spezial_discount := 1;

      Item.GET(SUP_Artikelnr);
      IF (Item."Software Upgrade Protection" = TRUE) THEN BEGIN

        ACTS := FALSE;
        ACTS_AHR := FALSE;
        ACHAT := FALSE;
        ACTS_SCHAEFFLER := FALSE;
        ACTS_MSS_SCHAEFFLER := FALSE;
        ACTS_MSS := FALSE;
        APSS_OB := FALSE;
        CHAMPS := FALSE;
        CHAMPS_PARTNER := FALSE;
        RE_INSTATEMENT_FEE:= FALSE;

        IF Item.Artikelgruppe = 'ACTS' THEN
          ACTS := TRUE
        ELSE
          IF (Item.Artikelgruppe = 'ACTS/ACHAT') OR (Item.Artikelgruppe = 'ACTS_AHR') THEN
            ACTS_AHR := TRUE
          ELSE
            IF Item.Artikelgruppe = 'ACHAT' THEN
              ACHAT := TRUE
            ELSE
              IF Item.Artikelgruppe = 'ACTS_SCHAEFFLER' THEN
                ACTS_SCHAEFFLER := TRUE
              ELSE
                IF Item.Artikelgruppe = 'ACTS_MSS_SCHAEFFLER' THEN
                  ACTS_MSS_SCHAEFFLER := TRUE
                ELSE
                  IF Item.Artikelgruppe = 'ACTS_MSS' THEN
                    ACTS_MSS := TRUE
                  ELSE
                    IF Item.Artikelgruppe = 'CHAMPS_PARTNER' THEN
                      CHAMPS_PARTNER := TRUE
                    ELSE
                      IF Item.Artikelgruppe = 'APSS_OB' THEN
                        APSS_OB := TRUE
                      ELSE
                        IF Item.Artikelgruppe = 'CHAMPS_FEE' THEN
                          RE_INSTATEMENT_FEE := TRUE
                        ELSE
                          IF Item.Artikelgruppe = 'CHAMPS' THEN
                            CHAMPS := TRUE;

        IF (Item.Artikelgruppe <> 'CHAMPS') AND (Item.Artikelgruppe <> 'CHAMPS_PARTNER')
        AND (Item.Artikelgruppe <> 'ACTS')  AND (Item.Artikelgruppe <> 'ACTS_AHR')
        AND (Item.Artikelgruppe <> 'ACHAT') AND (Item.Artikelgruppe <> 'ACTS/ACHAT')
        AND (Item.Artikelgruppe <> 'ACTS_SCHAEFFLER') AND (Item.Artikelgruppe <> 'ACTS_MSS_SCHAEFFLER')
        AND (Item.Artikelgruppe <> 'ACTS_MSS') AND (Item.Artikelgruppe <> 'APSS_OB')
        AND (Item.Artikelgruppe <> 'SUPPORT & SOFTWARE') AND (Item.Artikelgruppe <> 'DIENSTLEISTUNG')
        AND (Item.Artikelgruppe <> 'CHAMPS_FEE') THEN
          ERROR(Text52000);

        Opt_laufzeit.RESET;
        Opt_laufzeit.SETFILTER("Tabellen ID",'%1',50024);
        Opt_laufzeit.SETFILTER("Feld ID",'%1',44);
        Opt_laufzeit.SETFILTER("Nr.",'%1',SUP_Artikelnr);
        IF Opt_laufzeit.FINDFIRST THEN
          EVALUATE(v_laufzeit,COPYSTR(Opt_laufzeit.Code,1,STRPOS(Opt_laufzeit.Code,'M')-1))
        ELSE
          ERROR(Text52001,SUP_Artikelnr,"Basis Artikelnr");

        Service_PL.RESET;
        Service_PL.SETFILTER("Zuordnung obsolete",'%1',FALSE);
        IF (ACTS = TRUE) OR (ACTS_AHR = TRUE) OR (ACHAT = TRUE) OR (ACTS_MSS = TRUE)
        OR (ACTS_SCHAEFFLER = TRUE) OR (ACTS_MSS_SCHAEFFLER = TRUE) THEN
          Service_PL.SETFILTER(Art,'%1',Service_PL.Art::ACTS)
        ELSE
          Service_PL.SETFILTER(Art,'%1',Service_PL.Art::Champs);
        SUP_Artikelnr := ServiceTab.FakeSUPArtikelErmitteln(SUP_Artikelnr);
        Service_PL.SETFILTER("SUP Artikelnr.",'%1',SUP_Artikelnr);
        Service_PL.SETFILTER("Artikelnr.",'%1',"Basis Artikelnr");
        Service_PL.SETFILTER(W„hrungscode,'%1',W„hrung);
        IF Service_PL.FINDFIRST THEN BEGIN

          //IF Service_PL."Update letzte Preisliste" = FALSE THEN
          //  MESSAGE(Text120,"Basis Artikelnr",Service_PL.Preisliste,Service_PL."Letzte Aktualisierung");

          //CHAMPS und PARTNER EK Konditionen
          IF (CHAMPS = TRUE) OR (CHAMPS_PARTNER = TRUE) THEN BEGIN
            normal_discount := 0.72;
            v_service_laufzeit := Laufzeit DIV 12;
            CASE v_service_laufzeit OF
              0..1 : additional_discount := 0;
              2 : additional_discount := 0.02; // -2%
              3 : additional_discount := 0.09; // -9%
              4 : additional_discount := 0.12; // -12%
              5..100 : additional_discount := 0.15; // -15%
            END;
          END;

          //ACTS EK Konditionen
          IF ACTS = TRUE THEN BEGIN
            IF ServiceTab.ServiceQuoteIsValid(Quotenr) = TRUE THEN
              normal_discount := 0.62
            ELSE BEGIN
              normal_discount := 0.75;
              v_service_laufzeit := Laufzeit DIV 12;
              CASE v_service_laufzeit OF
                0..1 : additional_discount := 0;
                2 : additional_discount := 0.02; // -2%
                3 : additional_discount := 0.09; // -9%
                4 : additional_discount := 0.12; // -12%
                5..100 : additional_discount := 0.15; // -15%
              END;
            END;
          END;

          //ACTS AHR EK Konditionen
          IF ACTS_AHR = TRUE THEN BEGIN
            IF ServiceTab.ServiceQuoteIsValid(Quotenr) = TRUE THEN
              normal_discount := 0.62
            ELSE BEGIN
              normal_discount := 0.8;
              v_service_laufzeit := Laufzeit DIV 12;
              CASE v_service_laufzeit OF
                0..1 : additional_discount := 0;
                2 : additional_discount := 0.02; // -2%
                3 : additional_discount := 0.09; // -9%
                4 : additional_discount := 0.12; // -12%
                5..100 : additional_discount := 0.15; // -15%
              END;
            END;
          END;

          //ACTS Managed Spare Service EK Konditionen
          IF ACTS_MSS = TRUE THEN BEGIN
            //MSS ohne Quote von -10% auf -20% , mit Quote (in Annahme) von -15% auf -20% ge„ndert
            //auch wenn die Werte nun gleich sind, bleibt diese Abfrage bzgl. Quote hier stehen
            IF ServiceTab.ServiceQuoteIsValid(Quotenr) = TRUE THEN
              normal_discount := 0.8
            ELSE BEGIN
              normal_discount := 0.8;
              v_service_laufzeit := Laufzeit DIV 12;
              CASE v_service_laufzeit OF
                0..1 : additional_discount := 0;
                2 : additional_discount := 0.02; // -2%
                3 : additional_discount := 0.09; // -9%
                4 : additional_discount := 0.12; // -12%
                5..100 : additional_discount := 0.15; // -15%
              END;
            END;
          END;

          //ACHAT EK Konditionen
          IF ACHAT = TRUE THEN BEGIN
            normal_discount := 0.8;
            additional_discount := 0;
            spezial_discount := 1 / 0.8 * 0.58 // fr ACHAT 1 / 0.8 (Zurckrechnung Champ DC auf 100 % MSRP) * 0.58 EK ACHAT
          END;

          //ACTS Schaeffler EK Konditionen
          IF ACTS_SCHAEFFLER = TRUE THEN BEGIN
            normal_discount := 0.5;
          END;

          //ACTS MSS Schaeffler EK Konditionen
          IF ACTS_MSS_SCHAEFFLER = TRUE THEN BEGIN
            normal_discount := 0.8;
          END;

          //APSS One Box EK Konditionen
          IF APSS_OB = TRUE THEN BEGIN
            IF ServiceTab.ServiceQuoteIsValid(Quotenr) = TRUE THEN
              normal_discount := 0.62
            ELSE BEGIN
              normal_discount := 0.65;
              v_service_laufzeit := Laufzeit DIV 12;
              CASE v_service_laufzeit OF
                0..1 : additional_discount := 0;
                2 : additional_discount := 0.02; // -5%
                3 : additional_discount := 0.09; // -12%
                4 : additional_discount := 0.12; // -12%
                5..100 : additional_discount := 0.15; // -15%
              END;
            END;
          END;

          //Re Instatement Fee
          IF RE_INSTATEMENT_FEE = TRUE THEN BEGIN
            normal_discount := 0.72;
            spezial_discount := 1.25; //Fee 1.25
          END;

          EXIT((ROUND((((Service_PL.MSRP * (normal_discount - additional_discount)) * Service_PL."Laufzeit in Jahren") *
              (Laufzeit/v_laufzeit)) * spezial_discount,rundgs_faktor)));

        END ELSE BEGIN
          IF (SUP_Artikelnr = 'SW-UPGRADE-ACS-1Y') OR (SUP_Artikelnr = 'EXTD-HW-WARR/YR')
          OR (SUP_Artikelnr = 'ENH-SUPP-PROG/YR') OR (SUP_Artikelnr = 'ENH-SUPP-PROG/3 YR') THEN BEGIN
            {
            //11.02.15 ST deaktiviert, da fr diese eigenen Serviceleistungen kein DC erwnscht ist
            Opt_prozent.RESET;
            Opt_prozent.SETFILTER("Tabellen ID",'%1',50024);
            Opt_prozent.SETFILTER("Feld ID",'%1',5);
            Opt_prozent.SETFILTER("Nr.",SUP_Artikelnr);
            IF Opt_prozent.FINDFIRST THEN
              BEGIN
                Item.GET("Basis Artikelnr");
                EkPreise.RESET;
                EkPreise.SETFILTER("Item No.",'%1',"Basis Artikelnr");
                EkPreise.SETFILTER("Vendor No.",'%1',Item."Vendor No.");
                EkPreise.SETFILTER("Currency Code",'%1','');
                IF EkPreise.FINDLAST THEN
                  EXIT(ROUND((EkPreise."Direct Unit Cost" * Opt_prozent.Prozentsatz/100) * (Laufzeit/v_laufzeit),rundgs_faktor))
              END;
            }
          END ELSE
            ERROR(Text52002,"Basis Artikelnr",SUP_Artikelnr);
        END;
      END;
    END;

    PROCEDURE Gen_Service_VK@1140007("SUP Artikelnr"@1140001 : Code[20];"Basis Artikelnr"@1140013 : Code[20];Laufzeit@1140008 : Integer;Belegnr@1140007 : Code[20];Zeilennr@1140006 : Integer;Fremderworben@1140014 : Boolean;Basisger„t@1140011 : Boolean;Runden@1140000 : Boolean;Kalk_Prozentsatz@1140015 : Decimal;MSRP_W„hrung@1140022 : Code[10];W„hrungsfaktor@1000000003 : Decimal;Beleg_W„hrung@1000000004 : Code[10]) : Decimal;
    VAR
      Currency@1000000002 : Record 4;
      CurrExchRate@1000000001 : Record 330;
      Opt_proz@1140003 : Record 50001;
      Opt_laufzeit@1140009 : Record 50001;
      Item@1000000000 : Record 27;
      BesterVkPreis@1140002 : Decimal;
      basissatz@1140012 : Decimal;
      v_laufzeit@1140010 : Decimal;
      v_prozentsatz@1140016 : Decimal;
      marge@1140019 : Decimal;
      ACTS@1140017 : Boolean;
      ACTS_SCHAEFFLER@1140025 : Boolean;
      ACTS_MSS_SCHAEFFLER@1140004 : Boolean;
      ACHAT@1140018 : Boolean;
      APSS_OB@1140026 : Boolean;
      CHAMPS@1140027 : Boolean;
      RE_INSTATEMENT_FEE@1140028 : Boolean;
      normal_discount@1140021 : Decimal;
      rundgs_faktor@1140020 : Decimal;
      v_service_laufzeit@1140023 : Integer;
    BEGIN
      //***************************************************************************************************
      //  TOPAS 26.07.2011-ST  Generiert einen VK-Preis fr einen Champ Artikel, wenn sich die zugewiesene
      //             Position auf eine gltige Auftrags- oder Lieferscheinposition bezieht
      //***************************************************************************************************

      IF (Zeilennr = 0) AND (Belegnr = '') THEN BEGIN
        MESSAGE(Text52003);
        EXIT(0);
      END;

      marge := 1;
      normal_discount := 1;

      IF Runden THEN
        rundgs_faktor := 1
      ELSE
        rundgs_faktor := 0.01;

      Item.GET("SUP Artikelnr");
      IF (Item."Software Upgrade Protection" = TRUE) THEN BEGIN

        IF (Item.Artikelgruppe <> 'CHAMPS') AND (Item.Artikelgruppe <> 'CHAMPS_PARTNER')
        AND (Item.Artikelgruppe <> 'ACTS')  AND (Item.Artikelgruppe <> 'ACTS_AHR')
        AND (Item.Artikelgruppe <> 'ACHAT') AND (Item.Artikelgruppe <> 'ACTS/ACHAT')
        AND (Item.Artikelgruppe <> 'ACTS_SCHAEFFLER') AND (Item.Artikelgruppe <> 'ACTS_MSS_SCHAEFFLER')
        AND (Item.Artikelgruppe <> 'ACTS_MSS') AND (Item.Artikelgruppe <> 'APSS_OB')
        AND (Item.Artikelgruppe <> 'SUPPORT & SOFTWARE') AND (Item.Artikelgruppe <> 'DIENSTLEISTUNG')
        AND (Item.Artikelgruppe <> 'CHAMPS_FEE') THEN
          ERROR(Text52000);

        IF (Item.Artikelgruppe = 'ACTS') OR (Item.Artikelgruppe = 'ACTS_AHR')
        OR (Item.Artikelgruppe = 'ACTS/ACHAT') OR (Item.Artikelgruppe = 'ACTS_MSS') THEN
          ACTS := TRUE
        ELSE
          IF Item.Artikelgruppe = 'ACHAT' THEN
            ACHAT := TRUE
          ELSE
            IF Item.Artikelgruppe = 'ACTS_SCHAEFFLER' THEN
              ACTS_SCHAEFFLER := TRUE
            ELSE
              IF Item.Artikelgruppe = 'ACTS_MSS_SCHAEFFLER' THEN
                ACTS_MSS_SCHAEFFLER := TRUE
              ELSE
                IF Item.Artikelgruppe = 'APSS_OB' THEN
                  APSS_OB := TRUE
                ELSE
                  IF Item.Artikelgruppe = 'CHAMPS_FEE' THEN
                    RE_INSTATEMENT_FEE := TRUE
                  ELSE
                    CHAMPS := TRUE;

        //VK Kondition CHAMPS zertifizierte Partner = -20% MSRP
        IF Item.Artikelgruppe = 'CHAMPS_PARTNER' THEN
          IF Kalk_Prozentsatz <= 20 THEN
            v_prozentsatz := 80
          ELSE
            v_prozentsatz := 100 - Kalk_Prozentsatz;

          Item.GET("Basis Artikelnr");
          BesterVkPreis := FindMSRP("Basis Artikelnr",WORKDATE,MSRP_W„hrung,
                                  Item."Base Unit of Measure","SUP Artikelnr");

          //05.04.18 ST - EKW MSRP wird ggf. in MW umgerechnet
          IF (Beleg_W„hrung = '') AND (MSRP_W„hrung <> '') THEN BEGIN
            Currency.GET(MSRP_W„hrung);
            Currency.TESTFIELD("Amount Rounding Precision");
            BesterVkPreis := ROUND(CurrExchRate.ExchangeAmtFCYToLCY(WORKDATE,MSRP_W„hrung,BesterVkPreis,W„hrungsfaktor),Currency."Unit-Amount Rounding Precision");
          END;

          IF BesterVkPreis <> 0 THEN BEGIN
            Opt_laufzeit.RESET;
            Opt_laufzeit.SETRANGE("Tabellen ID",50024);
            Opt_laufzeit.SETRANGE("Feld ID",44);
            Opt_laufzeit.SETRANGE("Nr.","SUP Artikelnr");
            IF Opt_laufzeit.FINDFIRST THEN BEGIN
              EVALUATE(v_laufzeit,COPYSTR(Opt_laufzeit.Code,1,STRPOS(Opt_laufzeit.Code,'M')-1));

              //***************************************************************************************************
              //                                  Service Konditionen deklarieren
              //***************************************************************************************************

              IF ACTS = TRUE THEN BEGIN
                v_service_laufzeit := Laufzeit DIV 12;
                CASE v_service_laufzeit OF
                  0..1 : normal_discount := 1;
                  2 : normal_discount := 0.98; // -2%
                  3 : normal_discount := 0.91; // -9%
                  4 : normal_discount := 0.88; // -12%
                  5..100 : normal_discount := 0.85; // -15%
                END;
                v_prozentsatz := 100 - Kalk_Prozentsatz
              END;

              IF ACHAT = TRUE THEN BEGIN
                marge := 1 / ((100 - Kalk_Prozentsatz) / 100);
                normal_discount := 0.58;
                v_prozentsatz := 100;
              END;

              IF ACTS_SCHAEFFLER = TRUE THEN BEGIN
                v_prozentsatz := 100 - Kalk_Prozentsatz;
              END;

              IF ACTS_MSS_SCHAEFFLER = TRUE THEN BEGIN
                v_prozentsatz := 100 - Kalk_Prozentsatz;
              END;

              IF APSS_OB = TRUE THEN BEGIN
                v_service_laufzeit := Laufzeit DIV 12;
                CASE v_service_laufzeit OF
                  0..1 : normal_discount := 1;
                  2 : normal_discount := 0.98; // -2%
                  3 : normal_discount := 0.91; // -9%
                  4 : normal_discount := 0.88; // -12%
                  5..100 : normal_discount := 0.85; // -15%
                END;
                v_prozentsatz := 100 - Kalk_Prozentsatz;
              END;

              IF CHAMPS = TRUE THEN BEGIN
                Opt_proz.RESET;
                Opt_proz.SETRANGE("Tabellen ID",50024);
                Opt_proz.SETRANGE("Feld ID",5);
                Opt_proz.SETRANGE("Nr.","SUP Artikelnr");
                IF Opt_proz.FINDFIRST THEN BEGIN
                  v_prozentsatz := Opt_proz.Prozentsatz;
                  IF Basisger„t = TRUE THEN
                    basissatz := Opt_proz.Werte
                  ELSE
                    basissatz := 0;
                END ELSE
                  IF v_prozentsatz = 0 THEN ERROR(Text52004,"SUP Artikelnr","Basis Artikelnr");
              END;

              IF RE_INSTATEMENT_FEE = TRUE THEN BEGIN
                v_prozentsatz := 100 - Kalk_Prozentsatz;
                normal_discount := 1;
                marge := 1.25;
              END;

              EXIT(ROUND((((((BesterVkPreis * v_prozentsatz)) * normal_discount / 100) *
                  (Laufzeit / v_laufzeit)) + ((Laufzeit / v_laufzeit) * (basissatz))) * marge,rundgs_faktor));

            END ELSE
              ERROR(Text52005,"SUP Artikelnr","Basis Artikelnr");
          END ELSE
            IF Item."Kein VK notwendig" = FALSE THEN
              ERROR(Text52006,"Basis Artikelnr",Item.FIELDCAPTION("Software Upgrade Protection"),Item.FIELDCAPTION("Kein VK notwendig"));
      END;
    END;

    PROCEDURE FindMSRP@1140005(Artikelnr@1140003 : Code[20];Startdatum@1140002 : Date;W„h@1140001 : Code[10];Stkcode@1140000 : Code[10];SUP_Artikelnr@1140009 : Code[20]) : Decimal;
    VAR
      Artikel@1140010 : Record 27;
      FindSalesPrice@1140005 : Record 7002;
      FindMSRPPrice@1140008 : Record 50028;
      ServiceTab@1140019 : Record 50024;
      Item@1000000001 : Record 27;
      BestPrice@1140004 : Decimal;
      BestDate@1140006 : Date;
      ACTS@1140007 : Boolean;
      ACTS_AHR@1000000000 : Boolean;
      ACHAT@1140011 : Boolean;
      ACTS_ACHAT@1140014 : Boolean;
      ACTS_SCHAEFFLER@1140012 : Boolean;
      ACTS_MSS_SCHAEFFLER@1140021 : Boolean;
      ACTS_MSS@1140016 : Boolean;
      APSS_OB@1140018 : Boolean;
      CHAMPS@1140013 : Boolean;
      CHAMPS_PARTNER@1140017 : Boolean;
      SUP@1140015 : Boolean;
      RE_INSTATEMENT_FEE@1140020 : Boolean;
    BEGIN
      //***************************************************************************************************
      //        TOPAS 01.03.11 ST - Findet den aktuellen VK-Preis des Ger„tes, sprich MSRP-Preis
      //        TOPAS 09.01.14 ST - Fr ACTS und ACHAT den entsprechenden ACTS MSRP
      //***************************************************************************************************

      IF Artikelnr = '' THEN EXIT;

      Item.GET(SUP_Artikelnr);
      IF Item.Artikelgruppe = 'ACTS' THEN
        ACTS := TRUE
      ELSE
        IF Item.Artikelgruppe = 'ACTS_AHR' THEN
          ACTS_AHR := TRUE
        ELSE
          IF Item.Artikelgruppe = 'ACHAT' THEN
            ACHAT := TRUE
          ELSE
            IF Item.Artikelgruppe = 'ACTS_SCHAEFFLER' THEN
              ACTS_SCHAEFFLER := TRUE
            ELSE
              IF Item.Artikelgruppe = 'ACTS/ACHAT' THEN
                ACTS_ACHAT := TRUE
              ELSE
                IF Item.Artikelgruppe = 'ACTS_MSS' THEN
                  ACTS_MSS := TRUE
                ELSE
                  IF Item.Artikelgruppe = 'ACTS_MSS_SCHAEFFLER' THEN
                    ACTS_MSS_SCHAEFFLER := TRUE
                  ELSE
                    IF Item.Artikelgruppe = 'CHAMPS_PARTNER' THEN
                      CHAMPS_PARTNER := TRUE
                    ELSE
                      IF Item.Artikelgruppe = 'APSS_OB' THEN
                        APSS_OB := TRUE
                      ELSE
                        IF Item.Artikelgruppe = 'CHAMPS_FEE' THEN
                          RE_INSTATEMENT_FEE := TRUE
                        ELSE
                          IF Item.Artikelgruppe = 'CHAMPS' THEN
                            CHAMPS := TRUE
                          ELSE
                            SUP := TRUE;

      IF (CHAMPS = TRUE) OR (SUP = TRUE) THEN BEGIN
        WITH FindSalesPrice DO BEGIN
          IF (Artikelnr = 'M1KB-CH') THEN BEGIN
            IF Artikelnr = 'M1KB-CH' THEN
              SETRANGE("Item No.",'M1KB');  //vorher M1KB-MSBG1
          END ELSE
            SETRANGE("Item No.",Artikelnr);
          SETFILTER("Ending Date",'%1|>=%2',0D,Startdatum);
          SETFILTER("Currency Code",'%1',W„h);
          IF Stkcode <> '' THEN
            SETFILTER("Unit of Measure Code",'%1|%2',Stkcode,'');
          SETRANGE("Starting Date",0D,Startdatum);
          SETRANGE("Sales Type","Sales Type"::"All Customers");
          SETRANGE("Sales Code");

          IF FINDFIRST THEN BEGIN
            BestPrice := "Unit Price";
            BestDate := "Starting Date";
            REPEAT
              //IF BestPrice > "Unit Price" THEN
              //Nicht mehr der beste, sondern der aktuellste Preis gesucht
              IF "Starting Date" > BestDate THEN BEGIN
                BestPrice := "Unit Price";
                BestDate := "Starting Date";
              END;
            UNTIL NEXT = 0;
          END;
          EXIT(BestPrice);
        END;
      END;

      //***************************************************************************************************
      //                                     ACTS und ACHAT  Berechnung
      //***************************************************************************************************

      IF (ACTS = TRUE) OR (ACTS_AHR = TRUE) OR (ACHAT = TRUE) OR (ACTS_ACHAT = TRUE) OR (ACTS_SCHAEFFLER = TRUE) OR (ACTS_MSS_SCHAEFFLER = TRUE)
      OR (ACTS_MSS = TRUE) OR (CHAMPS_PARTNER = TRUE) OR (APSS_OB = TRUE) OR (RE_INSTATEMENT_FEE = TRUE) THEN BEGIN
        WITH FindMSRPPrice DO BEGIN
          SETRANGE("Artikelnr.",Artikelnr);
          SUP_Artikelnr := ServiceTab.FakeSUPArtikelErmitteln(SUP_Artikelnr);
          SETRANGE("SUP Artikelnr.",SUP_Artikelnr);
          SETRANGE(W„hrungscode,W„h);
          SETRANGE(Art,Art::ACTS);
          IF (CHAMPS_PARTNER = TRUE) OR (RE_INSTATEMENT_FEE = TRUE) OR (APSS_OB = TRUE) THEN
            SETRANGE(Art,Art::Champs);
          SETRANGE("Zuordnung obsolete",FALSE);
          IF FINDFIRST THEN BEGIN
            //IF "Update letzte Preisliste" = FALSE THEN
            //  MESSAGE(Text120,FORMAT(Art),Artikelnr);
            EXIT(FindMSRPPrice.MSRP * FindMSRPPrice."Laufzeit in Jahren")
          END ELSE
            ERROR(Text52007,Artikelnr,Item.Artikelgruppe);
        END;
      END;
    END;

    PROCEDURE OpenCalculationToolFromSalesLine@1140006(SalesLine@1000000000 : Record 37);
    VAR
      Item@1000000001 : Record 27;
      ™ffneLizenzTab@1140002 : Record 50024;
      LizenzTab@1140001 : Record 50024;
      CalcRelaDoc@1140003 : Record 50027;
      OptCode@1140004 : Record 50001;
      i@1140000 : Integer;
    BEGIN
      //***************************************************************************************************
      //        TOPAS 01.03.11 ST - ™ffnet die Service Kalkulation fr den ausgew„hlten Service Artikel
      //        TOPAS 21.10.13 ST - Anpassung um Splicecom Lizenz Aufstellung
      //***************************************************************************************************
      WITH SalesLine DO BEGIN

        TESTFIELD(Type,Type::Item);
        TESTFIELD("No.");
        TESTFIELD("Quantity (Base)");

        Item.GET("No.");
        IF (Item."Software Upgrade Protection" = TRUE) OR (Item."Manufacturer Code" = '82') THEN BEGIN
          IF Item."Manufacturer Code" = '82' THEN BEGIN
            OptCode.RESET;
            OptCode.SETRANGE("Tabellen ID",50027);
            OptCode.SETRANGE("Feld ID",5);
            OptCode.SETRANGE(Code,"No.");
            IF NOT OptCode.FINDFIRST THEN
              ERROR(Text50022,Item.FIELDCAPTION("Software Upgrade Protection"));
          END;
        END ELSE
          ERROR(Text50022,Item.FIELDCAPTION("Software Upgrade Protection"));

        CalcRelaDoc.RESET;
        IF Item."Manufacturer Code" = '82' THEN
          CalcRelaDoc.SETRANGE(Art,CalcRelaDoc.Art::"SPL-AU")
        ELSE
          CalcRelaDoc.SETRANGE(Art,CalcRelaDoc.Art::"SUP-AU");
        CalcRelaDoc.SETRANGE("Nr.","Document No.");
        CalcRelaDoc.SETRANGE("Zeilennr.","Line No.");
        PAGE.RUN(50023,CalcRelaDoc);
      END;
    END;

    PROCEDURE CalcServiceDCFromPurchLine@1000000000(ItemNo@1140003 : Code[20];DocNo@1140001 : Code[20];LineNo@1140002 : Integer;CurrencyCode@1000000001 : Code[10]) : Decimal;
    VAR
      Item@1000000000 : Record 27;
      Services@1140000 : Record 50024;
      service_dc@1140005 : Decimal;
    BEGIN
      IF Item.GET(ItemNo) AND (Item."Software Upgrade Protection" = FALSE) THEN
        ERROR(Text39_000,Item.FIELDCAPTION("Software Upgrade Protection"));

      Services.RESET;
      Services.SETRANGE(Art,Services.Art::Service);
      Services.SETRANGE("BET-Nr.",DocNo);
      Services.SETRANGE("BET-Pos.",LineNo);
      Services.SETRANGE("Service W„hrungscode",CurrencyCode);
      Services.SETRANGE(Inaktiv,FALSE);
      IF Services.FINDFIRST THEN BEGIN
        service_dc := 0;
        REPEAT
          service_dc := service_dc + (Services."Service DC" * Services.Menge);
        UNTIL Services.NEXT = 0;
        MESSAGE(Text39_001,service_dc);
        EXIT(service_dc);
      END ELSE
        MESSAGE(Text39_002);
    END;

    PROCEDURE RefreshAllServiceSalesPriceCalculations@1000000003(DocNo@1140000 : Code[20]);
    VAR
      Artikel@1140004 : Record 27;
      SalesHeader@1000000006 : Record 36;
      SalesLine@1140001 : Record 37;
      ServiceTab@1140006 : Record 50024;
      ServRelaDoc@1140005 : Record 50027;
      Currency@1000000000 : Record 4;
      CurrExchRate@1000000003 : Record 330;
      TOPAS_API@1000000004 : Codeunit 50001;
      CurrencyDate@1000000001 : Date;
      single_service_price_new@1140002 : Decimal;
      single_service_dc_new@1000000007 : Decimal;
      total_service_price_new@1140003 : Decimal;
      total_service_dc_new@1000000008 : Decimal;
      ek_w„h_faktor@1000000002 : Decimal;
      Window@1140007 : Dialog;
      v_ablaufdatum@1140009 : Date;
      v_laufzeit@1000000005 : Integer;
    BEGIN
      //***************************************************************************************************
      //          06.04.18 ST - Aktualisiert die VK-Preise aller noch austehenden Service Artikel
      //                 im Beleg und fr die in der Kalkulation hinterlegten Artikel
      //***************************************************************************************************

      IF DocNo = '' THEN EXIT;

      SalesLine.RESET;
      SalesLine.SETFILTER("Document No.",'%1',DocNo);
      SalesLine.SETFILTER(Type,'%1',SalesLine.Type::Item);
      SalesLine.SETFILTER("Outstanding Quantity",'>%1',0);
      SalesLine.SETFILTER("Manufacturer Code",'%1|%2|%3|%4|%5|%6','53','57','59','98','5710','5720');
      IF SalesLine.FINDFIRST THEN BEGIN
        SalesHeader.GET(SalesLine."Document Type",DocNo);
        CurrencyDate := SalesHeader."Document Date";
        IF NOT CONFIRM(Text37_000,FALSE,CurrencyDate,SalesLine.FIELDCAPTION(Einkaufsw„hrungsfaktor)) THEN EXIT;
        ek_w„h_faktor := CurrExchRate.ExchangeRate(CurrencyDate,SalesLine.Einkaufsw„hrungscode);
        REPEAT
          single_service_price_new := 0;
          single_service_dc_new := 0;
          total_service_price_new := 0;
          total_service_dc_new := 0;
          SalesLine.VALIDATE(Einkaufsw„hrungsfaktor,ek_w„h_faktor);
          SalesLine.MODIFY(TRUE);
          Artikel.GET(SalesLine."No.");
          IF Artikel."Software Upgrade Protection" = TRUE THEN BEGIN
            ServRelaDoc.RESET;
            ServRelaDoc.SETCURRENTKEY(Art,"Nr.","Zeilennr.",Gruppierung);
            ServRelaDoc.SETFILTER(Art,'%1',ServRelaDoc.Art::"SUP-AU");
            ServRelaDoc.SETFILTER("Nr.",'%1',DocNo);
            ServRelaDoc.SETFILTER("Zeilennr.",'%1',SalesLine."Line No.");
            IF ServRelaDoc.FINDFIRST THEN
              REPEAT

                WITH ServRelaDoc DO BEGIN
                  IF ("Laufzeit ab Buchungsdatum") AND (Startdatum <> 0D) THEN VALIDATE(Startdatum,WORKDATE);
                  IF "Wartungsvertragsnr." <> '' THEN BEGIN
                    IF Ablaufdatum = 0D THEN BEGIN
                      v_ablaufdatum := Ablaufdatum_generieren("SUP Artikelnr.","Wartungsvertragsnr.");
                      IF v_ablaufdatum <> 0D THEN BEGIN
                        IF Laufzeit <> FORMAT(TOPAS_API.CalculateTimeDiff('M',WORKDATE,v_ablaufdatum)) + 'M' THEN BEGIN
                          VALIDATE(Laufzeit,FORMAT(TOPAS_API.CalculateTimeDiff('M',WORKDATE,v_ablaufdatum)) + 'M');
                          MODIFY(TRUE);
                        END;
                      END;
                    END;
                  END;

                  EVALUATE(v_laufzeit,COPYSTR(Laufzeit,1,STRPOS(Laufzeit,'M')-1));
                  single_service_dc_new    := Gen_Service_DC("SUP Artikelnr.","Ger„te Artikelnr.",v_laufzeit,FALSE,SalesLine.Einkaufsw„hrungscode,"Quotenr.");
                  single_service_price_new := Gen_Service_VK("SUP Artikelnr.","Ger„te Artikelnr.",v_laufzeit,"Belegnr.","Belegzeilennr.",
                                              Fremderwerb,Basisger„t,FALSE,"Rabatt/Marge",SalesLine.Einkaufsw„hrungscode,SalesLine.Einkaufsw„hrungsfaktor,SalesLine."Currency Code");

                  // Service Kalkulation wird neu berechnet
                  total_service_dc_new := total_service_dc_new + (single_service_dc_new * "Menge kalk.");
                  total_service_price_new := total_service_price_new + (single_service_price_new * "Menge kalk.");
                  "Service DC einzeln" := single_service_dc_new;
                  "Service DC Gesamt" := single_service_dc_new * "Menge kalk.";
                  "Service VK-Preis einzeln" := single_service_price_new;
                  "Service VK-Preis Zeilenbetrag" := single_service_price_new * "Menge kalk.";
                  "Service W„hrungsfaktor" := ek_w„h_faktor;
                  MODIFY;
                END;

              UNTIL ServRelaDoc.NEXT = 0;

            //***************************************************************************************************************
            // Vergleicht Gesamt VK-Preis aus Kalkulation und Beleg VK-Preis, fhrt bei Abweichung eine Aktualisierung durch
            //***************************************************************************************************************

            total_service_price_new := ROUND(total_service_price_new,1);
            IF (total_service_price_new <> 0) AND (Artikel."Software Upgrade Protection" = TRUE) THEN BEGIN
              IF total_service_dc_new <> 0 THEN
                SalesLine.VALIDATE("DC-Preis (EKW)", total_service_dc_new);
              SalesLine.VALIDATE(SalesLine."Unit Price",total_service_price_new);
              SalesLine.MODIFY;

              Window.OPEN('#1################################\\'+
                          'Fortschritt @2@@@@@@@@');
              Window.UPDATE(1,'Der Service VK-Preis wird neu errechnet...');
              Window.UPDATE(2,9999);
              Window.CLOSE;
            END;
          END;
        UNTIL SalesLine.NEXT = 0;
      END;
    END;

    BEGIN
    END.
  }
}

