OBJECT Codeunit 50010 TOPAS Lager Management
{
  OBJECT-PROPERTIES
  {
    Date=21.02.18;
    Time=15:58:40;
    Modified=Yes;
    Version List=TOPAS;
  }
  PROPERTIES
  {
    OnRun=BEGIN
          END;

  }
  CODE
  {
    VAR
      Text100@1000000002 : TextConst 'DEU=Bitte passen Sie die Verpackungsmenge von Artikelnr. %1 an, damit die šbertragung der Label Daten korrekt ausgefhrt werden kann.';
      Text110@1000000000 : TextConst 'DEU=Unbekanntes Datecode Format %1 in Belegnr. %2 entdeckt. Sowohl das Herstellungsdatum als auch das Ablaufdatum konnten nicht gefllt werden. Bitte informieren Sie die IT oder fllen Sie Felder manuell in der Tabelle Label Daten.';

    PROCEDURE Label_Daten_start@1140002(lieferscheinnr@1140000 : Code[20];zeilennr@1140002 : Integer);
    VAR
      Packkontrolle@1140001 : Record 50038;
    BEGIN
      //TOPAS 09.10.12 ST - MAT Label Erstellung
      IF lieferscheinnr = '' THEN BEGIN
        Packkontrolle.RESET;
        Packkontrolle.FINDFIRST;
          REPEAT
            Label_Daten_fllen(Packkontrolle."Lieferschein Nr.",Packkontrolle."Lieferschein Zeilennr.");
          UNTIL Packkontrolle.NEXT = 0;
      END ELSE BEGIN
        Label_Daten_fllen(lieferscheinnr,zeilennr);
      END;
    END;

    PROCEDURE Label_Daten_fllen@1140000(lieferscheinnr@1140031 : Code[20];zeilennr@1140032 : Integer);
    VAR
      AP@1140002 : Record 32;
      LSH@1140000 : Record 110;
      LSZ@1140001 : Record 111;
      Artikel@1140005 : Record 27;
      Debitor@1140016 : Record 18;
      Kreditor@1140007 : Record 23;
      Packkontrolle@1140030 : Record 50038;
      Referenzen@1140006 : Record 5717;
      Label@1140003 : Record 50030;
      CountryRegion@1000000001 : Record 9;
      DD@1140008 : Code[2];
      MM@1140009 : Code[2];
      MM_int@1140034 : Integer;
      YYYY@1140010 : Code[4];
      YYYY_int@1140036 : Integer;
      chargendatum@1140015 : Date;
      ablaufdatum@1140014 : Date;
      ls_nr@1140017 : Code[20];
      lfd_nr@1140004 : Integer;
      paket_id@1140013 : Integer;
      neue_daten_gefunden@1140012 : Boolean;
      neue_daten_eingespielt@1140021 : Boolean;
      achtung_bleihaltig@1140029 : Boolean;
      ls_achtung_bleihaltig@1140028 : Code[20];
      letzte_artikelnr@1140022 : Code[20];
      letzte_zeilennr@1140023 : Integer;
      letzte_charge@1140024 : Code[20];
      letzte_artposten@1140025 : Integer;
      letzte_zeilenmenge@1140026 : Decimal;
      letzte_chargenmenge@1140027 : Decimal;
      kleinste_umverpackung@1140033 : Decimal;
      package_string@1140011 : ARRAY [3] OF Code[13];
      splitte@1140019 : Integer;
      rest_splittmenge@1140020 : Integer;
      i@1140018 : Integer;
      k@1000000000 : Integer;
      neues_datum@1140035 : Date;
      prfsumme@1140037 : Text[1024];
    BEGIN
      //**************************************************************************************************
      //           09.08.11 ST - Zusatzfunktion zum fllen spezifischer Kunden Label Daten
      //**************************************************************************************************

      neue_daten_gefunden := FALSE;
      neue_daten_eingespielt := FALSE;
      achtung_bleihaltig := FALSE;
      ls_achtung_bleihaltig := '';
      ls_nr := '';
      letzte_artikelnr := '';
      letzte_charge := '';
      letzte_artposten := 0;
      letzte_zeilennr := 0;
      letzte_zeilenmenge := 0;
      letzte_chargenmenge := 0;

      AP.RESET;
      AP.SETFILTER("Entry Type",'%1',AP."Entry Type"::Sale);
      AP.SETFILTER("Document Type",'%1',AP."Document Type"::"Sales Shipment");
      //neu
      AP.SETFILTER("Document No.",'%1',lieferscheinnr);
      IF zeilennr <> 0 THEN
        AP.SETFILTER("Document Line No.",'%1',zeilennr);
      //**************************************************************************************************
      //   Im Moment nur Siemens Erlangen 91056, ff. sind auch feste Werte nur fr Siemens realisiert
      //         Bitte bei mehreren Debitoren darauf achten und Programm entsprechend anpassen
      //**************************************************************************************************
      //alt
      //AP.SETFILTER("Source No.",'%1|%2','718740','715250');
      //AP.SETFILTER("Item No.",'%1|%2|%3','TG110-E050N5RL-TR-S','TG110-SMN5N5RL-TR','TGM-380NA-TR');
      //AP.SETFILTER("Posting Date",'>=%1',WORKDATE-7); //Es wird eine Woche vorgehalten
      IF AP.FINDFIRST THEN BEGIN
        lfd_nr := 1;

        REPEAT
          Debitor.GET(AP."Source No.");
          Artikel.GET(AP."Item No.");
          IF (((AP."Source No." = '718740') OR (AP."Source No." = '715250') OR (AP."Source No." = '912880')
          AND ((AP."Item No." = 'TG110-E050N5RL-TR-S') OR (AP."Item No." = 'TG110-SMN5N5RL-TR')
          OR (AP."Item No." = 'TGM-380NA-TR') OR (AP."Item No." = 'TG110-E050N5LF-TR')
          OR (AP."Item No." = 'IP175C LF') OR (AP."Item No." = 'IP175CH LF'))))
          OR (Debitor."MAT Label Spezifikation" = TRUE) THEN BEGIN
          //neu vorbergehend bis Wolfson Probleme beseitigt sind mit dem Datum und MS-Level eingespielt sind
          //AND (Artikel."Manufacturer Code" <>'68')) THEN
            Label.RESET;
            //Label.SETFILTER("Lfd.-Nr.",'%1',AP."Document No." + FORMAT(AP."Document Line No.") + FORMAT(AP."Entry No.")
            //                + FORMAT(lfd_nr));
            Label.SETRANGE("Belegnr.",AP."Document No.");
            Label.SETRANGE("Item Ledger Entry No.",AP."Entry No.");
            IF NOT Label.FINDFIRST THEN BEGIN
              neue_daten_gefunden := TRUE;

              //Artikel.GET(AP."Item No.");
              IF Artikel.Verpackungsmenge = 0 THEN
                ERROR(Text100,Artikel."No.");

              IF ls_nr <> AP."Document No." THEN BEGIN
                lfd_nr := 101;
                paket_id := 1;
                rest_splittmenge := 0;
              END;

              //**************************************************************************************************
              //                            Berechnung, wie oft gesplittet werden muss
              //**************************************************************************************************

              LSZ.RESET;
              LSZ.SETFILTER(LSZ."Document No.",'%1',AP."Document No.");
              LSZ.SETFILTER(LSZ."Line No.",'%1',AP."Document Line No.");
              LSZ.FINDFIRST;

              //neu
              kleinste_umverpackung := 0;
              CASE LSZ.Verpackungstyp OF
                LSZ.Verpackungstyp::" " :
                  BEGIN
                    IF ((AP."Item No." = 'TG110-E050N5RL-TR-S') OR (AP."Item No." = 'TG110-SMN5N5RL-TR') OR
                        (AP."Item No." = 'TGM-380NA-TR') OR (AP."Item No." = 'TG110-E050N5LF-TR')) OR
                        ((Artikel.Verpackungsmenge <> 0) AND (LSZ.Umverpackungsmenge = 0)) THEN
                          kleinste_umverpackung := Artikel.Verpackungsmenge
                      ELSE
                        kleinste_umverpackung := LSZ.Quantity;
                  END;
                LSZ.Verpackungstyp::Rolle: kleinste_umverpackung := Artikel.Verpackungsmenge;
                LSZ.Verpackungstyp::Stange,LSZ.Verpackungstyp::DP: kleinste_umverpackung := LSZ.Umverpackungsmenge;
              END;

              IF (AP.Quantity * (-1)) MOD kleinste_umverpackung = 0 THEN BEGIN
                splitte := AP.Quantity * (-1) / kleinste_umverpackung;
              END ELSE BEGIN
                IF LSZ.Quantity MOD kleinste_umverpackung <> 0 THEN BEGIN
                  splitte := ROUND(AP.Quantity * (-1) / kleinste_umverpackung,1,'>');
                  rest_splittmenge := (AP.Quantity * (-1)) - (ROUND(AP.Quantity * (-1) / kleinste_umverpackung,1,'<')
                                      * (kleinste_umverpackung));
                END ELSE BEGIN
                  splitte := 1;
                END;
              END;

              FOR i:= 1 TO splitte DO BEGIN
                Label.INIT;
                Label."Lfd.-Nr." := AP."Document No." + FORMAT(AP."Document Line No.") + FORMAT(AP."Entry No.")
                                    + FORMAT(lfd_nr);

                //**************************************************************************************************
                //                                       Wichtige Belegdaten
                //**************************************************************************************************

                Label."Belegnr." := AP."Document No.";
                Label."Belegzeilennr." := AP."Document Line No.";
                Label.Art := Label.Art::Lieferung;
                Label."Item Ledger Entry No." := AP."Entry No.";

                //**************************************************************************************************
                //                                         Label Version - 12S
                //**************************************************************************************************

                Label."Label Version" := '0002';

                //**************************************************************************************************
                //                                       Debitor Artikelnr. - P
                //**************************************************************************************************

                IF AP."Cross-Reference No." <> '' THEN
                  Label."Customer Part Number" := AP."Cross-Reference No."
                ELSE BEGIN
                  Referenzen.RESET;
                  Referenzen.SETFILTER(Referenzen."Cross-Reference Type No.",'%1',AP."Source No.");
                  Referenzen.SETFILTER("Item No.",'%1',AP."Item No.");
                  IF Referenzen.FINDFIRST THEN
                    Label."Customer Part Number" := Referenzen."Cross-Reference No.";
                END;

                //**************************************************************************************************
                //                                Bauteilbezeichnung des Herstellers - 1P
                //**************************************************************************************************

                Label."Manufacturer Part Number" := AP."Item No.";
                Label."Ordering Code" := AP."Item No.";

                //**************************************************************************************************
                //                                       Artikelbeschreibung
                //**************************************************************************************************

                Label."Part Description" := Artikel.Description;

                //**************************************************************************************************
                //                                       Bleifrei oder nicht -30P
                //**************************************************************************************************

                IF Artikel."Lead Free" = TRUE THEN
                  Label.RoHS := 'Y'
                ELSE BEGIN
                  Label.RoHS := 'N';
                  achtung_bleihaltig := TRUE;
                  ls_achtung_bleihaltig := AP."Document No.";
                END;

                //**************************************************************************************************
                //                          Herstellernr. oder Herstellername beim Kunden
                //                  200001506 ist die Herstellernr. fr HALO von Siemens 718740,
                //                      fr weitere Firmen entsprechende Abfragen einbauen
                //                                  Manufacturer Number - 12V
                //                                  Revision Level / Index - 2P
                //                                  Additional Part Information - 20P
                //**************************************************************************************************

                IF ((AP."Source No." = '718740') OR (AP."Source No." = '715250')) AND
                (Artikel."Manufacturer Code" = '78') THEN
                  Label."Manufacturer Number" := '200001506';
                IF (AP."Source No." = '912880') AND (Artikel."Manufacturer Code" = '30') THEN
                  Label."Manufacturer Number" := '657593443';

                //Label."Revision Level" := ;
                //Label."Additional Part Information" := ;

                //**************************************************************************************************
                //     MS-Level kann als Eingabefeld im Wasp Labeler, da es dieses Feld nicht im Artikelstamm
                //                       gibt bzw. man gibt es fest vor, fr HALO immer 1 - Z
                //**************************************************************************************************

                //IC Plus
                IF Artikel."Manufacturer Code" = '30' THEN
                  Label."MS-Level" := '3';
                //Wolfson
                IF Artikel."Manufacturer Code" = '69' THEN
                  Label."MS-Level" := Artikel."MS-Level";
                //Halo
                IF Artikel."Manufacturer Code" = '78' THEN
                  Label."MS-Level" := '1';
                //Ricoh
                IF Artikel."Manufacturer Code" = '40' THEN
                  Label."MS-Level" := '1';

                //wenn immer noch leer, dann N (laut MAT-Label Spezifikation 2.6 so OK)
                IF Label."MS-Level" = '' THEN
                  Label."MS-Level" := 'N';

                //**************************************************************************************************
                //                                      Ort der Herstellung - 10V
                //                         nach https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3
                //**************************************************************************************************

                IF CountryRegion.GET(AP.Ursprungsland) THEN
                  IF (CountryRegion."ISO 3166-1" <> '') AND (STRLEN(CountryRegion."ISO 3166-1") = 3) THEN
                    Label."Manufacturer Location" := CountryRegion."ISO 3166-1" + '-' + CountryRegion."ISO 3166-1"
                  ELSE
                    Label."Manufacturer Location" := '';

                IF Artikel."Manufacturer Code" = '78' THEN
                  Label."Manufacturer Location" := 'CHN-HONGKONG';

                //**************************************************************************************************
                //                                 Herstellungs- und Ablaufdatum
                //                                   Date of Manufacturing - 6D
                //                                   Expiration Date - 14D
                //**************************************************************************************************

                DD := '';
                MM := '';
                MM_int := 0;
                YYYY := '';
                YYYY_int := 0;
                ablaufdatum := 0D;
                chargendatum := 0D;

                // Wolfson specific manufacturing code convention is: YMTTMMM
                //Y = Year - Last digit of year, M = Month - Jan = 1...Sept = 9, Oct = A, Nov = B, Dec = C
                //TT = Lot Trace Code. AA to ZZ,starts with AA,MMM=Unique code of Wafer Fab, Die Version,Assembly Site

                IF ((STRLEN(AP."Lot No.") = 7) OR (STRLEN(AP."Lot No.") = 15))
                AND (STRLEN(AP."Lot No.") > STRLEN(DELCHR(AP."Lot No.",'=','ABCDEFGHIJKLMNOPQRSTUVWXYZ'))) THEN BEGIN
                  CASE COPYSTR(AP."Lot No.",2,1) OF
                    'A': MM_int := 10;
                    'B': MM_int := 11;
                    'C': MM_int := 12;
                    '1'..'9': EVALUATE(MM_int,COPYSTR(AP."Lot No.",2,1));
                  END;
                  YYYY_int :=  DATE2DMY(TODAY,3);
                  EVALUATE(YYYY_int,COPYSTR(FORMAT(DATE2DMY(TODAY,3)),1,3)+ COPYSTR(AP."Lot No.",1,1));
                  IF COPYSTR(AP."Lot No.",1,1) > COPYSTR(FORMAT(DATE2DMY(TODAY,3)),4,1) THEN
                    YYYY_int -= 10;
                  chargendatum := DMY2DATE(1,MM_int,YYYY_int);
                  chargendatum := CALCDATE('<WD1>',chargendatum);
                END;

                // šbliches Datum anstelle von Datecode z.B. Ricoh
                IF (STRLEN(AP."Lot No.") = 8) AND (STRLEN(DELCHR(AP."Lot No.",'=','.')) = 6) THEN
                  EVALUATE(chargendatum,AP."Lot No.");

                // Normale Date Code Betrachtung

                // 2 Datecodes in einem, die in der Regel durch ein '/' getrennt sind, Verwendung des 1. Datecodes
                IF (STRLEN(AP."Lot No.") > 4)
                AND (STRLEN(AP."Lot No.") = (STRLEN(DELCHR(AP."Lot No.",'=','ABCDEFGHIJKLMNOPQRSTUVWXYZ'))))
                AND (STRLEN(AP."Lot No.") <> (STRLEN(DELCHR(AP."Lot No.",'=','/'))))
                AND (STRPOS(AP."Lot No.",'/') > 4) THEN
                  EVALUATE(chargendatum,'M' + COPYSTR(AP."Lot No.",3,2) + COPYSTR(AP."Lot No.",1,2));

                // Fr fehlerhaften Eingaben mit dem M + vierstelligen Datecode(z.B Datecode mit Ablaufdatum verwechselt)
                IF (STRLEN(AP."Lot No.") = 5) AND (STRLEN(DELCHR(COPYSTR(AP."Lot No.",1,1),
                '=','ABCDEFGHIJKLMNOPQRSTUVWXYZ')) = 0) THEN
                  EVALUATE(chargendatum,'M' + COPYSTR(AP."Lot No.",4,2) + COPYSTR(AP."Lot No.",2,2));

                // šblicher, 4 stelliger Datecode
                IF STRLEN(AP."Lot No.") = 4 THEN
                  EVALUATE(chargendatum,'M'+COPYSTR(AP."Lot No.",3,2) + COPYSTR(AP."Lot No.",1,2));

                // Umsetzung der Variablen in das geforderte Date of Manufacturing
                IF chargendatum <> 0D THEN BEGIN
                  DD := COPYSTR(FORMAT(chargendatum),1,2);
                  MM := COPYSTR(FORMAT(chargendatum),4,2);
                  YYYY := '20' + COPYSTR(FORMAT(chargendatum),7,2);
                  Label."Date of Manufacturing" := YYYY + MM + DD;

                  // Umsetzung des Ablaufdatums
                  IF Label."Date of Manufacturing" <> '' THEN BEGIN
                    ablaufdatum := CALCDATE('2J',chargendatum);
                    DD := COPYSTR(FORMAT(ablaufdatum),1,2);
                    MM := COPYSTR(FORMAT(ablaufdatum),4,2);
                    YYYY := '20' + COPYSTR(FORMAT(ablaufdatum),7,2);
                    Label."Expiration Date" := YYYY + MM + DD;
                  END;
                END ELSE
                  MESSAGE(Text110,AP."Lot No.",AP."Document No.");

                //**************************************************************************************************
                //                                         Lieferscheinnr. - 16K
                //**************************************************************************************************

                Label."Shipping Note Number" := AP."Document No.";

                //**************************************************************************************************
                //                       Kundendaten z.B. Externe Belegnr., Unsere Kundennr. - V
                //**************************************************************************************************

                LSH.RESET;
                LSH.SETFILTER("No.",'%1',AP."Document No.");
                IF LSH.FINDFIRST THEN BEGIN
                  Label."Purchase Order Number" := LSH."External Document No.";
                END;

                Label."Supplier Name" := 'TOPAS electronic GmbH';
                Debitor.GET(AP."Source No.");
                Label."Supplier-ID" := Debitor."Our Account No.";

                //**************************************************************************************************
                //  Package ID muss mit 'S' beginnen und genau 13 Stellen lang sein
                //  Nach dem S folgt die LS-Nr. ohne das 'LS' + Zeilennr. (6 stellig), wenn Zeilennr. 5 stellig
                //  schreibe eine 0 davor + am Ende folgt eine fortlaufende Nr.
                //  Sollte die fortlaufende Nr. 2 stellig werden, schneide von der 6 stelligen Zeilennr. die letzte
                //  Zahl weg, in der Regel ist dies eine 0
                //  Package-ID - 3S
                //**************************************************************************************************

                package_string[1] := DELCHR(AP."Document No.",'<','LS');
                package_string[2] := FORMAT(AP."Document Line No.");
                package_string[3] := FORMAT(paket_id);
                IF STRLEN(package_string[1] + package_string[2] + package_string[3]) < 13 THEN
                  FOR k := 1 TO (13 - STRLEN(package_string[1] + package_string[2] + package_string[3])) DO
                    package_string[2] := '0' + package_string[2];
                IF STRLEN(package_string[3]) > 1 THEN BEGIN
                  package_string[2] := COPYSTR(package_string[2],1,STRLEN(package_string[2])
                                        -STRLEN(package_string[3])+1);
                END;
                IF STRLEN(package_string[1] + package_string[2] + package_string[3]) > 12 THEN
                  FOR k := 1 TO (STRLEN(package_string[1] + package_string[2] + package_string[3]) - 12) DO
                    package_string[2] := DELCHR(package_string[2],'<','0');

                Label."Package-ID" := 'S' + package_string[1] + package_string[2] + package_string[3];

                IF STRLEN(Label."Package-ID") <> 13 THEN
                  MESSAGE('Fehler in der Berechnung der Package-ID fr Lieferung %1, Zeile %2, Datecode %3.\'+
                          'Fehlercode: L„nge Package-ID <> 13\\Package-ID: %4',AP."Document No.",
                          AP."Document Line No.",AP."Lot No.",Label."Package-ID");

                //**************************************************************************************************
                //                     Stk.zahl + 'NAR000', fr Barcode und Andruck Feld Menge - Q
                //**************************************************************************************************

                IF rest_splittmenge = 0 THEN BEGIN
                  Label.Quantity := DELCHR(FORMAT((AP.Quantity * (-1))/splitte),'=','.') + 'NAR000';
                  Label."Quantity Label" := FORMAT((AP.Quantity * (-1))/splitte);
                END ELSE BEGIN
                  IF i <> splitte THEN BEGIN
                    Label.Quantity := FORMAT((((AP.Quantity * (-1))-rest_splittmenge))/(splitte-1)) + 'NAR000';
                    Label."Quantity Label" := FORMAT((((AP.Quantity * (-1))-rest_splittmenge))/(splitte-1));
                  END ELSE BEGIN
                    Label.Quantity := FORMAT(rest_splittmenge) + 'NAR000';
                    Label."Quantity Label" := FORMAT(rest_splittmenge);
                  END;
                END;

                //**************************************************************************************************
                //                 Wenn eine Charge aus 2 DC's besteht dann 2 , ansonsten 1, max.2
                //                                       Batch-Counter - 20T
                //                                       Batch-No. #1 - 1T
                //                                       Batch-No. #2 - 2T
                //**************************************************************************************************

                IF STRPOS(AP."Lot No.",'/') = 0 THEN BEGIN
                  Label."Batch-Counter" := 1;
                  Label."Batch-No.#1" := AP."Lot No.";
                  Label."Batch-No.#2" := '';
                END ELSE BEGIN
                    //**************************************************************************************************
                    //In Batch-No.#2 muss vor der 2 immer ein Leerzeichen stehen oder das Feld generell in
                    //alphanumerisch wandeln (z.B. ein . oder # vor Lot. No.), damit das Label Programm den
                    //Datamatrix Code richtig darstellen kann Batch-No.#1 muss immer numerisch sein, ansonsten
                    //wenn Batch-No.#2 leer ist, kann der Datamatrix Code auch nicht mehr richtig gelesen werden
                    //**************************************************************************************************

                  Label."Batch-Counter" := 2;
                  Label."Batch-No.#1" := COPYSTR(AP."Lot No.",1,STRPOS(AP."Lot No.",'/')-1);
                  IF STRLEN(COPYSTR(AP."Lot No.",STRPOS(AP."Lot No.",'/')+1)) = 4 THEN
                    Label."Batch-No.#2" := COPYSTR(AP."Lot No.",STRPOS(AP."Lot No.",'/')+1)
                  ELSE BEGIN
                      // 2 Zeichen vor und nach dem Trennstrich werden zu einem Datecode zusammengebaut bzw. aufbereitet
                    IF  (STRLEN(COPYSTR(AP."Lot No.",STRPOS(AP."Lot No.",'/')+1)) = 2)
                    AND (STRLEN(COPYSTR(AP."Lot No.",1,STRPOS(AP."Lot No.",'/')-1)) = 4) THEN
                      Label."Batch-No.#2" := COPYSTR(AP."Lot No.",1,2) + COPYSTR(AP."Lot No.",
                                              STRPOS(AP."Lot No.",'/')+1)
                    ELSE BEGIN
                      // Wolfson Format
                      IF  (STRLEN(COPYSTR(AP."Lot No.",STRPOS(AP."Lot No.",'/')+1)) = 7)
                      AND (STRLEN(COPYSTR(AP."Lot No.",1,STRPOS(AP."Lot No.",'/')-1)) = 7) THEN
                        Label."Batch-No.#2" := COPYSTR(AP."Lot No.",STRPOS(AP."Lot No.",'/')+1);
                    END;
                  END;
                END;

                //**************************************************************************************************
                //                                     Datecode bzw. Chargennr.
                //**************************************************************************************************

                Label."Lot. No." := AP."Lot No.";

                //**************************************************************************************************
                //                                    Prfsumme wegen WaspLabeler Bug
                //**************************************************************************************************

                //Problem beim Auslesen des Datamatrix Codes durch Wasp Labeler - ist die Gesamtl„nge des DataMatrix
                //Strings ungerade und von 1 ausgehend in Schrittweite von 4 zutreffend, dann kann der DataMatrix nicht
                //mehr ausgelesen werden, Bsp.: 1, 5, 9 ... 193, 197, 201, 205, 209 ...
                //Wenn die Prfsumme ungerade ist, wird ein zus„tzliches Zeichen in einem kaum benutzten Feld gefllt

                prfsumme := '[)>@06';
                prfsumme += '@12S' + Label."Label Version";
                prfsumme += '@P' + Label."Customer Part Number";
                prfsumme += '@1P' + Label."Manufacturer Part Number";
                prfsumme += '@31P' + Label."Ordering Code";
                prfsumme += '@12V' + Label."Manufacturer Number";
                prfsumme += '@10V' + Label."Manufacturer Location";
                prfsumme += '@2P' + Label."Revision Level";
                prfsumme += '@20P' + Label."Additional Part Information";
                prfsumme += '@6D' + Label."Date of Manufacturing";
                prfsumme += '@14D' + Label."Expiration Date";
                prfsumme += '@30P' + Label.RoHS;
                prfsumme += '@Z' + Label."MS-Level";
                prfsumme += '@K' + Label."Purchase Order Number";
                prfsumme += '@16K' + Label."Shipping Note Number";
                prfsumme += '@V' + Label."Supplier-ID";
                prfsumme += '@3S' + Label."Package-ID";
                prfsumme += '@Q' + Label.Quantity;
                prfsumme += '@20T' + FORMAT(Label."Batch-Counter");
                prfsumme += '@1T' + Label."Batch-No.#1";
                prfsumme += '@2T' + Label."Batch-No.#2";
                prfsumme += '@1Z';
                prfsumme += '@@';

                IF STRLEN(prfsumme) MOD 2 <> 0 THEN
                  Label."Additional Part Information" := Label."Additional Part Information"  + '-';

                //**************************************************************************************************
                //                                    Infofenster
                //**************************************************************************************************

                ls_nr := AP."Document No.";
                lfd_nr += 1;
                paket_id += 1;
                neue_daten_eingespielt := TRUE;
                letzte_artikelnr := AP."Item No.";
                letzte_charge := AP."Lot No.";
                letzte_artposten := AP."Entry No.";
                letzte_zeilennr := AP."Document Line No.";
                letzte_zeilenmenge := LSZ.Quantity;
                letzte_chargenmenge := AP.Quantity * (-1);
                Label.INSERT;
              END;
            END;
          END;
        UNTIL AP.NEXT = 0;

        Label_Daten_Log(ls_nr,letzte_artikelnr,letzte_zeilennr,letzte_charge,letzte_artposten,letzte_zeilenmenge,letzte_chargenmenge,
        splitte,rest_splittmenge,neue_daten_gefunden,neue_daten_eingespielt,achtung_bleihaltig,ls_achtung_bleihaltig);
      END;
    END;

    PROCEDURE Label_Daten_Log@1140003(ls_nr@1140011 : Code[20];l_artikelnr@1140005 : Code[20];l_zeilennr@1140004 : Integer;l_charge@1140003 : Code[20];l_artposten@1140002 : Integer;l_zeilenmenge@1140001 : Decimal;l_chargenmenge@1140000 : Decimal;splitte@1140012 : Decimal;r_splittmenge@1140013 : Decimal;n_daten_gefunden@1140006 : Boolean;n_daten_eingespielt@1140007 : Boolean;achtung_bleihaltig@1140009 : Boolean;ls_achtung_bleihaltig@1140008 : Code[20]);
    VAR
      Artikel@1140010 : Record 27;
    BEGIN
      IF l_artikelnr <> '' THEN
        Artikel.GET(l_artikelnr);
      IF n_daten_gefunden AND n_daten_eingespielt THEN
        MESSAGE('šberprfung beendet und Label Daten erfolgreich bertragen.\\' +
                'Letzte Artikelnr. %1\' +
                'Letzte Chargennr. %2 (Artikelposten %3)\' +
                'Lieferscheinnr.: %4\' +
                'Lieferschein Zeilennr.: %5\' +
                'Menge Zeile: %6\' +
                'Menge letzte Charge: %7\'+
                'VPE: %8\' +
                'Charge insgesamt gesplittet: %9\' +
                'Charge Restmenge ungleich Verpackungsmenge: %10'
                , l_artikelnr, l_charge, l_artposten, ls_nr, l_zeilennr, l_zeilenmenge
                , l_chargenmenge, Artikel.Verpackungsmenge, splitte, r_splittmenge);

      IF achtung_bleihaltig = TRUE THEN
        MESSAGE('Achtung, der Lieferschein %1 enth„lt bleihaltige Ware, bitte benutzen Sie das Label ohne RoHS Logo.',
        ls_achtung_bleihaltig);
    END;

    BEGIN
    END.
  }
}

