OBJECT Codeunit 50000 Importiere Wechselkurse
{
  OBJECT-PROPERTIES
  {
    Date=28.05.24;
    Time=15:15:54;
    Modified=Yes;
    Version List=TOPAS/CE1.00;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            HideMsg := FALSE;

            //Commerzbank Kurse - holt sich die Kurse aus dem Archiv
            IF HideMsg = FALSE THEN
              BEGIN
                selection := STRMENU(Dialog_Datum);
                CASE selection OF
                  0 : EXIT;
                  1 : GetCurrencyExchRateCoba(WORKDATE);
                  2 : GetCurrencyExchRateCoba(TOPAS_Funktionen.CalcNextWorkday(-1,WORKDATE));
                  3 : GetCurrencyExchRateCoba(TOPAS_Funktionen.CalcNextWorkday(-2,WORKDATE));
                END
              END
            ELSE
              GetCurrencyExchRateCoba(WORKDATE);

            //EZB Kurse - die History ist standardm„áig deaktiviert
            //GetCurrencyExchRateXML();
            ////GetCurrencyExchRateHistoryXML();
          END;

  }
  CODE
  {
    VAR
      HideMsg@1000000000 : Boolean;
      selection@1140012 : Integer;
      Excel@1140004 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00024500-0000-0000-C000-000000000046}:Unknown Automation Server.Application";
      Book@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";
      Range@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Sheet@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020820-0000-0000-C000-000000000046}:Unknown Automation Server.Worksheet";
      wshShell@1000000001 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{72C24DD5-D70A-438B-8A42-98424B88AFB8}:'Windows Script Host Object Model'.WshShell";
      wshExec@1000000004 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{08FED191-BE19-11D3-A28B-00104BD35090}:'Windows Script Host Object Model'.WshExec";
      wshFile@1000000002 : Automation "{F935DC20-1CF0-11D0-ADB9-00C04FD58A0B} 1.0:{0D43FE01-F093-11CF-8940-00A0C9054228}:'Windows Script Host Object Model'.FileSystemObject";
      silent@1000000006 : Integer;
      TOPAS_Funktionen@1140000 : Codeunit 50006;
      Text000@1140007 : TextConst 'DEU=W„hrungs Wechselkurse wurden aktualisiert.;ENU=Currency Exchange Rates updated.';
      Text001@1140006 : TextConst 'DEU=<Could not import XML Currency Exchange Rates.>;ENU=Could not import XML Currency Exchange Rates.';
      Text002@1140005 : TextConst 'DEU=<Import Currency Exchange Rates from XML ...\Currency Date #1########\Currency Code #2########\Currency Rate #3########\@4@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@>;ENU=Import Currency Exchange Rates from XML ...\Currency Date #1########\Currency Code #2########\Currency Rate #3########\@4@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text003@1140008 : TextConst 'DEU=Importiere Wechselkurse aus XLS ...\W„hrungsdatum        #1########\W„hrungscode         #2########\W„hrungs Wechselkurs #3########\@4@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@';
      Text004@1140009 : TextConst 'DEU=Programm Abbruch: Die Quell Datei: %1 konnte nicht verarbeitet werden.';
      Text005@1140010 : TextConst 'DEU=Die Datei %1 existiert nicht! Der Import wird abgebrochen.';
      Text006@1140011 : TextConst 'DEU=Es stehen keine Kurse fr das vorgegebene Datum zur Verfgung.';
      Text007@1000000005 : TextConst 'DEU=M”glicher Syntax Fehler in der Excel Datei, es konnte kein Wechselkurs fr %1 bestimmt werden.';
      Dialog_Datum@1140013 : TextConst 'DEU=Heute,Letzter Werktag,Vorletzter Werktag';
      TOPAS_API@1000000003 : Codeunit 50001;

    PROCEDURE HideMessage@1000000000(InHideMsg@1000000000 : Boolean);
    BEGIN
      HideMsg := InHideMsg;
    END;

    PROCEDURE GetCurrencyExchRateCoba@1140000(v_date@1140021 : Date);
    VAR
      Currency@1140019 : Record 4;
      CurrencyExchRate@1140018 : Record 330;
      CurrencyURL@1140017 : Text[250];
      NewCurrencyDate@1140016 : Date;
      NewCurrencyCode@1140015 : Code[10];
      NewCurrencyRate@1140014 : Decimal;
      i@1140013 : Integer;
      Window@1140012 : Dialog;
      Program_GetExchRate@1140011 : Text[250];
      Row_Curr@1140010 : Text[30];
      Row_Date@1140009 : Text[30];
      Column_Curr@1140007 : Text[30];
      Column_Date@1140006 : Text[30];
      Cell_Text_Tagesdatum@1140020 : Text[30];
      _aCurrency@1140005 : ARRAY [10] OF Code[10];
      CurrCount@1140004 : Integer;
      ExchCurrRate@1140008 : Decimal;
      chr@1140003 : Char;
      body@1140002 : ARRAY [2] OF Text[1024];
      ExchCurrRateText@1140001 : Text[1024];
      subject@1140000 : Text[80];
      Column_Curr_Kurs@1000000000 : Text[30];
    BEGIN
      //Info:

      body[1] := '';
      body[2] := '';
      chr := 10;

      CREATE(wshShell,FALSE,TRUE);
      CREATE(wshFile,FALSE,TRUE);

      //CurrencyURL := ENVIRON('TEMP') + '\coba_rates_DE.xls'; //ENVIRON Methode ist im RTC veraltet
      CurrencyURL := wshShell.ExpandEnvironmentStrings('%TEMP%') + '\coba_rates.xls';
      NewCurrencyDate := TOPAS_Funktionen.CalcNextWorkday(+1,v_date);
      //Fr Testzwecke
      //NewCurrencyDate := 030816D;

      Window.OPEN(Text003);
      Window.UPDATE(1, NewCurrencyDate);

      IF wshFile.FileExists(CurrencyURL) THEN wshFile.DeleteFile(CurrencyURL);
      //Program_GetExchRate := 'D:\Wechselkurse_holen.Exe';
      //Program_GetExchRate := '"H:\software\TOPAS eigen\Wechselkurse\Wechselkurse_holen.Exe"';
      //wshShell.Run('cmd /c "\\WIN-FILESRV\Software\software\TOPAS eigen\Wechselkurse\chromedriver.exe"');
      Program_GetExchRate := '"\\WIN-FILESRV\Software\software\TOPAS eigen\Wechselkurse\coba_demo.Exe"';
      //SHELL(Program_GetExchRate); //SHELL Methode ist im RTC veraltet
      silent := 0;
      wshShell.Run('cmd /c ' + Program_GetExchRate, silent);

      //YIELD; //YIELD Methode ist im RTC veraltet
      i := 0;
      REPEAT
        i += 1;
        SLEEP(1000);
        IF i = 60 THEN
          ERROR(Text004,CurrencyURL);
      UNTIL wshFile.FileExists(CurrencyURL);

      IF NOT wshFile.FileExists(CurrencyURL) THEN
        ERROR(Text005,CurrencyURL);

      IF CREATE(Excel,FALSE,TRUE) THEN BEGIN END ELSE ERROR('Cannot start Excel Application.');
      Book := Excel.Workbooks._Open(CurrencyURL,0,FALSE);
      Sheet := Book.Worksheets.Item(1);

      IF Currency.FINDFIRST THEN BEGIN
        FOR CurrCount:= 1 TO Currency.COUNT DO BEGIN
          _aCurrency[CurrCount] := Currency.Code;
          Currency.NEXT;
        END;
      END;

      Cell_Text_Tagesdatum := FindRow('Tagesdatum','Cell','A','Z');

      IF FindRow(FORMAT(TOPAS_Funktionen.CalcNextWorkday(-1,NewCurrencyDate),0,'<Day,2>.<Month,2>.<Year4>'),'Row','A','Z') <> '' THEN BEGIN

        COMPRESSARRAY(_aCurrency);
        FOR i := 1 TO CurrCount DO BEGIN

          Row_Date := FindRow_new(FORMAT(TOPAS_Funktionen.CalcNextWorkday(-1,NewCurrencyDate),0,'<Day,2>.<Month,2>.<Year4>'),'Row','A','Z');
          Column_Date := FindRow(FORMAT(TOPAS_Funktionen.CalcNextWorkday(-1,NewCurrencyDate),0,'<Day,2>.<Month,2>.<Year4>'),
                        'Column','A','Z');
          Column_Curr := FindRow(_aCurrency[i],'Column','A','Z');
          Row_Curr  := FindRow(_aCurrency[i],'Row','A','Z');

          NewCurrencyCode := _aCurrency[i];
          Window.UPDATE(1, NewCurrencyDate);
          Window.UPDATE(2, NewCurrencyCode);
          Column_Curr_Kurs := FindRow_new('Geld','Column',Column_Curr,'Z');
          IF FORMAT(Excel.Range(Column_Curr_Kurs + INCSTR(Row_Curr)).Value) = 'Geld' THEN
            ExchCurrRate := Excel.Range(Column_Curr_Kurs + Row_Date).Value;
          Currency.GET(NewCurrencyCode);
          EVALUATE(NewCurrencyRate, CONVERTSTR(FORMAT(ExchCurrRate,0,'<Precision,' + Currency."Unit-Amount Decimal Places" +
                    '><Integer><Decimal>'), '.', ','));
          Window.UPDATE(3, NewCurrencyRate);

          // Insert new Currency Exchange Rate
          IF NewCurrencyRate = 0 THEN BEGIN
            Book.Close;
            CLEAR(Book);
            ERROR(Text007,NewCurrencyCode);
          END;

          IF Currency.GET(NewCurrencyCode) THEN BEGIN
            IF NOT CurrencyExchRate.RECORDLEVELLOCKING THEN
              CurrencyExchRate.LOCKTABLE(TRUE);
            CurrencyExchRate.INIT;
            CurrencyExchRate."Starting Date" := NewCurrencyDate;
            CurrencyExchRate."Currency Code" := NewCurrencyCode;
            CurrencyExchRate."Relational Currency Code" := '';
            CurrencyExchRate.VALIDATE("Exchange Rate Amount",NewCurrencyRate);
            CurrencyExchRate."Relational Exch. Rate Amount" := 1;
            CurrencyExchRate."Adjustment Exch. Rate Amount" := 1;
            CurrencyExchRate."Relational Adjmt Exch Rate Amt" := 1;
            CurrencyExchRate."Fix Exchange Rate Amount" := CurrencyExchRate."Fix Exchange Rate Amount"::"Relational Currency";
            IF NOT CurrencyExchRate.INSERT(TRUE) THEN;
            ExchCurrRateText += 'EUR / ' + NewCurrencyCode + ' : ' + FORMAT(CurrencyExchRate."Exchange Rate Amount") + FORMAT(chr);
          END;

          Window.UPDATE(4, ROUND(10000 /CurrCount * i, 1));
          SLEEP(500);

        END;

        IF NOT HideMsg THEN
          MESSAGE(Text000);

        subject := 'Kurse ' + FORMAT(NewCurrencyDate,0,'<Day,2>.<Month,2>.<Year4>');
        body[1] := 'Hallo,' + FORMAT(chr) +
                    'hier die aktuellen Kurse:' + FORMAT(chr) + FORMAT(chr) +
                    ExchCurrRateText + FORMAT(chr) +
                    'Mit freundlichen Gráen,' + FORMAT(chr) + TOPAS_API.GetGWUserID(1);
        TOPAS_API.NewMail('','','',subject,body[1]+body[2],'','');

      END ELSE
        IF NOT HideMsg THEN
          MESSAGE(Text006);

      Window.CLOSE;

      Book.Close;
      CLEAR(Book);
      SLEEP(100);

      IF ISCLEAR(Book) = TRUE THEN
        wshFile.DeleteFile(CurrencyURL);

      CLEAR(wshFile);
      CLEAR(wshShell);
    END;

    PROCEDURE FindRow@1140013(What@1140000 : Text[80];Art@1140001 : Text[30];Col1@1140006 : Text[30];Col2@1140008 : Text[30]) : Text[30];
    VAR
      Range1@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Cell@1140003 : Code[40];
      vorherige_zeile@1140004 : Integer;
      naechste_zeile@1140005 : Integer;
      i@1140007 : Integer;
    BEGIN
      WITH Sheet.Range(Col1 + ':' + Col2) DO BEGIN
        i := 1;
        Range1 :=
        (Sheet.Columns.Find(
          What));
        // Wird der Suchbegriff nicht gefunden, steigt er sofort aus den Schleifen aus
        IF ISCLEAR(Range1) THEN EXIT('');
        IF FORMAT(Range1.Value) <> What THEN
          Range1 := Sheet.Rows.FindNext(Range1);
        //IF FORMAT(Range1.Value) <> What THEN EXIT('');
        Cell := Range1.Address;
        CASE Art OF
          'Row' : EVALUATE(Cell,FORMAT(TOPAS_API.ConvertStrToNum(Cell)));
          'Column' : EVALUATE(Cell,COPYSTR(Cell,2,STRPOS(COPYSTR(Cell,2),'$')-1));
        END;
        EXIT(Cell);
      END;
    END;

    PROCEDURE FindRow_new@1000000005(What@1140000 : Code[40];Art@1000000002 : Text[30];Col1@1000000001 : Text[30];Col2@1000000000 : Text[30]) : Text[30];
    VAR
      Range1@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.2:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";
      Cell@1140003 : Code[40];
      vorherige_zeile@1140004 : Integer;
      naechste_zeile@1140005 : Integer;
      i@1140007 : Integer;
    BEGIN
      CLEAR(Range1);
      WITH Sheet.Range(Col1 + ':' + Col2) DO BEGIN
        i := 1;
        Range1 :=
        (Sheet.Columns.Find(
          What));
        // Wird der Artikel nicht gefunden, steigt er sofort aus den Schleifen aus
        IF ISCLEAR(Range1) THEN EXIT('');
        Cell := Range1.Address;
        // Schleife notwendig, da die šbergabe der Range nicht richtig funktioniert
        IF (STRPOS(Cell,Col1) = 0) THEN BEGIN
          REPEAT
            Range1 := Sheet.Rows.FindNext(Range1);
            Cell := Range1.Address;
            i += 1;
            IF Col1 < COPYSTR(Cell,2,1) THEN
              i := 10;
          UNTIL (STRPOS(Cell,Col1) = 2) OR (i > 5);
        END ELSE
          IF Col1 = Col2 THEN BEGIN
            // mehr als ein Parameter gibt Probleme bei der Find Methode > HRESULT Fehler, vermutlich
            // liegt es an einer fehlenden Instanz im 2. Parameter, deshalb wird solange gesucht,
            // bis der Suchbegriff auch exakt mit dem Treffer bereinstimmt
            IF (FORMAT(Sheet.Range(Cell).Value) <> What) AND (STRPOS(Cell,Col1) <> 0) THEN
              REPEAT
                Range1 := Sheet.Rows.FindNext(Range1);
                EVALUATE(vorherige_zeile,COPYSTR(Cell,4));
                Cell := Range1.Address;
                EVALUATE(naechste_zeile,COPYSTR(Cell,4));
                IF (vorherige_zeile = naechste_zeile) AND (Col1 = COPYSTR(Cell,STRPOS(Cell,'$')+1,1)) AND (UPPERCASE(FORMAT(Range(Cell).Value)) <> UPPERCASE(What)) THEN
                  EXIT(''); //Abbruch, sonst Endlosschleife wegen unterschiedlicher Gross- und Kleinschreibung
              UNTIL (UPPERCASE(FORMAT(Sheet.Range(Cell).Value)) = UPPERCASE(What));
          END;
          CASE Art OF
          'Row' : EVALUATE(Cell,FORMAT(TOPAS_API.ConvertStrToNum(Cell)));
          'Column' : EVALUATE(Cell,COPYSTR(Cell,2,STRPOS(COPYSTR(Cell,2),'$')-1));
          END;
        EXIT(Cell);
      END;
    END;

    EVENT Sheet@1140001::SelectionChange@1543(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1140001::BeforeDoubleClick@1537(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140001::BeforeRightClick@1534(Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140001::Activate@304();
    BEGIN
    END;

    EVENT Sheet@1140001::Deactivate@1530();
    BEGIN
    END;

    EVENT Sheet@1140001::Calculate@279();
    BEGIN
    END;

    EVENT Sheet@1140001::Change@1545(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1140001::FollowHyperlink@1470(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Sheet@1140001::PivotTableUpdate@2156(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Sheet@1140001::PivotTableAfterValueChange@2886(TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Sheet@1140001::PivotTableBeforeAllocateChange@2889(TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140001::PivotTableBeforeCommitChanges@2892(TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Sheet@1140001::PivotTableBeforeDiscardChanges@2893(TargetPivotTable@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140001 : Integer;ValueChangeEnd@1140000 : Integer);
    BEGIN
    END;

    EVENT Sheet@1140001::PivotTableChangeSync@2894(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140003::Open@1923();
    BEGIN
    END;

    EVENT Book@1140003::Activate@304();
    BEGIN
    END;

    EVENT Book@1140003::Deactivate@1530();
    BEGIN
    END;

    EVENT Book@1140003::BeforeClose@1546(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140003::BeforeSave@1547(SaveAsUI@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140003::BeforePrint@1549(VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140003::NewSheet@1550(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140003::AddinInstall@1552();
    BEGIN
    END;

    EVENT Book@1140003::AddinUninstall@1553();
    BEGIN
    END;

    EVENT Book@1140003::WindowResize@1554(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1140003::WindowActivate@1556(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1140003::WindowDeactivate@1557(Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Book@1140003::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1140003::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140003::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140003::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140003::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140003::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Book@1140003::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Book@1140003::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Book@1140003::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140003::PivotTableOpenConnection@2159(Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Book@1140003::Sync@2266(SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140003::BeforeXmlImport@2283(Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140003::AfterXmlImport@2285(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140003::BeforeXmlExport@2287(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140003::AfterXmlExport@2288(Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140001 : Text[1024];Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Book@1140003::RowsetComplete@2610(Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140003::SheetPivotTableBeforeCommitCha@2897(Sh@1140004 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";ValueChangeStart@1140002 : Integer;ValueChangeEnd@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140003::AfterSave@2900(Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Book@1140003::NewChart@2901(Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart");
    BEGIN
    END;

    EVENT Excel@1140004::NewWorkbook@1565(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140004::SheetSelectionChange@1558(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1140004::SheetBeforeDoubleClick@1559(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140004::SheetBeforeRightClick@1560(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140004::SheetActivate@1561(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140004::SheetDeactivate@1562(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140004::SheetCalculate@1563(Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140004::SheetChange@1564(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookOpen@1567(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookActivate@1568(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookBeforeClose@1570(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookBeforePrint@1572(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookNewSheet@1573(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Sh@1140000 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH");
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookAddinInstall@1574(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookAddinUninstall@1575(Wb@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook");
    BEGIN
    END;

    EVENT Excel@1140004::WindowResize@1554(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1140004::WindowActivate@1556(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1140004::WindowDeactivate@1557(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Wn@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020893-0000-0000-C000-000000000046}:Unknown Automation Server.Window");
    BEGIN
    END;

    EVENT Excel@1140004::SheetFollowHyperlink@1854(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00024431-0000-0000-C000-000000000046}:Unknown Automation Server.Hyperlink");
    BEGIN
    END;

    EVENT Excel@1140004::SheetPivotTableUpdate@2157(Sh@1140001 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookPivotTableCloseConnect@2160(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookPivotTableOpenConnecti@2161(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Target@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable");
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookSync@2289(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";SyncEventType@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookBeforeXmlImport@2290(Wb@1140004 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";Url@1140002 : Text[1024];IsRefresh@1140001 : Boolean;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookAfterXmlImport@2291(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Map@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{0002447B-0000-0000-C000-000000000046}:Unknown Automation Server.XmlMap";IsRefresh@1140001 : Boolean;Result@1140000 : Integer);
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookRowsetComplete@2611(Wb@1140003 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Description@1140002 : Text[1024];Sheet@1140001 : Text[1024];Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140004::AfterCalculate@2612();
    BEGIN
    END;

    EVENT Excel@1140004::SheetPivotTableAfterValueChang@2895(Sh@1140002 : Automation ":{00020400-0000-0000-C000-000000000046}:''.IDISPATCH";TargetPivotTable@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020872-0000-0000-C000-000000000046}:Unknown Automation Server.PivotTable";TargetRange@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020846-0000-0000-C000-000000000046}:Unknown Automation Server.Range");
    BEGIN
    END;

    EVENT Excel@1140004::ProtectedViewWindowOpen@2903(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140004::ProtectedViewWindowBeforeClose@2906(Pvw@1140002 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow";Reason@1140001 : Integer;VAR Cancel@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140004::ProtectedViewWindowActivate@2909(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140004::ProtectedViewWindowDeactivate@2910(Pvw@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{000244CD-0000-0000-C000-000000000046}:Unknown Automation Server.ProtectedViewWindow");
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookAfterSave@2911(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Success@1140000 : Boolean);
    BEGIN
    END;

    EVENT Excel@1140004::WorkbookNewChart@2912(Wb@1140001 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020819-0000-0000-C000-000000000046}:Unknown Automation Server.Workbook";Ch@1140000 : Automation "{00020813-0000-0000-C000-000000000046} 1.7:{00020821-0000-0000-C000-000000000046}:Unknown Automation Server.Chart");
    BEGIN
    END;

    BEGIN
    {
      ********************************
      *** STRYK System Improvement ***
      ***     J”rg A. Stryk        ***
      ***  http://www.stryk.info/  ***
      ********************************

      !!! Errors and omissions excepted, use at own risk, no warranty or guarantee, no support !!!

      Description:

      The "European Central Bank" provides permantently/daily actual "Currency Exchange Rates" in XML format.
      Two files are available:
        eurofxref-daily.xml  : Daily updated Currency Exchange Rates
        eurofxref-hist.xml   : Historic Currency Exchange rates since 1999 until today
      This service is for free. Further information: http://www.ecb.int/stats/eurofxref/
      All Exchange Rates are on base of EUR: 1 EUR = <Currency> <Rate>, e.g. 1 EUR = 1,20 USD

      Functions:

      "OnRun"
      Executes "GetCurrencyExchRateCoba"

      "HideMessage(InHideMessage : Boolean)"
      Switch to deactivate/hide Messages and Errors

      "GetCurrencyExchRateCoba"
      Used to import "coba_rates_DE.xls" from Cmmmerzbank over IE Extension Program "Wechselkurse_holen.exe"
      This function is called in the OnRun Trigger, thus this Codeunit could be used as a "Job" for the "Job Scheduler"

      "GetCurrencyExchRateXML"
      Used to import 'eurofxref-daily.xml'
      This function is called in the OnRun Trigger, thus this Codeunit could be used as a "Job" for the "Job Scheduler"

      "GetCurrencyExchRateHistoryXML"
      Used to import 'eurofxref-hist.xml'
      This function could be called to initialize the Currency Exchange Rates
      Only rates between today and the "ThresholdDate" are imported
      The default value for "ThresholdDate" is 01.01.2005, to be changed if necessary

      Known Issues:
      - Sometimes MS Windows has a problem to load the required libraries in time, so an error will occur
        and the function needs to be called again.

      - When the XML files are requested, it depends on the currently established Internet connection, how fast
        the XML could be retrieved.
        To create a delay between connection and retrieval these code lines are inserted:
        ...
        FOR i := 1 TO 1000 DO
          YIELD;
        ...
        In case of slower Internet connections or DLL-load times it may be feasible to increase the amount of iterations.

      - Within the XML the rates a formatted like this: <Cube currency="USD" rate="1.2100" />, the . (point) as decimal separator.
        Depending on the Windows settings, this point would be interpreted as thousands-separator,
        thus within the functions the . is converted to a , (comma)
        ...
        CONVERTSTR(CurrNode2.text, '.', ',')
        ...
        This may have to be changed depending on the local formats.
    }
    END.
  }
}

