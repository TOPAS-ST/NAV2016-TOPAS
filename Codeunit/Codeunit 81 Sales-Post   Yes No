OBJECT Codeunit 81 Sales-Post (Yes/No)
{
  OBJECT-PROPERTIES
  {
    Date=28.06.18;
    Time=12:00:00;
    Modified=Yes;
    Version List=NAVW19.00.00.50458,TOP1.00;
  }
  PROPERTIES
  {
    TableNo=36;
    OnRun=BEGIN
            IF NOT FIND THEN
              ERROR(NothingToPostErr);

            SalesHeader.COPY(Rec);
            Code;
            Rec := SalesHeader;
          END;

  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'DEU=&Liefern,&Fakturieren,Liefern &und fakturieren;ENU=&Ship,&Invoice,Ship &and Invoice';
      Text001@1001 : TextConst 'DEU=M”chten Sie die %1 buchen?;ENU=Do you want to post the %1?';
      Text002@1002 : TextConst 'DEU=&Liefern,&Fakturieren,Liefern &und fakturieren;ENU=&Receive,&Invoice,Receive &and Invoice';
      SalesHeader@1003 : Record 36;
      Selection@1005 : Integer;
      PreviewMode@1004 : Boolean;
      NothingToPostErr@1006 : TextConst 'DEU=Es gibt nichts zu buchen.;ENU=There is nothing to post.';
      Text50000@1000000000 : TextConst 'DEU=Sie drfen nicht gleichzeitig Liefern & Fakturieren beim Lagerortcode KONSI.';
      Text50001@1000000001 : TextConst 'DEU="Fr Debitor %1 bersteigt die Summe aus \\Saldo (MW)                                     = %2 und \\aktuellem Rechnungsbetrag (MW) = %3 das\\Kreditlimit (MW)                              = %4."';
      "***TOPAS_Var***"@1000000002 : Integer;
      SalesLine@1000000003 : Record 37;
      Cust@1000000005 : Record 18;
      TotalSalesLineLCY@1000000004 : Decimal;

    [TryFunction]
    LOCAL PROCEDURE Code@1();
    VAR
      SalesSetup@1002 : Record 311;
      SalesPostViaJobQueue@1000 : Codeunit 88;
      SalesPost@1001 : Codeunit 80;
    BEGIN
      WITH SalesHeader DO
        IF NOT PreviewMode THEN BEGIN
          CASE "Document Type" OF
            "Document Type"::Order:
              BEGIN
                Selection := STRMENU(Text000,3);
                IF Selection = 0 THEN
                  EXIT;
                Ship := Selection IN [1,3];
                Invoice := Selection IN [2,3];

                //TOPAS 09.09.09 ST - Lagerortcode KONSI nur Liefern oder nur Fakturieren erlauben +
                IF (Selection IN [3,3]) AND (SalesHeader."Location Code" = 'KONSI') THEN
                  ERROR(Text50000);

                // Zusatz Kreditlimitberprfung
                IF (Selection IN [2,3]) OR (Selection IN [3,3]) THEN BEGIN
                  TotalSalesLineLCY := 0;
                  Cust.GET(SalesHeader."Sell-to Customer No.");
                  Cust.CALCFIELDS (Cust."Balance (LCY)");
                  SalesLine.RESET;
                  SalesLine.SETFILTER("Document No.",'%1',SalesHeader."No.");
                  SalesLine.SETFILTER("Qty. to Invoice",'>%1',0);
                  IF SalesLine.FINDFIRST THEN BEGIN
                    REPEAT
                      IF SalesLine."VAT %" = 19 THEN
                        TotalSalesLineLCY := TotalSalesLineLCY + SalesLine."Qty. to Invoice (Base)" * SalesLine."VK-Preis (MW)" * 1.19;
                      IF SalesLine."VAT %"  = 7 THEN
                        TotalSalesLineLCY := TotalSalesLineLCY + SalesLine."Qty. to Invoice (Base)" * SalesLine."VK-Preis (MW)" * 1.07;
                      IF (SalesLine."VAT %" <> 19) AND (SalesLine."VAT %" <> 7) THEN
                        TotalSalesLineLCY := TotalSalesLineLCY + SalesLine."Qty. to Invoice (Base)" * SalesLine."VK-Preis (MW)";
                    UNTIL SalesLine.NEXT = 0;
                  END;
                  IF (Cust."Balance (LCY)" + TotalSalesLineLCY) > Cust."Credit Limit (LCY)" THEN
                    ERROR (Text50001, Cust."No.",Cust."Balance (LCY)", TotalSalesLineLCY,Cust."Credit Limit (LCY)");
                END;
                //TOPAS -
              END;
            "Document Type"::"Return Order":
              BEGIN
                Selection := STRMENU(Text002,3);
                IF Selection = 0 THEN
                  EXIT;
                Receive := Selection IN [1,3];
                Invoice := Selection IN [2,3];
              END
            ELSE
              IF NOT
                 CONFIRM(
                   Text001,FALSE,
                   "Document Type")
              THEN
                EXIT;
          END;
          "Print Posted Documents" := FALSE;

          SalesSetup.GET;
          IF SalesSetup."Post with Job Queue" THEN
            SalesPostViaJobQueue.EnqueueSalesDoc(SalesHeader)
          ELSE
            CODEUNIT.RUN(CODEUNIT::"Sales-Post",SalesHeader);
        END ELSE BEGIN
          CASE "Document Type" OF
            "Document Type"::Order:
              Ship := TRUE;
            "Document Type"::"Return Order":
              Receive := TRUE;
          END;
          Invoice := TRUE;
          SalesPost.SetPreviewMode(TRUE);
          SalesPost.RUN(SalesHeader);
        END;
    END;

    PROCEDURE Preview@2(VAR SalesHdr@1000 : Record 36);
    VAR
      GenJnlPostPreview@1001 : Codeunit 19;
    BEGIN
      GenJnlPostPreview.Start;
      PreviewMode := TRUE;
      SalesHeader.COPY(SalesHdr);
      IF NOT Code THEN BEGIN
        GenJnlPostPreview.Finish;
        IF GETLASTERRORTEXT <> GenJnlPostPreview.GetPreviewModeErrMessage THEN
          ERROR(GETLASTERRORTEXT);
        GenJnlPostPreview.ShowAllEntries;
        ERROR('');
      END;
    END;

    BEGIN
    {
      Lfd.Nr. Version   Datum     User    Beschreibung
      ===========================================================================
      1       TOP1.00   27.03.17  CTMTRE  TOPAS Felder an Artikel-/Fibu Buchblatt; Funktion 'OnAfterPostBeforeCommitSalesDoc'
      2       TOP1.00   03.08.17  ST      TOPAS Buchungs Prfungen hinzugefgt
    }
    END.
  }
}

